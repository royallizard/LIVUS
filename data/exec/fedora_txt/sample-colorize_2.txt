/lib64/ld-linux-x86-64.so.2
libgimpui-2.0.so.0
g_free
gtk_box_get_type
gimp_gradient_get_uniform_samples
gdk_cairo_create
gimp_drawable_detach
gtk_toggle_button_get_active
__gmon_start__
_Jv_RegisterClasses
cairo_destroy
gtk_label_new
gtk_table_get_type
gimp_drawable_get
gtk_widget_destroy
gtk_widget_queue_draw
gimp_drawable_is_indexed
gtk_dialog_get_type
gtk_table_new
gtk_frame_new
_ITM_deregisterTMCloneTable
cairo_paint
gtk_widget_set_sensitive
gtk_frame_set_shadow_type
gtk_container_get_type
_ITM_registerTMCloneTable
gimp_dialog_new
gimp_image_convert_rgb
gimp_drawable_has_alpha
gtk_window_get_type
gimp_image_get_selection
gtk_box_new
gtk_dialog_get_content_area
gimp_preview_area_draw
gtk_grab_add
gtk_dialog_set_alternative_button_order
gimp_standard_help_func
gtk_widget_set_size_request
gtk_table_set_col_spacings
g_signal_connect_data
gimp_item_get_image
gtk_grab_remove
g_type_check_instance_cast
gtk_widget_show
gimp_preview_area_get_type
gtk_frame_get_type
gimp_drawable_offsets
gtk_container_add
gtk_toggle_button_set_active
gtk_drawing_area_new
gtk_toggle_button_get_type
gimp_drawable_mask_bounds
gimp_procedural_db_get_data
gtk_box_pack_start
gtk_table_attach
gtk_misc_get_type
gimp_preview_area_fill
gimp_procedural_db_set_data
gtk_adjustment_get_value
gtk_table_set_row_spacings
gimp_int_combo_box_get_type
gtk_container_set_border_width
gtk_widget_get_window
gimp_preview_area_new
gimp_context_get_gradient
gtk_misc_set_alignment
gimp_layer_combo_box_new
gimp_ui_init
gimp_window_set_transient
libgimpwidgets-2.0.so.0
gdk_event_request_motions
gtk_adjustment_set_value
cairo_line_to
gtk_adjustment_get_type
gtk_widget_set_events
cairo_translate
cairo_fill_preserve
gtk_adjustment_new
gtk_spin_button_set_numeric
gdk_cairo_set_source_color
gtk_box_set_homogeneous
g_malloc0
cairo_set_line_width
gtk_widget_get_style
gtk_spin_button_new
gtk_spin_button_get_type
cairo_stroke
cairo_move_to
gimp_int_combo_box_prepend
gimp_int_combo_box_connect
gimp_int_combo_box_get_active
libgimpmodule-2.0.so.0
g_print
libgimp-2.0.so.0
g_getenv
gimp_locale_directory
gimp_tile_height
gimp_rgn_iterate2
gimp_progress_init
gimp_drawable_is_gray
gimp_tile_ref
gimp_tile_unref
gimp_drawable_get_tile
gimp_install_procedure
gimp_drawable_is_rgb
gimp_tile_width
gimp_plugin_menu_register
gimp_selection_bounds
gimp_main
gimp_displays_flush
gimp_tile_cache_ntiles
gimp_progress_update
libgimpmath-2.0.so.0
libm.so.6
floor
log10
libgimpconfig-2.0.so.0
libgimpcolor-2.0.so.0
libgimpbase-2.0.so.0
libgtk-x11-2.0.so.0
gtk_main_quit
gtk_check_button_new_with_label
gtk_main
gtk_dialog_set_response_sensitive
libgdk-x11-2.0.so.0
libatk-1.0.so.0
libgio-2.0.so.0
g_random_int_range
libpangoft2-1.0.so.0
libpangocairo-1.0.so.0
libgdk_pixbuf-2.0.so.0
libcairo.so.2
libpango-1.0.so.0
libfreetype.so.6
libfontconfig.so.1
libgobject-2.0.so.0
libgthread-2.0.so.0
librt.so.1
libglib-2.0.so.0
libpthread.so.0
libc.so.6
__printf_chk
fopen
__isoc99_sscanf
dcgettext
__stack_chk_fail
bind_textdomain_codeset
fgets
__fprintf_chk
fputs
memcpy
fclose
fwrite
__cxa_finalize
bindtextdomain
__libc_start_main
_edata
__bss_start
_end
/usr/lib64
__libc_csu_init
__libc_csu_fini
GLIBC_2.2.5
GLIBC_2.4
GLIBC_2.7
GLIBC_2.14
GLIBC_2.3.4
ATUSQ
Z[]L
A\A]
X[]A\A]
fffff.
gfff)
fffff.
ffff.
ffff.
ATUSH
p[]A\
l$ H
d$(L
l$0H
[]A\
([]A\A]A^A_
AUATUH
[]A\A]
D$(H
AVE1
AUE1
D$(1
D$"H
L$ I
D$(dH3
8[]A\A]A^A_
AWE1
AVE1
D$(1
D$"f
T$ I
D$(dH3
8[]A\A]A^A_
ffff.
QAUI
tVHc
=V} 
5-| 
[]A\A]A^A_
^-:Y
vWfD
l$ H
d$(L
l$0L
t$8L
|$@H
}lD;edA
l$ L
d$(L
t$8Hc
AWAVAUATUSH
|$PH
L$XD
CL+T$(+D$,9
*L$(H
T$(H
T$XH
T$@H
T$0H
|$0E1
l$8D
D$`A
D$aA
D$bA
*D$(H
L$`H
*L$$
*D$,
HcCPD
d$ E
D$aA
L$`A
D$HH
T$8H9D$0t
|$PH
[]A\A]A^A_
*L$,
D$,H
T$pH
AVAUATUSH
d$ H
T$ E1
[]A\A]A^A_
fffff.
AUATUS
l$ L
[]A\A]
t$TH
fffff.
fffff.
fff.
5fy 
u^H9
AVAUATUH
T$ H
+D$$H
D$ +D$(
T$$H
0[]A\A]A^
5Pt 
=9s 
5Ls 
=Er 
AWAVAUATUSH
|$HE
|$PH
L$4t
D$<9
9D$<
9D$8
$9T$
$9D$
|$XH
|$PD
5sY 
D$L9D$8
D$(9D$
-7Y 
L$8D
D$<H
D$(H
T$(H
D$(M
T$09T$
HcD$4L
=Ri 
H9T$(
L$ H
L$ H
L$ H
[]A\A]A^A_
XL$4
|$ H
|$ H
|$ H
ffff.
=Wf 
=BP 
=	f 
=Ye 
56O 
=sN 
fffff.
AWAVI
ATUL
5"M 
=6] 
5/^ 
[]A\A]A^A_
T$0H
D$ H
D$pH
|$pH
|$pH
|$pH
|$XH
t$`H
|$XH
|$pL
t$XE1
t$`H
t$hH
t$`H
t$`H
=$G 
t$`H
t$`H
|$XI
=%\ 
t$hL
t$`H
|$XI
t$hL
-,Z 
t$hL
t$`H
t$`H
5-X 
t$`H
=wW 
=PW 
=DW 
|$xI
t$`H
t$xA
=XU 
=LU 
t$`H
=XR 
t$`H
=3P 
t$`H
|$XI
5+9 
t$hL
t$hL
t$`H
|$XI
t$hL
t$hL
ffffff.
l$ L
t$(L
|$0H
---------------------------
print_table
LUM [%03d]  pixcount:%d
%d %d %d
02/2000
hof@hotbot.com
Wolfgang Hofer
plug-in-sample-colorize
RGB*, GRAY*
_Sample Colorize...
<Image>/Colors/Map
OUT_EVENT: GDK_EXPOSE
OUT_EVENT: GDK_BUTTON_PRESS
OUT_EVENT: GDK_BUTTON_RELEASE
OUT_EVENT: GDK_MOTION_NOTIFY
OUT_EVENT: default
OUT_EVENT: ** update **
sample_colorize.values
g_values.tol_col_err    :%f
Sample analyze
sample_colors.dump
sample_colorize: params
g_values.hold_inten     :%d
g_values.orig_inten     :%d
g_values.rnd_subcolors  :%d
g_values.guess_missing  :%d
g_values.lvl_in_min     :%d
g_values.lvl_in_max     :%d
g_values.lvl_in_gamma   :%f
g_values.lvl_out_min    :%d
g_values.lvl_out_max    :%d
ROWS: %d - %d  COLS: %d - %d
sample_color_all.ppm
sample_color_2.ppm
print_transtable
Remap colorized
gimp20-std-plug-ins
UTF-8
SAMPLE_COLORIZE_DEBUG
sample colorize run
smp_dialog START
Get _Sample Colors
Sample Colorize
gimp-sample-colorize
gtk-apply
gtk-close
gimp-reset
response
Destination:
Sample:
From reverse gradient
gimp-tool-blend
From gradient
Show selection
toggled
Show color
event
Input levels:
value-changed
Output levels:
Hold intensity
Original intensity
Use subcolors
Smooth samples
run-mode
image
Input image (unused)
dst-drawable
sample-drawable
hold-inten
orig-inten
rnd-subcolors
guess-missing
in-low
in-high
gamma
out-low
out-high
  RGBA: %03d %03d %03d %03d  sum: [%d]
# CREATOR: Gimp sample coloros
256 256
This plug-in colorizes the contents of the specified (gray) layer with the help of a  sample (color) layer. It analyzes all colors in the sample layer. The sample colors are sorted by brightness (== intentisty) and amount and stored in a sample colortable (where brightness is the index) The pixels of the destination layer are remapped with the help of the sample colortable. If use_subcolors is TRUE, the remapping process uses all sample colors of the corresponding brightness-intensity and distributes the subcolors according to their amount in the sample (If the sample has 5 green, 3 yellow, and 1 red pixel of the  intensity value 105, the destination pixels at intensity value 105 are randomly painted in green, yellow and red in a relation of 5:3:1 If use_subcolors is FALSE only one sample color per intensity is used. (green will be used in this example) The brightness intensity value is transformed at the remapping process according to the levels: out_lo, out_hi, in_lo, in_high and gamma The in_low / in_high levels specify an initial mapping of the intensity. The gamma value determines how intensities are interpolated between the in_lo and in_high levels. A gamma value of 1.0 results in linear interpolation. Higher gamma values results in more high-level intensities Lower gamma values results in more low-level intensities The out_low/out_high levels constrain the resulting intensity index The intensity index is used to pick the corresponding color in the sample colortable. If hold_inten is FALSE the picked color is used 1:1 as resulting remap_color. If hold_inten is TRUE The brightness of the picked color is adjusted back to the origial intensity value (only hue and saturation are taken from the picked sample color) (or to the input level, if orig_inten is set FALSE) Works on both Grayscale and RGB image with/without alpha channel. (the image with the dst_drawable is converted to RGB if necessary) The sample_drawable should be of type RGB or RGBA
Colorize image using a sample image as a guide
sample colorize: unknown layer_id %d (Image closed?)
levels_update: update reques %x
p_init_gdrw: drawable %p  ID: %d
init_gdrw: image_id %d sel_channel_id: %d
init_gdrw: BOUNDS     x1: %d y1: %d x2:%d y2: %d
init_gdrw: OFFS       x: %d y: %d
init_gdrw: SEL_BOUNDS x1: %d y1: %d x2:%d y2: %d
init_gdrw: SEL_OFFS   x: %d y: %d
init_gdrw: SEL_DELTA  x: %d y: %d
UPD PREVIEWS   ID:%d ENABLE_UPD:%d
LVL_TRANS [%03d]  in_lvl: %3d  out_lvl: %3d
Error: Source sample has no visible Pixel
The run mode { RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1) }
The drawable to be colorized (Type GRAY* or RGB*)
Sample drawable (should be of Type RGB or RGBA)
hold brightness intensity levels (TRUE, FALSE)
TRUE: hold brightness of original intensity levels. FALSE: Hold Intensity of input levels
TRUE: Use all subcolors of same intensity, FALSE: use only one color per intensity
TRUE: guess samplecolors for the missing intensity values FALSE: use only colors found in the sample
intensity of lowest input (0 <= in_low <= 254)
intensity of highest input (1 <= in_high <= 255)
gamma correction factor (0.1 <= gamma <= 10) where 1.0 is linear
lowest sample color intensity (0 <= out_low <= 254)
highest sample color intensity (1 <= out_high <= 255)
;*3$"
@sample-colorize.debug
7zXZ
:\]d
#pC:v
.hF,
$",>R
|"fn
"Bip
<SLCI
y	{>
4'$ln
3R9r
~,x[/
4$QN
=1?:
kh)Y
B9%J%
 6NO
!l=2E
_o<{%
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
