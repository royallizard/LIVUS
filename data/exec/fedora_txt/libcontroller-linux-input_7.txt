__gmon_start__
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
gtk_tree_model_get_type
g_type_check_instance_cast
gtk_tree_model_get_iter_first
g_value_unset
gtk_tree_model_iter_next
gtk_tree_model_get_value
g_value_get_string
strcmp
g_utf8_collate
gtk_list_store_get_type
gtk_list_store_insert_with_values
g_udev_device_get_device_file
g_udev_device_get_sysfs_attr
g_signal_emit
g_udev_device_get_parent
g_object_unref
gtk_list_store_set_column_types
g_udev_client_new
g_udev_client_query_by_subsystem
g_list_free
g_signal_connect_data
gtk_list_store_remove
g_type_class_peek_parent
g_type_check_class_cast
g_cclosure_marshal_VOID__STRING
g_signal_new
gimp_input_device_store_get_type
g_error_free
gimp_input_device_store_register_types
g_type_module_register_type
gimp_input_device_store_new
g_object_new
gimp_input_device_store_get_device_file
g_type_check_instance_is_a
g_return_if_fail_warning
gtk_tree_model_get
gimp_input_device_store_get_error
g_error_copy
gimp_controller_get_type
dcgettext
g_param_spec_string
g_object_class_install_property
g_param_spec_object
g_source_remove
g_io_channel_unref
g_free
g_strdup
g_object_set
open
ioctl
g_strdup_printf
g_io_channel_unix_new
g_io_channel_set_close_on_unref
g_io_channel_set_encoding
g_io_add_watch
g_utf8_validate
g_print
__errno_location
g_strerror
__stack_chk_fail
g_object_notify
controller_linux_input_get_type
g_io_channel_read_chars
g_clear_error
g_value_init
g_value_set_double
gimp_controller_event
g_type_name
g_log
g_value_set_string
g_value_set_object
gimp_module_query
gimp_module_register
libgimpmodule-2.0.so.0
libgimpwidgets-2.0.so.0
libgtk-x11-2.0.so.0
libgdk-x11-2.0.so.0
libatk-1.0.so.0
libgio-2.0.so.0
libpangoft2-1.0.so.0
libpangocairo-1.0.so.0
libgdk_pixbuf-2.0.so.0
libcairo.so.2
libpango-1.0.so.0
libfreetype.so.6
libfontconfig.so.1
libgthread-2.0.so.0
librt.so.1
libgudev-1.0.so.0
libgobject-2.0.so.0
libglib-2.0.so.0
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
libcontroller-linux-input.so
/usr/lib64
GLIBC_2.2.5
GLIBC_2.4
%z< 
%r< 
%j< 
%b< 
%Z< 
%R< 
%J< 
%B< 
%:< 
%2< 
%*< 
%"< 
%z; 
%r; 
%j; 
%b; 
%Z; 
%R; 
%J; 
%B; 
%:; 
%2; 
%*; 
%"; 
=Q: 
fffff.
=H0 
=20 
fffff.
[]A\A]
[]A\A]
t$@H
t$@H
L$ H
|$ y
t$@L
h[]A\A]A^A_
\$(H
l$0L
d$8L
l$@H
D$ @
D$xH
|$xH
8[]A\A]
\$(H
l$0H
5Z5 
ffff.
ATUSH
-}2 
D$0H
 []A\
ffff.
D$ H
D$8H
fffff.
C(tNH
fffff.
ATUH
[]A\
ffff.
ffff.
AVAUATUH
[]A\A]A^
?tOH
D$ H
T$0D
L$4H
2tPH
D$PH
`[]A\
T$ H
L$$H
t$"f
f91u
l$8L
T$"H
t$"f
f91u
L$$H
\$ H
l$(L
d$0L
l$8L
t$@H
\$ H
l$(L
d$0L
l$8H
t$@H
ffff.
\$(H
l$0L
d$8L
l$@H
\$(H
l$0L
d$8L
l$@H
\$(H
l$0L
d$8L
l$@H
fffff.
={# 
D$0H
D$ H
name
uevent
remove
device-added
device-removed
GimpInputDeviceStore
identifier != NULL
GIMP_IS_INPUT_DEVICE_STORE (store)
gimp_input_device_store_get_device_file
gimp_input_device_store_get_error
gimp20-libgimp
Device:
device
device-values
Linux Input
gimp-controller-linux-input
Linux Input Events
No device configured
state
%s: key 0x%02x present
%s: #keys = %d
%s: ext key 0x%02x present
%s: #ext_keys = %d
%s: button 0x%02x present
%s: #buttons = %d
%s: rel 0x%02x present
%s: #rels = %d
%s: #abs = %d
Reading from %s
Device not available: %s
Device not available
End of file
%s: EV_KEY code = 0x%02x
property
controller-linux-input.c:297
controller-linux-input.c:319
ControllerLinuxInput
Linux input event controller
v0.2
2004-2007
button-0
Button 0
button-1
Button 1
button-2
Button 2
button-3
Button 3
button-4
Button 4
button-5
Button 5
button-6
Button 6
button-7
Button 7
button-8
Button 8
button-9
Button 9
button-mouse
Button Mouse
button-left
Button Left
button-right
Button Right
button-middle
Button Middle
button-side
Button Side
button-extra
Button Extra
button-forward
Button Forward
button-back
Button Back
button-task
Button Task
button-wheel
Button Wheel
button-gear-down
Button Gear Down
button-gear-up
Button Gear Up
x-move-left
X Move Left
x-move-right
X Move Right
y-move-forward
Y Move Forward
y-move-back
Y Move Back
z-move-up
Z Move Up
z-move-down
Z Move Down
x-axis-tilt-forward
X Axis Tilt Forward
x-axis-tilt-back
X Axis Tilt Back
y-axis-tilt-right
Y Axis Tilt Right
y-axis-tilt-left
Y Axis Tilt Left
z-axis-turn-left
Z Axis Turn Left
z-axis-turn-right
Z Axis Turn Right
horizontal-wheel-turn-back
Horiz. Wheel Turn Back
horizontal-wheel-turn-forward
Horiz. Wheel Turn Forward
dial-turn-left
Dial Turn Left
dial-turn-right
Dial Turn Right
wheel-turn-left
Wheel Turn Left
wheel-turn-right
Wheel Turn Right
The name of the device to read Linux Input events from.
%s: abs 0x%02x present [%d..%d]
%s: EV_REL code = 0x%02x (value = %d)
%s: EV_ABS code = 0x%02x (value = %d)
%s: invalid %s id %u for "%s" of type `%s' in `%s'
Sven Neumann <sven@gimp.org>, Michael Natterer <mitch@gimp.org>
(c) 2004-2007, released under the GPL
linux_input_read_event
linux_input_get_device_info
;*3$"
libcontroller-linux-input.so.debug
7zXZ
:(^ 
ZpBc
viQ9
<HRSl
;mQ[
fE00
_SdN
CMW`
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.bss
.gnu_debuglink
.gnu_debugdata
