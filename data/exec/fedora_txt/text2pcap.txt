/lib64/ld-linux-x86-64.so.2
%F"x
__gmon_start__
_Jv_RegisterClasses
g_strdup
g_strlcpy
libglib-2.0.so.0
libpthread.so.0
__errno_location
libc.so.6
exit
fopen
optind
__stack_chk_fail
stdin
__assert_fail
strtol
isatty
strlen
getopt
clearerr
strptime
__fprintf_chk
stdout
strtoul
malloc
sscanf
optarg
stderr
__memset_chk
fileno
fwrite
fread
localtime
strchr
mktime
__cxa_finalize
_IO_getc
strerror
__libc_start_main
ferror
_edata
__bss_start
_end
__libc_csu_fini
yy_delete_buffer
yypop_buffer_state
yyget_out
yyset_debug
yyset_lineno
yyout
yyleng
yyget_leng
_IO_stdin_used
yytext
__data_start
yyrestart
yyget_text
yyfree
yy_scan_bytes
yy_flush_buffer
yyset_in
yy_scan_buffer
yypush_buffer_state
yyget_in
__libc_csu_init
yylex_destroy
yy_create_buffer
yyget_lineno
yyget_debug
yyin
parse_token
yyalloc
yyrealloc
yywrap
yyset_out
yylineno
yy_flex_debug
yylex
yy_scan_string
yy_switch_to_buffer
GLIBC_2.2.5
GLIBC_2.4
GLIBC_2.3.4
%zl 
%rl 
%jl 
%bl 
%Zl 
%Rl 
%Jl 
%Bl 
%:l 
%2l 
%*l 
%"l 
ATSubH
='h 
%|g 
=8g 
AUATUSH
%Mj 
=\i 
=+i 
5>h 
=_h 
([]A\A]
=nf 
=ce 
=*e 
=*f 
=oc 
fff.
ATUSH
D$h1
%zc 
D$ H
D$(H
D$0H
D$8H
D$@H
D$HH
D$PHc
D$hdH3
p[]A\
l$ H
D$@D
L$4H
-YZ!
=.^ 
=Y] 
5{[ 
ffffff.
AVAUL
D$81
t$0f
|$0H;;H
|$0H;;H
D$0H;
T$0H
|$0H;;H
D$0H;
|$0H;;H
D$0H;
|$0H;;H
|$0H;;H
D$0H;
=$U 
5zT 
T$8dH3
@[]A\A]A^
=yM 
AVAUATUSH
-nO!
-bO!
[]A\A]A^
ffffff.
fffff.
H;8t7
l$ L
d$(L
l$0H
teMc
d$ H
ffff.
l$ H
AWAVAUATUSH
D$x1
|$0H
4SfA
41Hc
%[F!
|$(D
d$$L
L$(L
Hc1I
T$xdH3
[]A\A]A^A_
D$8A
D$$+
=hD!
5YD!
=oC!
=iC!
T$0L
|$L~(H
|$@H
\$PM
5`B!
=aB!
T$LH
-[B!
\$PM
|$@H
HcD$LHc
T$hH
D$XH
L$PH
|$hH9|$@H
L$Ps-H
L$@D
D$LH
=j@!
Lcd$dN
%(@!
HcD$LH
T$PH
=d?!
L$@H
==?!
5C?!
=D?!
T$PH
T$@H
Lcd$dL
)t L
%-=!
fffff.
fffff.
\$(H
l$0H
 []A\
ffffff.
fff.
=:4 
fff.
fff.
=.7!
fff.
fffff.
fffff.
fffff.
l$ L
t$(L
|$0H
1.4.0
Start new packet
[[parse_preamble: "%s"]]
[[append_to_preamble: "%s"]]
(%s, %s "%s") -> (
FATAL ERROR: Bad state (%d)
, %s)
Bad argument for '-o': %s
Bad argument for '-e': %s
Bad argument for '-i': %s
Bad src port for '-%c'
Bad dest port for '-s'
No tag specified for '-%c'
Bad tag for '-%c'
No ppi specified for '-%c'
Bad ppi for '-%c'
Bad src port for '-u'
Bad dest port for '-u'
Bad src port for '-T'
Bad dest port for '-T'
dhqe:i:l:m:o:u:s:S:t:T:
Standard input
Standard output
Input from: %s
Output to: %s
text2pcap.c
input_file != ((void *)0)
output_file != ((void *)0)
-------------------------
Byte
Offset
Directive
Text
End-of-line
Init
Start-of-line
Text2pcap %s
Generate a capture file from an ASCII hexdump of packets.
See http://www.wireshark.org for more information.
Usage: text2pcap [options] <infile> <outfile>
where  <infile> specifies input  filename (use - for standard input)
      <outfile> specifies output filename (use - for standard output)
Input:
  -o hex|oct|dec         parse offsets as (h)ex, (o)ctal or (d)ecimal; default is hex.
  -t <timefmt>           treat the text before the packet as a date/time code;
                         the specified argument is a format string of the sort
                         supported by strptime.
                         Example: The time "10:15:14.5476" has the format code
                         "%%H:%%M:%%S."
                         NOTE: The subsecond component delimiter must be given
                          (.) but no pattern is required; the remaining number
                          is assumed to be fractions of a second.
                         NOTE: Date/time fields from the current date/time are
                         used as the default for unspecified fields.
Output:
  -l <typenum>           link-layer type number; default is 1 (Ethernet).
                         See the file net/bpf.h for list of numbers.
                         Use this option if your dump is a complete hex dump
                         of an encapsulated packet and you wish to specify
                         the exact type of encapsulation.
                         Example: -l 7 for ARCNet packets.
  -m <max-packet>        max packet length in output; default is %d
Prepend dummy header:
  -e <l3pid>             prepend dummy Ethernet II header with specified L3PID
                         (in HEX).
                         Example: -e 0x806 to specify an ARP packet.
  -i <proto>             prepend dummy IP header with specified IP protocol
                         (in DECIMAL).
                         Automatically prepends Ethernet header as well.
                         Example: -i 46
  -u <srcp>,<destp>      prepend dummy UDP header with specified
                         dest and source ports (in DECIMAL).
                         Automatically prepends Ethernet & IP headers as well.
                         Example: -u 1000 69 to make the packets look like TFTP/UDP packets.
  -T <srcp>,<destp>      prepend dummy TCP header with specified
                         dest and source ports (in DECIMAL).
                         Automatically prepends Ethernet & IP headers as well.
                         Example: -T 50,60
  -s <srcp>,<dstp>,<tag> prepend dummy SCTP header with specified
                         dest/source ports and verification tag (in DECIMAL).
                         Automatically prepends Ethernet & IP headers as well.
                         Example: -s 30,40,34
  -S <srcp>,<dstp>,<ppi> prepend dummy SCTP header with specified
                         dest/source ports and verification tag 0.
                         Automatically prepends a dummy SCTP DATA
                         chunk header with payload protocol identifier ppi.
                         Example: -S 30,40,34
Miscellaneous:
  -h                     display this help and exit.
  -d                     show detailed debug of parser states.
  -q                     generate no output at all (automatically turns off -d).
FATAL ERROR: Bad hex number? [%s]
Wrote packet of %lu bytes at %u
Failure processing time "%s" using time format "%s"
   (defaulting to Jan 1,1970 00:00:00 GMT)
timecode: %02d/%02d/%d %02d:%02d:%02d %d
Format(%s), time(%u), subsecs(%u)
--- Directive [%s] currently unsupported ---
Inconsistent offset. Expecting %0lX, got %0lX. Ignoring rest of packet
No dest port specified for '-%c'
No dest port specified for '-u'
Must specify input and output filename
Cannot open file [%s] for reading: %s
Cannot open file [%s] for writing: %s
Dummy headers (-e, -i, -u, -s, -S -T) cannot be specified with link type override (-l)
Generate dummy Ethernet header: Protocol: 0x%0lX
Generate dummy IP header: Protocol: %ld
Generate dummy UDP header: Source port: %ld. Dest port: %ld
Generate dummy TCP header: Source port: %ld. Dest port: %ld
Generate dummy SCTP header: Source port: %ld. Dest port: %ld. Tag: %ld
Generate dummy DATA chunk header: TSN: %lu. SID: %d. SSN: %d. PPID: %lu
Read %ld potential packet%s, wrote %ld packet%s
main
')uB
*	5|z
lEd/
6 PQ
pCRF
Yg:a
JZJ{.
#FLR
_QS}
input in flex scanner failed
bad buffer in yy_scan_bytes()
out of dynamic memory in yyensure_buffer_stack()
out of dynamic memory in yy_create_buffer()
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
out of dynamic memory in yy_get_next_buffer()
fatal flex scanner internal error--no action found
out of dynamic memory in yy_scan_buffer()
out of dynamic memory in yy_scan_bytes()
text2pcap.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.note.ABI-tag
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.interp
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rela.plt
.got.plt
.got
.text
