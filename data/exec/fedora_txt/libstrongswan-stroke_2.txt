	8$I
y"hZP
.2r%s
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
stroke_socket_create
stroke_plugin_create
malloc
return_false
charon
__fprintf_chk
__stack_chk_fail
__errno_location
strerror_safe
fclose
strcmp
fwrite
identification_create_from_string
debug_names
enum_from_name_as_int
stroke_ca_create
stroke_cred_create
stroke_attribute_create
stroke_handler_create
stroke_config_create
stroke_control_create
stroke_list_create
stroke_counter_create
enumerator_create_token
strchr
host_create_from_dns
enumerator_create_cleaner
enumerator_create_filter
strlen
strsep
proposal_create_from_string
proposal_create_default
proposal_create_default_aead
ike_cfg_create
__snprintf_chk
chunk_empty
chunk_create_clone
memwipe_noinline
shared_key_create
linked_list_create
shared_key_type_names
fgets
strrchr
traffic_selector_create_from_cidr
host_create_from_string
traffic_selector_create_from_subnet
traffic_selector_create_dynamic
strtol
getprotobyname
getservbyname
auth_cfg_create
__strdup
strncmp
eap_vendor_type_from_string
identification_create_from_encoding
peer_cfg_create
child_cfg_create
mem_pool_create
host_create_any
host_create_from_range
mem_pool_create_range
host_create_from_subnet
mutex_create
memcmp
delete_ike_sa_job_create
fflush
ipsec_mode_names
rekey_child_sa_job_create
rekey_ike_sa_job_create
chunk_from_hex
__isoc99_sscanf
snprintf
chunk_to_hex
chunk_write
eat_whitespace
extract_token
strncasecmp
chunk_from_base64
enumerator_create_directory
extract_value
mem_cred_create
callback_cred_create_shared
chunk_map
fetchline
extract_token_str
match
chunk_unmap
memchr
path_dirname
glob
globfree
stroke_load_ca_cert
return_null
fputs
fputc
enumerator_create_nested
memcpy
strncat
enumerator_create_single
rwlock_create
enumerator_create_empty
chunk_hash
stroke_counter_type_names
hashtable_create
spinlock_create
task_type_names
auth_class_names
eap_type_names
time_monotonic
ike_sa_state_names
ike_version_names
child_sa_state_names
linked_list_create_from_enumerator
protocol_id_names
encryption_algorithm_names
integrity_algorithm_names
diffie_hellman_group_names
__sprintf_chk
certificate_printer_create
plugin_feature_get_string
hash_algorithm_names
pseudo_random_function_names
rng_quality_names
ferror
time
uname
mallinfo
action_names
libc.so.6
_edata
__bss_start
_end
libstrongswan-stroke.so
GLIBC_2.7
GLIBC_2.14
GLIBC_2.4
GLIBC_2.3.4
GLIBC_2.2.5
%"B!
%"B!
%"B!
%"B!
%*B!
%*B!
%*B!
%*B!
%*B!
%*B!
%*B!
%2B!
%2B!
%2B!
%2B!
%2B!
%2B!
%2B!
%2B!
%2B!
%2B!
%:B!
%:B!
%:B!
%:B!
%:B!
%BB!
%JB!
%JB!
%JB!
%JB!
%JB!
%JB!
%JB!
%JB!
%JB!
%JB!
%JB!
%JB!
%JB!
%JB!
%JB!
%JB!
%RB!
%RB!
%RB!
%RB!
%bB!
%bB!
%jB!
=wA!
=z;!
BpH9
S(H9
S0H9
S8H9
S@H9
SHH9
SPH9
SXH9
S`H9
ShH9
w"H=
-~5!
AWAV
AUATI
D$H1
L$HdH3
X[]A\A]A^A_
D$*H
D$*L
t8H9
t$@L
l$,H
D$0H
D$8H
D$0H
D$01
D$8H
t$@H
t8H9
S H9
S(H9
S0H9
S8H9
S@H9
t9H9
t9H9
t9H9
t9H9
C H9
S(H9
S0H9
t9H9
t9H9
t9H9
t9H9
t$@H
T$@H
t$@H
AUAT
[]A\A]
AUATA
([]A\A]
ATUSH
ATUSH
]A\H
AWAVAUATI
[]A\A]A^A_
[]A\A]A^A_
UASAR
)D$ 
)|$0
)t$@
)l$P
)d$`
)\$p
AWAVI
AUATUSH
D$81
l$0H
D$(H
D$0H
D$(L
D$0H
D$(H
D$8dH3
H[]A\A]A^A_
AWAVAUATUSH
D$(1
d$ H
D$ H
T$(dH3
8[]A\A]A^A_
AWAVI
AUATUSH
t$0L
)D$PH
D$0H
D$0H
D$HH
|$0H
[]A\A]A^A_
D$ 1
D$8H
\$(H
D$@H
D$@1
D$ H
\$(H
T$8I
\$(H
|$81
D$ H
D$PH
t$PH
T$8H
ATSL
R0XI
GPZH
D$PH
T$8I
|$81
D$PH
T$XH
D$XH
D$XH
|$PH
)D$P
AWAVAUATUS
D$81
D$(H
l$(A
D$8dH3
H[]A\A]A^A_
D$(H
t$01
l$(E1
l$(1
l$(A
t$01
D$0D
AWAVI
AUATL
D$X1
T$7H
\$(H
T$HH
|$HI
D$HH
t$HH
L$ H
L$ H
E}PH
|$PL
|$PL
H9|$
t$0H
\$XdH3
h[]A\A]A^A_
L$(L
t$HH
L$8H
L$8H
D$ H
L$8L
D$ A
L$8L
D$6A
H9|$
H9t$
H9t$
t$0H
D$0H
D$(H
D$(H
D$(H
AWAVAUATI
D$@H
D$\E
D$HE
D$^H
D$`H
D$dH
D$@H
D$(H
D$(H
D$8H
D$8H
|$`1
D$YH
D$\H
D$pH)
D$xH
[]A\A]A^A_
D$XH
|$XH
t$8I
D$8H
D$8H
l$8H
D$@H
D$8H
D$@H
t$8H
t$0L
t$0H
T$8L
T$0H
T$8H
T$XH
t$(H
|$(L
T$8H
|$(H
D$(H
AVAUI
{0[]A\A]A^
ATUS
D$@H
 []A\
AWAVAUATUSH
d$ H
|$(dH
D$81
D$ H
D$ L
t$0H
D$8dH3
H[]A\A]A^A_
AWAVI
AUATI
<]tQ<}
]A\A]A^A_
[]A\A]A^A_
]A\A]A^A_
AWAVAUATUSH
D$H1
D$HdH3
X[]A\A]A^A_
l$@H
D$8H
t$ H
D$81
P(L9
t$(H
D$8H
D$(I
ATUI
ZYtC
 []A\
AWAVI
AUATI
D$81
D$8dH3
H[]A\A]A^A_
d$(A
D$0H
D$0H
D$(H
D$(H
$u1H
ATUH
[]A\
AWAVAUATI
D$(1
|$ H
D$(dH3
8[]A\A]A^A_
D$ H
t$ I
D$ A
D$ H
D$ H
AWAVI
AUATUSH
([]A\A]A^A_
AVAUI
ATUH
[]A\A]A^
AWAVI
AUATI
L$*H
T$0H
t$,L
D$+dH
D$H1
D$HdH3
X[]A\A]A^A_
D$*H
D$8H
D$8H
|$0H9
D$8I
t$@H
t$@H
<$E1
L$0H
D$@H
|$0H9
D$@M
t$HH
AWAVAUATUSH
D$81
T$ L
l$0H
D$(H
D$(H
D$0H
|$ H9
D$0H
D$(H
D$0H
D$8dH3
H[]A\A]A^A_
D$(H
|$ H9
D$(H
D$(H
AWAVA
AUATI
[]A\A]A^A_
P@j61
P@j61
X@j61
j*ARL
AVAUM
ATUM
[]A\A]A^
AVAUI
ATUH
[]A\A]A^
ATUSH
[]A\
ATUI
D$(1
L$(dH3
0[]A\
AVAUATUSH
[]A\A]A^
AUATUSH
[]A\A]
AUATUSH
[]A\A]
AWAVM
AUATUS
[]A\A]A^A_
l$@L
D$X%
T$(H
\$ A
T$(I
|$8A
|$8A
T$(H
\$ A
T$(I
\$ A
AWAVAUATI
X@j61
A[A^
P@j61
R0XZH
[]A\A]A^A_
_AXH
P@j61
SATL
AWAVI
AUATE
D$h1
|$ H
)D$0
L$hdH3
x[]A\A]A^A_
L$(M
D$0H
t$0H
|$0H
)D$PD
t$PL
)D$@L
D$@H
t$@H
t$@H
D$@H
|$0H
t$0H
AWAVAUATUSH
|$ H
\$pE1
L$xI
l$pH
t$xE1
ZYt}I
]A\H
D$ H
[]A\A]A^A_
l$pL
l$pH
oD$pH
L$pH
L$8L
L$8t
D$xt
d$xH
t$xA
D$8I
AZA[
l$@H
\$PL
|$HL
d$ L
l$8H
D$`L
|$`H
D$(H
oD$pH
D$8H
l$@H
\$PH
l$@L
|$HL
l$8L
\$8H
|$HAXAYH
l$@L
|$HH
t$pH
d$8H
D$@QH
AXAY
|$8H
D$@I
L$HL
D$8H
t$0H
t$Ht6L
T$HH
t$@H
D$@H
D$8L
L$8I
t$|L
L$PH
D$`^_u=I
l$HH
|$@1
|$@H
D$H1
T$HL
D$8A
D$HH
L$@H
T$XE1
|$PE1
t$@H
D$HL
D$HH
l$8H
D$8H
L$HH
ATUH
 tVH
[]A\1
[]A\
AVAUI
[]A\A]A^
AVAUI
ATUI
[]A\A]A^
[]A\A]A^
[]A\A]A^
ATUI
[]A\
AUATH
GxdH
[]A\A]
D$xH
ATUH
[]A\
AWAVAUATI
D$pH
D$pA
D$hH
[]A\A]A^A_
D$xH
D$pH
D$xH
AVAUI
ATUI
D$81
T$ H
D$8dH3
@[]A\A]A^
t$ H
T$(L
AWAVI
AUATL
[]A\A]A^A_
AWAVA
AUATUSH
D$81
t$ H
T$0E
D$8dH3
H[]A\A]A^A_
AUATI
[]A\A]
AWAVAUATI
D$hH
D$pH
D$hH
[]A\A]A^A_A
[]A\A]A^A_
tyAUATI
[]A\A]H
AUATUSH
[]A\A]
AVAUA
ATUA
[]A\A]A^H
tYSH
K`[]A\
ATUI
[]A\
AWAVI
AUATI
([]A\A]A^A_
ATUI
T$ H
[]A\
ATUSH
]A\H
AWAVI
AUATUSH
([]A\A]A^A_
AUATI
[]A\A]
ATUH
[]A\
AVAUI
ATUH
 []A\A]A^
AWAVI
AUATI
|$HH
([]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
AUATI
[]A\A]
K@[]A\
ATUI
[]A\
[]A\
AUATI
[]A\A]
AUATI
[]A\A]
AWAVI
AUATUSH
T$(1
d$ H
D$ H9
D$ L
D$(dH3
8[]A\A]A^A_
AVAUI
ATUSH
[]A\A]A^
AVAUI
ATUH
[]A\A]A^
[]A\A]A^H
AWAVAUATUSH
[]A\A]A^A_
d$ H
AUATI
[]A\A]
AVAUA
ATUI
%up1
"uP1
]A\A]A^
ATUStWrH
AWAVI
AUATE1
([]A\A]A^A_
AWAVAUATI
D$(1
D$ t
D$ t
d$ H
D$(dH3
8[]A\A]A^A_
D$ H
AWAVA
AUATA
_AXH
t$01
D$HL
T$8H
D$(A
T$ H
D$ A
T$8H
D$01
t$0VH
RATH
L$@D
T$HI
D$HH
L$@H
d$PL
[]A\A]A^A_
L$8H
AWAVAUATA
D$h1
D$ H
T$ RD
T$$H
ARAVAWL
L$0D
D$hdH3
x[]A\A]A^A_
L$@L
D$8H
t$`L
L$XfA
L$`f
L$HH
T$(M
L$HH
D$(H
L$XH
L$PH
T$0M
L$PH
D$0H
H9D$@~kH
L$`H
L$@L
L$@L
D$8H
D$XH
AWAVAUATUS
D$(1
l$ H
D$ H
D$ L
L$(dH3
8[]A\A]A^A_
AVAUATUSH
 []A\A]A^
AUATUS
[]A\A]
AUATUSH
=1k 
[]A\A]
AUATI
[]A\A]
AWAVAUATUSH
D$H1
D$HdH3
X[]A\A]A^A_
D$8L
D$@H
|$@H
|$0L
|$(H
T$(I
L$8H
T$01
D$8H
D$@L
D$8H
D$@H
|$8A
D$@L
l$ L
|$8A
D$@L
L$ H
l$$L
|$8A
D$@L
L$$H
l$(L
|$8A
D$@L
L$(H
l$0L
|$8A
D$@L
L$0H
l$8A
D$@1
AWAVAUATUS1
|$HH
t$8dH
T$x1
D$HH
D$ H
D$\H
D$(H
D$TH
D$`H
D$ H
L$(H
t$0L
D$8H
l$`H
D$\H
D$hD
L$dH
D$XH
|$SL
t$pL
l$hE1
t$pt
L$hL
D$8H
D$xdH3
[]A\A]A^A_
AWAVI
AUATUSH
D$ H
D$(H
D$hH
D$hH
D$h1
D$h1
D$hH
D$hH
d$KH
T$ H
t$LH
l$KH
l$ f.
t$(H
P(I9
[]A\A]A^A_
D$(j
%&V 
d$dH
l$`H
D$\H
D$xH
t$xL9
D$lL
L$p1
D$lH
AZA[
D$8H
D$hL
t$0H
D$pH
L$81
t$@H
\$0H
D$pH
|$0H
D$pH
D$pH
D$pH
AXAYu
D$pH
D$pH
t$p1
D$pH
D$h1
D$h1
D$hH
D$hH
D$hH
D$8L
t$0H
(invalid pointer in stroke msg)
%zu bytes total, %d allocations, %zu bytes average:
reading length of stroke message failed: %s
reading stroke message failed: %s
creating stroke output stream failed
received stroke: initiate '%s'
received stroke: terminate '%s'
received stroke: terminate-srcip %s-%s
received stroke: add connection '%s'
received stroke: delete connection '%s'
received stroke: delete ca '%s'
received stroke: loglevel %d for %s
received stroke: user-creds '%s'
%s.plugins.stroke.prevent_loglevel_changes
%s.plugins.stroke.max_concurrent
  %s=%s
  %ssubnet=%s
  %ssourceip=%s
  %sdns=%s
  %sauth=%s
  %sauth2=%s
  %sid=%s
  %sid2=%s
  %srsakey=%s
  %scert=%s
  %scert2=%s
  %sca=%s
  %sca2=%s
  %sgroups=%s
  %sgroups2=%s
  %supdown=%s
Total memory usage: %zu
stroke message %b
received stroke: route '%s'
received stroke: unroute '%s'
received stroke: rekey '%s'
conn %s
left
right
  eap_identity=%s
  aaa_identity=%s
  xauth_identity=%s
  ike=%s
  esp=%s
  ah=%s
  dpddelay=%d
  dpdtimeout=%d
  dpdaction=%d
  closeaction=%d
  mediation=%s
  mediated_by=%s
  me_peerid=%s
  keyexchange=ikev%u
received stroke: add ca '%s'
ca %s
  cacert=%s
  crluri=%s
  crluri2=%s
  ocspuri=%s
  ocspuri2=%s
  certuribase=%s
prevented log level change
command not allowed!
received unknown stroke
unknown type '%s'!
unix:///var/run/charon.ctl
%s.plugins.stroke.socket
creating stroke socket failed
%s.plugins.stroke.allow_swap
%s,0.0.0.0/0,::/0
deleted connection '%s'
connection '%s' not found
  invalid username '%s'
invalid username '%s'
  configured EAP-Identity %Y
Password:
  added %N secret for %Y %Y
  added %N secret for %Y
  secret: %#B
  no config named '%s'
no config named '%s'
%any
%opaque
%dynamic
invalid subnet: %s, skipped
pubkey
%same
%any6
%cert
ike:
ecdsa
bliss
xauth
%identity
%modeconfig
%modecfg
%config
%cfg
%config4
%config6
IP pool %s invalid, ignored
added configuration '%s'
skipped invalid proposal string: %s
left is other host, swapping ends
left nor right host is our side, assuming left=local
  configured XAuth username %Y
  config '%s' unsuitable for user credentials
config '%s' unsuitable for user credentials
invalid proto/port: %s, skipped subnet
  id '%Y' not confirmed by certificate, defaulting to '%Y'
CA certificate "%s" not found, discarding CA constraint
authentication method %s unknown, fallback to any
'%s' has both left- and rightsourceip, but IKE can negotiate one virtual IP only, ignoring local virtual IP
ignored invalid subnet token: %s
added child to existing configuration '%s'
IKE_SA [
CHILD_SA {
%s%d%s closed successfully
closing %s%d%s failed
invalid start address: %s
invalid end address: %s
'%s' routed
routing '%s' failed
no child config named '%s'
no child config named '%s'
configuration '%s' unrouted
configuration '%s' not found
CHILD
no %s_SA named '%s' found
%s.plugins.stroke.timeout
%s%d%s not closed after %dms, detaching
connection '%s' established successfully
connection '%s' not established after %dms, detaching
establishing connection '%s' failed
'%s' shunt %N policy installed
'%s' shunt %N policy installation failed
shunt policy '%s' uninstalled
error parsing specifier string
enabled
/etc/strongswan/ipsec.d/crls
crl caching to %s %s
Private key
PKCS#12 file
Passphrase invalid!
%s '%s' is encrypted.
Passphrase:
%%smartcard%u@%255s
%%smartcard%u:%127s
%%smartcard:%127s
%s/%s.crl
missing second delimiter
missing secret
PIN invalid, aborting.
Login to '%s' required
PIN:
%smartcard
/etc/strongswan/ipsec.d/certs
%s/%s
  loaded crl from '%s'
  reading directory failed
%dns
dns:
ssh:
line %d: %s
line %d: empty filename
%s/%.*s
%prompt
loading secrets from '%s'
include 
line %d: missing token
ECDSA
BLISS
line %d: expected PIN
line %d: malformed PIN: %s
NTLM
XAUTH
line %d: malformed secret: %s
  loaded %N secret for %s
rereading secrets
rereading crls from '%s'
/etc/strongswan/ipsec.secrets
loading crls from '%s'
Passphrase invalid, giving up.
  written crl file '%s' (%d bytes)
  writing crl file '%s' failed: %s
  loaded certificate "%Y" from '%s'
  loading certificate from '%s' failed
/etc/strongswan/ipsec.d/cacerts
  ca certificate "%Y" lacks ca basic constraint, discarded
  loaded ca certificate "%Y" from '%s'
  loading ca certificate from '%s' failed
  loaded AA certificate "%Y" from '%s'
  loading AA certificate from '%s' failed
  loading crl from '%s' failed
  loaded attribute certificate from '%s'
  loading attribute certificate from '%s' failed
  loaded %N public key for "%Y"
  loading public key for "%Y" failed
  loaded %N public key for "%Y" from '%s'
  loading public key for "%Y" from '%s' failed
/etc/strongswan/ipsec.d/private
line %d: malformed passphrase: %s
opening secrets file '%s' failed: %s
maximum level of %d includes reached, ignored
include pattern too long, ignored
expanding file expression '%s' failed
line %d: missing ' : ' separator
  loaded %N private key from '%s'
  loading private key from '%s' failed
  loading credentials from '%s' failed
line %d: expected %%smartcard specifier
line %d: the given %%smartcard specifier is not supported or invalid
  loaded private key from %.*s
line %d: token must be either RSA, ECDSA, BLISS, P12, PIN, PSK, EAP, XAUTH or NTLM
rereading ca certificates from '%s'
/etc/strongswan/ipsec.d/aacerts
rereading aa certificates from '%s'
/etc/strongswan/ipsec.d/ocspcerts
rereading ocsp signer certificates from '%s'
/etc/strongswan/ipsec.d/acerts
rereading attribute certificates from '%s'
%s.plugins.stroke.ignore_missing_ca_basic_constraint
%s.plugins.stroke.secrets_file
loading ca certificates from '%s'
loading aa certificates from '%s'
loading ocsp signer certificates from '%s'
loading attribute certificates from '%s'
rereading ca certificates in ca sections
failed to reload certificate '%s', removing ca '%s'
unable to use hash-and-url: sha1 not supported
List of CA Information Sections:
  authname:    "%Y"
  authkey:      %#B
  keyid:        %#B
  crluris:     
  ocspuris:    
  certuribase: '%s'
no ca named '%s' found
missing cacert parameter
added ca '%s'
reusing virtual IP address pool %s
adding virtual IP address pool %s
ignoring invalid DNS address '%s'
%-18N %12llu
List of IKE counters:
ikeInitRekey
ikeRspRekey
ikeChildSaRekey
ikeInInvalid
ikeInInvalidSpi
ikeInInitReq
ikeInInitRsp
ikeOutInitReq
ikeOutInitRsp
ikeInAuthReq
ikeInAuthRsp
ikeOutAuthReq
ikeOutAuthRsp
ikeInCrChildReq
ikeInCrChildRsp
ikeOutCrChildReq
ikeOutCrChildRsp
ikeInInfoReq
ikeInInfoRsp
ikeOutInfoReq
ikeOutInfoRsp
No IKE counters found for '%s'
List of IKE counters for '%s':
%12s[%d]: Tasks %s: 
 or SKIPPED
local: 
remote:
%12s:   %s
 [%Y]
 uses 
EAP authentication
EAP_%lu-%lu authentication
%N authentication
 with EAP identity '%Y'
%N authentication: %s
 with XAuth identity '%Y'
%N authentication
%12s:    ca:    "%Y"
%12s:    im-ca: "%Y"
%12s:    cert:  "%Y"
%12s:    group: %Y
XAuth
%12s[%d]: %N
 %V ago
, %H[%Y]...%H[%Y]
, rekeying in %V
 reauthentication in %V
, rekeying disabled
%12s[%d]: IKE proposal: %s
queued
active
passive
_PROXY
 in UDP
%12s{%d}:  %N, %N%s, reqid %u
, %N%s SPIs: %.8x_i %.8x_o
, IPCOMP CPIs: %.4x_i %.4x_o
%12s{%d}:  
%s%N
/ESN
, %lu bytes_i
 (%lu pkt%s, %lus ago)
, %lu bytes_o
, rekeying 
, expires in %V
%12s{%d}:   %#R === %#R
 %N[%s]
 [%s]
             
 (not loaded)
  encryption:
  integrity: 
  aead:      
  hasher:    
  prf:       
  dh-group:  
  random-gen:
  nonce-gen: 
List of loaded Plugins:
    %s%s
        %s
        %s (soft)
online
offline
  %15H   %s   '%Y'
  no matching leases found
pool '%s' not found
no pools found
, %s %s, %s
  uptime: %V, since %T
%s%d
 working, job queue: 
, scheduled: %d
  loaded plugins: %s
  %s: %u/%u/%u
Listening IP addresses:
  %H
%12s:  %s...%s  %N
 Aggressive
, dpddelay=%us
, dpdaction=%N
Shunted Connections:
%12s:  %#R === %#R %N
Routed Connections:
  no match
  none
strong
weak
%12s:    ocsp:  status must be GOOD%s
%12s:    crl:   status must be GOOD%s
%12s[%d]: Remote %s identity: %Y
%12s[%d]: %N SPIs: %.16lx_i%s %.16lx_r%s
List of registered IKE algorithms:
Leases in pool '%s', usage: %u/%u, %u online
Status of IKE charon daemon (%sSwan 5.5.0
  malloc: sbrk %u, mmap %u, used %u, free %u
  worker threads: %d of %d idle, 
Virtual IP pools (size/online/offline):
%12s:   child:  %#R === %#R %N
Security Associations (%u up, %u connecting):
charon.i_dont_care_about_security_and_use_aggressive_mode_psk
;*3$"
libstrongswan-stroke.so.debug
7zXZ
P]_&g
I<VT
[<pI
	;UO
,@*L
x>XU
/uQK
ka("K
qd]IC
Z]xB
XfX\
Il:n
B^v,w
JR25
nOs2J
{mqS
wO]t(eA
Pl!-+
:	s(
m]JR}
f!6*
tYo%0
	& O(
i4r[
I7i?
:y:m
s	qZ
K4.(
y9l/Zw
(UKc
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.init
.plt
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.data.rel.ro
.dynamic
.data
.bss
.gnu_debuglink
.gnu_debugdata
