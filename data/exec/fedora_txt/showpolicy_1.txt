/lib64/ld-linux-x86-64.so.2
libgmp.so.3
__gmon_start__
_Jv_RegisterClasses
libnspr4.so
libnss3.so
libc.so.6
socket
strcpy
__printf_chk
exit
perror
connect
puts
__stack_chk_fail
abort
memchr
getnetbyname
strtol
isatty
strlen
memset
strstr
__errno_location
bind
read
__fprintf_chk
memcpy
setsockopt
malloc
getpeername
getenv
__ctype_b_loc
optarg
stderr
getopt_long
strncat
sendmsg
close
strchr
getsockname
gethostbyname2
__cxa_finalize
fcntl
recvmsg
__libc_start_main
write
free
_edata
__bss_start
_end
__libc_csu_fini
__libc_csu_init
GLIBC_2.4
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.2.5
%zG 
%rG 
%jG 
%bG 
%ZG 
%RG 
%JG 
%BG 
%:G 
%2G 
%*G 
%"G 
ATSubH
=g@ 
D$(1
T$(dH3
0[]A\
AWAVAUATI
D$@H
T$0H
D$8H
T$0H
T$(H
|$$H
T$P1
t$@H
\$`H
l$`H
T$(H
D$0Mc
|$$L
t$@H
T$P1
[]A\A]A^A_
D$`H
D$hH
l$`H
l$PdH
9kd~?Lc
[]A\
T$ H
D$(f.
[]A\A]A^A_
gt&A
it_A
t$@D
D$x1
T$xdH3
/var/runH
/pluto/pH
luto.infH
l$ L
d$(L
l$0H
ffff.
d$ H
t$ H
fff.
l$ L
d$(L
l$0L
t$8L
|$@H
<8Hc
:u	H
ffff.
D$x1
T$xdH3
T$ A
T$ E1
IP6.ARPAfA
L+d$
T$ E1
T$ E1
IN-ADDR.A
ARPAfA
fff.
AVAUA
D$x1
T$xdH3
[]A\A]A^A_
ffff.
AWAVAUATI
D$H1
T$(L
t$0E1
8:t=f
T$HdH3
X[]A\A]A^A_
|$(I
|$0t
\$(H
l$0H
8?t4
u(L9
9.u1I
l$ L
t$(L
|$0H
l$ L
t$(L
|$0H
l$ L
t$(L
|$0H
l$ H
l$ H
d$ L
l$(L
t$0H
d$ H
AWAVI
AUATA
=V! 
tb+D$
[]A\A]A^A_
[]A\A]A^A_
D$(1
dt/1
T$(dH3
fffff.
l$ L
t$(L
|$0H
Usage:
showpolicy [--cgi]        lookup the particulars from CGI variables.
 [--socket]     lookup the particulars from the socket on stdin.
 [--udp X]      open a UDP socket on port X
 [--tcp X]      open a TCP socket on port X
 [--sockpolicy] dump based upon IP_IPSEC_RECVREF.
 [--textual]    dump output in human friendly form
 [--plaintext X]    string to dump if no security
 [--vpntext X]      string to dump if VPN configured tunnel
 [--privacytext X]  string to dump if just plain DNS OE
 [--dnssectext X]   string to dump if just DNSSEC OE
Openswan %s
     ref=%08x (%u) him=%08x (%u)
Results of query on %s -> %s with seq %d
	DNSSEC identity: %s (SIG %s)
please run this connected to a socket
invalid packetcount number: %s
bind
setsockopt recvref
got message of length: %d
cmsg_level: %d type: %d
     sending with saref=%d
sendmsg
sent message of length: %d
Received reply of %d bytes.
Strength:   %d
Bandwidth:  %d
authdetail: %d
esp_detail: %d
comp_detail: %d
credentials: %d
	local identity: %s
	DNS identity: %s
	Unknown identity type %d
secure
private
clear
Openswan %s
invalid port number: %s
hVighc:v:p:s:
help
version
sockpolicy
textual
plaintext
maxpacket
vpntext
privacytext
dnssectext
failed to open policy socket
read failed
bad policy msg version magic
short read from socket
Bad magic header: %u
write failed
getsockname failed
getpeername failed
failed to connect policy socket
buffer too small for this message
$SERVER_ADDR and $REMOTE_ADDR must be set
SERVER_ADDR
REMOTE_ADDR
Openswan 2.6.29
2.6.29
:0:0:
<invalid>
illegal (non-DNS-name) character in name
unable to get temporary space for name
does not look numeric and name lookup failed
address-type mismatch from gethostbyname2!!!
address-type mismatch from getnetbyname!!!
non-hex field in IPv6 numeric address
field in IPv6 numeric address longer than 4 hex digits
illegal leading `:' in IPv6 numeric address
illegal trailing `:' in IPv6 numeric address
more than one :: in IPv6 numeric address
IPv6 numeric address ends prematurely
syntax error in IPv6 numeric address
extra garbage on end of IPv6 numeric address
incomplete IPv6 numeric address (internal error)
non-abbreviating empty field in IPv6 numeric address
internal error, tryhex called with bad length
?empty number in dotted-decimal address
?non-numeric component in dotted-decimal address
byte overflow in dotted-decimal address
?syntax error in dotted-decimal address
syntax error in dotted-decimal address
extra garbage on end of dotted-decimal address
non-ipv6 address may not contain `:'
does not appear to be either IPv4 or IPv6 numeric address
does not appear to be numeric address
unknown address family in tnatoaddr
invalid address family
not numeric
empty string
abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-_.
unsigned-long overflow
unsupported number base
non-hex digit in hex number
hex number too long
non-digit in number
0123456789abcdef
unknown address family in anyaddr/unspecaddr
unknown address family in loopbackaddr
unknown address family in add_port
IPv4 address must be exactly 4 bytes
IPv6 address must be exactly 16 bytes
unknown address family in initaddr
RCSID $Id: showpolicy.c,v 1.5 2004/04/04 01:50:56 ken Exp $
0123456789ABCDEF
0123456789abcdef
showpolicy.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.note.ABI-tag
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.interp
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rela.plt
.got.plt
.got
.text
