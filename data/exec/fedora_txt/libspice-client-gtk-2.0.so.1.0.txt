__gmon_start__
__cxa_finalize
_Jv_RegisterClasses
g_log
g_main_loop_is_running
g_main_loop_quit
g_type_class_peek_parent
g_type_check_class_cast
gtk_widget_get_type
g_param_spec_boolean
g_object_class_install_property
g_cclosure_marshal_VOID__INT
g_signal_new
g_cclosure_marshal_VOID__VOID
g_type_class_add_private
spice_util_get_debug
g_return_if_fail_warning
gdk_atom_intern_static_string
gtk_selection_data_set
g_type_check_instance_cast
gtk_widget_get_window
gdk_window_set_cursor
spice_display_get_type
g_once_init_enter_impl
g_intern_static_string
gtk_drawing_area_get_type
g_type_register_static_simple
g_once_init_leave
g_type_instance_get_private
g_main_loop_new
g_signal_connect_data
g_timeout_add_seconds
spice_main_clipboard_selection_request
gdk_threads_unlock
g_main_loop_run
gdk_threads_lock
g_main_loop_unref
g_signal_handler_disconnect
g_source_remove
gdk_atom_name
strcasecmp
spice_main_clipboard_selection_grab
gtk_widget_is_focus
gtk_widget_has_focus
gdk_keyboard_grab
g_signal_emit
gdk_window_object_get_type
gtk_widget_get_realized
gdk_pointer_grab
g_warn_message
gdk_pointer_ungrab
g_signal_handlers_disconnect_matched
g_object_get
gtk_widget_queue_draw_area
spice_main_set_display
gtk_widget_set_size_request
spice_main_channel_get_type
g_type_check_instance_is_a
spice_display_channel_get_type
spice_cursor_channel_get_type
spice_inputs_channel_get_type
spice_smartcard_channel_get_type
spice_usbredir_channel_get_type
spice_usb_device_manager_get
spice_usb_device_manager_unregister_channel
gdk_cursor_new
gtk_widget_get_screen
gdk_cursor_unref
gdk_drawable_get_size
gdk_window_get_origin
gtk_widget_get_display
gdk_display_warp_pointer
gdk_pixbuf_new_from_data
gdk_cursor_new_from_pixbuf
g_object_unref
gtk_widget_get_parent_window
gdk_x11_window_get_drawable_impl
gdk_x11_drawable_get_xdisplay
XGetKeyboardControl
spice_inputs_set_key_locks
__stack_chk_fail
spice_channel_connect
spice_usb_device_manager_register_channel
spice_main_set_display_enabled
gdk_window_invalidate_rect
gtk_clipboard_clear
gtk_clipboard_request_contents
gtk_selection_data_get_length
gtk_selection_data_get_data
spice_main_clipboard_selection_notify
gtk_selection_data_get_data_type
g_memdup
gtk_clipboard_set_with_data
gdk_keymap_get_default
gdk_keymap_get_entries_for_keyval
spice_inputs_key_release
spice_inputs_key_press
gdk_keyboard_ungrab
g_object_set
g_type_name
g_value_get_boolean
g_value_set_boolean
spice_grab_sequence_free
spice_main_clipboard_selection_release
gtk_clipboard_request_targets
spice_inputs_button_press
spice_inputs_button_release
gtk_widget_get_pointer
gtk_widget_grab_focus
ceil
spice_inputs_motion
spice_inputs_position
gdk_screen_get_width
gdk_screen_get_height
memset
gtk_widget_add_events
gtk_widget_set_double_buffered
gtk_widget_set_can_focus
spice_grab_sequence_new_from_string
g_malloc0_n
gtk_clipboard_get
g_getenv
spice_display_set_grab_keys
spice_grab_sequence_copy
spice_display_get_grab_keys
spice_display_send_keys
spice_display_new
g_object_new
g_object_ref
spice_session_get_channels
g_list_first
g_list_free
spice_display_mouse_ungrab
spice_display_copy_to_guest
spice_display_paste_from_guest
spice_display_get_pixbuf
g_malloc
gdk_display_get_default
gdk_x11_display_get_xdisplay
XkbGetKeyboard
gdk_x11_get_xatom_name
XkbFreeClientMap
strstr
XListExtensions
XFreeExtensionList
g_slice_free1
g_slice_copy
memcpy
spice_grab_sequence_get_type
g_boxed_type_register_static
spice_grab_sequence_new
g_slice_alloc0
g_strsplit
gdk_keyval_from_name
g_strfreev
spice_grab_sequence_as_string
g_string_new
gdk_keyval_name
g_string_append
g_string_insert_c
g_string_free
cairo_image_surface_create_for_data
g_malloc0
cairo_surface_finish
cairo_scale
cairo_set_source_surface
cairo_paint
cairo_rectangle
cairo_fill
gdk_cairo_create
cairo_clip
cairo_destroy
spice_display_key_event_get_type
g_enum_register_static
libspice-client-glib-2.0.so.1
libcelt051.so.0
libjpeg.so.62
libpixman-1.so.0
libssl.so.10
libcrypto.so.10
libz.so.1
libpulse-mainloop-glib.so.0
libpulse.so.0
libsasl2.so.2
libcacard.so.0
libssl3.so
libsmime3.so
libnss3.so
libnssutil3.so
libplds4.so
libplc4.so
libnspr4.so
libpthread.so.0
libdl.so.2
libgudev-1.0.so.0
libusb-1.0.so.0
libusbredirhost.so.1
libgtk-x11-2.0.so.0
libgdk-x11-2.0.so.0
libatk-1.0.so.0
libgio-2.0.so.0
libpangoft2-1.0.so.0
libpangocairo-1.0.so.0
libgdk_pixbuf-2.0.so.0
libpng12.so.0
libm.so.6
libpango-1.0.so.0
libfreetype.so.6
libfontconfig.so.1
libgobject-2.0.so.0
libgmodule-2.0.so.0
libgthread-2.0.so.0
librt.so.1
libglib-2.0.so.0
libcairo.so.2
libc.so.6
libspice-client-gtk-2.0.so.1
SPICEGTK_1
GLIBC_2.4
GLIBC_2.14
GLIBC_2.2.5
ATSubH
[A\]
ATUH
[]A\
H9wPt
H9wX
ffffff.
A9q(H
t'[H
fffff.
ffff.
t$(H
D$ H
|$ H
\$8H
l$@L
d$HL
l$PL
t$XL
|$`H
fff.
AWAVAUATI
D$ I
Hcl$
X[]A\A]A^A_
\$ 1
X[]A\A]A^A_
t$ H
t$ 1
l$ H
l$ H
l$ H
ffffff.
,$E1
fff.
,$E1
AWAVAUATUSH
L$4D
D$0L
|$0D
l$4D
H[]A\A]A^A_
D$0H
L$4H
T$8H
l$0D
\$<H
H[]A\A]A^A_
L$(H
D;t$
\$ L
T$(1
D;t$
ffffff.
 []A\
 []A\1
fffff.
T$PL
|$XE
l$ L
d$(L
l$0L
t$8L
|$@H
l$ H
d$(H
l$0L
t$8L
|$@H
,$E1
ffff.
ATUH
[]A\
[]A\
[]A\
H;0t
H;0t
H;0t
H;0t
fff.
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
l$pA
L$$E
D$(B
T$$I
\$8H
l$@L
d$HL
l$PL
t$XL
|$`H
D$H1
D$HdH3
fff.
ATUH
[]A\
[]A\
H;0t
t	H;0
t	H;
ffffff.
AUATA
D9"t;
[]A\A]
[]A\A]
l$ L
d$(L
t$8L
|$@H
l$ L
d$(L
l$0L
t$8L
|$@H
AVAUATUSH
-v^ 
tq9t
|$ D
[]A\A]A^A_
t$ D
t$ H
t$ H
ffffff.
5-e 
fffff.
\$8H
l$@L
d$HL
l$PL
t$XL
|$`H
T$,H
t$(H
l$(H
\$ H
l$(L
d$0L
l$8L
t$@H
\$ H
l$(L
d$0L
l$8L
t$@H
,$E1
,$E1
tLLc
t$ H
t$ H
t$ H
ATUH
ffff.
K t1
;H4u
xC;E
x:;U
\$(H
l$0L
d$8L
l$@H
ffffff.
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
ffff.
AVAUATUSH
[]A\A]A^
fff.
fff.
AVAUI
ATUSH
t-H9
5bQ 
[]A\A]A^
fffff.
ATUH
[]A\
[]A\
ffffff.
AVAUA
~(E1
[]A\A]A^
[]A\A]A^H
ffffff.
AUATA
[]A\A]
fff.
AVAUI
ATE1
[]A\A]A^
[]A\A]A^
[]A\A]A^
ffff.
ffff.
AVAUATUSH
]A\A]A^
ATE1
[]A\A]
l$ L
d$(L
l$0L
t$8L
|$@H
*[ I
l$ L
d$(L
l$0L
t$8L
|$@H
5i4 
clipboard get timed out
GSpice
Grab Keyboard
grab-keyboard
Grab Mouse
grab-mouse
Resize guest
resize-guest
Auto clipboard
auto-clipboard
Auto USB Redirection
auto-usbredir
Whether we should use scaling
Scaling
mouse-grab
keyboard-grab
grab-keys-pressed
Unhandled clipboard
selection == ri->selection
spice-widget.c:1589 %s
SpiceDisplay
main-clipboard-selection
spice-widget.c:1174 %s:
spice-widget.c:1178  "%s"
selection != -1
keyboard grab failed %d
gtk_widget_is_focus(widget)
gtk_widget_has_focus(widget)
pointer grab failed %d
spice-widget.c
mouse-mode
channel-id
main-mouse-update
main-clipboard-selection-grab
display-primary-create
display-primary-destroy
display-invalidate
display-mark
cursor-set
cursor-move
cursor-hide
cursor-reset
clipboard grab failed
cb != NULL
auto-connect
property
spice-widget.c:208
spice-widget.c:153
spice-widget.c:1006 %s
press
release
spice-widget.c:729 %s
spice-widget.c:898 %s
spice-widget.c:872 %s
spice-widget.c:861 %s
spice-widget.c:850 %s
Control_L+Alt_L
owner-change
SPICE_DEBUG_CURSOR
d != NULL
spice-widget.c:832 %s
keyvals != NULL
channel-new
channel-destroy
Clipboard grab failed
UTF8_STRING
text/plain;charset=utf-8
TEXT
text/plain
image/png
image/bmp
image/x-bmp
image/x-MS-bmp
image/x-win-bitmap
image/tiff
image/jpeg
Whether we should grab the keyboard.
Whether we should grab the mouse.
Try to adapt guest display on window resize. Requires guest cooperation.
Automatically relay clipboard changes between host and guest.
Automatically redirect newly plugged in USBDevices to the guest.
spice-widget.c:1720 clipboard_clear
spice-widget.c:1660 clipboard got data
spice-widget.c:1585 %s: no window, returning
spice-widget.c:1689 clipboard get
info < SPICE_N_ELEMENTS(atom2agent)
get_selection_from_clipboard(d, clipboard) != -1
spice-widget.c:395 grab keyboard
spice-widget.c:1410 mouse mode %d
d->format == SPICE_SURFACE_FMT_16_555 || d->format == SPICE_SURFACE_FMT_16_565
spice-widget.c:576 monitors: id %d, guest %dx%d, window %dx%d, offset +%d+%d
spice-widget.c:1947 channel_destroy %d
spice-widget.c:1546 %s: +%d+%d
main-clipboard-selection-request
main-clipboard-selection-release
spice-widget.c:1481 widget mark: %d, channel %d
Unhandled clipboard selection: %d
m < SPICE_N_ELEMENTS(atom2agent)
spice-widget.c:1793 empty clipboard
spice-widget.c:1796 TODO: what should be done here?
clipboard_received for unsupported type: %s
clipboard: couldn't find a matching type for: %d
i < SPICE_N_ELEMENTS(atom2agent)
i < SPICE_N_ELEMENTS(d->key_state)
spice-widget.c:421 ungrab keyboard
%s: invalid %s id %u for "%s" of type `%s' in `%s'
spice-widget.c:251 Finalize spice display
spice-widget.c:218 spice display dispose
spice-widget.c:1016 unsupported scroll direction
spice-widget.c:1034 %s %s: button %d, state 0x%x
spice-widget.c:523 skip mouse_check_edges
spice-widget.c:775 %s %s: keycode: %d  state: %d  group %d
SPICE_DISPLAY(display) != NULL
Guest clipboard is not available.
try_keyboard_grab
update_mouse_pointer
cursor_reset
cursor_move
do_color_convert
clipboard_received_cb
clipboard_request
clipboard_grab
clipboard_get
clipboard_got_from_guest
clipboard_owner_change
clipboard_get_targets
clipboard_get_targets
scroll_event
button_event
motion_event
focus_out_event
release_keys
send_key
focus_in_event
leave_event
enter_event
key_event
spice_display_set_grab_keys
spice_display_get_grab_keys
spice_display_send_keys
spice_display_send_keys
spice_display_get_pixbuf
could not lookup keycode name
vnc-keymap
Cygwin/X
Apple-WM
Apple-DRI
evdev_
xfree86_
vncdisplaykeymap.c:166 Using xwin keycode mapping
vncdisplaykeymap.c:170 Using xquartz keycode mapping
vncdisplaykeymap.c:174 Using evdev keycode mapping
vncdisplaykeymap.c:178 Using xfree86 keycode mapping
Unknown keycode mapping '%s'.
Please report to gtk-vnc-list@gnome.org
including the following information:
  - Operating system
  - GDK build
  - X11 Server
  - xprop -root
  - xdpyinfo
SpiceGrabSequence
Invalid key: %s
SpiceDisplayKeyEvent
SPICE_DISPLAY_KEY_EVENT_PRESS
SPICE_DISPLAY_KEY_EVENT_CLICK
click
SPICE_DISPLAY_KEY_EVENT_RELEASE
;*3$"
libspice-client-gtk-2.0.so.1.0.2.debug
.data
.rodata
.shstrtab
.dynamic
.gnu.version_d
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rela.plt
.got.plt
.got
.text
