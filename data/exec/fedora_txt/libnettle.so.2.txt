P!`@D*	
x*V$
l3EY
0|%;
v;-9
b%5q
uMCE
/1}h
OL$}x
 SM5
__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
_nettle_aes_decrypt
__assert_fail
_nettle_aes_encrypt
_nettle_aes_encrypt_table
nettle_aes_set_encrypt_key
nettle_aes_set_decrypt_key
nettle_aes128
nettle_aes192
nettle_aes256
nettle_arcfour_stream
nettle_arcfour_set_key
nettle_arcfour_crypt
nettle_arcfour128
nettle_arctwo_set_key_ekb
nettle_arctwo_set_key_gutmann
nettle_arctwo_set_key
nettle_arctwo_decrypt
nettle_arctwo_encrypt
nettle_arctwo40
nettle_arctwo64
nettle_arctwo128
nettle_arctwo_gutmann128
nettle_base16_encode_single
nettle_base16_encode_update
nettle_base16_decode_init
nettle_base16_decode_final
nettle_base16_decode_single
nettle_base16_decode_update
abort
nettle_base16
nettle_base64_encode_group
nettle_base64_encode_init
nettle_base64_encode_final
nettle_base64_encode_single
nettle_base64_encode_raw
nettle_base64_encode_update
nettle_base64_decode_init
nettle_base64_decode_final
nettle_base64_decode_single
nettle_base64_decode_update
nettle_base64
nettle_cast128_set_key
nettle_cast128_decrypt
nettle_cast128_encrypt
nettle_cast128
nettle_blowfish_set_key
nettle_blowfish_decrypt
nettle_blowfish_encrypt
memxor
memcpy
nettle_cbc_decrypt
nettle_cbc_encrypt
nettle_ctr_crypt
memxor3
nettle_des_fix_parity
nettle_des_set_key
nettle_des_decrypt
nettle_des_encrypt
nettle_des3_decrypt
nettle_des3_encrypt
nettle_des3_set_key
nettle_openssl_des_ecb3_encrypt
nettle_openssl_des_ecb_encrypt
nettle_openssl_des_is_weak_key
nettle_openssl_des_set_odd_parity
nettle_openssl_des_key_sched
nettle_openssl_des_check_key
nettle_openssl_des_ede3_cbc_encrypt
nettle_openssl_des_ncbc_encrypt
nettle_openssl_des_cbc_encrypt
nettle_openssl_des_cbc_cksum
nettle_hmac_update
nettle_hmac_digest
nettle_hmac_set_key
memset
nettle_hmac_md5_digest
nettle_md5
nettle_hmac_md5_update
nettle_md5_update
nettle_hmac_md5_set_key
nettle_hmac_sha1_digest
nettle_sha1
nettle_hmac_sha1_update
nettle_sha1_update
nettle_hmac_sha1_set_key
nettle_hmac_sha256_digest
nettle_sha256
nettle_hmac_sha256_update
nettle_sha256_update
nettle_hmac_sha256_set_key
nettle_knuth_lfib_init
nettle_knuth_lfib_get
nettle_knuth_lfib_random
nettle_knuth_lfib_get_array
nettle_md2_init
nettle_md2_digest
nettle_md2_update
nettle_md2
nettle_md4_init
nettle_md4_digest
nettle_md4_update
nettle_md4
nettle_md5_init
nettle_md5_digest
_nettle_md5_compress
_nettle_sha1_compress
nettle_MD5Final
nettle_MD5Update
nettle_MD5Init
nettle_sha1_init
nettle_sha1_digest
nettle_sha256_init
nettle_sha256_digest
nettle_serpent_decrypt
nettle_serpent_encrypt
nettle_serpent_set_key
nettle_serpent128
nettle_serpent192
nettle_serpent256
nettle_twofish_decrypt
nettle_twofish_encrypt
nettle_twofish_set_key
__memcpy_chk
nettle_twofish128
nettle_twofish192
nettle_twofish256
nettle_yarrow256_is_seeded
nettle_yarrow256_needed_sources
nettle_yarrow256_init
nettle_yarrow256_random
nettle_yarrow256_force_reseed
nettle_yarrow256_seed
nettle_yarrow256_update
nettle_yarrow_key_event_init
nettle_yarrow_key_event_estimate
nettle_sexp_iterator_first
nettle_sexp_iterator_enter_list
nettle_sexp_iterator_next
nettle_sexp_iterator_exit_list
nettle_sexp_iterator_check_types
strlen
nettle_sexp_iterator_check_type
nettle_sexp_iterator_get_uint32
nettle_sexp_iterator_subexpr
nettle_sexp_iterator_assoc
nettle_buffer_grow
nettle_buffer_write
nettle_sexp_vformat
strcspn
nettle_mpz_sizeinbase_256_s
nettle_buffer_space
nettle_mpz_get_str_256
nettle_sexp_format
nettle_sexp_transport_iterator_first
memmove
nettle_sexp_transport_vformat
nettle_sexp_transport_format
nettle_mpz_init_set_str_256_u
__gmpz_init
__gmpz_import
nettle_mpz_set_str_256_u
nettle_mpz_set_str_256_s
__gmpz_set_ui
__gmpz_init_set_ui
__gmpz_mul_2exp
__gmpz_sub
__gmpz_clear
nettle_mpz_init_set_str_256_s
nettle_mpz_sizeinbase_256_u
__gmpz_sizeinbase
__gmpz_com
nettle_mpz_random_size
__gmpz_fdiv_r_2exp
nettle_mpz_random
__gmpz_fdiv_r
nettle_mpz_set_sexp
nettle_pkcs1_signature_prefix
nettle_pkcs1_rsa_md5_encode_digest
nettle_pkcs1_rsa_md5_encode
nettle_pkcs1_rsa_sha1_encode_digest
nettle_pkcs1_rsa_sha1_encode
nettle_pkcs1_rsa_sha256_encode_digest
nettle_pkcs1_rsa_sha256_encode
_nettle_rsa_check_size
nettle_rsa_public_key_prepare
nettle_rsa_public_key_clear
nettle_rsa_public_key_init
nettle_rsa_private_key_init
nettle_rsa_compute_root
__gmpz_powm
__gmpz_mul
__gmpz_add
nettle_rsa_private_key_clear
nettle_rsa_private_key_prepare
_nettle_rsa_verify
__gmpz_cmp
nettle_rsa_md5_sign_digest
nettle_rsa_md5_sign
nettle_rsa_md5_verify_digest
nettle_rsa_md5_verify
nettle_rsa_sha1_sign_digest
nettle_rsa_sha1_sign
nettle_rsa_sha1_verify_digest
nettle_rsa_sha1_verify
nettle_rsa_sha256_sign_digest
nettle_rsa_sha256_sign
nettle_rsa_sha256_verify_digest
nettle_rsa_sha256_verify
nettle_rsa_encrypt
nettle_rsa_decrypt
memchr
__gmpz_cmp_ui
__gmpz_set
__gmpz_setbit
__gmpz_fdiv_ui
__gmpz_add_ui
__gmpz_probab_prime_p
nettle_rsa_generate_keypair
__gmpz_tstbit
__gmpz_sub_ui
__gmpz_gcd
__gmpz_invert
nettle_R_VerifyFinal
nettle_R_SignFinal
nettle_R_SignUpdate
nettle_R_VerifyUpdate
nettle_R_SignInit
nettle_R_VerifyInit
nettle_rsa_keypair_to_sexp
nettle_rsa_keypair_from_sexp_alist
nettle_rsa_keypair_from_sexp
nettle_dsa_signature_clear
nettle_dsa_private_key_clear
nettle_dsa_public_key_clear
nettle_dsa_signature_init
nettle_dsa_private_key_init
nettle_dsa_public_key_init
nettle_dsa_sign_digest
__gmpz_init_set
nettle_dsa_sign
nettle_dsa_verify_digest
nettle_dsa_verify
nettle_dsa_generate_keypair
__gmpz_divexact
nettle_dsa_signature_from_sexp
nettle_dsa_keypair_from_sexp_alist
nettle_dsa_keypair_from_sexp
nettle_pgp_put_string
nettle_pgp_sub_packet_start
nettle_pgp_put_uint16
nettle_pgp_put_uint32
nettle_pgp_crc24
nettle_pgp_sub_packet_end
nettle_pgp_put_length
nettle_pgp_put_sub_packet
nettle_pgp_put_header
nettle_pgp_put_userid
nettle_pgp_armor
nettle_pgp_put_header_length
nettle_pgp_put_mpi
nettle_pgp_put_rsa_sha1_signature
nettle_pgp_put_public_rsa_key
nettle_rsa_keypair_to_openpgp
time
nettle_asn1_der_iterator_next
nettle_asn1_der_iterator_first
nettle_asn1_der_get_uint32
nettle_asn1_der_get_bignum
nettle_asn1_der_decode_bitstring
nettle_asn1_der_decode_bitstring_last
nettle_asn1_der_decode_constructed
nettle_asn1_der_decode_constructed_last
nettle_rsa_public_key_from_der_iterator
nettle_rsa_private_key_from_der_iterator
nettle_rsa_keypair_from_der
nettle_buffer_init_realloc
nettle_buffer_init_size
nettle_buffer_clear
nettle_buffer_reset
nettle_buffer_copy
nettle_buffer_init
nettle_realloc
nettle_xrealloc
stderr
__fprintf_chk
nettle_des
nettle_des3
nettle_blowfish128
libc.so.6
__stack_chk_fail
_edata
__bss_start
libnettle.so.2
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.3.4
GLIBC_2.0
SUVW
_^][
SUVW
_^][
\[^_]
L[^_]
<[^_]
SUVW
_^][
[^_]
?f+4x
L[^_]
l[^_]
[^_]
[^_]
,[^_]
,[^_]
[^_]
[^_]
D[^_]
HD3P
<[^_]
HH+}
HT+}
x 1M
H`+}
P(3}
P8+U
<[^_]
98tY
$[^_]
[^_]
<[^_]
[^_]
,[^_]
[^_]
[^_]
[^_]
=PQAAw]= !11
=`aaaw'=TUDD
=QQAA
tL=RRCC
<=dedd
w`=aaaa
t,=bbcc
=$%44
v)=%%44
=&&66
=!!11t
=""33
=eedd
=ffff
=UUDD
=VVFF
3333
UUUU1
UUUU1
%3333
[^_]
33331
UUUU1
UUUU1
%3333
[^_]
[^_]
[^_]
<[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
,[^_]
,[^_]
,[^_]
\^_]
D^_]
l[^_]
?v21
,[^_]
,[^_]
,[^_]
,[^_]
?v\1
~Xu	
,[^_]
,[^_]
,[^_]
SUVW
QZ^&
_^][
,[^_]
?v\1
~\u	
,[^_]
,[^_]
,[^_]
SUVW
<$3|$
3|$ 3|$4
3|$$3|$8
3|$(3|$<
3|$,3<$
3|$03|$
3|$43|$
3|$ 3|$83|$
3|$$3|$<3|$
|$ 3|$(3<$3|$
|$$3|$,3|$
|$(3|$03|$
|$,3|$43|$
3|$ 
|$03|$83|$
3|$$
|$43|$<3|$
3|$(
|$83<$3|$
3|$,
|$<3|$
3|$0
<$3|$
3|$ 3|$4
3|$$3|$8
3|$(3|$<
3|$,3<$
3|$03|$
3|$43|$
3|$ 3|$83|$
3|$$3|$<3|$
|$ 3|$(3<$3|$
|$$3|$,3|$
|$(3|$03|$
|$,3|$43|$
3|$ 
|$03|$83|$
3|$$
|$43|$<3|$
3|$(
|$83<$3|$
3|$,
|$<3|$
3|$0
<$3|$
3|$ 3|$4
3|$$3|$8
3|$(3|$<
3|$,3<$
3|$03|$
3|$43|$
3|$ 3|$83|$
3|$$3|$<3|$
|$ 3|$(3<$3|$
|$$3|$,3|$
|$(3|$03|$
|$,3|$43|$
3|$ 
|$03|$83|$
3|$$
|$43|$<3|$
3|$(
|$83<$3|$
3|$,
|$<3|$
3|$0
<$3|$
3|$ 3|$4
3|$$3|$8
3|$(3|$<
3|$,3<$
3|$03|$
3|$43|$
3|$ 3|$83|$
3|$$3|$<3|$
|$ 3|$(3<$3|$
|$$3|$,3|$
|$(3|$03|$
|$,3|$43|$
3|$ 
|$03|$83|$
3|$$
|$43|$<3|$
3|$(
|$83<$3|$
3|$,
|$<3|$
3|$0
D_^][
[^_]
D^_]
?v51
,[^_]
,[^_]
l[^_]
3H|3Px
3V,1
3~ 1
L[^_]
3x 3P(3p,
3P03x43p<3H8
3pD3xL
3PH3H@
3x\3pT3HP
3pX3u
3pl3xh
3xx3Pp3p|
L[^_]
[^_]
 ^_1
[^_]
[^_]
[^_]
[^]f
[^_]
L[^_]
[^_]
L[^_]
QDt*1
;B u
tus#
[^_]
t(9N
,[^_
[^_]
>)vF
L[^_]
uf;G
t4;u
\[^_]
<;t$<{f
tN< 
L[^_]
[^_]
L[^_]
?=vO
?=vO
?=vO
?=vO
?=vO
?=vO
[^_]
[^_]
,[^_]
E 9E$
[^_]
[^_]
[^_]
\[^_]
[^_]
l[^_]
[^_]
[^_]
<[^_]
[^_]
aes-decrypt.c
!(length % 16)
lpHP
P~AeS
-Xt!
X>k'
Q3`bS
pHhX
lZrN
6-9'
$6.:
ZwKi
T~Fb
&x	nY
*?#1
>8$4,
pHl\t
WBPQ
S~Ae
Xt!)I
Q3EbS
+XpHh
@Cwg
pNlZr
'6-9d
[T:$6.
 iZwK
*C<"
Df;4[
bT~F
1*?#0
f7tN
,8$4_
(<IA
tHl\B
eS~A
U 0m
Xti)I
EbSw
hXpH
*fU(
H2+p
rNlZ
9'6-
!h\T
[.:$6g
KiZw
Df~4[
Bc"@
j_FbT~
#1*?
h4,8$@_
2\tHlWB
PQAeS~
U vm
Ebdw
HhXpE
ZrNl
=-9'6
!h[T
6.:$
awKiZ
~4[C)v
j~FbT
1?#1*
[_=o
$4,8
l\tH
nettle_aes_decrypt
aes-encrypt.c
nettle_aes_encrypt
c|w{
9JLX
~=d]
T`00P
V++}
L&&jl66Z~??A
Oh44\Q
sb11S*
RF##e
&N''i
X,,t4
v;;M
R)){
>^//q
,@  `
r99K
f33U
x<<D%
p88H
uB!!c 
z==G
D""fT**~;
;d22Vt::N
H$$l
Cn77Y
J%%o\..r8
|>>Bq
j55_
P((x
Z--w
P`00
gg}V++
jL&&Zl66A~??
\h44
Sb11?*
eF##^
iN''
tX,,.4
RRMv;;a
{R))>
q^//
`@  
Kr99
MMUf33
PPDx<<
Hp88
cB!!0 
DD9.
~~Gz==
]]+2
fD""~T**
Vd22Nt::
lH$$
Yn77
xxoJ%%r\..$8
tt!>
ppB|>>
aa_j55
UUxP((z
wZ--
0P`0
g+}V+
&jL&6Zl6?A~?
4\h4
1Sb1
#eF#
'iN'
,tX,
R;Mv;
){R)
/q^/
 `@ 
9Kr9J
M3Uf3
P<Dx<
8Hp8
!cB!
~=Gz=d
"fD"*~T*
2Vd2:Nt:
$lH$\
7Yn7m
x%oJ%.r\.
p>B|>
a5_j5W
U(xP(
-wZ-
00P`
++}V
=&&jL66Zl??A~
44\h
11Sb
##eF
''iN
,,tX
-6nn
;;Mv
})){R
//q^
  `@
g99KrJJ
33Uf
<<Dx
!88Hp
!!cB
==Gzdd
+2ss
""fD**~T
22Vd::Nt
$$lH\\
77Ynmm
%%oJ..r\
!>KK
>>B|
55_jWW
3"ii
((xP
)--wZ
:,aes-set-encrypt-key.c
keysize >= 16
keysize <= 32
x < 0x100
nettle_aes_set_encrypt_key
xtime
	xe/
B:k(T
aes128
aes192
aes256
arcfour.c
length >= 1
length <= 256
nettle_arcfour_set_key
arcfour128
arctwo.c
length <= 128
ekb <= 1024
!((length) % (8))
!"\kN
5Mj*
6[%U
nettle_arctwo_set_key_ekb
nettle_arctwo_decrypt
nettle_arctwo_encrypt
arctwo40
arctwo64
arctwo128
arctwo_gutmann128
0123456789abcdefbase16-decode.c
digit >= 0
digit < 0x10
*dst_length >= (((src_length) + 1) / 2)
done <= (((src_length) + 1) / 2)
nettle_base16_decode_update
nettle_base16_decode_single
base16
base64-encode.c
done <= 3
done <= 2
in == src
out == dst
!(bulk % 3)
done <= (((length) * 8 + 4)/6)
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/nettle_base64_encode_final
nettle_base64_encode_update
nettle_base64_encode_single
nettle_base64_encode_raw
base64-decode.c
data >= 0 && data < 0x40
*dst_length >= ((((src_length) + 1) * 6) / 8)
done <= ((((src_length) + 1) * 6) / 8)
nettle_base64_decode_update
?456789:;<=
 !"#$%&'()*+,-./0123
nettle_base64_decode_single
base64
cast128.c
c8:$
}oaO
]ny`
BN"r
kMxn
FS(l
h,DUu
uU~b
v^FES
SU2`	
-7HD
Es/#
s%iH
SH6tc
*Y#5
/C~A
Sj~=eI
PIMAC
gC_7
F_C)x;
a3bt
Zbby
S4n)
lbfL
Tq*+
S9v.i
+LVvuOx39]O#2
}\cm
xzdD]
vOB9`
pqT3^-ZI
$;g9
A^e$
1d[O~
!![z
M:&)
dU	2
%?/?!
"o;h(Y
T*_}x:
j Bz
u\B&
y7bT
Ab61
T<*2
a.z9
DGt2
&5	M{
yM;-
jMG\^
C?9z
bcKU
!+g\
"%-U^7
PaH?
dv&4
wj-K
.n\	
g&H`
~8lI
d^AE
;]>r
^(O= 
W1O	g_?
*,]I
Fv\;
Eub'z
\j#M
SRqDIK
_maz
mn`I:T`H
{OJW
z(~c
5_	 
=;&o
~?Pa w
WFgO
(>nH&p
gTzu
|k	.T
B=!&|
!\1c
)eyC
nettle_cast128_decrypt
nettle_cast128_encrypt
cast128
blowfish.c
!bc->status
~&jE
 iciNWq
x`\`U
S2zw
Qjh/T
w?6r
\^c$j
yr,@
H{1S
"//w
AJsN
*!ec
pzKD)
ilRdV
)L	u@
?kh	
|sG2
U$qk.
fC	c
27;C
qUN1
/n[(
Ze2Zh@
Wcr"
T0.S
ap?#
r3A~
;"lY7
@n2w
_g@Cg
%xP(
B*k@5
mK1f
n:2C[
V@E'
::SU
^|1)
A4x{%`
no:7
7,gm;
.97yY
Bh;+j
.x7B
{x`M`
BFUa.X
YnFpW
	-f3F2
r9$|
n6j/
HWyn
9)PF
(-}|
W;()f
_xU`u
08bX
w``u N
-%	?
!(Ew
nettle_blowfish_decrypt
nettle_blowfish_encrypt
cbc.c
!(length % block_size)
src != dst
nettle_cbc_decrypt
cbc_decrypt_internal
nettle_cbc_encrypt
des.c
!(length % 8)
ctx->status == DES_OK
nettle_des_decrypt
 nettle_des_encrypt
 -6)#
.!04
'&4!
*+3	
/-"'
!).	1$%
05($
/'74
 /&7
"67&
6".,#
!56)4 
40 !
$hmac.c
key_length <= hash->block_size
nettle_hmac_set_key
knuth-lfib.c
ctx->index < 100
nettle_knuth_lfib_get
md2.c
length <= 16
nettle_md2_digest
2'5>
pYdq
Fai4@~
md4.c
i < 64
i < 4
nettle_md4_digest
md4_final
nettle_md5_digest
md5_final
length <= 20
i < 5
nettle_sha1_digest
sha1_final
length <= 32
i < 8
nettle_sha256_digest
sha256_final
vRQ>
8STs
LwH'
[sha256
serpent.c
!((length) % (16))
key_size >= 16
key_size <= 32
nettle_serpent_decrypt
nettle_serpent_encrypt
nettle_serpent_set_key
serpent128
serpent192
serpent256
twofish.c
nettle_twofish_decrypt
nettle_twofish_encrypt
nettle_twofish_set_key
t6Q8
$F;p
MCi).
lCu7&
>id*
6BJ^
twofish128
twofish192
twofish256
yarrow256.c
ctx->seeded
source_index < ctx->nsources
nettle_yarrow256_random
nettle_yarrow256_update
()% 	
sexp-format.c
!nesting
nettle_sexp_vformat
sexp-transport.c
out < in
nettle_sexp_transport_iterator_first
bignum.c
!((x)->_mp_size < 0 ? -1 : (x)->_mp_size > 0)
nettle_mpz_sizeinbase_256_u(x) <= length
nettle_mpz_sizeinbase_256_u(c) <= length
nettle_mpz_get_str_256
pkcs1.c
length >= id_length
length >= 9
nettle_pkcs1_signature_prefix
pkcs1-rsa-md5.c
length >= 16
nettle_pkcs1_rsa_md5_encode_digest
nettle_pkcs1_rsa_md5_encode
pkcs1-rsa-sha1.c
length >= 20
0!0	
nettle_pkcs1_rsa_sha1_encode_digest
nettle_pkcs1_rsa_sha1_encode
pkcs1-rsa-sha256.c
length >= 32
nettle_pkcs1_rsa_sha256_encode_digest
nettle_pkcs1_rsa_sha256_encode
rsa-md5-sign.c
key->size >= 62
nettle_rsa_md5_sign_digest
nettle_rsa_md5_sign
rsa-md5-verify.c
nettle_rsa_md5_verify_digest
nettle_rsa_md5_verify
rsa-sha1-sign.c
nettle_rsa_sha1_sign_digest
nettle_rsa_sha1_sign
rsa-sha1-verify.c
nettle_rsa_sha1_verify_digest
nettle_rsa_sha1_verify
rsa-sha256-sign.c
nettle_rsa_sha256_sign_digest
nettle_rsa_sha256_sign
rsa-sha256-verify.c
nettle_rsa_sha256_verify_digest
nettle_rsa_sha256_verify
rsa-encrypt.c
padding >= 8
nettle_rsa_encrypt
rsa-keygen.c
bits
pub->size >= 62
nettle_rsa_generate_keypair
bignum_random_prime
(public-key(%0s(n%b)(e%b)))
(private-key(%0s(n%b)(e%b)(d%b)(p%b)(q%b)(a%b)(b%b)(c%b)))
private-key
public-key
rsa-pkcs1
rsa-pkcs1-sha1
pgp-encode.c
crc < 0x1000000
start >= 2
start <= buffer->size
tag < 0x40
Comment: Nettle
done <= (((45) * 8 + 4)/6)
BEGIN PGP 
length < PGP_LENGTH_TWO_OCTETS
length < PGP_LENGTH_FOUR_OCTETS && length >= PGP_LENGTH_TWO_OCTETS
buffer->size == start + length
nettle_pgp_armor
nettle_pgp_crc24
nettle_pgp_put_public_rsa_key
nettle_pgp_sub_packet_end
nettle_pgp_put_header_length
nettle_pgp_put_header
der-iterator.c
i->type == ASN1_BITSTRING
i->type & ASN1_TYPE_CONSTRUCTED
nettle_asn1_der_decode_bitstring
nettle_asn1_der_decode_constructed
buffer.c
buffer->size <= buffer->alloc
nettle_buffer_grow
Virtual memory exhausted.
nettle-internal.c
length == 24
length == 8
des3
blowfish128
des3_set_key_hack
des_set_key_hack
libnettle.so.2.6.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.bss
.gnu_debuglink
