a6?2_H
RK@$
y&+E
 U\Y=
>RUGq
(:,zm
}YI"
__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
_ZNK9axial_box16get_longest_axisEv
_ZNK4vec3miERKS_
__gxx_personality_v0
_ZNK4vec3ixEi
__assert_fail
_ZN9axial_box13set_enclosingERKS_
_ZNK9axial_box16get_random_pointEv
_ZN9tu_random14get_unit_floatEv
_ZN8bsp_nodeC2ERK10plane_info
_ZN8bsp_node21insert_into_face_listEi
realloc
malloc
_ZN8bsp_nodeD1Ev
_ZdlPv
free
_ZN8bsp_nodeD2Ev
_Z14classify_pointRK10plane_info4vec3f
_ZN8bsp_node10test_pointERK4vec3
_ZN8bsp_node8ray_castEP14collision_infoRK4vec3S4_fPFbS4_S4_iE
_ZNK4vec3mlEf
_ZNK4vec3plERKS_
_Z9intersectRK10plane_infoRK4vec3S4_
_ZN8bsp_nodeC1ERK10plane_info
_Unwind_Resume
_ZN8bsp_node15add_inside_faceERK4vec3S2_S2_RK10plane_infoif
_ZN8bsp_node8add_faceERK4vec3S2_S2_RK10plane_infoif
_Znwm
_ZN8bsp_node16add_outside_faceERK4vec3S2_S2_RK10plane_infoif
_ZN8bsp_node13add_partitionERK10plane_info
_ZN4vec3ixEi
_ZN9ray_query16compute_inversesEv
_ZN9ray_queryC1ENS_14start_end_enumERK4vec3S3_
_ZNK4vec39magnitudeEv
_ZN4vec3mLEf
_ZN9ray_queryC2ENS_14start_end_enumERK4vec3S3_
_ZN9ray_queryC1ERK4vec3S2_f
_ZN9ray_queryC2ERK4vec3S2_f
_ZN4cull22compute_box_visibilityERK4vec3S2_PK10plane_infoNS_11result_infoE
_ZNK4vec36sqrmagEv
_ZNK4vec38checknanEv
_ZN6matrixmLEf
_ZN6matrixpLERKS_
sqrtf
_ZN4vec39normalizeERKS_
_ZN4vec39set_crossERKS_S1_
_ZNK6matrix14apply_rotationEP4vec3RKS0_
_ZN6matrix15invert_rotationEv
_ZNK4vec3ngEv
_ZN6matrix15set_orientationERK10quaternion
_ZN6matrix12set_identityEv
_ZN4vec36x_axisE
_ZN4vec36y_axisE
_ZN4vec36z_axisE
_ZN4vec34zeroE
_ZN6matrix6invertEv
_ZN4vec37flt_maxE
_ZN4vec313minus_flt_maxE
_ZN10quaternionC1ERK4vec3f
sinf
_ZN10quaternionC2ERK4vec3f
_ZN10quaternion9normalizeEv
_ZNK6matrix22apply_inverse_rotationEP4vec3RKS0_
_ZNK6matrix13apply_inverseEP4vec3RKS0_
_ZNK6matrix15get_orientationEv
_ZNK6matrix5applyEP4vec3RKS0_
_ZN6matrix9translateERK4vec3
_ZN6matrix7composeEPS_RKS_S2_
_ZNK6matrixmlERKS_
_ZNK6matrixmlERK4vec3
_ZNK10quaternion4lerpERKS_f
acosf
_ZN4vec35writeEP7tu_file
_ZN4vec34readEP7tu_file
_ZNK4vec35crossERKS_
_ZNK10quaternionmlERKS_
_ZN10quaternion13ApplyRotationEP4vec3RKS0_
_ZN8Geometry6RotateEfRK4vec3S2_
_ZN10quaternionmLERKS_
_ZN6matrix18normalize_rotationEv
_ZN6matrix10set_orientERK4vec3S2_S2_
_ZN6matrix8set_viewERK4vec3S2_S2_
_ZN15kd_tree_dynamic4nodeC2Ev
_ZN15kd_tree_dynamic4nodeC1Ev
_ZNK15kd_tree_dynamic4node8is_validEv
_Z4swapIN15kd_tree_dynamic4faceEEvPT_S3_
_Z4swapIiEvPT_S1_
_Z4swapItEvPT_S1_
_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE4findERS1_
_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE11lower_boundERS1_
_ZSt4fillIN9__gnu_cxx17__normal_iteratorIP4vec3St6vectorIS2_SaIS2_EEEES2_EvT_S8_RKT0_
_ZNSt6vectorIN15kd_tree_dynamic4faceESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EES7_
_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPN15kd_tree_dynamic4faceESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RKT0_
_ZNSt6vectorI4vec3SaIS0_EE5eraseEN9__gnu_cxx17__normal_iteratorIPS0_S2_EES6_
_ZSt26__uninitialized_fill_n_auxIP4vec3mS0_EvT_T0_RKT1_12__false_type
_ZSt24__uninitialized_fill_n_aIP4vec3mS0_S0_EvT_T0_RKT1_SaIT2_E
_ZSt26__uninitialized_fill_n_auxIN9__gnu_cxx17__normal_iteratorIP4vec3St6vectorIS2_SaIS2_EEEEmS2_EvT_T0_RKT1_12__false_type
_ZSt24__uninitialized_fill_n_aIN9__gnu_cxx17__normal_iteratorIP4vec3St6vectorIS2_SaIS2_EEEEmS2_S2_EvT_T0_RKT1_SaIT2_E
_ZSt26__uninitialized_fill_n_auxIPN15kd_tree_dynamic4faceEmS1_EvT_T0_RKT1_12__false_type
_ZSt24__uninitialized_fill_n_aIPN15kd_tree_dynamic4faceEmS1_S1_EvT_T0_RKT1_SaIT2_E
_ZSt26__uninitialized_fill_n_auxIN9__gnu_cxx17__normal_iteratorIPN15kd_tree_dynamic4faceESt6vectorIS3_SaIS3_EEEEmS3_EvT_T0_RKT1_12__false_type
_ZSt24__uninitialized_fill_n_aIN9__gnu_cxx17__normal_iteratorIPN15kd_tree_dynamic4faceESt6vectorIS3_SaIS3_EEEEmS3_S3_EvT_T0_RKT1_SaIT2_E
_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
_ZN9axial_box13set_enclosingERK4vec3
_ZN9axial_box12set_axis_maxEif
_ZN9axial_box12set_axis_minEif
_ZNK9axial_box16get_surface_areaEv
_Z6iclampiii
_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE9_M_insertEPSt18_Rb_tree_node_baseSA_RKS2_
_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
_ZN15kd_tree_dynamic13classify_faceERKNS_4faceEif
_ZNSt6vectorIP15kd_tree_dynamicSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_
memmove
_ZSt20__throw_length_errorPKc
_ZSt17__throw_bad_allocv
_ZN15kd_tree_dynamic4nodeD1Ev
_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE13insert_uniqueERKS2_
_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
_ZNSt8_Rb_treeIiSt4pairIKiiESt10_Select1stIS2_ESt4lessIiESaIS2_EE13insert_uniqueESt17_Rb_tree_iteratorIS2_ERKS2_
_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPiS1_EERKi
_ZNSt6vectorIN15kd_tree_dynamic4faceESaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_
_ZN10postscript4lineEffff
_ZN10postscript6circleEfff
_ZN10postscript4diskEfff
_ZN20kd_diagram_dump_info12update_statsEPN15kd_tree_dynamic4nodeE
_ZNK15kd_tree_dynamic4node4dumpEP7tu_filei
_ZNK15kd_tree_dynamic4dumpEP7tu_file
_ZNSt6vectorIN15kd_tree_dynamic4faceESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EEmRKS1_
_ZNK15kd_tree_dynamic17mesh_diagram_dumpEP7tu_filei
_ZN10postscriptC1EP7tu_filePKcb
_ZN10postscriptD1Ev
_ZNK15kd_tree_dynamic4face13get_max_coordEiRKSt6vectorI4vec3SaIS2_EE
_ZNK15kd_tree_dynamic4face13get_min_coordEiRKSt6vectorI4vec3SaIS2_EE
_ZN15kd_tree_dynamic14evaluate_splitEiiPNS_4faceERK9axial_boxifPf
_ZN15kd_tree_dynamic8do_splitEPiS0_iPNS_4faceEiff
_ZN15kd_tree_dynamic10build_treeEiiPNS_4faceERK9axial_box
memcpy
_ZNSt6vectorI4vec3SaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_
_ZN15kd_tree_dynamic10clip_facesEPSt6vectorINS_4faceESaIS1_EEif
_Z10split_meshPSt6vectorI4vec3SaIS0_EEPS_IiSaIiEES3_S6_iPKS0_iPKiif
_ZNSt6vectorI4vec3SaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEmRKS0_
_ZN15kd_tree_dynamic4nodeD2Ev
_ZN15kd_tree_dynamic21compute_actual_boundsEP9axial_boxiPK4vec3
_ZN15kd_tree_dynamic21compute_actual_boundsEP9axial_boxiPNS_4faceE
_ZN15kd_tree_dynamicD2Ev
_ZN15kd_tree_dynamicC1EiPK4vec3iPKi
_ZN15kd_tree_dynamicC2EiPK4vec3iPKi
_ZN15kd_tree_dynamic11build_treesEPSt6vectorIPS_SaIS1_EEiPK4vec3iPKi
_ZN15kd_tree_dynamicD1Ev
_ZNK15kd_tree_dynamic12diagram_dumpEP7tu_file
_ZN10postscript6printfEffPKcz
_ZN7kd_node13get_pos_childEv
_ZN7kd_node8get_leafEv
_ZN7kd_leaf8get_faceEi
_ZN14kd_tree_packedC2Ev
_ZN14kd_tree_packedD1Ev
_ZN14kd_tree_packedD2Ev
__stack_chk_fail
_ZN14kd_tree_packedC1Ev
_ZN14kd_tree_packed5buildEPK15kd_tree_dynamic
_ZN7tu_fileC1ENS_18memory_buffer_enumE
_ZN7tu_fileD1Ev
_ZN14kd_tree_packed21s_ray_test_face_countE
_ZN14kd_tree_packed21s_ray_test_leaf_countE
_ZN14kd_tree_packed21s_ray_test_node_countE
_ZN14kd_tree_packed8ray_testERK9ray_query
_ZN3tqt10node_countEi
_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEjEvT_S7_RKT0_
_ZSt6fill_nIPjmjET_S1_T0_RKT1_
_ZSt24__uninitialized_fill_n_aIPjmjjEvT_T0_RKT1_SaIT2_E
_ZSt6fill_nIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEmjET_S7_T0_RKT1_
_ZSt24__uninitialized_fill_n_aIN9__gnu_cxx17__normal_iteratorIPjSt6vectorIjSaIjEEEEmjjEvT_T0_RKT1_SaIT2_E
_ZN3tqt10node_indexEiii
_ZNK3tqt10load_imageEiii
_ZN5image9read_jpegEP7tu_file
_ZNSt6vectorIjSaIjEE5eraseEN9__gnu_cxx17__normal_iteratorIPjS1_EES5_
_ZNSt6vectorIjSaIjEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPjS1_EEmRKj
_ZN3tqtD2Ev
_ZN3tqtD1Ev
_ZN3tqt11is_tqt_fileEPKc
_ZN7tu_fileC1EPKcS1_
_ZN3tqtC1EPKc
__cxa_allocate_exception
_ZTIPKc
__cxa_throw
_ZN3tqtC2EPKc
libgnashbase-0.8.1.so
librt.so.1
libX11.so.6
libXi.so.6
libstdc++.so.6
libm.so.6
libc.so.6
libgcc_s.so.1
_edata
__bss_start
_end
libgnashgeo-0.8.1.so
/usr/lib64/gnash
GCC_3.0
GLIBC_2.2.5
GLIBC_2.4
CXXABI_1.3
GLIBCXX_3.4
ATSubH
d$(H
t/Hc
C(HcS0H
fffff.
D$(L
\$hH
l$pL
d$xL
D$,L
D$,L
D$0H
D$(H
\D$,M
D$,L
D$,L
D$0H
~kE1
D9e0~NH
D$0I
D$4A
D$8A
D$(H
\D$,M
sHzFH
\$ H
\$XH
l$`L
d$hL
l$pH
d$@H
\$0L
fff.
l$ H
l$ H
fffff.
t$`L
D$`A
D$dA
\$xH
\$0L
d$0H
\$ H
\$ L
d$0H
l$ H
l$ H
fffff.
[]A\
E<v9
E<v9
\$ H
l$(L
d$0L
l$8L
t$@H
\$ H
l$(L
d$0L
l$8L
t$@H
fff.
l$ H
s(z&
l$ H
fffff.
fffff.
fff.
\$ L
d$(L
l$0H
t$ H
t$ H
fffff.
l$ H
\$ H
l$(L
d$0L
l$8L
t$@H
zIuG
XD$$L
fffff.
t$$H
fff.
D$ H
\D$ 
D$$I
YL$0L
D$$L
|$PL
D$PH
D$TA
D$XA
\D$ 
YD$(
^D$,
YD$(
^T$,
|$@I
AUATI
[A\A]A^
fffff.
l$ L
d$(L
l$0L
t$8L
|$@H
t\H9
fff.
D$0I
d$@H
|$ L
\$xH
T$0L
\$ H
P[A\A]
fff.
\$ I
D$ H
\$0L
d$8L
l$@L
t$HL
|$PH
\$(L
d$0L
l$8L
t$@H
d$ L
l$(L
t$0H
fff.
d$ L
l$(L
t$0H
tYH9
fffff.
fff.
l$ L
d$(L
l$0L
t$8L
|$@H
O`;Od
[]A\
fffff.
AVAUATI
IcD$
[]A\A]A^A_
AUATA
[]A\A]A^
fffff.
AWAVAUATUS
|$hH
T$`H
L$XL
VUUU
T$X)
T$pH
T$XH
D$@H
D$8H
D$PL
t$XE1
|$@H
\L$|H
|$8I
|$hD
D$H9
T$`L
D$`L
D$PH
L$XH
|$hH
D$`L
L$XH
|$hH
[]A\A]A^A_
fff.
l$ H
l$ H
fff.
fffff.
AVAUI
D$8I
D$ H
D$8E
[]A\A]A^A_
.T$x
T$8D
.D$p
.D$t
.D$x
L$PE
.D$L
D$DA
\$|A
\t$L
*T$4
*D$0
fffff.
ATE1
t$ H
}LIc
D$ H
T$ ;
([]A\A]A^A_
AUATA
gfff
T$hH
T$\)
T$|H
\$dH
D$0H
T$8H
D$@H
T$(H
t$0H
|$8L
t$8H
Ol$|
\D$l
t$LA
.D$\
L$lv
l$`A9
HcT$`H
D$hA
[]A\A]A^A_
D$`H
|$PH
L$hA
D$dA
|$PL
|$PM
fff.
AVAUATUH
T$\H
HcD$\H
L$0H
D$hH
L$0H
D$@H
D$hH
L$0H
D$hH
D$HH
D$hH
L$8H
T$P9T$d
t$8H
T$\D
T$hD
L$hD
T$hD
t$0H
T$ H
|$@L
|$@D
t$0H
T$ H
|$HL
|$HD
\$bfD
T$\D
T$\D
D$bf
T$\D
t$8H
|$8H
t$8H
|$8H
t$8H
|$8H
t$0H
T$ H
|$HL
|$HD
T$\D
T$\D
t$0H
T$ H
|$HL
|$HD
t$0H
T$ H
|$@L
|$@D
H+\$pI
\$`H
T$\D
H+D$xf
T$\D
D$`f
T$\D
[]A\A]A^A_
T$HH
T$@L
T$HH
T$HL
T$@L
AWAVAUI
|$8H
D$$L
T$8H
L$0H
D$xH
D$HH
\$(Hc
L$$H
D$XH
H;D$X
9L$D
t$pH
[]A\A]A^A_
L$PH
H;D$PtB
I;t$
L$0H
H;D$P
;P H
A$Ic
L$(H
I;t$
T$0H
T$8H
H;D$X
;P H
A$Ic
D$8H
T$8H
t$pH
fff.
w,AUI
g USH
L$P1
D$`H
D$8H
_d$<
_l$@
_t$D
H;t$ f
T$`H
x[]A\A]A^A_
fff.
w,AUI
g USH
L$P1
D$`H
D$8H
_d$<
_l$@
_t$D
H;t$ f
T$`H
x[]A\A]A^A_
fff.
L$,M
D$,H
L$0H
T$pH
t$PH
D$xH+D$pH
L$,L
D$PH
T$XL)
D$0H
L$8I
|$pH
t$xL)
|$0H
|$PH
|$pH
|$0H
|$PH
|$pH
AWAVAUATUSH
D$XH
t$XH
H+D$PH
|%H;t$`
D$@|BH
D$ H
H;t$H
T$pH
T$hH
T$lH
T$xH
T$tH
*D$pH
*T$|
D$ H
|$PH
|$8H
|$ H
[]A\A]A^A_
|$PH
|$8H
|$ H
9J }
;B H
9J }
[]A\
r2Hc
r2Hc
l$ L
t$(L
|$0H
;B A
l$ L
t$(L
|$0H
 []A\H
I;\$
F ;E
}PH9w
@ ;E
l$HH
\$@L
d$PH
H9w tHH
B ;E
l$ L
t$(L
|$0H
AVAUATI
[]A\A]A^
[]A\A]A^
O`;Od
T$ L
8[]A\A]A^A_
L$/H
8[]A\A]A^A_
d$ H
L$.L)
8[]A\A]A^A_
AVAUATI
[]A\A]A^
UUUUUUU
UUUUUUU
[]A\A]A^
8[]A\A]A^A_
UUUUUUU
D$ I9
L$ H
L$/H
8[]A\A]A^A_
L$.L)
8[]A\A]A^A_
fff.
fff.
AVAUATI
D$81
D$8dH3
@[]A\A]A^
D$ H
t$ I
D$#A
fffff.
T$(Hc
[]A\
fff.
D$pH9
|$`A
|$dA
YL$p
YD$t
Yt$x
AUATI
[]A\A]A^
$uvzt
[]A\A]A^
L$@H
%UUUU
fff.
fff.
tA9G
S Hc
fffff.
t$/H
l$/H
\$/H
d$/H
D$/A
|$$H
\$8H
l$@L
d$HL
D$ L
t$XH
D$ L
|$`H
d$/H
D$/H
\$/H
D$/H
D	d$
|$/H
\$/H
D$/H
l$/H
d$/H
\$/H
D$/D
fffff.
T$ht
AWAVAUI
ATUH
|$4A
t$<H
\$<H
d$<H
D$<D	
H[]A\A]A^A_
L$<H
AWAVAUI
ATUH
|$4A
t$<H
\$<H
d$<H
D$<D	
H[]A\A]A^A_
L$<H
5l7 
I)\$
L$'H
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
D$ L
\$ L)
L$&H
T$ L
geometry.h
index >= 0 && index < 3
axial_box.cpp
is_valid()
void axial_box::set_enclosing(const axial_box&)
const float& vec3::operator[](int) const
?bsp.cpp
void bsp_node::add_partition(const plane_info&)
collision.cpp
m_length > 0
float& vec3::operator[](int)
ray_query::ray_query(ray_query::start_end_enum, const vec3&, const vec3&)
ray_query::ray_query(const vec3&, const vec3&, float)
this != &a
this != &b
void vec3::set_cross(const vec3&, const vec3&)
axial_box.h
../libbase/utility.h
min <= max
kd_tree_dynamic.cpp
axis >= 0 && axis < 3
vector::_M_insert_aux
n->m_leaf
inf->m_depth >= 0
0123456789X
vector::_M_fill_insert
kd-tree diagram
*back_end <= *front_end
face_count >= 0
new_vert.checknan() == false
new_vert0.checknan() == false
new_vert1.checknan() == false
new_vert2.checknan() == false
verts0->size() == 0
tris0->size() == 0
verts1->size() == 0
tris1->size() == 0
vert_count > 0
face_count > 0
triangle_count > 0
Loose KD-Tree
leaf face count limit: %d
face ct: %d
leaf ct: %d
node ct: %d
null ct: %d
worst leaf: %d faces
max depth: %d
avg face depth: %3.2f
mincoord >= bounds.get_min()[axis]
f.get_min_coord(axis, m_verts) >= pos_offset
classify_face(f0, axis, offset) <= 0
classify_face(f1, axis, offset) >= 0
classify_face(f1, axis, offset) <= 0
classify_face(f2, axis, offset) >= 0
verts0 && tris0 && verts1 && tris1
vert_count > 0 && vert_count < 65536
using MacDonald and Booth metric
const float& vec3::operator[](int) const
float& vec3::operator[](int)
void node_traverse(kd_diagram_dump_info*, kd_tree_dynamic::node*)
void kd_diagram_dump_info::update_stats(kd_tree_dynamic::node*)
void node_diagram(kd_diagram_dump_info*, kd_tree_dynamic::node*, int, int)
int iclamp(int, int, int)
void kd_tree_dynamic::clip_faces(std::vector<kd_tree_dynamic::face, std::allocator<kd_tree_dynamic::face> >*, int, float)
int kd_tree_dynamic::classify_face(const kd_tree_dynamic::face&, int, float)
float kd_tree_dynamic::evaluate_split(int, int, kd_tree_dynamic::face*, const axial_box&, int, float, float*)
void axial_box::set_axis_max(int, float)
void axial_box::set_axis_min(int, float)
float axial_box::get_surface_area() const
void kd_tree_dynamic::do_split(int*, int*, int, kd_tree_dynamic::face*, int, float, float)
static void kd_tree_dynamic::compute_actual_bounds(axial_box*, int, const vec3*)
void axial_box::set_enclosing(const vec3&)
void kd_tree_dynamic::compute_actual_bounds(axial_box*, int, kd_tree_dynamic::face*)
kd_tree_dynamic::node* kd_tree_dynamic::build_tree(int, int, kd_tree_dynamic::face*, const axial_box&)
kd_tree_dynamic::kd_tree_dynamic(int, const vec3*, int, const int*)
axial_box::axial_box()
static void kd_tree_dynamic::build_trees(std::vector<kd_tree_dynamic*, std::allocator<kd_tree_dynamic*> >*, int, const vec3*, int, const int*)
void split_mesh(std::vector<vec3, std::allocator<vec3> >*, std::vector<int, std::allocator<int> >*, std::vector<vec3, std::allocator<vec3> >*, std::vector<int, std::allocator<int> >*, int, const vec3*, int, const int*, int, float)
kd_tree_packed.cpp
offset >= sizeof(kd_node)
is_leaf()
source->m_neg == __null
source->m_pos == __null
source->get_root()
kd->m_vert_count < 65536
node
m_packed_tree
m_verts
index >= 0 && index < m_face_count
face->m_vi[0] < qi.m_vert_count
face->m_vi[1] < qi.m_vert_count
face->m_vi[2] < qi.m_vert_count
bool kd_tree_packed::ray_test(const ray_query&)
bool ray_test_node(const kd_ray_query_info&, float, float, kd_node*)
kd_leaf* kd_node::get_leaf()
kd_face* kd_leaf::get_face(int)
bool ray_test_face(const kd_ray_query_info&, kd_face*)
void vec3::set_cross(const vec3&, const vec3&)
kd_node* kd_node::get_pos_child()
const float& vec3::operator[](int) const
static kd_tree_packed* kd_tree_packed::build(const kd_tree_dynamic*)
void write_packed_data(tu_file*, const kd_tree_dynamic::node*)
axial_box::axial_box()
tqt.cpp
level < m_depth
index < (int) m_toc.size()
tqt::tqt() can't open file.
col >= 0 && col < (1 << level)
row >= 0 && row < (1 << level)
tqt::tqt() incorrect file version.
static int tqt::node_index(int, int, int)
image::rgb* tqt::load_image(int, int, int) const
zPLR
libgnashgeo-0.8.1.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
