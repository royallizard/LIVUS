__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
ast_module_unregister
ast_unregister_application
ast_custom_function_unregister
ast_app_separate_args
strtol
ast_exists_extension
ast_log
ast_register_application2
__ast_custom_function_register
strlen
memcpy
pbx_builtin_setvar_helper
ast_app_parse_options
ast_playtones_stop
ast_stopstream
ast_streamfile
ast_options
ast_waitfordigit
ast_matchmore_extension
option_debug
ast_get_indication_tone
ast_answer
ast_debug_get_by_file
ast_check_hangup
ast_playtones_start
__stack_chk_fail
ast_module_register
ast_unregister_file_version
ast_register_file_version
readexten_option_flags
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
GLIBC_2.4
GLIBC_2.2.5
5:$ 
%<$ 
%:$ 
%2$ 
%*$ 
%"$ 
%z# 
%r# 
%j# 
%b# 
ATSubH
=_  
[]A\
[]A\
fff.
fffff.
AWAVAUATSH
[A\A]A^A_
Syntax: VALID_EXTEN([<context>],<extension>[,<priority>]) - missing argument <extension>!
ReadExten requires at least one argument
Invalid! Usage: ReadExten(variable[|filename][|context][|options][|timeout])
extension so far: '%s', timeout: %d
User entered valid extension '%s'
User dialed invalid extension '%s' in context '%s' on %s
Read and evaluate extension validity
This paragraph is copyright (c) 2006 by Digium, Inc. In order for your module to load, it must return this key via a function called "key".  Any code which includes this paragraph must be licensed under the GNU General Public License version 2 or later (at your option).  In addition to Digium's general reservations of rights, Digium expressly reserves the right to allow other parties to license this paragraph under different terms. Any use of Digium, Inc. trademarks or logos (including "Asterisk" or "Digium") without express written permission of Digium, Inc. is prohibited.
Determine whether an extension exists or not
Returns a true value if the indicated context, extension, and priority exist.
Context defaults to the current context, priority defaults to 1.
VALID_EXTEN([<context>],<extension>[,<priority>])
  ReadExten(<variable>[,[<filename>][,[<context>][,[<option>][,<timeout>]]]])
Reads a #-terminated string of digits from the user into the given variable.
  filename  file to play before reading digits or tone with option i
  context   context in which to match extensions
  option    options are:
              s - Return immediately if the channel is not answered,
              i - Play filename as an indication tone from your
                  indications.conf
              n - Read digits even if the channel is not answered.
  timeout   An integer number of seconds to wait for a digit response. If
            greater than 0, that value will override the default timeout.
ReadExten will set READEXTENSTATUS on exit with one of the following statuses:
  OK        A valid extension exists in ${variable}
  TIMEOUT   No extension was entered in the specified time
  INVALID   An invalid extension, ${INVALID_EXTEN}, was entered
  SKIP      Line was not up and the option 's' was specified
  ERROR     Invalid arguments were passed
Read an extension into a variable
app_readexten.c
ERROR
READEXTENSTATUS
SKIP
HANGUP
TIMEOUT
INVALID_EXTEN
INVALID
$Revision: 168565 $
app_readexten
ReadExten
acf_isexten_exec
readexten_exec
a9c98e5d177805051735cb5b0b16b0a0
app_readexten.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
