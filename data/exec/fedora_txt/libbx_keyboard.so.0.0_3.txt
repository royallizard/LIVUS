}tlR:
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
_ZN14bx_param_num_c3getEv
_ZN24bx_simulator_interface_c13get_param_numEPKcP10bx_param_c
_ZN24bx_simulator_interface_c14get_param_enumEPKcP10bx_param_c
_ZN24bx_simulator_interface_c14get_bochs_rootEv
_ZN13bx_devmodel_c4initEv
_ZN13bx_devmodel_c5resetEj
_ZN13bx_devmodel_c14register_stateEv
_ZN13bx_devmodel_c19after_restore_stateEv
_ZN9bx_keyb_c5resetEj
theKeyboard
_ZN14bx_cmos_stub_c7get_regEj
pluginlog
_ZN12logfunctions5panicEPKcz
_ZN14bx_cmos_stub_c7set_regEjj
_ZN13bx_pic_stub_c9raise_irqEj
_ZN13bx_pic_stub_c9lower_irqEj
_ZN13bx_devmodel_cD2Ev
_ZTV13bx_devmodel_c
_ZN12logfunctionsD2Ev
_ZN13bx_devmodel_cD1Ev
_ZN13bx_devmodel_cD0Ev
_ZdlPvm
_ZN9bx_keyb_c19after_restore_stateEv
bx_gui
_ZN8bx_gui_c17statusbar_setitemEijj
_ZN9bx_keyb_cD2Ev
_ZTV9bx_keyb_c
_ZN14bx_param_num_c11set_handlerEPFlP10bx_param_cilE
_ZdaPv
_ZN12logfunctions6ldebugEPKcz
__gxx_personality_v0
_ZN9bx_keyb_cD1Ev
_ZN9bx_keyb_cD0Ev
_ZN9bx_keyb_c14register_stateEv
_Znwm
_ZN9bx_list_cC1EP10bx_param_cPKcS3_
_ZN9bx_list_cC1EP10bx_param_cPKc
_ZN16bx_shadow_bool_cC1EP10bx_param_cPKcPjh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPhihh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPjihh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPsihh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPiihh
__sprintf_chk
__stack_chk_fail
_Unwind_Resume
libkeyboard_LTX_plugin_fini
_ZN9bx_keyb_cC2Ev
_ZN12logfunctionsC2Ev
_ZN12logfunctions3putEPKcS1_
_ZN9bx_keyb_cC1Ev
libkeyboard_LTX_plugin_init
bx_devices
pluginRegisterDeviceDevmodel
_ZN9bx_keyb_c14resetinternalsEj
_ZN9bx_keyb_c19paste_delay_changedEj
_ZN12logfunctions4infoEPKcz
_ZN9bx_keyb_c4initEv
pluginRegisterIRQ
pluginRegisterIOReadHandler
_ZN9bx_keyb_c12read_handlerEPvjj
pluginRegisterIOWriteHandler
_ZN9bx_keyb_c13write_handlerEPvjjj
_ZN9bx_keyb_c13timer_handlerEPv
bx_pc_system
_ZN14bx_pc_system_c14register_timerEPvPFvS0_EjjjPKc
_ZN8bx_gui_c19register_statusitemEPKcj
_ZN9bx_keyb_c17kbd_param_handlerEP10bx_param_cil
_ZN9bx_keyb_c28mouse_enabled_changed_staticEPvj
_ZN9bx_keyb_c16mouse_enq_staticEPviiijj
_ZN12bx_devices_c22register_default_mouseEPvPFvS0_iiijjEPFvS0_jE
_ZN10bx_param_c14get_param_pathEPci
_ZN8bx_gui_c21mouse_enabled_changedEj
_ZN12bx_devices_c21mouse_enabled_changedEj
_ZN9bx_keyb_c17service_paste_bufEv
bx_keymap
_ZN11bx_keymap_c13findAsciiCharEh
_ZN12logfunctions5errorEPKcz
_ZN9bx_keyb_c11paste_bytesEPhi
_ZN9bx_keyb_c14get_kbd_enableEv
_ZN9bx_keyb_c14controller_enQEhj
_ZN9bx_keyb_c11kbd_enQ_immEh
_ZN9bx_keyb_c14activate_timerEv
_ZN9bx_keyb_c20set_kbd_clock_enableEh
_ZN9bx_keyb_c20set_aux_clock_enableEh
_ZN9bx_keyb_c7kbd_enQEh
_ZN9bx_keyb_c12gen_scancodeEj
_ZN11bx_keymap_c12getBXKeyNameEj
scancodes
_ZN12bx_devices_c16optional_key_enqEPh
strlen
translation8042
_ZN9bx_keyb_c15kbd_ctrl_to_kbdEh
_ZN9bx_keyb_c9mouse_enQEh
_ZN9bx_keyb_c16mouse_enQ_packetEhhhh
_ZN9bx_keyb_c17kbd_ctrl_to_mouseEh
genlog
_ZN14bx_pc_system_c14get_enable_a20Ev
_ZN14bx_pc_system_c14set_enable_a20Ej
_ZN14bx_pc_system_c5ResetEj
_ZN9bx_keyb_c19create_mouse_packetEj
_ZN9bx_keyb_c8periodicEj
_ZN9bx_keyb_c21mouse_enabled_changedEj
_ZN9bx_keyb_c12mouse_motionEiiijj
_ZTS12logfunctions
_ZTI12logfunctions
_ZTVN10__cxxabiv117__class_type_infoE
_ZTS13bx_devmodel_c
_ZTI13bx_devmodel_c
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTS14bx_keyb_stub_c
_ZTI14bx_keyb_stub_c
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTS9bx_keyb_c
_ZTI9bx_keyb_c
libstdc++.so.6
libm.so.6
libc.so.6
libgcc_s.so.1
_edata
__bss_start
_end
libbx_keyboard.so.0
GCC_3.0
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.2.5
GLIBCXX_3.4
CXXABI_1.3
CXXABI_1.3.9
5j~ 
%l~ 
%j~ 
%j~ 
%j~ 
%j~ 
%j~ 
ATUH
->} 
[]A\
<$[]A\
ATUH
@8L9
@8L9
[]A\
AWAVAUATS1
A]A_
A[A\
AYAZ
A]A_
A[A\
AYAZ
A]A_
A[A\
AYAZ
A[A]u
AYAZ
0A[A]u
AYAZ
_AXu
[A\A]A^A_]
ATUH
[]A\
ATUH
ATUSH
H8H;
J0H;
[]A\
AWAVH
AUATI
-bi 
%og 
-]g 
@8L9
J0L9
@PH;
J0L9
@8L9
J0L9
@0H;
L;=qd 
=8c 
@8L9
@8L9
@8L9
@8L9
[]A\A]A^A_
=Jb 
AVAUATUSH
-Ia 
[]A\A]A^
[]A\A]A^
ATUI
[]A\
[]A\
[]A\
[]A\
@8H;
@8H;
ATUD
u%[]A\
]A\1
[]A\H
AWAVAUATUSH
-1X 
[]A\A]A^A_
AUATH
%xW 
[]A\A]
[]A\A]
[]A\A]
[]A\A]
[]A\A]
-gR 
-pR 
@PH9
J0H9
[]A\A]
[]A\A]1
@PH9
J0H9
ATUD
u+[]A\
]A\1
[]A\
AUATE1
[]A\A]
[]A\A]
AVAUH
ATUA
[]A\A]A^
[]A\A]A^H
[]A\A]A^
[]A\A]A^1
[]A\A]A^1
du5I
[]A\H
[]A\
[]A\
[]A\1
=,H 
[]A\1
ht[]A\
[]A\1
[]A\1
[]A\
[]A\H
[]A\H
[]A\H
[]A\1
[]A\1
[]A\
[]A\1
[]A\1
[]A\H
[]A\1
tWfE
w/A)
-K@ 
@0H;
@0H;
AVAUL
ATUSI
[]A\A]A^@
[]A\A]A^
]A\A]A^H
cmos
get_reg
%s called in %s stub. you must not have loaded the %s plugin
set_reg
raise_irq
lower_irq
keyboard_mouse.keyboard.paste_delay
keyboard_mouse.keyboard.serial_delay
will paste characters every %d keyboard ticks
Init $Id: keyboard.cc 11527 2012-10-30 17:25:33Z vruppert $
8042 Keyboard controller (PS/2 mouse)
kbd_param_handler called with unexpected parameter '%s'
service_paste_buf: ptr at %d out of %d
paste character 0x%02x ignored
pasting character 0x%02x. baseKey is %04x
previous paste was not completed!  %d chars lost
get_kbd_enable(): getting kbd_clock_enabled of: %02x
controller_enQ(%02x) source=%02x
controller_enq(): controller_Q full!
internal keyboard buffer full (imm)
[mouse] read from 0x%02x returns 0x%02x
read from port 60h with outb empty
unknown address in io read to keyboard port %x
internal keyboard buffer full, ignoring scancode.(%02x)
kbd_enQ: putting scancode 0x%02x in internal buffer
keyboard: gen_scancode with scancode_translate cleared
gen_scancode(): writing translated %02x
gen_scancode(): writing raw %02x
controller passed byte %02xh to keyboard
setting delay to 250 mS (unused)
setting delay to 500 mS (unused)
setting delay to 750 mS (unused)
setting delay to 1000 mS (unused)
setting repeat rate to %.1f cps (unused)
Received scancodes set out of range: %d
Expecting scancode set info...
identify keyboard command received
reset-disable command received
kbd_ctrl_to_kbd(): got value of 0x%02x
[mouse] internal mouse buffer full, ignoring mouse data.(%02x)
MOUSE: kbd_ctrl_to_mouse(%02xh)
mouse: sampling rate set: %d Hz
wheel mouse mode request rejected
mouse: resolution set to %d counts per mm
MOUSE: unknown last command (%02xh)
mouse: wrap mode: ignoring command 0x%02x
mouse: invalid resolution_cpmm
mouse: Warning: Read Data command partially supported.
kbd_ctrl_to_mouse(): got value of 0x%02x
keyboard: 8-bit write to %04x = %02x
write to port 60h, not ready for write
keyboard: scan convert turned off
write keyboard controller mode with value %02xh
write output port with value %02xh
write output port : %sable A20
write output port : processor reset requested!
=== unsupported write to port 60h(lastcomm=%02x): %02x
kbd: OUTB set and command 0x%02x encountered
keyboard BIOS name not supported
keyboard BIOS version not supported
'get controller version' not supported yet
write keyboard controller mode
io write to port 64h, command d0h (partial)
io write 0x64: command = 0xD3(write mouse outb)
io write 0x64: command = 0xD4 (write to mouse)
io write 0x64: write keyboard output buffer
io write 0x64: command = %02xh
io write 0x64: command 0xfe: reset cpu
io write to port 64h, useless command %02x
unsupported io write to keyboard port %x, value = %x
unknown address in bx_keyb_c::write()
service_keyboard: key in internal buffer waiting
service_keyboard: key(from mouse) in internal buffer waiting
service_keyboard(): no keys waiting
Ignoring useless mouse_motion call:
This should be fixed in the gui code.
keyboard_mouse.mouse.enabled
keyboard
Exit
Keyboard State
auxb
sysf
inpb
outb
kbd_clock_enabled
aux_clock_enabled
allow_irq1
allow_irq12
kbd_output_buffer
aux_output_buffer
last_comm
expecting_port60h
expecting_mouse_parameter
last_mouse_command
timer_pending
irq1_requested
irq12_requested
scancodes_translate
expecting_scancodes_set
current_scancodes_set
bat_in_progress
mouse
sample_rate
resolution_cpmm
scaling
saved_mode
enable
button_status
delayed_dx
delayed_dy
delayed_dz
im_request
im_mode
kbd_internal_buffer
num_elements
head
expecting_typematic
expecting_led_write
delay
repeat_rate
led_status
scanning_enabled
mouse_internal_buffer
controller_Q
controller_Qsize
controller_Qsource
8042 Keyboard controller
keyboard_mouse.mouse.type
CAPS
SCRL
paste_bytes: %d bytes
s.controller_Qsize: %02X
READ(%02x) = %02x
num_elements = %d
set_aux_clock_enable(%u)
kbd_enQ(0x%02x)
activating timer...
released
pressed
gen_scancode(): %s %s
LED status set to %02x
Switched to scancode set %d
keyboard_mouse.keyboard.type
setting typematic info
reset-enable command received
got 0xFE (resend)
reset command received
mouse_enQ(%02x)
  enable = %u
  allow_irq12 = %u
  aux_clock_enabled = %u
wheel mouse mode enabled
mouse: unknown resolution %d
mouse: scaling set to 1:1
mouse: scaling set to 2:1
mouse: stream mode on
mouse: wrap mode off
mouse: wrap mode on
mouse: remote mode on
mouse: read mouse ID
mouse enabled (stream mode)
mouse disabled (stream mode)
mouse: set defaults
wheel mouse mode disabled
mouse reset
mouse: get mouse information
mouse: ignoring 0xbb command
 allow_irq12 set to %u
get keyboard command byte
write command byte
aux device disabled
aux device enabled
Self Test
keyboard disabled
keyboard enabled
write output port
PS/2 mouse %s
[mouse] Dx=%d Dy=%d Dz=%d
12logfunctions
13bx_devmodel_c
14bx_keyb_stub_c
9bx_keyb_c
;*3$"
zPLR
CA?=;<XdDB@>
)Ye8*p
Zfq,
[g.- 
\h9/!
]i10#"
^jr2$
	_k3%
`l45&'
ams(t
bn:6
u+cvUVwxyz
{|O}KG~
oRSPLMH
EWNQJ7IFT
libbx_keyboard.so.0.0.0.debug
7zXZ
).CN
Zi(l
6mWa
``nW
>NY'u
[F|n
^hx~
UV*+
&	5jT
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.init
.plt
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.data
.bss
.gnu_debuglink
.gnu_debugdata
