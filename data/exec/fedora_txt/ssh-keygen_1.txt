/lib64/ld-linux-x86-64.so.2
<iO 
2.Va6
=.w e
:$#xSUCo8
ixCE
libfipscheck.so.1
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
libcrypto.so.10
EVP_PKEY_free
DSA_do_verify
BN_new
SSLeay
EVP_MD_size
EVP_get_digestbyname
BN_bn2dec
BN_bn2bin
MD5_Final
BIO_ctrl
RSA_set_ex_data
BN_add
PEM_write_DSA_PUBKEY
EVP_aes_256_cbc
RSA_set_method
RSA_generate_key_ex
RSA_sign
HMAC_CTX_cleanup
DSA_new
EVP_CIPHER_CTX_key_length
BN_is_prime_ex
BN_hex2bn
DSA_SIG_free
BN_mod_word
OPENSSL_config
BN_bn2hex
EVP_aes_256_ecb
EVP_des_cbc
BN_CTX_new
EVP_CIPHER_CTX_set_key_length
BN_CTX_free
EVP_des_ede3_cbc
RAND_status
EVP_Cipher
RAND_bytes
EVP_DigestFinal
OBJ_nid2sn
EVP_CipherInit
PEM_read_bio_PrivateKey
HMAC_Final
EVP_CIPHER_CTX_set_padding
RSA_blinding_on
DSA_SIG_new
RSA_public_decrypt
EVP_CIPHER_CTX_set_app_data
OPENSSL_add_all_algorithms_noconf
PEM_read_RSAPublicKey
BN_cmp
BN_set_word
BN_value_one
EVP_PKEY_get1_DSA
EVP_enc_null
BN_add_word
BIO_free
RSA_free
EVP_aes_192_cbc
ENGINE_register_all_complete
RAND_load_file
RSA_new
EVP_aes_192_ecb
EVP_rc4
BN_dec2bn
ERR_error_string
EVP_CIPHER_CTX_iv_length
ERR_get_error
RSA_size
EVP_sha1
EVP_aes_128_cbc
BN_bin2bn
PEM_write_bio_DSAPrivateKey
ENGINE_load_builtin_engines
EVP_DigestUpdate
HMAC_Update
EVP_aes_128_ecb
DSA_do_sign
BN_free
FIPS_mode
MD5_Init
BN_num_bits
BN_lshift
BN_copy
EVP_CIPHER_CTX_get_app_data
EVP_DigestInit
EVP_bf_cbc
BN_clear_free
EVP_PKEY_get1_RSA
BN_rand
EVP_CIPHER_CTX_init
PEM_write_RSAPrivateKey
BN_div
PEM_read_PUBKEY
EVP_md5
RSA_get_default_method
BIO_new
DSA_free
PEM_write_RSA_PUBKEY
DSA_generate_key
RAND_cleanup
PEM_write_RSAPublicKey
CRYPTO_free
BIO_s_mem
PEM_write_DSAPrivateKey
EVP_EncryptInit_ex
EVP_cast5_cbc
MD5_Update
RSA_private_decrypt
BN_rshift
BN_set_bit
DSA_generate_parameters_ex
BN_print_fp
EVP_CIPHER_CTX_cleanup
RSA_public_encrypt
BN_sub
EVP_EncryptUpdate
BIO_new_mem_buf
EVP_PKEY_type
HMAC_Init
BN_dup
PEM_write_bio_RSAPrivateKey
RSA_get_ex_data
libdl.so.2
dlclose
dlsym
dlopen
dlerror
libldap-2.4.so.2
liblber-2.4.so.2
libutil.so.1
libz.so.1
libnsl.so.1
libcrypt.so.1
libresolv.so.2
__b64_ntop
_getshort
__res_query
_getlong
__dn_expand
__b64_pton
libgssapi_krb5.so.2
libkrb5.so.3
libk5crypto.so.3
libcom_err.so.2
libc.so.6
setuid
__res_init
mkdtemp
fflush
__rawmemchr
__printf_chk
fopen
gai_strerror
strncmp
strrchr
pipe
__strdup
perror
__progname
getpwuid
initgroups
nanosleep
fork
__stack_chk_fail
__lxstat
unlink
putchar
mkdir
realloc
stdin
strtoll
_exit
strpbrk
getpid
kill
strspn
strftime
mkstemp
gmtime
strtol
isatty
feof
fgetc
execlp
fgets
getpwnam
calloc
strlen
ungetc
sigemptyset
openlog
getaddrinfo
memset
strstr
__errno_location
tcsetattr
read
memcmp
__syslog_chk
getsockopt
setgroups
dup2
strptime
poll
__fprintf_chk
ctime
getgrnam
stdout
fputc
setlogin
fputs
setresgid
memcpy
fclose
__memmove_chk
__vsnprintf_chk
strtoul
setsockopt
malloc
umask
strcasecmp
setegid
__res_state
getgid
__ctype_b_loc
getenv
setresuid
stderr
ioctl
__snprintf_chk
seteuid
getgroups
readv
getuid
getegid
strncasecmp
__fxstat
gethostname
fwrite
gettimeofday
rename
sigaction
geteuid
__memcpy_chk
waitpid
localtime
strchr
mktime
mkstemps
fdopen
tcgetattr
__ctype_toupper_loc
__ctype_tolower_loc
__cxa_finalize
freeaddrinfo
__vasprintf_chk
fcntl
__h_errno_location
__xstat
memmove
setgid
strcmp
__asprintf_chk
__libc_start_main
closelog
snprintf
program_invocation_short_name
__cxa_atexit
_edata
__bss_start
_end
compat20
__libc_csu_fini
BSDopterr
evp_aes_128_ctr
certflags_command
cert_key_id
cert_principals
change_passphrase
print_generic
print_bubblebabble
datafellows
fips_ciphers
identity_passphrase
identity_file
pkcs11provider
change_comment
print_fingerprint
certflags_src_addr
BSDoptarg
cert_serial
convert_format
convert_to
pkcs11_providers
certflags_flags
overwrite
BSDoptopt
compat13
key_equal_public
__libc_csu_init
identity_new_passphrase
convert_from
have_identity
cert_valid_to
log_level
quiet
BSDoptreset
delete_host
identity_comment
pkcs11_interactive
key_type_name
hash_hosts
print_public
cert_key_type
ca_key_path
find_host
show_cert
BSDoptind
cert_valid_from
key_equal
GLIBC_2.2.5
GLIBC_2.14
GLIBC_2.4
GLIBC_2.8
GLIBC_2.3
GLIBC_2.3.4
%z~"
%r~"
%j~"
%b~"
%Z~"
%R~"
%J~"
%B~"
%:~"
%2~"
%*~"
%"~"
%z}"
%r}"
%j}"
%b}"
%Z}"
%R}"
%J}"
%B}"
%:}"
%2}"
[]A\
AWAVA
ATE	
l$ dH
D$X1
d$@H
D$XdH3
h[]A\A]A^A_
AWAVAUATI
D$(1
D$(dH3
[]A\A]A^A_
D$(dH3
[]A\A]A^A_
AWE1
AVAUATI
D$ u
D$ H
|$ H
t$HE1
l$HH
L$ H
|$HH
|$PH
D$XH
<	tY< tUH
D$P1
#<\u
D$PH
D$P1
t$PH
D$XH
|$(H
t$PH
D$HH
|$(D
|$(H
L$HH
|$(H
AWAVAUATUSH
D$ uI
=kt"
=0t"
5]s"
<#u)E
|$ H
D$HH
T$HH
t$HH
|$0H
t$HH
|$(L
|$0L
T$(H
T$0E1
|$ L
T$0H
|$ E1
|$(L
|$0L
T$(H
t$(H
|$ D
T$0H
|$ E1
T$0H
|$ E1
T$0H
|$ 1
\$<D
\$<E
|$PH
t$PH
AWAVAUATU
=ej"
D$@d
L$p1
t$pH
=wh"
-Qh"
T$pH
-	h"
D$@H
D$<H
D$XA
D$PA
t$XL
|$hH
-Cd"
D$8H
D$XH
D$XH
=/b"
='b"
|$0H
|$0H
|$0H
|$0H
D$0H
[]A\A]A^A_
T$@H
-H\"
T$x1
D$xH
D$xH
|$0L
|$0H
|$0H
-iX"
|$0H
t$xH
T$xH
L$xH
T$dH
t$xH
D$0H
T$dH
t$xH
|$0H
t$xH
T$xH
|$0H
|$0H
T$ H
T$dH
t$xA
T$dH
t$xH
|$0H
D$0H
D$(H
D$(L
=DA"
=*F"
fffff.
=p."
=Z."
tLL9
d$ H
fffff.
l$ 1
fff.
\$ H
l$(L
d$0H
ffff.
d$ H
d$ H
D$h1
|$@H
L$@L
D$@L
L$ L
T$hdH3
\$pH
l$xL
L$ L
=}A"
|$ H
d$pL
l$01
d$pL
D$ H
[]A\
AWAVAUATA
|$0H
T$(dH
D$h1
T$0H
-[2"
T$`H
|$`E1
|$`N
D$`J
|$`u
T$(A
t$@H
D$HH
T$0H
t$`H
t$<L
D$(I
5K1"
|$@M
t$@I
|$XH
|$X1
L$`H
D$HH9D$(
T$XL
D$ H
D$ H
t$XH
t$XH
ffff.
[]A\
ffff.
ffff.
ATE1
\$8H
D$ H
D$(H
D$0H
D$8H
D$@H
D$HH
D$PH
D$XH
D$`H
D$hH
53&"
[]A\A]A^A_
D$ H
[]A\A]A^A_
ATUH
 []A\
d$ L
l$(L
t$0H
AWAVAUI
|$ H
|$ H
|$ A
[]A\A]A^A_
AWAVI
AUATUSH
|$0L
|$0I
|$01
|$01
|$0H
|$0H
\$PH
[]A\A]A^A_
fff.
|$ I
D$81
t$ L
|$ H
T$8dH3
\$HH
l$PL
d$XL
l$`L
t$hL
|$pH
\$@H
\$ H
l$(L
d$0H
\$(H
l$0L
d$8L
l$@H
9T$ 
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
l$ H
d$(1
l$0H
l$ L
d$(L
l$0H
\$(H
l$0L
d$8L
l$@H
fff.
ATUSH
[]A\
AWAVAUATI
\$ A
L$ H
[]A\A]A^A_
ffff.
ffffff.
fffff.
fffff.
d$ H
ffffff.
fff.
d$ H
fff.
d$ H
fff.
d$ H
ffff.
l$ L
d$(L
l$0L
t$8L
|$@H
[]A\
l$ L
d$(L
l$0L
t$8L
|$@H
fffff.
[]A\
l$ H
ffff.
fff.
fffff.
fff.
AUATUH
[]A\A]
ffffff.
ffffff.
ffffff.
ffffff.
AUATI
[]A\A]
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
fffff.
|$pH
4$E1
fffff.
H9E 
\$(H
l$0L
d$8L
l$@H
\$(H
l$0H
d$8L
l$@H
\$(H
l$0L
d$8L
l$@H
\$(H
l$01
d$8L
l$@H
H9U 
\$ H
l$(L
d$0H
\$ H
l$(H
d$0H
\$ H
l$(L
d$0H
\$ H
l$(L
d$0H
fffff.
P H;
@ H;
HcP0H
l$ L
d$(L
l$0H
ATUSH
d$ L
[]A\A]A^A_
d$ L
d$ H
l$ L
d$(L
l$0H
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
fffff.
d$ H
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
AWAVAUATI
D$(1
tWE1
t	;X 
D$(H
T$(dH3
8[]A\A]A^A_
D$(H
ffff.
AWAVAUATU
|$(dH
|$0L
t$(H
|$0H
|$01
[]A\A]A^A_
AUATI
[]A\A]
<	uII
fff.
AWAVAUATI
l$pH
D$pH
l$HI
l$H<#t
E I9
L$@H
T$ H
[]A\A]A^A_
l$HA
t$HD
t$<H
|$HH
t$<H
|$HH
T$<M
T$,tyA
9D$,tUI
L$,H
t$,H
l$@L
T$@H
t$@H
ATU1
[]A\
ffffff.
ffff.
l$ L
d$(L
l$0L
t$8L
|$@H
AUATUH
[]A\A]
AUATUH
[]A\A]
d$ L
d$ H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
ffffff.
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
ATUH
ty<?t
[]A\
AWAVAUATUS
,tNE
t< A
[]A\A]A^A_
d$ H
d$ L
l$(L
t$0H
d$ L
l$(L
t$0H
AWAVAUATUSH
d$ A
[]A\A]A^A_
|$PA
T$X1
t$8D
|$0D
l$(D
t$HH
T$XdH3
\$hH
l$pL
d$xL
AWAVAUI
D$81
|$(D
?s+E)
s,D)
tVE1
l$0L+l$(H
|$0D
D9-T
D$8dL3
H[]A\A]A^A_
fffff.
AWAVAUATUSH
|$x1
L$LH
T$4L
<!tN<#tJH
|$pH
|$pH
|$pH
|$pH
l$4t
T$09T$L
T$@H
|$(1
t$4H
T$@1
D$ H
t$pH
|$hH
t$ H
D$(H
t$pH
|$hH
t$(H
H+l$x
T$PH
[]A\A]A^A_
t$TH
T$@1
D$ D
L$0H
|$XH
T$0H
\$ D
xxxxxxxx
d$ A
|$ H
z(dH
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
fff.
z dH
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
ffffff.
ATUH
[]A\
ffff.
d$ H
fff.
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$81
|$ H
T$ f;
T$8dH3
t$$1
9T$4t8v
D$H1
T$HdH3
AVAUATUSH
[]A\A]A^
D$0H
D$8H
D$ H
D$Pf
L$TH
T$PH
t$0H
D$pf
L$tH
D$ H
AWAVAUATI
D$X1
t$@H
t$@H
T$XdH3
h[]A\A]A^A_
AWAVAUI
ATUSH
D$X1
t$@H
t$@H
T$XdH3
h[]A\A]A^A_
H;='
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
|$ H
L;%}
|$ 1
w'L)
0<	wJI
 []A\
	v'H
w%Hc
E0t^H
EXtLH
E@t:H
E8t(H
fff.
ffff.
ATUH
[]A\
fff.
\$(H
l$0L
d$8L
l$@H
ffffff.
\$(H
l$0L
d$8L
l$@H
ffffff.
9]0w
E0t}H
E t(
ffffff.
\$ H
l$(L
d$0L
l$8L
t$@H
ffff.
AWAVAUA
ATUH
|$PdH
|$PD
|$P1
|$P1
|$PH
|$PH
|$PH
|$PH
|$pE1
t$PH
t$HH
t$8H
t$PH
t$PH
t$<H
|$P1
|$P1
t$@H
T$HH9
t$DH
T$8H
|$pH
t$8H
T$<L
T$<H
|$pL
|$p1
|$p1
[]A\A]A^A_
|$P1
|$PH
|$PH
t$PH
t$LH
T$LH
t$ H
T$LH
t$ H
|$p1
|$p1
t$@H
D$(H
D+D$,H
ffffff.
AUATI
~(dH
D$(H
S0wp
[]A\A]
D9c0w
D$0trH
[]A\
D$(t
D$ u
AWAVAUATUH
([]A\A]A^A_
D$H1
T$HdH3
\$XH
l$`L
d$hL
l$pH
AWAVAUATUS
T$,H
T$,1
dH34%(
[]A\A]A^A_
T$0H
T$0Ic
l$ H
d$ H
d$ L
l$(L
t$0H
d$ L
l$(L
t$0H
fff.
fff.
K(td
H;A@
H;AH
d$ L
l$(L
t$0H
ATUSH
D$h1
T$hdH3
p[]A\
C(9h0w
ATUSH
[]A\
=7Z!
=@S!
-'S!
|8t[H
=\Y!
-aR!
fff.
5#W!
ffffff.
ATUSH
[]A\
fff.
[]A\
AWAVAUATUH
Eu,H
[]A\A]A^A_
[]A\A]A^A_
fffff.
fff.
<"t\<=
;=td
d$ H
fffff.
l$ L
d$(L
l$0H
ffff.
AUATUSH
[]A\A]
<mt8
R<dt
<htjH
<MuLH
tQfE
?[t#H
T$@H
L$HL
D$PL
L$Xt:
)D$`
)L$p
D$(1
D$(dH3
L$HL
D$PL
L$Xt:
)D$`
)L$p
D$(1
D$0H
D$(dH3
t$ H
d$ L
/t%H
AWAVAUATUSH
T$ H
T$8H
tiE1
D;|$
[]A\A]A^A_
fff.
[]A\A]A^
fffff.
ATUSH
[]A\A]
ffff.
ffffff.
D$(1
L$(dH3
C8H+C(H
K0H+K H
S H)
H+s8H)
H;s8
AUATUH
u#H=
[]A\A]
(taH
AWAVI
|$0H
|$0D
ddddddddH
ddddddddH
ddddddddH
ddddddddH
ddddddddI
ddddddddI
ddddddddI
ddddddddH
|$`H
T$`I
T$hH
T$pH
T$xH
[]A\A]A^A_
fffff.
AWAVE
|$ D
|$ 1
|$ H
|$ A
dddddddd
|$@L
dddddddd
|$@D
dddddddd
t$pH
|$pL
dddddddd
ddddddddI
ddddddddH
ddddddddL
ddddddddL
\$pH
l$xL
[]A\A]A^A_
AVAUATUSH
|$@H
|$@D
t$pH
t$pH
ddddddddH
ddddddddH
ddddddddH
ddddddddI
ddddddddI
ddddddddI
ddddddddI
dddddddd
T$pH
L$xH
|$ D
|$ I
[]A\A]A^A_
fffff.
AWAVAUATUH
|$ H
|$ 1
|$ I
|$@H
|$@D
t$pH
ddddddddH
ddddddddH
dddddddd
ddddddddH
ddddddddI
ddddddddI
ddddddddI
ddddddddH
\$pH
l$xL
[]A\A]A^A_
ddddddddH
ddddddddH
ddddddddH
ddddddddH
D$pH
ddddddddH
ddddddddI
ddddddddH
D$xH
ddddddddH
t$pA
AWAVAUATUH
D$h1
T$01
L$(H
T$hdH3
x[]A\A]A^A_
T$(1
D9d$(u
AUATUH
 []A\A]A^
ffff.
4$u	E1
l$ L
d$(L
l$0H
ffffff.
D$(H
D$XH
L$PA
D$pIc
D$xI
D$ L
D$ L
D$ H
L$PA
d$ H
H;kps7H
[]A\
[]A\
fff.
|$@A
D$@1
D$@H
D$@1
D$@1
D$@L
l$0D
|$,L
H9kp
L$`L
D$ H
T$hH
|$XA
T$XH
t$`H
T$XH
t$HL
t$HL
t$HL
|$,H
l$0E
D$ H
D$ H
D$ 1
|$,H
T$8H
HcT$,H
|$XA
T$pH
T$hH
AVAUL
[]A\A]A^
[]A\A]A^1
fffff.
AVAUATE1
[]A\A]A^
AWAVI
AUATUSH
([]A\A]A^A_
[]A\
ATUSH
[]A\
AVAUATI
H;T$
H9T$
H9L$
H9L$
dH34%(
([]A\A]A^A_
 t!H
l$ L
d$(L
l$0H
AWAVAUATUSH
#D9t$
[]A\A]A^A_
ffffff.
D$(H
HcD$
T$(H
L$0H
t\Ic
|$(A
|$(f
D9l$
T$(H
T$(H
D$ t
T$(H
D$(t
t7f;B
.tEM
AWAVAUI
ATUSH
[]A\A]A^A_
gfff
?Xu.
D$(%
AWAVAUATUSH
L$lH
T$pf
D$lE
|$pA
L$dH
t$P1
t$X1
t$ 1
t$H1
t$(1
t$01
t$81
t$@1
ED$xH
D$xH
D$xuLH
[]A\A]A^A_
D$X1
T$ H
D$8"
D$H"
T$XdH3
\$hH
l$pL
d$xL
tEM9
tXM9
D$(1
T$(dH3
[]A\
AUATUH
D$81
t$0L
$HcL$
u5H9
4$H)
H+D$ H
T$8dH3
H[]A\A]A^A_
[]A\A]
80ub
l$ L
d$(L
l$0H
D$(1
T$(dH3
0[]A\
l$ L
t$(L
|$0H
Invalid relative certificate time %s
Certificate time %s cannot be represented
buffer_get_bignum_bits: input buffer too small: need %d have %d
buffer_get_bignum_bits: BN_bin2bn failed
  -A          Generate non-existent host keys for all key types.
  -a trials   Number of trials for screening DH-GEX moduli.
  -B          Show bubblebabble digest of key file.
  -b bits     Number of bits in the key to create.
  -C comment  Provide new comment.
  -c          Change comment in private and public key files.
  -D pkcs11   Download public key from pkcs11 token.
  -e          Export OpenSSH to foreign format key file.
  -F hostname Find hostname in known hosts file.
  -f filename Filename of the key file.
  -G file     Generate candidates for DH-GEX moduli.
  -g          Use generic DNS resource record format.
  -H          Hash names in known_hosts file.
  -h          Generate host certificate instead of a user certificate.
  -I key_id   Key identifier to include in certificate.
  -i          Import foreign format to OpenSSH key file.
  -L          Print the contents of a certificate.
  -l          Show fingerprint of key file.
  -M memory   Amount of memory (MB) to use for generating DH-GEX moduli.
  -m key_fmt  Conversion format for -e/-i (PEM|PKCS8|RFC4716).
  -N phrase   Provide new passphrase.
  -n name,... User/host principal names to include in certificate
  -O option   Specify a certificate option.
  -P phrase   Provide old passphrase.
  -p          Change passphrase of private key file.
  -R hostname Remove host from known_hosts file.
  -r hostname Print DNS resource record.
  -S start    Start point (hex) for generating DH-GEX moduli.
  -s ca_key   Certify keys with CA key.
  -T file     Screen candidates for DH-GEX moduli.
  -t type     Specify type of key to create.
  -V from:to  Specify certificate validity interval.
  -W gen      Generator to use for generating DH-GEX moduli.
  -y          Read private key file and print public key.
  -z serial   Specify a serial number.
Option corrupt: extra data at end
Invalid certificate time format %s
Couldn't load CA public key "%s"
cannot read public key from pkcs11
No PKCS#11 key matching %s found
%s: key "%s" type %s cannot be certified
Could not upgrade key %s to certificate
Could not open "%s" for writing: %s
Could not write certified key to %s
Signed %s key %s: id "%s" serial %llu%s%s valid %s
Enter file in which the key is
failed to read v2 public key from %s.
Specified known hosts path too long
line %d: invalid hashed name: %.64s...
# Host %s found: line %d type %s%s
Warning: ignoring CA key for host: %.64s
Warning: ignoring host name with metacharacters: %.64s
%s is not a valid known_hosts file.
Not replacing existing known_hosts file because of errors
Original contents retained as %s
WARNING: %s contains unhashed entries
Delete this file to ensure privacy of hostnames
Invalid ECDSA key length - valid lengths are 256, 384 or 521 bits
%s: generating new host keys: 
Could not save your public key in %s
Unsupported conversion format "%s"
force-command already specified
source-address already specified
Unsupported certificate option "%s"
Desired generator has bad value: %s (%s)
Invalid number of trials: %s (%s)
Invalid relative certificate life %s
Invalid certificate life specification %s
Empty certificate validity interval
AegiqopclBHLhvxXyF:b:f:t:D:I:P:m:N:n:O:C:r:g:R:T:G:M:S:s:a:V:W:z:
Can only have one of -p and -c.
Must specify key id (-I) when certifying
        Type: %s %s certificate
Enter new passphrase (empty for no passphrase): 
Pass phrases do not match.  Try again.
Your identification has been saved with the new passphrase.
Comments are only supported for RSA1 keys.
The comment in your key file has been changed.
version 1 keys are not supported
%u-bit %s, converted by %s@%s from OpenSSH
---- BEGIN SSH2 PUBLIC KEY ----
---- BEGIN SSH2 ENCRYPTED PRIVATE KEY ----
do_convert_private_ssh2_from_blob: remaining bytes in key blob %d
%s: %s is not a recognised public key format
%s: unsupported pubkey type %d
%s: unrecognised raw private key format
Couldn't open modulus candidate file "%s": %s
modulus candidate generation failed
Couldn't open moduli file "%s": %s
Generating public/private %s key pair.
Enter file in which to save the key
Could not create directory '%s': %s
Enter passphrase (empty for no passphrase): 
Passphrases do not match.  Try again.
Your identification has been saved in %s.
Your public key has been saved in %s.
%s: %s=%s
force-command
permit-X11-forwarding
permit-agent-forwarding
permit-port-forwarding
permit-pty
permit-user-rc
source-address
forever
%Y-%m-%dT%H:%M:%S
before %s
after %s
from %s to %s
usage: %s [options]
Options:
  -q          Quiet.
  -v          Verbose.
 UNKNOWN OPTION (len %u)
@cert-authority
%u %s%s %s (%s)
hash_host failed
%s%s%s 
key_write failed
%Y-%m-%d
%.4s-%.2s-%.2s
%.4s-%.2s-%.2sT%.2s:%.2s:%.2s
Invalid certificate time %s
Enter passphrase: 
 for 
unknown key type %s
%s: %d keys
Couldn't load CA key "%s"
Empty principal name
%s: unable to open "%s"
Couldn't not certify key %s
%s-cert.pub
%s: fdopen: %s
.ssh/id_rsa
.ssh/identity
.ssh/id_dsa
bad key type
%s/%s
%s (%s): 
no comment
%s: %s: %s
line %d too long: %.40s...
%s is not a public key file.
 (CA key)
~/.ssh/known_hosts
known_hosts path too long
.XXXXXXXXXX
.old
mkstemp: %s
line %d missing key: %.40s...
line %d invalid key: %.40s...
unlink %.100s: %s
link %.100s to %.100s: %s
rename"%s" to "%s": %s
%s updated.
key bits exceeds maximum %d
DSA keys must be 1024 bits
Key must at least be 768 bits
/etc/ssh/ssh_host_key
rsa1
RSA1
/etc/ssh/ssh_host_rsa_key
/etc/ssh/ssh_host_dsa_key
ecdsa
ECDSA
/etc/ssh/ssh_host_ecdsa_key
Could not stat %s: %s
key_generate failed
%s@%s
Saving the key failed: %s.
fdopen %s failed
write key failed
You don't exist, go away!
gethostname
Bits has bad value %s (%s)
RFC4716
ssh2
PKCS8
Identity filename too long
clear
no-x11-forwarding
permit-x11-forwarding
no-agent-forwarding
no-port-forwarding
no-pty
no-user-rc
force-command=
Empty force-command option
source-address=
Empty source-address option
Invalid source-address list
Memory limit is %s: %s
Output filename too long
Invalid start point.
Invalid serial number: %s
Too few arguments.
Too many arguments.
Cannot use -l with -D or -R.
%s is not a public key
%s is not a certificate
        Public key: %s %s%s
        Signing CA: %s %s%s
        Key ID: "%s"
        Serial: %llu
        Valid: %s
        Principals: 
(none)
                %s
        Critical Options: 
        Extensions: 
Enter old passphrase: 
Bad passphrase.
Key has comment '%s'
Enter same passphrase again: 
Key now has comment '%s'
Enter new comment: 
load failed
key_to_blob failed
Comment: "%s"
---- END SSH2 PUBLIC KEY ----
PEM_write_RSA_PUBKEY failed
PEM_write_DSA_PUBKEY failed
%s: unsupported key type %s
PEM_write_RSAPublicKey failed
%s: unknown key format %d
 END 
input line too long.
unget: %s
uudecode failed.
bad magic 0x%x != 0x%x
ignore (%d %d %d %d)
none
unsupported cipher %s
e %lx
decode blob failed.
key write failed
no keys found.
modulus screening failed
.ssh
Created directory '%s'.
%s already exists.
Overwrite (y/n)? 
The key fingerprint is:
%s%s %s
The key's randomart image is:
abcde12345
do_ca_sign
load_pkcs11_key
add_flag_option
add_string_option
do_convert_to
do_convert_to_pkcs8
do_convert_to_pem
do_convert_from
do_convert_from_pkcs8
do_convert_from_pem
-----BEGIN
Truncated RSA1 identifier
Incorrect RSA1 identifier
<unknown>
dsa w/o comment
rsa w/o comment
%s: BIO_new_mem_buf failed
%s: RSA_blinding_on failed
Unsupported RSA1 cipher %d
cipher_set_key_string failed.
%s: BIO_new failed
%s: cannot save key type %d
open %s failed: %s.
ssh_keys
%s: cannot parse key type %d
%s: unsupported key type
%s: key_to_certified failed
%s: keyfile "%s" missing
%s: PEM_read_PrivateKey failed
%s: PEM_read_PrivateKey: mismatch or unknown EVP_PKEY save_type %d
read PEM private key done: type %s
Bad passphrase supplied for RSA1 key
save_private_key_rsa: bad cipher
passphrase too short: have %d bytes, need > 4
write to key file %s failed: %s
%s: fstat of key file %.200s%sfailed: %.100s
%s: key file %.200s%stoo large
%s: read from key file %.200s%sfailed: %.100s
%s: key file %.200s%schanged size while reading
Could not load "%s" as a RSA1 public key
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
Permissions 0%3.3o for '%s' are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
could not open key file '%s': %s
bad permissions: ignore key: %s
%s: certificate does not match private key %s
%s: could not open keyfile "%s": %s
key_private_to_blob
SSH PRIVATE KEY FILE FORMAT 1.1
key_private_pem_to_blob
key_load_file
key_parse_private_pem
key_parse_private_type
key_parse_private_rsa1
key_load_private_cert
key_in_file
buffer_get_short: buffer error
buffer_get_string_ret: cannot extract length
buffer_get_string_ret: bad string length %u
buffer_get_string_ret: buffer_get failed
buffer_get_string: buffer error
buffer_get_cstring_ret: string contains \0
buffer_get_cstring: buffer error
buffer_get_string_ptr: bad string length %u
buffer_get_string_ptr: buffer error
buffer_get_char_ret: buffer_get_ret failed
buffer_get_int: buffer error
buffer_put_cstring: s == NULL
buffer_get_char: buffer error
buffer_put_bignum_ret: BN_bn2bin() failed: oi %d != bin_size %d
buffer_put_bignum: buffer error
buffer_get_bignum_ret: invalid length
buffer_get_bignum_ret: input buffer too small
buffer_get_bignum_ret: BN_bin2bn failed
buffer_get_bignum_ret: buffer_consume failed
buffer_get_bignum: buffer error
buffer_put_bignum2_ret: negative numbers not supported
buffer_put_bignum2_ret: BN too small
buffer_put_bignum2_ret: BN_bn2bin() failed: oi %d != bin_size %d
buffer_put_bignum2: buffer error
buffer_get_bignum2_ret: invalid bignum
buffer_get_bignum2_ret: negative numbers not supported
buffer_get_bignum2_ret: cannot handle BN of size %d
buffer_get_bignum2_ret: BN_bin2bn failed
buffer_get_bignum2: buffer error
buffer_append_space: len %u not supported
buffer_append_space: alloc %u not supported
buffer_get_ret: trying to get more bytes %d than in buffer %d
buffer_consume_ret: trying to get more bytes than in buffer
buffer_consume_end: trying to get more bytes than in buffer
buffer_get: buffer error
buffer_consume: buffer error
bad cipher %s [%s]
cipher ok: %s [%s]
ciphers ok: [%s]
evp_crypt: EVP_Cipher failed
%s: wrong iv length %d != %d
%s: bad cipher %d
3des
3des-cbc
aes128-cbc
aes192-cbc
aes256-cbc
rijndael-cbc@lysator.liu.se
aes128-ctr
aes192-ctr
aes256-ctr
blowfish
blowfish-cbc
cast128-cbc
arcfour
arcfour128
arcfour256
Warning: use of DES is strongly discouraged due to cryptographic weaknesses
cipher_init: key length %d is insufficient for %s.
cipher_init: iv length %d is insufficient for %s.
cipher_init: EVP_CipherInit failed for %s
cipher_init: set keylen (%d -> %d)
cipher_init: set keylen failed (%d -> %d)
cipher_init: EVP_CipherInit: set key failed for %s
evp_crypt: EVP_Cipher failed during discard
cipher_encrypt: bad plaintext length %d
cipher_cleanup: EVP_CIPHER_CTX_cleanup failed
cipher_get_keyiv
cipher_set_keyiv
ssh_aes_ctr_init: wrong aes key length
ssh_aes_ctr_init: cannot initialize aes encryption
ssh_aes_ctr_iv: no context
ssh1_3des_cbc: no context
%s: bad 3des iv length: %d
%s: no 3des context
%s: Installed 3DES IV
%s: Copying 3DES IV
ssh1_3des_iv
extract_salt: string too short
extract_salt: invalid magic identifier
extract_salt: missing salt termination character
extract_salt: bad encoded salt length %u
extract_salt: salt decode error
extract_salt: expected salt len %d, got %d
%s: loading entries for host "%.100s" from file "%s"
Invalid hashed host line %lu of %s
Warning: %s, line %lu: keysize mismatch for host %s: actual %d vs. announced %d.
Warning: replace %d with %d in %s, line %lu.
%s: found %skey type %s in file %s:%lu
add_host_to_hostfile: host_hash failed
add_host_to_hostfile: saving key in %s failed
host_hash: __b64_ntop failed
%s%s%c%s
revoked 
@revoked
%s: loaded %lu keys
%s: invalid marker at %s:%lu
no key to look up
load_hostkeys
DAEMON
QUIET
debug3
debug2
debug1
internal error
fatal
%.500s
USER
AUTH
AUTHPRIV
LOCAL0
LOCAL1
LOCAL2
LOCAL3
LOCAL4
LOCAL5
LOCAL6
LOCAL7
FATAL
ERROR
INFO
VERBOSE
DEBUG
DEBUG1
DEBUG2
DEBUG3
Unrecognized internal syslog level code %d
Unrecognized internal syslog facility code %d
%04d%02d%02d%02d%02d%02d %u %u %u %u %x 
Invalid memory amount (min %ld, max %ld)
Limited memory: %u MB; limit %lu MB
Increased memory: %u MB; need %u bytes
Decreased memory: %u MB; want %u bytes
%.24s Sieve next %u plus %u-bit
%.24s Sieved with %u small primes in %ld seconds
Minimum primality trials is %d
%.24s Final %u Miller-Rabin trials (%x generator)
%10u: q failed first possible prime test
%10u: p is almost certainly prime
%10u: q is almost certainly prime
%.24s Found %u safe primes of %u candidates in %ld seconds
sieve_large %u
Too many bits: %u > %lu
Too few bits: %u < %u
BN_rand failed
BN_copy: failed
BN_set_bit: failed
start point: 0x%s
test q = largebase+%u
BN_set_word failed
BN_add failed
%.24s Found %u candidates
BN_CTX_new failed
%10u: comment or short line
%10u: known composite
%10u: (%u) Sophie-Germain
BN_hex2bn failed
BN_lshift failed
BN_add_word failed
%10u: (%u)
BN_rshift failed
Unknown prime type
%10u: bit size %u mismatch
%10u: bit size %u too short
%10u: generator %d != %d
%10u: no known generator
%10u: p is not prime
%10u: q is not prime
/usr/libexec/openssh/ssh-askpass
read_passphrase: stdin is not a tty
read_passphrase: can't open %s: %s
internal error: askpass undefined
/dev/tty
DISPLAY
SSH_ASKPASS
ssh_askpass: fflush: %s
ssh_askpass: pipe: %s
ssh_askpass: fork: %s
ssh_askpass: dup2: %s
ssh_askpass: exec(%s): %s
rsa_public_encrypt() exponent too small or not odd
rsa_public_encrypt: BN_bin2bn failed
rsa_private_decrypt: BN_bin2bn failed
rsa_generate_additional_parameters: BN_new failed
rsa_generate_additional_parameters: BN_CTX_new failed
rsa_generate_additional_parameters: BN_sub/mod failed
rsa_public_encrypt() failed
rsa_private_decrypt() failed
xmalloc: zero size
xcalloc: zero size
xrealloc: zero size
xmalloc: out of memory (allocating %lu bytes)
xcalloc: nmemb * size > SIZE_T_MAX
xcalloc: out of memory (allocating %lu bytes)
xrealloc: nmemb * size > SIZE_T_MAX
xrealloc: out of memory (new_size %lu bytes)
xfree: NULL pointer given as argument
xasprintf: could not allocate memory
%s: couldn't parse address %.100s
Inconsistent mask length for network "%.100s"
%s: empty entry in list "%.100s"
%s: list entry "%.100s" too long
%s: list entry "%.100s" contains invalid characters
Invalid network entry "%.100s"
0123456789abcdefABCDEF.:/
addr_match_list
addr_match_cidr_list
write_bignum: BN_bn2dec() failed
key_new_private: BN_new failed
key_type_from_name: unknown key type '%s'
%s: unknown/non-ECDSA key type '%s'
key_to_blob: unsupported key type %d
key_verify: invalid key type %d
key_is_private: bad key type %d
%s: no signed certificate blob
%s: DSA_generate_parameters failed
key_generate: cert keys cannot be generated directly
key_from_blob: can't read key type
key_from_blob: can't read rsa key
key_from_blob: can't read dsa key
key_from_blob: cannot handle type %s
%s: key ID contains \0 character
%s: critical option data invalid
%s: Invalid signature key type %s (%d)
%s: Invalid signature on certificate
%s: Certificate signature verification failed
key_from_blob: can't parse cert data
key_from_blob: remaining bytes in key blob %d
key_from_private: BN_copy failed
key_from_private: unknown type %d
%s: nprincipals (%u) > CERT_MAX_PRINCIPALS (%u)
key_read: claimed key size %d does not match actual %d
key_read: key_from_blob %s failed
key_read: type mismatch: encoding error
key_read: loaded key is not a cert
key_fingerprint_raw: bad digest type %d
key_fingerprint_raw: bad key type %d
key_fingerprint_raw: blob is null
key_fingerprint: null from key_fingerprint_raw()
key_fingerprint: bad digest representation %d
%s: legacy ECDSA certificates are not supported
Certificate invalid: not a host certificate
Certificate invalid: not a user certificate
%s: system clock lies before epoch
Certificate invalid: not yet valid
Certificate lacks principal list
Certificate invalid: name is not a listed principal
%s: certificate has unknown type %d
%s: CA key has unsupported type %s
%s: signature operation failed
%s: unsupported EC curve name "%.100s"
%s: unsupported EC curve nid %d
ssh-rsa
ssh-dss
ssh-rsa-cert-v00@openssh.com
ssh-dss-cert-v00@openssh.com
ssh-rsa-cert-v01@openssh.com
ssh-dss-cert-v01@openssh.com
ssh-unknown
SSH_FINGERPRINT_TYPE
sha1:
RSA-CERT-V00
DSA-CERT-V00
RSA-CERT
DSA-CERT
user
host
key names ok: [%s]
key_to_blob: key == NULL
key_sign: invalid key type %d
%s: no cert data
key_write: failed for RSA key
%s %s
key_free: key is NULL
key_free: bad key type %d
key_new: RSA_new failed
key_new: BN_new failed
key_new: DSA_new failed
key_new: bad key type %d
%s: DSA_new failed
%s: DSA_generate_key failed.
%s: RSA_new failed
%s: BN_new failed
%s: key generation failed.
key_generate: unknown type %d
%s: parse error
Unknown certificate type %u
%s: Too many principals
%s: Principals data invalid
%s: extension data invalid
%s: Signature key invalid
key_demote: RSA_new failed
key_demote: BN_dup failed
key_demote: DSA_new failed
key_read: missing whitespace
key_read: missing keytype
key_read: short string
key_read: type mismatch
key_read: uudecode %s failed
key_read: bad key type: %d
%02x:
+--[%4s %4u]
 .o+=*BOX@%&#/^SE
key_equal: bad key type %d
%s: key has incorrect type %s
Certificate invalid: expired
%s: key lacks cert info
key_write
dsa_generate_private_key
rsa_generate_private_key
key_cert_copy
key_ecdsa_nid_from_name
cert_parse
key_to_certified
key_drop_cert
key_certify
key_cert_check_authority
key_curve_name_to_nid
key_curve_nid_to_bits
key_curve_nid_to_name
temporarily_use_uid: %u/%u (e=%u/%u)
%s: was able to restore old [e]uid
%s: euid incorrect uid:%u euid:%u (should be %u)
restore_uid: temporarily_use_uid not effective
permanently_set_uid: no user given
permanently_set_uid: temporarily_use_uid effective
%s: was able to restore old [e]gid
%s: egid incorrect gid:%u egid:%u (should be %u)
getgroups: %.100s
initgroups: %s: %.100s
setgroups: %.100s
setegid %u: %.100s
seteuid %u: %.100s
permanently_drop_suid: %u
setresuid %u: %.100s
restore_uid: (unprivileged)
restore_uid: %u/%u
permanently_set_uid: %u/%u
setresgid %u: %.100s
permanently_drop_suid
permanently_set_uid
dump_base64: len > 65536
fcntl(%d, F_GETFL, 0): %s
fd %d is O_NONBLOCK
fd %d setting O_NONBLOCK
fd %d is not O_NONBLOCK
fd %d clearing O_NONBLOCK
fd %d is TCP_NODELAY
fd %d setting TCP_NODELAY
[%s]:%d
put_host_port: asprintf: %s
put_host_port: %s
addargs: argument too long
replacearg: argument too long
%s: NULL replacement
%s: too many keys
%s: string too long
%s: unknown key %%%c
/dev/null
Couldn't open /dev/null: %s
dup2: %s
tohex: length > 65536
TMPDIR
/tmp/ssh-XXXXXXXXXXXX
%s/ssh-XXXXXXXXXXXX
%s: template string too short
af11
0x%02x
%s: set socket %d IPV6_V6ONLY
setsockopt IPV6_V6ONLY: %s
af12
af13
af14
af22
af23
af31
af32
af33
af41
af42
af43
lowdelay
throughput
reliability
fcntl(%d, F_SETFL, O_NONBLOCK): %s
fcntl(%d, F_SETFL, ~O_NONBLOCK): %s
getsockopt TCP_NODELAY: %.100s
setsockopt TCP_NODELAY: %.100s
replacearg: tried to replace invalid arg %d >= %d
tilde_expand_filename: ~username too long
tilde_expand_filename: No such user %s
tilde_expand_filename: No such uid %ld
tilde_expand_filename: Path too long
%s: %s line %lu exceeds size limit
percent_expand
read_keyfile_line
mktemp_proto
sock_set_v6only
Cssh_dss_sign: no DSA key
ssh_dss_sign: sign failed
bad sig size %u %u
incorrect
ssh_dss_verify: no DSA key
ssh_dss_verify: BN_new failed
ssh_dss_verify: signature %s
ssh_dss_verify: cannot handle type %s
ssh_dss_verify: remaining bytes in signature %d
bad sigbloblen %u != SIGBLOB_LEN
ssh_dss_verify: DSA_SIG_new failed
ssh_dss_verify: BN_bin2bn failed
ssh_rsa_sign: no RSA key
slen %u > len %u
ssh_rsa_verify: no RSA key
bad hashlen
bad siglen
RSA_public_decrypt failed: %s
oid mismatch
hash mismatch
ssh_rsa_sign: EVP_get_digestbynid %d failed
ssh_rsa_sign: RSA_sign failed: %s
ssh_rsa_sign: slen %u slen2 %u
ssh_rsa_verify: RSA modulus too small: %d < minimum %d bits
ssh_rsa_verify: cannot handle type %s
ssh_rsa_verify: remaining bytes in signature %d
ssh_rsa_verify: len %u > modlen %u
ssh_rsa_verify: add padding: modlen %u > len %u
ssh_rsa_verify: EVP_get_digestbynid %d failed
bad decrypted len: %d != %d + %d
ssh_rsa_verify: signature %scorrect
0!0	
unknown error
success
out of memory
general failure
invalid parameter
name does not exist
data does not exist
verify_host_key_dns
No key to look up!
DNS lookup error: %s
%s IN TYPE%d \# %d %02x %02x 
%s IN SSHFP %d %d 
is_numeric_hostname called with NULL hostname
found %d secure fingerprints in DNS
found %d insecure fingerprints in DNS
dns_read_key: null from key_fingerprint_raw()
matching host key fingerprint found in DNS
mismatching host key fingerprint found in DNS
no host key fingerprint found in DNS
skipped DNS lookup for numerical hostname
Error calculating host key fingerprint.
Error parsing fingerprint from DNS.
export_dns_rr: unsupported algorithm
OpenSSL version mismatch. Built against %lx, you have %lx
PRNG is not seeded
check %p %s
need pin
Enter PIN for '%s': 
C_Login failed: %lu
cannot find private key
C_SignInit failed: %lu
C_Sign failed: %lu
C_CloseSession failed: %lu
C_Finalize failed: %lu
dlopen %s failed: %s
C_GetFunctionList
C_GetFunctionList failed: %lu
C_Initialize failed: %lu
C_GetInfo failed: %lu
C_GetSlotList failed: %lu
no slots
C_GetTokenInfo failed: %lu
pin required
C_OpenSession failed: %lu
C_FindObjectsInit failed: %lu
pkcs11
have %d keys
no keys
C_FindObjectsInit failed (nattr %lu): %lu
C_FindObjects failed (nfound %lu nattr %lu): %lu
C_FindObjectsFinal failed: %lu
RSA_get_app_data failed for rsa %p
no pkcs11 (valid) provider for rsa %p
pkcs11_provider_unref: %p refcount %d
pkcs11_provider_unref: %p still valid
pkcs11_provider_finalize: %p refcount %d valid %d
provider already registered: %s
dlsym(C_GetFunctionList) failed: %s
manufacturerID <%s> cryptokiVersion %d.%d libraryDescription <%s> libraryVersion %d.%d
label <%s> manufacturerID <%s> model <%s> serial <%s> flags 0x%lx
C_GetAttributeValue failed: %lu
Enabling compatibility mode for protocol 2.0
Enabling compatibility mode for protocol 1.3
OpenSSH-2.0*,OpenSSH-2.1*,OpenSSH_2.1*,OpenSSH_2.2*
ignoring bad proto spec: '%s'.
OpenSSH_2.5.0p1*,OpenSSH_2.5.1p1*
OpenSSH_2.5.0*,OpenSSH_2.5.1*,OpenSSH_2.5.2*
OpenSSH_2.*,OpenSSH_3.0*,OpenSSH_3.1*
2.0.13*,2.0.14*,2.0.15*,2.0.16*,2.0.17*,2.0.18*,2.0.19*
1.2.18*,1.2.19*,1.2.20*,1.2.21*,1.2.22*
*OSU_0*,OSU_1.0*,OSU_1.1*,OSU_1.2*,OSU_1.3*,OSU_1.4*,OSU_1.5alpha1*,OSU_1.5alpha2*,OSU_1.5alpha3*
match: %s pat %s
no match: %s
No available ciphers found.
Original cipher proposal: %s
Compat cipher proposal: %s
OpenSSH_2.3.0*
OpenSSH_2.3.*
OpenSSH_2.5.3*
OpenSSH_3.*
Sun_SSH_1.0*
OpenSSH_4*
OpenSSH*
*MindTerm*
2.1.0*
2.1 *
2.0.11*,2.0.12*
2.0.*
2.2.0*,2.3.0*
3.0.*
3.0 SecureCRT*
1.7 SecureFX*
1.3.2*
*SSH Compatible Server*
*SSH_Version_Mapper*
Probe-*
Couldn't obtain random bytes (error %ld)
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
%s: illegal option -- %c
%s: option requires an argument -- %c
too small
too large
/dev/urandom
/dev/random
SSH_USE_STRONG_RNG
cannot read from %s, %s
EOF reading %s
tap%d
tun%d
/dev/net/tun
%s: invalid tunnel id %x: %s
%s: tunnel mode %d fd %d
%s: %s mode %d fd %d
%s: failed to open tunnel control interface: %s
%s: failed to configure tunnel (mode %d): %s
sys_tun_open
;*3$"
ssh-keygen.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.note.ABI-tag
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.interp
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.bss
.init
.rela.plt
.got
.text
.fini_array
.init_array
