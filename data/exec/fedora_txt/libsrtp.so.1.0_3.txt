wE{Y
# J 
[D7kw
t)<@Fwd
nmd$/
,@wd
k)+lw
RP9BE
FjW9}&
]M)$
F\jx+
;= qdX
__gmon_start__
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
srtp_event_reporter
err_report
mod_srtp
v128_hex_string
__stack_chk_fail
srtp_get_version_string
srtp_get_version
__isoc99_sscanf
srtp_stream_alloc
crypto_alloc
crypto_kernel_alloc_cipher
crypto_kernel_alloc_auth
ekt_alloc
crypto_free
srtp_stream_dealloc
rdbx_dealloc
srtp_stream_clone
key_limit_clone
rdbx_get_window_size
rdbx_init
rdb_init
srtp_kdf_init
srtp_kdf_generate
octet_string_set_to_zero
srtp_kdf_clear
srtp_stream_init_keys
cipher_get_key_length
__memcpy_chk
auth_get_key_length
octet_string_hex_string
srtp_stream_init
key_limit_set
ekt_stream_init_from_policy
srtp_install_event_handler
srtp_init
crypto_kernel_init
crypto_kernel_load_debug_module
srtp_shutdown
crypto_kernel_shutdown
srtp_get_stream
srtp_protect
key_limit_update
auth_get_tag_length
rdbx_estimate_index
rdbx_check
rdbx_add_index
auth_get_prefix_length
cipher_output
srtp_unprotect
octet_string_is_eq
srtp_dealloc
srtp_add_stream
srtp_create
srtp_remove_stream
crypto_policy_set_rtcp_default
crypto_policy_set_rtp_default
crypto_policy_set_aes_cm_128_hmac_sha1_32
crypto_policy_set_aes_cm_128_null_auth
crypto_policy_set_null_cipher_hmac_sha1_80
crypto_policy_set_aes_cm_256_hmac_sha1_80
crypto_policy_set_aes_cm_256_hmac_sha1_32
crypto_policy_set_aes_cm_256_null_auth
srtp_protect_rtcp
rdbx_get_packet_index
ekt_write_data
rdb_increment
rdb_get_value
srtp_unprotect_rtcp
ekt_octets_after_base_tag
rdb_check
srtp_stream_init_from_ekt
rdb_add_index
srtp_set_user_data
srtp_get_user_data
crypto_policy_set_from_profile_for_rtp
crypto_policy_set_from_profile_for_rtcp
append_salt_to_key
memcpy
srtp_profile_get_master_key_length
srtp_profile_get_master_salt_length
aes_decrypt_with_raw_key
aes_expand_decryption_key
aes_decrypt
rdbx_set_roc
srtcp_ekt_trailer
cipher_type_test
mod_cipher
rand_source_init
rand
rand_source_get_octet_string
cipher_type_self_test
cipher_bits_per_second
clock
null_cipher_set_iv
null_cipher_encrypt
null_cipher_alloc
null_cipher
null_cipher_dealloc
null_cipher_init
null_cipher_description
null_cipher_test_0
aes_icm_dealloc
aes_icm_context_init
mod_aes_icm
aes_expand_encryption_key
aes_icm_set_iv
v128_copy_octet_string
aes_icm_alloc_ismacryp
aes_icm_alloc
aes_icm_set_octet
srtp_aes_encrypt
aes_icm_encrypt_ismacryp
aes_icm_encrypt
aes_icm_output
aes_icm_bytes_encrypted
aes_icm_description
aes_icm_test_case_1
aes_icm_test_case_1_key
aes_icm_test_case_1_nonce
aes_icm_test_case_1_plaintext
aes_icm_test_case_1_ciphertext
aes_icm_test_case_0
aes_icm_test_case_0_key
aes_icm_test_case_0_nonce
aes_icm_test_case_0_plaintext
aes_icm_test_case_0_ciphertext
aes_cbc_dealloc
aes_cbc_context_init
mod_aes_cbc
aes_cbc_set_iv
aes_cbc_alloc
aes_cbc_encrypt
aes_cbc_nist_encrypt
aes_cbc_decrypt
aes_cbc_nist_decrypt
aes_cbc_description
aes_cbc_test_case_3
aes_cbc_test_case_3_key
aes_cbc_test_case_3_iv
aes_cbc_test_case_3_plaintext
aes_cbc_test_case_3_ciphertext
aes_cbc_test_case_2
aes_cbc_test_case_2_key
aes_cbc_test_case_2_iv
aes_cbc_test_case_2_plaintext
aes_cbc_test_case_2_ciphertext
aes_cbc_test_case_1
aes_cbc_test_case_1_key
aes_cbc_test_case_1_iv
aes_cbc_test_case_1_plaintext
aes_cbc_test_case_1_ciphertext
aes_cbc_test_case_0
aes_cbc_test_case_0_key
aes_cbc_test_case_0_iv
aes_cbc_test_case_0_plaintext
aes_cbc_test_case_0_ciphertext
null_auth_compute
null_auth_update
null_auth_start
null_auth_alloc
mod_auth
null_auth_dealloc
null_auth_init
null_auth_description
null_auth_test_case_0
auth_type_get_ref_count
auth_type_test
auth_type_self_test
hmac_dealloc
hmac_update
mod_hmac
crypto_sha1_update
hmac_start
hmac_alloc
hmac_init
crypto_sha1_init
hmac_compute
crypto_sha1_final
hmac_description
hmac_test_case_0
hmac_test_case_0_key
hmac_test_case_0_data
hmac_test_case_0_tag
crypto_sha1_core
SHA_K0
SHA_K1
SHA_K2
SHA_K3
mod_sha1
crypto_sha1
octet_get_weight
octet_weight
nibble_to_hex_char
is_hex_string
hex_string_to_octet_string
v128_bit_string
v128_right_shift
v128_left_shift
bitvector_dealloc
bitvector_set_to_zero
memset
bitvector_alloc
bitvector_bit_string
bitvector_left_shift
stat_test_monobit
mod_stat
stat_test_poker
stat_test_runs
stat_test_rand_source
stat_test_rand_source_with_repetition
crypto_kernel_status
__printf_chk
puts
exit
crypto_kernel_list_debug_modules
mod_crypto_kernel
rand_source_deinit
crypto_kernel_get_cipher_type
crypto_kernel_get_auth_type
strncmp
crypto_kernel_replace_cipher_type
crypto_kernel_do_load_auth_type
crypto_kernel_load_auth_type
crypto_kernel_replace_auth_type
crypto_kernel_load_cipher_type
err_reporting_init
mod_alloc
ctr_prng_init
ctr_prng_get_octet_string
crypto_kernel_set_debug_module
crypto_get_random
malloc
key_limit_check
open
read
close
x917_prng_init
x917_prng
x917_prng_get_octet_string
time
x917_prng_deinit
ctr_prng
ctr_prng_deinit
stdout
err_level
__vfprintf_chk
err_reporting_set_level
index_init
index_advance
index_guess
ut_compar
ut_init
qsort
ut_next_index
libc.so.6
_edata
__bss_start
_end
libsrtp.so.1
GLIBC_2.7
GLIBC_2.14
GLIBC_2.4
GLIBC_2.3.4
GLIBC_2.2.5
=1*!
tkrQ
u/[H
AUAT
D$(1
$3D$
D$(dH3
8[]A\A]
AUATUSH
D$(1
$3D$
D$(dH3
8[]A\A]
dH34%(
AUATI
L$0A
T$$H
L$0A
T$,H
t$@H
[]A\A]
[]A\A]
[]A\A]
{hH;xht
{8H;x8t
{@H;x@t
ATUSH
]A\A]A^
]A\A]A^
ATUH
[]A\
[]A\
D$(1
L$(dH3
AWAVI
AUATUSH
4$dH
d$ 1
4$Hc
dH34%(
[]A\A]A^A_
~VHc\$
AUATI
[]A\A]
|$hH
[]A\A]
D$tL
=)	!
AWAVAUATI
D$x1
L$xdH3
[]A\A]A^A_
l$@L
|$HH
l$@L
|$HH
l$@L
|$HH
D$ H
D$@M
D$dH
D$@H
t$`H
D$hH
l$@L
|$HH
\$`H
T$@H
D$@H
D$@I
T$8L
Hct$8H
T$<H
D$<A
|$@I
D$@H
T$4L
L$@H
T$4L
L$@H
L$@H
AWAVAUATI
[]A\A]A^A_
D$8H
t$`H
D$hH
D$dH
D$8H
L$8H
D$8H
D$8A
H9t$
l$@L
t$HH
T$4L
t$(I
|$ I
HcT$
T$pH
t$8I
l$@L
t$HH
T$0H
t$(I
E)<$1
l$@L
t$HH
l$@L
t$HH
l$@H
|$@L
T$@L
t$@I
T$@L
t$@I
AUATUS
[]A\A]
]A\A]
AWAVA
AUATUSH
D$h1
L$hdH3
x[]A\A]A^A_
t$ I
D$\H
t$P1
l$0L
l$8H
D$(H
l$$H
|$PL
D$,I
t$,H
T$$H
T$(H
l$0H
L$TD
T$ H
T$0H
AWAVAUATUSH
[]A\A]A^A_
G`Ic
D$0Hc
D$(D)
L$lH
t$`H
D$4H
L$ A
D$<I
t$<H
T$4H
M;|$
L$ H
|$ D
|$ D
T$0H
t$(H
M;|$
T$@L
|$@I
d$@L
|$HH
d$@L
|$HH
T$@L
|$@I
HcL$
t$ H
T$8I
G8H)
L$8L
D$h1
f92t
|$hdH3<%(
p[]A\
AWAVI
AUATA
[]A\A]A^A_
AWAVAUATUSH
D$XL
D$PH
D$LH
D$ L
D$XI
D$XH
T$PH
F(;D$P
D$XI
A9V(
D$XH
T$PH
;D$P
<*A8<,u
|$XH
[]A\A]A^A_
|$XA
D$XH
t$PH
T$ H
|$XE
|$XA
D$(H
D$TH
D$LH
L$Tt
t$TL
D$XH
D$XH
l$TH
t$TL
D$XH
D$XH
t$TL
T$<D;l$T
uYE9
|$XH
t$TH
T$0L
|$XE
D$XE
AWAVI
AUATUSHc
D$81
t$ ~8
\$,u
L$8dH3
H[]A\A]A^A_
AVAUATU
[]A\A]A^
[]A\A]A^
[]A\A]A^
ATUSH
 []A\
[]A\
[]A\
AUATA
[]A\A]
[]A\A]
AWAVI
AUATI
[]A\A]A^A_
[]A\A]A^A_
G!A0E
G"A0E
G#A0E
G$A0E
G%A0E
G&A0E
G'A0E
G(A0E
G)A0E
G*A0E
G+A0E
G,A0E
G-A0E
G.A0E
G/A0E
G$A1E
G(A1E
G,A1E
[]A\A]A^A_
AUATUSH
~jHc
<>D3
<>E3
<>D3
<>E3
,.C3<
,.F3
,.G3
[]A\A]
AUATUS
W	D1
3^ B3
D3^$E1
D3V(E1
^,D1
3^0B3
D3^4D
D3V8D
W	D1
3^@B3
D3^DD
D3VHD
W	D1
3^PB3
D3^TE1
D3VXD
W	D1
3^`B3
D3^dE1
D3VhE1
^lD1
W	3\$
3^pB3
D3^tD
D3VxD
W	D1
W	D1
D3L$
D3L$
[]A\A]A^A_
W	D1
W	D1
D3L$
D3L$
A\A]
A^A_
D3L$
D3L$
AUATUS
D3N D3
3n$A1
D3^(E1
D3l$
D3V,D3T$
W	F3
D3V0F3
3^4D
D3^8E1
D3l$
D3N<D3L$
D3N@D3
3^DA1
D3^HE1
D3l$
D3VLD3T$
D3VP
3^TD
D3^XE1
D3l$
D3N\D3L$
D3N`D3
3^dA1
D3^hE1
D3l$
D3VlD3T$
D3Vp
3^tD
D3^xE1
D3l$
D3N|D3L$
D3l$
D3T$
W	F3
D3l$
D3L$
[]A\A]A^A_
D3l$
D3T$
D3t$
D3d$
D3L$
(]A\A]
A^A_
_	B3
D3d$
D3L$
AUATI
U@s)
M urH
[]A\A]
[]A\
[]A\
AWAV
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
D$(1
t$(dH34%(
8[]A\A]A^A_
AUATI
[]A\A]
AWAVAUATUSH
D$H1
d$ E1
t$HdH34%(
X[]A\A]A^A_
AUATA
[]A\A]
AUATI
[]A\A]
ATUSH
D$H1
\$HdH3
P[]A\
AVAUATUSH
D$H1
L$HdH3
P[]A\A]A^
t$0L
AWAVAUATUSH
l$4A
|$8D
l$@D
t$DD1
\$L1
D$`A
G4E1
\$XD
T$\A1
\$TD
L$hE1
D$lD
l$,1
|$tD
|$(D1
T$pE1
d$|E1
|$xD
l$(A1
D3\$
D3D$
\$0D1
T$ D
[]A\A]A^A_
AVAUI
ST[]A\A]A^
AWAVI
AUATUSH
GTdH
t$(D
d$@Lc
D$|I
E43E H
E<H9
L$PM
L$4I
T$ L
L$$A
L$ D
T$<L
D$4A3D$ I
A3D$
A3D$
D$<L9
l$8D
L$ H
\$(D
[]A\A]A^A_
D$ H
D$0H
D$4H
d$@A
AUATA
D$h1
D$hdH3
x[]A\A]
D$	9
AUATD
$6USH
[]A\A]
<6w	
AUATUSH
[]A\A]
AVUD)
[]A^
~uUSH
AVU)
[]A^
u.H)
D$81
L$0f
t$8dH34%(
AVAUE1
ATUE1
D$H1
L$$fD
D$(fD
L$*f
D$ 1
T$"f
t$&A
\$0f
\$2A
l$4fD
d$6fD
l$8fD
L$0A
|$ f9
\$HdH3
P[]A\A]A^
AWAVE1
AUATE1
USE1
L$ f
D$61
T$"f
D$81
\$$f
\$&f
l$(f
D$DH
|$4H
d$*fD
l$0fD
t$2f
T$Ff
L$Hf
t$Jf
|$PfD
D$Rf
\$Z1
L$TfD
T$VfD
T$`H
\$ L
T$@L
L$PL
D$01
dH34%(
[]A\A]A^A_
AVAUATUSt_A
]A\A]A^
AWAVH
AUAT
[]A\A]A^A_
AUATUSH
%@m 
[]A\A]
t%;8u
ATUA
[]A\H
t%;8u
ATUA
[]A\H
tVAUATI
[]A\A]
AVAUATUSt
;w`t
]A\A]A^
t9A;m
AWAVAUATUSH
gPA9
[]A\A]A^A_
tAE;e
AUATUSH
;w`t
[]A\A]
=Ih 
=if 
=Yh 
-hj 
AUATUSH
[]A\A]
[]A\A]
tCATUH
AWAVI
AUATUSH
D$(1
D1d$
L$(dH3
8[]A\A]A^A_
L$(1
T$(dH3
ATUI
[]A\
[]A\
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
srtp: in stream 0x%x: 
	SSRC collision
	packet index limit reached
%s: Pre-salted RTCP IV = %s
%s: RTCP SALT = %s
%s: Pre-salted RTP IV = %s
%s: RTP SALT = %s
libsrtp 1.5.4
%u.%u.%u
%s: srtp key len: %d
%s: srtcp key len: %d
%s: base key len: %d
%s: kdf key len: %d
%s: rtp salt len: %d
%s: cipher key: %s
%s: cipher salt: %s
%s: auth key:   %s
%s: rtcp salt len: %d
%s: rtcp cipher key: %s
%s: rtcp cipher salt: %s
%s: rtcp auth key:   %s
%s: function srtp_protect
%s: keystream prefix: %s
%s: srtp auth tag:    %s
%s: function srtp_unprotect
%s: computed auth tag:    %s
%s: packet auth tag:      %s
%s: srtcp index: %x
%s: srtcp auth tag:    %s
srtp
	key usage soft limit reached
	key usage hard limit reached
	unknown event reported to handler
%s: cloning stream (SSRC: 0x%08x)
%s: found rtp_salt_len > 0, generating salt
%s: found rtcp_salt_len > 0, generating rtcp salt
%s: initializing stream (SSRC: 0x%08x)
%s: function srtp_protect_aead
%s: estimated packet index: %016llx
%s: using provisional stream (SSRC: 0x%08x)
%s: estimated u_packet index: %016llx
%s: function srtp_unprotect_aead
%s: srtcp using provisional stream (SSRC: 0x%08x)
%s: srtcp computed tag:       %s
%s: srtcp tag from packet:    %s
%s: EKT not in use
%s: writing EKT EMK: %s,
%s: writing EKT ROC: %s,
%s: writing EKT ISN: %s,
%s: writing EKT SPI: %s,
%s: running self-test for cipher %s
%s: random plaintext length %d
%s: random test case %d failed
%s: testing encryption
%s: plaintext:    %s
%s: IV:    %s
%s: AAD:    %s
%s: ciphertext:   %s
%s: test case %d failed
%s: (failure at byte %d)
%s: c computed: %s
%s: c expected: %s
%s: testing decryption
%s: ciphertext:    %s
%s: plaintext:   %s
%s: p computed: %s
%s: p expected: %s
%s: plaintext[2]: %s
cipher
%s: allocating cipher with key length %d
%s: initializing null cipher
%s: key:  %s
%s: offset: %s
%s: setting iv: %s
%s: set_counter: %s
%s: set_octet: %s
%s: counter:    %s
%s: ciphertext: %s
%s: block index: %d
aes icm
lpHP
}c|w{
9JLX
~=d]
PQAeS~
U vm
Ebdw
HhXpE
ZrNl
=-9'6
!h[T
6.:$
awKiZ
~4[C)v
j~FbT
1?#1*
[_=o
$4,8
l\tH
eS~A
U 0m
Xti)I
EbSw
hXpH
*fU(
H2+p
rNlZ
9'6-
!h\T
[.:$6g
KiZw
Df~4[
Bc"@
j_FbT~
#1*?
h4,8$@_
2\tHlWB
S~Ae
Xt!)I
Q3EbS
+XpHh
@Cwg
pNlZr
'6-9d
[T:$6.
 iZwK
*C<"
Df;4[
bT~F
1*?#0
f7tN
,8$4_
(<IA
tHl\B
P~AeS
-Xt!
X>k'
Q3`bS
pHhX
lZrN
6-9'
$6.:
ZwKi
T~Fb
&x	nY
*?#1
>8$4,
pHl\t
WBcc
00P`
++}V
=&&jL66Zl??A~
44\h
11Sb
##eF
''iN
,,tX
-6nn
;;Mv
})){R
//q^
  `@
g99KrJJ
33Uf
<<Dx
!88Hp
!!cB
==Gzdd
+2ss
""fD**~T
22Vd::Nt
$$lH\\
77Ynmm
%%oJ..r\
!>KK
>>B|
55_jWW
3"ii
((xP
)--wZ
0P`0
g+}V+
&jL&6Zl6?A~?
4\h4
1Sb1
#eF#
'iN'
,tX,
R;Mv;
){R)
/q^/
 `@ 
9Kr9J
M3Uf3
P<Dx<
8Hp8
!cB!
~=Gz=d
"fD"*~T*
2Vd2:Nt:
$lH$\
7Yn7m
x%oJ%.r\.
p>B|>
a5_j5W
U(xP(
-wZ-
P`00
gg}V++
jL&&Zl66A~??
\h44
Sb11?*
eF##^
iN''
tX,,.4
RRMv;;a
{R))>
q^//
`@  
Kr99
MMUf33
PPDx<<
Hp88
cB!!0 
DD9.
~~Gz==
]]+2
fD""~T**
Vd22Nt::
lH$$
Yn77
xxoJ%%r\..$8
tt!>
ppB|>>
aa_j55
UUxP((z
wZ--
T`00P
V++}
L&&jl66Z~??A
Oh44\Q
sb11S*
RF##e
&N''i
X,,t4
v;;M
R)){
>^//q
,@  `
r99K
f33U
x<<D%
p88H
uB!!c 
z==G
D""fT**~;
;d22Vt::N
H$$l
Cn77Y
J%%o\..r8
|>>Bq
j55_
P((x
Z--w
:%s: iv: %s
%s: inblock:  %s
%s: outblock: %s
aes cbc
%s: allocating auth func with key length %d
%s:                           tag length %d
%s: running self-test for auth function %s
%s: key: %s
%s: data: %s
%s: tag computed: %s
%s: tag expected: %s
%s:   (mismatch at octet %d)
auth func
%s: input: %s
%s: ipad: %s
%s: intermediate state: %s
%s: output: %s
hmac sha-1
%s: (update) running sha1_core()
%s: (update) not running sha1_core()
%s: (final) running sha1_core()
%s: (final) running sha1_core() again
%s: bit count: %d
%s: poker test: %f
%s: >25 runs: %d
%s: >25 gaps: %d
%s: >25 runs (2): %d
%s: >25 gaps (2): %d
%s: runs test
%s:   runs[]: %d
%s:   gaps[]: %d
%s: >25 runs (3): %d
%s: >25 gaps (3): %d
%s: >25 runs (4): %d
%s: >25 gaps (4): %d
%s: stat: bit count: %d
%s: stat: poker test: %f
%s: stat: failed poker test
%s: passed random stat test
stat test
%s: couldn't get rand bytes: %d
%s: stat: failed monobit test %d
%s: stat: failed run/gap test
%s: failed stat test (try number %d)
G@testing rand_source...
failed
passed
cipher: %s
  instance count: %d
  self-test: 
failed with error code %d
debug modules loaded:
auth func: %s
  %s 
(on)
(off)
crypto
crypto kernel
%s: freeing memory for cipher %s
%s: freeing memory for authentication %s
%s: freeing memory for debug module %s
%s: (location: %p) allocated
%s: (location: %p) freed
alloc
%s: allocation failed (asked for %d bytes)
/dev/urandom
;*3$"
null cipher
pPum
aes integer counter mode
p,}9
"3DUfw
.#D8p
"3DUfw
aes cipher block chaining (cbc) mode
null authentication function
hmac sha-1 authentication function
Hi There
libsrtp.so.1.0.0.debug
7zXZ
e~VT
I~9q,
YdkCE
KzRU
x{ ;
0'gy
](Yt
8nMQ
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.init
.plt
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.data
.bss
.gnu_debuglink
.gnu_debugdata
