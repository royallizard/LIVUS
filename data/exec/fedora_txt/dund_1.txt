/lib64/ld-linux-x86-64.so.2
libbluetooth.so.3
__gmon_start__
_Jv_RegisterClasses
sdp_set_info_attr
str2ba
sdp_close
sdp_record_free
sdp_set_profile_descs
hci_devba
sdp_data_free
sdp_data_alloc
sdp_set_uuidseq_attr
sdp_seq_append
sdp_record_unregister
sdp_set_lang_attr
sdp_list_append
sdp_service_search_req
hci_devid
sdp_get_proto_port
sdp_data_get
hci_inquiry
sdp_set_access_protos
sdp_uuid16_create
sdp_connect
sdp_service_search_attr_req
sdp_record_alloc
sdp_attr_add_new
ba2str
sdp_uuid128_create
sdp_get_string_attr
sdp_list_free
sdp_device_record_register
sdp_get_access_protos
bt_free
libc.so.6
socket
__printf_chk
exit
readdir
strncmp
ftruncate
optind
__strdup
perror
closedir
strncpy
signal
fork
__stack_chk_fail
daemon
listen
mkdir
memchr
kill
flock
strtol
mmap
fdatasync
strlen
openlog
memset
strstr
__errno_location
bind
chdir
read
__syslog_chk
__fprintf_chk
__sigsetjmp
lseek
memcpy
setsockopt
malloc
siglongjmp
strcat
umask
getpeername
opendir
__ctype_b_loc
sscanf
optarg
stderr
ioctl
alarm
munmap
__snprintf_chk
readlink
getopt_long
__strncat_chk
execvp
strncasecmp
__fxstat
strncat
usleep
sigaction
waitpid
open
strchr
getsockname
accept
__ctype_toupper_loc
__strcpy_chk
__ctype_tolower_loc
__cxa_finalize
setsid
__sprintf_chk
__xstat
__strcat_chk
strerror
__libc_start_main
setenv
write
_edata
__bss_start
_end
terminate
__libc_csu_fini
__libc_csu_init
__io_canceled
GLIBC_2.4
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.2.5
%zn 
%rn 
%jn 
%bn 
%Zn 
%Rn 
%Jn 
%Bn 
%:n 
%2n 
%*n 
%"n 
%zm 
%rm 
%jm 
%bm 
%Zm 
%Rm 
%Jm 
%Bm 
%:m 
%2m 
%*m 
%"m 
%zl 
%rl 
%jl 
%bl 
%Zl 
%Rl 
%Jl 
%Bl 
%:l 
%2l 
%*l 
%"l 
%zk 
%rk 
%jk 
%bk 
%Zk 
%Rk 
%Jk 
%Bk 
%:k 
ATSubH
= g 
=Ge 
fffff.
D$(1
T$(dH3
\$8H
l$@L
d$HL
l$PL
t$XL
|$`H
AWE1
AVE1
AUATL
4v$H
5M` 
[]A\A]A^A_
-b\ 
5Re 
=#e 
tQE1
-fc 
=6c 
5%c 
-&Z 
5H] 
=q[ 
D$81
T$8dH3
@[]A\f
l$ H
5D] 
fffff.
5U] 
=A] 
=1] 
D$(1
T$(dH3
0[]A\
AWAVA
AUATUSL
L$(dH
D$h1
L$ f
|$NL
T$LH
T$hdH3
x[]A\A]A^A_
D$@H
l$ L
D$@H
D$@H
AWAVAUATI
t$XL
|$`dH
T$(H
TP&Hc
t$LL
\$(H
D$8A
D$0A
D$ A
|$XL
[]A\A]A^A_
fffff.
T$81
D$0H
D$(H
D$(H
T$0H
D$(H
h Hc}(
HcU(H
D$d*
D$i&
D$`1
ATUSH
l$`L
D$4H
L$HH
T$LL
L$@L
D$DH
D$ H
D$8H
D$<H
D$LL
D$Hf
D$Df
D$8f
D$4M
t$Pf
t>E1
[]A\A]A^
AUATU
=?M 
=~L 
=oL 
=IL 
[]A\A]
d$0H
5DK 
=<K 
AVAUATUS
|$ H
|$PH
t$~H
t$|H
D$(f
|$(H
t$`1
D$`nef
D$bj
\$01
=HG 
=,G 
t$ 1
[]A\A]A^A_
=eF 
=3F 
=$F 
=sE 
=XE 
= E 
ffff.
ffff.
AUATI
xWE1
~$Ic
[]A\A]A^
AVAUATUS
[]A\A]A^A_
fff.
D$(1
T$(dH3
\$8H
l$@H
=9< 
ATU1
D$(1
|AtY
T$(dH3
8[]A\A]A^A_
-22 
ATE1
~(Hc
|9t'Hc
A\A]A^
A\A]A^
=Y: 
=L: 
=K9 
AVAUATUH
D$`E1
D$ H
d$ H
t$(H
[]A\A]A^A_
AVAUATI
u$I9
L;t$
[]A\A]A^A_
t$@E1
l$ L
t$(L
|$0H
fffff.
AVAUA
ATUSH
[]A\A]A^
t$PM
H+t$
fffff.
l$ L
t$(L
|$0H
Searching for %s on %s
Connecting to %s channel %d
Bind failed. %s(%d)
Connection established
MSDUN failed. %s(%d)
Connect to %s failed. %s(%d)
4.37
Can't start daemon
dund
Invalid source. %s(%d)
Inquiring
Inquiry failed. %s(%d)
Accept failed. %s(%d)
Fork failed. %s(%d)
DUN_BDADDR
DUN_CHANNEL
New connection from %s
/usr/sbin/pppd
help
listen
connect
search
kill
killall
channel
device
nosdp
show
nodetach
persist
encrypt
secure
master
cache
msdun
activesync
mrouter
dialup
noauth
noipdefault
Cannot create RFCOMM socket. %s(%d)
Bluetooth DUN daemon version %s
Cannot connect to mRouter device. %s(%d)
Waiting for mRouter callback on channel %d
Failed to set link mode. %s(%d)
Bluetooth LAP (LAN Access over PPP) daemon version %s
Usage:
	dund <options> [pppd options]
Options:
	--show --list -l          Show active LAP connections
	--listen -s               Listen for LAP connections
	--dialup -u               Pretend to be a dialup/telephone
	--connect -c <bdaddr>     Create LAP connection
	--mrouter -m <bdaddr>     Create mRouter connection
	--search -Q[duration]     Search and connect
	--kill -k <bdaddr>        Kill LAP connection
	--killall -K              Kill all LAP connections
	--channel -P <channel>    RFCOMM channel
	--device -i <bdaddr>      Source bdaddr
	--nosdp -D                Disable SDP
	--auth -A                 Enable authentication
	--encrypt -E              Enable encryption
	--secure -S               Secure connection
	--master -M               Become the master of a piconet
	--nodetach -n             Do not become a daemon
	--persist -p[interval]    Persist mode
	--pppd -d <pppd>          Location of the PPP daemon (pppd)
	--msdun -X[timeo]         Enable Microsoft dialup networking support
	--activesync -a           Enable Microsoft ActiveSync networking
	--cache -C[valid]         Enable address cache
hsc:k:Kr:i:lnp::DQ::AESMP:C::P:Xam:u
Failed to connect to the SDP server. %s(%d)
Service record unregistration failed.
%04X:%04X:%04X %02X %02X %04X %s %08X %s
%04X:%04X:%04X %02X %02X %04X %4095s %08X %n
Failed to connect to the local SDP server. %s(%d)
Failed to alloc service record
Failed to allocate service record %s(%d)
hidd
/var/lib/bluetooth
%2.2X
mRouter
ActiveSync
Dialup Networking
LAN Access Point
SDP registration failed.
BlueZ PAN Service
BlueZ PAN
Network Access Point
Group Network Service
PAN User
Can't open RFCOMM control socket
rfcomm%d: %s channel %d pppd pid %d
RFCOMM TTY creation failed. %s(%d)
Can't allocate request memory
Can't get device list
/proc
%s/%s/fd
%s is empty (not mounted ?)
Kill
/dev/rfcomm%d
/dev/bluetooth/rfcomm/%d
Error while executing %s
Exec failed. %s(%d)
CLIENT
CLIENTSERVER
%s %s
%s/%s/%s
ldund.debug
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
