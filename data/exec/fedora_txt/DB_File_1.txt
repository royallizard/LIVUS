__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
__getBerkeleyDBInfo
Perl_Gthr_key_ptr
pthread_getspecific
Perl_get_sv
db_version
Perl_croak_nocontext
__sprintf_chk
Perl_sv_setpv
Perl_sv_setiv
XS_DB_File_filter_store_value
Perl_Tstack_sp_ptr
Perl_Tmarkstack_ptr_ptr
Perl_Tstack_base_ptr
Perl_Isv_undef_ptr
Perl_sv_derived_from
Perl_sv_mortalcopy
Perl_sv_setsv_flags
Perl_sv_2iv_flags
Perl_newSVsv
Perl_sv_free
Perl_croak
XS_DB_File_filter_fetch_value
XS_DB_File_filter_store_key
XS_DB_File_filter_fetch_key
XS_DB_File_sync
Perl_Imodglobal_ptr
Perl_hv_fetch
Perl_Top_ptr
Perl_Tcurpad_ptr
Perl_mg_set
Perl_sv_newmortal
Perl_sv_2uv_flags
XS_DB_File_fd
XS_DB_File_length
XS_DB_File_push
Perl_sv_2pvbyte
Perl_push_scope
Perl_Ttmps_floor_ptr
Perl_save_int
Perl_Ttmps_ix_ptr
Perl_Idefgv_ptr
Perl_save_sptr
Perl_Tmarkstack_max_ptr
Perl_call_sv
Perl_pop_scope
Perl_sv_2mortal
Perl_free_tmps
Perl_markstack_grow
XS_DB_File_DESTROY
Perl_safesysfree
XS_DB_File_DoTie_
Perl_safesysmalloc
db_create
Perl_sv_setref_pv
Perl_sv_2pv_flags
Perl_sv_isa
Perl_Tstack_max_ptr
Perl_newSVpvn
Perl_stack_grow
Perl_sv_setpvf_nocontext
XS_DB_File_constant
Perl_newSVpvf_nocontext
XS_DB_File_DELETE
Perl_Tna_ptr
Perl_mg_get
XS_DB_File_EXISTS
XS_DB_File_FETCH
Perl_sv_setpvn
Perl_Ttainted_ptr
Perl_Itainting_ptr
Perl_sv_taint
XS_DB_File_STORE
XS_DB_File_FIRSTKEY
XS_DB_File_NEXTKEY
XS_DB_File_unshift
XS_DB_File_pop
XS_DB_File_shift
XS_DB_File_del
XS_DB_File_get
XS_DB_File_put
XS_DB_File_seq
boot_DB_File
Perl_newXS
Perl_newSV
Perl_sv_setuv
Perl_Isv_yes_ptr
Perl_form
libdb-4.6.so
libc.so.6
__stack_chk_fail
_edata
__bss_start
_end
GLIBC_2.1.3
GLIBC_2.3.4
GLIBC_2.4
l[^_]
,[^_]
,[^_]
,[^_]
,[^_]
B	@t
,[^_]
@	@t
<[^_]
A	@t
,[^_]
B	@t
[^_]
,[^_]
\[^_]
,[^_]
,[^_]
,[^_]
<Lu&
,[^_]
B	<N
B	@t
\[^_]
B	@t
|[^_]
l[^_]
B	@t
[^_]
l[^_]
l[^_]
@	@t
[^_]
l[^_]
l[^_]
B	@t
\[^_]
B	@t
[^_]
A	@t
[^_]
A	@t
[^_]
L[^_]
DB_File::db_version
DB_File::db_ver
DB_File::db_185_compat
%d.%d
%d.%03d%03d
DB_File needs compatible versions of libdb & db.h
	you have db.h version %d.%d.%d and libdb version %d.%d.%d
Usage: DB_File::filter_store_value(db, code)
Usage: DB_File::filter_fetch_value(db, code)
Usage: DB_File::filter_store_key(db, code)
Usage: DB_File::filter_fetch_key(db, code)
Modification of non-creatable array value attempted, subscript %ld
Usage: DB_File::sync(db, flags=0)
Usage: DB_File::DoTie_(isHASH, dbtype, name=undef, flags=O_CREAT|O_RDWR, mode=0666, type=DB_HASH)
type parameter is not a reference
DB_File can only tie an associative array to a DB_HASH database
DB_File can only tie an associative array to a DB_BTREE database
DB_File can only tie an array to a DB_RECNO database
type is not of type DB_File::HASHINFO, DB_File::BTREEINFO or DB_File::RECNOINFO
DB_File hash callback: recursion detected
DB_File hash_cb: expected 1 return value from hash sub, got %d
DB_File btree_prefix: recursion detected
DB_File btree_prefix: expected 1 return value from prefix sub, got %d
DB_File btree_compare: recursion detected
DB_File btree_compare: expected 1 return value from compare sub, got %d
%s is not a valid DB_File macro
Your vendor has not defined DB_File macro %s, used
Usage: DB_File::DELETE(db, key, flags=0)
Usage: DB_File::EXISTS(db, key)
Usage: DB_File::FETCH(db, key, flags=0)
Usage: DB_File::STORE(db, key, value, flags=0)
Usage: DB_File::NEXTKEY(db, key)
Usage: DB_File::del(db, key, flags=0)
Usage: DB_File::get(db, key, value, flags=0)
Usage: DB_File::put(db, key, value, flags=0)
Usage: DB_File::seq(db, key, value, flags)
%s object version %s does not match %s%s%s%s %_
db is not of type DB_File
DB_File::_guts1.815
Usage: DB_File::fd(db)
Usage: %s(db)
Usage: %s(db, ...)
recursion detected in %s
Usage: DB_File::DESTROY(db)
db is not a reference
DB_File::HASHINFO
internal error
hash
ffactor
nelem
bsize
cachesize
lorder
DB_File::BTREEINFO
compare
prefix
flags
psize
DB_File::RECNOINFO
bval
reclen
bfname
DB_File::Error
%s: %s
Usage: DB_File::constant(sv)
R_DUP
R_LAST
R_NEXT
R_PREV
DB_TXN
R_FIRST
DB_LOCK
R_NOKEY
DB_SHMEM
R_CURSOR
R_IAFTER
HASHMAGIC
RET_ERROR
R_IBEFORE
R_FIXEDLEN
BTREEMAGIC
__R_UNUSED
R_SNAPSHOT
R_RECNOSYN
RET_SPECIA
HASHVERSIO
R_SETCURSO
RET_SUCCES
BTREEVERSION
R_NOOVERWRITE
MAX_REC_NUMBER
MAX_PAGE_NUMBER
MAX_PAGE_OFFSET
Usage: DB_File::FIRSTKEY(db)
XS_VERSION
%s::%s
bootstrap parameter
DB_File.c
DB_File::constant
DB_File::DoTie_
DB_File::DESTROY
DB_File::DELETE
DB_File::EXISTS
DB_File::FETCH
DB_File::STORE
DB_File::FIRSTKEY
DB_File::NEXTKEY
DB_File::UNSHIFT
DB_File::unshift
DB_File::POP
DB_File::pop
DB_File::SHIFT
DB_File::shift
DB_File::push
DB_File::PUSH
DB_File::length
DB_File::FETCHSIZE
DB_File::del
DB_File::get
DB_File::put
DB_File::fd
DB_File::sync
DB_File::seq
DB_File::filter_fetch_key
DB_File::filter_store_key
DB_File::filter_fetch_value
DB_File::filter_store_value
DB_File.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.bss
.gnu_debuglink
