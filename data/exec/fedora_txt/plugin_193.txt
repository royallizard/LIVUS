__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
value_new_float
value_area_get_width
value_area_get_height
sheet_foreach_cell_in_range
value_terminate_err
gnm_cell_eval_content
g_malloc_n
value_area_get_x_y
value_get_as_float
value_new_array
value_release
value_new_int
value_new_error_NUM
value_new_error_VALUE
value_new_error_std
value_new_array_non_init
mmult
g_free
go_pow10
go_fake_trunc
float_range_function2
go_range_sumsq
float_range_function
go_range_sum
gnm_range_product
gnm_range_multinomial
gnm_range_hypot
g_malloc0_n
gnm_expr_eval
value_area_fetch_x_y
value_dup
workbook_date_conv
gnm_rangeref_normalize
parse_criteria
free_criteria
value_new_error_DIV0
value_new_empty
sheet_cell_get
sqrt
collect_floats_value
go_finite
go_fake_floor
go_fake_ceil
go_fake_round
strstr
value_new_string
gnm_trunc
fmod
log10
log1p
atan
lgamma
fact
combin
go_pow2
lgamma1p
expm1
gnm_coth
gnm_cot
lbeta3
beta
atan2
atanh
asinh
asin
value_peek_string
strlen
g_utf8_prev_char
gnm_acoth
gnm_acot
acosh
acos
gnm_matrix_eigen
qsort
go_matrix_determinant
go_matrix_invert
go_plugin_depends
go_plugin_header
math_functions
libm.so.6
libc.so.6
__stack_chk_fail
_edata
__bss_start
_end
plugin.so
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.0
GLIBC_2.1
d$,[^_]
[^_]
[^_]
d$l[^_]
d$l[^_]
d$0[^]
d$0[^]
d$0[^]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$\[^_]
d$\[^_]
9Ft'
9Ft'
>(tM
d$P[^]
d$P[^]
d$P[^]
d$l[^_]
zUu[
d$0[^]
d$0[^]
d$0[^]
d$ [^]
d$ [^]
d$ [^]
d$0[^]
d$0[^]
d$0[^]
gfff
gfff
zquo
[^_]
d$ [^]
d$ [^]
z)u/
d$P[^]
d$P[^]
d$P[^]
d$0[^]
d$0[^]
d$0[^]
d$@[^]
d$@[^]
d$\[^_]
[^_]
d$<[^_]
[^_]
z)u/
d$P[^]
d$P[^]
d$P[^]
d$D[]
d$D[]
d$T[]
d$T[]
d$T[]
d$@[^]
d$@[^]
d$@[^]
d$@[^]
d$@[^]
d$@[^]
d$T[]
d$T[]
d$T[]
d$ [^]
d$ [^]
d$,[^_]
d$,[^_]
zwuu
z_u]
[^_]
[^_]
[^_]
d$L[^_]
d$L[^_]
[^_]
[^_]
CMVC
CDXC
CDVC
CMXC
XCIX
XLIX
CDIC
LMVL
CMIC
XDIX
XMIX
VDIV
VMIV
goffice
gnumeric
1.10.11
acos
acosh
acot
acoth
arabic
asin
asinh
atan
atanh
atan2
beta
betaln
cholesky
countif
ceil
ceiling
even
expm1
fact
factdouble
combin
combina
csch
floor
gamma
gammaln
hypot
ln1p
log2
log10
mround
multinomial
power
g_product
quotient
roman
rounddown
roundup
sech
seriessum
fffA
sign
sqrt
sqrtpi
suma
sumif
rS|r
averageif
sumproduct
sumsq
sumx2my2
sumx2py2
sumxmy2
trunc
mmult
minverse
mdeterm
munit
eigen
ABS:absolute value
x:number
=ABS(7)
=ABS(-3.14)
CEIL,CEILING,FLOOR,INT,MOD
ACOS:the arc cosine of @{x}
=ACOS(0.1)
=ACOS(-0.1)
=ACOSH(0.1)
=ACOSH(-0.1)
ACOS,ASINH
x:value
=ACOT(0.2)
COT,TAN
wolfram:InverseCotangent.html
=ACOTH(2.2)
COTH,TANH
roman:Roman numeral
=ARABIC("I")
=ARABIC("CDLII")
=ARABIC("MCDXC")
=ARABIC("MDCCCXCIX")
=ARABIC("MCMXCIX")
=ARABIC("mmmcmxcix")
=ARABIC("MIM")
=ARABIC("IVM")
ROMAN
ASIN:the arc sine of @{x}
=ASIN(0.5)
=ASIN(1)
SIN,COS,ASINH,DEGREES,RADIANS
=ASINH(0.5)
=ASINH(1)
ASIN,ACOSH,SIN,COS
ATAN:the arc tangent of @{x}
=ATAN(0.5)
=ATAN(1)
TAN,COS,SIN,DEGREES,RADIANS
=ATANH(0.5)
=ATANH(1)
ATAN,COS,SIN
y:y-coordinate
x:x-coordinate
=ATAN2(0.5,1.0)
=ATAN2(-0.5,2.0)
ATAN,ATANH,COS,SIN
BETA:Euler beta function
y:number
=BETA(2,3)
=BETA(-0.5,0.5)
BETALN,GAMMALN
wiki:en:Beta_function
=BETALN(2,3)
=BETALN(-0.5,0.5)
BETA,GAMMALN
MINVERSE,MMULT,MDETERM
COS:the cosine of @{x}
x:angle in radians
wolfram:Cosine.html
=COS(0.5)
=COS(1)
=COSH(0.5)
=COSH(1)
SIN,TAN,SINH,COSH,TANH
COT:the cotangent of @{x}
=COT(0.12)
TAN,ACOT
wolfram:Cotangent.html
=COTH(0.12)
TANH,ACOTH
wiki:en:Hyperbolic_function
range:cell area
COUNT,SUMIF
=CEIL(0.4)
=CEIL(-1.1)
=CEIL(-2.9)
CEILING,FLOOR,ABS,INT,MOD
=CEILING(2.43,1)
=CEILING(123.123,3)
=CEILING(-2.43,-1)
CEIL,FLOOR,ABS,INT,MOD
=DEGREES(2.5)
RADIANS,PI
=EVEN(5.4)
=EVEN(-5.4)
=EXP(2)
LOG,LOG2,LOG10
EXPM1:EXP(@{x})-1
=EXPM1(0.01)
EXP,LN1P
=FACT(3)
=FACT(9)
FACTDOUBLE:double factorial
x:non-negative integer
=FACTDOUBLE(5)
FACT
FIB:Fibonacci numbers
n:positive integer
=FIB(23)
COMBIN:binomial coefficient
n:non-negative integer
k:non-negative integer
=COMBIN(8,6)
=COMBIN(6,2)
wiki:en:Binomial_coefficient
=COMBINA(5,3)
=COMBINA(6,3)
=COMBINA(42,3)
wiki:en:Multiset
COMBIN
CSC:the cosecant of @{x}
=CSC(0.5)
wolfram:Cosecant.html
=CSCH(0.5)
=FLOOR(0.5)
=FLOOR(5,2)
=FLOOR(-5,-2)
=FLOOR(-5,2)
CEIL,CEILING,ABS,INT,MOD
GAMMA:the Gamma function
=GAMMA(-1.8)
=GAMMA(2.4)
=GAMMALN(23)
GAMMA
n0:positive integer
n1:positive integer
=GCD(470,770)
=GCD(470,770,1495)
GD:Gudermannian function
=GD(0.5)
TAN,TANH
wolfram:Gudermannian.html
wiki:en:Gudermannian_function
n0:number
n1:number
=HYPOT(3,4)
MIN,MAX
=INT(7.2)
=INT(-5.5)
CEIL,CEILING,FLOOR,ABS,MOD
LCM:the least common multiple
=LCM(2,13)
=LCM(4,7,5)
x:positive number
=LN(7)
EXP,LOG2,LOG10
LN1P:LN(1+@{x})
=LN1P(0.01)
EXP,LN,EXPM1
=LOG(2)
=LOG(8192,2)
LN,LOG2,LOG10
=LOG2(1024)
EXP,LOG10,LOG
=LOG10(1024)
EXP,LOG2,LOG
x:integer
n:integer
=MOD(23,7)
=MOD(23,-7)
m:number
=MROUND(1.7,0.2)
=MROUND(321.123,0.12)
ROUNDDOWN,ROUND,ROUNDUP
x1:first number
x2:second number
xn:nth number
=MULTINOMIAL(2,3,4)
COMBIN,SUM
wiki:en:Multinomial_theorem
=ODD(5.4)
=ODD(-5.4)
EVEN
=POWER(2,7)
=POWER(3,3.141)
x1:number
x2:number
=G_PRODUCT(2,5,9)
numerator:integer
denominator:non-zero integer
=QUOTIENT(23,5)
x:angle in degrees
=RADIANS(180)
PI,DEGREES
=ROMAN(999)
=ROMAN(999,1)
=ROMAN(999,2)
=ROMAN(999,3)
=ROMAN(999,4)
ROUND:rounded @{x}
d:integer, defaults to 0
=ROUND(5.5)
=ROUND(-3.3)
=ROUND(1501.15,1)
=ROUND(1501.15,-2)
ROUNDDOWN,ROUNDUP
=ROUNDDOWN(5.5)
=ROUNDDOWN(-3.3)
=ROUNDDOWN(1501.15,1)
=ROUNDDOWN(1501.15,-2)
=ROUNDUP(5.5)
=ROUNDUP(-3.3)
=ROUNDUP(1501.15,1)
=ROUNDUP(1501.15,-2)
ROUND,ROUNDDOWN,INT
SEC:Secant
=SEC(0.5)
wolfram:Secant.html
=SECH(0.5)
wolfram:HyperbolicSecant.html
m:increment to each exponent
COUNT,SUM
SIGN:sign of @{x}
=SIGN(3)
=SIGN(-3)
=SIGN(0)
SIN:the sine of @{x}
=SIN(0.5)
wolfram:Sine.html
=SINH(0.1)
=SINH(-0.1)
SIN,COSH,ASINH
SQRT:square root of @{x}
x:non-negative number
=SQRT(2)
POWER
=SQRTPI(2)
area0:first cell area
area1:second cell area
=SUMA(11,TRUE,FALSE,12)
AVERAGE,SUM,COUNT
SUM,COUNTIF
SUMIF,COUNTIF
SUM,PRODUCT,G_PRODUCT
=SUMSQ(11,TRUE,FALSE,12)
array0:first cell area
array1:second cell area
SUMSQ,SUMX2PY2
SUMSQ,SUMX2MY2
SUMSQ,SUMX2MY2,SUMX2PY2
TAN:the tangent of @{x}
=TAN(3)
=TANH(2)
TAN,SIN,SINH,COS,COSH
=TRUNC(35.12)
=TRUNC(43.15,1)
PI:the constant 
=PI()
SQRTPI
mat1:a matrix
mat2:a matrix
TRANSPOSE,MINVERSE
matrix:a square matrix
MMULT,MINVERSE
n:size of the matrix
MMULT,MDETERM,MINVERSE
matrix:a symmetric matrix
munG
MDCLXVI
ABS gives the absolute value of @{x}, i.e. the non-negative number of the same magnitude as @{x}.
This function is Excel compatible.
ACOSH:the hyperbolic arc cosine of @{x}
ACOT:inverse cotangent of @{x}
wiki:en:Trigonometric_functions
ACOTH:the inverse hyperbolic cotangent of @{x}
wolfram:InverseHyperbolicCotangent.html
wiki:en:Inverse_hyperbolic_function
ARABIC:the Roman numeral @{roman} as number
Any Roman symbol to the left of a larger symbol (directly or indirectly) reduces the final value by the symbol amount, otherwise, it increases the final amount by the symbol's amount.
This function is OpenFormula compatible.
ASIN calculates the arc sine of @{x}; that is the value whose sine is @{x}.
If @{x} falls outside the range -1 to 1, ASIN returns #NUM!
ASINH:the inverse hyperbolic sine of @{x}
ASINH calculates the inverse hyperbolic sine of @{x}; that is the value whose hyperbolic sine is @{x}.
ATAN calculates the arc tangent of @{x}; that is the value whose tangent is @{x}.
ATANH:the inverse hyperbolic tangent of @{x}
ATANH calculates the inverse hyperbolic tangent of @{x}; that is the value whose hyperbolic tangent is @{x}.
If the absolute value of @{x} is greater than 1.0, ATANH returns #NUM!
ATAN2:the arc tangent of the ratio of @{y} and @{x}
ATAN2 calculates the direction from the origin to (@{x},@{y}) as an angle in radians.
The result will be between 
 and +
The order of the arguments may be unexpected.
BETA function returns the value of the Euler beta function extended to all real numbers except 0 and negative integers.
If @{x}, @{y}, or (@{x} + @{y}) are non-positive integers, BETA returns #NUM!
BETALN:natural logarithm of the absolute value of the Euler beta function
BETALN function returns the natural logarithm of the absolute value of the Euler beta function extended to all real numbers except 0 and negative integers.
If @{x}, @{y}, or (@{x} + @{y}) are non-positive integers, BETALN returns #NUM!
CHOLESKY:the Cholesky decomposition of the symmetric positive-definite @{matrix}
matrix:a symmetric positive definite matrix
If the Cholesky-Banachiewicz algorithm applied to @{matrix} fails, Cholesky returns #NUM!
If @{matrix} does not contain an equal number of columns and rows, CHOLESKY returns #VALUE!
SIN,TAN,SINH,COSH,TANH,RADIANS,DEGREES
COSH:the hyperbolic cosine of @{x}
COTH:the hyperbolic cotangent of @{x}
wolfram:HyperbolicCotangent.html
COUNTIF:count of the cells meeting the given @{criteria}
criteria:condition for a cell to be counted
CEIL:smallest integer larger than or equal to @{x}
CEIL(@{x}) is the smallest integer that is at least as large as @{x}.
This function is the OpenFormula function CEILING(@{x}).
CEILING:nearest multiple of @{significance} whose absolute value is at least ABS(@{x})
significance:base multiple (defaults to 1 for @{x} > 0 and -1 for @{x} <0)
CEILING(@{x},@{significance}) is the nearest multiple of @{significance} whose absolute value is at least ABS(@{x}).
If @{x} or @{significance} is non-numeric, CEILING returns a #VALUE! error.
If @{x} and @{significance} have different signs, CEILING returns a #NUM! error.
CEILING(@{x}) is exported to ODF as CEILING(@{x},SIGN(@{x}),1). CEILING(@{x},@{significance}) is the OpenFormula function CEILING(@{x},@{significance},1).
DEGREES:equivalent degrees to @{x} radians
EVEN:@{x} rounded away from 0 to the next even integer
EXP:e raised to the power of @{x}
e is the base of the natural logarithm.
This function has a higher resulting precision than evaluating EXP(@{x})-1.
FACT:the factorial of @{x}, i.e. @{x}!
The domain of this function has been extended using the GAMMA function.
FACTDOUBLE function returns the double factorial @{x}!!
If @{x} is not an integer, it is truncated. If @{x} is negative, FACTDOUBLE returns #NUM!
FIB(@{n}) is the @{n}th Fibonacci number.
If @{n} is not an integer, it is truncated. If it is negative or zero FIB returns #NUM!
COMBIN returns the binomial coefficient "@{n} choose @{k}", the number of @{k}-combinations of an @{n}-element set without repetition.
If @{n} is less than @{k} COMBIN returns #NUM!
COMBINA:the number of @{k}-combinations of an @{n}-element set with repetition
This function is not Excel compatible.
SIN,COS,TAN,SEC,SINH,COSH,TANH,RADIANS,DEGREES
CSCH:the hyperbolic cosecant of @{x}
SIN,COS,TAN,CSC,SEC,SINH,COSH,TANH
wolfram:HyperbolicCosecant.html
FLOOR:nearest multiple of @{significance} whose absolute value is at most ABS(@{x})
FLOOR(@{x},@{significance}) is the nearest multiple of @{significance} whose absolute value is at most ABS(@{x})
FLOOR(@{x}) is exported to ODF as FLOOR(@{x},SIGN(@{x}),1). FLOOR(@{x},@{significance}) is the OpenFormula function FLOOR(@{x},@{significance},1).
GAMMALN:natural logarithm of the Gamma function
GCD:the greatest common divisor
GCD calculates the greatest common divisor of the given numbers @{n0},@{n1},..., the greatest integer that is a divisor of each argument.
If any of the arguments is not an integer, it is truncated.
HYPOT:the square root of the sum of the squares of the arguments
INT:largest integer not larger than @{x}
LCM calculates the least common multiple of the given numbers @{n0},@{n1},..., the smallest integer that is a multiple of each argument.
LN:the natural logarithm of @{x}
If @{x} 
 0, LN returns #NUM! error.
LN1P calculates LN(1+@{x}) but yielding a higher precision than evaluating LN(1+@{x}).
If @{x} 
 -1, LN returns #NUM! error.
LOG:logarithm of @{x} with base @{base}
base:base of the logarithm, defaults to 10
@{base} must be positive and not equal to 1.
If @{x} 
 0, LOG returns #NUM! error.
LOG2:the base-2 logarithm of @{x}
If @{x} 
 0, LOG2 returns #NUM!
LOG10:the base-10 logarithm of @{x}
If @{x} 
 0, LOG10 returns #NUM!
MOD:the remainder of @{x} under division by @{n}
MOD function returns the remainder when @{x} is divided by @{n}.
If @{n} is 0, MOD returns #DIV/0!
CEIL,CEILING,FLOOR,ABS,INT,ABS
MROUND:@{x} rounded to a multiple of @{m}
If @{x} and @{m} have different sign, MROUND returns #NUM!
MULTINOMIAL:multinomial coefficient (@{x1}+
+@{xn}) choose (@{x1},
,@{xn})
ODD:@{x} rounded away from 0 to the next odd integer
POWER:the value of @{x} raised to the power @{y}
If both @{x} and @{y} equal 0, POWER returns #NUM!
If @{x} = 0 and @{y} < 0, POWER returns #DIV/0!
If @{x} < 0 and @{y} is not an integer, POWER returns #NUM!
G_PRODUCT:product of all the values and cells referenced
Empty cells are ignored and the empty product is 1.
QUOTIENT:integer portion of a division
QUOTIENT yields the integer portion of the division @{numerator}/@{denominator}.
QUOTIENT (@{numerator},@{denominator})
@{denominator}+MOD(@{numerator},@{denominator})=@{numerator}
RADIANS:the number of radians equivalent to @{x} degrees
ROMAN:@{n} as a roman numeral text
type:0,1,2,3,or 4, defaults to 0
ROMAN returns the arabic number @{n} as a roman numeral text.
If @{type} is 0 or it is omitted, ROMAN returns classic roman numbers.
Type 1 is more concise than classic type, type 2 is more concise than type 1, and type 3 is more concise than type 2. Type 4 is a simplified type.
If @{d} is greater than zero, @{x} is rounded to the given number of digits.
If @{d} is zero, @{x} is rounded to the next integer.
If @{d} is less than zero, @{x} is rounded to the left of the decimal point
ROUNDDOWN:@{x} rounded towards 0
If @{d} is greater than zero, @{x} is rounded toward 0 to the given number of digits.
If @{d} is zero, @{x} is rounded toward 0 to the next integer.
If @{d} is less than zero, @{x} is rounded toward 0 to the left of the decimal point
ROUNDUP:@{x} rounded away from 0
If @{d} is greater than zero, @{x} is rounded away from 0 to the given number of digits.
If @{d} is zero, @{x} is rounded away from 0 to the next integer.
If @{d} is less than zero, @{x} is rounded away from 0 to the left of the decimal point
SEC(@{x}) is exported to OpenFormula as 1/COS(@{x}).
SIN,COS,TAN,CSC,SINH,COSH,TANH,RADIANS,DEGREES
SECH:the hyperbolic secant of @{x}
SECH(@{x}) is exported to OpenFormula as 1/COSH(@{x}).
SERIESSUM:sum of a power series at @{x}
x:number where to evaluate the power series
n:non-negative integer, exponent of the lowest term of the series
coeff:coefficients of the power series
Let us assume that the cells A1, A2, ..., A5 contain numbers 1.23, 2.32, 2.98, 3.42, and 4.33.
 Then SERIESSUM(2,1,2.23,A1:A5) evaluates as 5056.37439843926
SIGN returns 1 if the @{x} is positive and it returns -1 if @{x} is negative.
COS,TAN,CSC,SEC,SINH,COSH,TANH,RADIANS,DEGREES
SINH:the hyperbolic sine of @{x}
If @{x} is negative, SQRT returns #NUM!
SQRTPI:the square root of @{x} times 
SUMA:sum of all values and cells referenced
Numbers, text and logical values are included in the calculation too. If the cell contains text or the argument evaluates to FALSE, it is counted as value zero (0). If the argument evaluates to TRUE, it is counted as one (1).
SUMIF:sum of the cells in @{actual_range} for which the corresponding cells in the range meet the given @{criteria}
criteria:condition for a cell to be summed
actual_range:cell area, defaults to @{range}
AVERAGEIF:average of the cells in @{actual range} for which the corresponding cells in the range meet the given @{criteria}
criteria:condition for a cell to be included
SUMPRODUCT:multiplies components and adds the results
Multiplies corresponding data entries in the given arrays or ranges, and then returns the sum of those products.
If an entry is not numeric, the value zero is used instead.
If arrays or range arguments do not have the same dimensions, return #VALUE! error.
SUMPRODUCTs arguments are arrays or ranges. Attempting to use A1:A5>0 will not work, implicit intersection will kick in. Instead use --(A1:A5>0)
SUMSQ:sum of the squares of all values and cells referenced
SUMX2MY2:sum of the difference of squares
SUMX2MY2 function returns the sum of the difference of squares of corresponding values in two arrays. The equation of SUMX2MY2 is SUM(x^2-y^2).
Let us assume that the cells A1, A2, ..., A5 contain numbers 11, 15, 17, 21, and 43 and the cells B1, B2, ..., B5 hold numbers 13, 22, 31, 33, and 39.
Then SUMX2MY2(A1:A5,B1:B5) yields -1299.
SUMX2PY2:sum of the sum of squares
SUMX2PY2 function returns the sum of the sum of squares of corresponding values in two arrays. The equation of SUMX2PY2 is SUM(x^2+y^2).
If @{array0} and @{array1} have different number of data points, SUMX2PY2 returns #N/A.
Strings and empty cells are simply ignored.
Let us assume that the cells A1, A2, ..., A5 contain numbers 11, 15, 17, 21, and 43 and the cells B1, B2, ..., B5 hold numbers 13, 22, 31, 33, and 39.
Then SUMX2PY2(A1:A5,B1:B5) yields 7149.
SUMXMY2:sum of the squares of differences
SUMXMY2 function returns the sum of the squares of the differences of corresponding values in two arrays. The equation of SUMXMY2 is SUM((x-y)^2).
If @{array0} and @{array1} have different number of data points, SUMXMY2 returns #N/A.
Strings and empty cells are simply ignored.
Let us assume that the cells A1, A2, ..., A5 contain numbers 11, 15, 17, 21, and 43 and the cells B1, B2, ..., B5 hold numbers 13, 22, 31, 33, and 39.
Then SUMXMY2(A1:A5,B1:B5) yields 409.
TANH,COS,COSH,SIN,SINH,DEGREES,RADIANS
TANH:the hyperbolic tangent of @{x}
TRUNC:@{x} truncated to @{d} digits
d:non-negative integer, defaults to 0
If @{d} is omitted or negative then it defaults to zero. If it is not an integer then it is truncated to an integer.
This function is Excel compatible, but it returns 
 with a better precision.
MMULT:the matrix product of @{mat1} and @{mat2}
MINVERSE:the inverse matrix of @{matrix}
If @{matrix} is not invertible, MINVERSE returns #NUM!
If @{matrix} does not contain an equal number of columns and rows, MINVERSE returns #VALUE!
MDETERM:the determinant of the matrix @{matrix}
Let us assume that A1,...,A4 contain numbers 2, 3, 7, and 3; B1,..., B4 4, 2, 4, and 1; C1,...,C4 9, 4, 3; and 2; and D1,...,D4 7, 3, 6, and 5. Then MDETERM(A1:D4) yields 148.
MUNIT:the @{n} by @{n} identity matrix
EIGEN:eigenvalues and eigenvectors of the symmetric @{matrix}
If @{matrix} is not symmetric, EIGEN returns #NUM!
If @{matrix} does not contain an equal number of columns and rows, EIGEN returns #VALUE!
plugin.so.debug
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rel.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rel.plt
.got.plt
.got
.text
