/lib64/ld-linux-x86-64.so.2
libgimpui-2.0.so.0
g_free
gtk_box_get_type
gimp_drawable_detach
__gmon_start__
_Jv_RegisterClasses
gimp_drawable_get
gtk_widget_destroy
g_malloc
_ITM_deregisterTMCloneTable
gimp_pixel_rgn_get_rect
gtk_container_get_type
_ITM_registerTMCloneTable
gimp_image_insert_layer
gimp_pixel_rgn_init
gimp_dialog_run
g_type_check_instance_cast
gtk_widget_show
gimp_procedural_db_get_data
gtk_box_pack_start
gimp_procedural_db_set_data
gimp_dialog_get_type
gimp_drawable_type
g_log
gtk_container_set_border_width
gimp_layer_new
gimp_export_image
gimp_ui_init
_fini
gimp_export_dialog_get_content_area
gimp_export_dialog_new
libgimpwidgets-2.0.so.0
g_malloc_n
gimp_radio_button_update
gimp_int_radio_group_new
libgimpconfig-2.0.so.0
g_set_error
gimp_filename_to_utf8
libgimpmath-2.0.so.0
libgimp-2.0.so.0
gimp_locale_directory
gimp_tile_height
gimp_image_set_filename
gimp_image_new
gimp_image_delete
gimp_register_file_handler_mime
gimp_progress_init_printf
gimp_register_magic_load_handler
gimp_register_save_handler
gimp_install_procedure
gimp_get_pdb_error
gimp_main
gimp_pixel_rgn_set_rect
gimp_drawable_flush
gimp_progress_update
libgimpcolor-2.0.so.0
libgimpbase-2.0.so.0
libgtk-x11-2.0.so.0
g_file_error_quark
libgdk-x11-2.0.so.0
libpangocairo-1.0.so.0
libatk-1.0.so.0
libcairo.so.2
libgdk_pixbuf-2.0.so.0
libgio-2.0.so.0
libpangoft2-1.0.so.0
libpango-1.0.so.0
libgobject-2.0.so.0
libfontconfig.so.1
libfreetype.so.6
libgthread-2.0.so.0
libglib-2.0.so.0
libpthread.so.0
libc.so.6
__printf_chk
_IO_putc
fopen
dcgettext
ftell
__stack_chk_fail
bind_textdomain_codeset
calloc
fseek
memcpy
fclose
fwrite
fread
__cxa_finalize
bindtextdomain
_IO_getc
__libc_start_main
_edata
__bss_start
_end
/usr/lib64
GLIBC_2.4
GLIBC_2.14
GLIBC_2.2.5
GLIBC_2.3.4
%zB 
%rB 
%jB 
%bB 
%ZB 
%RB 
%JB 
%BB 
%:B 
%2B 
%*B 
%"B 
%zA 
%rA 
%jA 
%bA 
%ZA 
%RA 
%JA 
%BA 
%:A 
%2A 
%*A 
%"A 
=$; 
fffff.
fffff.
=y@ 
fffff.
AVAUATI
L$8dH
d$TH
D$`1
D$(j
D$XH
[]A\A]A^A_
AZA[
|$$H
l$$E1
|$`H
D$01
|$(j
AXAY
9D$ 
D+|$
l$0L
|$(1
D$ ^_H
D$@A
D$@H
9L$Hu
D$$9
T$LL
t$@D
d$ 1
L$$1
|$(I
;l$ L
*D$$
;T$8
D$$9
|$(1
D$0D
t$TH
|$PH
554 
\$@H
|$XH
dH34%(
dH34%(
AWAVA
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
fff.
AWAVA
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
fffff.
ATUS
[]A\
AVAUATUSH
]A\A]A^
G0Hc
[]A\A]A^
]A\A]A^
[]A\A]A^
AWAVI
AUAT
D$h1
Hc|$
$~8L
L$hdH3
x[]A\A]A^A_
AWAVE
AUATA
ZYt+H
[]A\A]A^A_
AWAV
AUATI
[]A\A]A^A_
fA9E
D$(L)
\$<M
l$8A
l$8f
t$fE;g
fE;e
H+D$(H
fA9E
FPxPA
fA9E
D$(L)
\$<A
|$8A
l$8f
t"fA;o
fA;m
H+D$(H
D$ L
H+D$(H
H+D$(H
|$8L
|$8L
AWAVA
AUATL
[]A\A]A^A_
1.1.1 - 17 May 1998
file-sgi-load
Silicon Graphics IRIS image
image/x-sgi
0,short,474
sgi,rgb,rgba,bw,icon
file-sgi-save
RGB*,GRAY*
gimp20-std-plug-ins
UTF-8
Opening '%s'
Invalid width: %hu
Invalid height: %hu
Background
file-sgi
RLE compression
No compression
Compression type
Saving '%s'
run-mode
Input image
drawable
Drawable to save
raw-filename
Output image
The name of the file to load
Copyright 1997-1998 by Michael Sweet
Michael Sweet <mike@easysw.com>
This plug-in loads SGI image files.
Loads files in SGI image file format
This plug-in saves SGI image files.
Saves files in SGI image file format
Could not open '%s' for reading.
Invalid number of channels: %hu
Could not allocate new image: %s
sgiGetRow(sgip, rows[i], %d, %d) failed!
Aggressive RLE
(not supported by SGI)
Cannot operate on indexed color images.
Could not open '%s' for writing.
The run mode { RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1) }
The name of the file to save the image in
Compression level (0 = none, 1 = RLE, 2 = ARLE)
;*3$"
file-sgi.debug
7zXZ
E[6$
1`)V[
LQ<{
cb(Kj
i2H[" @
[3w	
);Tw9
uHvD8|
1`92
z'NQ
>`ote==
yncE
0d0Y
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
