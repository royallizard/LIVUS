!DBG
4++.
"I65
Q&]Cf
	%xI
w/+.
Q@5jv
GT{r
c.J`
f?ad
sd]V
.%,-
=@NQ.
aG:z
Ok1b
e?Zw
?>}(
h|zL
y/bd
|8hH
81@f_
0Xk1
v_D ~
7+@~})^
&+.>I
__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
_ZN10RubberBand17StretchCalculatorD2Ev
_ZTVN10RubberBand17StretchCalculatorE
_ZdlPv
_ZN10RubberBand17StretchCalculatorD0Ev
_ZN10RubberBand17StretchCalculatorD1Ev
_ZN10RubberBand17StretchCalculator15calculateSingleEdfm
_ZSt4cerr
_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
_ZNSo3putEc
_ZNSo5flushEv
_ZNSo9_M_insertIdEERSoT_
_ZNSolsEi
_ZNKSt5ctypeIcE13_M_widen_initEv
_ZSt16__throw_bad_castv
_ZN10RubberBand17StretchCalculatorC2Emmb
_ZN10RubberBand17StretchCalculator5resetEv
_ZNK10RubberBand17StretchCalculator22calculateDisplacementsERKSt6vectorIfSaIfEERfRdS7_f
_ZNSt6vectorIN10RubberBand17StretchCalculator4PeakESaIS2_EEaSERKS4_
_Znwm
memmove
_ZSt17__throw_bad_allocv
_ZNSt6vectorIfSaIfEED2Ev
_ZNSt6vectorIfSaIfEEaSERKS1_
_ZNSt6vectorImSaImEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPmS1_EERKm
_ZNSt6vectorIfSaIfEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPfS1_EERKf
_ZN10RubberBand17StretchCalculator8smoothDFERKSt6vectorIfSaIfEE
_ZNSt6vectorIfSaIfEED1Ev
_Unwind_Resume
__gxx_personality_v0
_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPiS1_EERKi
_ZN10RubberBand17StretchCalculator16distributeRegionERKSt6vectorIfSaIfEEmfb
_ZNSo9_M_insertImEERSoT_
_ZNSo9_M_insertIlEERSoT_
_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_M_eraseEPSt13_Rb_tree_nodeImE
_ZNSt6vectorIN10RubberBand17StretchCalculator4PeakESaIS2_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS2_S4_EERKS2_
_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKm
_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueERKm
_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
_ZNSt11_Deque_baseIfSaIfEE17_M_initialize_mapEm
__cxa_begin_catch
__cxa_rethrow
__cxa_end_catch
_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEEEvT_S7_
_ZNSt5dequeIfSaIfEE17_M_reallocate_mapEmb
_ZSt19__move_median_firstIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEEEvT_S7_S7_
_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEElfEvT_T0_S8_T1_
_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEElEvT_S7_T0_
_ZN10RubberBand17StretchCalculator9findPeaksERKSt6vectorIfSaIfEE
_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_
_ZN10RubberBand17StretchCalculator9calculateEdmRKSt6vectorIfSaIfEES5_
__assert_fail
_ZNSt8ios_base4InitC1Ev
_ZNSt8ios_base4InitD1Ev
__cxa_atexit
_ZTSN10RubberBand17StretchCalculatorE
_ZTIN10RubberBand17StretchCalculatorE
_ZTVN10__cxxabiv117__class_type_infoE
_ZN10RubberBand17StretchCalculatorC1Emmb
_ZN10RubberBand19RubberBandStretcher4Impl13ProcessThreadD2Ev
_ZTVN10RubberBand19RubberBandStretcher4Impl13ProcessThreadE
_ZN10RubberBand9ConditionD1Ev
_ZN10RubberBand6ThreadD2Ev
_ZN10RubberBand19RubberBandStretcher4Impl13ProcessThreadD0Ev
_ZN10RubberBand19RubberBandStretcher4Impl13ProcessThreadC2EPS1_m
_ZN10RubberBand6ThreadC2Ev
_ZNSsC1EPKcRKSaIcE
_ZNSsC1ERKSs
_ZNSs6appendEmc
_ZN10RubberBand9ConditionC1ESs
_ZNSs4_Rep20_S_empty_rep_storageE
_ZNSs4_Rep10_M_destroyERKSaIcE
_ZNSsD1Ev
_ZN10RubberBand19RubberBandStretcher4Impl13ProcessThread19signalDataAvailableEv
_ZN10RubberBand9Condition6signalEv
_ZN10RubberBand19RubberBandStretcher4Impl13ProcessThread7abandonEv
_ZNK10RubberBand19RubberBandStretcher4Impl24resampleBeforeStretchingEv
_ZN10RubberBand19RubberBandStretcher4Impl18testInbufReadSpaceEm
_ZN10RubberBand19RubberBandStretcher4Impl13getIncrementsEmRmS2_Rb
_ZN10RubberBand19RubberBandStretcher4Impl12analyseChunkEm
_ZN10RubberBand3FFT12forwardPolarEPKdPdS3_
_ZN10RubberBand19RubberBandStretcher4Impl11modifyChunkEmmb
_ZNK10RubberBand19RubberBandStretcher4Impl17getEffectiveRatioEv
_ZN10RubberBand19RubberBandStretcher4Impl17formantShiftChunkEm
_ZN10RubberBand3FFT15inverseCepstralEPKdPd
_ZN10RubberBand3FFT7forwardEPKdPdS3_
_ZN10RubberBand19RubberBandStretcher4Impl15synthesiseChunkEm
_ZN10RubberBand3FFT12inversePolarEPKdS2_Pd
_ZNK10RubberBand10RingBufferIfLi1EE13getWriteSpaceEv
_ZN10RubberBand10RingBufferIfLi1EE5writeEPKfi
_ZN10RubberBand19RubberBandStretcher4Impl11writeOutputERNS_10RingBufferIfLi1EEEPfmRmm
_ZN10RubberBand19RubberBandStretcher4Impl10writeChunkEmmb
_ZN10RubberBand9Resampler8resampleEPrKPKfPrKPfifb
_ZNSo9_M_insertIbEERSoT_
_ZN10RubberBand19RubberBandStretcher4Impl11ChannelData18setResampleBufSizeEm
_ZN10RubberBand19RubberBandStretcher4Impl22processChunkForChannelEmmmb
_ZN10RubberBand19RubberBandStretcher4Impl14consumeChannelEmPKfmb
_ZNK10RubberBand10RingBufferIfLi1EE4peekEPfii
memset
_ZN10RubberBand19RubberBandStretcher4Impl13processChunksEmRbS2_
_ZN10RubberBand19RubberBandStretcher4Impl13ProcessThread3runEv
_ZN10RubberBand9Condition4lockEv
_ZN10RubberBand9Condition4waitEi
_ZN10RubberBand9Condition6unlockEv
_ZNK10RubberBand19RubberBandStretcher4Impl9availableEv
_ZN10RubberBand11MutexLockerC1EPNS_5MutexE
_ZN10RubberBand11MutexLockerD1Ev
_ZN10RubberBand10RingBufferIiLi1EE5writeEPKii
_ZN10RubberBand19RubberBandStretcher4Impl19calculateIncrementsERmS2_Rb
__stack_chk_fail
_ZN10RubberBand19RubberBandStretcher4Impl15processOneChunkEv
_ZN10RubberBand10RingBufferIfLi1EE4readEPfii
_ZNK10RubberBand19RubberBandStretcher4Impl8retrieveEPKPfm
_ZTSN10RubberBand19RubberBandStretcher4Impl13ProcessThreadE
_ZTIN10RubberBand19RubberBandStretcher4Impl13ProcessThreadE
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTIN10RubberBand6ThreadE
_ZN10RubberBand19RubberBandStretcher4Impl13ProcessThreadD1Ev
pthread_cancel
_ZN10RubberBand19RubberBandStretcher4Impl13ProcessThreadC1EPS1_m
_ZN10RubberBand7FFTImplD2Ev
_ZTVN10RubberBand7FFTImplE
_ZN10RubberBand4FFTs6D_FFTW18getFloatTimeBufferEv
_ZN10RubberBand4FFTs6D_FFTW19getDoubleTimeBufferEv
_ZN10RubberBand7FFTImplD0Ev
_ZN10RubberBand4FFTs6D_FFTW15inverseCepstralEPKfPf
logf
fftwf_execute
_ZN10RubberBand4FFTs6D_FFTW7inverseEPKfS3_Pf
_ZN10RubberBand4FFTs6D_FFTW7forwardEPKfPfS4_
_ZN10RubberBand4FFTs6D_FFTW12inversePolarEPKfS3_Pf
cosf
sinf
_ZN10RubberBand4FFTs6D_FFTW15inverseCepstralEPKdPd
fftw_execute
_ZN10RubberBand4FFTs6D_FFTW7inverseEPKdS3_Pd
_ZN10RubberBand4FFTs6D_FFTW7forwardEPKdPdS4_
_ZN10RubberBand4FFTs6D_FFTW12inversePolarEPKdS3_Pd
_ZN10RubberBand4FFTs6D_FFTW16forwardMagnitudeEPKfPf
_ZN10RubberBand4FFTs6D_FFTW12forwardPolarEPKfPfS4_
atan2f
_ZN10RubberBand4FFTs6D_FFTW16forwardMagnitudeEPKdPd
_ZN10RubberBand4FFTs6D_FFTW12forwardPolarEPKdPdS4_
atan2
_ZN10RubberBand4FFTs6D_FFTW9initFloatEv
_ZN10RubberBand4FFTs6D_FFTW13m_extantMutexE
_ZN10RubberBand5Mutex4lockEv
_ZN10RubberBand4FFTs6D_FFTW9m_extantfE
_ZN10RubberBand5Mutex6unlockEv
fftw_malloc
fftwf_plan_dft_r2c_1d
fftwf_plan_dft_c2r_1d
getenv
__snprintf_chk
fopen64
fftwf_import_wisdom_from_file
fclose
_ZN10RubberBand4FFTs6D_FFTWD2Ev
_ZTVN10RubberBand4FFTs6D_FFTWE
fftwf_export_wisdom_to_file
fftwf_destroy_plan
fftwf_free
_ZN10RubberBand4FFTs6D_FFTW9m_extantdE
fftw_export_wisdom_to_file
fftw_destroy_plan
fftw_free
_ZN10RubberBand4FFTs6D_FFTWD0Ev
_ZN10RubberBand4FFTs6D_FFTW10initDoubleEv
fftw_plan_dft_r2c_1d
fftw_plan_dft_c2r_1d
fftw_import_wisdom_from_file
_ZN10RubberBand3FFTC2Eii
_ZN10RubberBand3FFT8m_methodE
abort
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
__cxa_allocate_exception
_ZTIN10RubberBand3FFT9ExceptionE
__cxa_throw
_ZN10RubberBand3FFTD2Ev
_ZN10RubberBand3FFT16forwardMagnitudeEPKdPd
_ZN10RubberBand3FFT7forwardEPKfPfS3_
_ZN10RubberBand3FFT12forwardPolarEPKfPfS3_
_ZN10RubberBand3FFT16forwardMagnitudeEPKfPf
_ZN10RubberBand3FFT7inverseEPKdS2_Pd
_ZN10RubberBand3FFT7inverseEPKfS2_Pf
_ZN10RubberBand3FFT12inversePolarEPKfS2_Pf
_ZN10RubberBand3FFT15inverseCepstralEPKfPf
_ZN10RubberBand3FFT9initFloatEv
_ZN10RubberBand3FFT10initDoubleEv
_ZN10RubberBand3FFT18getFloatTimeBufferEv
_ZN10RubberBand3FFT19getDoubleTimeBufferEv
_ZN10RubberBand3FFT4tuneEv
_ZN10RubberBand5MutexC1Ev
_ZN10RubberBand5MutexD1Ev
_ZTVN10__cxxabiv116__enum_type_infoE
_ZTSN10RubberBand3FFT9ExceptionE
_ZTIN10RubberBand7FFTImplE
_ZN10RubberBand7FFTImplD1Ev
__cxa_pure_virtual
_ZTIN10RubberBand4FFTs6D_FFTWE
_ZN10RubberBand4FFTs6D_FFTWD1Ev
_ZTSN10RubberBand4FFTs6D_FFTWE
_ZTSN10RubberBand7FFTImplE
_ZN10RubberBand3FFTC1Eii
_ZN10RubberBand3FFTD1Ev
_ZN10RubberBand16SilentAudioCurve5resetEv
_ZN10RubberBand16SilentAudioCurve13setWindowSizeEm
_ZN10RubberBand16SilentAudioCurve7processEPKfm
_ZN10RubberBand16SilentAudioCurve13processDoubleEPKdm
_ZN10RubberBand16SilentAudioCurveD2Ev
_ZTVN10RubberBand16SilentAudioCurveE
_ZN10RubberBand10AudioCurveD2Ev
_ZN10RubberBand16SilentAudioCurveD0Ev
_ZN10RubberBand16SilentAudioCurveD1Ev
_ZN10RubberBand16SilentAudioCurveC2Emm
_ZN10RubberBand10AudioCurveC2Emm
_ZTSN10RubberBand16SilentAudioCurveE
_ZTIN10RubberBand16SilentAudioCurveE
_ZTIN10RubberBand10AudioCurveE
_ZN10RubberBand16SilentAudioCurveC1Emm
rubberband_new
_ZN10RubberBand19RubberBandStretcherC1Emmidd
rubberband_delete
_ZN10RubberBand19RubberBandStretcherD1Ev
rubberband_reset
_ZN10RubberBand19RubberBandStretcher5resetEv
rubberband_set_time_ratio
_ZN10RubberBand19RubberBandStretcher12setTimeRatioEd
rubberband_set_pitch_scale
_ZN10RubberBand19RubberBandStretcher13setPitchScaleEd
rubberband_get_time_ratio
_ZNK10RubberBand19RubberBandStretcher12getTimeRatioEv
rubberband_get_pitch_scale
_ZNK10RubberBand19RubberBandStretcher13getPitchScaleEv
rubberband_get_latency
_ZNK10RubberBand19RubberBandStretcher10getLatencyEv
rubberband_set_transients_option
_ZN10RubberBand19RubberBandStretcher19setTransientsOptionEi
rubberband_set_phase_option
_ZN10RubberBand19RubberBandStretcher14setPhaseOptionEi
rubberband_set_formant_option
_ZN10RubberBand19RubberBandStretcher16setFormantOptionEi
rubberband_set_pitch_option
_ZN10RubberBand19RubberBandStretcher14setPitchOptionEi
rubberband_set_expected_input_duration
_ZN10RubberBand19RubberBandStretcher24setExpectedInputDurationEm
rubberband_get_samples_required
_ZNK10RubberBand19RubberBandStretcher18getSamplesRequiredEv
rubberband_set_max_process_size
_ZN10RubberBand19RubberBandStretcher17setMaxProcessSizeEm
rubberband_study
_ZN10RubberBand19RubberBandStretcher5studyEPKPKfmb
rubberband_process
_ZN10RubberBand19RubberBandStretcher7processEPKPKfmb
rubberband_available
_ZNK10RubberBand19RubberBandStretcher9availableEv
rubberband_retrieve
_ZNK10RubberBand19RubberBandStretcher8retrieveEPKPfm
rubberband_get_channel_count
_ZNK10RubberBand19RubberBandStretcher15getChannelCountEv
rubberband_calculate_stretch
_ZN10RubberBand19RubberBandStretcher16calculateStretchEv
rubberband_set_debug_level
_ZN10RubberBand19RubberBandStretcher13setDebugLevelEi
rubberband_set_default_debug_level
_ZN10RubberBand19RubberBandStretcher20setDefaultDebugLevelEi
_ZN10RubberBand10allocFloatEPfi
_ZN10RubberBand19RubberBandStretcher4Impl11ChannelData5resetEv
_ZN10RubberBand9Resampler5resetEv
_ZNSt8_Rb_treeImSt4pairIKmPN10RubberBand3FFTEESt10_Select1stIS5_ESt4lessImESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E
_ZN10RubberBand19RubberBandStretcher4Impl11ChannelDataD2Ev
_ZN10RubberBand9ResamplerD1Ev
_ZN10RubberBand9freeFloatEPf
_ZN10RubberBand10freeDoubleEPd
_ZdaPv
_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
_ZN10RubberBand9ScavengerINS_21ScavengerArrayWrapperIfEEEC2Eii
_ZN10RubberBand9ScavengerINS_21ScavengerArrayWrapperIfEEE11clearExcessEi
_ZN10RubberBand9ScavengerINS_21ScavengerArrayWrapperIfEEED2Ev
gettimeofday
_ZN10RubberBand10RingBufferIfLi1EE11m_scavengerE
_ZN10RubberBand10RingBufferIfLi1EEC2Ei
_ZTVN10RubberBand10RingBufferIfLi1EEE
_Znam
_ZNK10RubberBand10RingBufferIfLi1EE7resizedEii
_ZN10RubberBand10RingBufferIfLi1EEC1Ei
_ZN10RubberBand19RubberBandStretcher4Impl11ChannelData13setOutbufSizeEm
_ZN10RubberBand10RingBufferIfLi1EED2Ev
munlock
_ZN10RubberBand10RingBufferIfLi1EED0Ev
_ZN10RubberBand10RingBufferIfLi1EED1Ev
_ZNSt8_Rb_treeImSt4pairIKmPN10RubberBand3FFTEESt10_Select1stIS5_ESt4lessImESaIS5_EE10_M_insert_EPKSt18_Rb_tree_node_baseSE_RKS5_
_ZNSt8_Rb_treeImSt4pairIKmPN10RubberBand3FFTEESt10_Select1stIS5_ESt4lessImESaIS5_EE16_M_insert_uniqueERKS5_
_ZNSt8_Rb_treeImSt4pairIKmPN10RubberBand3FFTEESt10_Select1stIS5_ESt4lessImESaIS5_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS5_ERKS5_
_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base
_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base
_ZN10RubberBand19RubberBandStretcher4Impl11ChannelData9constructERKSt3setImSt4lessImESaImEEmm
_ZN10RubberBand11allocDoubleEi
_ZN10RubberBand10allocFloatEi
_ZN10RubberBand19RubberBandStretcher4Impl11ChannelDataC2ERKSt3setImSt4lessImESaImEEimm
_ZN10RubberBand19RubberBandStretcher4Impl11ChannelDataC2Emim
_ZN10RubberBand19RubberBandStretcher4Impl11ChannelData13setWindowSizeEm
_ZN10RubberBand11allocDoubleEPdi
_ZGVN10RubberBand10RingBufferIfLi1EE11m_scavengerE
_ZN10RubberBand9ScavengerINS_21ScavengerArrayWrapperIfEEEC1Eii
_ZN10RubberBand9ScavengerINS_21ScavengerArrayWrapperIfEEED1Ev
_ZTIN10RubberBand10RingBufferIfLi1EEE
_ZTSN10RubberBand10RingBufferIfLi1EEE
_ZN10RubberBand19RubberBandStretcher4Impl11ChannelDataD1Ev
_ZN10RubberBand19RubberBandStretcher4Impl11ChannelDataC1ERKSt3setImSt4lessImESaImEEimm
_ZN10RubberBand19RubberBandStretcher4Impl11ChannelDataC1Emim
_ZN10RubberBand6WindowIfED2Ev
_ZTVN10RubberBand6WindowIfEE
_ZN10RubberBand6WindowIfED0Ev
_ZNK10RubberBand19RubberBandStretcher4Impl12getTimeRatioEv
_ZNK10RubberBand19RubberBandStretcher4Impl13getPitchScaleEv
_ZNK10RubberBand19RubberBandStretcher4Impl18getFrequencyCutoffEi
_ZN10RubberBand19RubberBandStretcher4Impl18setFrequencyCutoffEif
_ZN10RubberBand19RubberBandStretcher4Impl7roundUpEm
_ZN10RubberBand19RubberBandStretcher4Impl14calculateSizesEv
_ZNK10RubberBand19RubberBandStretcher4Impl10getLatencyEv
_ZN10RubberBand19RubberBandStretcher4Impl19setTransientsOptionEi
_ZN10RubberBand19RubberBandStretcher4Impl14setPhaseOptionEi
_ZN10RubberBand19RubberBandStretcher4Impl16setFormantOptionEi
_ZN10RubberBand19RubberBandStretcher4Impl13setDebugLevelEi
_ZNK10RubberBand19RubberBandStretcher4Impl18getSamplesRequiredEv
_ZNSt6vectorIiSaIiEED2Ev
_ZN10RubberBand10RingBufferIfLi1EE4zeroEi
_ZNSt6vectorIiSaIiEEaSERKS1_
_ZNSt8_Rb_treeImSt4pairIKmPN10RubberBand6WindowIfEEESt10_Select1stIS6_ESt4lessImESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E
_ZNSt8_Rb_treeIPN10RubberBand19RubberBandStretcher4Impl13ProcessThreadES4_St9_IdentityIS4_ESt4lessIS4_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E
_ZN10RubberBand9ScavengerINS_21ScavengerArrayWrapperIiEEEC2Eii
_ZNSt6vectorIPN10RubberBand19RubberBandStretcher4Impl11ChannelDataESaIS4_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS4_S6_EERKS4_
_ZNK10RubberBand19RubberBandStretcher4Impl18getPhaseResetCurveEv
_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb
_ZSt20__throw_length_errorPKc
_ZN10RubberBand19RubberBandStretcher4Impl5studyEPKPKfmb
_ZNK10RubberBand19RubberBandStretcher4Impl19getOutputIncrementsEv
_ZNSt6vectorIiSaIiEED1Ev
_ZN10RubberBand19RubberBandStretcher4Impl16calculateStretchEv
_ZNK10RubberBand19RubberBandStretcher4Impl18getExactTimePointsEv
_ZN10RubberBand9ScavengerINS_21ScavengerArrayWrapperIiEEE11clearExcessEi
_ZN10RubberBand9ScavengerINS_21ScavengerArrayWrapperIiEEED2Ev
_ZN10RubberBand10RingBufferIiLi1EE11m_scavengerE
_ZN10RubberBand10RingBufferIiLi1EED2Ev
_ZTVN10RubberBand10RingBufferIiLi1EEE
_ZN10RubberBand10RingBufferIiLi1EED0Ev
_ZN10RubberBand10RingBufferIiLi1EED1Ev
_ZN10RubberBand19RubberBandStretcher4ImplD2Ev
_ZN10RubberBand6Thread4waitEv
_ZNSo9_M_insertIPKvEERSoT_
_ZN10RubberBand6WindowIfE9cosinewinEPfffff
_ZN10RubberBand6WindowIfE7encacheEv
_ZNSt8_Rb_treeIPN10RubberBand19RubberBandStretcher4Impl13ProcessThreadES4_St9_IdentityIS4_ESt4lessIS4_ESaIS4_EE10_M_insert_EPKSt18_Rb_tree_node_baseSD_RKS4_
_ZNSt8_Rb_treeIPN10RubberBand19RubberBandStretcher4Impl13ProcessThreadES4_St9_IdentityIS4_ESt4lessIS4_ESaIS4_EE16_M_insert_uniqueERKS4_
_ZN10RubberBand19RubberBandStretcher4Impl7processEPKPKfmb
_ZN10RubberBand6Thread5startEv
_ZNSt8_Rb_treeImSt4pairIKmPN10RubberBand6WindowIfEEESt10_Select1stIS6_ESt4lessImESaIS6_EE10_M_insert_EPKSt18_Rb_tree_node_baseSF_RKS6_
_ZNSt8_Rb_treeImSt4pairIKmPN10RubberBand6WindowIfEEESt10_Select1stIS6_ESt4lessImESaIS6_EE16_M_insert_uniqueERKS6_
_ZNSt8_Rb_treeImSt4pairIKmPN10RubberBand6WindowIfEEESt10_Select1stIS6_ESt4lessImESaIS6_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS6_ERKS6_
_ZN10RubberBand19RubberBandStretcher4Impl9configureEv
_ZN10RubberBand9ResamplerC1ENS0_7QualityEiii
_ZN10RubberBand20PercussiveAudioCurveC1Emm
_ZN10RubberBand18ConstantAudioCurveC1Emm
_ZN10RubberBand28SpectralDifferenceAudioCurveC1Emm
_ZN10RubberBand19RubberBandStretcher4Impl11reconfigureEv
_ZN10RubberBand19RubberBandStretcher4Impl14setPitchOptionEi
_ZN10RubberBand19RubberBandStretcher4Impl17setMaxProcessSizeEm
_ZN10RubberBand19RubberBandStretcher4Impl24setExpectedInputDurationEm
_ZN10RubberBand19RubberBandStretcher4Impl13setPitchScaleEd
_ZN10RubberBand19RubberBandStretcher4Impl12setTimeRatioEd
_ZN10RubberBand19RubberBandStretcher4Impl5resetEv
_ZN10RubberBand19RubberBandStretcher4ImplC2Emmidd
_ZN10RubberBand19RubberBandStretcher4Impl19m_defaultDebugLevelE
_ZN10RubberBand24system_is_multiprocessorEv
_ZGVN10RubberBand10RingBufferIiLi1EE11m_scavengerE
_ZN10RubberBand9ScavengerINS_21ScavengerArrayWrapperIiEEEC1Eii
_ZN10RubberBand9ScavengerINS_21ScavengerArrayWrapperIiEEED1Ev
_ZN10RubberBand19RubberBandStretcher4Impl19m_defaultWindowSizeE
_ZN10RubberBand19RubberBandStretcher4Impl18m_defaultIncrementE
_ZTIN10RubberBand10RingBufferIiLi1EEE
_ZTSN10RubberBand10RingBufferIiLi1EEE
_ZTIN10RubberBand6WindowIfEE
_ZN10RubberBand6WindowIfED1Ev
_ZTSN10RubberBand6WindowIfEE
_ZN10RubberBand19RubberBandStretcher4ImplD1Ev
_ZN10RubberBand19RubberBandStretcher4ImplC1Emmidd
_ZN10RubberBand20PercussiveAudioCurve5resetEv
_ZN10RubberBand20PercussiveAudioCurve7processEPKfm
_ZN10RubberBand20PercussiveAudioCurve13processDoubleEPKdm
_ZN10RubberBand20PercussiveAudioCurve13setWindowSizeEm
_ZN10RubberBand20PercussiveAudioCurveD2Ev
_ZTVN10RubberBand20PercussiveAudioCurveE
_ZN10RubberBand20PercussiveAudioCurveD0Ev
_ZN10RubberBand20PercussiveAudioCurveD1Ev
_ZN10RubberBand20PercussiveAudioCurveC2Emm
_ZTSN10RubberBand20PercussiveAudioCurveE
_ZTIN10RubberBand20PercussiveAudioCurveE
_ZTVN10RubberBand10AudioCurveE
_ZN10RubberBand10AudioCurve13processDoubleEPKdm
_ZN10RubberBand10AudioCurveD0Ev
_ZN10RubberBand10AudioCurveD1Ev
_ZTSN10RubberBand10AudioCurveE
_ZN10RubberBand10AudioCurveC1Emm
feof
fgets
posix_memalign
_ZN10RubberBand19RubberBandStretcherC2Emmidd
_ZN10RubberBand19RubberBandStretcherD2Ev
_ZNK10RubberBand19RubberBandStretcher18getFrequencyCutoffEi
_ZN10RubberBand19RubberBandStretcher18setFrequencyCutoffEif
_ZNK10RubberBand19RubberBandStretcher17getInputIncrementEv
_ZNK10RubberBand19RubberBandStretcher19getOutputIncrementsEv
_ZNK10RubberBand19RubberBandStretcher18getPhaseResetCurveEv
_ZNK10RubberBand19RubberBandStretcher18getExactTimePointsEv
_ZN10RubberBand18ConstantAudioCurve5resetEv
_ZN10RubberBand18ConstantAudioCurve13setWindowSizeEm
_ZN10RubberBand18ConstantAudioCurve7processEPKfm
_ZN10RubberBand18ConstantAudioCurve13processDoubleEPKdm
_ZN10RubberBand18ConstantAudioCurveD2Ev
_ZTVN10RubberBand18ConstantAudioCurveE
_ZN10RubberBand18ConstantAudioCurveD0Ev
_ZN10RubberBand18ConstantAudioCurveD1Ev
_ZN10RubberBand18ConstantAudioCurveC2Emm
_ZTSN10RubberBand18ConstantAudioCurveE
_ZTIN10RubberBand18ConstantAudioCurveE
_ZN10RubberBand13ResamplerImplD2Ev
_ZTVN10RubberBand13ResamplerImplE
_ZN10RubberBand13ResamplerImplD0Ev
_ZN10RubberBand10Resamplers5D_SRC5resetEv
src_reset
_ZN10RubberBand10Resamplers5D_SRC8resampleEPrKPKfPrKPfifb
src_process
src_strerror
_ZTIN10RubberBand9Resampler9ExceptionE
_ZN10RubberBand10Resamplers5D_SRCD2Ev
_ZTVN10RubberBand10Resamplers5D_SRCE
src_delete
_ZN10RubberBand10Resamplers5D_SRCD0Ev
_ZN10RubberBand10Resamplers5D_SRCD1Ev
_ZN10RubberBand10Resamplers5D_SRCC2ENS_9Resampler7QualityEiii
src_new
_ZN10RubberBand9ResamplerC2ENS0_7QualityEiii
_ZN10RubberBand10Resamplers5D_SRCC1ENS_9Resampler7QualityEiii
_ZN10RubberBand9ResamplerD2Ev
_ZTSN10RubberBand10Resamplers5D_SRCE
_ZTIN10RubberBand10Resamplers5D_SRCE
_ZTIN10RubberBand13ResamplerImplE
_ZN10RubberBand13ResamplerImplD1Ev
_ZTSN10RubberBand9Resampler9ExceptionE
_ZTSN10RubberBand13ResamplerImplE
_ZN10RubberBand6Thread9staticRunEPv
_ZTVN10RubberBand6ThreadE
pthread_join
_ZN10RubberBand6ThreadD0Ev
_ZN10RubberBand6ThreadD1Ev
pthread_create
_ZN10RubberBand6Thread2idEv
_ZN10RubberBand6Thread18threadingAvailableEv
_ZN10RubberBand5MutexC2Ev
pthread_mutex_init
_ZN10RubberBand5MutexD2Ev
pthread_mutex_destroy
pthread_self
pthread_mutex_lock
pthread_mutex_unlock
_ZN10RubberBand5Mutex7trylockEv
pthread_mutex_trylock
_ZN10RubberBand9ConditionC2ESs
pthread_cond_init
_ZN10RubberBand9ConditionD2Ev
pthread_cond_destroy
pthread_cond_timedwait
pthread_cond_wait
pthread_cond_signal
_ZN10RubberBand11MutexLockerC2EPNS_5MutexE
_ZN10RubberBand11MutexLockerD2Ev
_ZTSN10RubberBand6ThreadE
_ZN10RubberBand6ThreadC1Ev
_ZN10RubberBand28SpectralDifferenceAudioCurve5resetEv
_ZN10RubberBand28SpectralDifferenceAudioCurve13processDoubleEPKdm
_ZN10RubberBand28SpectralDifferenceAudioCurve7processEPKfm
_ZN10RubberBand28SpectralDifferenceAudioCurve13setWindowSizeEm
_ZN10RubberBand28SpectralDifferenceAudioCurveD2Ev
_ZTVN10RubberBand28SpectralDifferenceAudioCurveE
_ZN10RubberBand28SpectralDifferenceAudioCurveD0Ev
_ZN10RubberBand28SpectralDifferenceAudioCurveD1Ev
_ZN10RubberBand28SpectralDifferenceAudioCurveC2Emm
_ZTSN10RubberBand28SpectralDifferenceAudioCurveE
_ZTIN10RubberBand28SpectralDifferenceAudioCurveE
_ZN10RubberBand23HighFrequencyAudioCurve5resetEv
_ZN10RubberBand23HighFrequencyAudioCurve13setWindowSizeEm
_ZN10RubberBand23HighFrequencyAudioCurve7processEPKfm
_ZN10RubberBand23HighFrequencyAudioCurve13processDoubleEPKdm
_ZN10RubberBand23HighFrequencyAudioCurveD2Ev
_ZTVN10RubberBand23HighFrequencyAudioCurveE
_ZN10RubberBand23HighFrequencyAudioCurveD0Ev
_ZN10RubberBand23HighFrequencyAudioCurveD1Ev
_ZN10RubberBand23HighFrequencyAudioCurveC2Emm
_ZTSN10RubberBand23HighFrequencyAudioCurveE
_ZTIN10RubberBand23HighFrequencyAudioCurveE
_ZN10RubberBand23HighFrequencyAudioCurveC1Emm
_Z13tempo_convertPKc
strchr
strtod
strdup
main
getopt_long
optarg
strtol
optind
sf_open
sf_seek
sf_readf_float
sf_writef_float
usleep
sf_close
sf_strerror
libfftw3f.so.3
libfftw3.so.3
libm.so.6
libvampsdk.so
libsamplerate.so.0
libsndfile.so.1
libstdc++.so.6
libgcc_s.so.1
libc.so.6
_edata
__bss_start
_end
GCC_3.0
libsndfile.so.1.0
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.2.5
GLIBC_2.3.2
CXXABI_1.3
GLIBCXX_3.4.11
GLIBCXX_3.4.9
GLIBCXX_3.4
libsamplerate.so.0.0
AWE1
AVE1
AUE1
[]A\A]A^A_
YD$(
YD$(
T$pH
D$Hf
T$pH
*D$p
YD$(
\$]Lct$|
D$Pf
D$(H
Hct$xH
t$pH
D$HJ
|$`1
H;l$pA
t$HH
L$HE1
H;l$pH
*L$p
D;$$
|$`1
D$@H
D$ H;D$p
t$HH
T$0M
T$HE1
D$ H;D$pL
D$8t-H
H;\$
T$8H
D$8H
T$8H
|$hH
*D$@
*L$p
;\$X
|$hH
*D$0
YD$(
t$0H
*D$0
HcT$
D$0H
T$0H
T$0H
L$0H
fffff.
ATSubH
[A\]
fffff.
fffff.
AUATUH
\$ L
\$ H
P[]A\A]A^
YT$@
D$HL
\L$Hf
[]A\A]A^
t$@H
YL$@f
D$0L
YL$@f
P[]A\A]A^
D$@L
d$0L
\$ M
l$Hf
P[]A\A]A^
fffff.
AWE1
?AUI
[]A\A]A^A_
AVAUATI
D$0D
D$GH
\$PH
\$XL
l$`H
L$PI
t$XI)
D$ A
|$<M
T$HH)
D$PH
D$8H
T$PL
t$HH
T$PH
t$ H
T$PH
D$PH
T$PH
D$PH
D$8f
t$8L
D$xH
L$pH
D$xH
l$XH
D$(H
L$pf
L$XH
T$PH9
*D$ 
YD$xI
/T$0
YD$0
T$PH
D$pH
XD$(
D$pf
*T$ 
D\$ E
D$pD
H)\$ 
T$PH
\D$(
D$PH
D$0H
D$0H
t$ H
YD$0
D$HH
D$HH9D$
t$HH
|$PH
[]A\A]A^A_
T$PH
T$PH
D$PH
D$8H
T$PL
D$ H
T$PH
D$PH
T$PH
L$PL
t$XA
|$<I)
D$pH
t$ H
T$PH
D$PL
T$PH
D$PH
AWAVAUATUSH
|$@H
t$0H
t$0H
)L$P
D$8H
T$0H
L$0H
L$Pf
T$8f
d$ ~iL
t$0H
t$0H
L$Pf
T$8f
D$ H
H;\$(
H;\$(H
H;\$(r
l$ I
L9D$ I
H;l$(
\$(M
D$hL
D$PL
D$`H
T$`I
D$8H
T$8I
H;l$8
T$8M
D$8M
D$`M
t$0L
L$`H
D$`H
D$PH
D$HH
D$pH
D$8H
t$0E)
H9l$ 
H;D$
D$@H
D$@H
H9l$ 
H9\$x
t$0E)
T$HH
L$HH
T$pH
L$pH
T$HH
T$pH
L$pH
T$HH
L$HH
T$pH
D$@H
[]A\A]A^A_
D$@H
D$@H
T$HH
T$pH
|$@H
t$0H
t$0H
)L$Pf
T$8f
D$hA
t$hH
YD$ f
D$hH
\$HH
t$0L
D$ H
D$ H
T$h1
YD$(f
YD$`f
D$ H
D$ H
D$(H
D$(H
D$`H
L$(f
D$ H
D$ H
D$(H
T$h1
D$@H
AWAVI
AUATI
D$XL
|$pH
|$pH
YD$X
=~|!
|$(H
D$XH
YD$X
|$(H
|$(H
|$(H
|$(L)
*D$h
*D$`
|$(L
VPH)
H9T$ H
L$`H
t$hH
T$ H
|$8H
H9t$0H
\$0L
l$01
L9l$
L9l$
=&x!
t$0H
t$@H
D$XH
H+D$@H
L;l$
|$(L
l$HH
D$PI
H9T$ 
t$8H
|$8H
t$0H
t$@H
YD$X
L$Xf
D$XH
|$(L
t$HH
*D$H
L$XH
|$(H
t$PH
[]A\A]A^A_
D$`I
YD$X
D$HH
T$HH
L$`H
t$`H
L$hH
t$hH
|$pH
t$ H
uWH)
l$ L
t$(L
|$0H
4$H)
l$ L
d$(L
l$0L
t$8L
|$@H
l$ L
d$(L
l$0L
t$8L
|$@H
l$ L
d$(L
l$0L
t$8L
|$@H
[]A\
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
D$ L
l$ L
t$(L
|$0H
B H9
U H9
u+H9
 []A\
P H9
AUATI
l$(I
D$ H
D$HH
D$8H
L$@I
D$0A\A]A^
AUATI
[]A\A]A^
<?H9
vQL)
l$0L
t$8L
|$@H
l$ L
d$(H
CATI
C~hM
[]A\A]A^
-~]!
 []A\
=?]!
fffff.
%sZ!
D$CH
fffff.
hH9w
C(E1
\$8H
l$@L
d$HL
l$PL
t$XL
|$`H
}?Mc
T$ L
=PX!
\$(L
T$ H
T$ L
T$ L
~#Ic
AWAVAUATA
5JU!
|$|A
H9k(
HcT$|M	
D$|H
t.E1
}$A9
t)fD
s";D$|t
*D$|H
D$`H
D$CH
[]A\A]A^A_
[]A\A]A^A_
fffff.
AWAVAUI
ATUSH
L;|$
([]A\A]A^A_
AVAUATUSH
[]A\A]A^A_
~+Ic
~YMc
\$8H
l$@L
d$HL
l$PL
t$XL
|$`H
=@G!
5%F!
H+D$ H
t$(H
t$ H
D$ D
+T$ H
-qD!
D$CH
AUATI
L$?L
D$0L
D$?I
L$0Hc
L$0M
EHA9
H[]A\A]A^A_
H[]A\A]A^A_
t$?L
L$ L
=t>!
L$ L
L$ L
5f<!
}HE1
l$ L
d$(L
l$0L
t$8L
|$@H
VUUU
-)9!
T$(D
D$'H
D$'H
l$@H
\$8L
d$HL
l$PL
t$XL
|$`H
=m6!
fffff.
AWAVI
H9C t
D$/H
L$ H
D$/H
L$ L
8[]A\A]A^A_
fff.
ATUSH
[]A\
fffff.
AWAVAUATUSH
L$/H
T$.H
=W.!
=:.!
8[]A\A]A^A_
|$ tF
[]A\A]A^A_
AWAVI
s(A9
D$CH
[A\A]A^A_]
ATUSH
t$X1
H9C t
 []A\
[]A\
fff.
AWAVAUI
I9\$
[]A\A]A^A_
[]A\
AULc
ATUH
[]A\A]
[]A\A]
~"E1
AUATUH
-C!!
%' !
[]A\A]
AWAVAUATI
xBE1
sHI9
[]A\A]A^A_
sHH9
CHH9
[]A\
AWAVAUI
xYE1
D9t$
D9t$
sHI9
[]A\A]A^A_
AWAVAUI
ATUH
L;4$u
[]A\A]A^A_
sHH9
CHH9
[]A\
AWAVAUI
L;t$
L9t$
sHI9
[]A\A]A^A_
CHH9
AVAUATI
CHH9
[]A\A]A^
CHH9
AVAUATI
CHH9
[]A\A]A^
Hc{HH
ATUSH
[]A\
ATUSH
[]A\
Hc{HH
fffff.
fff.
fffff.
l$(H
\$ L
d$0L
l$8L
t$@H
ffffff.
ffffff.
fffff.
fffff.
ffff.
ffffff.
AUATI
|$8H
[]A\A]
ATU1
K0A9
[]A\A]
fff.
ATUSH
t$(H
T$(H
L9p s
L9r 
L9l$
HcD$
T$(H
H;J v
H;H s$H
|$ H
T$0H
t$0H
H9J s
H9H v H
|$ H
T$@H
L$@H
T$(H
L9p s
L9r L
L9r s
L9p 
H9D$
H;D$
[]A\A]A^A_
L9t$
t,L9r r
L9r s
L9p v"H
T$PH
t$PH
L9r s
L9p v"H
T$`H
t$`H
T$pH
t$pH
D$(H
t$ H
t$ H
fffff.
AWAVAUATUH
H9X s
H9Y 
H9Z s
H9X 
h[]A\A]A^A_
H9Z s
H9Z s
H9X s
H9Y 
H9Z s
H9X 
h[]A\A]A^A_
H9X v"H
T$ H
\$ H
T$0H
\$0H
tLH9Z s
H9Z s
H9X 
H9X v"H
T$@H
\$@H
T$PH
\$PH
H9X 
[]A\
AUATLc
[]A\A]
w8AUATUSH
k L9
k L9
[]A\A]A^A_
AUATUSH
Gp9GtshH
c L9
[]A\A]
[]A\A]
c L9
Pp9Ptr
AVAUA
t7E1
[]A\A]A^
Pp9Ptr
D$ I
D$(L
l$ L
t$(L
|$0H
B H9
U H9
u+H9
 []A\
P H9
*L;n slH
L;h H
\$XH
l$`L
d$hL
l$pH
H9w H
L;h s8H
$H9B r
fffff.
fff.
AUATI
L$ E1
/D$ 
T$@H
T$PM
l$ I
D$(H
t$ H
l$ I
D$8L9
l$8L
D$0u
D$0A
l$0H
[]A\A]A^
0[]A\A]A^
/D$ 
\$ H
\$(I
YD$(
fffff.
fff.
fff.
AUATUH
[]A\A]A^
H9t$
 []A\A]A^
AWAVAUATI
L$/to
[]A\A]A^A_
\$ I
\$/E1
D$@I
D$ 9
I9D$ tbH
T$(H
T$(H
T$(I
t$8H
D$(I
\$0I
D$ H
t$PH
t$`H
D$hH
|$HH
|$@H
AUATI
[]A\A]
H9t$
([]A\A]
AWAVAUATUH
u(A9
([]A\A]A^A_
D$CH
AUATUSH
}PH+}HH
[]A\A]
ATU1
K0A9
[]A\A]
ATU1
K0A9
[]A\A]
AVAUATI
I9\$
\$pI
l$`H9
t$hI
[]A\A]A^A_
D$PE
t$hI
AVAUI
ATSH
[A\A]A^A_]
D$CH
fffff.
AVAUATUH
D$(L
D$8H
D$PH
|$ H
D$XH
D$PH
|$ H
D$XH
D$PH
D$XH
D$PH
d$8L
|$(L
u`M9
\$ t8L
H9X s
H9Z 
L$ L
H;J v
H;H s
T$`H
L$`H
t.I;U w
I;U v
H;P s
T$pH
T$pH
t$0H
[]A\A]A^A_
t$0H
AWAVAUATUSH
{ M9
L;x v
L;y 
L;z v
L;x 
s0L9
s L9
X[]A\A]A^A_
t/L;z v
L;x s#H
T$0H
|$0H
T$@H
|$@H
D$ H
L$(H
H9w8r
H9w@t
fffff.
ATUSH
 []A\
 []A\
[]A\
fffff.
AVAUATUS
[]A\A]A^
fffff.
AWAVAUATA
Pp9Pts
Pp9Pt
[]A\A]A^A_
l$ L
t$(L
|$0H
4$H)
[]A\
[]A\
AUATLc
[]A\A]
l$ L
d$(L
l$0L
t$8L
|$@H
AWAVAUA
L;_ H
L	?H
[]A\A]A^A_
T$`H
T$ H
D$hH
L$hH
L$(H
L!:D
L$(H
t$(H
L$ H
L$PH
t$XD
L$XH
t$XH)
H!8A
?t5A
?t8A
H	8A
D$pH
D$`H
D$0H
T$xD
L$xH
T$xH
T$8H
T$hD
L$8t
w8AUATUSH
k L9
k L9
[]A\A]A^A_
AUATUSH
Gp9GtshH
c L9
[]A\A]
[]A\A]
c L9
Pp9Ptr
ATUH
YD$ 
YD$ 
YD$@
Yl$8
Yd$0
Xl$(
`[]A\
AUATUH
([]A\A]
D$ L
l$ L
t$(L
|$0H
B H9
U H9
u+H9
 []A\
P H9
D$ I
D$(L
l$ L
t$(L
|$0H
B H9
U H9
u+H9
 []A\
P H9
*L;n slH
L;h H
\$XH
l$`L
d$hL
l$pH
H9w H
L;h s8H
$H9B r
fffff.
fffff.
fffff.
AVAUI
ATUH
[]A\A]A^
fffff.
ATUSH
[]A\
fffff.
d$0H
\$ H
l$(L
l$8L
t$@H
fffff.
fffff.
fffff.
fffff.
fffff.
fffff.
fff.
fffff.
AWAVAUATI
|$ H
t$ Hc
L$0D
D$HA
h[]A\A]A^A_
D$ I
fff.
fffff.
fffff.
G0~TL
l$ L
d$(L
l$0L
t$8L
|$@H
d$ H
l$(L
t$0H
fffff.
fffff.
fffff.
fffff.
fff.
H9C(t1H
l$ H
H9C(
-O} 
fffff.
fffff.
fff.
fff.
fffff.
fffff.
fff.
fff.
fffff.
\$(H
l$0L
d$8L
l$@H
df = 
, prevDf = 
, thresh = 
divergence = 
, recovery = 
, incr = 
divdiff = 
stretch peak offset: 
 (peak 
region of 
 chunks, output duration 
, toAllot 
totalDisplacement 
, max 
 (maxDf 
, df count 
ERROR: extreme increment 
 (this should not happen)
WARNING: extreme increment 
*** WARNING: increment 
 <= 0, rounding to zero
, smoothed 
, disp 
, allot 
, incr 
, remain 
total increment: 
, left over: 
 to allot, displacement 
 != expected 
hardPeakAmnesty = 
hard peak at 
 > absolute 
 > prev 
 * 1.4
 * 1.2 and 
 * 1.2
 * 1.1 and 
 * 1.1
pushing hard peak forward to 
adjusted mediansize = 
soft peak at 
peak is beyond end
amnesty = 
Hard peak: 
Soft peak: 
, ratio 
, outputDuration 
 (rounded up to 
, df size 
have 
 fixed positions
distributeRegion from 
 (chunks 
, expected 
total input increment = 
 (= 
 chunks), output = 
, ratio = 
, ideal output 
(region total = 
StretchCalculator::calculateSingle: transient
 (I thought this couldn't happen?)
*** WARNING: calculated output duration 
(ignoring, as we just had a hard peak)
libs/rubberband/src/StretchCalculator.cpp
phaseResetDf.size() == stretchDf.size()
StretchCalculator::calculate(): inputDuration 
*** WARNING: distributeRegion returned wrong duration 
N10RubberBand17StretchCalculatorE
virtual std::vector<int> RubberBand::StretchCalculator::calculate(double, size_t, const std::vector<float>&, const std::vector<float>&)
?ffffff
?333333
?333333
data 
read space = 0, giving up
read space = 
, setting draining true
 >= windowSize 
 (of 
mean inheritance distance = 
frame unchanged on channel 
theoreticalOut = 
, outCount = 
, startSkip = 
, qty = 
reduce qty to 
 samples
, discarding
, writing 
 from start offset 
writeChunk(
draining: accumulator fill = 
 (shiftIncrement = 
 and marking as last
: last = 
, chunkCount = 
thread 
 getting going
 abandoning
 done
available on channel 
 (waiting: 
*** ERROR: RubberBandStretcher::Impl::processChunks: shiftIncrement 
phase reset: leaving phases unmodified
WARNING: RubberBandStretcher::Impl::writeOutput: 
Buffer overrun on output: wrote 
WARNING: RubberBandStretcher::Impl::writeChunk: resizing resampler buffer from 
RubberBandStretcher::Impl::processChunks: setting outputComplete to true
processChunkForChannel: phase reset found, incrs 
WARNING: draining: shiftIncrement == 0, can't handle that in this context: setting to 
reducing shift increment from 
Buffer overrun on output for channel 
WARNING: RubberBandStretcher::Impl::consumeChannel: resizing resampler buffer from 
libs/rubberband/src/StretcherProcess.cpp
got == m_windowSize || cd.inputSize >= 0
ERROR: RubberBandStretcher::Impl::calculateIncrements: Channels are not in sync
calculateIncrements: phase reset on silence (silent history == 
RubberBandStretcher::Impl::retrieve: WARNING: channel imbalance detected
N10RubberBand19RubberBandStretcher4Impl13ProcessThreadE
void RubberBand::RubberBandStretcher::Impl::processChunks(size_t, bool&, bool&)
bool RubberBand::RubberBandStretcher::Impl::processOneChunk()
?%s/%s.%c
.rubberband.wisdom
HOME
FFT::FFT(
): using FFTW3 implementation
): power-of-two sizes only supported, minimum size 2
): WARNING: Selected implemention not available
): ERROR: Fallback implementation not available!
N10RubberBand4FFTs6D_FFTWE
N10RubberBand7FFTImplE
N10RubberBand3FFT9ExceptionE
N10RubberBand16SilentAudioCurveE
N10RubberBand10RingBufferIfLi1EEE
RubberBandStretcher: WARNING: Pitch scale must be greater than zero!
Resetting it from 
 to the default of 1.0: no pitch change will occur
RubberBandStretcher: WARNING: Time ratio must be greater than zero!
Resetting it from 
 to the default of 1.0: no time stretch will occur
RubberBandStretcher::Impl::setTransientsOption: Not permissible in non-realtime mode
RubberBandStretcher::Impl::study: Not meaningful in realtime mode
RubberBandStretcher::Impl::study: Cannot study after processing
WARNING: writable == 0 (consumed = 
libs/rubberband/src/StretcherImpl.cpp
RubberBandStretcher: WARNING: Actual study() duration differs from duration set by setExpectedInputDuration (
), using the latter for calculation
phase reset on silence (silent history == 
RubberBandStretcher::~RubberBandStretcher: joining (channel 
RubberBandStretcher::Impl::process: Cannot process again after final chunk
WARNING: reconfigure(): resampler construction required in RT mode
WARNING: reconfigure(): window allocation (size 
RubberBandStretcher::Impl::setPitchOption: Pitch option is not used in non-RT mode
RubberBandStretcher::Impl::setPitchScale: Cannot set ratio while studying or processing in non-RT mode
RubberBandStretcher::Impl::setTimeRatio: Cannot set ratio while studying or processing in non-RT mode
RubberBandStretcher::Impl::Impl: rate = 
RubberBandStretcher::Impl::Impl: Cannot specify OptionWindowLong and OptionWindowShort together; falling back to OptionWindowStandard
configure: effective ratio = 
configure: window size = 
, increment = 
 (approx output increment = 
configure: outbuf size = 
vector<bool>::_M_insert_aux
, samples = 
final || got == m_windowSize
silence found at 
 vs 
, diff = 
 threads created
Window area: 
; synthesis window area: 
) required in RT mode
space
, options = 
setting baseWindowSize to 
Going multithreaded...
void RubberBand::RubberBandStretcher::Impl::study(const float* const*, size_t, bool)
N10RubberBand10RingBufferIiLi1EEE
N10RubberBand6WindowIfEE
>y]?<
2@UUUUUU
N10RubberBand20PercussiveAudioCurveE
yE>AudioCurve::processDouble: WARNING: Using inefficient and lossy conversion for AudioCurve::process(float)
N10RubberBand10AudioCurveE
/proc/cpuinfo
processor
N10RubberBand18ConstantAudioCurveE
Resampler::process: libsamplerate error: 
Resampler::Resampler: using libsamplerate implementation
Resampler::Resampler: failed to create libsamplerate resampler: 
): No implementation available!
Resampler::Resampler(
N10RubberBand10Resamplers5D_SRCE
N10RubberBand9Resampler9ExceptionE
N10RubberBand13ResamplerImplE
ERROR: thread creation failed
ERROR: Deadlock on mutex 
ERROR: Mutex 
 not locked in unlock
 not owned by unlocking thread
N10RubberBand6ThreadE
N10RubberBand28SpectralDifferenceAudioCurveE
N10RubberBand23HighFrequencyAudioCurveE
t:p:d:RPFc:f:T:D:qhV
1.3.0-gpl
Rubber Band
   Usage: 
for more details.
"Crispness" levels:
Using crispness level: 
Mushy
Smooth
Balanced multitimbral mixture
Crisp monophonic instrumental
Unpitched solo percussion
" for writing: 
Using time ratio 
 and frequency ratio 
Pass 1: Studying...
Calculating profile...
Pass 2: Processing...
    
(completing) available = 
in: 
, out: 
, ratio: 
, ideal output: 
, error: 
elapsed time: 
 sec, in frames/sec: 
, out frames/sec: 
help
version
tempo
duration
pitch
frequency
crisp
crispness
debug
realtime
precise
formant
no-threads
no-transients
no-lamination
window-long
window-short
bl-transients
pitch-hq
quiet
An audio time-stretching and pitch-shifting library and utility program.
Copyright 2008 Chris Cannam.  Distributed under the GNU General Public License.
 [options] <infile.wav> <outfile.wav>
You must specify at least one of the following time and pitch ratio options.
  -t<X>, --time <X>       Stretch to X times original duration, or
  -T<X>, --tempo <X>      Change tempo by multiple X (same as --time 1/X), or
  -T<X>, --tempo <X>:<Y>  Change tempo from X to Y (same as --time X/Y), or
  -D<X>, --duration <X>   Stretch or squash to make output file X seconds long
  -p<X>, --pitch <X>      Raise pitch by X semitones, or
  -f<X>, --frequency <X>  Change frequency by multiple X
The following options provide a simple way to adjust the sound.  See below
  -c<N>, --crisp <N>      Crispness (N = 0,1,2,3,4,5); default 4 (see below)
  -F,    --formant        Enable formant preservation when pitch shifting
The remaining options fine-tune the processing mode and stretch algorithm.
These are mostly included for test purposes; the default settings and standard
crispness parameter are intended to provide the best sounding set of options
for most situations.  The default is to use none of these options.
  -P,    --precise        Aim for minimal time distortion (implied by -R)
  -R,    --realtime       Select realtime mode (implies -P --no-threads)
         --no-threads     No extra threads regardless of CPU and channel count
         --threads        Assume multi-CPU even if only one CPU is identified
         --no-transients  Disable phase resynchronisation at transients
         --bl-transients  Band-limit phase resync to extreme frequencies
         --no-lamination  Disable phase lamination
         --window-long    Use longer processing window (actual size may vary)
         --window-short   Use shorter processing window
         --pitch-hq       In RT mode, use a slower, higher quality pitch shift
  -d<N>, --debug <N>      Select debug level (N = 0,1,2,3); default 0, full 3
                          (N.B. debug level 3 includes audible ticks in output)
  -q,    --quiet          Suppress progress output
  -V,    --version        Show version number and exit
  -h,    --help           Show this help
  -c 0   equivalent to --no-transients --no-lamination --window-long
  -c 1   equivalent to --no-transients --no-lamination
  -c 2   equivalent to --no-transients
  -c 3   equivalent to --bl-transients
  -c 4   default processing options
  -c 5   equivalent to --no-lamination --window-short (may be good for drums)
WARNING: Both crispness option and transients, lamination or window options
         provided -- crispness will override these other options
Unpitched percussion with stable notes
ERROR: Failed to open input file "
ERROR: File lacks frame count or sample rate in header, cannot use --duration
ERROR: Failed to open output file "
UUUUUU
;*3$"
zPLR
librubberband.so.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.gcc_except_table
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rela.plt
.got.plt
.got
.text
.init_array
