tdlp
rX'wp
s	ZU
__gmon_start__
__cxa_finalize
_Jv_RegisterClasses
cherokee_plugin_server_info_init
cherokee_handler_server_info_add_headers
cherokee_connection_should_include_length
cherokee_buffer_add
stderr
__fprintf_chk
cherokee_buffer_add_va
cherokee_handler_server_info_step
cherokee_buffer_add_buffer
cherokee_dwriter_list_open
cherokee_dwriter_number
cherokee_dwriter_string
cherokee_buffer_clean
strtoll
cherokee_buffer_add_fsize
cherokee_dwriter_dict_close
cherokee_connection_info_free
cherokee_dwriter_dict_open
cherokee_dwriter_null
cherokee_dwriter_list_close
cherokee_buffer_mrproper
cherokee_version_add
cherokee_connection_info_list_server
cherokee_server_get_total_traffic
cherokee_dwriter_integer
cherokee_bogonow_now
cherokee_dwriter_bool
getuid
getgid
cherokee_server_get_conns_num
cherokee_server_get_active_conns
cherokee_server_get_reusable_conns
cherokee_avl_while
cherokee_dwriter_double
cherokee_iocache_get_mmaped_size
cherokee_handler_server_info_init
strstr
cherokee_buffer_ensure_size
cherokee_buffer_replace_string
cherokee_handler_server_info_free
cherokee_dwriter_mrproper
cherokee_handler_server_info_new
malloc
cherokee_server_info_info
cherokee_handler_init_base
cherokee_buffer_init
cherokee_dwriter_init
cherokee_dwriter_set_buffer
cherokee_handler_server_info_configure
cherokee_buffer_case_cmp
cherokee_module_props_init_base
cherokee_module_props_free_base
libcherokee-config.so.0
libcrypto.so.8
libdl.so.2
libc.so.6
libplugin_server_info.so
GLIBC_2.1.3
GLIBC_2.0
GLIBC_2.3.4
l[^_]
[^_]
[^_]
L[^_]
Content-Length: %d
Content-Type: image/png
handler_server_info.c
Content-Type: text/html
ip_remote
phase
request
handler
percentage
tx_formatted
rx_formatted
size
icon
version
traffic
uptime
%d Minute%s, %d Seconds
seconds
config
threads
ipv6
chroot
number
active
reusable
modules
loggers
handlers
encoders
validators
generic
balancers
rules
cryptors
icons
default
directory
parent
iocache
file_size_max
file_size_min
file_size_max_formatted
file_size_min_formatted
lasting_mmap
lasting_stat
fetches
hits
misses
mmaped
mmaped_formatted
detailed_connections
/logo.gif
/info
/php
/ruby
{cherokee_name}
{request}
n != NULL
type
normal
just_about
connection_details
server_info
Content-Type: application/json
Content-Type: application/x-python
Content-Type: application/x-php
Content-Type: application/x-ruby
file %s:%d (%s): this should not happen
%s:%d: Unknown module type (%d)
%d Day%s, %d Hour%s, %d Minute%s, %d Seconds
%d Hour%s, %d Minute%s, %d Seconds
(EPA
EE)>Jv
R6e1@
3gfn
 =!.F
k=^|c
i<ex
VIPR
]=gV
#uoX_
]/!i
.	]g
s9?OJhz
=Ck?
;y>6{|
)QOI
vQf?
|-*7
_"Ao
		O^
XZu&
[u-&90
j;:{N
-L>.
YuYU
^3K\}#V
~Q-F
:BR;}
v5*$
Z\*%
;kk%
@&6	-FHVBK
XQVB
zR[IJL
<Y=6y
jB)YW
&$Cg#
v92l
oHJv
EUXz^?)
[iWN`b
o 3g
`w$23
428S2
d{AL
2	\FY
$%%E
fGRE
MHHP
pzQI
Q#*{
Z|7a 
$l$>
>K/[g
2.)I
.\(cQ{d
e1]8
-zJN1c$
a"2p
:J15
mF%Zv:
^}Qmq
(G	&
~gYLbH
z*=99Y
Tv~\\
eRbA<T:
7a!]
N'Z6:n
QYl%(
 }\]]o
ByO#
x`B\
E%L)`<X
}z\\
|qm2
}p5'
/fV~m
BCT\
H#_v
3TB4
touu
l[/~
K(5	fvr
%z])
LbLi6
J>	V
nO D|RS
@k.P
&j/\
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "DTD/xhtml1-transitional.dtd">
<html><head>
<title>Cherokee Web Server Info</title>
<style type="text/css">
body,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,code,p,th,td { margin:0;padding:0; }
table { border-collapse:collapse;border-spacing:0; }
img { border:0; }
html { background-color: #cfd9e8; }
body { min-width: 640px; font-family: helvetica, arial, sans-serif; font-size: small; 
       text-align: center; background-color: #cfd9e8; }
a { color: #2d5e9a; }
a:hover { color: #164987; }
#container { background: #fff url({request}/logo.gif) 32px 16px no-repeat; 
              border: 1px solid #bacce2; width: 640px; min-width: 640px; 
              margin: 32px auto; text-align: left; }
#container-inner { padding: 32px 32px 32px 128px; }
h1 { color: #c00; font-weight: normal; font-size: 200%; margin-bottom: 0.5em; }
h2 { color: #204a87; font-weight: bold; border-bottom: 2px solid #204a87; font-size: 120%; }
dl { margin-bottom: 24px; }
dt { width: 232px; float: left; clear: left; margin: 0; padding: 2px; height: 20px; 
     text-align: right; border-bottom: 1px solid #bacce2; }
dt:after { content: ":"; }
dd { width: 232px; margin: 0 0 0 232px; padding: 2px 8px; height: 20px; 
      border-bottom: 1px solid #bacce2; color: #555; }
#otherways { padding: 8px; border: 1px solid #bacce2; 
             background-color: #eff6ff; margin-bottom: 24px; }
#license { padding: 16px; margin-bottom: 24px; }
#license p { margin-bottom: 1em; }
</style>
<title>Cherokee Web Server Info</title></head>
<body><div id="container"><div id="container-inner">
<h1>{cherokee_name}</h1>
<div id="information"></div>
<div id="otherways">
<p>The same information can also be fetched properly encoded to be consumed from: 
<a href="{request}/info/py">Python</a>, 
<a href="{request}/info/ruby">Ruby</a>, 
<a href="{request}/info/js">JavaScript</a> and 
<a href="{request}/info/php">PHP</a>.</div>
<script type="text/javascript">
function ajaxObject (url) {
   var that = this;
   var updating = false;
   this.callback = function(txt) {}
   this.update = function(passData) {
      if (updating == true)
		    return false;
      updating = true;
      var AJAX = null;
      if (window.XMLHttpRequest) {
         AJAX = new XMLHttpRequest();
      } else {
         AJAX = new ActiveXObject('Microsoft.XMLHTTP');
      }
      if (AJAX == null) {
         alert ('Your browser does not support AJAX.');
         return false
      } else {
         AJAX.onreadystatechange = function() {
            if (AJAX.readyState == 4 || AJAX.readyState == 'complete') {
               delete AJAX;
               updating = false;
               that.callback(AJAX.responseText);
            }
         }
         AJAX.open ('GET', url, true);
         AJAX.send (null);
         return true;
      }
   }
} /* END: ajaxObject */
var info = {
  config: {
    title: 'Configuration',
    items: { 
      threads: 'Thread number',
      ipv6: 'IPv6',
      tls: 'SSL/TLS',
      chroot: 'Chroot jail',
      UID: 'UID',
      GID: 'GID',
      OS: 'Operating System'
    }
  },
  connections: {
    title: 'Current Connections',
    items: {
      number: 'Number',
      active: 'Active', 
      reusable: 'Reusable'
    }
  },
  modules: {
    title: 'Modules',
    items: {
      loggers: 'Loggers',
      handlers: 'Handlers',
      encoders: 'Encoders',
      validators: 'Validators',
      generic: 'Generic', 
      balancers: 'Balancers', 
      rules: 'Rules',
      cryptors: 'Cryptors'
    }
  },
  icons: {
    title: 'Icons',
    items: {
      'default': 'Default',
      directory: 'Directory',
      parent: 'Parent'
    }
  },
  iocache: {
    title: 'I/O cache',
    items: {
      file_size_max_formatted: 'File Size: Max',
      file_size_min_formatted: 'File Size: Min',
      lasting_stat: 'Lasting: File information',
      lasting_mmap: 'Lasting: File mapping', 
      size_max: 'Cache Max Size',
      fetches: 'Fetches',
      hits: 'Hits',
      misses: 'Misses', 
      mmapped_formatted: 'Total Mapped' 
    }
tmp = new ajaxObject ('{request}/info/js');
tmp.callback = function(txt) {
  var data = null;
  var div = document.getElementById('information');
  eval('data = ' + txt);
  for (var section in info) {
    if (data[section] === undefined) continue;
    if (!document.getElementById(section)) {
      h2 = document.createElement('h2');
      h2.setAttribute('id', section);
      h2.appendChild(document.createTextNode(info[section]['title']));
      div.appendChild(h2);
    }
    if (!(dl = document.getElementById('dl_' + section))) {
      dl = document.createElement('dl');
      dl.setAttribute('id', 'dl_' + section);
      div.appendChild(dl);
    } 
    for (var item in info[section]['items']) {
      if (data[section][item] === undefined) continue;
      if (!document.getElementById('dt_' + section + '_' + item)) { 
        dt = document.createElement('dt'); 
        dt.setAttribute('id', 'dt_' + section + '_' + item);
        dt.appendChild(document.createTextNode(info[section]['items'][item]));
        dl.appendChild(dt);
      }
      if (dd = document.getElementById('dd_' + section + '_' + item)) { 
        dd.innerHTML = data[section][item];
      } else {
        dd = document.createElement('dd'); 
        dd.setAttribute('id', 'dd_' + section + '_' + item);
        dd.appendChild(document.createTextNode(data[section][item]));
        dl.appendChild(dd);
      }
    }
tmp.update(); 
setInterval('tmp.update()', 30000);
</script>
<h2>Cherokee License</h2>
<div id="license"><p>Copyright (C) 2001 - 2009 <a href="http://www.alobbs.com/">Alvaro Lopez Ortega</a> &lt;alvaro@alobbs.com&gt;</p>
<p>This program is free software; you can redistribute it and/or
modify it under the terms of version 2 of the GNU General Public
License as published by the Free Software Foundation.</p>
<p>This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.</p>
<p>You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA</p></div>
</div></div></body></html>
file %s: line %d (%s): assertion `%s' failed
ERROR: Handler server_info: Unknown key value: '%s'
IHDR
sRGB
	pHYs
bKGD
IDATx
`KI,$
=Cjm
so]<
 VnL
SC'1
cLg|
d2Ia
[$77W
0UFM
D_:f
|///E
xwtt
NNNw
_/oo
Odff
X|Pi
7k?=
IEND
cherokee_handler_server_info_add_headers
cherokee_handler_server_info_new
cherokee_handler_server_info_configure
libplugin_server_info.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
