__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
__ao2_cleanup_debug
__ao2_unlink
__ao2_ref
free
stasis_app_control_queue_control
ast_filedelete
strcmp
stasis_message_data
ast_json_object_get
ast_json_string_get
ast_json_deep_copy
ast_json_pack
strcasecmp
__ast_string_field_free_memory
stasis_message_type_create
__ao2_container_alloc_hash
__ast_register_file
__ast_unregister_file
stasis_app_recording_snapshot_type
stasis_log_bad_type_access
stasis_app_recording_options_create
__ao2_alloc
__ast_string_field_init
strlen
memcpy
__ast_string_field_release_active
__ast_string_field_empty
__ast_string_field_ptr_grow
__ast_string_field_alloc_space
_Unwind_Resume
__gcc_personality_v0
stasis_app_recording_termination_parse
stasis_app_recording_if_exists_parse
stasis_app_control_record
__errno_location
option_debug
ast_options
ast_config_AST_RECORDING_DIR
_ast_asprintf
strrchr
ast_safe_mkdir
ast_fileexists
__ao2_lock
__ao2_find
__ao2_link
__ao2_unlock
stasis_app_control_register_add_rule
stasis_app_send_command_async
ast_debug_get_by_module
stasis_app_control_get_channel_id
ast_log
stasis_app_recording_get_state
stasis_app_recording_get_name
stasis_app_recording_find_by_name
stasis_app_recording_to_json
ast_json_ref
ast_json_unref
ast_json_integer_create
ast_json_object_set
ast_channel_blob_create_from_cache
stasis_app_control_publish
ast_json_string_create
stasis_app_get_bridge
ast_auto_answer
ast_play_and_record_full
stasis_app_control_unregister_add_rule
ast_channel_uniqueid
__stack_chk_fail
stasis_app_recording_operation
ast_module_register
ast_module_unregister
ast_get_format_for_file_ext
strncmp
stasis_app_stored_recording_get_file
stasis_app_stored_recording_get_filename
stasis_app_stored_recording_get_extension
stasis_app_stored_recording_find_all
__ao2_container_alloc_rbtree
ast_file_read_dirs
stasis_app_stored_recording_find_by_name
strdup
realpath
__ast_string_field_ptr_build
__xstat
stasis_app_stored_recording_copy
ast_verb_sys_level
ast_filecopy
__ast_verbose
stasis_app_stored_recording_delete
stasis_app_stored_recording_to_json
libgcc_s.so.1
libpthread.so.0
libc.so.6
GCC_3.0
GCC_3.3.1
GLIBC_2.2.5
GLIBC_2.14
GLIBC_2.3
GLIBC_2.4
a_&	
5RM 
%TM 
%RM 
%JM 
%BM 
%:M 
%2M 
%*M 
%"M 
%zL 
%rL 
%jL 
%bL 
%ZL 
%RL 
%JL 
%BL 
%:L 
%2L 
%*L 
%"L 
%zK 
%rK 
%jK 
%bK 
%ZK 
%RK 
%JK 
%BK 
%:K 
%2K 
%*K 
%bK 
=IK 
=9L 
=WJ 
=uK 
=GK 
=qG 
AWAVAUATI
[A\A]A^A_]
t^SH
AWAVAUATI
AZA[
AXAYH
=mA 
=@A 
5O@ 
[A\A]A^A_]
ykHc{ 
[A^]
+{ Hc
Hc{ 
AUATL
[]A\A]H
AWAVAUATI
HLDi
[A\A]A^A_]
5=8 
[]A\
AVS1
[A^]
AWAVAUATI
([]A\A]A^A_
ATUI
[]A\
Y[]A\
ZYt"H
AWAVAUATI
_AXM
dH34%(
[A\A]A^A_]
AWAVAUATI
AYAZ
T$HH
[A\A]A^A_]
res_stasis_recording.c
RecordingStarted
RecordingFinished
RecordingFailed
state
done
canceled
failed
type
{s: s, s: o}
none
fail
overwrite
append
res_stasis_recording
%s/%s
((recordings))
queued
paused
format
name
{s: s, s: s, s: s, s: s}
target_uri
talking_duration
silence_duration
((recording))
cause
#*0123456789abcd
%s: Failed to answer
Failed to answer channel
%s: Recording complete
Invalid recording state %u
res_stasis
stasis_app_recording_snapshot_type
%s: Sending record(%s.%s) command
Recording file '%s' already exists and ifExists option is failure.
Recording %s already in progress
Cannot record channel while in bridge
Cannot record channel while in bridge
Invalid recording operation %u
Unhandled operation during recording: %u
Stasis application recording support
This paragraph is copyright (c) 2006 by Digium, Inc. In order for your module to load, it must return this key via a function called "key".  Any code which includes this paragraph must be licensed under the GNU General Public License version 2 or later (at your option).  In addition to Digium's general reservations of rights, Digium expressly reserves the right to allow other parties to license this paragraph under different terms. Any use of Digium, Inc. trademarks or logos (including "Asterisk" or "Digium") without express written permission of Digium, Inc. is prohibited.
load_module
unload_module
_dtor_lock
stasis_app_recording_operation
stasis_app_recording_find_by_name
_dtor_old_recording
_dtor_lock
recording_dtor
_dtor_lock
_dtor_message
recording_set_state
record_file
recording_cleanup
stasis_app_control_record
_dtor_options
recording_options_dtor
stasis_app_recording_options_create
Recording %s: unrecognized format %s
Memory Allocation Failure in function %s at line %d of %s
/builddir/build/BUILD/asterisk-14.5.0/include/asterisk/utils.h
Attempt to access invalid recording %s
Copying recording %s to %s (format %s)
stasis_recording/stored.c
{ s: s, s: s }
stasis_app_stored_recording_copy
_dtor_recording
handle_find_recording
_ast_strdup
split_path
stasis_app_stored_recording_find_by_name
_dtor_recording
stored_recording_dtor
recording_alloc
is_recording
handle_scan_file
stasis_app_stored_recording_find_all
;*3$"
zPLR
z. d.
68b329da9893e34099c7d8ad5cb9c940
res_stasis_recording.so-14.5.0-4.fc27.x86_64.debug
7zXZ
<f,	
L)WoX
yfMY
D`>W
&\`O
F*=Q
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.data.rel.ro
.dynamic
.data
.bss
.gnu_debuglink
.gnu_debugdata
