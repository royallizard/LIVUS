i82?
U9.o
v_/L
yuoj&-V1E
(WEJ
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
vcard_make_response
vcard_get_current_applet_private
vcard_response_new_bytes
g_realloc
memcpy
g_free
vcard_emul_rsa_op
vcard_response_new
__assert_fail
vcard_emul_delete_key
cac_card_init
vcard_set_type
g_malloc0
g_malloc
vcard_new_applet
vcard_set_applet_private
vcard_add_applet
__stack_chk_fail
vcard_response_set_status_bytes
vcard_response_new_data
vcard_response_new_status_bytes
vcard_get_buffer_response
vcard_set_buffer_response
vcard_buffer_response_delete
vcard_buffer_response_new
vcard_response_delete
g_warn_message
vcard_apdu_delete
vcard_apdu_new
g_memdup
vcard_process_apdu
vcard_process_applet_apdu
vcard_get_type
vcard_emul_get_login_count
vcard_find_applet
vcard_select_applet
vcard_applet_get_aid
vcard_emul_login
vevent_new
vreader_reference
vcard_reference
vevent_delete
vreader_free
vcard_free
vevent_queue_init
vevent_queue_vevent
g_mutex_lock
g_cond_signal
g_mutex_unlock
vevent_wait_next_vevent
g_cond_wait
vevent_get_next_vevent
vcard_reset
vcard_emul_reset
vcard_delete_applet
vcard_new
vcard_get_atr
vcard_emul_get_atr
vcard_set_atr_func
memcmp
vcard_get_private
PK11_FreeSlot
g_malloc_n
PK11_ReferenceSlot
CERT_DupCertificate
PK11_FindKeyByDERCert
vreader_get_private
vcard_emul_type_select
vcard_init
PK11_FindGenericObjects
PK11_GetNextGenericObject
PK11_ReadRawAttribute
CERT_GetDefaultCertDB
CERT_NewTempCertificate
SECITEM_FreeItem
CERT_DestroyCertificate
g_strdup
PORT_Strdup
SECMOD_WaitForAnyTokenEvent
vreader_get_reader_list
vreader_list_get_first
vreader_list_get_next
vreader_list_get_reader
vreader_list_delete
PK11_IsPresent
PORT_GetError
PK11_GetSlotName
vreader_new
vreader_add_reader
vreader_insert_card
PK11_GetSlotSeries
__ctype_b_loc
SECKEY_DestroyPrivateKey
PK11_SignatureLen
memset
PK11_FindPrivateKeyFromCert
PK11_DoesMechanism
PK11_PubDecryptRaw
PK11_Sign
PK11_Authenticate
PK11_IsLoggedIn
PK11_Logout
vcard_emul_force_card_remove
vreader_card_is_present
vcard_emul_force_card_insert
vcard_emul_init
vreader_init
NSS_Init
PK11_SetPasswordFunc
PK11_FindSlotByName
PK11_FindCertFromNickname
SECMOD_GetDefaultModuleListLock
SECMOD_GetDefaultModuleList
SECMOD_GetReadLock
PK11_IsRemovable
PK11_IsHW
SECMOD_ReleaseReadLock
SECMOD_GetInternalModule
PR_CreateThread
PORT_SetError
stderr
fwrite
vcard_emul_replay_insertion_events
vreader_queue_card_event
vcard_emul_options
strpbrk
__memcpy_chk
vcard_emul_type_from_string
g_realloc_n
g_strndup
__fprintf_chk
vcard_emul_usage
strcasecmp
strlen
g_mutex_init
g_mutex_clear
vreader_get_id
vreader_set_id
vreader_get_name
vreader_power_on
vreader_power_off
vreader_xfr_bytes
g_log
vreader_get_reader_by_id
vreader_get_reader_by_name
strcmp
vreader_remove_reader
libglib-2.0.so.0
libnss3.so
libnspr4.so
libc.so.6
libcacard.so.0
GLIBC_2.3
GLIBC_2.14
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.2.5
NSS_3.9.3
NSS_3.5
NSS_3.12
NSS_3.9.2
NSS_3.2
NSS_3.3
%zz 
%rz 
%jz 
%bz 
%Zz 
%Rz 
%Jz 
%Bz 
%:z 
%2z 
%*z 
%"z 
%zy 
%ry 
%jy 
%by 
%Zy 
%Ry 
%Jy 
%By 
%:y 
%2y 
%*y 
%"y 
%zx 
%rx 
%jx 
%bx 
%Zx 
%Rx 
%Jx 
%Bx 
%:x 
%2x 
%*x 
%"x 
%zw 
%rw 
%jw 
%bw 
%Zw 
%Rw 
%Jw 
%Bw 
%:w 
%2w 
%*w 
%:w 
=Qw 
=2k 
<VtHv&<
AWAVAUATI
v3<R
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
Hc}(H
[]A\A]A^A_
<Rt(<Xu
AWAVH
AUATUSH
D$81
D$(H
D$1H
d$7N
L$8dH3
H[]A\A]A^A_
|$ H
L9d$(
\$ H
AUATI
[]A\A]
[]A\
AUATI
[]A\A]
t%HcH
<ATUH
[]A\
t[r9
AUATA
[]A\A]
[]A\A]
[]A\A]
AVAUATUI
 []A\A]A^
tCr+
tC< 
AUATA
[]A\A]
t#SH
=yb 
=ub 
=7b 
ATUI
[]A\
0tMH
AVAUI
ATUI
[]A\A]A^
t+SH
ATUI
k0[]A\
uVUSH
AUATUSH
t-Lc
9k u
[]A\A]
ATUS
[]A\
t+SH
AUATI
USHc
[]A\A]
ATUH
[]A\
AWAVE
AUATI
t>AWAV
[]A\A]A^A_
AWAVAUATUSH
D$H1
T$(H
t$ H
T$(L
L$(H
T$ E
t$HdH34%(
X[]A\A]A^A_
AUATI
[]A\A]
AWAVL
AUATI
L; u
[]A\A]A^A_
t(~6
ATUI
t	[]A\
t9SH
AWAVAUATUSH
[]A\A]A^A_
T$@H
t$ Hc
\$PL
l$(H
T$0L
AVAUI
ATULc
x1Hc
u	H9
[]A\A]A^
5|Q 
[]A\
59Q 
AWAVAUATUSH
D$X1
L$XdH3
h[]A\A]A^A_
D$ H
D$HH
D$(H
D$@H
|$0H
T$ H
|$@H
T$@Ic
T$PL
|$@taL
L$PE
T$HH
A9FP
ATUS
AWAVI
AUATUSH
\$0M)
H+L$
\$,H
t$ H
<)t,H
t!<,A
|$ H
H9l$
[]A\A]A^A_
AVAUI
ATUH
D$	VCARf
DEFAULT
{	Ic
 []A\A]A^
AUATI
[]A\A]
t{UH
o SH
ATUI
[]A\
AWAVI
AUATM
([]A\A]A^A_
ATUI
AUATH
[]A\A]
t{US
=K: 
=F: 
[]A\
=p9 
=,9 
=$9 
t(H;h
=x8 
ATUH
o SH
src/cac.c
applet_private
pki_applet->cert != NULL
cac_applet_pki_process_apdu
cac_applet_pki_reset
src/card_7816.c
libcacard
*response != NULL
!"VCARD_DIRECT: applet failure"
vcard7816_vm_process_apdu
vcard_process_apdu
vcard_process_apdu
vcard_response_delete
src/event.c
vevent_queue_tail
vevent_queue_vevent
src/vcard.c
channel < MAX_CHANNEL
vcard_select_applet
src/vcard_emul_nss.c
/etc/pki/nssdb
E-Gate 0 0
soft=
use_hw=
hw_type=
hw_params=
Error: invalid db argument.
nssemul
known bad coolkey version - see https://bugzilla.redhat.com/show_bug.cgi?id=802435
Error: invalid soft specification.
Error: invalid smartcard type '%s'.
Error: missing cert specification.
Error: you must quote the file path.
Error: Unknown smartcard specification.
emul args: comma separated list of the following arguments
 db={nss_database}               (default sql:/etc/pki/nssdb)
 use_hw=[yes|no]                 (default yes)
 hw_type={card_type_to_emulate}  (default CAC)
 hw_param={param_for_card}       (default "")
 nssemul                         (alias for use_hw=yes, hw_type=CAC)
 soft=({slot_name},{vreader_name},{card_type_to_emulate},{params_for_card},
       {cert1},{cert2},{cert3}    (default none)
  {nss_database}          The location of the NSS cert & key database
  {card_type_to_emulate}  What card interface to present to the guest
  {param_for_card}        Card interface specific parameters
  {slot_name}             NSS slot that contains the certs
  {vreader_name}          Virtual reader name to present to the guest
  {certN}                 Nickname of the certificate n on the virtual card
These parameters come as a single string separated by blanks or newlines.
Unless use_hw is set to no, all tokens that look like removable hardware
tokens will be presented to the guest using the emulator specified by
hw_type, and parameters of hw_param.
If more one or more soft= parameters are specified, these readers will be
presented to the guest
vcard_emul_map_error
src/vcard_emul_type.c
vcard_init
manage channel
external authenticate
get challenge
internal authenticate
erase binary
read binary
write binary
update binary
read record
write record
update record
append record
envelope
put data
get data
select file
verify
get response
get properties
get acr
read buffer
update buffer
sign decrypt
get certificate
unknown
src/vreader.c
file %s: line %d (%s): should not be reached
%s: CLS=0x%x,INS=0x%x,P1=0x%x,P2=0x%x,Lc=%d,Le=%d %s
%s: status=%d sw1=0x%x sw2=0x%x len=%d (total=%d)
card_status == VCARD_DONE && response
apdu_ins_to_string
vreader_xfr_bytes
vreader_xfr_bytes
;*3$"
libcacard.so.0.0.0-2.5.3-3.fc27.x86_64.debug
7zXZ
@<3_
-j>(
E$1c
c&_ ]P
u#`=J
dW(Q
b=hl
fec>k
@3!lJd
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.data.rel.ro
.dynamic
.data
.bss
.gnu_debuglink
.gnu_debugdata
