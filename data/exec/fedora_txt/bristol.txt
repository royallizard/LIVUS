td$L
/lib/ld-linux.so.2
libbristolmidi.so.0
__gmon_start__
_Jv_RegisterClasses
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
bristolGetMap
bristolMidiSendMsg
bristolMidiTerminate
bristolOpenStdio
bristolMidiPrint
checkcallbacks
_fini
bristolMidiPrintGM2
bristolGetFreqMap
_init
bristolMidiRawWrite
bristolMidiOpen
bristolMidiToGM2
bristolMidiOption
bristolMidiValueMappingTable
getBristolCache
bristolMidiClose
midiCheck
bristolParseScala
bristolMidiRegisterForwarder
jack_port_get_buffer
jackMidiRoutine
jack_client_close
jack_client_open
jack_set_process_callback
jack_on_shutdown
jack_port_register
bristolJackSetMidiHandle
jack_activate
libjack.so.0
jack_ringbuffer_read_advance
jack_ringbuffer_write_advance
jack_session_reply
jack_ringbuffer_peek
jack_ringbuffer_get_write_vector
jack_ringbuffer_get_read_vector
jack_port_name
jack_ringbuffer_create
jack_ringbuffer_free
jack_set_session_callback
jack_ringbuffer_mlock
jack_get_buffer_size
jack_port_unregister
jack_session_event_free
jack_ringbuffer_write
jack_connect
jack_ringbuffer_write_space
jack_deactivate
jack_get_ports
jack_ringbuffer_read
jack_ringbuffer_read_space
jack_ringbuffer_reset
jack_get_sample_rate
libasound.so.2
snd_pcm_hw_params_any
snd_pcm_status_sizeof
snd_pcm_hw_params_set_access
snd_pcm_sw_params_current
snd_pcm_sw_params_set_start_threshold
snd_pcm_hw_params_set_buffer_size
snd_pcm_hw_params_set_channels
snd_pcm_close
snd_pcm_poll_descriptors_count
snd_pcm_hw_params_set_format
snd_pcm_sw_params_sizeof
snd_pcm_writei
snd_pcm_status_dump
snd_pcm_poll_descriptors
snd_pcm_hw_params_set_periods
snd_pcm_hw_params_set_rate_near
snd_pcm_start
snd_pcm_drain
snd_pcm_sw_params_set_avail_min
snd_pcm_hw_params_set_period_size
snd_pcm_prepare
snd_pcm_sw_params_set_stop_threshold
snd_strerror
snd_pcm_open
snd_pcm_drop
snd_pcm_hw_params_get_period_size
snd_pcm_hw_free
snd_pcm_hw_params_sizeof
snd_pcm_dump
snd_pcm_status
snd_pcm_sw_params
snd_pcm_readi
snd_pcm_sw_params_set_silence_threshold
snd_pcm_hw_params
snd_output_stdio_attach
libm.so.6
tanhf
__powf_finite
powf
__pow_finite
expf
libpthread.so.0
pthread_create
pthread_cancel
pthread_join
pthread_setschedparam
fcntl
pthread_getschedparam
pthread_exit
wait
libc.so.6
_IO_stdin_used
strcpy
__printf_chk
fopen
__strdup
__isoc99_sscanf
signal
puts
fork
sched_getparam
putchar
strtod
strtol
fgets
calloc
strlen
memset
strstr
__fprintf_chk
stdout
fclose
rand
malloc
sched_setscheduler
getenv
__open_2
stderr
ioctl
__snprintf_chk
__fxstat
usleep
rindex
__cxa_finalize
setsid
__sprintf_chk
memmove
strcmp
__libc_start_main
snprintf
__stack_chk_fail
_edata
__bss_start
_end
GLIBC_2.0
GLIBC_2.15
ALSA_0.9.0rc4
ALSA_0.9
GLIBC_2.1
GLIBC_2.4
GLIBC_2.7
GLIBC_2.1.3
GLIBC_2.3.4
loca
lhosf
baLS
:-t-
u	9u
baLS
[^_]
tFU1
D$,@
UWVS
d$,[^_]
PCG1
UWVS
d$L1
[^_]
UWVS
d$,[^_]
[^_]
UWVS
d$,[^_]
9T$ 
d$,1
[^_]
UWVS
[^_]
UWVS
D$(td
|$<1
9D$$
d$l[1
UWVS
d$,[^_]
UWVS
D$|1
\$|e3
[^_]
UWVS
d$,1
[^_]
UWVS
d$,1
[^_]
d$ [^_
d$,[^_]
gfff
d$,[^_]
$333@
$ff&@
$fff?
$333?
d$01
UWVS
D$49E4
[^_]
UWVS
;}4}S
;}4|
d$<[^_]
UWVS
;u8}C
d$<[^_]
UWVS
d$,[^_]
UWVS
l$`e
D$<1
D$<e3
d$L[^_]
d$<[
D$h1
|$,1
d$L1
[^_]
d$L1
[^_]
d$L1
[^_]
t$0<c
D$<tX
<~tm
d$$1
d$$1
UWVS
d$<[1
9T$(u
S~V1
UWVS
d$,1
[^_]
d$,1
[^_]
d$,1
[^_]
d$,1
[^_]
d$,[1
d$,1
[^_]
d$,[1
d$,[1
d$,[1
d$,[1
d$,[1
d$,[1
d$,[1
d$,[1
d$,1
[^_]
d$,[1
d$,[1
d$,[1
d$,[1
d$,[1
d$,[1
d$,[1
d$,[1
d$,[1
d$,[1
d$,[1
d$,[1
UWVS
d$,1
[^_]
UWVS
d$<1
[^_]
D$(i
|$,1
D$ i
L$,tU
l$(i
D$8t4
t$(i
t$ 1
|$0i
t$(i
t$ 1
t$(i
t$ 1
t$ i
iD$(
iD$(
iT$(
iT$(
d$L1
[^_]
iD$(
iD$(
?iD$(
t$ iD$(
?iD$(
?iD$(
?iD$(
?iD$(
iD$(
iD$(
?iD$(
UWVS
[^_]
D$4~i
iT$4
t$(9
+T$L
D$tiGL
D$@f
9D$4
|$4~
D$<t
d$(1
UWVS
[^_]
UWVS
d$<1
[^_]
d$ [1
|$4{
D$<t|<c
d$$1
d$$[1
d$$1
d$$1
d$01
UWVS
d$<[^_]
UWVS
d$|1
[^_]
d$|1
[^_]
d$|1
[^_]
d$|1
[^_]
d$|1
[^_]
UWVS
d$,[1
UWVS
d$,[1
UWVS
UWVS
[^_]
UWVS
D$`1
D$l~M
|$,3
d$L1
[^_]
D$<t7
|$,3
d$01
D$(w{
d$41
d$4[1
d$ [1
~uA<
d$(1
d$(1
d$(1
UWVS
d$<1
[^_]
UWVS
d$<1
[^_]
UWVS
d$,1
[^_]
d$ 1
d$ [1
d$ 1
d$ [1
T$8<d
D$<t0<~t
d$(1
@$X94<
@dff&?
@D)\
@dff&?
@dff&?
@$B`e<
@dff&?
@dff&?
UWVS
d$,[1
UWVS
d$<1
[^_]
D$,~L
d$<1
[^_]
d$ [1
d$ [^_
t$0<d
D$<t[<~t
d$$1
d$$[1
UWVS
d$<1
[^_]
d$ 1
UWVS
T$,t
d$L1
[^_]
d$ [1
d$$1
t$0<
D$<ts<	t?<
d$$1
d$$1
d$$1
d$$1
d$$[1
UWVS
d$L1
[^_]
L$(1
9|$$~,
d$L1
[^_]
d$ [1
|$4~
D$<t
d$$1
UWVS
d$<1
[^_]
UWVS
d$<1
[^_]
d$ 1
|$4~
D$<t
d$$1
UWVS
D$(t
d$<1
[^_]
UWVS
D$,	G
d$<1
[^_]
d$ 1
d$$1
d$$[1
UWVS
l$<t
d$L1
[^_]
UWVS
d$<1
[^_]
d$ [1
|$4~
D$<t
d$ 1
\$t#
L$D#
\$H	
d$\1
[^_]
L$(;J0
D$4 
UWVS
d$<1
[^_]
l$,t
9T$$
9T$(
9T$,
L$(9
9T$$
9T$(
9T$,u 
	l$ 
9T$$
9T$(
9T$,
L$$9
9D$$
+l$$
9T$$
d$ 1
UWVS
d$,1
[^_]
UWVS
|$4~
D$<t
d$(1
D$0up
UWVS
d$<1
[^_]
UWVS
D$(1
d$<1
[^_]
d$ 1
UWVS
T$(<d
D$,t=
<~t'
d$L1
[^_]
\$(f
333?
UWVS
d$,[1
UWVS
d$<1
[^_]
d$<1
[^_]
l$T~P
l$T~U
d$<1
[^_]
d$ [1
UWVS
d$<1
[^_]
d$<1
[^_]
UWVS
d$<1
[^_]
UWVS
d$<1
[^_]
d$<1
[^_]
<ct<<~t
UWVS
d$,1
[^_]
d$,1
[^_]
d$ 1
d$ [1
d$ 1
d$ [1
UWVS
[^_]
UWVS
D$$e
[^_]
UWVS
[^_]
tXr&<
d$D[1
d$$1
UWVS
d$,[^_]
\$ =
UWVS
\$Pf
d$|[1
\$Pf
\$Pf
\$Pf
\$Pf
\$Pf
UWVS
[^_]
UWVS
[^_]
D$<<
d$$1
L$41
d$$[1
d$$[1
d$$[1
d$$[1
d$$[1
d$$[1
UWVS
d$\[^_]
UWVS
|$(~H
d$l1
[^_]
d$$[^
d$$[^
d$$[^
d$$[^
UWVS
d$,[^_]
d$$1
d$$[1
d$$1
d$$1
d$$[1
d$$1
D$ u{
D$ tl
UWVS
\$<1
D$H1
l$ 1
\$@1
UWVS
d$,[^_]
d$ 1
d$ 1
d$ [1
d$ 1
d$ [1
d$ [1
d$ [1
D$ u{
D$ tl
\$<1
d$|1
[^_]
d$|[1
\$01
UWVS
d$,[^_]
@D~F1
UWVS
[^_]
UWVS
+T$09
l$<1
;T$8
;T$8
d$\[1
UWVS
d$<[^_]
D$Lf
d$,1
[^_]
d$,[1
d$,[1
d$,[1
d$,[1
UWVS
d$,[^_]
d$T1
;D$,
d$l1
[^_]
d$ [^_
d$ [^_
T$$<
BDfff?
BD33s?
UWVS
kL$8<
[^_]
t]rC<
UWVS
[^_]
d$,[^_]
t$D<
D$Lw7
d$41
d$41
d$4[1
d$4[1
d$4[1
d$41
UWVS
d$\[1
UWVS
d$,[^_]
UWVS
d$l[1
UWVS
d$,[^_]
UWVS
d$,1
[^_]
UWVS
d$,1
[^_]
UWVS
d$,1
[^_]
d$,1
[^_]
d$<1
[^_]
D$,v<
d$ 1
UWVS
d$<[^_]
UWVS
L$.1
T$(1
[^_]
UWVS
D$0e
D$<1
[^_]
UWVS
L$,tJ
9L$,}
9L$,~
d$<[
d$<[^_]
d$<[
d$<1
[^_]
UWVS
d$<[^_]
UWVS
9V$ta
D$(t-
d$<1
[^_]
FA@u2
UWVS
T$#;EL
d$L1
[^_]
d$L[1
d$<1
[^_]
d$<[^_]
GA@u$
t_~5
t$pe
D$\1
D$7ti
D$\e3
d$`[^_
D$8A
t$pe
D$\1
D$7ti
D$\e3
d$`[^_
D$8A
UWVS
D$<1
[^_]
UWVS
T$ tu
D$$tg
T$@1
9t$ 
9t$ 
d$l[1
UWVS
[^_]
tUr3<
[^_]
UWVS
[^_]
\$@i
\$@i
\$@i
t$<1
;t$4
;\$8
d$L1
[^_]
UWVS
[^_]
UWVS
[^_]
;L$,
;L$,
d$T[^_]
Fd333?
UWVS
D$x;L$$
D$<t^
;L$$
9D$$
T$@~
d$\[1
;L$$
L$$9
UWVS
d$,[^_]
d$D1
[^_]
UWVS
d$$1
[^_]
UWVS
[^_]
tL[^_
[^_]
d$,1
[^_]
UWVS
L$|1
T$P9
|$|e3=
[^_]
UWVS
d$<[^_]
[^_]
UWVS
D$,;x
d$<[^_]
UWVS
[^_]
UWVS
d$,[^_]
d$,[
[^_]
[^_]
UWVS
t$Hf
9l$ 
+l$ ;T$
L$ 9L$
d$d[^_]
d$d[^_]
L$ 9
+T$ 
+l$ 
UWVS
D$81
333?
F it$,
iT$<
T$4i
i|$,
iL$<
i|$,
XLiD$<
D$H$
;t$4
[^_]
D$4i
R,iP
\$,1
d$<1
[^_]
UWVS
d$,[^_]
UWVS
D$\1
d$<[1
UWVS
T$,t
|$01
d$L[^_]
D$(1
d$L[^_]
UWVS
d$,[^_]
UWVS
d$<1
[^_]
UWVS
T$$9B
d$<1
[^_]
D$<t
d$(1
d$(1
d$(1
d$(1
d$ [1
UWVS
d$<1
[^_]
UWVS
|$$9G
d$<1
[^_]
D$<tz
d$$1
d$$1
d$$[1
d$$[1
d$ [1
UWVS
d$,1
[^_]
L$,1
d$<[^_]
UWVS
d$<1
[^_]
d$ 1
d$ 1
d$ [1
d$ [1
d$ 1
d$,[
d$,[
D$\1
T$ )
D$X9
d$<1
[^_]
d$@1
d$@[1
UWVS
d$,[^_]
|$4~
D$<t
d$$1
UWVS
UWVS
d$<1
[^_]
UWVS
d$<1
[^_]
d$ [1
|$4~
D$<t
d$(1
UWVS
|$HtR
d$,1
[^_]
d$,[1
UWVS
OLt'
d$<1
[^_]
t$4tl
d$ 1
UWV1
d$<1
[^_]
|$4~
D$<t
d$(1
UWVS
|$HtU
d$,1
[^_]
d$,1
[^_]
UWVS
d$<1
[^_]
t$Dtp
d$01
UWVS
d$,1
[^_]
UWVS
d$$[^_]
UWVS
9T$,
9T$,
d$\[1
l$ 1
l$ 1
T$,f
d$<[^_]
T$$<
D$,w@
UWVS
d$,[^_]
A tx
A$~z
Q x+
Q$~B
Q$~1
d$ [^_
UWVS
d$,[^_]
d$,[^_]
d$,[^_]
d$,[^_]
d$,[^_]
UWVS
d$,[^_]
UWVS
d$<1
[^_]
UWVS
d$,1
[^_]
d$,1
[^_]
t$4tb
d$ 1
UWVS
d$L[^_]
UWVS
d$<1
[^_]
d$<1
[^_]
UWVS
d$,1
[^_]
UWVS
D$lf
d$L1
[^_]
d$L[1
d$L[1
d$L[1
UWVS
d$$[^_]
D$(1
[^_]
d$\[1
UWVS
d$,[^_]
UWVS
t$L1
9t$Du
\$H1
9\$Du
\$D1
9\$p}
D$@1
d$\[^_]
d$\[^_]
UWVS
[^_]
T$(1
L$$+H
[^_]
|$4~
D$<t
d$$1
UWVS
d$<1
[^_]
d$<1
[^_]
d$<1
[^_]
UWVS
T$(~G1
d$<1
[^_]
d$ [1
T$T<
d$H1
UWVS
d$<[1
D$ )
UWVS
d$,1
[^_]
d$(1
UWVS
d$<1
[^_]
d$<1
[^_]
D$<t_
d$(1
d$(1
d$(1
UWVS
d$,1
[^_]
d$,[1
UWVS
d$,1
[^_]
UWVS
d$<1
[^_]
d$01
\$4~4
d$L1
[^_]
D$0%
D$0~A
|$4~
d$(1
UWVS
d$,[1
UWVS
d$,[1
UWVS
[^_]
d$T[^_]
d$ [^_
UWVS
d$,[^_]
UWVS
d$,1
[^_]
d$,1
[^_]
UWVS
d$<1
[^_]
D$,tG
UWVS
d$<1
[^_]
d$<1
[^_]
D$$~Q
l$Pf
UWVS
d$,1
[^_]
d$,[1
UWVS
d$,[^_]
d$ [^_
$;A@
fff?
[^_]
[^_]
9T$,
[^_]
UWVS
9T$,
[^_]
T$$~M
O$~\
d$<1
[^_]
UWVS
d$,[^_]
UWVS
[^_]
UWVS
d$<1
[^_]
d$(1
|$$~
D$,t
UWVS
d$,[^_]
d$$1
UWVS
[^_]
D$ =
d$<[^_]
d$<[^_]
d$<[^_]
@9AL
T$8tI
T$8tI
T$8tK
T$8tQ
T$8tQ
T$8tQ
T$8tK
d$L1
[^_]
d$$1
d$,[^_]
|$D~
d$01
T$.<g
L$(w
UWVS
fff?
d$<1
[^_]
UWVS
[^_]
D$ =
d$<[^_]
d$<[^_]
d$<[^_]
@9AL
T$8tI
T$8tI
T$8tK
T$8tQ
T$8tQ
T$8tQ
T$8tK
d$L1
[^_]
d$$1
d$,[^_]
|$D~
d$01
T$.<g
L$(w
UWVS
fff?
d$<1
[^_]
UWVS
9D$$
,$#j
[^_]
[^_]
UWVS
9D$$
<$#j
[^_]
[^_]
|$ r
UWVS
9D$$
,$#j
t$ r
[^_]
UWVS
[^_]
[^_]
UWVS
[^_]
[^_]
UWVS
[^_]
d$l[
|$Zk
d$l[^_]
[^_]
d$0[^_
d$0[^_
d$0[^_
d$0[^_
d$0[^_
UWVS
d$<[^_]
UWVS
pp^_]
H@xF[
P<_]
PL~C
PH;P`~m+P\
PH~7
UWVS
d$L[^_]
L$Hv
d$,[^_]
[^_]
[^_]
d$0[^_
UWVS
BEt:
BEt:
BEu:
D$(t`
UWVS
d$,[^_]
UWVS
L$T1
v ~h
D$$~Z
[^_]
UWVS
d$,[^_]
UWVS
[^_]
UWVS
[^_]
[^_]
UWVS
d$,[^_]
t|iF
[^_]
[^_]
UWVS
d$,[^_]
d$,[^_]
D$(u]
t$0e
d$$[^
t$0e
d$ [^_
d$$[1
d$$1
d$$1
UWVS
d$,[^_]
d$,[^_]
d$,[
UWVS
|$de
D$<1
L$<e3
d$L[^_]
d$ [^_
UWVS
D$D9
x<	~$
d$,1
[^_]
[^_]
[^_]
l$Df
AHtp
D$,1
4(tc
UWVS
d$,[
d$,1
[^_]
UWVS
d$,[^_]
d$,[^_]
UWVS
t$,U
[^_]
Coarse
Coarse tuning
Fine
Fine tuning
Waveform
waveform distortion
gain1
output gain on first signal
gain2
output gain on second signal
Frequency
audible or LFO oscillation
input rate modulation signal
sine output
oscillator sine output signal
square output
ramp output
AKS Digitally Controlled Oscillator
oscillator pulse/square output signal
LB33sD
!	@envelope trigger offset %i frames
Digital ADSR Envelope Generator
AKSENV
attack
Initial ramp up rate
Decay to sustain rate
decay
Output level steady state
Final decay rate
ADSR Envelope Output Signal
decay parameter modifier
trigger gate
Mb`?
Digital Filter Two
cutoff
Filter cutoff frequency
resonance
Filter emphasis
Depth of modulation control
keyboard tracking
Cutoff tracks keyboard
filter type
Filter gain
Filter Input signal
Filter Control Signal
Filter Output Signal
Rooney, Butterworth, Chamberlain
y?AKS Reverb
Stereo input/output reverb
reverb delay line depth
depth of mono feedback
crossfade
wet/dry mix
line1 gain
output buffer
mod buffer
depth of stereo feedback signal
Pulse
Pulse width
Transpose
Octave transposition
Tune
fine tuning of frequency
output gain on signal
Ramp
Triangle
Square
Sine
pulse width modulation
oscillator ramp output signal
sync
synchronisation signal
triangle output
ARP Digitally Controlled Oscillator
harmonic inclusion of ramp wave
harmonic inclusion of triagular wave
harmonic inclusion of square/pwm wave
harmonic inclusion of square wave
harmonic inclusion of sine wave
oscillator triangle output signal
!i?Terminate
engine cleared MNL note
overvoice keydone
this emulator is not implemented
bristolMidiController(%i, %f)
no private microtonal mapping for %s
Null audio FX list unrecovered audio thread
Adding new audio operator: %i
Assigned operator %s to %i at %p
Removed operator %s from %i at %p
failed to open duplicate output file %s
pulse requested but not compiled with engine
Failed to open audio device %s
If jack is running then use 'startBristol -jack'
Problem opening audio device %s, exiting audio thread
IO %i, samples %i, segsize %i
Audio device write issue: restart pl %i
LWF requested as %i
		REQ SYSEX %f
initBristolAudio()
using baudio: %p->%p
%s.mcm
microTonalMap
micro first %f last %f (%s)
velocityTable
velocityMap
veloc first %1.2f last %1.2f
null
modWheel
Null audio FX list
recovered
malloc locals %p %i
initAudioThread(%i)
initPalette()
initMidiVoices(%p, %i)
Adding new MIDI Voice: %i
freeAudioMain()
freePalette()
freeBristolAudio(%p, %p)
/dev/audio
plughw:0,0
starting audio thread
jack audio interface returned
segmentsize is %i
Audio device read issue
resetAudioThread()
audioThread exiting
hammond
explorer
hammondB3
prophet52
mono
memoryMoog
roadrunner
granular
realistic
voxM2
jupiter8
bitone
cs80
sonic6
trilogy
trilogyODC
stratus
Aremoving one aks
initialising one aks
removing one arp2600
initialising arp2600
removing one axxe
initialising one axxe
Bdestroy DX sound
no effect to process
initialising one DX sound
initialising one Rhodes sound
MbP?
initialising one bristolexplorer
removing hammond sound
removing B3 sound
malloced sound: %p
initialising one hammond sound
initialising one hammond second manual
removing one juno
initialising one juno
zd?inthandler
create a failed %d
could not get thread schedule
rescheduled thread: %i
could not reschedule thread
warranty
0.60.11
bristol version %s
conditions
BRISTOL_AUTOCONN
true
BRISTOL_LOG_CONSOLE
-daemon
-syslog
-log
-logengine
-glwf
-exec
-gui
-blo
-bloci
-bloco
-blomin
-blofraction
-server
-watchdog
-mididev
-midi
none
dummy
rawalsa
alsaraw
slab
-scala
-scl
-audiodev
-emulate
-register
-audio
pulsethread
pulse
-outgain
-ingain
-port
-host
-oss
-seq
-alsa
-osc
-jack
-jsmd
-jsmuuid
-jsmfile
-import
-mogc
-migc
-arp2600
-multi
-autoconn
-dummyaudio
-jdo
-rate
-count
-preload
-priority
-debug
-sysid
0x%x
-ladi
bristol
brighton
both
-session
unix:
unix:%i
startBristol
    %s
%s %s
jsm will use '%s'
spawning midi thread
parent going into idle loop
Got midi thread OK status
spawning audio thread
%smt
requested jack midi link: %i
Scheduler getparam failed...
set jmidi thread priority
init watchdog exception
init watchdog %i
audio thread failed: exiting.
GUI id %i returned %i
audiothread exit error
audiothread exited
midithread exit error
midithread exited
bristol parent exiting
terminating logging thread
-output
Null palette
no requested to reschedule thread
You probably prefer to use the startBristol script.
fixing sysex system id at 0x%x
Init waiting for midi thread OK status
init waiting for audio thread OK status
failed to receive audio thread OK, exiting
requested jack midi did not link up
could not set jmidi thread priority
no request to set jmidi thread priority
potentially precocious jsm load request
audio thread returned: exiting.
mini explorer voyager memory sonic6 mg1 b3 prophet pro52 pro10 pro1 rhodes rhodesbass roadrunner bitone bit99 bit100 stratus trilogy obx obxa axxe odyssey arp2600 solina polysix poly800 monopoly vox voxm2 juno jupiter bme700 bm dx sidney 
arp2600 axxe b3 bm bme700 bit1 bit99 bit100 dx explorer juno jupiter mg1 memory mini monopoly obx obxa odyssey poly800 polysix pro1 pro10 pro5 pro52 rhodes rhodesbass roadrunner sidney solina sonic6 stratus trilogy vox voxm2 voyager 
The following are terms and conditions of the GNU General Public License. For
full details please see <http://www.gnu.org/licenses/>
4. Conveying Verbatim Copies.
You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.
You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.
5. Conveying Modified Source Versions.
You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:
    * a) The work must carry prominent notices stating that you modified it, and giving a relevant date.
    * b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to 
keep intact all notices
    * c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it.
    * d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so.
A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an 
aggregate
 if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.
6. Conveying Non-Source Forms.
You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:
    * a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange.
    * b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge.
    * c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b.
    * d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements.
    * e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d.
A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.
User Product
 is either (1) a 
consumer product
, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, 
normally used
 refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.
Installation Information
 for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.
If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).
The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.
Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.
THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE
LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR
OTHER PARTIES PROVIDE THE PROGRAM 
AS IS
 WITHOUT WARRANTY OF ANY KIND, EITHER
EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE
QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE
DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
Copyright (c) by Nick Copeland <nickycopeland@hotmail.com> 1996,2012
This program comes with ABSOLUTELY NO WARRANTY; for details type
`bristol warranty'. This is free software, and you are welcome to redistribute it
under certain conditions; type `bristol conditions' for details of terms.
removing one memorymoog
initialising one memorymoog
Cremoving one mixer
initialising one mixer
removing one mini
initialising one bristolmini
=removing one obx
voicecount now %i
initialising one obx
?333333
removing one odyssey
initialising one odyssey
removing one poly6
initialising one poly6
removing one poly
initialising one mono/poly
 Ainitialising one prophet
removing one prophet
?removing one sampler
switch on %i
Mini Master OFF
initialising one sampler
bristolSamplerControl(%i, %i, %f)
bristolSystem(%i, %i, %i) %x
SID failure....
	alloc SID %i
no hello, returning
commask %x
Debugging enabled
Debugging disabled
configured %i voices
configured %i channel voices
init request nr %i
empty audio list, cleaning up
tranpose now %i
cont 2: %i: res %i
created %i voices: allocated %i to synth
waiting for audiothread cleanup
timeout on audio thread cleanup
removing one vox
initialising vox sound
initialising vox upper manual
GDCA
Digital Amplifier
Amplifier Input signal
Amplifier Control Signal
Amplifier Output Signal
waveform
sine square pulse ramp triangle tan saw
Dimension
Vibrato Chorus
rotation speed
depth of rotation
crunch
gain of return signal
scan
stereo pan rate
left output
right output
Mb@?9P
envelope tracks key velocity/pressure
DX OP
FM Operator
Attack
Decay
envelope decay rate
Sustain
envelope sustain level
Release
envelope release rate
Output gain control
First envelope attack level
Attack2
Second envelope attack rate
Second envelope attack level
Electromod
Electronic Switch
Input 1
Electromod Input 1 Signal
Input 2
Electromod Input 2 Signal
Clock Input
Electromod clock Signal
Electromod Output Signal
sustain
release
Overall signal level
velocity sensitive gain
rezero
reset gain on retrigger
conditional
always gain to max
velocity sensitive ADR
synchronise to input
oscillator wave mod signal
oscillator sync signal
sync out
oscillator sync output signal
?Selected chamberlain filter
Algorithm selection
LP/BP/HP
Filter mode (type 0 only)
Remix gain
Oberheim pole remixing
normalise
.33S?
>333333
Digital Filter One
Chamberlain or Rooney filter
Low pass or high pass (type-0 only)
?Envelope Follower
Mono envelope follower
follower envelope attack and decay rate
Hammond
Sineform
Pulse code of sinewave
damp
tonewheel damping
oscillator
Harmonic content definition
percussion
apply percussion to wave
rand
phase randomisation
Key click
algo
Sine generation algorithm
percussive
percussive signal output
HammondChorus
Hammond Chorus
Delay
Tap delay
Damping
Vibra
Depth of modulation
Wet/Dry signal mix
Vibra/Chorus
Rotor speed
Tap signal damping (rc filter)
333?
?HPF
Digital High Pass Filter
junodcoparam(%i, %f)
Juno Digitally Controlled Oscillator
harmonic inclusion of sub square wave
harmonic inclusion of pwm square wave
?lfo trigger offset %i frames
Digitally Controlled LFO
synchronised start
Lower limit
Upper limit
noise input
input signal and hold
triangular output
sample and hold output
sawtooth output
frequency is velocity sensitive
frequency is mod wheel sensitive
lower frequency range, def 0.1Hz
upper frequency range, def 10Hz
!)?midiPolyPressure(%i, %i)
midiChannelPressure(%i, %i)
SLab
bSYSEX %i %i: %f
midicontrollermap
%sFloat
Fixing samplerate at %i
midiNoteMap
midiMicroTonalMap
ladi relooped save request %x/%x
ladi relooped load request %x/%x
engine does not handle bristol type2 messages yet
Dmonophonic note logic (%i %i)
%p<-%p->%p: %i, %i, 0x%x (%p)
mt: off: removed %p/%i from newlist
mt: off: %p->%p/%i was on newlist
ringbuffer exhausted, note off event dropped
ringbuffer exhausted, note on event dropped
(%i) mn %i, key %i
printPlayList(%p, %p)
printNewlist(%p)
%p<-%p->%p: %i, %i, 0x%x
direct off call
doMidiNoteOn()
voicecount exceeded
direct on call
rbMidiNote(%x) %x
0load was requested
save was requested
128.1
midi oss
midi interface: %s
midi jack: %s
opened control socket
midiOpen: %i(%x)
opened midi device %s
midiThread exiting
	handle:  %i
	command: SYSEX
	chan:	%i
	command: %x
	p1:	%i, p2:	%i
midi osc not currently implemented
Error opening control device, exiting midi thread
Error opening midi device %s/%i, exiting midi thread
Bristol cannot operate without a midi interface. Terminating
Noise
Noise Generator
White/Pink
white pink
white pink filtering
Noise Output Signal
Mb0?
Oops
Prophet Digitally Controlled Oscillator
:left input buffer
right input buffer
AInput signal gain 1
Input signal gain 2
Output signal gain
Ringmod
Ringmod Generator
Ringmod Input 1 Signal
Ringmod Input 2 Signal
Ringmod Output Signal
Leslie
Rotary speaker simulator
inertia
inertia of rotation changes
delayed signal
reverberation signal
speaker reverberation
poweramp overdrive
crossover
crossover frequency
operation
rotary speak input signal
off HornBass HornBassSync Horn
rotary speaker left channel output
rotary speaker right channel output
?/tmp/rhodespiano.raw
sdco %i, %f, %f, %f
SDCO
sample selection
issue loading rhodes piano sample
Digitally Controlled Resampling Oscillator
?Could not stat file
filesize is %i bytes
Need to clean up the free() wave memory code
file %s does not indicate specified type: %i, %i
UUUUUU
h?	index	%i
	op	%p
	next	%i
Null palette entry %i
Null zero palette entry
Null palette specification
Null pallet entry: unrecovered
Null zero pallet entry: unrecovered
Null palette specification, recovered
freeing existing sound structure
EQNormal
tonewheel
EQBright
DampNormal
DampBright
BusNormal
BusBright
BusDelayNormal
BusDelayBright
ClickNormal
ClickPulseNormal
ClickInvertNormal
ClickBright
ClickPulseBright
ClickInvertBright
ToneNormal
ToneBright
crosstalkNormal
crosstalkBright
resistors
stops
%s/memory/profiles/%s
BRISTOL
taper
compartment
@VibraChorus
flags
4Doutput of signals for percussive process
Pitch correction factor
percussive output
UUUUUU
?destroying one solina
initialising one solina sound
initialising one roadrunner sound
env 1 flags are %i
env 2 flags are %i
env 3 flags are %i
lfo flags are %i
noise flags are %i
initialising one granular sound
initialised one granular sound
granulardcoparam(%i, %f)
threads %i
Memory selection not implemented: %i
Digitally Controlled Granular Oscillator
E'@removing one mg1
gate is %i
initialising one mg1: %i
removing one jupiter
initialising jupiter: %i voices
?ffffff
initialising bitone: %i voices
Bitone
16' strength
gain of 16' harmonic
8' strength
gain of 8' harmonic
4' strength
gain of 4' harmonic
2' strength
gain of 2' harmonic
tri' strength
gain of tri' harmonic
ramp' strength
gain of ramp' harmonic
pulse' strength
gain of pulse' harmonic
Pulse Width
Pulse width of square wave
Freq
12 semitone steps
1/2 semitone up or down
Velocity PWM
PW tracking velocity
Square Gain
Gain of square wave
Subharmonic Gain
Gain of 32' wave
PW Modulating Input
Sync Input
input to phase sync process
Sync Output
Bit-1 Digitally Controlled Oscillator
input of signal for PWM process
simple output signal for driving sync
Note %i, total %i:
 %i/%i 
Note On total: %i:
Dbristolcs80Control(%i, %i, %f)
initialising cs80: %i voices
?ActiveSense %p: %i
ActiveSenseCheck %p: %i
Active Sensing detected failure of UI
cs80oscparam(%i, %f) %i
CS-80 Osc
Square strength
Square harmonic
Ramp strength
gain of Ramp harmonic
Sine strength
gain of Sine harmonic
Brilliance' strength
gain of Brilliance' harmonic
Brilliance'' strength
gain of Brilliance'' harmonic
sine oscillator output signal
ACS-80 Voltage Controlled Oscillator
|?generate bandlimited waveforms(%i, %2.0f, %i, %1.2f, %1.2f, %i)
removing one pro1
initialising one pro1
%i: il %f, al %f, a %f d %f r %f %f
Initial Envelope Level
Attach Level
final Decay Rate
destroying Sonic-6
initialising Sonic-6
destroying trilogy synth
initialising trilogy synth
initialising trilogy organ divider circuit
333@
Trilogy
Waveform selector
Phase distortions or BLO
Trilogy Digitally Controlled Oscillator
removing one poly800
initialising poly800
ffffff
?Digital ADSR 5-stage Envelope Generator
level-3
level 1
rate-1
Rate 1
level-2
level 2
rate-2
Rate 2
level 3
rate-3
Rate 3
level-4
level 4
rate-4
Rate 4
level-5
level 5
retrigger on reon
NRO-OSC
fine semitone tuning
coarse 12 semitone tuning
transpose in semitones
detune
harmonic disonance
16' harmonic volume
8' harmonic volume
4' harmonic volume
2' harmonic volume
sub-harmonic
sub-harmonic volume
square
square signal level
ramp
ramp signal level
tri signal level
sine
sine signal level
pulse width
square wave duty cycle
drain
signal draining
Type
Oscillator type
Non Resampling Digitally Controlled Oscillator
fff?
;X94<
@removing one bme700
initialising bme700
?removing one bassmaker
initialising (empty) bassmaker
removing one sid
initialising sid driver
?removing one sid2
initialising sid2 driver
v %i: cutoff: %x = %f (~%2.2fkHz)
v %i: freq pre: %4.3f (%4.3f Hz), post: %i (%4.3f Hz) (d=%4.3f) (r=%5.0f)
v %i: attack: %i/%i, decay: %i/%i
v %i: sustain: %i, release %i/%i
id %x: address 0x%02x(%02i) := 0x%02x
Bristol SID register control block:
v %i: resonance: %f
v %i: volume: %f
s %i: GAIN %f
s %i: LEAKAGE %f
s %i: DC Bias %f
s %i: OB fmix %f
s %i: S/N ratio %f
s %i: DETUNE %f cents
destroy %i
s %i: Clock %f
	B_SID_V1_FREQ_LO	0x%02x
	B_SID_V1_FREQ_HI	0x%02x
	B_SID_V1_PW_LO		0x%02x
	B_SID_V1_PW_HI		0x%02x
	B_SID_V1_CONTROL	0x%02x
	B_SID_V1_ATT_DEC	0x%02x
	B_SID_V1_SUS_REL	0x%02x
	B_SID_V2_FREQ_LO	0x%02x
	B_SID_V2_FREQ_HI	0x%02x
	B_SID_V2_PW_LO		0x%02x
	B_SID_V2_PW_HI		0x%02x
	B_SID_V2_CONTROL	0x%02x
	B_SID_V2_ATT_DEC	0x%02x
	B_SID_V2_SUS_REL	0x%02x
	B_SID_V3_FREQ_LO	0x%02x
	B_SID_V3_FREQ_HI	0x%02x
	B_SID_V3_PW_LO		0x%02x
	B_SID_V3_PW_HI		0x%02x
	B_SID_V3_CONTROL	0x%02x
	B_SID_V3_ATT_DEC	0x%02x
	B_SID_V3_SUS_REL	0x%02x
	B_SID_FILT_LO		0x%02x
	B_SID_FILT_HI		0x%02x
	B_SID_FILT_RES_F	0x%02x
	B_SID_FILT_M_VOL	0x%02x
	B_SID_X_ANALOGUE	0x%02x
	B_SID_Y_ANALOGUE	0x%02x
	B_SID_OSC_3_OUT		0x%02x
	B_SID_ENV_3_OUT		0x%02x
	B_SID_CONTROL		0x%02x
=B`e=
$tIe
>GX3
@?333333
6:?bristolAudioOpen(%s, %i, %i, %x)
opened audio device with a fragment size of %i, buffer %p, fd %i/%i
bristolAudioWrite(%p, %i), %i
Write Failed: %i
Clipping output
bristolAudioRead(%i), %i
Read Failed: fs %i, %p
9		name	%s
		desc	%s
		type	%i
		low	%i
		high	%i
		flags	%i
		rate	%i
		count	%i
		flags	%x
		buf	%p
		pcount	%i
		param	%p
		iocount	%i
		io	%p
		lclsize	%i
	next	%p
	last	%p
	spec	%p
	size	%i
	init	%p
	dest	%p
	reset	%p
	operate	%p
closing alsa capture channel
closing alsa playback channel
capture
Error opening PCM device %s
Cound not get %s any params
Could not set %s format
Could not set channels
Could not set %s rate to %i
period size is %i
Could not set %s avail min
open playback on %s, pre %i
playback
plug:dmix
open capture on %s: pre %i
Playback start error: %s
Record start error: %s
Stream status error: %s
*** frames = %li ***
audioWrite(%i)
Do again
	Write Error: %s %i
audioRead(%i)
Could not set %s access methods
Could not configure %s period size
Could not configure %s periods
Could not set %s hardware parameters: %s
Could not configure %s buffer size
Could not get %s current configuration
Could not set %s start threshold
Could not set %s stop threshold
Could not configure %s software parameters
prepare failure on capture channel
prepare failure on playback channel
opening device %s, flags %08x
init %i bytes of device structure
restart audio interface %i %i
setAudioStart2(%i)
setAudioStop2(%i)
audioClose(%p, %i, %s)
closing AUDIO_DUMMY interface
audioOpen(%p, %i, %i): %s
using AUDIO_DUMMY interface
	WHAT WERE THOSE FLAGS: %x
flags are now %i
ioctl(%i, SNDCTL_DSP_SETTRIGGER, &%08x)
ALSA device, returning from setAudioStop2
ioctl(%i, SNDCTL_DSP_GETTRIGGER, &%08x)
Failed to open audio device "%s", flags %i
ossAudioInit(%p, %i, %i)
checkAudioCaps2(%i, %i)
Found stereo dev %08x
Mono Capabilities: %08x
Record Caps: %08x
Failed to set Duplex
Set to Duplex
Set audio format: %i
Set resolution failed: %i
Set to stereo: %i
Set stereo failed: %i
Get frag size failed: %i
Failed to get stereo capabilities: %08x
Failed to get audio capabilities: %08x
Failed to get record capabilities: %08x
ioctl(%i, SNDCTL_DSP_SETFRAGMENT, %x)
ioctl(%i, SNDCTL_DSP_SETFRAGMENT, %x): failed
ioctl(%i, SNDCTL_DSP_GETCAPS, &0x%x)
Device %s does support SNDCTL_SET_TRIGGER
Device %s does NOT support SNDCTL_SET_TRIGGER
ioctl(%i, SNDCTL_DSP_SETDUPLEX, &0x%x)
ioctl(%i, SNDCTL_DSP_SETFMT, &%i)
ioctl(%i, SNDCTL_DSP_STEREO, &%i)
ioctl(%i, SNDCTL_DSP_SPEED, &%i)
Set audio readwrite rate to %i
Set line frequency failed: %i
ioctl(%i, SNDCTL_DSP_GETBLKSIZE, &0): %i bytes
%i %p: min %f, max %f
closedown on interrupt
Empty jack_get_ports()
Found port %s
%s_%i
Cannot connect to jack
32 bit float mono audio
out_left
Cannot register jack port
out_right
in_left
in_right
Cannot activate jack
BRISTOL_AUTO_LEFT
BRISTOL_AUTO_RIGHT
Skipping Jack Conn: %s
BRISTOL_AUTO_IN
out_%i
in_%i
%s%s
jack session callback: %s %s
jack session callback: %s
session file is %s
command line is %s
interface unregistered
registering jack interface: %s
reregistering jack interface: %s, UUDI %s
Jack SAMPLERATE MISMATCH: startBristol -jack -rate %i
Jack PERIOD COUNT MISMATCH: `startBristol -jack -count %i`
You need to ensure that bristol uses the same period size
Did not receive request from GUI, exiting.
Bristol Failed Conn: %s to %s failed
Bristol Env AutoConn: %s to %s
Bristol Defaulted Conn: %s to %s failed
Bristol Defaulted Conn: %s to %s
Bristol Env AutoConn: %s to %s failed
%s -jsmfile "${SESSION_DIR}%s" -jsmuuid %s
unregistering jack interface: %p->%p
;*2$"<
p}?H
u?33s?
midiNoteOff
midiNoteOn
midiPolyPressure
midiControl
midiProgram
midiChannelPressure
midiPitchWheel
midiSystem
#{2i
<dsH3fQ
XUb)
Z%R3.
jN2]
0q%Z
b%alC]
_Fw~
\XU8*N
|H*;
Z'ue89
^_H1
o)p_j
PM\T
KXSl(^A
CVI1
$LWLc
}BCu
xGnHu
LSn2
=&FJ
s0.ot
W ^ ]
)PXHw
Oy2^
d>#~!
yDBi
j%^G~
6Lq;j~Q{2Q
[]Hk
K+:A
57yK
Cfq*L
JS.d
8Op(PLZr
(7j?
-NgkpWj
^TQ`
Z3|{g(
2`1"L4D
'c`c^
AV!b
"{!$
mgJ0
(E%Hq9
2	e`Z
Flb5xI
oz|iK
4abUN
Aj?k
|<1L
f =b
;iS1q
,~Q)
q|yuw
juW9
m>[#
+yM_
OWvg{
cC#b
6IWpg
"&Vu
eC5,
8 So"
	!MZ
+oCfD
_	yF
]!ij
+X^>&F}%
=:W1v;
g[\*
o:V[
SpHx)L
t'Ze
21wC#K
OLuf
4!@Eik\
[Vi=
S7y=
.Ujv2W
LR7/3
pnxaV 
^<Ign%
GCSK
~UKy
p,ml)DE
DE?x
WJ~g
Hc$+
;r1a
#DMn\_
#svr
4{y+
{iR A
RPWz
d\9[
nVC8
[A%}
rvc'}V
]oa*P#4
9S-.n
a~1[
`Y5S
28a_`"
+7nL
%wvj
mFx6
d:l[\
*';w
*#jd
N)UZ
o<b&
1^>cw
"J[xE)K
)5}3~
qb+J
f9H1
hv<l2
sG#x
R^GdH
78D*
(c+vje
H0Eoy
'new
(pBM
MuC'}0@
{dW$
f+y'
Ob.``
"(u.
em\bXt
?|=}
=$jokt
(Dx7r
L]E;rzA>
OYN/@a
~ov"
8s~}7
uAp;=_
,JG/
y*@:a
@S]p6
?{4Q
(ly+w
vP;9
s,ot
N8NO
NeU{
pteviq
.!7%u
hU|+K
e@U/
^Xhx
(,^>
|}$!
Q{Lu?
Vl"JHk
$hm	
3>2ND-
t_|w
\B:D(1
K,:`c~
o4_:
|xyPq
WaB N
wh4fm
Aj6cia
VqH$O
2<Q6
}l{`
?-d~
z	Dy"
znYk 
g?XrQ 
9n/Kh
H'4>
frh	
;hHo
H@_B
z(.]
IVEaOI
3$|eo&K
d/2Q6
}f0<
j^j{
F4tZ
|	Ti|{
g~,Mt
`D6+
PoZZ~
onj~x/
&t:1(H_
Uh78B
HsNVr
q3Hd(
)+m9
::]~m
aH6]6J
~b~J>
H3o@+{
k3\.H
;g!`7
zMjl|um
@/IH
wu@Fp7O
5v~|x
S$(g@
UhEn
d{Wz
O>64
!tO!
jrgmv	-
t+Et~
]PmJ
`Z/A$
s[h#&C
RQhP
*B_.;
Z!'1t
#bS_
Agr:Fv
tf(c
]"ANT
K-[K
a(-L
~H7]':
+9j7
S[OM
DYAWe
5#6z
Hgf=
f>NEA
 )"`
I\I,L
`Gb6HcR7a4 
pU=`{
"9.no<
R}-U
1x=aM
0vR-
GS%V
hT:4
e%E%m
6;u#LL5
,k;-
LA|*1{
1Vlu
}&{r,
b.`-(l
t&@O&
^U/f
#q.|a
*AT#
]`Um
SxPS~
~swVj4
&5<\
L2.X
KZH*+jE
22f.
-&SZ
55Z=(
ZRMH
MeM?
vCj0
(]5j
s(s3
o$g1
>D6H
Yu1>
KYuIOx
48QmQ
Q-d!
b;f6~
^~2P
TGg=
JKF9
8-Y_V
G]9g'
<~	+
x9<,9
.)P	[S7
dUVZr
1OiH
UX0C
,B:5
>ZL"
EV6h^
Q#8 :iR
*La.
|?Lo
<s/epS
n4nE
j&Qqt
=f+0
0rEJ\c
N_K\>
|9tS5
~uQrmJ
 "+'O
E6'a
Oo!?e
GN"Of
1hB]
2qC]6
7HnyN`
|=]u/J
vvxz
v5ZSb
3(}+	
T5^n
V_zm
a5c]
f~LD'
l8%3
.R2A;fNe-yz
52F$~
#ZRH
Km=$i-	
wklc+
fc0P
dvSZ
MgKa
x172	Y8o1
F-Ck
Ni1-
*0D{?
PS2@
wc;$
uxb\
}:qQ0>nu#'T
l,6Ab
R`Kg2+
7qivRPl
+c:x
p{a}-
^xdf2
eVXrK
P'XJ
55iH
He$=
3tP6
^ .7
^[p_l
G;Ujv;
u<,D
=~;	=rk
0;>Z
/Y>`X^>T
x>D0~>p
j	?n
(%?"
0?Tn2?
M5?(
V<?5
zD?-
?L?k
iR?$
BX?cdY?s
Jk?-$l?<
q?*Ur?
Av?I
v?Hlw?
	y?"
}z?_
*|?L
9}?e
_~?R
]{?_
w?Hlw?I
s?*Ur?0
l?-$l?
mj?*
Z?cdY?
3Q?j
?L?n
s@?H
$8?(
3?Tn2?
&(?"
#"?s
j	?U
>D0~>
c>`X^>
/Y>I
[6>q
)(>"
=~;	=
;Ujv;-
,l/?2A5e8
bristol
bristol.debug
7zXZ
Va_,$
>4TH'\
y=v.
G^~]
H;J|f
vRcH
[HYN=;K4'
'mn5
J<@'
\KMv
rgkV
K'Za
LQdl
1qj(^
"*ol
*(~.m
hqFxCd
x/Kt
k"FU-
Iq:b
j5yQk
,AV`
2#+*
|[&rD
6; 0
c."<p
57KM
Qk`6
|O`~d
q\#=
\b{w 
E>c,|
XB,f
&/	Ck
<ZGJ
UD*Y
M*2C_
paI0
^'	t
|$M#3
d$hg
.>Y,
d#cY-L
rw0Y
ql1a
fN,s
bs]~&
<Z}f4
Mq?;
t ok
Cd&C
T4^Y
X/t%
o	aFZ
|w.qG6<d
ee"@N
0I*!o
s0eMy
lBAV
G\0I8
k10K|
z]:j-~
oQ>$r
JnSr
]="<A
cwSZ
;w&,k"
dZ*=
S-1;1
PI`;f.e
+cmg
1}.l
H.*o
xC3,
	+X~|Y"
bRn]
iorU
8X|'
	/i:
+cRA
^MYy8
v2w:
}inAX
KCBnK
?DY[
}nye
.}5=
LkwR
p;PY
_C2h
ke]r
TG"d
Yz![
i4u*
0*#o
'-PTY?
6p^ui
oZi~yX
c>.k
e<N0*
8_?yaQ
]aZv
E:>S
G~Y'
pe	}t
c\aP
dHzD?O
J<[ 
M2T+
4Q9e
 .oa*
&`cuF>
Y8/'
T|KD
"=KS9
c(u{
4;8XI
/CnxM
@^pk
<v~<?8
_Cb4WghD
)=[Y
M)}|
YLUJ
7aw%f
6(A\
%Ee<4
mY3?
$]mHD
Gyu8U3
|Kf'd
M:p?
4]Ch8
KG2'
TQ/t:
}AG:
i`ZCh/
:3|p
!G=1
2TIo
 E=z
%VPR0
b	c,
(.b<
>q@X
LM6Vj
%h	L
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
