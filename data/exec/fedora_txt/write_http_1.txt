rGBE
8w83
__gmon_start__
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
curl_easy_setopt
curl_easy_perform
plugin_log
time
format_json_initialize
format_json_finalize
curl_easy_cleanup
free
__strdup
strcasecmp
malloc
pthread_mutex_init
plugin_register_flush
plugin_register_write
curl_easy_init
curl_slist_append
strlen
ssnprintf
strcmp
format_name
escape_string
uc_get_rate
pthread_mutex_lock
memcpy
pthread_mutex_unlock
__assert_fail
__stack_chk_fail
format_json_value_list
module_register
plugin_register_complex_config
memset
__finite
libcurl.so.4
libdl.so.2
libc.so.6
_edata
__bss_start
_end
write_http.so
GLIBC_2.14
GLIBC_2.4
GLIBC_2.2.5
5zB 
%|B 
%zB 
%rB 
%jB 
%bB 
%ZB 
%RB 
%JB 
%BB 
%:B 
%2B 
%*B 
%"B 
=RA 
="A 
fffff.
=h= 
=R= 
ffffff.
fffff.
fffff.
AWAVAUATUSH
v(E1
D$ H
T$8I
D$0H
|$8L
0A;n(}<M
|$ L
A;n(|
T$@H
T$HH
[]A\A]A^A_
|$(L
|$0L
AUATUSH
[]A\A]
AWAVI
AUATI
L$\I
T$0H
|$@I
|$@H)
E;u@
D$(D
|$@A
[]A\A]A^A_
|$@H)
|$@A
|$@A
L$@H
l$0H
T$0H
T$0H;
T$0H
T$0H
T$0H;
fff.
l$ H
d$(L
l$0L
t$8L
|$@H
l$ L
d$(L
l$0L
t$8L
|$@H
AWAVI
AUATUSH
t$01
|$8H
L$(D
D$ dH
t$0H
|$8H
H9D$0H
l$P1
A;^@
T$(A
[]A\A]A^A_
T$(H
A;^@
\$0H+\$@H
|$8H
|$@1
t$H1
T$(A
T$(A
t$(L
D$ H
D$@H
\$0H
|$8H
D$@H
\$ H
\$@H
d$0H
|$81
D$(L
d$0H
|$8H
T$(L
\$0H
|$81
t$(H
\$0H
|$8M
t$(H
\$0H
|$8M
t$(H
\$0H
|$8M
t$(H
\$0H
|$8H
t$(H
l$0H
|$8H
l$0H
|$8I
write_http plugin: curl_easy_perform failed with status %i: %s
write_http: wh_flush_nolock: format_json_finalize failed.
write_http: wh_flush_nolock: Unknown format: %i
write_http plugin: The `%s' config option needs exactly one boolean argument.
write_http plugin: The `%s' config option needs exactly one string argument.
write_http plugin: strdup failed.
write_http plugin: malloc failed.
write_http plugin: Invalid format string: %s
write_http plugin: Invalid configuration option: %s.
curl plugin: curl_easy_init failed.
Content-Type: application/json
write_http plugin: DS type does not match value list type
write_http plugin: error with format_name
0 == __extension__ ({ size_t __s1_len, __s2_len; (__builtin_constant_p (ds->type) && __builtin_constant_p (vl->type) && (__s1_len = strlen (ds->type), __s2_len = strlen (vl->type), (!((size_t)(const void *)((ds->type) + 1) - (size_t)(const void *)(ds->type) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((vl->type) + 1) - (size_t)(const void *)(vl->type) == 1) || __s2_len >= 4)) ? __builtin_strcmp (ds->type, vl->type) : (__builtin_constant_p (ds->type) && ((size_t)(const void *)((ds->type) + 1) - (size_t)(const void *)(ds->type) == 1) && (__s1_len = strlen (ds->type), __s1_len < 4) ? (__builtin_constant_p (vl->type) && ((size_t)(const void *)((vl->type) + 1) - (size_t)(const void *)(vl->type) == 1) ? __builtin_strcmp (ds->type, vl->type) : (__extension__ ({ __const unsigned char *__s2 = (__const unsigned char *) (__const char *) (vl->type); register int __result = (((__const unsigned char *) (__const char *) (ds->type))[0] - __s2[0]); if (__s1_len > 0 && __result == 0) { __result = (((__const unsigned char *) (__const char *) (ds->type))[1] - __s2[1]); if (__s1_len > 1 && __result == 0) { __result = (((__const unsigned char *) (__const char *) (ds->type))[2] - __s2[2]); if (__s1_len > 2 && __result == 0) __result = (((__const unsigned char *) (__const char *) (ds->type))[3] - __s2[3]); } } __result; }))) : (__builtin_constant_p (vl->type) && ((size_t)(const void *)((vl->type) + 1) - (size_t)(const void *)(vl->type) == 1) && (__s2_len = strlen (vl->type), __s2_len < 4) ? (__builtin_constant_p (ds->type) && ((size_t)(const void *)((ds->type) + 1) - (size_t)(const void *)(ds->type) == 1) ? __builtin_strcmp (ds->type, vl->type) : (__extension__ ({ __const unsigned char *__s1 = (__const unsigned char *) (__const char *) (ds->type); register int __result = __s1[0] - ((__const unsigned char *) (__const char *) (vl->type))[0]; if (__s2_len > 0 && __result == 0) { __result = (__s1[1] - ((__const unsigned char *) (__const char *) (vl->type))[1]); if (__s2_len > 1 && __result == 0) { __result = (__s1[2] - ((__const unsigned char *) (__const char *) (vl->type))[2]); if (__s2_len > 2 && __result == 0) __result = (__s1[3] - ((__const unsigned char *) (__const char *) (vl->type))[3]); } } __result; }))) : __builtin_strcmp (ds->type, vl->type)))); })
write_http plugin: uc_get_rate failed.
write_http plugin: Unknown data source type: %i
write_http plugin: Command buffer too small: Need %zu bytes.
write_http plugin: wh_callback_init failed.
command_len < cb->send_buffer_free
write_http plugin: error with wh_value_list_to_string
write_http
User
Password
VerifyPeer
VerifyHost
CACert
Format
Command
JSON
StoreRates
collectd/4.10.6
Accept:  */*
Content-Type: text/plain
Expect:
curl plugin: malloc failed.
%s:%s
write_http.c
:%llu
:%li
PUTVAL %s interval=%i %s
wh_write_command
wh_value_list_to_string
counter
unknown
gauge
derive
absolute
null
"%s"
,"time":%lu
,"interval":%i
host
,"%s":%s
plugin
plugin_instance
type
type_instance
"values":%s
,"dstypes":%s
,"dsnames":%s
utils_format_json: uc_get_rate failed.
format_json: Unknown data source type: %i
;*3$"
write_http.so.debug
5'LG
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.bss
.init
.rela.plt
.got.plt
.got
.text
.fini_array
.init_array
