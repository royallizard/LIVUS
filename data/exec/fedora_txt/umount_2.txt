/lib64/ld-linux-x86-64.so.2
libmount.so.1
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
mnt_context_get_syscall_errno
mnt_context_umount
mnt_context_enable_force
mnt_context_enable_rdonly_umount
mnt_context_enable_verbose
mnt_context_next_umount
mnt_new_iter
mnt_context_get_helper_status
mnt_context_get_status
mnt_context_enable_fake
mnt_new_context
mnt_get_library_version
mnt_free_context
mnt_context_is_verbose
mnt_get_library_features
mnt_context_enable_lazy
mnt_context_get_target
mnt_context_set_tables_errcb
mnt_context_helper_executed
mnt_context_set_target
mnt_init_debug
mnt_reset_context
mnt_context_set_options_pattern
mnt_context_set_fstype_pattern
mnt_context_syscall_called
mnt_context_disable_helpers
mnt_context_is_restricted
mnt_context_disable_mtab
mnt_fs_get_target
mnt_context_disable_canonicalize
mnt_context_enable_loopdel
mnt_free_iter
libblkid.so.1
libuuid.so.1
libselinux.so.1
libsepol.so.1
libc.so.6
__printf_chk
exit
setlocale
strncmp
optind
dcgettext
warnx
strlen
prctl
__secure_getenv
__errno_location
__fprintf_chk
stdout
fputs
getgid
optarg
stderr
getuid
getegid
getopt_long
fwrite
geteuid
strchr
program_invocation_short_name
__cxa_finalize
errx
bindtextdomain
__libc_start_main
vwarn
__progname
__environ
_edata
__bss_start
_end
__libc_csu_fini
__libc_csu_init
MOUNT_2.20
MOUNT_2.21
MOUNT_2.19
GLIBC_2.3.4
GLIBC_2.2.5
%z$ 
%r$ 
%j$ 
%b$ 
%Z$ 
%R$ 
%J$ 
%B$ 
%:$ 
%2$ 
%*$ 
%"$ 
%z# 
%r# 
%j# 
%b# 
%Z# 
%R# 
%J# 
%B# 
%:# 
%2# 
%*# 
%"# 
AWAVAUA
|$ H
l$ H
\$(H
t4H9\$(H
utA)
[]A\A]A^A_
T$(L
fffff.
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
AUATUSL
[]A\A]A^
u5E1
l$ L
t$(L
|$0H
%s: parse error: ignore entry at line %d.
%s: filesystem umounted, but mount(8) failed
%s: target is busy.
        (In some cases useful info about processes that use
         the device is found by lsof(8) or fuser(1))
%s: must be superuser to umount
%s: block devices not permitted on fs
 %1$s [-hV]
 %1$s -a [options]
 %1$s [options] <source> | <directory>
 -a, --all               umount all filesystems
 -c, --no-canonicalize   don't canonicalize paths
 -d, --detach-loop       if mounted loop device, also free this loop device
     --fake              dry run; skip the umount(2) syscall
 -f, --force             force unmount (in case of an unreachable NFS system)
 -i, --internal-only     don't call the umount.<type> helpers
 -n, --no-mtab           don't write to /etc/mtab
 -l, --lazy              detach the filesystem now, and cleanup all later
 -O, --test-opts <list>  limit the set of filesystems (use with -a)
 -r, --read-only         In case unmounting fails, try to remount read-only
 -t, --types <list>      limit the set of filesystem types
 -v, --verbose           say what is being done
 -h, --help     display this help and exit
 -V, --version  output version information and exit
noproc,nodevfs,nodevpts,nosysfs,norpc_pipefs,nonfsd
libmount context allocation failed
only root can use "--%s" option
failed to initialize libmount iterator
only root can use "--%s" option (effective UID is %u)
only root can do that (effective UID is %u)
%s: umount failed
%s: invalid block device
%s: not mounted
%s: can't write superblock
%s: not found
Usage:
Options:
For more details see %s.
umount(8)
/usr/share/locale
util-linux
hdilVv
only root can do that
failed to set options pattern
%s from %s (libmount %s
util-linux 2.21.1
acdfhilnrO:t:vV
%-25s: ignored
%-25s: successfully umounted
failed to set umount target
detach-loop
fake
force
help
internal-only
lazy
no-canonicalize
no-mtab
read-only
test-opts
types
verbose
version
_RLD_=
LANG=
BASH_ENV=
HOME=
IFS=
KRB_CONF=
LIBPATH=
MAIL=
NLSPATH=
SHELL=
SHLIB_PATH=
LANGUAGE=
;*3$"
umount.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.note.ABI-tag
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.interp
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.bss
.init
.rela.plt
.got.plt
.got
.text
.fini_array
.init_array
