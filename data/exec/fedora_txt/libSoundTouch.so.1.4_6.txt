L	yYQ
`^,I
Qg_(?
c4KQa
*8#g
0l`r
>GZ\
,4tz)8;]
 P=K
Qb{]
+{Fi
b9n?
~)8za
Q~bWa
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
_ZN10soundtouch8AAFilterD2Ev
_ZN10soundtouch8AAFilterD1Ev
_ZN10soundtouch8AAFilter15calculateCoeffsEv
_Znaj
_ZdaPv
__assert_fail
_ZN10soundtouch8AAFilter13setCutoffFreqEd
_ZN10soundtouch8AAFilter9setLengthEj
_ZN10soundtouch8AAFilterC2Ej
_ZN10soundtouch9FIRFilter11newInstanceEv
_ZN10soundtouch8AAFilterC1Ej
_ZNK10soundtouch8AAFilter8evaluateEPfPKfjj
_ZNK10soundtouch9FIRFilter8evaluateEPfPKfjj
_ZNK10soundtouch8AAFilter9getLengthEv
_ZNK10soundtouch9FIRFilter9getLengthEv
_ZN10soundtouch9FIRFilterD2Ev
_ZTVN10soundtouch9FIRFilterE
_ZN10soundtouch9FIRFilterD1Ev
_ZN10soundtouch9FIRFilterD0Ev
_ZdlPv
_ZNK10soundtouch9FIRFilter20evaluateFilterStereoEPfPKfj
_ZNK10soundtouch9FIRFilter18evaluateFilterMonoEPfPKfj
_ZSt19__throw_logic_errorPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
_ZN10soundtouch9FIRFilter15setCoefficientsEPKfjj
__cxa_allocate_exception
_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNSt13runtime_errorD1Ev
_ZTISt13runtime_error
__cxa_throw
__cxa_free_exception
_Unwind_Resume
__gxx_personality_v0
_ZN10soundtouch9FIRFilterC2Ev
_ZN10soundtouch9FIRFilterC1Ev
_ZN10soundtouch9FIRFilternwEj
_Z19detectCPUextensionsv
_Znwj
_ZN10soundtouch12FIRFilterSSEC1Ev
_ZTSN10soundtouch9FIRFilterE
_ZTIN10soundtouch9FIRFilterE
_ZTVN10__cxxabiv117__class_type_infoE
_ZNK10soundtouch16FIFOSampleBuffer8ptrBeginEv
_ZNK10soundtouch16FIFOSampleBuffer10numSamplesEv
_ZN10soundtouch16FIFOSampleBuffer14receiveSamplesEj
_ZNK10soundtouch16FIFOSampleBuffer7isEmptyEv
_ZN10soundtouch16FIFOSampleBuffer5clearEv
_ZN10soundtouch16FIFOSampleBuffer14receiveSamplesEPfj
_ZN10soundtouch16FIFOSampleBufferC2Ei
_ZTVN10soundtouch16FIFOSampleBufferE
_ZN10soundtouch16FIFOSampleBufferC1Ei
_ZN10soundtouch16FIFOSampleBufferD2Ev
_ZN10soundtouch16FIFOSampleBufferD1Ev
_ZN10soundtouch16FIFOSampleBuffer11setChannelsEi
_ZN10soundtouch16FIFOSampleBuffer6rewindEv
memmove
_ZNK10soundtouch16FIFOSampleBuffer11getCapacityEv
_ZN10soundtouch16FIFOSampleBuffer14ensureCapacityEj
_ZN10soundtouch16FIFOSampleBuffer10putSamplesEj
_ZN10soundtouch16FIFOSampleBuffer6ptrEndEj
_ZN10soundtouch16FIFOSampleBuffer10putSamplesEPKfj
_ZTSN10soundtouch14FIFOSamplePipeE
_ZTIN10soundtouch14FIFOSamplePipeE
_ZTSN10soundtouch16FIFOSampleBufferE
_ZTIN10soundtouch16FIFOSampleBufferE
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZN10soundtouch12FIRFilterSSED2Ev
_ZTVN10soundtouch12FIRFilterSSEE
_ZN10soundtouch12FIRFilterSSED1Ev
_ZN10soundtouch12FIRFilterSSED0Ev
_ZNK10soundtouch12FIRFilterSSE20evaluateFilterStereoEPfPKfj
_ZN10soundtouch12TDStretchSSED2Ev
_ZTVN10soundtouch12TDStretchSSEE
_ZN10soundtouch9TDStretchD2Ev
_ZN10soundtouch12TDStretchSSED1Ev
_ZN10soundtouch12TDStretchSSED0Ev
_ZNK10soundtouch12TDStretchSSE19calcCrossCorrStereoEPKfS2_
_ZNK10soundtouch13FIFOProcessor7isEmptyEv
_ZNK10soundtouch13FIFOProcessor8ptrBeginEv
_ZNK10soundtouch13FIFOProcessor10numSamplesEv
_ZN10soundtouch13FIFOProcessor14receiveSamplesEj
_ZN10soundtouch13FIFOProcessor14receiveSamplesEPfj
_ZN10soundtouch12FIRFilterSSEC2Ev
_ZN10soundtouch12FIRFilterSSE15setCoefficientsEPKfjj
_ZTSN10soundtouch12TDStretchSSEE
_ZTIN10soundtouch12TDStretchSSEE
_ZTIN10soundtouch9TDStretchE
_ZTSN10soundtouch12FIRFilterSSEE
_ZTIN10soundtouch12FIRFilterSSEE
_ZN10soundtouch9TDStretch10putSamplesEPKfj
_ZN10soundtouch9TDStretch5clearEv
_ZN10soundtouch9TDStretch19clearCrossCorrStateEv
_ZNK10soundtouch9TDStretch17calcCrossCorrMonoEPKfS2_
_ZN10soundtouch9TDStretch29seekBestOverlapPositionStereoEPKf
_ZN10soundtouch9TDStretch34seekBestOverlapPositionStereoQuickEPKf
_ZN10soundtouch9TDStretch27seekBestOverlapPositionMonoEPKf
_ZN10soundtouch9TDStretch32seekBestOverlapPositionMonoQuickEPKf
_ZNK10soundtouch9TDStretch13overlapStereoEPfPKf
_ZNK10soundtouch9TDStretch11overlapMonoEPfPKf
_ZN21RateTransposerInteger14resetRegistersEv
_ZN21RateTransposerInteger13transposeMonoEPfPKfj
_ZN19RateTransposerFloat14resetRegistersEv
_ZN19RateTransposerFloat13transposeMonoEPfPKfj
_ZN10soundtouch14RateTransposer7setRateEf
_ZN21RateTransposerInteger7setRateEf
_ZN19RateTransposerFloat15transposeStereoEPfPKfj
_ZN21RateTransposerInteger15transposeStereoEPfPKfj
_ZN10soundtouch14RateTransposernwEj
_ZN10soundtouch14RateTransposerC2Ev
_ZTVN10soundtouch14RateTransposerE
_ZN10soundtouch14RateTransposerC1Ev
_ZN10soundtouch14RateTransposerD2Ev
_ZN10soundtouch14RateTransposerD1Ev
_ZN21RateTransposerIntegerD2Ev
_ZTV21RateTransposerInteger
_ZN21RateTransposerIntegerD1Ev
_ZN21RateTransposerIntegerD0Ev
_ZN19RateTransposerFloatD2Ev
_ZTV19RateTransposerFloat
_ZN19RateTransposerFloatD1Ev
_ZN19RateTransposerFloatD0Ev
_ZN10soundtouch14RateTransposerD0Ev
_ZN10soundtouch14RateTransposer14enableAAFilterEi
_ZNK10soundtouch14RateTransposer17isAAFilterEnabledEv
_ZNK10soundtouch14RateTransposer11getAAFilterEv
_ZN10soundtouch14RateTransposer11setChannelsEi
_ZN21RateTransposerIntegerC2Ev
_ZN21RateTransposerIntegerC1Ev
_ZN19RateTransposerFloatC2Ev
_ZN19RateTransposerFloatC1Ev
_ZN10soundtouch14RateTransposer11newInstanceEv
_ZN10soundtouch14RateTransposer8upsampleEPKfj
_ZN10soundtouch14RateTransposer10downsampleEPKfj
_ZN10soundtouch14RateTransposer14processSamplesEPKfj
_ZN10soundtouch14RateTransposer10putSamplesEPKfj
_ZNK10soundtouch14RateTransposer7isEmptyEv
_ZN10soundtouch14RateTransposer5clearEv
_ZTSN10soundtouch13FIFOProcessorE
_ZTIN10soundtouch13FIFOProcessorE
_ZTSN10soundtouch14RateTransposerE
_ZTIN10soundtouch14RateTransposerE
_ZTS21RateTransposerInteger
_ZTI21RateTransposerInteger
_ZTS19RateTransposerFloat
_ZTI19RateTransposerFloat
__cxa_pure_virtual
_ZN10soundtouch10SoundTouchD2Ev
_ZTVN10soundtouch10SoundTouchE
_ZN10soundtouch10SoundTouchD1Ev
_ZN10soundtouch10SoundTouch5clearEv
_ZNK10soundtouch10SoundTouch21numUnprocessedSamplesEv
_ZN10soundtouch10SoundTouchD0Ev
_ZN10soundtouch10SoundTouch10putSamplesEPKfj
soundtouch_ac_test
__printf_chk
_ZN10soundtouch10SoundTouch16getVersionStringEv
_ZN10soundtouch10SoundTouch12getVersionIdEv
_ZN10soundtouch10SoundTouch11setChannelsEj
_ZN10soundtouch9TDStretch11setChannelsEi
_ZN10soundtouch10SoundTouch25calcEffectiveRateAndTempoEv
_ZN10soundtouch9TDStretch8setTempoEf
_ZN10soundtouch10SoundTouchC2Ev
_ZN10soundtouch9TDStretch11newInstanceEv
_ZN10soundtouch10SoundTouchC1Ev
_ZN10soundtouch10SoundTouch7setRateEf
_ZN10soundtouch10SoundTouch13setRateChangeEf
_ZN10soundtouch10SoundTouch8setTempoEf
_ZN10soundtouch10SoundTouch14setTempoChangeEf
_ZN10soundtouch10SoundTouch8setPitchEf
_ZN10soundtouch10SoundTouch15setPitchOctavesEf
_ZN10soundtouch10SoundTouch17setPitchSemiTonesEi
_ZN10soundtouch10SoundTouch17setPitchSemiTonesEf
_ZN10soundtouch10SoundTouch13setSampleRateEj
_ZN10soundtouch9TDStretch13setParametersEiiii
_ZN10soundtouch10SoundTouch5flushEv
_ZN10soundtouch9TDStretch10clearInputEv
_ZN10soundtouch10SoundTouch10setSettingEii
_ZNK10soundtouch9TDStretch13getParametersEPiS1_S1_S1_
_ZN10soundtouch9TDStretch15enableQuickSeekEi
_ZNK10soundtouch10SoundTouch10getSettingEi
_ZNK10soundtouch9TDStretch18isQuickSeekEnabledEv
_ZTSN10soundtouch10SoundTouchE
_ZTIN10soundtouch10SoundTouchE
_ZNK10soundtouch9TDStretch19calcCrossCorrStereoEPKfS2_
_ZTVN10soundtouch9TDStretchE
_ZN10soundtouch9TDStretchD1Ev
_ZN10soundtouch9TDStretchD0Ev
_ZN10soundtouch9TDStretch14clearMidBufferEv
memset
_ZN10soundtouch9TDStretch23seekBestOverlapPositionEPKf
_ZN10soundtouch9TDStretch17calcSeqParametersEv
_ZN10soundtouch9TDStretch22acceptNewOverlapLengthEi
_ZN10soundtouch9TDStretchnwEj
_ZN10soundtouch9TDStretch26precalcCorrReferenceStereoEv
_ZN10soundtouch9TDStretch24precalcCorrReferenceMonoEv
_ZN10soundtouch9TDStretch22calculateOverlapLengthEi
_ZN10soundtouch9TDStretchC2Ev
_ZN10soundtouch9TDStretchC1Ev
_ZN10soundtouch9TDStretch14processSamplesEv
_ZTSN10soundtouch9TDStretchE
_Z17disableExtensionsj
_ZN10soundtouch9BPMDetectD2Ev
_ZTVN10soundtouch9BPMDetectE
_ZN10soundtouch9BPMDetectD1Ev
_ZN10soundtouch9BPMDetectD0Ev
_ZN10soundtouch9BPMDetect8decimateEPfPKfi
_ZN10soundtouch9BPMDetect11updateXCorrEi
_ZN10soundtouch9BPMDetect12calcEnvelopeEPfi
sqrtf
_ZN10soundtouch9BPMDetect12inputSamplesEPfi
_ZN10soundtouch9BPMDetect4initEii
_ZN10soundtouch9BPMDetectC2Eii
_ZN10soundtouch9BPMDetectC1Eii
_ZN10soundtouch9BPMDetect6getBpmEv
_ZN10soundtouch10PeakFinderC1Ev
_ZN10soundtouch10PeakFinder10detectPeakEPKfii
_ZTSN10soundtouch9BPMDetectE
_ZTIN10soundtouch9BPMDetectE
_ZN10soundtouch10PeakFinderC2Ev
_ZNK10soundtouch10PeakFinder10findGroundEPKfii
_ZNK10soundtouch10PeakFinder17findCrossingLevelEPKffii
_ZNK10soundtouch10PeakFinder14calcMassCenterEPKfii
_ZN10soundtouch10PeakFinder13getPeakCenterEPKfi
libstdc++.so.6
libm.so.6
libc.so.6
__stack_chk_fail
libgcc_s.so.1
_edata
__bss_start
_end
libSoundTouch.so.1
GCC_3.0
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.0
GLIBC_2.3.4
CXXABI_1.3
GLIBCXX_3.4
GLIBCXX_3.4.21
D$ PU
d$,[^_]
UWVS
d$|[^_]
d$([
9|$ w
d$<[^_]
\$L)
d$,[^_]
D$,1
L$(w;
D$,e3
d$<[^_]
UWVS
l$pe
D$L1
D$Le3
d$\[^_]
D$49
D$49
UWVS
D$,1
UWVS
|$4s71
[^_]
UWVS
D$<1
D$<e3
d$L[^_]
D$$;D$
D$$;D$
UWVS
t$4s51
[^_]
D$L)
d$,[^_]
d$,1
[^_]
d$([
UWVS
[^_]
[^_]
Rlt*
Zp[^_]
d$([
Rlt(
|$ 1
Zt[^_]
[^_]
[^_]
UWVS
D$<1
D$ t
D$$;D$
D$$;D$
UWVS
d$,[^_]
~R;F
UWVS
d$L[^_]
UWVS
d$L[^_]
UWVS
d$<[^_]
4$t-
d$<[^_]
UWVS
T$Te
D$,1
D$,e3
d$<[^_]
|$@e
D$,1
D$,e3
d$0[^_
UWVS
d$,[^_]
d$,[^_]
d$$[^
d$([
[^_]
t$Te
D$<1
T$<e3
d$@[^_
L$X1
T$X1
T$@e
L$,1
T$,e3
d$8[
T$ t
[^_]
d$ [^_
~8;F
UWVS
D$<1
D$ ^
D$$;D$
D$$;D$
\$D1
[^_]
[^_]
;^$}5
D$$`
D$$;D$(t.
D$$`
D$$;D$(u
d$<[^_]
d$<[^_]
\$D1
[^_]
[^_]
;^$}5
D$$`
D$$;D$(t.
D$$`
D$$;D$(u
d$<[^_]
d$<[^_]
T$0~
UWVS
d$,[^_]
UWVS
d$<[^_]
d$,[^_]
UWVS
d$,[^_]
UWVS
l$D~i1
d$,[^_]
UWVS
;F ~+
[^_]
[^_]
UWVS
[^_]
D$,1
D$,e3
d$0[^_
~,;C
[^_]
UWVS
d$<[^_]
UWVS
D$(9D$X
d$<[^_]
AAFilter.cpp
length >= 2
length % 4 == 0
cutoffFreq >= 0
cutoffFreq <= 0.5
sum > 0
work[length/2] > 0
work[length/2 + 1] > -1e-6
work[length/2 - 1] > -1e-6
temp >= -32768 && temp <= 32767
void soundtouch::AAFilter::calculateCoeffs()
!	@O
FIRFilter.cpp
length != 0
src != __null
dest != __null
filterCoeffs != __null
newLength > 0
length == newLength
length > 0
lengthDiv8 * 8 == length
basic_string::_M_construct null not valid
FIR filter length not divisible by 8
numChannels == 1 || numChannels == 2
Error in FIRFilter::new: Don't use 'new FIRFilter', use 'newInstance' member instead!
uint soundtouch::FIRFilter::evaluate(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, uint, uint) const
virtual void soundtouch::FIRFilter::setCoefficients(const SAMPLETYPE*, uint, uint)
virtual uint soundtouch::FIRFilter::evaluateFilterMono(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, uint) const
virtual uint soundtouch::FIRFilter::evaluateFilterStereo(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, uint) const
N10soundtouch9FIRFilterE
@FIFOSampleBuffer.cpp
numChannels > 0
Couldn't allocate memory!
void soundtouch::FIFOSampleBuffer::setChannels(int)
soundtouch::FIFOSampleBuffer::FIFOSampleBuffer(int)
N10soundtouch14FIFOSamplePipeE
N10soundtouch16FIFOSampleBufferE
sse_optimized.cpp
source != __null
(length % 8) == 0
filterCoeffsAlign != __null
(overlapLength % 8) == 0
((ulong)filterCoeffsAlign) % 16 == 0
virtual uint soundtouch::FIRFilterSSE::evaluateFilterStereo(float*, const float*, uint) const
virtual double soundtouch::TDStretchSSE::calcCrossCorrStereo(const float*, const float*) const
N10soundtouch12TDStretchSSEE
N10soundtouch12FIRFilterSSEE
Error in RateTransoser::new: don't use "new TDStretch" directly, use "newInstance" to create a new instance instead!
nChannels == 1 || nChannels == 2
RateTransposer.cpp
nChannels > 0
tempBuffer.isEmpty()
pAAFilter
void soundtouch::RateTransposer::setChannels(int)
void soundtouch::RateTransposer::processSamples(const SAMPLETYPE*, uint)
void soundtouch::RateTransposer::downsample(const SAMPLETYPE*, uint)
N10soundtouch13FIFOProcessorE
N10soundtouch14RateTransposerE
21RateTransposerInteger
19RateTransposerFloat
ASoundTouch : Sample rate not defined
SoundTouch : Number of channels not defined
../../include/FIFOSamplePipe.h
SoundTouch.cpp
output == pTDStretch
rate > 1.0f
output == pRateTransposer
1.4.0
SoundTouch Version: %s
Illegal number of channels
output == __null
pOutput != __null
virtual void soundtouch::SoundTouch::putSamples(const SAMPLETYPE*, uint)
void soundtouch::SoundTouch::calcEffectiveRateAndTempo()
void soundtouch::FIFOProcessor::setOutPipe(soundtouch::FIFOSamplePipe*)
N10soundtouch10SoundTouchE
=TDStretch.cpp
newOverlapLength >= 0
overlapInMsec >= 0
Error in TDStretch::new: Don't use 'new TDStretch' directly, use 'newInstance' member instead!
offset + seekWindowLength <= (int)inputBuffer.numSamples()
void soundtouch::TDStretch::calculateOverlapLength(int)
void soundtouch::TDStretch::acceptNewOverlapLength(int)
void soundtouch::TDStretch::processSamples()
void soundtouch::TDStretch::setChannels(int)
N10soundtouch9TDStretchE
UUUUUU<@BPMDetect.cpp
decimateBy != 0
decimateBy > 0
2048 < decimateBy * 256
windowLen > windowStart
buffer->numSamples() >= (uint)(process_samples + windowLen)
float soundtouch::BPMDetect::getBpm()
void soundtouch::BPMDetect::init(int, int)
void soundtouch::BPMDetect::updateXCorr(int)
int soundtouch::BPMDetect::decimate(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, int)
N10soundtouch9BPMDetectE
9333?
>PeakFinder.cpp
peaklevel >= level
int soundtouch::PeakFinder::findCrossingLevel(const float*, float, int, int) const
;*2$"
zPLR
libSoundTouch.so.1.4.0.debug
7zXZ
YanY^
D!if
>*=V
n	<a
On4a
ZZh;
P[I~
9p3f
BH@=P
>_Ff
tS"&
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
