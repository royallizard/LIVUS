|gJS
__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
Perl_Imy_cxt_list_ptr
Perl_croak_nocontext
Perl_newSVsv
Perl_newSV
memset
strlen
Perl_hv_common_key_len
Perl_sv_setsv_flags
XS_Opcode_full_opset
Perl_Istack_sp_ptr
Perl_Imarkstack_ptr_ptr
Perl_Istack_base_ptr
Perl_sv_2mortal
Perl_croak_xs_usage
XS_Opcode_empty_opset
XS_Opcode_define_optag
Perl_Isv_yes_ptr
Perl_sv_2pv_flags
XS_Opcode_invert_opset
Perl_Imaxo_ptr
XS_Opcode_opmask
Perl_Iop_mask_ptr
XS_Opcode_opcodes
Perl_Iop_ptr
Perl_dowantarray
Perl_Istack_max_ptr
Perl_stack_grow
Perl_newSViv
XS_Opcode_opmask_add
Perl_safesyscalloc
Perl_warn_nocontext
XS_Opcode_opset_to_ops
Perl_get_op_descs
Perl_newSVpvn_flags
Perl_get_op_names
Perl_sv_2iv_flags
XS_Opcode_verify_opset
Perl_sv_newmortal
Perl_sv_setiv
Perl_mg_set
Perl_Icurpad_ptr
XS_Opcode__safe_call_sv
Perl_push_scope
Perl_save_vptr
Perl_warn
Perl_save_destructor
memcpy
Perl_Iendav_ptr
Perl_save_aptr
Perl_newSV_type
Perl_Idefstash_ptr
Perl_save_hptr
Perl_gv_stashsv
Perl_Icurstash_ptr
Perl_gv_fetchpvn_flags
Perl_sv_free
Perl_Iincgv_ptr
Perl_save_hash
Perl_gv_add_by_type
Perl_Isub_generation_ptr
Perl_Istashcache_ptr
Perl_hv_clear
Perl_Imarkstack_max_ptr
Perl_call_sv
Perl_pop_scope
Perl_markstack_grow
__stack_chk_fail
XS_Opcode__safe_pkg_prep
Perl_hv_name_set
Perl_Idefgv_ptr
XS_Opcode_opset
XS_Opcode_permit_only
XS_Opcode_opdesc
boot_Opcode
Perl_newSVpvn
Perl_sv_derived_from
Perl_upg_version
Perl_vcmp
Perl_newXS_flags
Perl_my_cxt_init
Perl_Iunitcheckav_ptr
Perl_Iscopestack_ix_ptr
Perl_call_list
Perl_form
Perl_get_sv
Perl_new_version
Perl_vstringify
Perl_newSVpvf
Perl_sv_free2
Perl_croak
libc.so.6
_edata
__bss_start
_end
GLIBC_2.4
GLIBC_2.2.5
%z: 
%r: 
%j: 
%b: 
%Z: 
%R: 
%J: 
%B: 
%:: 
%2: 
%*: 
%": 
%z9 
%r9 
%j9 
%b9 
%Z9 
%R9 
%J9 
%B9 
%:9 
%29 
%*9 
%"9 
ATSubH
=h3 
=O3 
fff.
d$ L
l$(L
t$0H
ffffff.
l$ H
l$ H
AUATUH
[]A\A]
ffffff.
AWAVAUATI
[]A\A]A^A_
AVAUATUH
D; |
,$[]A\A]A^
fffff.
AWAVAUATI
L)|$
twMc
D9 ~5H
([]A\A]A^A_
AUATI
Lc*H
Hc0H
[]A\A]
l$ H
D;0H
l$ L
d$(L
l$0L
t$8L
|$@H
B D#
AWAVAUI
ATUSH
D$(L
D$ H
L)d$
T$(L
;(}VA
T$ H
H[]A\A]A^A_
fff.
l$ L
t$(L
|$0H
AWAVAUATI
5_" 
D$ H
D$ H
H+(H
[]A\A]A^A_
Lc H
AUATUH
[]A\A]
ffffff.
4$E1
l$ L
d$(L
l$0H
<:tM<!t8
AWAVAUATUSH
Lc"H
D$(H
8!t]H
T$(A
T$(I
8[]A\A]A^A_
fffff.
AWAVI
AUATUSH
`8I)
T$0H
t$$L
8!tRH
T$HD
t$$L
T$HD
t$<I
l$0H
D$0H
X[]A\A]A^A_
AWAVAUI
ATUSH
D$0H
L$<9L$@
T$0H
L$0H
T$hH
\$ H
T$(f
;(}VA
T$ H
D$(H
T$hH
x[]A\A]A^A_
AWAVAUATUSH
D$ L
L$ A
T$HH
X[]A\A]A^A_
T$(L
D$0L
D$0H
T$(H
L$ H
D$8H
undefined
wrong type
wrong size
Invalid opset: %s
optagsv, mask
set_opset_bits opset %s %s
opset, desc = 0
opset, fatal = 0
Package, mask, codesv
PL_op_mask restored
main::
Package
main
Unknown operator tag "%s"
Unknown operator name "%s"
Unknown operator prefix "%s"
(opset)
safe, ...
Not a Safe object
Mask
XS_VERSION
bootstrap parameter
%s::%s
1.15
version
Opcode.c
Opcode::_safe_pkg_prep
Opcode::_safe_call_sv
Opcode::verify_opset
Opcode::invert_opset
Opcode::opset_to_ops
Opcode::opset
Opcode::permit_only
Opcode::deny
Opcode::deny_only
Opcode::permit
Opcode::opdesc
Opcode::define_optag
Opcode::empty_opset
Opcode::full_opset
Opcode::opmask_add
Opcode::opcodes
Opcode::opmask
opset_len %ld
:none
:all
Opcode tag "%s" already defined
Can't add to uninitialised PL_op_mask
opcodes in list context not yet implemented
panic: opcode "%s" value %d is invalid
set_opset_bits bit %2d (off=%d, bit=%d) %s %s
panic: invalid bitspec for "%s" (type %u)
Can't negate operators here ("%s")
panic: opcode %d (%s) out of range
%s object version %-p does not match %s%s%s%s %-p
Opcode.so.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rela.plt
.got.plt
.got
.text
