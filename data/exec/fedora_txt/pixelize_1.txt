td$-
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
g_snprintf
gegl_operation_area_filter_get_type
g_type_module_register_type
g_slice_alloc0
g_type_check_instance_cast
babl_format
gegl_operation_set_format
g_type_class_peek_parent
gegl_operation_get_type
g_type_check_class_cast
gegl_operation_filter_get_type
g_dgettext
gegl_operation_class_set_keys
gegl_param_spec_int
g_object_class_install_property
g_object_set_data_full
g_slice_free1
gegl_cl_is_accelerated
g_malloc0_n
gegl_buffer_get
g_free
gegl_buffer_set
gegl_operation_get_format
gegl_buffer_cl_iterator_new
gegl_buffer_cl_iterator_add_2
gegl_clSetKernelArg
gegl_buffer_cl_iterator_next
gegl_clEnqueueNDRangeKernel
gegl_cl_errstring
g_log
gegl_cl_get_command_queue
gegl_cl_compile_and_build
g_type_name
g_value_set_int
g_value_get_int
gegl_chant_get_type
gegl_module_query
gegl_module_register
libgmodule-2.0.so.0
libgio-2.0.so.0
libgobject-2.0.so.0
libgthread-2.0.so.0
libglib-2.0.so.0
libm.so.6
libpthread.so.0
libc.so.6
__stack_chk_fail
_edata
__bss_start
_end
pixelize.so
GLIBC_2.1.3
GLIBC_2.4
D$ $
t$8V
RVPW
UWVS
t$<V
Y]PW
Y]PW
,[^_]
D$Le
+D$\
+D$L
+D$$
L$D9L$
;|$P~x
T$8)
\$T;L$(~
9D$T
;D$X|
\$8;D$p
+D$@
T$ +D$<
;\$hu
9L$lu
[^_]
YXWV
t$Lj
T$ R
t$(V
D$<P
t$(j
|$<W
L$ Qj
T$$Rj
L$TQP
t$ j
t$$j
T$<RP
ZYWP
0[^_
ZYWP
0[^_
GeglChantpixelize.c
RaGaBaA float
input
output
gegl-0.2
description
gegl:pixelize
name
blur
categories
Width of blocks in pixels
Block Width
size_x
Height of blocks in pixels
Block Height
size_y
chant-data
calc_block_color
kernel_pixelise
GEGL-pixelize.c
property
GEGL-../../gegl/gegl-chant.h
Simplify image into an array of solid-colored squares
__kernel void calc_block_color(__global float4 *in,                   
                             __global float4 *out,                    
                             int xsize,                               
                             int ysize,                               
                             int roi_x,                               
                             int roi_y,                               
                             int line_width,                          
                             int block_count_x )                      
{                                                                     
    int gidx = get_global_id(0);                                      
    int gidy = get_global_id(1);                                      
    int cx = roi_x / xsize + gidx;                                    
    int cy = roi_y / ysize + gidy;                                    
                                                                      
    float weight   = 1.0f / (xsize * ysize);                          
                                                                      
    int px = cx * xsize + xsize - roi_x;                              
    int py = cy * ysize + ysize - roi_y;                              
                                                                      
    int i,j;                                                          
    float4 col = 0.0f;                                                
    for (j = py;j < py + ysize; ++j)                                  
    {                                                                 
        for (i = px;i < px + xsize; ++i)                              
        {                                                             
            col += in[j * line_width + i];                            
        }                                                             
    }                                                                 
    out[gidy * block_count_x + gidx] = col * weight;                  
                                                                      
}                                                                     
                                                                      
__kernel void kernel_pixelise (__global float4 *in,                   
                             __global float4 *out,                    
                             int xsize,                               
                             int ysize,                               
                             int roi_x,                               
                             int roi_y,                               
                             int block_count_x)                       
{                                                                     
    int gidx = get_global_id(0);                                      
    int gidy = get_global_id(1);                                      
                                                                      
    int src_width  = get_global_size(0);                              
    int cx = (gidx + roi_x) / xsize - roi_x / xsize;                  
    int cy = (gidy + roi_y) / ysize - roi_y / ysize;                  
    out[gidx + gidy * src_width] = in[cx + cy * block_count_x];       
}                                                                     
[OpenCL] Error in gegl:pixelise: %s
%s:%d: invalid %s id %u for "%s" of type '%s' in '%s'
;*2$"
gcc 8.0.1 20180218
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
pixelize.so-0.2.0-38.fc28.i386.debug
7zXZ
+*Q~
K+%.a
w_u2
t5sM
$r%P
d$`o
+Z,v
QCE6
,A/v
AEO!^s8
[Xql?
r7Plq
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.data.rel.ro
.dynamic
.got
.bss
.gnu.build.attributes
.gnu_debuglink
.gnu_debugdata
