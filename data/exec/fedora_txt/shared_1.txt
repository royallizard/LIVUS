z\X%
@@B-
!=@[3
__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
sharedsv_scalar_mg_clear
sharedsv_scalar_mg_dup
sharedsv_array_mg_dup
recursive_lock_release
pthread_mutex_lock
pthread_mutex_unlock
pthread_cond_signal
Perl_croak_nocontext
Perl_sharedsv_unlock
SV_to_sharedsv
Perl_sv_2iv_flags
sharedsv_elem_mg_dup
Perl_sharedsv_cond_timedwait
pthread_cond_timedwait
Perl_sharedsv_find
Perl_mg_find
sharedsv_scalar_vtbl
sharedsv_array_vtbl
Perl_sv_derived_from
XS_threads__shared_cond_broadcast_enabled
Perl_Tstack_sp_ptr
Perl_Tmarkstack_ptr_ptr
Perl_Tstack_base_ptr
Perl_ckwarn
pthread_cond_broadcast
Perl_warner
Perl_croak
XS_threads__shared_cond_signal_enabled
XS_threads__shared_cond_timedwait_enabled
Perl_Top_ptr
Perl_Tcurpad_ptr
pthread_cond_wait
Perl_Isv_undef_ptr
Perl_sv_newmortal
Perl_sv_2nv
Perl_sv_setiv
Perl_mg_set
XS_threads__shared_cond_wait_enabled
XS_threads__shared__refcnt
Perl_newSViv
Perl_sv_2mortal
Perl_warn
XS_threads__shared__id
sharedsv_scalar_store
PL_sharedsv_space
Perl_Gthr_key_ptr
pthread_setspecific
Perl_push_scope
Perl_Ttmps_floor_ptr
Perl_save_int
Perl_Ttmps_ix_ptr
Perl_newRV
Perl_sv_setsv_flags
Perl_sv_free
Perl_pop_scope
Perl_free_tmps
Perl_newSVpv
recursive_lock_acquire
Perl_save_destructor_x
XS_threads__shared_bless
Perl_gv_stashpvn
Perl_sv_bless
PL_sharedsv_lock
Perl_sv_2pv_flags
Perl_Tcurcop_ptr
Perl_gv_stashpv
XS_threads__shared__tie_NEXTKEY
Perl_hv_iternext
Perl_hv_iterkey
XS_threads__shared__tie_FIRSTKEY
Perl_hv_iterinit
XS_threads__shared__tie_EXISTS
Perl_hv_exists
Perl_Isv_yes_ptr
Perl_Isv_no_ptr
Perl_av_exists
XS_threads__shared__tie_STORESIZE
Perl_av_fill
XS_threads__shared__tie_EXTEND
Perl_av_extend
Perl_sharedsv_lock
XS_threads__shared_lock_enabled
Perl_sharedsv_locksv
sharedsv_array_mg_copy
sharedsv_elem_vtbl
Perl_sv_magicext
sharedsv_array_mg_CLEAR
Perl_hv_clear
Perl_av_clear
sharedsv_array_mg_FETCHSIZE
Perl_av_len
Perl_sharedsv_free
sharedsv_array_mg_free
sharedsv_elem_mg_free
sharedsv_scalar_mg_free
recursive_lock_destroy
pthread_mutex_destroy
pthread_cond_destroy
sharedsv_shared_mg_free
recursive_lock_init
memset
pthread_mutex_init
pthread_cond_init
Perl_sharedsv_init
perl_alloc
perl_construct
Perl_Ilockhook_ptr
Perl_Isharehook_ptr
Perl_sharedsv_share
boot_threads__shared
XS_threads__shared__tie_PUSH
Perl_newXS
XS_threads__shared__tie_UNSHIFT
XS_threads__shared__tie_POP
XS_threads__shared__tie_SHIFT
Perl_sv_setpv
XS_threads__shared_share
Perl_form
Perl_get_sv
Perl_sharedsv_associate
Perl_newSV
Perl_sv_setref_iv
Perl_sv_unmagic
Perl_sv_upgrade
malloc
sharedsv_shared_vtbl
Perl_av_shift
Perl_av_pop
Perl_av_unshift
Perl_newSVsv
Perl_av_store
Perl_av_push
sharedsv_elem_mg_STORE
Perl_hv_fetch
Perl_av_fetch
sharedsv_elem_mg_FETCH
sharedsv_scalar_mg_set
sharedsv_scalar_mg_get
sharedsv_elem_mg_DELETE
Perl_hv_delete
Perl_av_delete
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
GLIBC_2.1.3
GLIBC_2.0
GLIBC_2.3.2
[^_]
[^_]
L[^_]
@	@uE
,[^_]
[^_]
[^_]
[^_]
[^_]
<[^_]
<[^_]
<[^_]
<[^_]
,[^_]
,[^_]
[^_]
,[^_]
[^_]
,[^_]
[^_]
[^_]
L[^_]
<[^_]
<[^_]
,[^_]
,[^_]
L[^_]
L[^_]
[^_]
@	@t
[^_]
[^_]
@	@u
[^_]
shared.xs
panic: cond_timedwait
threads::shared::tie
panic: COND_WAIT (%d) [%s:%d]
%_ s=%p has no shared SV
%_ is not shared
panic: COND_INIT (%d) [%s:%d]
XS_VERSION
%s::%s
0.94
bootstrap parameter
shared.c
threads::shared::tie::PUSH
threads::shared::tie::UNSHIFT
threads::shared::tie::POP
threads::shared::tie::SHIFT
threads::shared::tie::EXTEND
threads::shared::tie::EXISTS
threads::shared::tie::NEXTKEY
threads::shared::_id
threads::shared::_refcnt
threads::shared::share
threads::shared::lock_enabled
\[$@%];\[$@%]
\[$@%]$;\[$@%]
threads::shared::bless
Cannot share globs yet
Cannot share subs yet
panic: MUTEX_LOCK (%d) [%s:%d]
panic: MUTEX_UNLOCK (%d) [%s:%d]
panic: COND_SIGNAL (%d) [%s:%d]
Usage: threads::shared::cond_broadcast_enabled(ref)
Argument to cond_broadcast needs to be passed as ref
cond_broadcast can only be used on shared values
cond_broadcast() called on unlocked variable
panic: COND_BROADCAST (%d) [%s:%d]
Usage: threads::shared::cond_signal_enabled(ref)
Argument to cond_signal needs to be passed as ref
cond_signal can only be used on shared values
cond_signal() called on unlocked variable
Usage: threads::shared::cond_timedwait_enabled(ref_cond, abs, ref_lock= 0)
Argument to cond_timedwait needs to be passed as ref
cond_timedwait can only be used on shared values
cond_timedwait lock needs to be passed as ref
cond_timedwait lock must be a shared value
You need a lock before you can cond_wait
Usage: threads::shared::cond_wait_enabled(ref_cond, ref_lock= 0)
Argument to cond_wait needs to be passed as ref
cond_wait can only be used on shared values
cond_wait lock needs to be passed as ref
cond_wait lock must be a shared value
Usage: threads::shared::_refcnt(ref)
Usage: threads::shared::_id(ref)
panic: pthread_setspecific (%d) [%s:%d]
Invalid value for shared scalar
Usage: threads::shared::bless(ref, ...)
Attempt to bless into a reference
Explicit blessing to '' (assuming package main)
Usage: threads::shared::tie::NEXTKEY(shared, oldkey)
Usage: threads::shared::tie::FIRSTKEY(shared)
Usage: threads::shared::tie::EXISTS(shared, index)
Usage: threads::shared::tie::STORESIZE(shared, count)
Usage: threads::shared::tie::EXTEND(shared, count)
Usage: threads::shared::lock_enabled(ref)
Argument to lock needs to be passed as ref
lock can only be used on shared values
panic: MUTEX_DESTROY (%d) [%s:%d]
panic: COND_DESTROY (%d) [%s:%d]
panic: MUTEX_INIT (%d) [%s:%d]
%s object version %s does not match %s%s%s%s %_
threads::shared::tie::STORESIZE
threads::shared::tie::FIRSTKEY
threads::shared::cond_wait_enabled
threads::shared::cond_timedwait_enabled
threads::shared::cond_signal_enabled
threads::shared::cond_broadcast_enabled
Usage: threads::shared::tie::SHIFT(shared)
Usage: threads::shared::tie::POP(shared)
Usage: threads::shared::tie::UNSHIFT(shared, ...)
Usage: threads::shared::tie::PUSH(shared, ...)
Usage: threads::shared::share(ref)
Argument to share needs to be passed as ref
(knN
shared.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
