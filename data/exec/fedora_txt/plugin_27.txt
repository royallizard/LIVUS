03hG
;yhG
ruhG
__gmon_start__
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
value_peek_string
complex_from_string
value_get_as_float
go_complex_real
go_complex_add
abort
go_complex_mul
value_new_error_NUM
__stack_chk_fail
value_new_float
complex_invalid_p
go_complex_real_p
complex_to_string
value_new_string_nocopy
function_iterate_argument_values
go_complex_zero_p
go_complex_pow
value_new_error_DIV0
go_complex_div
go_complex_init
value_new_error_VALUE
gsl_complex_arccoth
gsl_complex_arccsch
gsl_complex_arcsech
gsl_complex_arctanh
gsl_complex_arccosh
gsl_complex_arcsinh
gsl_complex_arccot
gsl_complex_arccsc
gsl_complex_arcsec
gsl_complex_arctan
gsl_complex_arccos
gsl_complex_arcsin
gsl_complex_coth
gsl_complex_csch
gsl_complex_sech
gsl_complex_tanh
gsl_complex_cosh
gsl_complex_sinh
go_complex_tan
gsl_complex_inverse
go_complex_sin
go_complex_cos
gsl_complex_negative
go_complex_sub
go_complex_sqrt
value_dup
go_complex_ln
go_complex_scale_real
go_complex_exp
go_complex_conj
go_complex_angle
go_complex_mod
complex_functions
go_plugin_header
go_plugin_depends
hypot
atan
log1p
acosh
asin
acos
atan2
sincos
atanh
libm.so.6
libc.so.6
_edata
__bss_start
_end
plugin.so
GLIBC_2.2.5
GLIBC_2.4
=Y~ 
fffff.
fffff.
D$(1
(tSH
L$(dH3
0[]A\
D$(1
(t9H
L$(dH3
D$(1
D$ j
L$(dH3
8[]A\A]
t$ H
fff.
D$ jdH
D$(1
L$(dH3
8[]A\A]
t$ H
AVAUI
D$H1
t$ I
l$0L
L$HdH3
P[]A\A]A^
AUATUH
D$H1
l$ H
\$0L
L$HdH3
P[]A\A]A^
D$(1
L$(dH3
0[]A\
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
\$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
\$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
\$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
AVAUI
ATUH
D$H1
t$ H
\$0L
L$HdH3
P[]A\A]A^
L$81
l$ H
L$8dH3
D$(1
(t9H
L$(dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$81
l$ H
L$8dH3
L$(1
L$(dH3
L$(1
L$(dH3
ffffff.
d$ f
d$ f
\-((
T$(f
t$Hf
D$0f
D$ f
T$(f
\$@f
T$(f
T$(f
d$0f
d$0f
D$ f
T$8f
D$ f
t$Xf
D$@f
XD$ 
D$0f
T$8f
D$ f
\$ f
T$ f
ffffff.
ffff.
t$ H
t$ H
T$(f
fff.
fffff.
complex
ff|s
imabs
imaginary
imargument
imconjugate
imcos
imdiv
imexp
imln
imlog10
imlog2
impower
imreal
imsin
imsqrt
imsub
imsum
iminv
imneg
imtan
improduct
imsec
imcsc
imcot
imsinh
imcosh
imtanh
imsech
imcsch
imcoth
imarcsin
imarccos
imarctan
imarcsec
imarccsc
imarccot
imarcsinh
imarccosh
imarctanh
imarcsech
imarccsch
imarccoth
z1:a complex number
z2:a complex number
=IMSUM("2-4j","9-j")
IMSUB
=IMPRODUCT("2-j","4-2j")
IMDIV
=IMSUB("3-j","2+j")
IMSUM
z:a complex number
=IMSQRT("1+j")
IMPOWER
=IMARCCOTH("1+j")
IMARCSECH,IMARCCSCH
=IMARCCSCH("1+j")
IMARCSECH,IMARCCOTH
=IMARCSECH("1+j")
IMARCCSCH,IMARCCOTH
=IMARCTANH("1+j")
IMARCSINH,IMARCCOSH
=IMARCCOSH("1+j")
IMARCSINH,IMARCTANH
=IMARCSINH("1+j")
IMARCCOSH,IMARCTANH
=IMARCCOT("1+j")
IMARCSEC,IMARCCSC
=IMARCCSC("1+j")
IMARCSEC,IMARCCOT
=IMARCSEC("1+j")
IMARCCSC,IMARCCOT
=IMARCTAN("1+j")
IMARCSIN,IMARCCOS
=IMARCCOS("1+j")
IMARCSIN,IMARCTAN
=IMARCSIN("1+j")
IMARCCOS,IMARCTAN
=IMCOTH("1+j")
IMSECH,IMCSCH
=IMCSCH("1+j")
IMSECH,IMCOTH
=IMSECH("1+j")
IMCSCH,IMCOTH
=IMTANH("1+j")
IMSINH,IMCOSH
=IMCOSH("1+j")
IMSINH,IMTANH
=IMSINH("1+j")
IMCOSH,IMTANH
=IMSIN("1+j")
IMCOS,IMTAN
=IMDIV("2-j","2+j")
IMPRODUCT
=IMPOWER("4-j",2)
IMSQRT
=IMLOG10("3-j")
IMLN,IMLOG2
=IMLOG2("3-j")
IMLN,IMLOG10
=IMLN("3-j")
IMEXP,IMLOG2,IMLOG10
=IMARGUMENT("2-j")
=IMEXP("2-i")
=IMEXP("2+j")
IMLN
=IMCOT("2-i")
=IMCOT("2+j")
IMSEC,IMCSC
IMCSC(@{z}) = 1/IMSIN(@{z}).
=IMCSC("2-j")
IMSEC,IMCOT
IMSEC(@{z}) = 1/IMCOS(@{z}).
=IMSEC("2-j")
IMCSC,IMCOT
=IMTAN("2-j")
IMSIN,IMCOS
=IMCOS("1+j")
IMSIN,IMTAN
=IMNEG("1-j")
=IMINV("1-j")
=IMCONJUGATE("1-j")
IMAGINARY,IMREAL
=IMREAL("132-j")
IMAGINARY
=IMABS("2-j")
=IMAGINARY("132-j")
x:real part
y:imaginary part
=COMPLEX(1,-1)
goffice
gnumeric
1.12.8
IMSUM:the sum of the given complex numbers
If any of @{z1}, @{z2},... is not a valid complex number, #VALUE! is returned.
This function is Excel compatible.
IMPRODUCT:the product of the given complex numbers
IMSUB:the difference of two complex numbers
If @{z1} or @{z2} is not a valid complex number, #VALUE! is returned.
IMSQRT:the square root of the complex number @{z}
If @{z} is not a valid complex number, #VALUE! is returned.
IMARCCOTH:the complex hyperbolic arccotangent of the complex number @{z}
IMARCCSCH:the complex hyperbolic arccosecant of the complex number @{z}
IMARCSECH:the complex hyperbolic arcsecant of the complex number @{z}
IMARCTANH:the complex hyperbolic arctangent of the complex number @{z}
IMARCTANH returns the complex hyperbolic arctangent of the complex number @{z}. The branch cuts are on the real axis, less than -1 and greater than 1.
IMARCCOSH:the complex hyperbolic arccosine of the complex number @{z}
IMARCCOSH returns the complex hyperbolic arccosine of the complex number @{z}. The branch cut is on the real axis, less than 1.
IMARCSINH:the complex hyperbolic arcsine of the complex number @{z}
IMARCSINH returns the complex hyperbolic arcsine of the complex number @{z}.  The branch cuts are on the imaginary axis, below -i and above i.
IMARCCOT:the complex arccotangent of the complex number @{z}
IMARCCSC:the complex arccosecant of the complex number @{z}
IMARCSEC:the complex arcsecant of the complex number @{z}
IMARCTAN:the complex arctangent of the complex number 
IMARCTAN returns the complex arctangent of the complex number @{z}. The branch cuts are on the imaginary axis, below -i and above i.
IMARCCOS:the complex arccosine of the complex number 
IMARCCOS returns the complex arccosine of the complex number @{z}. The branch cuts are on the real axis, less than -1 and greater than 1.
IMARCSIN:the complex arcsine of the complex number @{z}
IMARCSIN returns the complex arcsine of the complex number @{z}. The branch cuts are on the real axis, less than -1 and greater than 1.
IMCOTH:the hyperbolic cotangent of the complex number @{z}
IMCSCH:the hyperbolic cosecant of the complex number @{z}
IMSECH:the hyperbolic secant of the complex number @{z}
IMTANH:the hyperbolic tangent of the complex number @{z}
IMCOSH:the hyperbolic cosine of the complex number @{z}
IMSINH:the hyperbolic sine of the complex number @{z}
IMSIN:the sine of the complex number @{z}
IMDIV:the quotient of two complex numbers @{z1}/@{z2}
IMPOWER:the complex number @{z1} raised to the @{z2}th power
IMLOG10:the base-10 logarithm of the complex number @{z}
IMLOG2:the base-2 logarithm of the complex number @{z}
IMLN:the natural logarithm of the complex number @{z}
The result will have an imaginary part between -
 and +
The natural logarithm is not uniquely defined on complex numbers. You may need to add or subtract an even multiple of 
 to the imaginary part.
IMARGUMENT:the argument theta of the complex number @{z} 
The argument theta of a complex number is its angle in radians from the real axis.
IMEXP:the exponential of the complex number @{z}
IMCOT:the cotangent of the complex number @{z}
IMCOT(@{z}) = IMCOS(@{z})/IMSIN(@{z}).
IMCSC:the cosecant of the complex number @{z}
IMSEC:the secant of the complex number @{z}
IMTAN:the tangent of the complex number @{z}
IMCOS:the cosine of the complex number @{z}
IMNEG:the negative of the complex number @{z}
IMINV:the reciprocal, or inverse, of the complex number @{z}
IMCONJUGATE:the complex conjugate of the complex number @{z}
IMREAL:the real part of the complex number @{z}
IMABS:the absolute value of the complex number @{z}
IMAGINARY:the imaginary part of the complex number @{z}
COMPLEX:a complex number of the form @{x} + @{y}@{i}
i:the suffix for the complex number, either "i" or "j"; defaults to "i"
If @{i} is neither "i" nor "j", COMPLEX returns #VALUE!
munG
;*3$"
plugin.so.debug
7zXZ
!x5PX
c|-NI
8:sE
!`]A
ob\B
1i~[
"}`,
Fd2k
Ak8Y
<IE]
('/<
PQc*7!
c	sB
,&YG
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.bss
.gnu_debuglink
.gnu_debugdata
