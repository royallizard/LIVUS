__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
g_snprintf
gegl_operation_area_filter_get_type
g_type_module_register_type
g_slice_alloc0
g_type_check_instance_cast
babl_format
gegl_operation_set_format
g_type_class_peek_parent
gegl_operation_get_type
g_type_check_class_cast
gegl_operation_filter_get_type
g_dgettext
gegl_operation_class_set_keys
g_param_spec_boolean
g_object_class_install_property
g_object_set_data_full
g_slice_free1
gegl_operation_get_required_for_output
gegl_cl_is_accelerated
gegl_operation_get_format
gegl_buffer_cl_iterator_new
gegl_buffer_cl_iterator_add_2
gegl_buffer_cl_iterator_next
gegl_clSetKernelArg
gegl_cl_errstring
g_log
g_malloc0_n
gegl_buffer_get
gegl_buffer_set
g_free
gegl_clEnqueueNDRangeKernel
gegl_cl_get_command_queue
gegl_cl_compile_and_build
g_type_name
g_value_set_boolean
g_value_get_boolean
gegl_chant_get_type
gegl_module_query
gegl_module_register
libgmodule-2.0.so.0
libgio-2.0.so.0
libgobject-2.0.so.0
libgthread-2.0.so.0
libglib-2.0.so.0
libm.so.6
libpthread.so.0
libc.so.6
__stack_chk_fail
_edata
__bss_start
_end
edge-sobel.so
GLIBC_2.1.3
GLIBC_2.4
D$8$
UWVS
d$<[^_]
[^_]
d$0[^_
d$0[^_
d$0[^_
d$0[^_
d$0[^_
d$0[^_
d$0[^_
d$0[^_
GeglChantedge-sobel.c
RGBA float
input
output
gegl-0.2
description
edge-detect
categories
gegl:edge-sobel
name
Horizontal
horizontal
Vertical
vertical
Keep Signal
keep_signal
chant-data
kernel_edgesobel
GEGL-edge-sobel.c
property
../../gegl/gegl-chant.h:505
GEGL-../../gegl/gegl-chant.h
../../gegl/gegl-chant.h:622
Specialized direction-dependent edge detection
#define SOBEL_RADIUS 1                                                
kernel void kernel_edgesobel(global float4 *in,                       
                             global float4 *out,                      
                             const int horizontal,                    
                             const int vertical,                      
                             const int keep_signal)                   
{                                                                     
    int gidx = get_global_id(0);                                      
    int gidy = get_global_id(1);                                      
                                                                      
    float4 hor_grad = 0.0f;                                           
    float4 ver_grad = 0.0f;                                           
    float4 gradient = 0.0f;                                           
                                                                      
    int dst_width = get_global_size(0);                               
    int src_width = dst_width + SOBEL_RADIUS * 2;                     
                                                                      
    int i = gidx + SOBEL_RADIUS, j = gidy + SOBEL_RADIUS;             
    int gid1d = i + j * src_width;                                    
                                                                      
    float4 pix_fl = in[gid1d - 1 - src_width];                        
    float4 pix_fm = in[gid1d     - src_width];                        
    float4 pix_fr = in[gid1d + 1 - src_width];                        
    float4 pix_ml = in[gid1d - 1            ];                        
    float4 pix_mm = in[gid1d                ];                        
    float4 pix_mr = in[gid1d + 1            ];                        
    float4 pix_bl = in[gid1d - 1 + src_width];                        
    float4 pix_bm = in[gid1d     + src_width];                        
    float4 pix_br = in[gid1d + 1 + src_width];                        
                                                                      
    if (horizontal)                                                   
    {                                                                 
        hor_grad +=                                                   
            - 1.0f * pix_fl + 1.0f * pix_fr                           
            - 2.0f * pix_ml + 2.0f * pix_mr                           
            - 1.0f * pix_bl + 1.0f * pix_br;                          
    }                                                                 
    if (vertical)                                                     
    {                                                                 
        ver_grad +=                                                   
            - 1.0f * pix_fl - 2.0f * pix_fm                           
            - 1.0f * pix_fr + 1.0f * pix_bl                           
            + 2.0f * pix_bm + 1.0f * pix_br;                          
    }                                                                 
                                                                      
    if (horizontal && vertical)                                       
    {                                                                 
        gradient = sqrt(                                              
            hor_grad * hor_grad +                                     
            ver_grad * ver_grad) / 1.41f;                             
    }                                                                 
    else                                                              
    {                                                                 
        if (keep_signal)                                              
            gradient = hor_grad + ver_grad;                           
        else                                                          
            gradient = fabs(hor_grad + ver_grad);                     
    }                                                                 
                                                                      
    gradient.w = pix_mm.w;                                            
                                                                      
    out[gidx + gidy * dst_width] = gradient;                          
}                                                                     
[OpenCL] Error in gegl:edge-sobel: %s
%s: invalid %s id %u for "%s" of type '%s' in '%s'
;*2$"
edge-sobel.so.debug
7zXZ
;CVp
|,3l
HWr0
vm(L[
5:R&f
 86Z
qsH]
?|$[
#6	\
.o5'
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.bss
.gnu_debuglink
.gnu_debugdata
