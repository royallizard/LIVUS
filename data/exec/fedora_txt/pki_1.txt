/lib64/ld-linux-x86-64.so.2
libstrongswan.so.0
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
chunk_increment
options_create
container_type_names
library_init
enumerator_create_empty
strerror_safe
mem_cred_create
library_deinit
crl_reason_names
chunk_create_clone
hash_algorithm_short_names
enumerator_create_filter
identification_create_from_string
dbg_default_set_level
asn1_oid_from_string
_fini
callback_cred_create_shared
asn1_known_oid
key_type_names
oid_names
linked_list_create
certificate_type_names
asn1_oid_to_string
chunk_from_fd
enum_from_name_as_int
identification_create_from_encoding
shared_key_create
asn1_to_time
rng_allocate_bytes_not_zero
chunk_empty
chunk_from_hex
libc.so.6
__printf_chk
fopen
optind
__strdup
puts
__stack_chk_fail
putchar
stdin
strftime
localtime_r
strtol
feof
strlen
__errno_location
strptime
__fprintf_chk
stdout
fputc
fclose
malloc
getpass
optarg
stderr
__snprintf_chk
getopt_long
fwrite
fread
__memcpy_chk
strchr
mktime
__cxa_finalize
__libc_start_main
ferror
free
__cxa_atexit
_edata
__bss_start
_end
/usr/lib64/strongswan
GLIBC_2.4
GLIBC_2.2.5
GLIBC_2.3.4
AUATA
[]A\A]
fffff.
fffff.
fffff.
AUATM
D$H1
L$HdH3
X[]A\A]
AWAVI
AUATM
\$ L
D$X1
u)H+T$
L$XdH3
h[]A\A]A^A_
vu_H
Bx+A
L$ H
AUATI
(t#H
[]A\A]
4RHi
fffff.
u"Hc
AWAVE1
AUATA
USE1
D$81
L$8dH3
H[]A\A]A^A_
P8j61
AVj5ATj4L
P8j61
AWAVAUATUSH
[]A\A]A^A_
T$HH
D$0H
L$PH
T$`L
t$XH
|$hL
D$pH
D$(tcH
D$(H
D$ H
D$@H
L$ H
D$0H
T$ H
D$ H
T$0H
D$PH
	t\H
D$PH
D$0H
D$(toH
D$(H
D$(H
D$ H
D$H1
D$@H
D$@H
t$ H
D$ H
D$xM
D$0H
D$0H
D$PH
D$0H
T$ H
D$0H
D$ H
P8Pj6
t$Xj
t$`j
t$hj
Pj#AWj
|$@1
|$@H
P8U1
D$xM
P8V1
_AXH
P8AQ1
AZA[
D$PH
t$Xj
t$`j
t$hj
Pj#AWj
AVAUA
ATUE1
D$(1
T$(dH3
0[]A\A]A^
P8j61
D$ L
L$(L
|$ H
AWAVA
AUATE1
USE1
D$(1
t$(dH34%(
8[]A\A]A^A_
P8j61
P8j61
D$ L
L$(L
|$ H
AWAVE1
AUATE1
D$X1
l$(L
l$0L
D$$H
D$(H
t$(H
T$(H
T$8H
L$XdH3
h[]A\A]A^A_
|$(H
P8j6
D$$L
AVAUj&Sj
t$$H
T$8L
t$@1
t$$H
|$0H
P8j61
D$PL
T$ L
|$PI
AWAVAUATUSH
D$xH
[]A\A]A^A_
T$HH
L$0H
T$@L
t$8H
|$HL
|$ 1
t$xH
D$PM
\$XH
P8j6
D$|L
t$Pj
t$Xj
D$(H
D$ H
\$`H
P8j61
P8P1
AWAVA
AUATA
USE1
[]A\A]A^A_
t$p1
P8j61
l$0H
d$ H
D$0H9D$ 
D$(H9D$ H
t$pH
D$pH
T$8H
D$PH
D$PE
T$Hu
T$8H
T$8H
d$XH
D$XH
L$XH
L$XH
D$XH
l$`A
D$`H
D$`H
D$pH
T$xt
D$pH
T$xt
T$@H
t$pH
D$pH
L$pH
t$xt
|$pH
T$xH
D$pH
l$`H
D$`H
D$hH
T$`H
T$`H
D$hH
D$`H
D$XH
D$XE
d$PA
D$hH
T$`H
T$`H
D$HH
|$pH
D$pH
AWAVI
AUATI
D$HH
[]A\A]A^A_
ffffff.
AWAV1
AUATUSH
D$pH
D$xH
[]A\A]A^A_
L$@H
T$PL
t$HH
|$XL
t$pH
T$xH
D$81
P0E1
D$hL
T$0M
D$`M
T$0L
D$ H
D$8H
T$0H
D$ H
T$(H
D$0H
P8j6AWAVj%ATj
Sj$ASL
AQAPA
\$8L
T$ t
T$ H
|$0L
T$ H
T$ M
T$0H
T$0tLH
T$0H
T$0H
T$0M
|$ 1
|$ H
P8P1
t$ H
t$ H
AWAVE1
AUATE1
l$XH
T$hH
D$`H
D$pH
D$DH
D$0H
D$PH
D$8H
[]A\A]A^A_
T$8H
t$XH
t$0H
D$XH
D$XH
L$PL
D$HL
|$(M
D$`H
T$hL
D$ M
P8j61
t$DH
D$XH
D$XH
t$XL
|$X1
D$XH
D$XH
P8j61
T$`1
t$p1
-t\ 
t$DI
|$pL
D$`L
P8P1
AUATI
[]A\A]
[]A\A]
AWAVA
AUATI
[]A\A]A^A_
AWAVE1
AUATE1
USE1
D$H1
ht;~Q
T$HdH3
X[]A\A]A^A_
P8j61
XZtUL
T$ f.
P8j61
P8j61
D$ L
L$(L
t$0H
P8j61
P8j61
D$0L
L$8A
t$0H
T$8H
D$(E1
t$ L
|$0H
t$0L
t$0L
T$ H
t$0H
T$8H
t$(L
l$0A
T$0H
D$(L
T$8H
D$(uFH
t$01
T$8H
AVAUE1
ATUE1
D$(1
L$(dH3
0[]A\A]A^
P8j61
D$ L
L$(L
|$ H
AWAVA
AUATL
-^H 
[]A\A]A^A_
Smartcard PIN
Private key passphrase
%s: 
dnskey
sshkey
%d.%m.%y %T
pki.load
integrity check of pki failed
curl aes des rc2 sha1 sha2 md4 md5 random x509 revocation pkcs1 pkcs7 pkcs8 pkcs12 dnskey sshkey pem openssl gmp
unable to register command, please increase MAX_COMMANDS
command '%s' registered too many options, please increase MAX_OPTIONS
read command line options from file
debug
set debug level, default: 1
options
Error: %s
5.2.0
strongSwan %s PKI tool
loaded plugins: %s
usage:
  pki --%-7s (-%c)  %s
  pki --%s %s
              %s
        --%-15s (-%c)  %s
invalid operation
help
show usage information
ecdsa
invalid key type
invalid key output format
invalid key size
invalid number of key shares
invalid key share threshold
invalid --gen option
private key encoding failed
writing private key failed
generate a new private key
type of key, default: rsa
safe-primes
generate rsa safe primes
outform
threshold is larger than number of shares
private key generation failed
  [--type rsa|ecdsa] [--size bits] [--safe-primes]
[--shares n] [--threshold l] [--outform der|pem]
keylength in bits, default: rsa 2048, ecdsa 384
number of private rsa key shares
minimum number of participating rsa key shares
encoding of generated private key, default: der
reading certificate request failed
parsing certificate request failed
writing certificate key failed
supplied --dn is not a distinguished name
--cps-uri must follow a --cert-policy
--user-notice must follow a --cert-policy
--crlissuer must follow a --crl
--cakey or --keyid is required
invalid --not-before/after datetime
CA certificate misses CA basicConstraint
extracting CA certificate public key failed
CA private key does not match CA certificate
no random number generator found
failed to generate serial number
issue a certificate using a CA certificate and key
[--in file] [--type pub|pkcs10] --cakey file|--cakeyid hex
 --cacert file [--dn subject-dn] [--san subjectAltName]+
[--lifetime days] [--serial hex] [--ca] [--pathlen len]
[--flag serverAuth|clientAuth|crlSign|ocspSigning|msSmartcardLogon]+
[--crl uri [--crlissuer i]]+ [--ocsp uri]+ [--nc-permitted name]
[--nc-excluded name] [--policy-mapping issuer-oid:subject-oid]
[--policy-explicit len] [--policy-inhibit len] [--policy-any len]
[--cert-policy oid [--cps-uri uri] [--user-notice text]]+
[--digest md5|sha1|sha224|sha256|sha384|sha512] [--outform der|pem]
public key/request file to issue, default: stdin
keyid on smartcard of CA private key
distinguished name to include as subject
subjectAltName to include in certificate
days the certificate is valid, default: 1095
date/time the validity of the cert starts
date/time the validity of the cert ends
strptime(3) input format, default: %d.%m.%y %T
serial number in hex, default: random
include CA basicConstraint, default: no
certificatePolicy OID to include
Certification Practice statement URI for certificatePolicy
user notice for certificatePolicy
policyMapping from issuer to subject OID
requireExplicitPolicy constraint
inhibitPolicyMapping constraint
CRL distribution point URI to include
CRL Issuer for CRL at distribution point
OCSP AuthorityInfoAccess URI to include
digest for signature creation, default: sha1
encoding of generated cert, default: der
parsing public key failed
generating certificate failed
encoding certificate failed
invalid input type
invalid --digest type
invalid --lifetime value
--cert-policy OID invalid
--policy-map OIDs invalid
invalid output format
invalid --issue option
--cacert is required
parsing CA certificate failed
reading public key failed
loading CA private key failed
pkcs10
serverAuth
clientAuth
ikeIntermediate
crlSign
ocspSigning
msSmartcardLogon
Reading ca certificate:
Reading ca private key:
Reading certificate request
Reading public key:
issue
type of input, default: pub
cacert
CA certificate file
cakey
CA private key file
cakeyid
lifetime
not-before
not-after
dateform
pathlen
set path length constraint
nc-permitted
add permitted NameConstraint
nc-excluded
add excluded NameConstraint
cert-policy
cps-uri
user-notice
policy-mapping
policy-explicit
policy-inhibit
policy-any
inhibitAnyPolicy constraint
include extendedKeyUsage flag
crlissuer
ocsp
digest
rsa-priv
ecdsa-priv
x509
invalid --keyid option
reading input failed: %s
parsing input failed
input file, default: stdin
subjectKeyIdentifier:      %#B
subjectPublicKeyInfo hash: %#B
extracting public key from certificate failed
calculate key identifiers of a key/certificate
[--in file] [--type rsa-priv|ecdsa-priv|pub|pkcs10|x509]
type of key, default: rsa-priv
invalid --pub option
parsing private key failed
parsing public key failed
parsing certificate failed
extracting public key failed
public key encoding failed
writing public key failed
extract the public key from a private key/certificate
[--in file|--keyid hex] [--type rsa|ecdsa|pub|pkcs10|x509]
[--outform der|pem|dnskey|sshkey]
keyid on smartcard of private key
type of credential, default: rsa
encoding of extracted public key, default: der
invalid --req option
--dn is required
parsing private key failed
subject distinguished name
password
writing certificate request failed
encoding certificate request failed
generating certificate request failed
reading private key failed: %s
create a PKCS#10 certificate request
  [--in file] [--type rsa|ecdsa] --dn distinguished-name
[--san subjectAltName]+ [--password challengePassword]
private key input file, default: stdin
type of input key, default: rsa
subjectAltName to include in cert request
challengePassword to include in cert request
encoding of generated request, default: der
invalid --self option
reading private key failed
loading private key failed
extracting public key failed
self
create a self signed certificate
 [--in file|--keyid hex] [--type rsa|ecdsa]
 --dn distinguished-name [--san subjectAltName]+
[--lifetime days] [--serial hex] [--ca] [--ocsp uri]+
[--nc-permitted name] [--nc-excluded name]
[--policy-map issuer-oid:subject-oid]
subject and issuer distinguished name
pubkey:    %N %d bits
keyid:     %#B
subjkey:   %#B
invalid --print option
cert:      %N
subject:  "%Y"
issuer:   "%Y"
validity:  not before %T, 
not valid yet (valid in %V)
           not after  %T, 
expired (%V ago)
ok (expires in %V)
serial:    %#B
altNames:  
flags:     
CRLSign 
serverAuth 
clientAuth 
iKEIntermediate 
msSmartcardLogon 
self-signed 
CRL URIs:  %s
           %s
 (CRL issuer: %Y)
OCSP URIs: %s
pathlen:   %d
Permitted NameConstraints:
           %Y
Excluded NameConstraints:
CertificatePolicies:
           %#B
             CPS: %s
             Notice: %s
PolicyMappings:
           %s => %s
PolicyConstraints:
authkeyId: %#B
subjkeyId: %#B
addresses: 
delta CRL: for serial %#B
authKeyId: %#B
freshest:  %s
%d revoked certificate%s%s
%F %T
    %#B %N %s
hissuer:  "%Y"
hserial:   %#B
groups:    
           
%.*s
OID:%#B
authkey:  %#B
private key with:
OCSP 
print
           requireExplicitPolicy: %d
           inhibitPolicyMapping: %d
           inhibitAnyPolicy: %d
parsing certificate subtype %N not implemented
extracting public from private key failed
print a credential in a human readable form
[--in file] [--type rsa-priv|ecdsa-priv|pub|x509|crl|ac]
type of credential, default: x509
invalid serial
invalid revocation reason
invalid date
invalid --signcrl option
loading base CRL failed
loading lastUpdate CRL failed
generating CRL failed
encoding CRL failed
writing CRL failed
key-compromise
ca-compromise
affiliation-changed
superseded
cessation-of-operation
certificate-hold
signcrl
  [--outform der|pem]
this-update
next-update
lastcrl
basecrl
crluri
certificate file to revoke
invalid --this/next-update datetime
CA certificate misses CA basicConstraint / CRLSign keyUsage
parsing certificate '%s' failed
issue a CRL using a CA certificate and key
--cacert file --cakey file|--cakeyid hex [--lifetime days]
  [--lastcrl crl] [--basecrl crl] [--crluri uri]+
  [[--reason key-compromise|ca-compromise|affiliation-changed|
             superseded|cessation-of-operation|certificate-hold]
   [--date timestamp] --cert file|--serial hex]*
  [--digest md5|sha1|sha224|sha256|sha384|sha512]
days the CRL gets a nextUpdate, default: 15
date/time the validity of the CRL starts
date/time the validity of the CRL ends
CRL of lastUpdate to copy revocations from
base CRL to create a delta CRL for
freshest delta CRL URI to include
hex encoded certificate serial number to revoke
reason for certificate revocation
revocation date as unix timestamp, default: now
encoding of generated crl, default: der
generating attribute certificate failed
--issuerkey or --issuerkeyid is required
writing attribute certificate key failed
encoding attribute certificate failed
parsing issuer certificate failed
extracting issuer certificate public key failed
loading issuer private key failed
issuer private key does not match issuer certificate
parsing user certificate failed
issue an attribute certificate
[--in file] [--group name]* --issuerkey file|--issuerkeyid hex
 --issuercert file [--serial hex] [--lifetime hours]
 [--not-before datetime] [--not-after datetime] [--dateform form]
holder certificate, default: stdin
group membership string to include
keyid on smartcard of issuer private key
hours the acert is valid, default: 24
date/time the validity of the AC starts
date/time the validity of the AC ends
invalid --acert option
--issuercert is required
group
issuercert
issuer certificate file
issuerkey
issuer private key file
issuerkeyid
buffer too small to read input!
signing requires a private key
verification failed, container is %N
decryption requires a private key
decryption failed, container is %N
--sign|--verify|--encrypt|--decrypt|--show
[--in file] [--cert file]+ [--key file]
show info about PKCS#7, print certificates
path to private key for sign/decrypt
path to certificate for sign/verify/encrypt
invalid --pkcs7 option
reading input failed!
requiring a certificate!
signed by '%Y'
 at %T
no trusted signature found
PKCS#7 decryption failed
pkcs7
PKCS#7 wrap/unwrap functions
sign
create PKCS#7 signed-data
verify
verify PKCS#7 signed-data
encrypt
create PKCS#7 enveloped-data
decrypt
decrypt PKCS#7 enveloped-data
show
parsing CA certificate failed
reading certificate failed: %s
certificate trusted, lifetimes valid
certificate trusted, but no valid lifetime
, revocation information stale
, certificate revocation on hold
verify a certificate using the CA certificate
X.509 certificate to verify, default: stdin
CA certificate for trustchain verification
enable online CRL/OCSP revocation checking
invalid --verify option
, certificate not revoked
, no revocation information
, revocation checking failed
, certificate revoked
certificate untrusted
[--in file] [--cacert file]
online
;*3$"
pki.debug
7zXZ
V2 hO
E>N*9
LU0RyPK
\66l
2yWpa
ALW<
>0-.
oV{)
>0yW
jZ&]A
2Pr[
c<=K
_a|C
hQ]3m5
<:~c
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
