tdh>
"tAA E
CQjw
Fcp4
f/*(
@}:d
.F!3r
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
openconnect_version_str
fcntl
connect
__fdelt_chk
select
getpeername
__errno_location
dcgettext
socket
close
memcpy
freeaddrinfo
__asprintf_chk
px_proxy_factory_get_proxies
__snprintf_chk
getaddrinfo
getnameinfo
strlen
gai_strerror
openconnect_SSL_printf
__vsnprintf_chk
openconnect_SSL_write
openconnect_passphrase_from_fsid
statfs
strcmp
__strdup
read
__strcpy_chk
calloc
strtol
openconnect_SSL_gets
strchr
strcasecmp
openconnect_close_https
strstr
strrchr
openconnect_open_https
openconnect_obtain_cookie
openconnect_set_hostname
mkstemp
fchmod
fork
getuid
setuid
getpwuid
setenv
chdir
exit
unlink
strcasestr
sleep
stderr
__fprintf_chk
strncasecmp
openconnect_sha1
__sprintf_chk
dup2
execv
openconnect_create_useragent
openconnect_set_http_proxy
xmlGetProp
xmlNodeGetContent
strcpy
memmove
xmlNewDoc
xmlNewNode
xmlNewProp
xmlDocSetRootElement
xmlNewTextChild
xmlFreeDoc
xmlDocDumpMemoryEnc
xmlFree
xmlCopyNode
xmlAddChild
xmlNewChild
__ctype_b_loc
xmlReadMemory
xmlDocGetRootElement
xmlFreeNode
openconnect_set_reported_os
openconnect_vpninfo_new
bindtextdomain
openconnect_vpninfo_free
gnutls_x509_crt_deinit
openconnect_get_hostname
openconnect_get_urlpath
openconnect_set_urlpath
openconnect_set_xmlsha1
openconnect_set_cafile
openconnect_setup_csd
openconnect_set_client_cert
openconnect_get_peer_cert
openconnect_get_port
openconnect_get_cookie
openconnect_clear_cookie
memset
openconnect_reset_ssl
openconnect_parse_url
openconnect_set_cert_expiry_warning
openconnect_set_cancel_fd
openconnect_get_version
openconnect_has_pkcs11_support
openconnect_has_tss_blob_support
openconnect_has_stoken_support
openconnect_has_oath_support
openconnect_set_token_mode
openconnect_set_stoken_mode
gnutls_x509_crt_get_authority_key_id
gnutls_x509_crt_get_subject_key_id
memcmp
gnutls_x509_crt_get_fingerprint
p11_kit_uri_format
p11_kit_pin_new_for_string
open
__fxstat
gnutls_malloc
gnutls_free
gnutls_x509_crt_get_dn_by_oid
gnutls_x509_crt_get_dn
snprintf
gnutls_x509_crt_init
gnutls_x509_crl_deinit
gnutls_x509_privkey_deinit
gnutls_x509_crt_list_import
gnutls_strerror
gnutls_pubkey_deinit
gnutls_pubkey_init
gnutls_pubkey_import_x509
gnutls_privkey_get_pk_algorithm
gnutls_pk_to_sign
gnutls_pubkey_verify_data2
gnutls_x509_crt_get_expiration_time
gnutls_certificate_set_x509_crl
gnutls_x509_crt_check_issuer
gnutls_realloc
p11_kit_pin_register_callback
p11_kit_uri_new
p11_kit_uri_free
gnutls_privkey_deinit
gnutls_x509_crt_import_pkcs11_url
gnutls_pkcs12_init
gnutls_pkcs12_import
gnutls_pkcs12_verify_mac
gnutls_pkcs12_deinit
p11_kit_uri_parse
p11_kit_uri_get_pin_source
p11_kit_uri_get_attribute
gnutls_pkcs11_privkey_init
gnutls_pkcs11_privkey_import_url
gnutls_privkey_init
gnutls_pkcs11_privkey_deinit
gnutls_certificate_get_issuer
gnutls_x509_privkey_init
gnutls_cipher_get_id
gnutls_pem_base64_decode_alloc
gnutls_pkcs12_simple_parse
gnutls_pkcs11_obj_init
gnutls_pkcs11_obj_import_url
gnutls_pkcs11_obj_deinit
gnutls_pcert_import_x509
gnutls_pcert_deinit
gnutls_privkey_import_pkcs11
gnutls_x509_privkey_import
gnutls_x509_privkey_get_key_id
gnutls_x509_crt_get_key_id
gmtime_r
strftime
gnutls_certificate_set_key
gnutls_privkey_sign_data
gnutls_x509_privkey_import_pkcs8
gnutls_cipher_get_key_size
gnutls_hash
gnutls_hash_deinit
gnutls_hash_init
gnutls_cipher_init
gnutls_cipher_decrypt
gnutls_cipher_deinit
gnutls_cipher_get_block_size
gnutls_certificate_set_x509_key
p11_kit_uri_set_attribute
p11_kit_uri_set_pin_source
p11_kit_uri_get_token_info
gnutls_pkcs11_obj_get_info
gnutls_record_send
gnutls_record_get_direction
gnutls_record_recv
openconnect_get_cert_sha1
openconnect_get_cert_details
gnutls_x509_crt_print
openconnect_get_cert_DER
gnutls_x509_crt_export
gnutls_init
gnutls_session_set_ptr
gnutls_priority_set_direct
gnutls_record_disable_padding
gnutls_credentials_set
gnutls_transport_set_ptr
gnutls_error_is_fatal
gnutls_handshake
gnutls_deinit
gnutls_certificate_allocate_credentials
gnutls_certificate_set_x509_system_trust
gnutls_certificate_set_verify_function
gnutls_certificate_set_x509_trust_file
gnutls_certificate_free_credentials
p11_kit_pin_unregister_callback
Tspi_Context_CloseObject
Tspi_Context_Close
openconnect_init_ssl
gnutls_global_init
gnutls_fingerprint
gnutls_session_get_ptr
gnutls_certificate_get_peers
gnutls_certificate_verify_peers2
gnutls_x509_crt_import
gnutls_x509_crt_check_hostname
openconnect_random
gnutls_rnd
gnutls_certificate_get_ours
Tspi_Context_CreateObject
Tspi_Hash_SetHashValue
Tspi_Hash_Sign
Trspi_Error_String
Tspi_Context_Create
Tspi_Context_Connect
Tspi_Context_LoadKeyByUUID
Tspi_GetPolicyObject
Tspi_Policy_SetSecret
Tspi_Context_LoadKeyByBlob
gnutls_privkey_import_ext
Tspi_Policy_AssignToObject
libgnutls.so.28
libxml2.so.2
libproxy.so.1
libp11-kit.so.0
libtspi.so.1
libc.so.6
__stack_chk_fail
libopenconnect.so.2
OPENCONNECT_2.0
OPENCONNECT_2.1
OPENCONNECT_2.2
OPENCONNECT_PRIVATE
LIBXML2_2.6.0
LIBXML2_2.4.30
GLIBC_2.15
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.1
GLIBC_2.3
GLIBC_2.8
GLIBC_2.3.4
GLIBC_2.0
GNUTLS_3_1_0
GNUTLS_2_12
GNUTLS_3_0_0
GNUTLS_2_10
GNUTLS_1_4
[^_]
UWVS
[^_]
|$<1
D$(1
UWVS
[^_]
UWVS
d$l[^_]
[^_]
[^_]
UWVS
d$,[^_]
d$,[^_]
d$,[^_]
d$,[^_]
d$,[^_]
d$<[^_]
UWVS
[^_]
[^_]
UWVS
D$,9
|$$1
|$ 	
D$,9
[^_]
[^_]
[^_]
T$ e
|$D 
[^_]
UWVS
T$De
[^_]
D$@1
UWVS
T$@1
d$,[^_]
D$T8
D$TP
D$T8
d$,1
[^_]
[^_]
D$,9EL
d$<[
d$<[
d$L[^_]
d$L[^_]
[^_]
d$L[^_]
[^_]
UWVS
D$ 1
[^_]
/tmp
/csd
XXXXf
T$ u
;l$ u
l$(1
UWVS
d$,[^_]
d$,[^_]
[^_]
UWVS
d$,[^_]
D$(t
D$,t
d$<[^_]
[^_]
UWVS
d$,[^_]
d$,1
[^_]
l$,;l$P
d$<[^_]
d$<1
[^_]
[^_]
d$L[
D$,u
D$lu
UWVS
[^_]
UWVS
t$8u
d$L[^_]
POST
[^_]
d$ [^_
UWVS
[^_]
UWVS
d$<[
d$<[
[^_]
UWVS
;l$(r
[^_]
UWVS
[^_]
UWVS
L$ u%
[^_]
D$,P
d$<[^_]
t$(1
;|$|
D$\9EXt
D$`9E\t
[^_]
MX9M\
;t$|
9l$|
9D$(
D$8<E
|$8D
T$Du
----f
T$4)
----
-BEGf
E\9EX
T$81
l$<1
t$8t
D$41
l$<1
UWVS
[^_]
[^_]
[^_]
UWVS
[^_]
[^_]
UWVS
|$$1
[^_]
t$,9
[^_]
UWVS
d$,[^_]
[^_]
[^_]
T$,	
D$$9
L$,	L
UWVS
l$pe
D$L1
D$Le3
d$\[^_]
UWVS
D$l1
L$le3
d$|[^_]
d$$[^
UWVS
d$<[^_]
[^_]
UWVS
9l$ 
d$L[^_]
9l$ 
l$$r6
v5.01
Socket connect cancelled
openconnect
https://%s/%s
https://%s:%d/%s
http://
socks://
socks5://
Failed to connect to host %s
statfs: %s
%llx
Failed to reconnect to proxy %s
Failed to reconnect to host %s
Proxy from libproxy: %s://%s:%d/
getaddrinfo failed for host '%s': %s
Attempting to connect to proxy %s%s%s:%s
Attempting to connect to server %s%s%s:%s
Failed to allocate sockaddr storage
No memory for allocating cookies
Error writing auth request to SOCKS proxy: %s
Error reading auth response from SOCKS proxy: %s
Unexpected auth response from SOCKS proxy: %02x %02x
Requesting SOCKS proxy connection to %s:%d
Error writing connect request to SOCKS proxy: %s
Error reading connect response from SOCKS proxy: %s
Unexpected connect response from SOCKS proxy: %02x %02x...
Unexpected address type %02x in SOCKS connect response
Proxy-Connection: keep-alive
Requesting HTTP proxy connection to %s:%d
Sending proxy request failed: %s
Error fetching proxy response
Failed to parse proxy response '%s'
Proxy CONNECT request failed: %s
Failed to read proxy response
Unexpected continuation line after CONNECT response: '%s'
Error fetching HTTPS response
Failed to parse HTTP response '%s'
Error processing HTTP response
Ignoring unknown HTTP response line '%s'
SSL certificate authentication failed
Response body has negative size (%d)
Unknown Transfer-Encoding: %s
Error reading HTTP response body
Error fetching HTTP response body
Error in chunked decoding. Expected '', got: '%s'
Cannot receive HTTP 1.0 body without closing connection
Failed to parse redirected URL '%s': %s
Cannot follow redirection to non-https URL '%s'
Allocating new path for relative redirect failed: %s
Failed to open HTTPS connection to %s
Unexpected %d result from server
application/x-www-form-urlencoded
Server requested SSL client certificate after one was provided
Try the --no-xmlpost option. If that works, please report as an OpenConnect bug
Server requested SSL client certificate; none was configured
Error: Server asked us to run CSD hostscan.
You need to provide a suitable --csd-wrapper argument.
Error: Server asked us to download and run a 'Cisco Secure Desktop' trojan.
This facility is disabled by default for security reasons, so you may wish to enable it.
Failed to open temporary CSD script file: %s
Failed to write temporary CSD script file: %s
Failed to change to CSD home directory '%s': %s
Warning: you are running insecure CSD code with root privileges
	 Use command line option "--csd-user"
Failed to send GET request for new config
Downloaded config file did not match intended SHA1
Refreshing %s after 1 second...
Only http or socks(5) proxies supported
connection not allowed by ruleset
connection refused by destination host
command not supported / protocol error
Host: %s
User-Agent: %s
Accept: */*
Accept-Encoding: identity
X-Transcend-Version: 1
Cookie: 
%s=%s%s
X-Aggregate-Auth: 1
X-AnyConnect-Platform: %s
%c %s
SOCKS proxy error %02x: %s
SOCKS proxy error %02x
CONNECT %s:%d HTTP/1.1
Connection: keep-alive
HTTP/1.
HTTP/1.0 
HTTP/1.1 
Got HTTP response: %s
Set-Cookie
Invalid cookie offered: %s
webvpn
<elided>
%s: %s=%s%s%s
ClientCertAuthFailed
%s: %s
Connection
Close
Location
Content-Length
Transfer-Encoding
chunked
HTTP body %s (%d)
length: 
Error fetching chunk header
http 1.0
https
http
socks
socks4
socks5
https://
%s /%s HTTP/1.1
Content-Type: %s
Content-Length: %zd
%s https://%s/%s
%s https://%s:%d/%s
POST
XML POST enabled
Failed to set uid %ld
Invalid user uid=%ld
HOME
"%s"
-stub
-group
-certhash
"%s:%s"
-url
"https://%s%s"
-langselen
CSD_TOKEN
CSD_HOSTNAME
Failed to exec CSD script %s
sdesktop
<?xml
http-equiv="refresh"
Unknown response from server
webvpnc
GET %s%s HTTP/1.1
%s %s
Unknown proxy type '%s'
request granted
general failure
network unreachable
host unreachable
TTL expired
address type not supported
param1
param2
config-auth
client
version
device-id
UTF-8
success
auth-reply
group_list
group-select
answer
whichpin
new_password
verify_pin
verify_password
host-scan-token
%%%02x
%%%02X
Empty response from server
noname.xml
Response was:%s
client-cert-request
banner
message
error
form
method
action
Form choice has no name
option
value
auth-type
override-name
override-label
input
name %s not input
No input type in form
submit
reset
No input name in form
hidden
text
stuburl
starturl
waiturl
opaque
host-scan
host-scan-ticket
host-scan-base-uri
host-scan-wait-uri
session-token
init
https://%s
group-access
client-cert-fail
Asked for password but '--no-passwd' set
No form handler; cannot authenticate.
Failed to parse server response
Received <client-cert-request> when not expected.
Cannot handle form method='%s', action='%s'
Unknown input type %s in form
XML response has no "auth" node
linux
csdMac
linux-64
csdLinux
/usr/share/locale
Failed to parse server URL '%s'
Only https:// permitted for server URL
pkcs11_pin
PIN required for %s
Wrong PIN
Enter PIN:
2.5.4.3
<unknown>
EC PRIVATE KEY
RSA PRIVATE KEY
DSA PRIVATE KEY
pkcs11:
openconnect:%p
Using PKCS#11 certificate %s
Using certificate file %s
Enter PKCS#12 pass phrase:
openconnect_pkcs12
-----BEGIN 
X509 CERTIFICATE
No certificate found in file
Using PKCS#11 key %s
Using private key file %s
-----BEGIN TSS KEY BLOB-----
Failed to interpret PEM file
Proc-Type: 4,ENCRYPTED
DEK-Info: 
DES-EDE3-CBC
Encrypted PEM file too short
MD5 hash error: %s
Decrypting PEM key failed
Enter PEM pass phrase:
openconnect_pem
-----BEGIN PRIVATE KEY-----
Failed to get key ID: %s
%a, %d %b %Y %T %Z
Adding supporting CA '%s'
SSL write cancelled
SSL read cancelled
SSL negotiation with %s
SSL connection cancelled
SSL connection failure: %s
Connected to HTTPS on %s
certificate revoked
signer not found
signer not a CA certificate
insecure algorithm
certificate not yet activated
certificate expired
signature verification failed
This is the final try before locking!
Only a few tries left before locking!
Failed to open key/certificate file %s: %s
Failed to stat key/certificate file %s: %s
Failed to allocate certificate buffer
Failed to read certificate into memory: %s
Error loading certificate from PKCS#11: %s
Failed to setup PKCS#12 data structure: %s
Failed to import PKCS#12 file: %s
Failed to decrypt PKCS#12 certificate file
Failed to load PKCS#12 certificate: %s
PKCS#11 file contained no certificate
Loading certificate failed: %s
Error initialising PKCS#11 key structure: %s
Error importing PKCS#11 URL %s: %s
Error initialising private key structure: %s
Error importing PKCS#11 key into private key structure: %s
-----BEGIN RSA PRIVATE KEY-----
-----BEGIN DSA PRIVATE KEY-----
-----BEGIN EC PRIVATE KEY-----
Missing DEK-Info: header from OpenSSL encrypted key
Cannot determine PEM encryption type
Invalid salt in encrypted PEM file
Error base64-decoding encrypted PEM file: %s
Could not initialise MD5 hash: %s
Failed to initialise cipher for decrypting PEM file: %s
Failed to decrypt PEM key: %s
Failed to load PKCS#1 private key: %s
Failed to load private key as PKCS#8: %s
-----BEGIN ENCRYPTED PRIVATE KEY-----
Failed to decrypt PKCS#8 certificate file
Failed to determine type of private key %s
Error signing test data with private key: %s
Error validating signature against certificate: %s
No SSL certificate found to match private key
Could not extract expiration time of certificate
Client certificate has expired at
Client certificate expires soon at
Using client certificate '%s'
Setting certificate recovation list failed: %s
WARNING: GnuTLS returned incorrect issuer certs; authentication may fail!
Failed to allocate memory for supporting certificates
Importing X509 certificate failed: %s
Setting PKCS#11 certificate failed: %s
Setting certificate failed: %s
Unsupported PEM encryption type: %s
Failed to process PKCS#12 file: %s
Failed to write to SSL socket: %s
Failed to read from SSL socket: %s
Failed to open CA file '%s': %s
Loading certificate failed. Aborting.
NORMAL:-VERS-TLS-ALL:+VERS-TLS1.0:-CURVE-ALL:%COMPAT:%DISABLE_SAFE_RENEGOTIATION:%LATEST_RECORD_VERSION
Failed to set TLS priority string: %s
GnuTLS non-fatal return during handshake: %s
Server presented no certificate
Could not calculate SHA1 of server's certificate
Server SSL certificate didn't match: %s
Error checking server cert status
Error initialising X509 cert structure
Error importing server's cert
certificate does not match hostname
Server certificate verify failed: %s
TPM sign function called for %d bytes.
Failed to create TPM hash object: %s
Failed to set value in TPM hash object: %s
TPM hash signature failed: %s
Error decoding TSS key blob: %s
Failed to create TPM context: %s
Failed to connect TPM context: %s
Failed to load TPM SRK key: %s
Failed to load TPM SRK policy object: %s
Failed to load TPM key blob: %s
Failed to create key policy object: %s
Failed to assign policy to key: %s
TSS KEY BLOB
Error in TSS key blob
Failed to set TPM PIN: %s
Enter TPM SRK PIN:
openconnect_tpm_srk
Enter TPM key PIN:
openconnect_tpm_key
Failed to set key PIN: %s
;*2$"@
libopenconnect.so.2.2.0.debug
7zXZ
'	%_
Zf089t
)WAU
f=c2<
u0}4
r}T5
z)ije
Mc?5P
o:drD
i)am
e0I}
ZhiZ?]=
.PY^B(
^5QQ0
-Q1q
/41K
"Z"V
Dv,L
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_d
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
