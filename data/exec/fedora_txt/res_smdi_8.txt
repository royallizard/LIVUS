__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
ast_module_unregister
ast_smdi_mwi_message_destroy
free
ast_smdi_md_message_destroy
pthread_mutex_destroy
pthread_mutex_lock
pthread_mutex_unlock
ast_module_register
ast_unregister_file_version
ast_register_file_version
ast_smdi_interface_find
smdi_ifaces
strcasecmp
ast_smdi_mwi_message_putback
pthread_cond_broadcast
ast_smdi_md_message_putback
pthread_cancel
pthread_join
fclose
pthread_cond_destroy
ast_module_unref
ast_log
__ast_string_field_init
ast_smdi_interface_unref
pthread_cond_signal
ast_custom_function_unregister
__ast_module_user_add
strlen
memcpy
ast_app_separate_args
__ast_module_user_remove
ast_channel_datastore_find
__snprintf_chk
__stack_chk_fail
fopen
__fprintf_chk
option_debug
ast_options
ast_debug_get_by_file
__errno_location
strerror
ast_smdi_mwi_unset
ast_smdi_mwi_set
ast_app_has_voicemail
gettimeofday
ast_tvadd
pthread_cond_timedwait
calloc
__ast_string_field_ptr_grow
__ast_string_field_alloc_space
__ast_string_field_empty
strchr
ast_smdi_mwi_message_pop
ast_smdi_md_message_pop
ast_smdi_mwi_message_wait_station
ast_smdi_mwi_message_wait
ast_smdi_md_message_wait
ast_autoservice_start
ast_autoservice_stop
ast_app_parse_options
sscanf
ast_datastore_alloc
ast_channel_datastore_add
fgetc
pthread_mutexattr_init
pthread_mutexattr_settype
pthread_mutex_init
pthread_mutexattr_destroy
__ctype_b_loc
ast_config_load2
ast_variable_browse
ast_config_destroy
pthread_cond_init
fileno
tcgetattr
ast_true
ast_pthread_create_stack
cfsetispeed
cfsetospeed
tcsetattr
option_verbose
ast_verbose_get_by_file
__ast_verbose
ast_module_ref
__ast_custom_function_register
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
GLIBC_2.2.5
GLIBC_2.3.2
GLIBC_2.4
GLIBC_2.3
GLIBC_2.3.4
5Zv 
%\v 
%Zv 
%Rv 
%Jv 
%Bv 
%:v 
%2v 
%*v 
%"v 
%zu 
%ru 
%ju 
%bu 
%Zu 
%Ru 
%Ju 
%Bu 
%:u 
%2u 
%*u 
%"u 
%zt 
%rt 
%jt 
%bt 
%Zt 
%Rt 
%Jt 
%Bt 
%:t 
%2t 
%*t 
%"t 
ATSubH
=hq 
%<o 
ffff.
AUATI
-$p 
[]A\A]
t$ H
ffff.
t$ H
ffff.
AWAVAUATUH
[]A\A]A^A_
fffff.
AUATUSH
%7j 
\$(H
\$(H
=8l 
=)m 
[]A\A]
AWAVI
=3k 
[A\A]A^A_
fff.
ATUH
~*E1
[]A\A]A^
[]A\A]A^
[]A\A]A^
ffff.
O dH
ATUSH
d$HM
T$8H
5Ld 
=fd 
D$0H
D$@H
T$HH
[]A\
=_` 
=/` 
|$`L
l$ L
t$(L
|$0H
fffff.
|$`L
l$ L
t$(L
|$0H
fffff.
AWAVAUATUH
l$HL
D$XH
D$0H
D$ H
D$8H
l$`L
X[]A\A]A^A_
t7E1
D$XH
D$XH
X[]A\A]A^A_
D$XH
l$`H
X[]A\A]A^A_
ffff.
D$XH
t$ H
t+E1
D$XH
[]A\A]
fffff.
AVAUATA
|$`1
l$hL
D$0H
D$8H
D$ H
D$PH
d$xL
T$HH
T$hHi
D$@H
D$`H
|$0H
|$(1
t$XH
|$PH
|$8H
|$8H
[]A\A]A^A_
|$0H
fff.
AVAUATSH
[A\A]A^A_
=kI 
AWAVAUATU1
T$`dH
D$x1
T$ H
D$PH
T$pH
D$@H
u8<Mf
|$ L
t$ L
|$@1
D$XH
D$PH
|$0H
t$0H
|$HH
D$(H
D$(H
L$HL
|$@1
D$XL
D$PI
|$81
T$xdH3
[]A\A]A^A_
AVAUATUSH
D$< 
T$HH
D$PH
T$XH
D$`H
T$hH
D$@H
T$(H
[]A\A]A^A_
|$(1
T$0H
|$HH
t$HH
|$PA
t$PI
t$XI
t$`I
t$hI
t"f.
T$@H
D$< 
D$<0
D$< 
D$pL
t$(A
|$|I
t$(D
|$|H
D$xH
={2 
T$pD	
D$<A
t$(D
|$|H
T$pH
|$(H
D$pH
=}. 
5*- 
res_smdi.c
$Revision: 146838 $
number
terminal
station
callerid
type
%s:MWI 
%s@%s
default
SMDI port '%s' not found
'%s' is not a valid timeout
Read a '%c'
Message type is '%c'
The calling station is '%s'
res_smdi
interfaces
baudrate
9600
4800
2400
1200
msdstrip
msgexpirytime
paritybit
even
none
charsize
twostopbits
smdiport
smdi_read
mailboxes
SMDI interface %s not found
pollinginterval
mwi_monitor_handler
SMDI_MSG_RETRIEVE
Retrieve an SMDI message.
SMDI_MSG
SMDIMSG
Unreferencing unreferenced (object)!
SMDI_MSG can not be called without a channel
SMDI_MSG requires an argument
ID must be supplied to SMDI_MSG
No SMDI message found for message ID '%s'
'%s' is not a valid message component for SMDI_MSG
Error opening SMDI interface %s (%s) for writing
Sent MWI set message for %s on %s
Memory Allocation Failure in function %s at line %d of %s
/builddir/build/BUILD/asterisk-1.6.1-rc1/include/asterisk/utils.h
Purged expired message from %s SMDI %s message queue.  Message was %ld milliseconds too old.
SMDI_MSG_RETRIEVE requires an argument
SMDI_MSG_RETRIEVE must be used with a channel
Invalid arguments provided to SMDI_MSG_RETRIEVE
No SMDI message retrieved for search key '%s' after waiting %u ms.
Read an 'M' to start an SMDI message
Read a 'D' ... it's an MD message.
The message desk number is '%s'
The message desk terminal is '%s'
Read a space, done looking for the forwarding station
Read a '%c' and stored it in the forwarding station buffer
Read a '%c', but didn't store it in the fwd station buffer, because of the msdstrip setting (%d < %d)
The forwarding station is '%s'
Read a '%c', but didn't store it in the calling station buffer because it's not a digit
Read a '%c' and stored it in the calling station buffer
Read a '%c', but didn't store it in the calling station buffer, because of the msdstrip setting (%d < %d)
Recieved SMDI MD message on %s
Read a 'W', it's an MWI message. (No more debug coming for MWI messages)
Recieved SMDI MWI message on %s
Unknown SMDI message type recieved on %s (M%c).
Error reading from SMDI interface %s, stopping listener thread
Unable to reload config %s: SMDI untouched
Unable to load config %s: SMDI disabled
Invalid baud rate '%s' specified in %s (line %d), using default
Invalid msdstrip value in %s (line %d), using default
Invalid msgexpirytime value in %s (line %d), using default
Invalid parity bit setting in %s (line %d), using default
Invalid character size setting in %s (line %d), using default
SMDI interface %s already running, not restarting
Error opening SMDI interface %s (%s)
Error getting atributes of %s (%s)
Error setting baud rate on %s (%s)
Error setting attributes on %s (%s)
    -- Starting SMDI monitor thread for %s
Error starting SMDI monitor thread for %s
Ignoring unknown option %s in %s
Invalid value for pollinginterval: %s
Mailbox mapping ignored, no valid SMDI interface specified in mailboxes section
Failed to start MWI monitoring thread.  This module will not operate.
No SMDI interfaces were specified to listen on, not starting SDMI listener.
No SMDI interfaces are available to listen on, not starting SMDI listener.
Simplified Message Desk Interface (SMDI) Resource
This paragraph is copyright (c) 2006 by Digium, Inc. In order for your module to load, it must return this key via a function called "key".  Any code which includes this paragraph must be licensed under the GNU General Public License version 2 or later (at your option).  In addition to Digium's general reservations of rights, Digium expressly reserves the right to allow other parties to license this paragraph under different terms. Any use of Digium, Inc. trademarks or logos (including "Asterisk" or "Digium") without express written permission of Digium, Inc. is prohibited.
   This function is used to retrieve an incoming SMDI message.  It returns
an ID which can be used with the SMDI_MSG() function to access details of
the message.  Note that this is a destructive function in the sense that
once an SMDI message is retrieved using this function, it is no longer in
the global SMDI message queue, and can not be accessed by any other Asterisk
channels.  The timeout for this function is optional, and the default is
3 seconds.  When providing a timeout, it should be in milliseconds.
   The default search is done on the forwarding station ID.  However, if
you set one of the search key options in the options field, you can change
this behavior.
   Options:
     t - Instead of searching on the forwarding station, search on the message
         desk terminal.
     n - Instead of searching on the forwarding station, search on the message
         desk number.
SMDI_MSG_RETRIEVE(<smdi port>,<search key>[,timeout[,options]])
Retrieve details about an SMDI message.
   This function is used to access details of an SMDI message that was
pulled from the incoming SMDI message queue using the SMDI_MSG_RETRIEVE()
function.
   Valid message components are:
      number   - The message desk number
      terminal - The message desk terminal
      station  - The forwarding station
      callerid - The callerID of the calling party that was forwarded
      type     - The call type.  The value here is the exact character
                 that came in on the SMDI link.  Typically, example values
                 are: D - Direct Calls, A - Forward All Calls,
                      B - Forward Busy Calls, N - Forward No Answer Calls
SMDI_MSG(<message_id>,<component>)
unload_module
smdi_msg_read
smdi_msg_datastore_destroy
smdi_msg_retrieve_read
purge_old_messages
unref_msg
_ast_calloc
ast_smdi_interface_destroy
destroy_mailbox_mapping
reload
smdi.conf
smdi_load
smdi_load
alloc_smdi_interface
append_mailbox_mapping
smdi_read
load_module
smdi_toggle_mwi
ast_smdi_interface_unref
a9c98e5d177805051735cb5b0b16b0a0
res_smdi.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
