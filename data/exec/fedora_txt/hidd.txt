/lib64/ld-linux-x86-64.so.2
libbluetooth.so.3
__gmon_start__
_Jv_RegisterClasses
sdp_set_info_attr
str2ba
sdp_close
hci_open_dev
sdp_record_free
hci_encrypt_link
sdp_set_profile_descs
hci_devba
sdp_data_free
sdp_data_alloc
hci_get_route
sdp_set_uuidseq_attr
sdp_seq_append
sdp_record_unregister
sdp_set_lang_attr
hci_close_dev
sdp_list_append
sdp_service_search_req
hci_devid
hci_authenticate_link
sdp_get_proto_port
sdp_data_get
hci_inquiry
sdp_set_access_protos
sdp_uuid16_create
sdp_connect
sdp_service_search_attr_req
sdp_record_alloc
sdp_attr_add_new
ba2str
sdp_uuid128_create
sdp_get_string_attr
sdp_list_free
sdp_device_record_register
sdp_get_access_protos
bt_free
libm.so.6
sincos
libc.so.6
socket
__printf_chk
exit
strncmp
ftruncate
perror
strncpy
puts
sigfillset
__stack_chk_fail
daemon
listen
mkdir
memchr
flock
strtol
mmap
fdatasync
strlen
openlog
memset
__errno_location
bind
read
__syslog_chk
getsockopt
__fprintf_chk
lseek
memcpy
setsockopt
malloc
umask
getpeername
sscanf
optarg
stderr
sigdelset
ioctl
munmap
__snprintf_chk
getopt_long
__strncat_chk
strncasecmp
__fxstat
strncat
fileno
fwrite
sigaction
open
strchr
getsockname
accept
sleep
__ctype_toupper_loc
__ctype_tolower_loc
__cxa_finalize
__sprintf_chk
__xstat
__strcat_chk
strerror
__libc_start_main
ppoll
snprintf
_edata
__bss_start
_end
__libc_csu_fini
__libc_csu_init
GLIBC_2.2.5
GLIBC_2.3
GLIBC_2.4
GLIBC_2.3.4
%z~ 
%r~ 
%j~ 
%b~ 
%Z~ 
%R~ 
%J~ 
%B~ 
%:~ 
%2~ 
%*~ 
%"~ 
%z} 
ATSubH
%,w 
fffff.
AVAUATUS
=Z~ 
[]A\A]A^A_
l$<A
|$,D
L$+H
T$ H
t$ H
T$P1
t$PD
D$iL
D$i@
H#D$hH
|$`H
\$0L
D$2f
|$A%
D$if
fffff.
D$81
d$"f
T$8dH3
\$HH
l$PL
d$XL
l$`H
D$(1
T$(dH3
\$8H
l$@L
d$HL
l$PL
t$XL
|$`H
D$,$
D$,f=
w^f=
dH34%(
D$0H
T$/H
T$/H
L$/H
T$,L
D$0A
T$/H
T$/H
D$(1
T$(dH3
[]A\A]
AWE1
T$(H
D$ f.
t$ H
T$WH
D$Xf
|$X1
T$tA
D$pD
D$`D
L$WH
L$hD
D$lH
T$WH
B	fA
T$@H
D$tD
L$hD
L$|H
L$lE
<@tZ<
P	fA
T$@H
T$tD
L$hA
L$|H
t$8D
T$PH
[]A\A]A^A_
D$81
T$8dH3
@[]A\f
\$ H
5Dc 
=)b 
=Ua 
[]A\A]
\$0H
=[` 
=!` 
5U_ 
=A_ 
=1_ 
T$(1
T$(dH3
0[]A\
AVAUATUSH
d$@H
=7\ 
t$nH
\$pH
t$lH
t$P1
D$Pnef
D$Rj
=zZ 
\$ 1
[]A\A]A^A_
=[X 
=LX 
=+X 
=rW 
AVAUA
ATUSH
L$ dH
D$h1
T$N1
D$LH
T$@H
D$(f
D$@H
D$@H
D$@H
T$hdH3
x[]A\A]A^A_
T$ E1
T$(f
AWAVAUATI
t$PdH
D$`H
L$HL
T$(H
|P&Ic
D$XE
l$(H
D$8A
D$0A
D$ A
t$HH
|$@H
t$HL
[]A\A]A^A_
T$(1
D$ H
D$hf
D$ H
X Hc{(
HcS(H
D$T*
D$Y&
\$PA
AWAVI
ATUH
d$`H
D$4L
L$@L
D$DH
L$HH
T$LH
D$ I
D$8H
D$<H
L$4H
D$HH
D$DfA
D$@A
D$<A
D$8fA
t$Pf
[]A\A]A^A_
fffff.
\$(H
l$0L
d$8L
l$@H
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
[]A\A]A^
fffff.
AWAVAUATI
T$ 1
[]A\A]A^A_
	v)A
AWAVAUI
[]A\A]A^A_
AWAVAUI
[]A\A]A^A_
AVAUATUSH
t$,H
D$`D
D$,E1
D$ H
d$ H
[]A\A]A^A_
fff.
l$ L
t$(L
|$0H
ffffff.
AUATUSH
[]A\A]A^
T$0D
D$`H
t$(E1
D$ H
H9T$(I
l$ H
u"H9l$ 
D$ H
T$(H)
H9\$
t$(H
D$ H
D$(I
L+d$ H
H9l$(
t$(H
t$(H
t$(H
t$(1
AUATE1
t$$H
D$`D
D$$E1
H9D$(H
u"I9
T$(L
H9\$
[]A\A]A^A_
t$(L
H+\$
fffff.
fffff.
l$ L
t$(L
|$0H
Can't get connection list
boot-protocol
%s %s [%04x:%04x] %s %s
New HID device %s (%s)
Authentication for %s failed
Encryption for %s failed
Can't get device information
Cable Replacement
SPP slave
Serial Port
HID create error %d (%s)
Can't release connection
4.17
+i:nt:b:MEDZBHldsc:k:Ku:h
Searching ...
	Connecting to device %s
Can't start daemon
hidd
Bluetooth HID daemon (%s)
Bluetooth HID daemon
HID create error %d (%s)
Exit
help
nodaemon
subclass
timeout
device
master
encrypt
nosdp
nocheck
bootonly
hidonly
show
server
listen
search
create
disconnect
terminate
release
kill
killall
unplug
unknown
open
bound
listening
config
disconnecting
closed
Rejected connection from unknown device %s
Can't create HID control channel
Can't create HID interrupt channel
hidd - Bluetooth HID daemon version %s
Usage:
	hidd [options] [commands]
Options:
	-i <hciX|bdaddr>     Local HCI device or BD Address
	-t <timeout>         Set idle timeout (in minutes)
	-b <subclass>        Overwrite the boot mode subclass
	-n, --nodaemon       Don't fork daemon to background
	-h, --help           Display help
Commands:
	--server             Start HID server
	--search             Search for HID devices
	--connect <bdaddr>   Connect remote HID device
	--unplug <bdaddr>    Unplug the HID connection
	--kill <bdaddr>      Terminate HID connection
	--killall            Terminate all connections
	--show               List current HID connections
Can't open HIDP control socket
Can't listen on HID control channel
Can't listen on HID interrupt channel
	No devices in range or visible
Failed to connect to the SDP server. %s(%d)
Failed to connect to the local SDP server. %s(%d)
Failed to alloc service record
Service record unregistration failed.
Failed to allocate service record %s(%d)
%04X:%04X:%04X %02X %02X %04X %s %08X %s
%04X:%04X:%04X %02X %02X %04X %4095s %08X %n
mRouter
ActiveSync
Dialup Networking
LAN Access Point
SDP registration failed.
BlueZ PAN Service
BlueZ PAN
Network Access Point
Group Network Service
PAN User
/var/lib/bluetooth
%2.2X
Not implemented
Can't create socket: %s (%d)
Can't bind socket: %s (%d)
Can't connect: %s (%d)
/dev/uinput
/dev/input/uinput
/dev/misc/uinput
Celluon Keyboard
Press CTRL-C for hangup
Unknown key %x
Disconnected
J-Three Keyboard
Bluetooth Presenter
Unknown event code %d
Can't open input device: %s (%d)
Can't write device information: %s (%d)
Connected to %s on channel %d
 !",-./08
#$%&'(
12345g9
6*oad
%s/%s/%s
lhidd.debug
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
