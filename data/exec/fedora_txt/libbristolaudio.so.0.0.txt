4.E6
d@B"
__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
alsaDevClose
snd_pcm_drop
snd_pcm_hw_free
snd_pcm_close
snd_pcm_drain
output
bristolfree
puts
alsaChannelConfigure
snd_pcm_hw_params_sizeof
memset
snd_pcm_sw_params_sizeof
__strdup
snd_pcm_open
snd_pcm_hw_params_any
snd_pcm_hw_params_set_access
snd_pcm_hw_params_set_format
snd_pcm_hw_params_set_channels
snd_pcm_hw_params_set_rate_near
snd_pcm_hw_params_set_period_size
snd_pcm_hw_params_set_periods
snd_pcm_hw_params
snd_pcm_hw_params_set_buffer_size
snd_pcm_sw_params_current
snd_pcm_sw_params_set_start_threshold
snd_pcm_sw_params_set_stop_threshold
snd_pcm_sw_params_set_silence_threshold
snd_pcm_sw_params_set_avail_min
snd_pcm_sw_params
snd_pcm_dump
snd_pcm_poll_descriptors_count
bristolmalloc
snd_pcm_poll_descriptors
snd_pcm_prepare
__printf_chk
stderr
__fprintf_chk
snd_pcm_hw_params_get_period_size
snd_strerror
alsaDevOpen
stdout
snd_output_stdio_attach
alsaDevAudioStart
snd_pcm_writei
snd_pcm_start
showstat
snd_pcm_status_sizeof
snd_pcm_status
snd_pcm_status_dump
audioWrite
write
audioRead
usleep
snd_pcm_readi
checkAudioALSAcaps
getAlsaName
snd_mixer_selem_id_sizeof
snd_mixer_selem_id_get_name
getAlsaStereoStatus
strcmp
setAlsaValue
snd_mixer_find_selem
snd_mixer_selem_has_playback_volume
snd_mixer_selem_get_capture_volume_range
snd_mixer_selem_set_playback_volume
snd_mixer_selem_get_playback_volume_range
snd_mixer_selem_has_capture_volume
snd_mixer_selem_set_capture_volume
validAlsaDev
getAlsaRecordability
snd_mixer_selem_has_capture_switch
getAlsaMutability
snd_mixer_selem_has_playback_switch
getAlsaCapability
getAlsaCapByName
strlen
getAlsaValue
snd_mixer_selem_get_capture_volume
snd_mixer_selem_get_playback_volume
setAudioALSAparam
setAlsaRecordSource
snd_mixer_selem_set_capture_switch
getAlsaDeviceName
closeALSAmixer
snd_mixer_close
snd_ctl_close
setAlsaMute
snd_mixer_selem_has_playback_volume_joined
snd_mixer_selem_set_playback_switch
openALSAmixer
snd_ctl_card_info_sizeof
snd_ctl_open
snd_ctl_card_info
snd_ctl_card_info_get_name
snd_mixer_open
snd_mixer_attach
snd_mixer_selem_register
snd_mixer_load
snd_mixer_get_count
snd_mixer_first_elem
snd_mixer_elem_next
snd_mixer_selem_get_id
snd_mixer_selem_is_active
snd_ctl_card_info_get_mixername
lseek
header
openMaster
writeMaster
closeMaster
initAudioDevice2
ossAudioInit
setAudioStart2
ioctl
setAudioStop2
audioClose
audioOpen
__open_2
channelStatus
headStatus
bufferInfo
SL_setAudioDevParam2
setAudioOSSparam
mixerClose
mixerOpen
getControllerName
getOSSName
setRecordSource
getRecordability
getOSSRecordability
getMutability
getStereoStatus
getValue
setAudioValue
setAudioMute
getAudioCapByName
getOSSCapByName
getAudioCapability
getOSSCapability
validDev
fcntl
checkAudioOSScaps
mInfo
closedown
jack_deactivate
jack_port_unregister
jack_client_close
_exit
jack_port_get_buffer
doAudioOps
dupfd
jackMidiRoutine
jack_get_ports
jack_client_open
signal
jack_get_sample_rate
jack_get_buffer_size
initAudioThread
jack_set_process_callback
jack_on_shutdown
jack_port_register
bristolJackSetMidiHandle
jack_activate
getenv
strstr
jack_port_name
jack_connect
__sprintf_chk
__snprintf_chk
bristolJackInterface
libasound.so.2
libjack.so.0
libpthread.so.0
libc.so.6
__stack_chk_fail
_edata
__bss_start
_end
libbristolaudio.so.0
GLIBC_2.7
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.0
GLIBC_2.3.4
ALSA_0.9.0rc4
ALSA_0.9
[^_]
UWVS
d$,[^_]
UWVS
twiF
[^_]
UWVS
[^_]
d$,[
UWVS
L$<+L$8
d$L1
[^_]
d$L1
[^_]
l$(u\iF
l$(u\iF
t$$u,iG
UWVS
[^_]
l$Lf
t(iF
+T$H
[^_]
RIFF
WAVE
fmt 
A$data
l$Dud
UWVS
D$T%
d$<1
[^_]
D$X%
d$$1
d$$1
d$$1
t1f1
t$@w4
|$$u4
|$$u4
UWVS
d$L1
[^_]
L$`~>
D$,u5
d$$[^
UWVS
UWVS
D$,f
T$$tb
x<	~(
d$<1
[^_]
[^_]
FA tb
[^_]
L$,1
T$(1
4(tc
UWVS
[^_]
[^_]
closing alsa capture channel
closing alsa playback channel
capture
Error opening PCM device %s
Cound not get %s any params
Could not set %s format
Could not set channels
Could not set %s rate to %i
period size is %i
Could not set %s avail min
open playback on %s, pre %i
playback
plug:dmix
open capture on %s: pre %i
Playback start error: %s
Record start error: %s
Stream status error: %s
*** frames = %li ***
audioWrite(%i)
Do again
	Write Error: %s %i
audioRead(%i)
Could not set %s access methods
Could not configure %s period size
Could not configure %s periods
Could not set %s hardware parameters: %s
Could not configure %s buffer size
Could not get %s current configuration
Could not set %s start threshold
Could not set %s stop threshold
Could not configure %s software parameters
prepare failure on capture channel
prepare failure on playback channel
opening device %s, flags %08x
init %i bytes of device structure
restart audio interface %i %i
getAlsaName(%i): "%s"
Master Mono
Wave Center
Wave LFE
Phone
PC Speaker
Headphone LFE
Headphone Center
3D Control - Switch
Mic Boost (+20dB)
External Amplifier Power Down
3D Control Sigmatel - Depth
setAlsaValue(%i, %i, %i)
HAS PLAYBACK FOUND
HAS CAPTURE FOUND
PLAYBACK VOLUME
failed to set value
CAPTURE VOLUME
getRecordability
getMutability
getAlsaCapability(%i)
getAlsaCapByName(%s)
getAlsaValue
setAudioALSAparam(%i)
setAlsaRecordSource
setDeviceName(%s)
real closeALSAmixer(): %p
SND Mixer Close error: %s
SND CTL Close error: %s
setAlsaMute(%i, %i)
joined on device %i is %i
Could not get hardware info
Found: %s
Hardware: %s
Could not get mixer
Could not attach to mixer %s
found %i elements
could not find capability "%s"
Could not open control interface
writeWavHdr(%i, %i, %i): %i, %i
openMaster(%i, %s, %i)
writeMaster(%i, %i, %p, %i)
closeMaster(%i, %i, %i)
setAudioStart2(%i)
setAudioStop2(%i)
audioClose(%p, %i, %s)
closing AUDIO_DUMMY interface
audioOpen(%p, %i, %i): %s
using AUDIO_DUMMY interface
	WHAT WERE THOSE FLAGS: %x
flags are now %i
ioctl(%i, SNDCTL_DSP_SETTRIGGER, &%08x)
ALSA device, returning from setAudioStop2
ioctl(%i, SNDCTL_DSP_GETTRIGGER, &%08x)
Failed to open audio device "%s", flags %i
mixerClose()
mixerOpen()
setAudioMute()
getAudioCapByName(%s, %s)
getAudioCapability(%s, %i)
Master
Bass
Treble
Line
Mix  
Pcm2 
Rec  
Input Gain
OGain
none
setAudioValue(%p, %i, %i, %i)
ossAudioInit(%p, %i, %i)
checkAudioCaps2(%i, %i)
Found stereo dev %08x
Mono Capabilities: %08x
Record Caps: %08x
Failed to set Duplex
Set to Duplex
Set audio format: %i
Set resolution failed: %i
Set to stereo: %i
Set stereo failed: %i
Get frag size failed: %i
Failed to get stereo capabilities: %08x
Failed to get audio capabilities: %08x
Failed to get record capabilities: %08x
ioctl(%i, SNDCTL_DSP_SETFRAGMENT, %x)
ioctl(%i, SNDCTL_DSP_SETFRAGMENT, %x): failed
ioctl(%i, SNDCTL_DSP_GETCAPS, &0x%x)
Device %s does support SNDCTL_SET_TRIGGER
Device %s does NOT support SNDCTL_SET_TRIGGER
ioctl(%i, SNDCTL_DSP_SETDUPLEX, &0x%x)
ioctl(%i, SNDCTL_DSP_SETFMT, &%i)
ioctl(%i, SNDCTL_DSP_STEREO, &%i)
ioctl(%i, SNDCTL_DSP_SPEED, &%i)
Set audio readwrite rate to %i
Set line frequency failed: %i
ioctl(%i, SNDCTL_DSP_GETBLKSIZE, &0): %i bytes
ioctl(%i, MIXER_WRITE(%i), %i)
getOSSRecordability(%i, %i)
Vol  
Bass 
Trebl
Synth
Pcm  
Spkr 
Line 
Mic  
CD   
IGain
Line1
Line2
Line3
Digital1
Digital2
Digital3
PhoneIn
PhoneOut
Video
Radio
Monitor
%i %p: min %f, max %f
closedown on interrupt
Empty jack_get_ports()
Found port %s
%s_%i
Cannot connect to jack
32 bit float mono audio
out_left
Cannot register jack port
out_right
in_left
in_right
Cannot activate jack
BRISTOL_AUTO_LEFT
BRISTOL_AUTO_RIGHT
midi
Skipping Jack Conn: %s
BRISTOL_AUTO_IN
out_%i
in_%i
interface unregistered
registering jack interface: %s
Jack SAMPLERATE MISMATCH: startBristol -jack -rate %i
Jack PERIOD COUNT MISMATCH: `startBristol -jack -count %i`
You need to ensure that bristol uses the same period size
Did not receive request from GUI, exiting.
Bristol Failed Conn: %s to %s failed
Bristol Env AutoConn: %s to %s
Bristol Defaulted Conn: %s to %s failed
Bristol Defaulted Conn: %s to %s
Bristol Env AutoConn: %s to %s failed
unregistering jack interface: %p->%p
bristol
libbristolaudio.so.0.0.68.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rel.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rel.plt
.got.plt
.got
.text
