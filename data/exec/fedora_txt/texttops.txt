/lib64/ld-linux-x86-64.so.2
JoiS|
F@C0#
libcups.so.2
__gmon_start__
_Jv_RegisterClasses
cupsMarkOptions
ppdPageSize
ppdOpenFile
ppdClose
_cupsLangPrintf
ppdMarkDefaults
cupsGetOption
cupsParseOptions
ppdIsMarked
libgnutls.so.26
libavahi-common.so.3
libavahi-client.so.3
libpthread.so.0
__errno_location
libm.so.6
libcrypt.so.1
libaudit.so.0
libselinux.so.1
libc.so.6
__printf_chk
exit
_IO_putc
setlocale
fopen
strncmp
__strdup
perror
puts
__stack_chk_fail
stdin
strftime
strtod
strtol
fgets
calloc
strlen
memset
__fprintf_chk
stdout
fclose
malloc
strcasecmp
__strndup
getenv
__ctype_b_loc
stderr
__snprintf_chk
fscanf
fwrite
fread
localtime
__cxa_finalize
bsearch
_IO_getc
setbuf
strcmp
strerror
__libc_start_main
free
_edata
__bss_start
_end
LanguageLevel
NumFonts
__libc_csu_fini
NumKeywords
Page
Codes
WrapLines
Chars
PrettyPrint
Duplex
SizeColumns
Widths
Orientation
__libc_csu_init
PageColumns
Copies
PageBottom
ColumnWidth
LinesPerInch
PageWidth
PageLeft
Glyphs
ColorDevice
Directions
ColumnGutter
CharsPerInch
NumPages
SizeLines
PageLength
PageRight
PageTop
GLIBC_2.2.5
GLIBC_2.4
GLIBC_2.3
GLIBC_2.3.4
%z~ 
%r~ 
%j~ 
%b~ 
%Z~ 
ATSubH
=p{ 
=Ox 
=7x 
ATUSH
%f{ 
-nz 
[]A\
[]A\
AWAVAUATUH
%Gy 
5xx 
%aw 
([]A\A]A^A_
59v 
AVAUATUSH
D$H1
L$8H
T$8H
L$01
uSD9
d$ E
T$(A
d$ H
T$(I9
L$8H
D$HdH3
[]A\A]A^A_
AUATUH
D$pH
ED$pH
=(o 
L$xL
%Mo 
~.Hc3I
%2l 
L$pL
D$`1
|$`H
T$8H
Courier
Courier-I
Oblique
D"@f
L$XD
D$XHcD$P
ET$8H
T$8E
HcD$8H
D$@L
l$HL
|$l9|$P
t$HL
|$8H
T$HH
d$XH
L$8H
T$PH
T$Hf.
|$8J
t$8H
t$8H
T$8H
|$X9|$@}TH
D$HH
HcD$8H
D$@L
d$XL
d$lL
t$@L
|$HM
l$XD
|$8A
;L$8M
|$HD
t$@L
l$X}*H
L$pH
|$`L
|$`H
D;t$l}`H
L$PL
|$HD
t$@L
-oa 
~xIc
~yHc
\$ H
=D_ 
L$xH
L$xH
\$PH
L$8H
L$8H
T$@H
\$PH
[]A\A]A^A_
L$8H
T$xH
=:Z 
L$`H
L$pH
|$`L
|$`H
|$@H
|$@1
=-X 
T$8H
T$@H
t$HH
|$@H
t$HH
D$PI
L$`H
L$`I
L$ H
=UU 
t$0Lc(L
t$0H
D;l$PH
L$ H
t$0Lc/H
L$ H
t$0Hc
L$ upH
L$ u8H
d$ H
AWAVAUI
ATUH
T$X1
T$XH
T$XH
T$XH
T$XH
T$XH
D$(H
t$`L
t$PH
t$HL
D$PH;D$
d$4$
D$PH;D$
D;(|!H
D$PH;D$
\$$A
L$4$
[]A\A]A^A_
\$$E
T$4E
D$PH;D$
H;D$H
t$PH
L$PH
t$PH
t$8D
*tW@
ID$$
D$$A
D$PH;D$
\$4E
D;(|0H
L$$E
D$4E
|$@L
L$$E
D$4E
5d? 
fffff.
ffffff.
[]A\
%)< 
AWAVAUATUSH
-d: 
D$tH
9D$`A
|$`D
Hct$`A
D$hH
D$xA
T$PH
t$hIc
L$hIc
[]A\A]A^A_
D$xH
l$`A
Y5t,
X%d,
l$0H
X\$`
XD$`
XL$h
|$xH
[]A\A]A^A_
t$PIc
T$PH
D$tH
-94 
D$tH
l$0H
L$PH
AVAUA
 []A\A]A^
fffff.
-3& 
%,& 
l$ L
t$(L
|$0H
%04x
\%03o
%.0f 
%.3f 
 %.3f U
%%%%Page: %d %d
%d H
Courier
showpage
%%Trailer
%%%%Pages: %d
%%EOF
texttops
CUPS_DATADIR
/usr/share/cups
%!PS-Adobe-3.0
%%cupsRotation: %d
%%%%CreationDate: %s
Title
%%Pages: (atend)
%s/data/psglyphs
%x%63s
CHARSET
us-ascii
%s/charsets/%s
ERROR: Unable to open %s: %s
ERROR: Bad charset file %s
charset
utf8
ltor
rtol
ERROR: Bad text direction %s
single
double
ERROR: Bad text width %s
ERROR: Bad charset type %s
Courier-Bold
Courier-BoldOblique
%%%%+ font %s
DEBUG: ppd->num_fonts = %d
DEBUG: ppd->fonts[%d] = %s
Symbol
%%EndComments
%%BeginProlog
%%%%BeginResource: font %s
%s/fonts/%s
%%EndResource
% character encoding(s)
/cupsEncoding%02x [
/uni%04X
/.notdef
] def
% Reencode fonts
/%s findfont
/%s exch definefont pop
% Reencode base fonts
% Create composite fonts...
8 dict begin
]def/FDepVector[
%s%02x
%s%02x
%s%02x 
]def currentdict end
% Define fonts
% Common procedures
/n {
	dup length % get length
		P exch 0 put % font 0
		pop % discard character
	} for % do for loop
	P % put string on stack
/H {
	gsave
	0.9 setgray
	dup 2 mod 0 eq {
		%.3f %.3f translate } {
	%.3f %.3f translate
	0 0 %.3f %.3f rectfill
	FB setfont
	0 setgray
		%.3f %.3f } ifelse
	%.3f %.3f
	moveto T show
	moveto show
	dup n exch 2 mod 0 eq {
		%.3f %.3f } {
	grestore
/S { show } bind def
%%EndProlog
cupsNormal
cupsBold
cupsItalic
ERROR: Unable to print %dx%d text page!
ERROR: Unable to print %d text columns!
%%%%BoundingBox: 0 0 %.0f %.0f
%%Creator: texttops/CUPS v1.4b3
ERROR: Unable to open "%s" - %s
ERROR: Bad font description line: %s
%%%%DocumentNeededResources: font %s
%%DocumentSuppliedResources: procset texttops 1.1 0
dup length 1 add dict begin
	{ 1 index /FID ne { def } { pop pop } ifelse } forall
	/Encoding cupsEncoding00 def
	currentdict
dup length 1 add dict begin
	{ 1 index /FID ne { def } { pop pop } ifelse } forall
	/Encoding cupsEncoding%02x def
	currentdict
/%s%02x exch definefont /%s%02x exch def
/FontType 0 def/FontMatrix[1.0 0 0 1.0 0 0]def/FMapType 2 def/Encoding[
%%BeginResource: procset texttops 1.1 0
/FN /cupsNormal findfont [%.3f 0 0 %.3f 0 0] makefont def
/FB /cupsBold findfont [%.3f 0 0 %.3f 0 0] makefont def
/FI /cupsItalic findfont [%.3f 0 0 %.3f 0 0] makefont def
/N { FN setfont moveto } bind def
/B { FB setfont moveto } bind def
/U { gsave 0.5 setlinewidth 0 %.3f rmoveto 0 rlineto stroke grestore } bind def
/S { 0.0 setgray show } bind def
/r { 0.5 0.0 0.0 setrgbcolor show } bind def
/g { 0.0 0.5 0.0 setrgbcolor show } bind def
/b { 0.0 0.0 0.5 setrgbcolor show } bind def
/r { 0.2 setgray show } bind def
/g { 0.2 setgray show } bind def
/b { 0.2 setgray show } bind def
/I { FI setfont moveto } bind def
	20 string cvs % convert page number to string
	dup 2 mul string /P exch def % P = string twice as long
	0 1 2 index 1 sub { % loop through each character in the page number
		dup 3 index exch get % get character N from the page number
		exch 2 mul dup % compute offset in P
		1 add P exch 2 index put % character
	pop pop % discard string and length
		%.3f %.3f translate } ifelse
		T stringwidth pop neg %.3f add %.3f } {
	D dup stringwidth pop neg 2 div %.3f add %.3f
		dup stringwidth pop neg %.3f add %.3f } ifelse
	n dup stringwidth pop neg %.3f add %.3f
CL7=B
^@333333
?Usage: %s job-id user title copies options [file]
DEBUG: unable to open print file - 
prettyprint
false
CONTENT_TYPE
application/x-cshell
application/x-csource
application/x-perl
application/x-shell
wrap
true
columns
ERROR: Bad columns value %d!
ERROR: Bad cpi value %f!
ERROR: Bad lpi value %f!
page-label
CLASSIFICATION
aliases
break
breaksw
builtins
case
chdir
complete
continue
default
dirs
echo
echotc
else
endif
eval
exec
exit
foreach
glob
goto
history
jobs
kill
logout
nice
nohup
notify
onintr
popd
pushd
rehash
repeat
settc
stop
suspend
switch
telltc
then
umask
unalias
unbindkey
unhash
unlimit
unset
unsetenv
wait
where
which
and_eq
auto
bitand
bitor
bool
catch
char
class
compl
const
const_cast
delete
dynamic_cast
enum
explicit
extern
float
friend
inline
long
mutable
namespace
not_eq
operator
private
protected
public
register
reinterpret_cast
return
short
sizeof
static
static_cast
struct
template
this
throw
typedef
typename
union
unsigned
virtual
void
volatile
xor_eq
accept
alarm
atan2
bind
binmode
bless
caller
chmod
chomp
chop
chown
chroot
closdir
connect
crypt
dbmclose
dbmopen
defined
dump
elsif
endgrent
endhostent
endnetent
endprotoent
endpwent
endservent
exists
fcntl
fileno
flock
fork
format
formline
getc
getgrent
getgrgid
getgrnam
gethostbyaddr
gethostbyname
gethostent
getlogin
getnetbyaddr
getnetbyname
getnetent
getpeername
getpgrp
getppid
getpriority
getprotobyname
getprotobynumber
getprotoent
getpwent
getpwnam
getpwuid
getservbyname
getservbyport
getservent
getsockname
getsockopt
gmtime
grep
import
ioctl
join
keys
last
lcfirst
listen
local
localtime
lstat
mkdir
msgctl
msgget
msgrcv
msgsend
next
opendir
package
pipe
push
quotemeta
readdir
readlink
recv
redo
rename
require
reset
reverse
rewinddir
rindex
rmdir
scalar
seekdir
select
semctl
semget
semop
setgrent
sethostent
setnetent
setpgrp
setpriority
setprotoent
setpwent
setservent
setsockopt
shmctl
shmget
shmread
shmwrite
shutdown
sleep
socket
socketpair
sort
splice
split
sprintf
sqrt
srand
study
substr
symlink
syscall
sysread
sysseek
system
syswrite
tell
telldir
tied
timestimes
truncate
ucfirst
undef
unless
unlink
unpack
unshift
untie
until
utime
values
waitpid
wantarray
warn
command
done
elif
esac
export
function
getopts
newgrp
readonly
test
trap
typeset
ulimit
whencewhile
% x y w h ESPrc - Clip to a rectangle.
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
% x y w h ESPrf - Fill a rectangle.
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
% x y w h ESPrs - Stroke a rectangle.
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
%.1f %.1f translate 180 rotate
0.0 %.1f translate -90 rotate
userdict/ESPlf /Nimbus-Mono findfont 12 scalefont put
userdict/ESPwl{
  ESPlf setfont
  ESPp%c stringwidth pop dup 12 add exch -0.5 mul %.0f add
  dup 6 sub %.0f %d index %.0f ESPrf
  dup 6 sub %.0f %d index %.0f ESPrs
  dup %.0f moveto ESPp%c show
userdict/ESPpf /Helvetica-Bold findfont 14 scalefont put
  ESPpl stringwidth pop dup 12 add exch -0.5 mul %.0f add
  dup 6 sub %.0f 3 index 20 ESPrf
  dup 6 sub %.0f 3 index 20 ESPrs
DEBUG: Page = %.0fx%.0f; %.0f,%.0f to %.0f,%.0f
%.1f 0.0 translate 90 rotate
ESPwl
%%%%%s: (
none
userdict/ESPwl{}bind put
LSPP:
userdict/ESPp%c(
)put
 dup
  1 setgray
  0 setgray
  %.0f moveto ESPp%c show
  pop
}bind put
userdict
confidential
/ESPpl(CONFIDENTIAL
/ESPpl(CLASSIFIED
/ESPpl(SECRET
topsecret
/ESPpl(TOP SECRET
unclassified
/ESPpl(UNCLASSIFIED
/ESPpl(
)put
userdict/ESPwl{
  ESPpf setfont
  1 setgray
  0 setgray
  dup %.0f moveto ESPpl show
  %.0f moveto ESPpl show
landscape
orientation-requested
page-left
page-right
page-bottom
page-top
DuplexNoTumble
DuplexTumble
JCLDuplex
EFDuplex
KD03Duplex
FDtexttops.debug
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
