]1*?x
__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
gegl_chant_get_type
gegl_module_query
g_snprintf
gegl_operation_point_render_get_type
g_type_module_register_type
__stack_chk_fail
gegl_module_register
g_slice_alloc0
babl_format
gegl_operation_set_format
gegl_color_get_rgba
g_type_class_peek_parent
gegl_operation_get_type
g_type_check_class_cast
g_dgettext
g_param_spec_int
g_object_class_install_property
gegl_param_spec_color_from_string
g_object_set_data_full
gegl_color_new
g_object_unref
g_slice_free1
g_type_name
g_log
g_value_set_object
g_value_set_int
g_value_dup_object
g_value_get_int
libgio-2.0.so.0
libgobject-2.0.so.0
libgmodule-2.0.so.0
libgthread-2.0.so.0
librt.so.1
libglib-2.0.so.0
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
checkerboard.so
GLIBC_2.4
GLIBC_2.2.5
ATSubH
fffff.
\$Pf
D$0(
D$ H
D$81
ffff.
fff.
ffff.
AWAVI
ATUSH
|$ H
[]A\A]A^A_
fff.
G vrH
t$(H
L$ H
L$ H
L$ H
t$(H
ffffff.
_ vrH
t$(H
L$ H
L$ H
L$ H
t$(H
T$(H
T$(H
GeglChantcheckerboard.c
RGBA float
output
gegl:checkerboard
render
Checkerboard renderer
gegl-0.0
Width
Height
X offset
x_offset
Y offset
y_offset
Color
black
color1
Other color
white
color2
chant-data
property
../../gegl/gegl-chant.h:481
../../gegl/gegl-chant.h:582
Horizontal width of cells pixels.
Vertical width of cells in pixels.
Horizontal offset (from origin) for start of grid.
Vertical offset (from origin) for start of grid.
One of the cell colors (defaults to 'black')
The other cell color (defaults to 'white')
%s: invalid %s id %u for "%s" of type `%s' in `%s'
checkerboard.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.bss
.gnu_debuglink
