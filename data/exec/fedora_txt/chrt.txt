tdHS
/lib/ld-linux.so.2
libc.so.6
_IO_stdin_used
sched_get_priority_min
__printf_chk
setlocale
strncmp
optind
readlinkat
__strdup
dcgettext
__fxstatat64
closedir
nanosleep
warnx
sched_getparam
_exit
getpid
strspn
strtod
strtol
fgetc
fgets
__openat64_2
calloc
strlen
memset
localeconv
warn
strcspn
__errno_location
open64
read
__fprintf_chk
stdout
fputc
__strtoll_internal
fputs
fclose
strtoul
malloc
sched_setscheduler
__strndup
opendir
__ctype_b_loc
sscanf
stderr
__snprintf_chk
getopt_long
execvp
sched_get_priority_max
__fpending
strchr
program_invocation_short_name
fdopen
readdir64
__cxa_finalize
__sprintf_chk
errx
bindtextdomain
sched_getscheduler
strcmp
__strtoull_internal
__libc_start_main
dirfd
ferror
free
__progname
__cxa_atexit
__stack_chk_fail
_edata
__bss_start
_end
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
GLIBC_2.3
GLIBC_2.1.3
GLIBC_2.2
GLIBC_2.4
GLIBC_2.7
GLIBC_2.1
GLIBC_2.0
GLIBC_2.3.4
D$|1
T$|e3
[^_]
D$p1
D$$uu
d$,[^_]
UWVS
8 tH
[^_]
UWVS
t$Te
D$,1
L$(9
T$,e3
d$<[^_]
UWVS
[^_]
UWVS
[^_]
D$d9F
T$L9
UWVS
d$,[^_]
[^_]
UWVS
|$,e
|$L1
|$ <i
VUUU
D$ d
T$$wFr
D$01
;\$ t
;l$$
\$Le3
d$\[^_]
;|$,
D$41
9t$$t(
L$89
D$,1
UWVS
[^_]
UWVS
|$De
d$,[^_]
UWVS
[^_]
UWVS
|$De
d$,[^_]
UWVS
|$De
d$,[^_]
UWVS
|$De
d$,[^_]
UWVS
|$De
d$,[^_]
|$4e
d$ [^_
d$$[^
UWVS
[^_]
UWVS
D$|1
D$W 
t$|e35
[^_]
gfff
D$<1
L$@!
L$D!
UWVS
[^_]
[^_]
[^_]
UWVS
t$<te
wT<+t@
[^_]
UWVS
[^_]
[^_]
UWVS
[^_]
[^_]
UWVS
l$Te
L$,1
-t"1
|$,e3=
d$<[^_]
UWVS
d$,[^_]
d$,1
[^_]
UWVS
9D$Hwd
[^_]
D$Xe
T$,1
L$,e3
d$<[^_]
d$([
UWVS
[^_]
[^_]
[^_]
[^_]
UWVS
t$,U
[^_]
Show or change the real-time scheduling attributes of a process.
Set policy:
 chrt [options] <priority> <command> [<arg>...]
 chrt [options] -p <priority> <pid>
Get policy:
 chrt [options] -p <pid>
 -b, --batch          set policy to SCHED_BATCH
 -f, --fifo           set policy to SCHED_FIFO
 -i, --idle           set policy to SCHED_IDLE
 -o, --other          set policy to SCHED_OTHER
 -r, --rr             set policy to SCHED_RR (default)
 -R, --reset-on-fork  set SCHED_RESET_ON_FORK for FIFO or RR
 -a, --all-tasks      operate on all the tasks (threads) for a given pid
 -m, --max            show min and max valid priorities
 -p, --pid            operate on existing given pid
 -v, --verbose        display status information
 -h, --help     display this help and exit
 -V, --version  output version information and exit
pid %d's new scheduling policy: 
pid %d's current scheduling policy: 
SCHED_FIFO|SCHED_RESET_ON_FORK
failed to get pid %d's attributes
pid %d's new scheduling priority: %d
pid %d's current scheduling priority: %d
SCHED_%s min/max priority	: %d/%d
cannot obtain the list of tasks
SCHED_RESET_ON_FORK flag is supported for SCHED_FIFO and SCHED_RR policies only
Policy options:
Scheduling flag:
Other options:
For more details see %s.
chrt(1)
failed to get pid %d's policy
SCHED_OTHER
SCHED_FIFO
SCHED_IDLE
SCHED_RR
SCHED_RR|SCHED_RESET_ON_FORK
SCHED_BATCH
unknown scheduling policy
write error
/usr/share/locale
util-linux
SCHED_%s not supported?
invalid PID argument
%s from %s
util-linux 2.27
+abfiphmoRrvV
invalid priority argument
failed to set tid %d's policy
failed to set pid %d's policy
failed to execute %s
all-tasks
batch
fifo
idle
help
other
reset-on-fork
verbose
version
/proc/%d/task/
/proc/%d/cmdline
/proc
%s/stat
%*d (%255[^)])
KMGTPEYZ
kmgtpeyz
%s: '%s'
BKMGTPE
%d%s%jd%s
%d%s
;*2$" 
chrt.debug
7zXZ
XWb%
*w{."
~=5lW
bPw+
7OOH
uSmt
%^r7(
V]CF
~If8
&9!wap
5X|#
Tt//
9Uzg
eL\4
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
