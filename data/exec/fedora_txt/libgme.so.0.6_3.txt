0KCC
`)5P
Gy8g3;
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
__assert_fail
memmove
memset
free
floor
realloc
__stack_chk_fail
malloc
_Unwind_Resume
__gxx_personality_v0
memcpy
_ZTVN10__cxxabiv120__si_class_type_infoE
__cxa_pure_virtual
_ZdlPvm
fseek
fread
feof
ftell
fclose
fopen
_ZTVN10__cxxabiv117__class_type_infoE
fmod
gme_type_list
__cxa_guard_acquire
__cxa_guard_release
gme_identify_header
gme_identify_extension
strrchr
toupper
strcmp
gme_new_emu
gme_load_file
gme_load_data
gme_open_data
gme_load_custom
gme_delete
gme_type
gme_warning
gme_track_count
gme_free_info
gme_track_info
gme_set_stereo_depth
gme_user_data
gme_set_user_data
gme_set_user_cleanup
gme_start_track
gme_play
gme_set_fade
gme_track_ended
gme_tell
gme_seek
gme_voice_count
gme_ignore_silence
gme_set_tempo
gme_mute_voice
gme_mute_voices
gme_enable_accuracy
gme_clear_playlist
gme_type_multitrack
gme_set_equalizer
gme_equalizer
gme_voice_name
gme_type_system
gme_identify_file
gme_open_file
gme_load_m3u_data
gme_load_m3u
log10
memcmp
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_Znwm
strncpy
__memcpy_chk
libstdc++.so.6
libm.so.6
libgcc_s.so.1
libc.so.6
_edata
__bss_start
_end
libgme.so.0
GCC_3.0
CXXABI_1.3.9
GLIBCXX_3.4
CXXABI_1.3
GLIBC_2.2.5
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.14
=yQ$
=xQ$
=YR$
5zO$
=IO$
ATUS
[]A\1
AUATUSH
E4t	E
[]A\A]
w0~1
7HcG
AUATI
Yt$0
D$ f
l$ f
XL$Hf
\T$(
Yd$0
YT$X
YD$@
t$(f
h[]A\A]
G Hco$
AVAUATUH
d$ I
z%u#H
[]A\A]A^
w$dH
D$81
4IH)
D$8dH3
D$ D
AVATUSH
[]A\A^
 t4L
D$(1
D$(dH3
ATUH
[]A\H
[]A\
AVAUI
ATUA
 []A\A]A^
AWAVAUATUSH
[]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
$I;E
U H)
ATUH
[]A\
ATUI
[]A\
ATUSH
[]A\
SH9W
ATUSx.t%H
t H9
AUATI
[]A\A]
ATUI
ATUI
|$([]
t$$A\
AVAUATUS
]A\A]A^
AWAVAUATI
HcCL
H;C0H
D;k$
C8H9
[]A\A]A^A_
AWAVAUATI
HcO 
t;H9
t$ IcT$
IcD$
[]A\A]A^A_
\$ I
[]A\A]A^A_
AWAVAUATI
?IcL$
D$(Mct$,H
4NtdA
I;T$
H+D$
([]A\H
A]A^A_
gfff
VUUU
~AAUATI
[]A\A]
~<AUATA
[]A\A]
ATUI
[]A\
AVAUI
ATUS
uR[A
]A\A]A^
[]A\H
A]A^
AVAUA
ATUI
[]A\A]A^
D$TI
T$@[]A
A\A]A^
D$H1
T$0H
D$HdH3
AVAUA
D$H1
D$(f
D$HdH3
P[]A\A]A^
(AUD
O4ATUS
_4]A\A]A^A_
_4]A\A]A^A_
AWAV
AUATA
G4[]A\A]A^A_
G(AW
AVAUATUSL
L;|$
L;|$
]A\A]A^A_
AWE1
AVAUATUSD
L9T$
G4A\A]A^A_
AWAVAUATUSH
4$H)
~ D9
A\A]A^A_
t(HcW$H
AVAUATUH
T$0f
T$(f
XT$ 
|$`f
D$0E1
d$`A
d$ f
d$xD
YD$`
Y|$p
X\$X
Y\$x
t$(f
X\$ 
X|$h
|$Xr%
|$XD
|$XA
[]A\A]A^
H H)
MSEN
SENSH
t w]
EFSNH
PASH
MSEHH
SBGH
XMYGH
 mgVH
YAXZH
CCSKt
XSSKu
[]A\
AUATUSH
[]A\A]
]A\A]
@HH9
[]A\A]
D$(1
L$(dH3
AUATUSH
[]A\A]
[]A\A]
[]A\A]
D$(1
|$(dH3<%(
AVAUI
]A\A]A^
@`H9
D$X1
D$ H
D$(H
D$0H
D$8H
D$@H
D$XdH3
ATUH
D$(1
L$(dH3
0[]A\
AVAUATUSH
D$81
L$8dH3
@[]A\A]A^
tHHc
t$0H
ATUI
[]A\
]A\H
D$(1
L$(dH3
@@H9
@@H9
ATUI
[]A\
D$(1
|$(dH3<%(
shH9
AUATLc
([]A\A]
umL;e8
M0L)
ubHcU 
HcU$
HcU(
ATUI
 []A\
	ww1
	w01
gfff
Problem I
t liI
in m3u aA
AWAVE1
AUATA
o(dH
([]A\A]A^A_
<$t!
K0E1
8-uh
C E1
t%<:H
S(E1
D$@H
k(Mc
K8E1
K@E1
KHE1
ATUI
[]A\
D$(1
L$(dH3
AUATI
[]A\A]
[]A\A]
ATUI
 []A\
ATUH
o SH
AUATUI
[]A\A]A^
ATUH
[]A\
AUATA
[]A\A]
ATUH
o SH
[]A\A]
AWAV
AUATUS
@t[]A\A]A^A_
OxAV
GtAUD
ghSt
Gt]A\A]A^A_
AVATUSH
[]A\A^
G4tY
AVSH
G4A^
@PH9
@hH9
AUATUSH
uuf.
[]A\A]
[]A\A]
@pH9
u"H	
AUATE1
[]A\A]A^
AWAVAUATI
[]A\A]A^A_
<tM)
tbHc
AVAUH
ATUH
[]A\A]A^
AWAVAUATUSH
X9wH
L$4u
D$$H
D$$H
D$@H
UpHc
D$$	
t$ E9
T$4H
D$$A
D+T$
J4D9
P4E9
L$,H
t$ E9
T$<H
D$8H
L$ +MH+Mh
X[]A\A]A^A_
|$HF
|$ D
D$ )
9q@t9
[]A^A_
!t_A
AVAUATUSH
}8H9
t3Hc
 []A\A]A^
/~3H
AWAVUH
[]A^A_
AWAVAUATI
McppMcxPD
A+H`G
@Tt>H
[]A\A]A^A_
l$(M
AWAVAUATI
D$0A
D$@H
D$HH
D$PH
t$ H
t$$f
H;l$(
GhHc
D3y|
L$4D
`[]A\A]A^A_
AWAVAUATI
D$0A
D$@H
D$HH
D$PH
|$ H
|$$f
H;l$(
4$D3
|$0D
\$4D
L$8D
\$4D
`[]A\A]A^A_
AWAVAUATI
D$,A
D$@H
D$HH
D$PH
|$$H
|$(f
H;l$0
D$ E
L$8D
D$$D#F
`[]A\A]A^A_
AWAVAUATI
D$0A
D$@H
D$HH
D$PH
|$ H
|$$f
H;l$(
\$4D
L$8D
\$4D
`[]A\A]A^A_
AWAVI
AUATI
D$$A
D$8A
D$HH
D$PH
D$XH
D$0D
|$,H
|$0f
t$(L
YhHc
l$$E
L$ D
D$ D3
\$ 1
t$8A
\$<D
h[]A\A]A^A_
AWAVI
AUATI
D$ A
D$8A
D$$I
D$HH
D$PH
D$XH
T$,H
D$(H
L$0H
t$$H
L$(A
l$ D
t$8A
D$$D
\$<D
T$@D
\$<D
h[]A\A]A^A_
AWAVI
AUATI
D$$A
D$8A
D$HH
D$PH
D$XH
T$,H
T$0f
t$(L
L$ A
l$$D
\$8%
|$ H
T$@D
\$<D
h[]A\A]A^A_
AWAVI
AUATI
D$8A
D$$H
D$HH
D$PH
D$XH
t$,H
|$0H
\$$D
D$ H
t$(L
D$ D
L$$D
L$8A
D$(H
\$<D
T$@D
)D#G
\$<D
h[]A\A]A^A_
ATUA
w,A9
O,[]A\
w,D9
O,[]A\
AUATUSH
#OD1
[]A\A]
t(Hc
HcP(L
[]A\A]A^
o ATUSH
[]A\A]1
AUATUSH
Z}ML
[]A\A]
ATUS
[]A\
AWAVL
AUATUSH
D$X1
D$@L
\$ H
l$@I
D$PC
t$PD
t$$D
D$WH
D$Pf
t$ f
D$@f
D$3H
\$XdH3
h[]A\A]A^A_
D$VA
D$TA
L$TD
D$ A
D$4D
\$(D
\$8A
D$TA
D$TA
\$VH
t$TH
D<PH
\$VH
D$VD
D$TA
D$TA
D$VA
D$TA
D$TA
2\$VH
D$TA
"\$VH
t$VH
D$VH
t$VH
D$VH
\$TH
D$TD
T$VD
T$TA
D$VD
D$V	
D$VD
D$QA
D$VH
D$VH
D$RH
T$TD
d$TH
t$TH
t$VH
D$VD
t$PH
t$Rf
t$Tf
D$TD
t$@A
\$4H
T$ E
T$(E
T$ E
D$TD
D$TD
T$(H
T$(D
T$(H
D$4A
T$(A
T$(D
D$TD
D$TD
D$TD
D$TD
D$TD
D$TD
D$(A
D$(H
D$(A
D$VH
T$VE
D$V@
T$VE
D$V@
t$PH
D$4H
L$QH
D$TL
L$TA
D$QA
t$@H
D$VD
D$VH
D$VH
\$8H
t$4H
T$$E
T$$E
ATUI
[]A\
w!Hc
AVAU
]A\A]A^
AUATUSH
[]A\A]
[]A\A]
[]A\A]
AWAVAUATUS
[]A\A]A^A_
|$(I
|$(L
D$ H
D$(H
D$0H
D$8H
D$@H
D$HH
D$PH
D$XH
D$`H
D$hH
D$pH
D$xH
|$(L
t(Hc
HcP(L
[]A\A]A^
AWAVAUATUSH
V8ts
[]A\A]A^A_
9w$| 
AVAUATUS
[]A\A]A^
B,[]A\A]A^
gfffD
A\A]A^)
^ D!FH
[]A\
/wfH
AWAV
AUAT
_pdH
D$@H
D$@H
D$HH
D$PH
D$XH
D$`H
D$hH
D$pH
D$xH
T$4A
D$,D
L$(D
D$6A)
T$4D
D$6A
|$ A
D$(D)
t$4H
|$4H
D$(D
l$4L
D$(L
t$4H
D$(D
t$4H
T$4A
|$ A
D$(D)
t$4H
D$(D
D$6A
t$4H
D$(D
t$4H
D$(D
T$61
D$6A
D$6A
t$4H
D$(D
"D$6
t$4H
D$(D
t$4H
D$(D
t$4H
D$(D
T$4D
D$4f.
T$6H
T$6A
T$4D
T$4D
T$2D
T$2D
D$@H
D$HI
D$PI
D$XI
D$`I
D$hI
D$pI
D$xI
[]A\A]A^A_
T$0D
T$(D
D$6D
T$0D
D$4A
D$6D
T$0D
\$4A
T$0D
d$7A
t$4H
t$4H
t$4H
D$4H
t$4H
D$()
GPu7H
Gdx+=
AVAU
ATUL
;ohD
D+G<
GhE)
O8[]A\A]A^
AWAVA
AUATUS
[]A\A]A^A_
A;D$
AUATA
HcGX
D+W<
_ E)
D+O<t
[]A\A]
D+W<
D$X1
D$XdH3
AUATI
[]A\A]
tAH=
AWAVAUATA
[]A\A]A^A_
ATUH
[]A\
[]A\
AVAUL
ATUH
t$ H
D$81
L$8dH3
@[]A\A]A^
~zATUH
[]A\
ATUI
dH34%(
[]A\
HcT$
VUUUUUUUH
ATU1
AUATUSH
[]A\A]
AUATE1
J,I9
[]A\A]
AWAVI
AUATUSH
[]A\A]A^A_
ATUI
[]A\
ATU1
AWAVH
AUATUSH
\$ E
q8;t$
L$$D
D$ D
Y5+t$
8[]A\A]A^A_
L$$D
L$(D
D$ D
L$(A9
L$$D
QhtPD
T$ E
T$ H
L$$E
~ D)
wHHc
AWAVA
AUATA
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AUATL
C8tFH
[]A\A]
tQ|7
AWAVA
AUATI
D$@I
D$HI
D$PI
D$XI
D$`I
D$hI
D$pI
D$xI
D$@I
D$$A
D$0A
D$4A
D$ A
t$(	
\$ D
T$xD
D$0D
L$(E
\$0E
D$0D
\$$E
\$4E
D$0D
D$0D
1D$$E
D$0D
!D$$E
D$0D
	D$$E
D$0D
D$0D
D$0D
D$0D
D$(	
D$0D
T$(	
D$0D
D$0D
D$0D
D$0D
D$0D
D$0D
D$4D
|$$@
D$4D
|$0A
D$0D
|$$A
D$0D
|$4A
|$ D
D$ H
D$0D
D$0D
D$0D
D$$E
D$4D
D$0D
D$0D
D$0D
D$0D
D$0D
D$0D
D$0D
D$0D
D$0D
D$0D
D$4D
D$0A
D$0D
D$4A
D$0D
D$4E
D$0E
L$$I
L$$D
D$$E
D$4D
|$(1
\$4D
t$,D
|$ E
D$4D
D$0E
L$$D
D$$E
|$$D
T$ Hc
D$4E
C D%
D$0E
D$4D
D$$E
D$0D
|$ E
D$ H
D$01
|$ E
D$4D
|$ Hc
|$(	
D$$E
D$(	
|$$D
|$4E
D$ H
D$4D
D$01
T$$E
T$$D
|$$E
D$ H
HcT$ 
D$01
D$$E
D$4D
D$0E
D$0E
|$0E
D$ H
D$4D
T$4H
D$4E
D$0E
D$$E
D$ E
D$0A
D$01
D$$E
D$4D
D$0E
D$4E
\$0A
|$ E
t$4A
D$$E
D$$E
d$$D
D$0D
D$$A
D$0A
D$4A
D$@I
D$HI
D$PI
D$XI
D$`I
D$hI
D$pI
D$xI
dH3<%(
[]A\A]A^A_
T$$D
T$$D
 ~-H
AVAUA
[]A\A]A^
[]A\A]A^
[]A\A]A^
AVAUATUA
[]A\A]A^
AWAVAUATUSH
|$ H
L$`H
L$@H
D$PH
D$(f
x	A9
|$0D
|$0H
t$8H
L$4H
t$0f
D$WH
D$Pf
t$@H
[]A\A]A^A_
T$VD
D$TH
T$VI
D$0H
t$0D
T$TD
T$4A
D$ H
D$0D
D$TD
D$TI
D$ H
T$VD
T$VE
|$ D
t$TA
D4PH
L$VH
D$0H
D$0D
D$VD
t$TH
|$ A
t$TH
|$ A
D$0H
D$0D
T$VA
t$TH
|$ A
D$TI
D$ H
D2T$VD
T$VE
D$TI
D$ H
D"T$VD
T$VE
T$VI
D$VD
t$(I
T$VA
|$ D
D$0D
D$VD
L$TH
D$TD
L$TA
D$V	
D$QA
D$VI
D$VD
t$(I
D$VD
D$TH
D$0D
D$ H
t$0I
D$0D
T$RH
D$RD
|$TH
|$0A
L$TH
|$ D
D$VD
T$PI
T$Rf
T$Tf
D$TA
|$ D
T$VA
T$VA
T$VA
T$0A
|$0A
|$0A
|$ A
|$ A
L$(H
t$TA
D$TH
t$TA
|$(D
t$TA
|$ H
|$(D
t$TA
L$(H
t$TA
L$(D
t$TA
|$(D
t$TA
L$(H
t$TA
T$(H
t$TA
D$VH
|$ H
d$TL
L$QA
D$TH
T$TH
D$ H
D$VH
D$ H
t$TL
|$ L
t$TD
d$VL
T$0H
t$RH
|$ D
L$TH
L$TH
D$0D
D$ H
D$VH
|$ H
@uhA
w0Hc
AUATL
~{A9
[]A\A]
AWAVAUATUS
[]A\A]A^A_
[]A\A]A^A_I
ATUS
[]A\
te[]A\
[]A\
[]A\
AVAUATUA
[]A\A]A^
AWAVH
G|AUATA
([]A\A]A^A_
OxA9
IcD$
A+T$
OxD9
IcD$
F,A9
OxA9
OxA9
AWAVAUATUS
[]A\A]A^A_
 AVAUATUS
[]A\A]A^
]A\A]A^
]A\A]A^
ATU@
[]A\
[]A\
wOH9
AWAVAUATUSH
\$@L
\$0H
t$(H
D$,H
t$$D
D$,H
|$8f
[]A\A]A^A_
D$(D
D$ D
D$ D
\$ )
D$ D
D$ D
D$ D
D$(D
D$ D
D$ D
D$ D
D$ D
D$(D
D$ D
D$(D
D$ D
D$(D
t$ H
D$ D
D$ D
t$(H
D$ D
D$ D
D$ D
D$,H
D$ D
D$ D
D$ D
D$ D
D$ D
T$ H
T$,Hc
D$ E1
D$ A
D$(D
D$ 1
T$ H
|$,H
D$(D
\$$H
D$ 1
l$$H
\$,H
\$$H
D$$@
D$,H
T$ H
|$,L
D$$1
L$$D
D$ D
T$ H
D$ D
D$(D
\$,H
T$ H
t$,H
D$ E1
D$(D
T$ H
D$$@
D$(D
T$ wIH
T$(v
D$ D
D$ D
T$ H
D$ A
D$(D
D$ D
D$ H
T$ H
D$,D
AWAVAUATUSH
_HD9
P4D9
[]A\A]A^A_
AWAV
AUATI
D;d$
D$(A
l$,fE
8[]A\A]A^A_
AWAV
AUATUSH
D;o(
O(D)
P4A9
[]A\A]A^A_
AUATA
[]A\A]
;G<t2
;G<u
@u%A9
HcG8
tYSH
C u!
AWAVA
AUATUSH
K,E)
[]A\A]A^A_
AWAVAUATUS
[]A\A]A^A_
[]A\A]A^A_
ghUH
[]A\
AWAV
AUATUSH
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
AUATUSHc
w*Hc
[]A\A]
ATUH
|$hH
P]A\
[]A\
AVAUI
ATUL
EH[1
]A\A]A^
ATUSH
[]A\
Y%,<
[]A\
[]A\
[]A\
[]A\
AVAUATUA
[]A\A]A^
ATUH
[]A\
[]A\
AWAVI
AUATI
[]A\A]A^A_
<$Hc
	~,I
~aD9
AWAVAUATI
tRH;
[]A\A]A^A_
D$(H
EyNH
=INFO
=auth
=tlbl
=plst
=NEND
=BANK
=DATA
=timeu
L$ H
L$ u	H
T$0H
L$8L
|$`H
|$`H
s Hc
uWSH
AWAVH
AUATL
D$XH
|$TH
D$@H
|$8H
D$`H
L9l$@
x[]A\A]A^A_
T$(A
A;D$
D9L$
+D$PA
l$hA
l$0D
L$4D
l$PL
A;T$
\$ A
l$0D
L$4D9
E;T$
T$XH
ATUA
[]A\
[]A\
ex[]A\
AWAVI
AUATUSH
D$81
t$ H
T$0I
|$4A
T$0H
\$8dH3
H[]A\A]A^A_
T$4A
|$4A
T$4A
|$4A
T$4A
|$4A
T$4A
\$ E
\$0A
t$$A
T$4A
T$0E
L$0D9
T$0A
\$$A
T$4A
T$$H
t$$D
T$4A
D$$D
u	A9N
D$0A
?"t#)
"t3L
AWAVAUATI
D$5L
~mHc
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
D$(r
u[H9
ATUI
[]A\
[]A\
AWAVAUATA
[]A\A]A^A_
CuNH
AUATUSH
"~1I
[]A\A]
Gl u
s%H9
wLL9
rSH)
r6I9
[]A\
[]A\
Gl uB
wwUH
t"D;]
AWAVAUATUSH
t$XA)
D$XD
L$ H
D$(Ic
D$8A
T$@A
D1|$
T$@A
D!|$
T$@A
D	|$
D$8H
L$(D
T$0H-
D$ A
D$4$\A	
9D$XA
[]A\A]A^A_
\$HL
T$@D
L$HL
T$@A
T$@A
L$HD
D$0F
T$HD
L$@D
\$@D
\$@L
\$HL
T$@B
T$@D
D$0F
L$PL
T$HD
|$(L
L$0Hc
L$HL
L$HL
T$@A
L$HL
d$ E
\$HL
T$@B
T$@D
D$0B
L$(D
D$(J
t$0L
T$@L
T$@A
\$@L
D$0B
T$@A
\$@L
D$0B
d$ E
|$0A
|$0L
L$ A
D$0B
D$0B
T$@A
\$@L
\$HL
T$@H
T$@D
D$0F
T$PD
\$@D
\$@L
\$PL
T$HD
D$@L
T$HL
t$0I
H+D$(H=
T$8L
D$0H
L$PD
\$HL
T$@L
L$PL
T$@D
D$ D
T$@L
D$0H
\$HL
T$@H
T$@	D$
L$\L
D$HL
L$\	
\$@L
L$8H
|$(A
L$4H
H+D$(H
L$8H=
D$4$\	
H+D$(H=
T$8L
\$HL
T$@H
\$H	D$
\$ L
|$ L
\$HL
T$@H
\$H!D$
L$ H
H+D$(H=
T$8L
t$0I
D$ D
|$ A
D$8H
H+D$(H=
T$8L
\$4D
T$0D
\$HL
T$@H
T$@1D$
T$0L
\$HL
T$@D
T$@A
D$ L
T$@A
\$HL
T$@H
|$8H
H+D$(H=
T$8L
t$(A
D$8L
L+\$(
L$HL
T$@I
|$8H
L$(H
D$8H
D$4@
D$ D
T$@D
L$@L
L$@L
|$ A
D$ D
T$4A	
\$(H
L$8H
H+D$(H=
T$8L
HcD$
|$(L
D$8D
T$@A
T$0I
D$0H
|$8H
H+D$(H=
T$8L
D$ A
L$ A	
\$PL
T$HD
D$@L
T$HL
D$0H
|$0L
D$0D
D$0D
t$8H
|$(H
D$0H
L$ A
D$0H
t$0I
D$ D
L$PD
\$HL
T$@L
L$PL
T$@D
T$@L
L$@A
\$@L
D$ D
\$HL
D$ A
T$@D
t$0I
\$ L
D$ ,
D$4@
D$ D
D$ D
D$0H
t$0I
t$0I
\$HL
T$@H
T$@!D$
H+D$(H=
T$8L
t$0A)
\$HL
T$@L
T$@D
|$8H
\$HD
T$@D
T$@D
L$(I)
D$0H
T$@L
D$0H
L$(H
D$(B
D$(B
D$8A
D$(B
\$HL
T$@L
L$8H
D$8A
\$HL
T$@A
D$(D
D$(B
\$HL
\$HL
D$8L
D$8D
D$8L
D$8L
D$8D
D$8L
D$8D
\$HL
\$HL
T$@L
\$HL
\$HL
\$HL
T$@D
T$@A
x,Lc
T$@A
T$@A
t&Hc
AWAVAUATUSH
D$ A
T$4H
\$@H
\$<I
D$\A
D$HI
t$@L
t$(M
HcFl
VhE1
A T$|
W,H9
F0H9
H;4$
T$=A
|$ E1
T$mA
T$/E
L$?E
|$_A
t$oD
 uzA
D$lA
|$<E
|$8A
M t\L
X[]A\A]A^A_
@`H-
AWAVAUATUSH
D$5H
D$ I
D$4 
gfffH
[]A\A]A^A_
|$ H
AUATI
t$.H
t$NH
t$nH
t$~H
[]A\A]
]A\A]
R`H9
ATUSH
[]A\
ATUI
[]A\
AWAVL
AUATI
[]A\A]A^A_
,HH)
AVAUI
ATUH
]A\A]A^
[]A\A]A^H
AWAVAUATI
?IcL$
D$(Mct$,H
4NtdA
I;T$
H+D$
([]A\H
A]A^A_
AUATUSH
~~E1
[]A\A]
<VH9
[]A\A]
USHc
ATE1
US~8H
[]A\
AWAVAUATUSH
D$X1
D$XdH3
h[]A\A]A^A_
Hct$
D$(1
t$ t
D$ H
*L$ 
t$(dH34%(
[]A\
[]A\
AVAUI
ATUH
 []A\A]A^
AWAVI
AUATA
A\A]A^A_
bt2@
AUATU
]A\A]A^
H@L9
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Blip_Buffer.cpp
buffer_size_ != silent_buf_size
samples_avail() <= (long) buffer_size_
count <= samples_avail()
factor > 0 || !sample_rate_
Out of memory
length_ == msec
kernel_unit > 0
void Blip_Buffer::mix_samples(const blip_sample_t*, long int)
void Blip_Synth_::volume_unit(double)
blip_time_t Blip_Buffer::count_clocks(long int) const
void Blip_Buffer::remove_silence(long int)
void Blip_Buffer::end_frame(blip_time_t)
blip_resampled_time_t Blip_Buffer::clock_rate_factor(long int) const
const char* Blip_Buffer::set_sample_rate(long int, int)
MbP?+
b@333333
?clocks_emulated
n <= size_
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Classic_Emu.h
!buf && new_buf
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Classic_Emu.cpp
(ch.center && ch.left && ch.right) || (!ch.center && !ch.left && !ch.right)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/blargg_common.h
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
T& blargg_vector<T>::operator[](size_t) const [with T = unsigned char; size_t = long unsigned int]
virtual const char* Classic_Emu::play_(long int, Music_Emu::sample_t*)
virtual void Classic_Emu::mute_voices_(int)
11Classic_Emu
13Silent_Buffer
Read error
Error seeking in file
Couldn't read from file
n >= 0
Couldn't open file
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Data_Reader.cpp
virtual const char* File_Reader::skip(long int)
Unexpected end of file
11Data_Reader
11File_Reader
15Std_File_Reader
15Mem_File_Reader
13Subset_Reader
16Remaining_Reader
15Callback_Reader
new_count < resampler_size
write_pos <= buf.end()
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Dual_Resampler.cpp
blip_buf.samples_avail() == pair_count
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Fir_Resampler.h
count == (long) sample_buf_size
void Fir_Resampler_::write(long int)
T& blargg_vector<T>::operator[](size_t) const [with T = short int; size_t = long unsigned int]
void Dual_Resampler::play_frame_(Blip_Buffer&, Dual_Resampler::dsample_t*)
14Dual_Resampler
total_samples % 2 == 0
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Effects_Buffer.cpp
virtual long int Effects_Buffer::read_samples(blip_sample_t*, long int)
14Effects_Buffer
Mb@?
MbP?
T& blargg_vector<T>::operator[](size_t) const [with T = short int; size_t = long unsigned int]
NSFE
(data || !size) && out
path && out
/builddir/build/BUILD/game-music-emu-0.6.0/gme/gme.cpp
(unsigned) i < (unsigned) me->voice_count()
const char* gme_type_system(gme_type_t)
const char* gme_voice_name(const Music_Emu*, int)
const char* gme_open_file(const char*, Music_Emu**, int)
const char* gme_open_data(const void*, long int, Music_Emu**, int)
< ? >
data != file_data.begin()
*(volatile char*) &i != 0
Invalid track
Invalid track in m3u playlist
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Gme_File.cpp
/builddir/build/BUILD/game-music-emu-0.6.0/gme/blargg_endian.h
Wrong file type for this emulator
T& blargg_vector<T>::operator[](size_t) const [with T = M3u_Playlist::entry_t; size_t = long unsigned int]
virtual const char* Gme_File::load_mem_(const byte_*, long int)
void blargg_verify_byte_order()
8Gme_File
/builddir/build/BUILD/game-music-emu-0.6.0/gme/M3u_Playlist.cpp
raw_track_count_
Not an m3u playlist
Composer
Engineer
Ripping
Tagging
T& blargg_vector<T>::operator[](size_t) const [with T = M3u_Playlist::entry_t; size_t = long unsigned int]
const char* Gme_File::load_m3u_(blargg_err_t)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Multi_Buffer.cpp
!(count & 1)
virtual long int Stereo_Buffer::read_samples(blip_sample_t*, long int)
12Multi_Buffer
11Mono_Buffer
13Stereo_Buffer
Use full emulator for playback
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Music_Emu.cpp
(unsigned) index < (unsigned) voice_count()
!sample_rate()
current_track() >= 0
!buf_remain
out_count % stereo == 0
emu_time >= out_time
Voice 1
Voice 2
Voice 3
Voice 4
Voice 5
Voice 6
Voice 7
Voice 8
const char* Music_Emu::play(long int, Music_Emu::sample_t*)
void Music_Emu::fill_buf()
const char* Music_Emu::skip(long int)
void Music_Emu::set_tempo(double)
void Music_Emu::mute_voices(int)
void Music_Emu::mute_voice(int, bool)
virtual void Music_Emu::pre_load()
const char* Music_Emu::set_sample_rate(long int)
9Music_Emu
9Gme_Info_
N@/builddir/build/BUILD/game-music-emu-0.6.0/gme/Ay_Apu.cpp
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Blip_Buffer.h
(blip_long) (time >> BLIP_BUFFER_ACCURACY) < blip_buf->buffer_size_
(unsigned) addr < reg_count
final_end_time >= last_time
-remain <= env_period
env.delay > 0
env.pos < 0
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void Ay_Apu::run_until(blip_time_t)
void Ay_Apu::write_data_(int, int)
=*>&
 -@Z
void Ym2612_Impl::write0(int, int)
void Ym2612_Impl::write1(int, int)
void Ym2612_Impl::set_rate(double, double)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Ym2612_Emu.cpp
clock_rate > sample_rate
(unsigned) data <= 0xFF
!Y?H
0?xwwwww
'	UA
B/builddir/build/BUILD/game-music-emu-0.6.0/gme/Sms_Apu.cpp
(center && left && right) || (!center && !left && !right)
(unsigned) index < osc_count
void Sms_Apu::write_data(blip_time_t, int)
void Sms_Apu::write_ggstereo(blip_time_t, int)
void Sms_Apu::end_frame(blip_time_t)
void Sms_Apu::run_until(blip_time_t)
void Sms_Apu::osc_output(int, Blip_Buffer*, Blip_Buffer*, Blip_Buffer*)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
333333[?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Ay_Cpu.cpp
false
bool Ay_Cpu::run(cpu_time_t)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Ay_Apu.h
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Ay_Emu.cpp
(unsigned long) pos <= (unsigned long) file_size - 2
last_time >= time
(unsigned) i < osc_count
Missing track data
ZXAYEMUL
Unknown file version
File data missing
Bad data block size
Missing file data
ZX Spectrum
Wave 1
Wave 2
Wave 3
Beeper
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
void Ay_Apu::end_frame(blip_time_t)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void Ay_Apu::osc_output(int, Blip_Buffer*)
const byte_* get_data(const Ay_Emu::file_t&, const byte_*, int)
6Ay_Cpu
6Ay_Emu
7Ay_File
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Gb_Apu.cpp
(unsigned) index < register_count
next_frame_time >= end_time
(unsigned) data < 0x100
int Gb_Apu::read_register(blip_time_t, unsigned int)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Gb_Apu::write_register(blip_time_t, unsigned int, int)
void Gb_Apu::end_frame(blip_time_t)
void Gb_Apu::run_until(blip_time_t)
void Gb_Apu::osc_output(int, Blip_Buffer*, Blip_Buffer*, Blip_Buffer*)
<`YY
zD?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Gb_Cpu.cpp
start % page_size == 0
size % page_size == 0
bool Gb_Cpu::run(blargg_long)
void Gb_Cpu::map_code(gb_addr_t, unsigned int, void*)
void blargg_verify_byte_order()
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
 0@P`p
Invalid timer mode
Game Boy
Square 1
Square 2
Noise
Invalid load/init/play address
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Music_Emu.h
Emulation error (illegal/unsupported instruction)
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
T& blargg_vector<T>::operator[](size_t) const [with T = unsigned char; size_t = long unsigned int]
void Music_Emu::set_gain(double)
6Gb_Cpu
7Gbs_Emu
8Gbs_File
333333
r@Packed GYM file not supported
GYMX
Unknown Song
Unknown Game
Unknown Publisher
Unknown Person
Header added by YMAMP
Sega Genesis
FM 1
FM 2
FM 3
FM 4
FM 5
FM 6
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
7Gym_Emu
8Gym_File
@/builddir/build/BUILD/game-music-emu-0.6.0/gme/Hes_Apu.cpp
noise_lfsr
osc->last_time >= end_time
void Hes_Apu::end_frame(blip_time_t)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Hes_Osc::run_until(Hes_Osc::synth_t&, blip_time_t)
void Hes_Apu::osc_output(int, Blip_Buffer*, Blip_Buffer*, Blip_Buffer*)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Hes_Cpu.cpp
(unsigned) reg <= page_count
(unsigned) bank < 0x100
T& blargg_vector<T>::operator[](size_t) const [with T = unsigned char; size_t = long unsigned int]
void Hes_Cpu::set_mmr(int, int)
void blargg_verify_byte_order()
HESM
DATA
Data header missing
Unknown header data
Invalid address
Invalid size
Extra file data
Multiple DATA not supported
state == &state_
PC Engine
Wave 4
Multi 1
Multi 2
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
void Hes_Cpu::end_frame(hes_time_t)
void Music_Emu::set_gain(double)
Emulation error (illegal instruction)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Hes_Cpu.h
Scanline interrupt unsupported
7Hes_Cpu
7Hes_Emu
8Hes_File
@333333
?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Kss_Cpu.cpp
addr % page_size == 0
bool Kss_Cpu::run(cpu_time_t)
void Kss_Cpu::map_mem(unsigned int, blargg_ulong, void*, const void*)
Sega Master System
Game Gear
KSCC
KSSX
Unknown data in header
FM sound not supported
last_time >= 0
Excessive data size
Bank data missing
Square 3
Wave 5
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Kss_Scc_Apu.h
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
void Scc_Apu::end_frame(blip_time_t)
void Ay_Apu::end_frame(blip_time_t)
T& blargg_vector<T>::operator[](size_t) const [with T = unsigned char; size_t = long unsigned int]
void Ay_Apu::osc_output(int, Blip_Buffer*)
void Scc_Apu::osc_output(int, Blip_Buffer*)
7Kss_Cpu
7Kss_Emu
8Kss_File
@ffffff
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Apu.h
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Apu.cpp
(unsigned) osc < osc_count
end_time >= last_dmc_time
last_dmc_time >= 0
addr > 0x20
void Nes_Apu::write_register(nes_time_t, nes_addr_t, int)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void Nes_Apu::end_frame(nes_time_t)
void Nes_Apu::run_until_(nes_time_t)
void Nes_Apu::run_until(nes_time_t)
void Nes_Apu::osc_output(int, Blip_Buffer*)
2]?!
;t?S
uqk?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Cpu.cpp
start + size <= 0x10000
Invalid bank
void Nes_Cpu::map_code(nes_addr_t, unsigned int, const void*, bool)
void blargg_verify_byte_order()
T& blargg_vector<T>::operator[](size_t) const [with T = unsigned char; size_t = long unsigned int]
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Fme7_Apu.cpp
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void Nes_Fme7_Apu::run_until(blip_time_t)
"0D`
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Namco_Apu.h
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Namco_Apu.cpp
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 15; blip_resampled_time_t = unsigned int]
void Nes_Namco_Apu::end_frame(blip_time_t)
void Nes_Namco_Apu::osc_output(int, Blip_Buffer*)
NK?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Oscs.cpp
prg_reader
void Nes_Dmc::fill_buffer()
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
 !!"#$$%&&'())*++,--.//0012234455677889::;;<<==>??@@AABBCCDDEFFGGHHIIJJKKKLLMMNNOOPPQQRRRS
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Vrc6_Apu.h
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Vrc6_Apu.cpp
(unsigned) osc_index < osc_count
(unsigned) reg < reg_count
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void Nes_Vrc6_Apu::end_frame(blip_time_t)
void Nes_Vrc6_Apu::write_osc(blip_time_t, int, int, int)
void Nes_Vrc6_Apu::run_until(blip_time_t)
void Nes_Vrc6_Apu::osc_output(int, Blip_Buffer*)
gz?Famicom
Triangle
Square 4
Square 5
Saw Wave
Wave 6
Wave 7
Wave 8
Nintendo NES
Uses unsupported audio expansion hardware
NESM
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Fme7_Apu.h
Corrupt file (invalid load/init/play address)
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
void Nes_Fme7_Apu::end_frame(blip_time_t)
void Nes_Namco_Apu::osc_output(int, Blip_Buffer*)
void Nes_Vrc6_Apu::osc_output(int, Blip_Buffer*)
void Nes_Apu::osc_output(int, Blip_Buffer*)
void Music_Emu::set_gain(double)
7Nes_Cpu
7Nsf_Emu
8Nsf_File
LO;A
^9AUUUUUX
Corrupt file
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
T& blargg_vector<T>::operator[](size_t) const [with T = char [4]; size_t = long unsigned int]
T& blargg_vector<T>::operator[](size_t) const [with T = char; size_t = long unsigned int]
T& blargg_vector<T>::operator[](size_t) const [with T = const char*; size_t = long unsigned int]
T& blargg_vector<T>::operator[](size_t) const [with T = unsigned char; size_t = long unsigned int]
8Nsfe_Emu
9Nsfe_File
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void blargg_verify_byte_order()
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Sap_Apu.h
Invalid play address
Invalid init address
Invalid music address
ROM data missing
Invalid fastplay value
Unsupported player type
Digimusic not supported
Invalid track count
INIT
PLAYER
MUSIC
SONGS
TYPE
STEREO
FASTPLAY
AUTHOR
NAME
DATE
Invalid file data block
Atari XL
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
void Sap_Apu::osc_output(int, Blip_Buffer*)
7Sap_Cpu
7Sap_Emu
8Sap_File
?Not an SPC file
Corrupt SPC file
(size & 1) == 0
out <= out_end
(count & 1) == 0
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Snes_Spc.cpp
out <= &m.extra_buf [extra_size]
const char* Snes_Spc::play(int, Snes_Spc::sample_t*)
void Snes_Spc::save_extra()
void Snes_Spc::set_output(Snes_Spc::sample_t*, int)
SNES-SPC700 Sound File Data v0.30
(G46&TThHGEVUe"F(G46&TTtHGEVUe"8(G46&DTfHGEVUE"C(G46&DTuHGEVUU"6(G46&TREHGEVUU"
8G46&DRDHGEVUU"48GEG%dRIHGVgEU"
(G46$SC@HGEV4T"`F
BOOST::uint8_t* Snes_Spc::run_until_(Snes_Spc::time_t)
void Snes_Spc::end_frame(Snes_Spc::time_t)
int Snes_Spc::cpu_read(int, Snes_Spc::rel_time_t)
void Snes_Spc::cpu_write_high(int, int, Snes_Spc::rel_time_t)
void Spc_Dsp::write(int, int)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Spc_Dsp.h
(unsigned) addr < register_count
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Spc_Cpu.cpp
RAM [i + rom_addr] == (uint8_t) data
reg + (r_t0out + 0xF0 - 0x10000) < 0x100
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Spc_Cpu.h
-cpu_lag_max <= m.spc_time && m.spc_time <= 0
rel_time <= 0
SPC emulation error
m.spc_time <= end_time
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Spc_Dsp.cpp
brr_offset == brr_block_size
m.ram
void Spc_Dsp::soft_reset_common()
void blargg_verify_byte_order()
void Spc_Dsp::run(int)
void Spc_Dsp::set_output(Spc_Dsp::sample_t*, int)
gRWF=Y
xid6
SNES-SPC700 Sound File Data
Super Nintendo
DSP 1
DSP 2
DSP 3
DSP 4
DSP 5
DSP 6
DSP 7
DSP 8
void Fir_Resampler_::write(long int)
T& blargg_vector<T>::operator[](size_t) const [with T = short int; size_t = long unsigned int]
void Music_Emu::set_gain(double)
7Spc_Emu
8Spc_File
@/builddir/build/BUILD/game-music-emu-0.6.0/gme/Spc_Filter.cpp
void SPC_Filter::run(short int*, int)
Gd3 
Sega SMS/Genesis
Vgm 
YM2413 FM sound isn't supported
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
7Vgm_Emu
8Vgm_File
rhU?
R@/builddir/build/BUILD/game-music-emu-0.6.0/gme/Vgm_Emu_Impl.cpp
to_fm_time( vgm_time ) <= min_pairs
Stream lacked end event
Unknown stream event
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
virtual int Vgm_Emu_Impl::play_frame(blip_time_t, int, Vgm_Emu_Impl::sample_t*)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
12Vgm_Emu_Impl
;*3$"
zPLR
libgme.so.0.6.0.debug
7zXZ
7%B]
{u5j
%1%e.
4>[D
x}jr
97T8
b^&L
,-ZMq
|I|.
!7k6
6!	R-"
y`1<
y^4m
KW>*
Zu`"
.oQd
5*d,E
SK${
Rg+?
9K0Vw
JA+o<9a
TU;S
YO|U
l")c
_n_y
Us<M
.RL[
E4OUA	);
3Yap
Qu7+@I
kwoa
$tB2
clun
k[^f]
Zx9}!
yG[)
b10Y-
p#B7
[y[D
bG/,
k,tcu	P
w_}`
N}jo
'e\C
 x]"
 _cA
(H~C>
4Acy#6
7RC vH
/VqJh
k@Q	
y;A]q
+^@Gg
n]/rT
	ii,c
d[a0
'5Ea
qK"/
~ieU
k$0zI
sa]h
#ZR'3
!aq/
60pN7
QEDy
l$,K
KcIp
91l2
'aYB	'
InA`c
V}Ut
pJ*>
^Sse
gU$b]
+9%N`I
GGF(
>d15
\%-H:
/pii
DZ1&-
VW*;
}jBhY
U_Kbn
+f95
.g$fI
88O{e
HrA:
1BER:9
	CT6
(}cy
]~Tp
,yEm
?0+l
-O`X
N3md
>@s56Dh
-8^X[
ju)j
BKAj
Muu/V
6iuY
=5|TZ
4Q>/
WxE 
dS97
@IzkV]54
se_|
PQjA
:XzF
L"!-jJ
?V_y
{:94!
:vChZ
wCVD
GX21
c?Hf_
JquD
g9x]
qjYoo
^yTg:
e<IF
\2	d
waas
@oXv\
)vW*
lLU2
;s4g*
3bJ]
QU?"}+
&f!,
 \j(
^q'8_?
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.init
.plt
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.data
.bss
.gnu_debuglink
.gnu_debugdata
