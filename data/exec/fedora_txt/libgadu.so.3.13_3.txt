1!A)
D!P&
efpZ
[tOM
{A*IB#
t	rh
Kt+K
~g5p2c
z8h%
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
gg_vsaprintf
__vsnprintf_chk
malloc
gg_saprintf
gg_get_line
strchr
strlen
gg_read_line
gg_debug
__errno_location
gg_connect
inet_ntoa
socket
gg_local_ip
bind
ioctl
close
gg_chomp
gg_urlencode
gg_http_hash
__snprintf_chk
gg_base64_encode
gg_base64_decode
calloc
memchr
gg_proxy_auth
gg_proxy_enabled
gg_proxy_username
gg_proxy_password
gg_crc32
__memcpy_chk
strtoul
realloc
memcpy
gg_debug_session
strdup
gnutls_global_init
gnutls_rnd
gnutls_global_deinit
gg_dcc_free
gg_dcc_request
gg_send_message_ctcp
gg_dcc_fill_file_info2
open
__fxstat
gg_fix32
strrchr
__ctype_toupper_loc
strncpy
gg_dcc_fill_file_info
gg_dcc_get_file
gg_dcc_send_file
gg_dcc_voice_chat
gg_dcc_set_type
gg_dcc_socket_create
listen
gg_dcc_voice_send
gg_dcc_watch_fd
strncmp
lseek
__read_chk
getsockopt
__recv_chk
gg_send_packet
getsockname
gg_dcc7_send_file
gg_file_hash_sha1
gg_dcc7_send_file_fd
gg_dcc7_accept
gg_dcc7_reject
gg_dcc7_handle_id
gg_dcc7_handle_accept
gg_dcc7_handle_info
strstr
strtoull
inet_addr
strtol
gg_dcc7_handle_reject
gg_dcc7_watch_fd
gg_fix16
gg_dcc7_free
gg_dcc7_handle_new
gg_debug_common
gg_debug_handler_session
gg_debug_handler
gg_debug_level
gg_debug_file
__vfprintf_chk
stderr
__sprintf_chk
gg_debug_state
gg_debug_event
deflateInit_
deflateBound
deflate
deflateEnd
inflateInit_
inflate
inflateEnd
memmove
gg_recv_packet
gnutls_handshake
gnutls_compression_get
gnutls_compression_get_name
gnutls_mac_get
gnutls_mac_get_name
gnutls_kx_get
gnutls_kx_get_name
gnutls_cipher_get
gnutls_cipher_get_name
gnutls_protocol_get_version
gnutls_protocol_get_name
gnutls_certificate_type_get
gnutls_certificate_verify_peers2
gnutls_strerror
gnutls_x509_crt_init
gnutls_certificate_get_peers
gnutls_x509_crt_import
gnutls_x509_crt_deinit
gnutls_record_get_direction
gnutls_x509_crt_get_dn
gnutls_x509_crt_get_issuer_dn
gnutls_x509_crt_check_hostname
__isoc99_sscanf
strncasecmp
__ctype_b_loc
stpcpy
gg_event_free
gg_pubdir50_free
gg_image_queue_remove
gnutls_deinit
gnutls_init
gnutls_set_default_priority
gnutls_credentials_set
gnutls_transport_set_ptr
gnutls_certificate_allocate_credentials
gnutls_certificate_set_x509_system_trust
gg_watch_fd
gg_login_hash
gg_http_watch_fd
gg_http_stop
gg_http_free_fields
gg_http_free
gg_http_connect
gg_http_set_resolver
gg_proxy_host
gg_proxy_port
gnutls_error_is_fatal
gnutls_record_send
socketpair
gg_is_gpl_compliant
gg_libgadu_version
gg_read
gnutls_record_recv
gg_write
__assert_fail
gg_free_session
gnutls_certificate_free_credentials
gg_login
gg_session_set_resolver
gg_ping
gg_logoff
gnutls_bye
gg_change_status_descr
gg_change_status
gg_change_status_descr_time
gg_change_status_flags
gg_image_request
gg_image_reply
__strcpy_chk
gg_notify_ex
gg_notify
gg_add_notify_ex
gg_add_notify
gg_remove_notify_ex
gg_remove_notify
gg_userlist_request
gg_userlist100_request
gg_typing_notification
gg_multilogon_disconnect
gg_chat_create
gg_chat_invite
gg_chat_leave
gg_chat_send_message
gg_libgadu_check_feature
gg_send_message
gg_send_message_richtext
gg_send_message_html
gg_send_message_confer
gg_send_message_confer_richtext
gg_send_message_confer_html
gg_socket_manager_connected
gg_proxy_http_only
gg_dcc_ip
gg_dcc_port
gg_userlist_get
gg_userlist_get_watch_fd
gg_userlist_get_free
gg_userlist_put
gg_userlist_put_watch_fd
gg_userlist_put_free
gg_userlist_remove
gg_userlist_remove_watch_fd
gg_userlist_remove_free
gg_search
gg_search_watch_fd
gg_free_search
gg_search_request_mode_0
gg_search_request_mode_1
gg_search_request_mode_2
gg_search_request_mode_3
gg_search_request_free
gg_register
gg_register2
gg_unregister
gg_unregister2
gg_change_passwd
gg_change_passwd2
gg_change_passwd3
gg_remind_passwd
gg_remind_passwd2
gg_change_info
gg_change_info_request_new
gg_change_info_request_free
gg_resolve
gg_resolve_pthread_cleanup
gg_resolve_pthread
gg_pubdir50_handle_reply
gg_login_hash_sha1
protobuf_c_message_get_packed_size
protobuf_c_message_pack
protobuf_c_message_pack_to_buffer
protobuf_c_message_unpack
protobuf_c_message_free_unpacked
gg_token_free
gg_pubdir_watch_fd
gg_pubdir_free
gg_token_watch_fd
gg_register3
gg_unregister3
gg_change_passwd4
gg_remind_passwd3
gg_token
strcmp
gg_pubdir50_new
gg_pubdir50_add
gg_pubdir50_seq_set
gg_pubdir50
strcpy
strcasecmp
gg_pubdir50_get
gg_pubdir50_count
gg_pubdir50_type
gg_pubdir50_next
gg_pubdir50_seq
pthread_join
pthread_cancel
pthread_barrier_init
pthread_create
pthread_barrier_wait
pthread_barrier_destroy
waitpid
kill
gethostbyname_r
pthread_setcancelstate
__gcc_personality_v0
_Unwind_Resume
pthread_exit
fork
gg_gethostbyname
gg_session_get_resolver
gg_session_set_custom_resolver
gg_http_get_resolver
gg_http_set_custom_resolver
gg_global_set_resolver
gg_global_get_resolver
gg_global_set_custom_resolver
gnutls_hash
gnutls_hash_init
gnutls_hash_deinit
libgnutls.so.30
libz.so.1
libprotobuf-c.so.1
libgcc_s.so.1
libpthread.so.0
libc.so.6
__stack_chk_fail
libgadu.so.3
GCC_3.0
GCC_3.3.1
ZLIB_1.2.0
GLIBC_2.1
GLIBC_2.2
GLIBC_2.0
LIBPROTOBUF_C_1.0.0
GNUTLS_3_4
GLIBC_2.1.2
GLIBC_2.7
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.3.4
GLIBC_2.3
a_&	
UWVS
D$$1
l$LUWj
D$6P
,[^_]
UWVS
[^_]
UWVS
D$81
t$dP
T$$j
L$,e3
<[^_]
Ph!T
UWVS
D$,1
0123
4567
D$#89ab
D$'cdef
t$,e35
<[^_]
D$,1
<+ut8
|$,e3=
<[^_]
UWVS
[^_]
UWVS
jAPR
[^_]
[^_]
UWVS
UWPj
T$$RV
[^_]
[^_]
 [^_
UWVS
t$HP
[^_]
t$,j
UWVS
[^_]
[^_]
D$(1
t$HWUP
D$$P
,[^_]
 VWj
t$(j
UWVS
L$x1
FHZYj/
tWPj
\$le3
|[^_]
UWVS
[^_]
UWVS
[^_]
UWVS
[^_]
UWVS
D$,1
t$TPj
L$,e3
<[^_]
UWVS
D$(1
t$LW
UVPj
,[^_]
UWVS
UDAG
[^_]
D$0P
t$8f
D$ Ph!T
t$$V
t$$V
t$$V
t$0V
uD;u@
T$0P
D$,_
t$$V
u<Pj
Uh+U<
U<;Uh
ED;E@
D$$P
D$,Pj
D$8X
t$$V
t$$V
E@+ED
Eh9E<
u<Pj
E<;Eh
}D;}@
t$$V
Eh+E<
D$,X
t[Pj
}h9}<s@
t$D)
u8VPj
VVPj
9p4t+
99x$u
9x(u
D$l1
D$ P
QVRj
D$"j
Pj j
D$HP
RPj j
D$hP
|$le3=
|[^_]
D$(j
Wj#U
,[^_]
UWVS
D$!@
L$|e3
[^_]
T$pR
UWVS
T$LQ
UWVPj
[^_]
UWVS
WVPj
D$$j
,[^_]
UWVS
WVPj
D$(j
,[^_]
UWVS
|$-j
D$=X
D$5Z
D$9Y
t$ j 
[^_]
UWVS
t$@W
UVPj
[^_]
[^_]
UWVS
t$PV
t$PWPj
[^_]
t$\Vj
,[^_]
,[^_]
UWVS
t$0W
UVPj
[^_]
[^_]
UWVS
[^_]
D$0P
D$0Pj
D$$P
D$@P
D$(Ph!T
v<Pj
F@9F<
T$TR
~<;~@
v<Pj
|$TWQ
F<;F@
D$8j
T$4R
D$89D$,
D$<9B
T$<j
D$@P
D$0P
D$0Pj
t$0Pj
D$ n
D$@P
D$<j
T$4R
L$89L$,
D$ZX
|$TWQ
L$<9J
D$@9B
v8Pj
|$X1
t$,j
VWPj
UWVS
t$@V
t$@WPj
[^_]
[^_]
[^_]
>[^_
>[^_
UWVS
l$ U
t$4jPj
t$ j
 ;|$
[^_]
UWVS
L$L1
j8Pj	
,6UW
L$Le3
\[^_]
UWVS
|$L1
L$Le3
\[^_]
UWVS
t$8P
[^_]
D$<9
D$@9D$<
OD$@
9D$@
9\$<
9D$@
9|$@~4
[^_]
9\$@
9L$<
9D$@
[^_]
vTRh
[^_]
[^_]
RjPW
UWVS
[^_]
[^_]
[^_]
UWVS
[^_]
D$ P
|$$W
UWVS
D$ j
t$(Pj
[^_]
EtVWP
_Xj:
UWVS
v`WP
[^_]
[^_]
[^_]
UWVS
[^_]
[^_]
UWVS
[^_]
[^_]
[^_]
,[^_]
UWVS
t$4V
>/w+
[^_]
UWVS
[^_]
UWVS
vpPj
t$$P
[^_]
FtPWR
UWVS
t$0V
[^_]
[^_]
[^_]
[^_]
9pXt
VPj0W
t$$1
t$HP
UWVS
t$Dj
[^_]
UWVS
t$Dj
v,UP
t$ j
[^_]
UWVS
t$Dj
[^_]
UWVS
t$Dj
t$ j
[^_]
UWVS
[^_]
UWVS
t$Dj
u0Pj W
[^_]
UWVS
D$ Y_j
ZYPV
ZYPV
,[^_]
,[^_]
UWVS
t$Dj
[^_]
UWVS
t$Dj
[^_]
UWVS
D$P1
48;t$
|$Le3=
\[^_]
UWVS
<[^_]
t$,9t$(
VWPj
D$$P
D$ P
8;L$
D$0P
t$ V
t$4j
UWVS
[^_]
t$@UP
[^_]
UWVS
;T$,v
[^_]
UWVS
;D$,r
[^_]
|$<*
UWVS
t$HQPj
D$<Q
[^_]
D$<1
t$(V
t$(V
t$(V
t$(V
t$(V
t$(V
UWVS
t$Dj
Pj@W
[^_]
[^_]
UWVS
t$Tj
QWVP
t$,j
9u0w
,[^_]
UWVS
[^_]
|$ tO
UWVS
t$Dj
[^_]
UWVS
[^_]
UWVS
[^_]
UWVS
;L$<
[^_]
W@RP
[^_]
UWVS
T$Pf
;D$<v[
[^_]
|$L+
[^_]
[^_]
UWVS
;D$<vS
[^_]
[^_]
[^_]
t$DW
t$DQR
T$$P
RPj 
[^_]
9D$8
[^_]
[^_]
WPj@
UWVS
VXRP
t$(Pj 
W0RP
,[^_]
j	QPh
<[^_]
UWVS
9t$D
F	9D$D
9D$D
,[^_]
F	9D$D
9D$D
4(9t$D
O 9t$D
,[^_]
;l$D
9t$D
t$L)
,[^_]
PjFV
UWVS
D$$1
t$XVPj
9D$L
9T$L
;T$L
D$P)
|$DZ
w RPj
,[^_]
D$,Pj
UWVS
WUVPj
[^_]
[^_]
UWVS
t$ Pj
D$$P
T$<RPV
t$<j
D$PPja
t$Dj1U
WRPh
D$DP
t$$h
t$$U
[^_]
UWVS
t$0P
[^_]
UWVS
,[^_]
t$,j@U
t$(h
WPj@U
[^_]
UWVS
|$$WR
[^_]
D$$P
D$$Pj
t$$VR
E8WVP
u4Pj
u4_X
u4Pj
EPZY
E<VWP
u@VPj
UWVS
FLUPV
vLPj
,[^_]
t$TU
[^_]
[^_]
WTPj
L$h1
WVPj
D$4PUj
|$\e3=
l[^_]
D$@P
T$$Uj
T$ RUP
[^_]
t$(j
VQPh
F`Pj
UWVS
[^_]
t$8P
[^_]
[^_]
[^_]
UWVS
[^_]
[^_]
UWVS
[^_]
UWVS
|$ W
[^_]
UWVS
t$0V
URPj
FpPV
[^_]
UWVS
[^_]
D$01
[^_]
UWVS
T$HPj
T$<U
T$LP
T$0=
[^_]
[^_]
UWVS
D$$1
|$PW
t$PVPj
D$ X
t$$Wj
D$4Pj8V
,[^_]
UWVS
WVUPj
[^_]
UWVS
l$DW
t$@VPj
t$HUj
[^_]
UWVS
D$01
WUVPj
D$(X
D$,j	
D$+Pj
D$2Pj
D$DPj
L$,e3
<[^_]
UWVS
[^_]
UWVS
T$DR
D$\P
D$F)
[^_]
UWVS
t$PU
t$PPj
L$D)D$L
,[^_]
PPjxW
[^_]
,[^_]
L$L1
XZh4
9t$L
9t$L
9t$L
9t$L
,[^_]
UWVS
UWPj
|?~`
YXUW
Y^j{W
[^_]
UWVS
UWPj
|?~`
YXUW
Y^j|W
[^_]
UWVS
[^_]
[^_]
D$ Pj
UWVS
D$4e
Pj@V
[^_]
Pj@V
t$,P
PjYV
|$(j@W
PjGW
UWVS
T$41
l$dj@
H0WV
T$0X
D$4Z
D$0Ph
T$,e3
<[^_]
UWVS
D$$1
|$Pj@U
E0WV
D$ X
D$(j
D$$PjRU
,[^_]
UWVS
t$01
[^_]
[^_]
UWVS
[^_]
ta;.u
[^_]
UWVS
L$ e
|$`1
t$ P
x|?~#
D$\X
D$H1
D$X]
t$ j
t$DV
t$4PUj
t$`j-
T$\e3
l[^_]
t$,VUPWj
D$lPj-
|$ W
t$ j
D$\Pj
t$,j
t$,j
t$LV
UWVS
t$0UVPj
j	PW
D$DP
[^_]
D$4P
[^_]
UWVS
t$@VRj
T$DR
,[^_]
UWVS
t$0WVPj
D$DP
,[^_]
UWVS
D$<R
UWVQj
D$\	
<[^_]
UWVS
D$LWP
T$(VQj
[^_]
UWVS
D$<R
UWVQj
<[^_]
UWVS
[^_]
[^_]
UWVS
9GHuc
[^_]
[^_]
[^_]
tj+D$8
t$<P
[^_]
[^_]
<spaf
</spf
[^_]
&lt;
&gt;
&amp
&quof
&apof
<br>
&nbsf
UWVS
D$h1
D$<<img1
D$@ nam
D$De="%
D$H02x%
D$L02x%
D$P02x%
D$T02x%
D$X02x%
D$\02x%
D$`02x%
D$d02x"
9</u>
9</i>
9</b>
</spf
t$8j
t$8j
t$Lj
&amp
8</u>
(</i>
(</b>
[^_]
8<br>
8&gt;
8&lt;
&apof
&quof
</spf
UWVS
D$Le
D$l1
D$V1
D$Y1
|$le3=
|[^_]
\$\S
\$qS
\$rS
\$\S
\$qS
\$rS
T$\R
T$qR
T$rR
t$\f
T$_f
D$aj
t=Vj
9D$0
L$Hrf
D$dj
B$[_
t$$Pj@
t$$Pj@
UWVS
|$8W
[^_]
t$4V1
[^_]
t$8Ph
UWVS
v<Pj
[^_]
[^_]
UWVS
,[^_]
u<Pj
D$$P
D$$P
D$$P
u$jP
UUPj
UUPj
UWVS
t$8WP
t$TjPP
[^_]
[^_]
[^_]
[^_]
UWVS
D$$P
t$ P
t$XP
t$djPP
,[^_]
UWVS
t$@VP
t$HP
t$\jPP
[^_]
[^_]
[^_]
UWVS
t$8P
t$HP
t$TjPP
[^_]
[^_]
[^_]
[^_]
WjPP
VQRP
,[^_]
,[^_]
QQPj
RRPj
UWVS
[^_]
UWVS
t$0Vj
ED$$
D$$V
,[^_]
,[^_]
,[^_]
,[^_]
UWVS
t$DV
t$DPj
[^_]
[^_]
UWVS
t$4R
T$8VPj
[^_]
[^_]
[^_]
UWVS
D$81
UWVPj
l$$U
.VPj
L$,e3
<[^_]
[^_]
[^_]
UWVS
D$(1
VWUPj
D$$1
,[^_]
[^_]
UWVS
[^_]
|$0j
D$,P
UWVS
D$ 1
,[^_]
|$,j
|$0V
t$,V
[^_]
[^_]
t$<V
[^_]
[^_]
[^_]
|$0V
[^_]
UWVS
t$,V
[^_]
[^_]
UWVS
t$,V
[^_]
WUPj@
[^_]
[^_]
UWVS
t$<V
[^_]
UWVS
[^_]
WVPj@
[^_]
UWVS
;|$$u
[^_]
t$8Pj@
[^_]
t$(j
UWVS
[^_]
[^_]
t$$Ph
UWVS
|$0V
[^_]
WVPj
UWVPh
UWVS
L$(1
,[^_]
WVQPj@
UWVS
t$4W
t$,W
[^_]
UWVS
D$$1
|$(W
,[^_]
// gg_read_line() error on read (errno=%d, %s)
// gg_read_line() eof reached
// gg_connect() socket() failed (errno=%d, %s)
// gg_connect() bind() failed (errno=%d, %s)
// gg_connect() can't set nonblocking (errno=%d, %s)
// gg_connect() connect() failed (errno=%d, %s)
// gg_connect() connect() in progress
Proxy-Authorization: Basic %s
time diff data is not accessible
// gg_strarr_dup() not enough memory for the array
// gg_strarr_dup() not enough memory for the array element
// gg_rand() gnutls init failed
// gg_rand() gnutls rand failed
** gg_connect(%s, %d, %d);
%s:%s
 n;^
Qkkbal
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
-SEND
** gg_dcc_free(%p);
++ gg_dcc %s (fd=%d,len=%d)
write
** gg_dcc_watch_fd(%p);
read
// gg_dcc_watch_fd() dialin
** gg_dcc_transfer(%s, %d, %u, %u, %s);
// gg_dcc_transfer() invalid arguments
// gg_dcc_transfer() not enough memory
// gg_dcc_transfer() connection failed
** gg_dcc_fill_file_info2(%p, "%s", "%s");
// gg_dcc_fill_file_info2() invalid arguments
// gg_dcc_fill_file_info2() open() failed (%s)
// gg_dcc_fill_file_info2() fstat() failed (%s)
// gg_dcc_fill_file_info2() that's a directory
// gg_dcc_fill_file_info2() short name "%s", dos name "%s"
// gg_dcc_get_file() handing over to gg_dcc_transfer()
// gg_dcc_send_file() handing over to gg_dcc_transfer()
// gg_dcc_voice_chat() handing over to gg_dcc_transfer()
** gg_create_dcc_socket(%d, %d);
// gg_create_dcc_socket() invalid arguments
// gg_create_dcc_socket() can't create socket (%s)
// gg_create_dcc_socket() no free port found
// gg_create_dcc_socket() trying port %d
// gg_create_dcc_socket() unable to listen (%s)
// gg_create_dcc_socket() bound to port %d
// gg_create_dcc_socket() not enough memory for struct
++ gg_dcc_voice_send(%p, %p, %d);
// gg_dcc_voice_send() invalid argument
// gg_dcc_voice_send() send() failed
// gg_dcc_watch_fd() invalid argument
// gg_dcc_watch_fd() not enough memory
// gg_dcc_watch_fd() can't accept() new connection (errno=%d, %s)
// gg_dcc_watch_fd() new direct connection from %s:%d
// gg_dcc_watch_fd() can't set nonblocking (errno=%d, %s)
// gg_dcc_watch_fd() not enough memory for client data
// gg_dcc_watch_fd() GG_READING_UIN_%d
// gg_dcc_watch_fd() recv() failed (errno=%d, %s)
// gg_dcc_watch_fd() recv() failed, connection broken
// gg_dcc_watch_fd() recv() failed (%d bytes, %zu needed)
// gg_dcc_watch_fd() GG_SENDING_ACK
// gg_dcc_watch_fd() send() failed (errno=%d, %s)
// gg_dcc_watch_fd() send() failed (%zu needed, %d done)
// gg_dcc_watch_fd() GG_STATE_READING_TYPE
// gg_dcc_watch_fd() callback
// gg_dcc_watch_fd() unknown dcc type (%.4x) from %u
// gg_dcc_watch_fd() GG_STATE_READING_REQUEST
// gg_dcc_watch_fd() file transfer request
// gg_dcc_watch_fd() voice chat request
// gg_dcc_watch_fd() unknown dcc request (%.4x) from %u
// gg_dcc_watch_fd() GG_STATE_READING_FILE_INFO
// gg_dcc_watch_fd() GG_STATE_SENDING_FILE_ACK
// gg_dcc_watch_fd() out of memory
// gg_dcc_watch_fd() GG_STATE_SENDING_VOICE_ACK
// gg_dcc_watch_fd() GG_STATE_READING_FILE_HEADER
// gg_dcc_watch_fd() transfer refused
// gg_dcc_watch_fd() empty chunk, EOF
// gg_dcc_watch_fd() GG_STATE_READING_VOICE_HEADER
// gg_dcc_watch_fd() peer breaking connection
// gg_dcc_watch_fd() unknown request (%.2x)
// gg_dcc_watch_fd() GG_STATE_READING_VOICE_SIZE
// gg_dcc_watch_fd() invalid voice frame size (%d)
// gg_dcc_watch_fd() out of memory for voice frame
// gg_dcc_watch_fd() GG_STATE_READING_VOICE_DATA
// gg_dcc_watch_fd() GG_STATE_CONNECTING
// gg_dcc_watch_fd() connection failed (fd=%d,errno=%d(%s),foo=%d,res=%d(%s))
// gg_dcc_watch_fd() connected, sending uins
// gg_dcc_watch_fd() GG_STATE_READING_ACK
// gg_dcc_watch_fd() did't get ack
// gg_dcc_watch_fd() GG_STATE_SENDING_VOICE_REQUEST
// gg_dcc_watch_fd() GG_STATE_SENDING_REQUEST
// gg_dcc_watch_fd() GG_STATE_SENDING_FILE_INFO
// gg_dcc_watch_fd() GG_STATE_READING_FILE_ACK
// gg_dcc_watch_fd() GG_STATE_READING_VOICE_ACK
// invalid reply (%.2x), connection refused
// gg_dcc_watch_fd() GG_STATE_SENDING_FILE_HEADER
// gg_dcc_watch_fd() GG_STATE_SENDING_FILE
// gg_dcc_watch_fd() offset=%d, size=%d
// gg_dcc_watch_fd() read()reached eof on empty file
// gg_dcc_watch_fd() offset >= size, finished
// gg_dcc_watch_fd() lseek() failed. (errno=%d, %s)
// gg_dcc_watch_fd() read() failed. (errno=%d, %s)
// gg_dcc_watch_fd() read() reached eof
// gg_dcc_watch_fd() read() too much (read=%d, ofs=%d, size=%d)
// gg_dcc_watch_fd() reached EOF after cutting
// gg_dcc_watch_fd() send() failed (%s)
// gg_dcc_watch_fd() send() failed (connection reset)
// gg_dcc_watch_fd() chunk finished
// gg_dcc_watch_fd() GG_STATE_GETTING_FILE
// gg_dcc_watch_fd() ofs=%d, size=%d, recv()=%d
// gg_dcc_watch_fd() recv() failed. (errno=%d, %s)
// gg_dcc_watch_fd() recv() reached eof
// gg_dcc_watch_fd() write() failed (%d:fd=%d:res=%d:%s)
// gg_dcc_watch_fd() GG_STATE_???
** gg_dcc7_session_find(%p, ..., %d)
** gg_dcc7_session_add(%p, %p)
// gg_dcc7_session_add() invalid parameters
** gg_dcc7_postauth_fixup(%p)
// gg_dcc7_postauth_fixup() invalid parameters
** gg_dcc7_listen_and_send_info(%p)
// gg_dcc7_listen() can't create socket (%s)
// gg_dcc7_listen() unable to bind to %s:%d
// gg_dcc7_listen() unable to bind to port %d
// gg_dcc7_listen() unable to listen (%s)
// dcc7_listen_and_send_info() sending IP address %s and port %d
** gg_dcc7_reverse_connect(%p)
// gg_dcc7_reverse_connect() already reverse connection
// gg_dcc7_reverse_connect() timeout, trying reverse connection
// gg_dcc7_connect() connection failed
// gg_dcc7_connect() invalid parameters
// gg_dcc7_send_file_common() invalid parameters
// gg_dcc7_send_file_common() not enough memory
** gg_dcc7_request_id(%p, %d)
// gg_dcc7_request_id() not connected
** gg_dcc7_send_file(%p, %d, "%s", %p)
// gg_dcc7_send_file() invalid parameters
// gg_dcc7_send_file() open() failed (%s)
// gg_dcc7_send_file() fstat() failed (%s)
// gg_dcc7_send_file() that's a directory
** gg_dcc7_send_file_fd(%p, %d, %d, %zu, "%s", %p)
// gg_dcc7_accept() invalid parameters
// gg_dcc7_reject() invalid parameters
** gg_dcc7_handle_id(%p, %p, %p, %d)
// checking dcc %p, state %d, type %d
** gg_dcc7_handle_accept(%p, %p, %p, %d)
// gg_dcc7_handle_accept() unknown dcc session
// gg_dcc7_handle_accept() invalid state
** gg_dcc7_handle_info(%p, %p, %p, %d)
// gg_dcc7_handle_info() received address: %s, hash: %s
// gg_dcc7_handle_info() unknown dcc session
// gg_dcc7_handle_info() state is already connected
// gg_dcc7_handle_info() invalid IP address
// gg_dcc7_handle_info() invalid IP port
// gg_dcc7_handle_info() waiting for info so send one
// gg_dcc7_handle_info() unknown info packet
// gg_dcc7_handle_info() info.str=%s, info.id=%llu, sess.id=%llu
// gg_dcc7_handle_info() invalid session id
** gg_dcc7_get_relay_addr(%p)
// gg_dcc7_get_relay_addr() invalid parameters
// gg_dcc7_get_relay_addr() resolving failed (errno=%d, %s)
// gg_dcc7_handle_info() unable to retrieve relay address
// gg_dcc7_handle_info() unhandled transfer type (%d)
** gg_dcc7_handle_reject(%p, %p, %p, %d)
// gg_dcc7_handle_reject() unknown dcc session
// gg_dcc7_handle_reject() invalid state
// gg_dcc7_watch_fd() invalid parameters
// gg_dcc7_watch_fd() not enough memory
// gg_dcc7_watch_fd() GG_STATE_LISTENING
// gg_dcc7_watch_fd() accept() failed (%s)
// gg_dcc7_watch_fd() connection from %s:%d
// gg_dcc7_watch_fd() can't set nonblocking (%s)
// gg_dcc7_watch_fd() GG_STATE_CONNECTING
// gg_dcc7_watch_fd() connection failed (%s)
// gg_dcc7_watch_fd() connected, sending id
// gg_dcc7_watch_fd() GG_STATE_READING_ID
// gg_dcc7_watch_fd() recv() failed (%d, %s)
// gg_dcc7_watch_fd() invalid id
// gg_dcc7_watch_fd() GG_SENDING_ID
// gg_dcc7_watch_fd() send() failed (%d, %s)
// gg_dcc7_watch_fd() GG_STATE_SENDING_FILE (offset=%d, size=%d)
// gg_dcc7_watch_fd() offset >= size, finished
// gg_dcc7_watch_fd() lseek() failed (%s)
// gg_dcc7_watch_fd() read() failed (res=%d, %s)
// gg_dcc7_watch_fd() send() failed (%s)
// gg_dcc7_watch_fd() finished
// gg_dcc7_watch_fd() GG_STATE_GETTING_FILE (offset=%d, size=%d)
// gg_dcc7_watch_fd() recv() failed (fd=%d, res=%d, %s)
// gg_dcc7_watch_fd() write() failed (fd=%d, res=%d, %s)
// gg_dcc7_watch_fd() GG_STATE_RESOLVING_RELAY
// gg_dcc7_watch_fd() resolving failed
// gg_dcc7_watch_fd() resolved, connecting to %s:%d
// gg_dcc7_watch_fd() connection failed (errno=%d, %s), critical
// gg_dcc7_watch_fd() GG_STATE_CONNECTING_RELAY
// gg_dcc7_watch_fd() connection failed (errno=%d, %s)
// gg_dcc7_watch_fd() send pkt(0x%.2x)
// gg_dcc7_watch_fd() sending failed
// gg_dcc7_watch_fd() GG_STATE_READING_RELAY
// gg_dcc7_wathc_fd() invalid reply
// gg_dcc7_get_relay() read pkt(0x%.2x)
// gg_dcc7_watch_fd() relay_count out of bounds (%d)
// gg_dcc7_watch_fd() GG_STATE_???
// gg_dcc7_watch_fd() no relay available
** gg_dcc7_session_remove(%p, %p)
** gg_dcc7_handle_new(%p, %p, %p, %d)
// gg_dcc7_handle_new() not enough memory
// gg_dcc7_handle_new() unable to add to session
// gg_dcc7_handle_packet() not enough memory
// gg_dcc7_handle_new() unknown dcc type (%d) from %u
** gg_dcc7_listen(%p, %d)
%s %d
** gg_dcc7_connect(%p)
** gg_dcc7_accept(%p, %d)
** gg_dcc7_reject(%p, %d)
relay.gadu-gadu.pl
** gg_dcc7_watch_fd(%p)
//    %s %d %d
** gg_dcc7_free(%p)
%.4x: 
 %02x
GG_STATE_IDLE
GG_STATE_CONNECTING
GG_STATE_READING_DATA
GG_STATE_ERROR
GG_STATE_CONNECTING_HUB
GG_STATE_CONNECTING_GG
GG_STATE_READING_KEY
GG_STATE_READING_REPLY
GG_STATE_CONNECTED
GG_STATE_SENDING_QUERY
GG_STATE_READING_HEADER
GG_STATE_PARSING
GG_STATE_DONE
GG_STATE_LISTENING
GG_STATE_READING_UIN_1
GG_STATE_READING_UIN_2
GG_STATE_SENDING_ACK
GG_STATE_READING_ACK
GG_STATE_READING_REQUEST
GG_STATE_SENDING_REQUEST
GG_STATE_SENDING_FILE_INFO
GG_STATE_READING_FILE_INFO
GG_STATE_SENDING_FILE_ACK
GG_STATE_READING_FILE_ACK
GG_STATE_SENDING_FILE_HEADER
GG_STATE_READING_FILE_HEADER
GG_STATE_GETTING_FILE
GG_STATE_SENDING_FILE
GG_STATE_READING_VOICE_ACK
GG_STATE_READING_VOICE_HEADER
GG_STATE_READING_VOICE_SIZE
GG_STATE_READING_VOICE_DATA
GG_STATE_SENDING_VOICE_ACK
GG_STATE_READING_TYPE
GG_STATE_TLS_NEGOTIATION
GG_STATE_REQUESTING_ID
GG_STATE_WAITING_FOR_ACCEPT
GG_STATE_WAITING_FOR_INFO
GG_STATE_READING_ID
GG_STATE_SENDING_ID
GG_STATE_RESOLVING_GG
GG_STATE_RESOLVING_RELAY
GG_STATE_CONNECTING_RELAY
GG_STATE_READING_RELAY
GG_STATE_DISCONNECTING
GG_STATE_CONNECT_HUB
GG_STATE_CONNECT_PROXY_HUB
GG_STATE_CONNECT_GG
GG_STATE_CONNECT_PROXY_GG
GG_STATE_CONNECTING_PROXY_HUB
GG_STATE_CONNECTING_PROXY_GG
GG_STATE_RESOLVE_HUB_SYNC
GG_STATE_RESOLVE_HUB_ASYNC
GG_STATE_RESOLVE_GG_SYNC
GG_STATE_RESOLVE_GG_ASYNC
GG_STATE_RESOLVING_HUB
GG_STATE_RESOLVING_PROXY_HUB
GG_STATE_RESOLVING_PROXY_GG
GG_STATE_SEND_HUB
GG_STATE_SEND_PROXY_HUB
GG_STATE_SEND_PROXY_GG
GG_STATE_SENDING_HUB
GG_STATE_SENDING_PROXY_HUB
GG_STATE_SENDING_PROXY_GG
GG_STATE_READING_HUB
GG_STATE_READING_PROXY_HUB
GG_STATE_READING_PROXY_GG
GG_STATE_RESOLVING
GG_EVENT_NONE
GG_EVENT_NOTIFY
GG_EVENT_NOTIFY_DESCR
GG_EVENT_STATUS
GG_EVENT_ACK
GG_EVENT_PONG
GG_EVENT_CONN_FAILED
GG_EVENT_CONN_SUCCESS
GG_EVENT_DISCONNECT
GG_EVENT_DCC_NEW
GG_EVENT_DCC_ERROR
GG_EVENT_DCC_DONE
GG_EVENT_DCC_CLIENT_ACCEPT
GG_EVENT_DCC_CALLBACK
GG_EVENT_DCC_NEED_FILE_INFO
GG_EVENT_DCC_NEED_FILE_ACK
GG_EVENT_DCC_NEED_VOICE_ACK
GG_EVENT_DCC_VOICE_DATA
GG_EVENT_PUBDIR50_READ
GG_EVENT_PUBDIR50_WRITE
GG_EVENT_STATUS60
GG_EVENT_NOTIFY60
GG_EVENT_USERLIST
GG_EVENT_IMAGE_REQUEST
GG_EVENT_IMAGE_REPLY
GG_EVENT_DCC_ACK
GG_EVENT_DCC7_NEW
GG_EVENT_DCC7_ACCEPT
GG_EVENT_DCC7_REJECT
GG_EVENT_DCC7_CONNECTED
GG_EVENT_DCC7_ERROR
GG_EVENT_DCC7_DONE
GG_EVENT_DCC7_PENDING
GG_EVENT_XML_EVENT
GG_EVENT_JSON_EVENT
GG_EVENT_ACK110
GG_EVENT_DISCONNECT_ACK
GG_EVENT_TYPING_NOTIFICATION
GG_EVENT_USER_DATA
GG_EVENT_MULTILOGON_MSG
GG_EVENT_MULTILOGON_INFO
GG_EVENT_USERLIST100_VERSION
GG_EVENT_USERLIST100_REPLY
GG_EVENT_IMTOKEN
GG_EVENT_PONG110
GG_EVENT_CHAT_INFO
GG_EVENT_CHAT_INFO_GOT_ALL
GG_EVENT_CHAT_INFO_UPDATE
GG_EVENT_CHAT_CREATED
GG_EVENT_CHAT_INVITE_ACK
GG_EVENT_MSG
GG_STATE_READING_PRE_FILE_INFO
GG_STATE_SENDING_VOICE_REQUEST
GG_STATE_RESOLVE_PROXY_HUB_SYNC
GG_STATE_RESOLVE_PROXY_HUB_ASYNC
GG_STATE_RESOLVE_PROXY_GG_SYNC
GG_STATE_RESOLVE_PROXY_GG_ASYNC
GG_EVENT_PUBDIR50_SEARCH_REPLY
no error message provided
1.2.11
// gg_deflate() deflateInit() failed (%d)
// gg_deflate() not enough memory for output data (%zu)
// gg_deflate() deflate() failed (ret=%d, msg=%s)
// gg_inflate() inflateInit() failed (%d)
// gg_inflate() not enough memory for output data (%zu)
// gg_inflate() inflate() failed (ret=%d, msg=%s)
 &   ! ?
// gg_handle_error() failure=%d
// gg_handle_resolve_custom() socket_manager.connect callback is empty
// gg_handle_resolve_custom() socket_handle is not NULL
// gg_handle_resolve_custom() port <= 0
// gg_handle_resolve_custom() handle should be empty on error
// gg_handle_resolve_custom() returned empty handle
// gg_watch_fd() sending %d bytes of queued data
// gg_watch_fd() non-critical send error (errno=%d, %s)
// gg_watch_fd() send() failed (errno=%d, %s)
// gg_watch_fd() sent all queued data
// gg_watch_fd() sent %d bytes of queued data, %d bytes left
// gg_watch_fd() connection broken expectedly
// gg_watch_fd() gg_recv_packet failed (errno=%d, %s)
// gg_watch_fd() GG_STATE_TLS_NEGOTIATION
// gg_watch_fd() TLS handshake GNUTLS_E_AGAIN
// gg_watch_fd() TLS handshake GNUTLS_E_INTERRUPTED
// gg_watch_fd() TLS handshake error: %d, %s
// gg_watch_fd() TLS negotiation succeeded:
//   cipher: VERS-%s:%s:%s:%s:COMP-%s
 WARNING!  unable to verify peer certificate: 0x%x, %d, %s
//   verified peer certificate
 WARNING!  unable to verify hostname
// gg_watch_fd() non-critical recv error (errno=%d, %s)
// gg_watch_fd() recv error (errno=%d, %s)
// gg_watch_fd() not enough memory for http reply
// gg_watch_fd() connection closed
// gg_watch_fd() invalid http reply, connection failed
// gg_watch_fd() can't find body
// gg_watch_fd() invalid hub reply, connection failed
// gg_watch_fd() not enough memory for system message
// gg_watch_fd() service unavailable
// gg_watch_fd() not enough memory
// gg_watch_fd() the HUB server returned a host that is not trusted (%s)
// gg_watch_fd() out of memory for client version
GET %s/appsvc/appmsg_ver11.asp?tls=1&fmnumber=%u&fmt=2&lastmsg=%d&version=%s&age=2&gender=1 HTTP/1.0
Connection: close
Host: appmsg.gadu-gadu.pl
GET %s/appsvc/appmsg_ver8.asp?fmnumber=%u&fmt=2&lastmsg=%d&version=%s HTTP/1.0
Host: appmsg.gadu-gadu.pl
// gg_watch_fd() out of memory
// gg_watch_fd() sending query failed
resolver_index=%d, connect_index=%d, connect_port={%d,%d}
// gg_watch_fd() out of addresses to connect to
// gg_watch_fd() connecting to %s:%d
// gg_watch_fd() connection failed (errno=%d, %s)
// gg_watch_fd() non-critical error (errno=%d, %s)
// gg_watch_fd() connection broken
// gg_watch_fd() resolved: %s
// gg_watch_fd() read error (errno=%d, %s)
// gg_watch_fd() host not found
// gg_watch_fd() resolving failed (errno=%d, %s)
// gg_watch_fd() out of connection candidates
// gg_watch_fd() proxy request:
// gg_watch_fd() host %s not found
// gg_session_connect() out of memory for GnuTLS session
 // gg_session_init_ssl() gnutls_global_init failed
 // gg_session_init_ssl() gnutls_certificate_allocate_credentials failed
 // gg_session_init_ssl() gnutls_certificate_set_x509_system_trust failed
 // gg_session_init_ssl() gnutls_init failed
 // gg_session_init_ssl() gnutls_set_default_priority failed
 // gg_session_init_ssl() gnutls_credentials_set failed
// gg_watch_fd() unexpected SSL data
// gg_watch_fd() not enough memory for event data
// gg_watch_fd() invalid state %s
//   cert subject: %s
//   cert issuer: %s
gg.pl
// received http reply:
HTTP/1.%*d %3d 
%d %*d %128s
reply=%d, host="%s"
notoperating
http://appmsg.gadu-gadu.pl
10.1.0.11070
11.3.45.10771
// sending http query:
// gg_watch_fd() %s
CONNECT %s:%d HTTP/1.0
** gg_event_free(%p);
recv() = %d
// found body!
// received proxy reply:
res = %d, reply = %d
// gg_watch_fd() connected
** gg_watch_fd(%p);
// gg_watch_fd_connected() received logoff acknowledge
// gg_watch_fd_connected() received disconnection warning
// time synchronized (diff = %d)
// gg_watch_fd_connected() received a pong
// gg_session_handle_magic_notification 
// gg_session_handle_transfer_info: unknown dummy1 value: %d
// gg_session_handle_transfer_info: dummy1=%#x, time=%u, sender=%u, peer=%u, msg_id=%#016llx, conv_id=%#016llx
// gg_session_handle_transfer_info[%s] = "%s"
// gg_session_handle_transfer_info file: type="%s", content_type="%s", filename="%s", filesize=%u, msg_id=%#016llx url="%s"
// gg_session_handle_uin_info: uin1="%s", uin2="%s"
// gg_watch_fd() login succeeded
// gg_session_handle_access_info: dummy[%02x, %02x], last[message=%u, file_transfer=%u, conference_ch=%u]
// gg_session_handle_options[%s] = "%s"
// gg_watch_fd_connected() received userlist 100 version
// gg_session_handle_chat_info_update() msg_id=%016llx conv_id=%016llx
// gg_session_handle_chat_info_update() out of memory (count=%u)
// gg_session_handle_chat_info() terminating packet shouldn't contain participants
// gg_watch_fd_connected() received pong110
// gg_watch_fd_connected() received imtoken
// gg_watch_fd_connected() received multilogon info
// gg_handle_multilogon_info() malformed packet (1)
// gg_handle_multilogon_info() out of memory (%zu*%zu)
// gg_handle_multilogon_info() malformed packet (2)
// gg_handle_multilogon_info() malformed packet (3)
// gg_handle_multilogon_info() out of memory (%zu)
// gg_watch_fd_connected() received user data
// gg_session_handle_user_data() malformed packet (1)
// gg_session_handle_user_data() out of memory (%d*%zu)
// gg_session_handle_user_data() malformed packet (2)
// gg_session_handle_user_data()malformed packet (3)
// gg_session_handle_user_data() malformed packet (3)
// gg_session_handle_user_data() out of memory (%d)
// gg_session_handle_user_data() malformed packet (4)
// gg_session_handle_user_data() malformed packet (5)
	key="%s", type=%d, value="%s"
// gg_watch_fd_connected() received typing notification
// gg_watch_fd_connected() received a notify reply
// gg_watch_fd_connected() out of memory
// gg_watch_fd_connected() received a status change
// gg_watch_fd_connected() received userlist reply
// gg_session_handle_userlist_reply() too many userlist replies
// gg_watch_fd_connected() received dcc7 info
// gg_watch_fd_connected() received dcc7 reject
// gg_watch_fd_connected() received dcc7 request
// gg_watch_fd_connected() received dcc7 accept
// gg_watch_fd_connected() received dcc7 id packet
// gg_watch_fd_connected() received pubdir/search reply
// gg_session_handle_event_110: received GG11 event (type=%d, id=%llx)
// gg_session_handle_event_110: unsupported GG11 event type: %d
// gg_session_handle_send_msg_ack_110() magic dummy1 value 0x4000
// gg_session_handle_send_msg_ack_110() unknown dummy1 value: %x
// gg_session_handle_send_msg_ack_110() %s=%016llx %s=%016llx
// gg_session_handle_send_msg_ack_110() got link (id=%llx) "%s"
// gg_watch_fd_connected() received a message ack
// gg_watch_fd() login failed
// gg_watch_fd() too many incorrect password attempts
// login110_ok: uin=%u, dummyhash=%s
// gg_watch_fd_connected() received userlist 100 reply
// gg_handle_userlist_100_reply() gg_inflate() failed
// gg_image_queue_parse(%p, %p, %d, %p, %u, %d)
// gg_image_queue_parse() malformed packet from %d, unlimited filename
// gg_image_queue_parse() out of memory
// gg_image_queue_parse() unexpected flag
// gg_image_queue_parse() got too much
// gg_image_queue_parse() got image part (done: %d of %d)
// gg_image_queue_parse() image ready
// gg_image_queue_parse() unknown image from %d, size=%d, crc32=%.8x
** gg_session_handle_recv_msg_110(%p, %zu, %p);
// gg_session_handle_recv_msg_110() msg_id=%016llx conv_id=%016llx
// gg_session_handle_recv_msg_110() packet too small (%zu < %zu)
// gg_handle_recv_msg_options() packet out of bounds (1)
// gg_handle_recv_msg_options() packet out of bounds (1.5)
// gg_handle_recv_msg_options() e->event.msg.recipients already exist
// gg_handle_recv_msg_options() not enough memory for recipients data
// gg_handle_recv_msg_options() packet out of bounds (2)
// gg_handle_recv_msg_options() e->event.msg.formats already exist
// gg_handle_recv_msg_options() not enough memory for richtext data
// gg_handle_recv_msg_options() packet out of bounds (3)
// gg_handle_recv_msg() packet out of bounds (3)
// gg_handle_recv_msg_options() mixed options (1)
// gg_handle_recv_msg_options() mixed options (2)
// gg_handle_recv_msg() packet out of bounds (4)
// gg_handle_recv_msg() unknown payload 0x%.2x
** gg_session_send_msg_ack(%p);
** gg_handle_recv_msg80(%p, %zu, %p);
// gg_handle_recv_msg80() oops, silently ignoring the bait
// gg_handle_recv_msg80() malformed packet, message out of bounds (0)
// gg_handle_recv_msg80() malformed packet, attr out of bounds (1)
// gg_handle_recv_msg80() malformed packet, message out of bounds (2)
// gg_handle_recv_msg80() malformed packet, message out of bounds (3)
// gg_session_handle_recv_msg_80() out of memory
** gg_handle_recv_msg(%p, %zu, %p);
// gg_handle_recv_msg() oops, silently ignoring the bait
// gg_handle_recv_msg() received ctcp packet
// gg_handle_recv_msg() malformed packet, message out of bounds (0)
// gg_session_handle_recv_msg() out of memory
 (BUILD;WINNT_x86-msvc;rv:11.0,pl;release;standard) (OS;Windows;Windows NT 6.1)
// Unsupported hash type for this protocol version
// gg_watch_fd() gg_login_hash_sha1_2() failed, probably out of memory
// gg_watch_fd() sending GG_LOGIN105 packet
avatar,StatusComments,ggaccount,edisc,music_shared,bot,fanpage,pubdir,botCaps,gifts,Gift
// gg_watch_fd() challenge %.4x --> GG32 hash %.8x
// gg_watch_fd() challenge %.4x --> SHA1 hash: %s
// gg_watch_fd() detected address to %s
// gg_watch_fd() unable to detect address
// gg_watch_fd() sending GG_LOGIN80 packet
// gg_watch_fd() sending packet failed. (errno=%d, %s)
// gg_watch_fd_connected() received XML event
// gg_session_handle_packet(%d, %p, %zu)
// gg_session_handle_packet() packet 0x%02x unexpected in state %d
// gg_session_handle_packet() packet 0x%02x too short (%zu bytes)
// gg_session_handle_packet() unhandled packet 0x%02x, len %zu, state %d
GG110MagicNotification
GG110MagicNotification.dummy1
GG110MagicNotification.dummy2
GG110MagicNotification.dummy3
GG112TransferInfo
GG112TransferInfoUin
GG112TransferInfoUin.dummy1
ProtobufKVP
GG112TransferInfoFile
GG110AccessInfo
GG110Options
GG110Options.dummy1
GG110ChatInfoUpdate
GG110Pong
GG110Imtoken
    uin=%d, count=%d
type=%d, count=%d
userlist_reply=%p, len=%zu
GG110Event
conv_id
msg_id
GG110MessageAck
GG110MessageAckLink
GG110LoginOK
GG110LoginOK.dummy1
GG110RecvMessage
GG-Phoenix/
Gadu-Gadu Client Build 
%s%s%s
** gg_http_watch_fd(%p);
=> http, resolving done
=> http, connecting to %s:%d
Content-length: 
=> http, body_size=%d
%s %s HTTP/1.0
// gg_http_watch_fd() invalid arguments
=> http, resolver thread failed
=> http, connection failed (errno=%d, %s)
=> http, async connection failed (errno=%d, %s)
=> http, connected, sending request
=> http, send() failed (len=%zu, res=%d, errno=%d)
=> http, non-critical send error (errno=%d, %s)
=> http, partial header sent (led=%zu, sent=%d)
=> http, request sent (len=%zu)
=> http, reading header failed (errno=%d)
=> http, non-critical recv error (errno=%d, %s)
=> http, connection reset by peer
=> http, read %d bytes of header
=> http, not enough memory for header
=> http, header_buf=%p, header_size=%d
=> http, got all header (%d bytes, %d left)
=> -----BEGIN-HTTP-HEADER-----
=> -----END-HTTP-HEADER-----
=> http, didn't get 200 OK -- no results
=> http, content-length not found
=> http, content-length too big
=> http, oversized reply (%d bytes needed, %d bytes left)
=> http, not enough memory (%d bytes for body_buf)
=> http, reading body failed (errno=%d)
=> http, we're done, closing socket
=> http, connection closed while reading (have %d, need %d)
=> http, read %d bytes of body
=> http, too much data (%d bytes, %d needed), enlarging buffer
=> http, not enough memory for data (%d needed)
=> body_done=%d, body_size=%d
// gg_http_connect() invalid arguments
%s http://%s:%d%s HTTP/1.0
%s%s
// gg_http_connect() not enough memory for query
=> -----BEGIN-HTTP-QUERY-----
=> -----END-HTTP-QUERY-----
// gg_http_connect() resolver failed
// gg_http_connect() resolver = %p
// gg_http_connect() host not found
// gg_http_connect() connection failed (errno=%d, %s)
// gg_http_connect() some strange error
// gg_write_common() socket_manager.write callback is empty
// gg_read() unexpected errno=%d
// gg_socket_manager_error() unable to create pipes (errno=%d, %s)
// gg_socket_manager_error() unable to send via pipe (errno=%d, %s)
** gg_send_message_110(%p, %u, %llu, %p, %d);
//gg_new0(%zu) not enough memory
// requested feature requires protocol %#02x, but %#02x is selected
// gg_get_dummy_fd() unable to create pipes (errno=%d, %s)
// gg_read() socket_manager.read callback is empty
p->socket_manager_type != GG_SOCKET_MANAGER_TYPE_INTERNAL
// gg_recv_packet() out of memory
// gg_recv_packet() header: %d done, %zu to go
// gg_recv_packet() invalid packet length (%d)
// gg_recv_packet() and that's it
// gg_recv_packet() payload: %d done, %u length, %zu to go
// gg_recv_packet() connection broken
// gg_recv_packet() resource temporarily unavailable
// gg_recv_packet() read failed: errno=%d, %s
// gg_recv_packet() read %d bytes
// gg_recv_packet() header complete, payload %d bytes
// gg_recv_packet(type=0x%.2x, length=%d)
** gg_send_packet(%p, 0x%.2x, ...);
// gg_send_packet() not enough memory for packet header
// gg_send_packet() not enough memory for payload
// gg_send_packet(type=0x%.2x, length=%d)
// gg_send_packet() write() failed. res = %d, errno = %d (%s)
// gg_send_packet() partial write(), %d sent, %d left, %d total left
** gg_login(%p: [uin=%u, async=%d, ...]);
// gg_login() not enough memory for session data
// gg_login() not enough memory for session private data
// gg_login() invalid arguments. uin and password needed
// gg_login() not enough memory for password
// gg_login() invalid arguments. unknown hash type (%d)
// gg_login() invalid arguments. unknown socket manager type (%d)
// gg_login() libgadu no longer support protocol < 0x2e
// gg_login() invalid arguments. unsupported resolver type (%d)
// gg_login() not enough memory for status
// gg_session_connect() critical error in gg_watch_fd()
// gg_session_connect() could not login
** gg_change_status_descr(%p, %d, "%s");
** gg_change_status_descr_time(%p, %d, "%s", %d);
** gg_change_status_flags(%p, 0x%08x);
** gg_send_message_ctcp(%p, %d, %u, ...);
** gg_image_request(%p, %d, %u, 0x%.4x);
// gg_image_request() not enough memory for image queue
// gg_image_request() not enough memory for image
** gg_image_reply(%p, %d, "%s", %p, %d);
** gg_notify_ex(%p, %p, %p, %d);
** gg_add_notify_ex(%p, %u, %d);
** gg_remove_notify_ex(%p, %u, %d);
// gg_userlist100_request() gg_deflate() failed
// gg_compat_message_sent() not enough memory
** gg_send_message_common(%p, %d, %d, %p, %p, %p, %d, %p);
// gg_send_message_common() using legacy formatting with new protocol
// gg_send_message_common() legacy conferences disabled
** gg_send_message(%p, %d, %u, %p)
** gg_send_message_richtext(%p, %d, %u, %p, %p, %d);
** gg_send_message_html(%p, %d, %u, %p);
** gg_send_message_confer(%p, %d, %d, %p, %p);
** gg_send_message_confer_richtext(%p, %d, %d, %p, %p, %p, %d);
** gg_send_message_confer_html(%p, %d, %d, %p, %p);
// gg_socket_manager_connected() invalid handle
// gg_socket_manager_connected() connection error
// gg_socket_manager_connected() couldn't initialize ssl
1.12.2
libgadu.c
** gg_free_session(%p);
** gg_recv_packet(%p);
** gg_login(%p);
** gg_ping(%p);
** gg_logoff(%p);
** gg_change_status(%p, %d);
// next state=%s
gg_close
message.c
format != NULL
<img name="
<img name='
</b>
</i>
</u>
<span 
color:#
</span
&lt;
&gt;
&quot;
&apos;
&amp;
&nbsp;
<span style="color:#%02x%02x%02x; font-family:'MS Shell Dlg 2'; font-size:9pt; ">
gg_message_text_to_html
// gg_userlist_get() is obsolete. use gg_userlist_request() instead!
// gg_userlist_put() is obsolete. use gg_userlist_request() instead!
// gg_userlist_remove() is obsolete. use gg_userlist_request() instead!
// gg_search() is obsolete. use gg_search50() instead!
// gg_register() is obsolete. use gg_register3() instead!
// gg_register2() is obsolete. use gg_register3() instead!
// gg_unregister() is obsolete. use gg_unregister3() instead!
// gg_unregister2() is obsolete. use gg_unregister3() instead!
// gg_change_passwd() is obsolete. use gg_change_passwd4() instead!
// gg_change_passwd2() is obsolete. use gg_change_passwd4() instead!
// gg_change_passwd3() is obsolete. use gg_change_passwd4() instead!
// gg_remind_passwd() is obsolete. use gg_remind_passwd3() instead!
// gg_remind_passwd2() is obsolete. use gg_remind_passwd3() instead!
// gg_change_info() is obsolete. use gg_pubdir50() instead
packets.pb-c.c
dummy4
peer
sender
data
file
content_type
filename
filesize
last_message
last_file_transfer
last_conference_ch
options
value
participant
inviter
update_type
version
chat_id
imtoken
GG110SendMessage
recipient
msg_plain
msg_xhtml
flags
subtype
GG110Event.Type
GG110Event__Type
GG110_EVENT__TYPE__XML
GG110_EVENT__TYPE__JSON
msg_type
links
GG105Login
lang
client
initial_status
initial_descr
supported_features
dummy5
dummy6
dummy7
dummy8
dummy10
GG110Ack
GG110Ack.Type
GG110Ack__Type
MAGIC_NOTIFICATION
TRANSFER_INFO
GG110_ACK__TYPE__MSG
GG110_ACK__TYPE__CHAT
GG110_ACK__TYPE__CHAT_INFO
GG110_ACK__TYPE__MPA
server_time
dummyhash
message->base.descriptor == &gg110_login_ok__descriptor
message->base.descriptor == &gg110_pong__descriptor
message->base.descriptor == &gg110_ack__descriptor
message->base.descriptor == &gg105_login__descriptor
message->base.descriptor == &gg110_message_ack_link__descriptor
message->base.descriptor == &gg110_message_ack__descriptor
message->base.descriptor == &gg110_event__descriptor
message->base.descriptor == &gg110_recv_message__descriptor
message->base.descriptor == &gg110_send_message__descriptor
message->base.descriptor == &gg110_imtoken__descriptor
message->base.descriptor == &gg110_chat_info_update__descriptor
message->base.descriptor == &protobuf_kvp__descriptor
message->base.descriptor == &gg110_options__descriptor
message->base.descriptor == &gg110_access_info__descriptor
message->base.descriptor == &gg112_transfer_info_uin__descriptor
message->base.descriptor == &gg112_transfer_info_file__descriptor
message->base.descriptor == &gg112_transfer_info__descriptor
message->base.descriptor == &gg110_magic_notification__descriptor
GG110_ACK__TYPE__MAGIC_NOTIFICATION
GG110_ACK__TYPE__TRANSFER_INFO
gg110_magic_notification__free_unpacked
gg110_magic_notification__pack_to_buffer
gg110_magic_notification__pack
gg110_magic_notification__get_packed_size
gg112_transfer_info__free_unpacked
gg112_transfer_info__pack_to_buffer
gg112_transfer_info__pack
gg112_transfer_info__get_packed_size
gg112_transfer_info_file__free_unpacked
gg112_transfer_info_file__pack_to_buffer
gg112_transfer_info_file__pack
gg112_transfer_info_file__get_packed_size
gg112_transfer_info_uin__free_unpacked
gg112_transfer_info_uin__pack_to_buffer
gg112_transfer_info_uin__pack
gg112_transfer_info_uin__get_packed_size
gg110_access_info__free_unpacked
gg110_access_info__pack_to_buffer
gg110_access_info__pack
gg110_access_info__get_packed_size
gg110_options__free_unpacked
gg110_options__pack_to_buffer
gg110_options__pack
gg110_options__get_packed_size
protobuf_kvp__free_unpacked
protobuf_kvp__pack_to_buffer
protobuf_kvp__pack
protobuf_kvp__get_packed_size
gg110_chat_info_update__free_unpacked
gg110_chat_info_update__pack_to_buffer
gg110_chat_info_update__pack
gg110_chat_info_update__get_packed_size
gg110_imtoken__free_unpacked
gg110_imtoken__pack_to_buffer
gg110_imtoken__pack
gg110_imtoken__get_packed_size
gg110_send_message__free_unpacked
gg110_send_message__pack_to_buffer
gg110_send_message__pack
gg110_send_message__get_packed_size
gg110_recv_message__free_unpacked
gg110_recv_message__pack_to_buffer
gg110_recv_message__pack
gg110_recv_message__get_packed_size
gg110_event__free_unpacked
gg110_event__pack_to_buffer
gg110_event__pack
gg110_event__get_packed_size
gg110_message_ack__free_unpacked
gg110_message_ack__pack_to_buffer
gg110_message_ack__pack
gg110_message_ack__get_packed_size
gg110_message_ack_link__free_unpacked
gg110_message_ack_link__pack_to_buffer
gg110_message_ack_link__pack
gg110_message_ack_link__get_packed_size
gg105_login__free_unpacked
gg105_login__pack_to_buffer
gg105_login__pack
gg105_login__get_packed_size
gg110_ack__free_unpacked
gg110_ack__pack_to_buffer
gg110_ack__pack
gg110_ack__get_packed_size
gg110_pong__free_unpacked
gg110_pong__pack_to_buffer
gg110_pong__pack
gg110_pong__get_packed_size
gg110_login_ok__free_unpacked
gg110_login_ok__pack_to_buffer
gg110_login_ok__pack
gg110_login_ok__get_packed_size
// gg_packet: field %s was expected to be %#x, but its value was %#x
// gg_protobuf: couldn't unpack %s message
// gg_protobuf: message %s had %d unknown field(s)
// gg_protobuf_send: out of memory - tried to allocate %zu bytes for %#x packet
// gg_protobuf_send: sending packet %#x failed. (errno=%d, %s)
// gg_protobuf_get_uin: invalid length
// gg_protobuf_get_uin: unexpected magic value=%#x
// gg_protobuf_get_uin: invalid uin
=> pubdir, watch_fd issued on failed session
=> pubdir, not enough memory for results
Tokens okregisterreply_packet.reg.dwUserId=
=> pubdir, success (okregisterreply, uin=%d)
=> pubdir, invalid new password
=> pubdir, invalid old password
=> token, watch_fd issued on failed session
=> token, not enough memory for results
=> token, not enough memory for token url
Host: %s
User-Agent: Mozilla/4.7 [en] (Win98; I)
=> token, gg_http_connect() failed mysteriously
=> token, not enough memory for token data
=> register, not enough memory for form fields
pwd=%s&email=%s&tokenid=%s&tokenval=%s&code=%u
=> register, not enough memory for form query
Host: register.gadu-gadu.pl
Content-Type: application/x-www-form-urlencoded
User-Agent: Mozilla/4.7 [en] (Win98; I)
Content-Length: %d
Pragma: no-cache
=> register, not enough memory for query
=> register, gg_http_connect() failed mysteriously
=> unregister, NULL parameter
=> unregister, not enough memory for form fields
fmnumber=%d&fmpwd=%s&delete=1&pwd=%s&email=deletedaccount@gadu-gadu.pl&tokenid=%s&tokenval=%s&code=%u
=> unregister, not enough memory for form query
=> unregister, not enough memory for query
=> unregister, gg_http_connect() failed mysteriously
=> change, not enough memory for form fields
fmnumber=%d&fmpwd=%s&pwd=%s&email=%s&tokenid=%s&tokenval=%s&code=%u
=> change, not enough memory for query
=> change, gg_http_connect() failed mysteriously
=> remind, not enough memory for form fields
userid=%d&code=%u&tokenid=%s&tokenval=%s&email=%s
Host: retr.gadu-gadu.pl
Content-Type: application/x-www-form-urlencoded
User-Agent: Mozilla/4.7 [en] (Win98; I)
Content-Length: %d
Pragma: no-cache
=> remind, not enough memory for query
=> remind, gg_http_connect() failed mysteriously
Host: register.gadu-gadu.pl
Content-Type: application/x-www-form-urlencoded
User-Agent: Mozilla/4.7 [en] (Win98; I)
Content-Length: 0
Pragma: no-cache
=> pubdir, http failure
=> pubdir, let's parse "%s"
success
results
=> pubdir, success (uin=%d)
error1
error3
not authenticated
bad_tokenval
=> pubdir, invalid token
=> pubdir, unknown error
register.gadu-gadu.pl
=> token, http failure
=> token body "%s"
=> token, parsing failed
http://
%s?tokenid=%s
=> token, url parsing failed
%d %d %d
=> register, NULL parameter
=> register, %s
/appsvc/fmregister3.asp
POST
deletedaccount@gadu-gadu.pl
=> unregister, %s
=> change, NULL parameter
=> change, %s
=> remind, NULL parameter
=> remind, %s
/appsvc/fmsendpwd3.asp
retr.gadu-gadu.pl
/appsvc/regtoken.asp
** gg_pubdir50_add_n(%p, %d, "%s", "%s");
// gg_pubdir50_add_n() out of memory
// gg_pubdir50_new() out of memory
** gg_pubdir50_seq_set(%p, %d);
// gg_pubdir50_seq_set() invalid arguments
// gg_pubdir50() invalid arguments
// gg_pubdir50() not connected
// gg_pubdir50() out of memory (%d bytes)
** gg_pubdir50_handle_reply_sess(%p, %p, %p, %d);
// gg_pubdir50_handle_reply() invalid arguments
// gg_pubdir50_handle_reply() packet too short
// gg_pubdir50_handle_reply() unable to allocate reply
// gg_pubdir50_handle_reply() premature end of packet
** gg_pubdir50_get(%p, %d, "%s");
// gg_pubdir50_get() invalid arguments
** gg_pubdir50_new(%d);
** gg_pubdir50(%p, %p);
nextstart
** gg_resolver_pthread_start(%p, %p, "%s");
// gg_resolver_pthread_start() invalid arguments
// gg_resolver_pthread_start() out of memory for resolver data
// gg_resolver_pthread_start() out of memory for resolver parameters
// gg_resolver_pthread_start() out of memory for hostname
// gg_resolver_pthread_start() unable to create pipes (errno=%d, %s)
// gg_resolver_pthread_start() can't create barrier
// gg_resolver_pthread_start() unable to create thread
// gg_resolver_pthread_start() %p
** gg_resolver_fork_start(%p, %p, "%s");
// gg_resolver_fork_start() invalid arguments
// gg_resolver_fork_start() out of memory for resolver data
// gg_resolver_fork_start() unable to create pipes (errno=%d, %s)
// gg_resolver_fork_start() %p
// gg_tvbuff_new() invalid arguments
// gg_tvbuff_have_remaining() failed (%zu < %zu)
// gg_tvbuff_read_uint8() failed at %zu
// gg_tvbuff_read_uint32() failed at %zu
// gg_tvbuff_read_uint64() failed at %zu
// gg_tvbuff_read_packed_uint() failed
// gg_tvbuff_read_packed_uint() packed uint size too big: %d
// gg_tvbuff_read_packed_uint() overflow
// gg_tvbuff_get_buff() failed at %zu:%zu
// gg_tvbuff_read_buff() failed at %zu:%zu
// gg_tvbuff_read_str() failed at %zu:%d
// gg_tvbuff_read_str_dup() failed at %zu:%d
// gg_tvbuff_read_str_dup() not enough free memory: %d + 1
// gg_tvbuff_read_str_dup() destination already filled, freeing it...
// gg_tvbuff_read_uin() failed (1)
// gg_tvbuff_read_uin() failed (2)
// gg_tvbuff_expected_uint8() expected %#02x, but %#02x found at %zu
// gg_tvbuff_expected_uint32() expected %#08x, but %#08x found at %zu
// gg_tvbuff_expected_eob() unexpected %zu bytes, first=%#02x
// gg_tvbuff_skip() failed
// gg_tvbuff_rewind() failed
// gg_tvbuff_match() failed
// gg_tvbuilder_new() invalid arguments
// gg_tvbuilder_fail() NULL tvbuilder
// gg_tvbuilder_send() NULL tvbuilder
// gg_tvbuilder_send() invalid buffer
// gg_tvbuilder_send() sending packet %#x failed. (errno=%d, %s)
// gg_tvbuilder_expected_size(%p, %zu) realloc from %zu to %zu
// gg_tvbuilder_expected_size(%p, %zu) out of memory (new length: %zu)
// gg_tvbuilder_strip() out of range
// gg_tvbuilder_write_packed_uint() int size too big (%d): %llu
;*2$"p
zPLR
. g.
zPLR
zPLR
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
other
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+stack_realign
libgadu.so.3.13.0-1.12.2-6.fc29.i386.debug
7zXZ
ep&.
F@s:  
PwwT2
^\4>vh4lv.yI
	()a
8<R5
 "PL<
U@1-
W6DR
L!FA
"0*5
l,gA+G!r
gIO5?
rW\I
k#1JP
Kr}F
H$iV
zx,r@c
l^,Tg
tV<?s5
0>G~
8A J
JzMJ
_)97O
XS[L
GL]5
>$q#
 +Nv
?|sxcK
gbNe
@$<~
KU"I
GD#f
F#;h
O+toR
	L5L
r&)*/
	$ysRf
	<4E
,R;S`%+j
+'{r
GIel
_3<@
>Pjg]
&'1!o
n8RHFr+
: )G
m!pj
J#tN
*/2"M
1#A"
:VIa
*iI<j
Q9Q;
X-@=p6
$aL}U<b@
]"e:#
py;]
`wzW
APw	
@Y+k
\}2W
.vp#W
yb@)
~wta
WH7o
D8fP?
|c6+w
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.note.gnu.property
.init_array
.fini_array
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu.build.attributes
.gnu_debuglink
.gnu_debugdata
