__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
calloc
free
dcgettext
snd_ctl_card_info_sizeof
memset
snd_ctl_open
snd_ctl_card_info
snd_ctl_close
snd_mixer_open
snd_mixer_attach
snd_mixer_selem_register
snd_mixer_load
snd_mixer_selem_id_sizeof
snd_mixer_get_count
snd_mixer_first_elem
snd_mixer_elem_next
snd_mixer_elem_get_type
snd_mixer_selem_is_active
snd_mixer_selem_get_id
snd_mixer_selem_get_name
strcmp
snd_mixer_selem_get_playback_volume_range
snd_mixer_selem_get_playback_volume
snd_mixer_selem_has_playback_switch
snd_strerror
xine_log
snd_mixer_close
snd_mixer_selem_has_playback_switch_joined
snd_mixer_selem_get_playback_switch
pthread_attr_init
pthread_attr_getschedparam
sched_get_priority_min
pthread_attr_setschedparam
pthread_create
pthread_attr_destroy
snd_lib_error_set_handler
snd_pcm_hw_params_sizeof
snd_pcm_open
snd_pcm_hw_params_any
snd_pcm_hw_params_set_access
__strdup
snd_pcm_hw_params_test_format
snd_pcm_hw_params_test_channels
xine_strcat_realloc
snd_pcm_close
pthread_mutex_init
pthread_mutex_lock
pthread_mutex_unlock
snd_mixer_poll_descriptors
malloc
poll
snd_mixer_handle_events
xine_list_front
xine_list_get_value
xine_event_send
xine_list_next
pthread_exit
__errno_location
snd_pcm_pause
snd_pcm_drop
snd_pcm_prepare
snd_pcm_reset
snd_pcm_drain
pthread_mutex_destroy
pthread_join
snd_pcm_nonblock
snd_pcm_delay
snd_pcm_recover
snd_pcm_forward
snd_pcm_sw_params_sizeof
stdout
snd_output_stdio_attach
gettimeofday
snd_pcm_access_mask_sizeof
snd_pcm_access_mask_none
snd_pcm_access_mask_set
snd_pcm_hw_params_set_access_mask
snd_pcm_hw_params_set_format
snd_pcm_hw_params_set_channels
snd_pcm_hw_params_set_rate_resample
snd_pcm_hw_params_set_rate_near
snd_pcm_hw_params_get_buffer_size_min
snd_pcm_hw_params_get_buffer_size_max
snd_pcm_hw_params_get_period_size_min
snd_pcm_hw_params_get_period_size_max
snd_pcm_hw_params_set_period_size_near
snd_pcm_hw_params_get_period_size
snd_pcm_hw_params_set_buffer_size_near
snd_pcm_hw_params_get_buffer_size
usleep
snd_pcm_hw_params
snd_pcm_hw_params_can_pause
snd_pcm_frames_to_bytes
snd_pcm_sw_params_current
snd_pcm_sw_params_set_xfer_align
snd_pcm_sw_params_set_avail_min
snd_pcm_sw_params_set_start_threshold
snd_pcm_sw_params_set_stop_threshold
snd_pcm_sw_params
snd_pcm_hw_params_can_resume
snd_mixer_selem_set_playback_volume
snd_mixer_selem_set_playback_switch
snd_mixer_selem_set_playback_switch_all
snd_pcm_status_sizeof
snd_pcm_state
snd_pcm_resume
snd_pcm_mmap_writei
snd_pcm_writei
snd_pcm_status
snd_pcm_status_get_avail
snd_pcm_wait
stderr
__fprintf_chk
abort
xine_plugin_info
libxine.so.1
libdl.so.2
libz.so.1
libm.so.6
librt.so.1
libresolv.so.2
libnsl.so.1
libasound.so.2
libpthread.so.0
libc.so.6
__stack_chk_fail
_edata
__bss_start
_end
xineplug_ao_out_alsa.so
ALSA_0.9.0rc4
ALSA_0.9
ALSA_0.9.0rc8
GLIBC_2.1
GLIBC_2.0
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.3.4
B<u&
[^_]
[^_]
UWVS
FLt5
[^_]
|?t	)
[^_]
d$ ^_]
alsa
libxine1
Master
audio.device.alsa_mixer_name
audio.alsa_hw_mixer
sound card can do mmap
audio.device.alsa_mmap_enable
device used for mono output
device used for stereo output
plug:front:default
plug:surround40:0
plug:surround51:0
snd_pcm_open() failed:%d:%s
speaker arrangement
 8bit
 16bit
 24bit
 32bit
 mono
 stereo
 4-channel
 4.1-channel
 5-channel
 5.1-channel
 a/52 and DTS pass-through
alsa mixer device
audio_alsa_out.c
abort: %s:%d: %s: Aborting.
Mono 1.0
Stereo 2.0
Headphones 2.0
Stereo 2.1
Surround 3.0
Surround 4.0
Surround 4.1
Surround 5.0
Surround 5.1
Surround 6.0
Surround 6.1
Surround 7.1
Pass Through
xine audio output plugin using alsa-compliant audio devices/drivers
audio.device.alsa_default_device
audio_alsa_out: snd_ctl_open(): %s
audio_alsa_out: snd_ctl_card_info(): %s
audio_alsa_out: snd_mixer_open(): %s
audio_alsa_out: snd_mixer_attach(): %s
audio_alsa_out: snd_mixer_selem_register(): %s
audio_alsa_out: snd_mixer_load(): %s
audio_alsa_out: snd_mixer_selem_get_playback_volume(): %s
When the hardware mixer changes, your application will receive a notification so that it can update its graphical representation of the mixer settings on the fly.
notify changes to the hardware mixer
snd_lib_error_set_handler() failed: %d
Enable this, if your sound card and alsa driver support memory mapped IO.
You can try enabling it and check, if everything works. If it does, this will increase performance.
xine will use this alsa device to output mono sound.
See the alsa documentation for information on alsa devices.
xine will use this alsa device to output stereo sound.
See the alsa documentation for information on alsa devices.
audio.device.alsa_front_device
xine will use this alsa device to output 4 channel (4.0) surround sound.
See the alsa documentation for information on alsa devices.
device used for 4-channel output
audio.device.alsa_surround40_device
xine will use this alsa device to output 5 channel plus LFE (5.1) surround sound.
See the alsa documentation for information on alsa devices.
device used for 5.1-channel output
audio.device.alsa_surround51_device
xine will use this alsa device to output undecoded digital surround sound. This can be used be external surround decoders.
See the alsa documentation for information on alsa devices.
iec958:AES0=0x6,AES1=0x82,AES2=0x0,AES3=0x2
audio.device.alsa_passthrough_device
>>> Check if another program already uses PCM <<<
audio_alsa_out: broken configuration for this PCM: no configurations available
audio_alsa_out: access type not available
Select how your speakers are arranged, this determines which speakers xine uses for sound output. The individual values are:
Mono 1.0: You have only one speaker.
Stereo 2.0: You have two speakers for left and right channel.
Headphones 2.0: You use headphones.
Stereo 2.1: You have two speakers for left and right channel, and one subwoofer for the low frequencies.
Surround 3.0: You have three speakers for left, right and rear channel.
Surround 4.0: You have four speakers for front left and right and rear left and right channels.
Surround 4.1: You have four speakers for front left and right and rear left and right channels, and one subwoofer for the low frequencies.
Surround 5.0: You have five speakers for front left, center and right and rear left and right channels.
Surround 5.1: You have five speakers for front left, center and right and rear left and right channels, and one subwoofer for the low frequencies.
Surround 6.0: You have six speakers for front left, center and right and rear left, center and right channels.
Surround 6.1: You have six speakers for front left, center and right and rear left, center and right channels, and one subwoofer for the low frequencies.
Surround 7.1: You have seven speakers for front left, center and right, left and right and rear left and right channels, and one subwoofer for the low frequencies.
Pass Through: Your sound system will receive undecoded digital sound from xine. You need to connect a digital surround decoder capable of decoding the formats you want to play to your sound card's digital output.
audio.output.speaker_arrangement
audio_alsa_out : supported modes are
audio_alsa_out: no supported PCM format found
 (4-channel not enabled in xine config)
 (4.1-channel not enabled in xine config)
 (5-channel not enabled in xine config)
 (5.1-channel not enabled in xine config)
 (a/52 and DTS pass-through not enabled in xine config)
xine will use this alsa mixer device to change the volume.
See the alsa documentation for information on alsa devices.
audio_alsa_out: snd_mixer_handle_events(): %s
audio_alsa_out: Pause call failed. (err=%d:%s)
audio_alsa_out: Reset call failed. (err=%d:%s)
audio_alsa_out: Drain call failed. (err=%d:%s)
audio_alsa_out: Prepare call failed. (err=%d:%s)
audio_alsa_out: Warning: How am I supposed to RESUME, if I am not PAUSED. audio_out.c, please don't call me!
audio_alsa_out: Resume call failed. (err=%d:%s)
audio_alsa_out: Drop call failed. (err=%d:%s)
audio_alsa_out: ALSA Driver does not support the requested mode: 0x%X
audio_alsa_out:Already open...WHY!
audio_alsa_out: snd_pcm_open() of %s failed: %s
audio_alsa_out: >>> check if another program already uses PCM <<<
audio_alsa_out: broken configuration for this PCM: no configurations available: %s
audio_alsa_out: mmap not availiable, falling back to compatiblity mode
audio_alsa_out: access type not available: %s
audio_alsa_out: pcm format bits=%d unknown. failed: %s
audio_alsa_out: sample format non available: %s
audio_alsa_out: Cannot set number of channels to %d (err=%d:%s)
audio_alsa_out: rate not available: %s
audio_alsa_out: audio rate : %d requested, %d provided by device/sec
audio_alsa_out: period time not available: %s
audio_alsa_out: buffer time not available: %s
audio_alsa_out: buffer to small, could not use
audio_alsa_out: pcm hw_params failed: %s
audio_alsa_out:open pause_resume=%d
audio_alsa_out: Unable to determine current swparams: %s
audio_alsa_out: Unable to set transfer alignment: %s
audio_alsa_out: Unable to set available min: %s
audio_alsa_out: Unable to set start threshold: %s
audio_alsa_out: Unable to set stop threshold: %s
audio_alsa_out: Unable to set swparams: %s
audio_alsa_out:write:BAD STATE, state = %d
audio_alsa_out:write:BAD STATE2, state = %d, going to try XRUN
audio_alsa_out: xrun: prepare error: %s
ao_alsa_write
xineplug_ao_out_alsa.so.debug
*9Ok
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rel.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rel.plt
.got.plt
.got
.text
