__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
_Py_NoneStruct
PyDict_New
free
PyUnicode_FromString
PyByteArray_Type
PyType_IsSubtype
_PyByteArray_empty_string
PyBytes_AsStringAndSize
__stack_chk_fail
_Py_TrueStruct
_Py_FalseStruct
PyObject_IsTrue
PyCFunction_Call
PyUnicode_InternFromString
PyMem_Free
PyUnicode_FromFormat
PyObject_GC_UnTrack
PyObject_ClearWeakRefs
PyObject_GC_Del
PyModule_GetDict
PyImport_ImportModuleLevelObject
PyList_New
PyExc_ImportError
PyErr_ExceptionMatches
PyErr_Clear
PyObject_GetAttr
PyExc_TypeError
PyErr_SetString
PyMethod_New
PyInstanceMethod_New
PyDict_Next
PyUnicode_AsUnicode
PyUnicode_Compare
PyErr_Occurred
PyErr_Format
PyList_Type
PyTuple_Type
PyLong_FromSsize_t
PyObject_GetItem
_PyObject_GC_New
PyObject_GC_Track
AnnotateIgnoreReadsBegin
_PyThreadState_Current
AnnotateIgnoreReadsEnd
PyFrame_New
PyTraceBack_Here
PyCode_New
PyMem_Realloc
PyMem_Malloc
calloc
PyErr_NoMemory
PyErr_NormalizeException
PyException_SetTraceback
_Py_CheckRecursionLimit
PyObject_Call
_Py_CheckRecursiveCall
PyExc_SystemError
PyExc_NameError
PyDict_GetItem
PyExc_AttributeError
PyLong_AsLong
PyNumber_Long
PyLong_AsUnsignedLong
PyExc_OverflowError
PyTuple_New
PyErr_SetObject
__errno_location
PyLong_FromLong
strerror
fflush
ftell
fileno
lseek64
fclose
fdopen
fread
fwrite
sqlite3_errmsg
sqlite3_step
sqlite3_finalize
sqlite3_close
sqlite3_libversion
PyObject_RichCompare
PySet_New
PyObject_GetIter
sqlite3_compileoption_get
PySet_Add
PyExc_StopIteration
PyUnicode_Format
PyErr_GivenExceptionMatches
PyNumber_Subtract
PyObject_Size
PyLong_Type
PyLong_AsSsize_t
PyNumber_Index
PyUnicode_Type
_PyType_Lookup
sqlite3_open_v2
sqlite3_extended_result_codes
PyUnicode_AsUTF8String
sqlite3_prepare_v2
memcmp
PyDict_Size
PyTuple_Pack
_PyUnicode_Ready
PyUnicode_Join
PyNumber_Multiply
sqlite3_reset
PyList_Append
sqlite3_bind_blob
sqlite3_bind_double
PyGILState_Ensure
PyExc_ZeroDivisionError
PyGILState_Release
sqlite3_bind_int64
PyNumber_Remainder
sqlite3_column_type
sqlite3_column_int64
sqlite3_column_blob
sqlite3_column_bytes
sqlite3_column_double
PyInit_deltadump
PyOS_snprintf
Py_GetVersion
PyErr_WarnEx
PyBytes_FromStringAndSize
PyImport_AddModule
PyObject_GetAttrString
PyType_Ready
PyObject_SetAttrString
PyModule_Create2
PyUnicode_Decode
PyUnicode_FromStringAndSize
__pyx_module_is_main_s3ql__deltadump
PyImport_GetModuleDict
PyDict_GetItemString
PyDict_SetItem
PyCFunction_NewEx
PyDict_SetItemString
libpython3.4m.so.1.0
libsqlite3.so.0
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
GLIBC_2.2.5
GLIBC_2.4
5"7!
%$7!
%"7!
%z6!
%r6!
%j6!
%b6!
%Z6!
%R6!
%J6!
%B6!
%:6!
%26!
%*6!
%"6!
%z5!
%r5!
%j5!
%b5!
%Z5!
%R5!
%J5!
%B5!
%:5!
%25!
%*5!
%"5!
%z4!
%r4!
%j4!
%b4!
%Z4!
%R4!
%J4!
%B4!
%:4!
%24!
%*4!
%"4!
%z3!
%r3!
%j3!
%b3!
H;=!/!
D$(1
L$(dH3
AUATI
([]A\A]
D$(1
L$(dH3
fffff.
=I]!
5B]!
fffff.
fffff.
z @u
z Xu
GHt?H
5Y)!
ffffff.
xgIc
~TE1
ffffff.
ffffff.
ffffff.
ffffff.
ffffff.
ffffff.
ffffff.
5A$!
ATUH
9]x~!Hc
P09]x
fff.
AWAVI
AUATA
[]A\A]A^A_
=VX!
AVAUATUI
~&E1
D;kx|
[]A\A]A^
ffffff.
tWH;5
 tIH
tWH;5H
 tQH
tWH;5
 tZH
t#SH
H;5f
AWAVI
AUATUSH
D$81
D$0L
t$(L
l$ H
t$ H
`<`tjH
F@H9
`<`u
t$ H
`<`u
t$ H
F@I9
`<`u
T$(H
L$(H
\$8dH3
H[]A\A]A^A_
tmH;
AWAVI
AUATI
[]A\A]A^A_
fff.
AWAVI
AUATH
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATI
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AQUAVAUPPPPP
-"I!
D;=]H!
=.H!
=#H!
ffffff.
AUATI
([]A\A]
AUATUSH
[]A\A]
[]A\A]
@tkATU1
@teH
t8[]A\
[]A\H
AUATUSH
Hc8H
[]A\A]
fff.
fff.
AVAUATUI
5v7!
[]A\A]A^
[]A\A]A^
AWAVAUATI
=/5!
[]A\A]A^A_
ffffff.
ffffff.
ffffff.
ffffff.
ffffff.
ffffff.
ffffff.
AWAVAUATUSH
%K+!
%t'!
=m*!
5*(!
L;-y
="(!
5g%!
5I#!
[]A\A]A^A_
=^ !
AWAVAUATI
t$ H
l$DL
uML;5
D$8H;E
D$8H
[]A\A]A^A_
u9L;%
L;5\
L;5!
L;5.
T$ I
D$ H
D$(H
L$0H
D$HL
L$0D
D$HL
L$8H;M
L$8H
D$HL
l$DL
D$HL
P0E1
AWAVAUATI
[]A\A]A^A_
D$0I
\$(H
D$0I
D$ H
D$(I
D$8H
I9D$
I;D$
D$hI
t$pI
L$xH
D$PH
t$@H
L$Ht
D$@H
D$HH
D$ H
D$XI
D$`H
D$pH
t$XH
L$`E1
|$0H
|$(I
|$(H
D$(H
l$(H
H;W 
L;=!
t$0I
D$0H
D$(H
D$ H
D$8H
D$(H
D$0H
D$ H
D$ H
D$(H
|$ A
D$(A
t$ H
T$HH
t$@H
|$PH
T$HH
t$@H
\$ E1
D$(A
\$ A
|$ H
D$(H
D$ L
D$ I
|$PL
D$(I
L$XI
T$`M
L$PI
D$XH
D$`t
|$ L
T$ H
T$ H
T$0H
L$(L
L$(H
T$0L
D$(E1
l$0L
L$(H
L$(H
Hc|$h
\$8H
t$XH
L$`E1
L$(1
t$XL
L$(1
t$XH
N0E1
L$(1
L$8H
l$0L
\$(L
l$8H
D$pLcl$`L9l$p
9\$h
l$(A
l$(A
D$pI
|$pH
\$(H
l$0L
l$8H
\$(H
l$0L
l$8H
\$(H
l$0L
l$8A
\$(H
l$0L
l$8H
\$(L
l$8I
\$(H
l$0L
l$8H
\$(H
l$0L
l$8H
E Jc
\$(H
l$0L
l$8H
\$(H
l$0L
l$8H
\$(H
l$0L
l$8H
\$(H
l$0L
E Jc
\$(H
l$0L
l$8H
\$(H
l$0L
l$8H
\$(H
l$0L
l$8H
\$(H
l$0L
l$8H
\$(H
l$0L
l$8H
\$(H
l$0L
l$8H
\$(H
l$0L
l$8H
\$(H
l$0L
l$8H
L$PI
\$(H
l$0L
l$8H
L$@H
t$HH
D$ H
|$ H
L$ H
t$ A
|$ H
|$ 1
L$ I
\$(H
l$0L
l$8H
\$(H
l$0L
l$8H
\$(H
l$0L
l$8H
\$(H
l$0L
l$8H
AWAVAUATI
D$ H
|$hH
|$pH
|$xH
H;-!p 
[]A\A]A^A_
d$hH
d$hH
d$hH
d$pH
|$hH
L$(H
D$8H
L$0t
D$(H
D$0H
\$pH
D$pH
|$pH
d$hH
D$pH
|$pH
|$hH
|$pH
|$pH
D$pH
|$pH
D$@H
t$@A
l$pH
|$hH
D$pI
D$ I
l$pI
|$hH
d$pH
5wf 
|$(H
D$hH
|$pH
T$@H
D$hH
|$pH
|$hH
|$hL
|$hH
|$pH
T$pH
|$hH
|$pH
D$hM
|$pI
|$pH
|$hH
|$hL
|$hH
|$pH
t$HI
H;U 
|$hH
|$pL
l$hI
D$ H
D$hH
|$xH
|$pH
T$hH
t$xH
L$hH
T$x1
|$pH
|$xH
|$hH
T$0H
t$(H
|$8H
5\X 
T$0H
t$(A
D$hA
D$hH
L$xH
D$hA
D$hA
D$hA
D$h1
D$@A
5Rd 
t$@1
D$hA
D$hA
D$hA
D$hA
D$hA
D$h1
D$hA
D$hA
D$h1
D$pH
t$HI
|$pH
L$ H
|$pH
l$pH
5,y 
|$pL
|$pH
|$hH
T$hH
|$pH
|$hH
|$hH
5D| 
|$hH
|$pL
D$hH
|$pH
|$hH
l$ H
D9d$@~
D$HH
s H)
l$ H
D$hA
D$hA
D$hA
D$hA
D$h1
D$hE1
D$hA
l$hI
D$hA
D$hA
D$hA
D$hA
D$hA
D$hA
|$hH
|$pH
|$XH
l$ H
D$hA
L$HJ
l$ H
D$hA
l$ L
L$HH
Hc|$T
T$hH
T$pH
|$xH
T$pH
D$ptUH
|$xH
|$pH
|$pH
D$hA
D$hA
D$hA
D$hA
D$hA
s J+<
l$ L
=#u 
T$pL
|$hH
D$hA
D$hfA
D$hA
D$hA
l$ H
D$hA
l$ H
D$hA
l$ A
l$ H
D$hA
l$ A
D$hA
D$ht*H
|$hH
l$ H
D$hA
L$8L
l$ H
L$(H
L$0H
5zn 
D$hA
t$HH
D$hA
D$hA
D$hA
D$hA
ffff.
AVAUH
ATUA
d$ L
=ap 
=<p 
[]A\A]A^
H9E 
=Ib 
=2l 
=fh 
=:j 
=Nj 
5wj 
5Lj 
5C2 
5zg 
56h 
5@g 
RRPRR
5wf 
5@f 
5vg 
5:f 
RRPRR
5me 
5[e 
5uf 
5re 
5vf 
5{d 
5Uf 
57f 
5!f 
5sf 
5}d 
RRPRR
=!e 
=nf 
=)f 
5yb 
=Be 
5ea 
5=b 
=za 
5<a 
=5d 
P0Hc=Tc 
=Mc 
5%b 
=f\ 
54` 
=Ub 
=7[ 
5%_ 
<cyfunction %U at %p>
at least
exactly
at most
src/s3ql/deltadump.c
%s (%s:%d)
deltadump.pyx
s3ql.deltadump.calloc
name '%U' is not defined
cannot import name %S
an integer is required
s3ql.deltadump.fclose
s3ql.deltadump.dup_to_fp
s3ql.deltadump.fread
s3ql.deltadump.read_integer
s3ql.deltadump.fwrite
s3ql.deltadump.write_integer
s3ql.deltadump.check_sqlite
s3ql.deltadump.prep_columns
float division
s3ql.deltadump.load_table
s3ql.deltadump.dump_table
%d.%d
_cython_0_20_1post0
builtins
__builtins__
__name__
init s3ql.deltadump
cython_function_or_method
__reduce__
__module__
func_doc
__doc__
func_name
__qualname__
__self__
func_dict
__dict__
func_globals
__globals__
func_closure
__closure__
func_code
__code__
func_defaults
__defaults__
__kwdefaults__
__annotations__
lambda16
lambda15
lambda14
lambda13
lambda12
lambda11
lambda10
lambda9
lambda8
lambda7
lambda6
lambda5
lambda4
lambda3
lambda2
lambda1
__annotations__ must be set to a dict object
__kwdefaults__ must be set to a dict object
__defaults__ must be set to a tuple object
function's dictionary may not be deleted
setting function's dictionary to a non-dict
__qualname__ must be set to a string object
__name__ must be set to a string object
%s() got multiple values for keyword argument '%U'
%.200s() keywords must be strings
%s() got an unexpected keyword argument '%U'
%.200s() takes %.8s %zd positional argument%.1s (%zd given)
 while calling a Python object
NULL result without error in PyObject_Call
__%.4s__ returned non-%.4s (type %.200s)
can't convert negative value to size_t
value too large to convert to int
calling %R should have returned an instance of BaseException, not %R
raise: exception class must be a subclass of BaseException
s3ql.deltadump.raise_from_errno
s3ql.deltadump.load_table.lambda8
s3ql.deltadump.dump_table.lambda2
s3ql.deltadump.SQLITE_CHECK_RC
s3ql.deltadump.load_table.lambda16
s3ql.deltadump.load_table.lambda14
s3ql.deltadump.load_table.lambda13
s3ql.deltadump.load_table.lambda12
s3ql.deltadump.load_table.lambda7
s3ql.deltadump.dump_table.lambda6
s3ql.deltadump.dump_table.lambda1
compiletime version %s of module '%.100s' does not match runtime version %s
Shared Cython type %.200s is not a type object
Shared Cython type %.200s has the wrong size, try recompiling
s3ql.deltadump.__pyx_scope_struct_1_load_table
s3ql.deltadump.__pyx_scope_struct__dump_table
;*3$"
load_table(table, columns, db, fh, trx_rows=5000)
Load *columns* of *table* from *fh*
    *db* is an `s3ql.Connection` instance for the database.
    *columns* must be the same list of 3-tuples that was passed to
    `dump_table` when creating the dump stored in *fh*.
    This function will open a separate connection to the database, so
    the *db* connection should not be in EXCLUSIVE locking mode.
    (Using a separate connection avoids the requirement on the *apsw*
    and *deltadump* modules be linked against against binary
    compatible SQLite libraries).
    When writing into the table, a new transaction will be started
    every *trx_rows* rows.
    
dump_table(table, order, columns, db, fh)
Dump *columns* of *table* into *fh*
    *order* specifies the order in which the rows are written and must be a
    string that can be inserted after the "ORDER BY" clause in an SQL SELECT
    statement.
    *db* is an `s3ql.Connection` instance for the database.
    *columns* must a list of 3-tuples, one for each column that should be
    stored. The first element of the tuple must contain the column name and the
    second element the type of data stored in the column (`INTEGER`, `TIME`
    or `BLOB`). Times will be converted to nanosecond integers.
    For integers and seconds, the third tuple element specifies the expected
    change of the values between rows. For blobs it can be either zero
    (indicating variable length columns) or an integer specifying the length of
    the column values in bytes.
    This function will open a separate connection to the database, so
    the *db* connection should not be in EXCLUSIVE locking mode.
    (Using a separate connection avoids the requirement on the *apsw*
    and *deltadump* modules be linked against against binary
    compatible SQLite libraries).
    
check_sqlite()
Check if deltadump and apsw module use compatible SQLite code.
    This functions look at versions and compile options of the SQLite
    code used by the *apsw* module and the *deltadump* module. If they
    do not match exactly, a `RuntimeError` is raised.
    Only if both modules use the same SQLite version compiled with the
    same options can the database object be shared between *apsw* and
    *deltadump*.
    
apsw sqlite version: %s, s3ql sqlite version: %s
apsw sqlite compile options: %s, s3ql sqlite compile options: %s
SQLite code used by APSW was compiled with different options than SQLite code available to S3QL! Differing settings: + %s, - %s
Can't access in-memory databases
/home/nikratio/tmp/s3ql/src/s3ql/deltadump.pyx
deltadump.pyx - this file is part of S3QL (http://s3ql.googlecode.com)
Copyright (C) Nikolaus Rath <Nikolaus@rath.org>
This program can be distributed under the terms of the GNU GPLv3.
SQLite version mismatch between APSW and S3QL (%s vs %s)
Can not dump BLOB of size %d (max: %d)
BLOB too large to read (%d vs %d)
load_table(%s): reading %d rows
dump_table(%s): writing %d rows
SELECT %s FROM %s ORDER BY %s 
SELECT COUNT(rowid) FROM %s
Invalid type for column %d
load_table.<locals>.<lambda>
dump_table.<locals>.<lambda>
INSERT INTO %s (%s) VALUES(%s)
Opening connection to %s
Length %d != %d in column %d
Can't dump NULL values
getfilesystemencoding
s3ql_sqlite_version
s3ql_sqlite_options
apsw_sqlite_version
apsw_sqlite_options
COMMIT TRANSACTION
BEGIN TRANSACTION
sqlitelibversion
surrogateescape
compile_options
s3ql.deltadump
MAX_BLOB_SIZE
foreign_keys
exceptionfor
check_sqlite
RuntimeError
synchronous
commit_stmt
sqlite3_db
load_table
int64_prev
dump_table
contextlib
begin_stmt
ValueError
PRAGMA %s = %s
row_count
itertools
getLogger
col_types
col_names
col_count
ExitStack
trx_rows
dbfile_b
col_args
callback
PRAGMA %s
logging
get_val
columns
OSError
IOError
INTEGER
pragma
:memory:
__import__
fileno
encode
table
range
query
order
int64
__enter__
debug
count
__test__
stmt
__name__
__main__
file
__exit__
apsw
TIME
BLOB
len_
deltadump.cpython-34m.so.debug
7zXZ
_Q^Z
n)8}
0&[3
`pyG:
Aw5*1=
JoZr
l\!QS
jx@?
O	(Y
3&!'C
5LV3|Kx
|JV^
0KR	)B]>|
\Ze%>
*K8f
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
