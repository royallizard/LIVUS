/lib64/ld-linux-x86-64.so.2
liblxc.so.1
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
lxc_log_category_lxc
lxc_arguments_parse
current_config
mkdir_p
wait_for_pid
lxc_container_new
lxc_log_use_global_fd
lxc_log_init
lxc_container_put
lxc_log_options_no_override
lxc_global_config_value
get_template_path
libcap.so.2
libselinux.so.1
libseccomp.so.2
libutil.so.1
libpthread.so.0
libc.so.6
exit
execv
optind
fork
__stack_chk_fail
__fprintf_chk
__ctype_b_loc
stderr
strtoull
fwrite
gettimeofday
geteuid
__cxa_finalize
access
strcmp
__libc_start_main
_edata
__bss_start
_end
__libc_csu_fini
__data_start
_IO_stdin_used
__libc_csu_init
lxc_log_category_lxc_create_ui
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.2.5
5". 
%$. 
%". 
%z- 
%r- 
%j- 
AUATH
D$X1
d$ 1
=}. 
=N. 
=L. 
=', 
D$ H
D$(L
-K- 
luTA
D$@H
D$8H
D$HH
D$PH
=%+ 
=N, 
=t+ 
D$0A
=y) 
fffff.
=9) 
52) 
fffff.
=O& 
=r  
fffff.
=1  
AUAT
0USH
<BtM<K
(<Tt-H
[]A\A]
fff.
AUATUSH
f0dH
([]A\A]
T$pH
L$xL
D$X1
=\% 
t$ 1
D$D0
D$HH
D$`H
D$PH
D$@H
D$XdH3
T$pH
L$xL
D$X1
t$(1
T$ H
D$D0
D$HH
D$`H
D$PH
D$@H
D$XdH3
D$81
D$8dH3
t$ H
D$ H
AWAVA
AUATL
[]A\A]A^A_
Invalid blockdev size '%s', using default size
Invalid blockdev unit size '%c' in '%s', using default size
A template must be specified.
Use "none" if you really want a container without a rootfs.
filesystem type and size are only valid with block devices
--lvname, --vgname and --thinpool are only valid with -B lvm
zfsroot is only valid with -B zfs
Unprivileged users cannot create %s containers
System error loading container
--name=NAME -t template [-w] [-r] [-P lxcpath]
lxc-create creates a container
Options :
  -n, --name=NAME    NAME for name of the container
  -f, --config=file  Initial configuration file
  -t, --template=t   Template to use to setup container
  -B, --bdev=BDEV    Backing store type to use
  -P, --lxcpath=PATH Place container under PATH
  --lvname=LVNAME    Use LVM lv name LVNAME
                     (Default: container name)
  --vgname=VG        Use LVM vg called VG
                     (Default: lxc)
  --thinpool=TP      Use LVM thin pool called TP
                     (Default: lxc)
  --fstype=TYPE      Create fstype TYPE
                     (Default: ext3)
  --fssize=SIZE[U]   Create filesystem of size SIZE * unit U (bBkKmMgGtT)
                     (Default: 1G, default unit: M)
  --dir=DIR          Place rootfs directory under DIR
  --zfsroot=PATH     Create zfs under given zfsroot
                     (Default: tank/lxc)
create_helpfn
main
container %s created
lxc_create.c
Error executing %s -h
_unset
none
best
loop
You lack access to %s
btrfs
Container already exists
lxc.default_config
Error creating container %s
lxc-create
bdev
template
lvname
vgname
thinpool
fstype
fssize
zfsroot
help
usage
version
quiet
logfile
logpriority
lxcpath
lxc_create_ui
;*3$"
lxc-create.debug
7zXZ
zvD6
pqrrF
};[{Nx
 >uHU
x60rC
QQ6r
SwcT
4r6!
5E]D
Hc6j
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
