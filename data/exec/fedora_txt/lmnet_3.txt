 vJ(U
__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
netQueryInterface
cvthname
addAllowedSenderLine
PrintAllowedSenders
debugListenInfo
create_udp_socket
closeUDPListenSockets
netClassExit
dbgprintf
netClassInit
objGetObjInterface
modInit
calloc
malloc
strlen
free
strncmp
strcmp
__strdup
realloc
gethostname
memchr
__errno_location
uname
sscanf
rs_strerror_r
__stack_chk_fail
pAllowedSenders_UDP
pAllowedSenders_TCP
fnmatch
pAllowedSenders_GSS
close
getsockname
getaddrinfo
setsockopt
fcntl
freeaddrinfo
Debug
bind
gai_strerror
strcasecmp
rsParsConstructFromSz
parsIsAtEndOfParseString
parsPeekAtCharAtParsPtr
parsAddrWithBits
rsParsDestruct
strchr
ACLDontResolve
memcpy
parsGetCurrentPosition
ACLAddHostnameOnFail
pthread_setcancelstate
getnameinfo
sigemptyset
sigaddset
pthread_sigmask
__snprintf_chk
strcpy
__ctype_b_loc
__ctype_tolower_loc
libc.so.6
_edata
__bss_start
_end
lmnet.so
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.3
GLIBC_2.2.5
%z5 
%r5 
%j5 
%b5 
%Z5 
%R5 
%J5 
%B5 
%:5 
%25 
%*5 
%"5 
ATSubH
=x2 
%l0 
='0 
fffff.
ffff.
=M3 
d$ H
fffff.
k E1
t$ H
*tF1
*t6I
AVAUATI
[]A\A]A^
[]A\A]A^
[]A\A]A^
AUATUSL
[]A\A]I
[]A\
ffff.
=:, 
AWAVAUATI
D$H1
T$0H
t$ L
T$HdH3
X[]A\A]A^A_
t$0I
t$8H
|$ H
t$(t
fffff.
l$ H
USt<
[]A\
D$(1
D$(dH3
\$0H
l$8L
d$@H
AVAUATUH
L$@L
D$@E1
\$@1
D$HL
t$LH
|$@H
X[]A\A]A^A_
AWAVAUATUSH
D$0H
T$pH
|$`L
d$xH
T$ H
|$(f
\$xD
[]A\A]A^A_
t =,
D$0 
L$ H
D$pH
L$pH
L$pH
T$pf
AWAVAUATUSH
D$h1
l$ L
D$hdH3
x[]A\A]A^A_
fff.
AWAVAUATUH
[]A\A]A^A_
[]A\
[]A\
[]A\
glbl
net.c
errmsg
modExit
modGetID
getType
objGetObjInterface
uname: %s
%u.%u
other
IPv4
IPv6
create_udp_socket(), socket
setsockopt
setsockopt(REUSEADDR)
setsockopt(BSDCOMPAT)
fcntl(O_NONBLOCK)
bind
DNS error: Can't resolve "%s"
Allowed %s Senders:
	No restrictions set.
	%s/%u
Malformed from address %s
entry point '%s' not present in module
error compiling wildcard expression '%s'
uname: unexpected release '%s'
program error: invalid allowed sender ID '%s', denying...
MaskCmp: host="%s"; pattern="%s"
Listening on %s syslogd socket %d (%s/port %d).
Listening on syslogd socket %d - could not obtain peer info.
UDP message reception disabled due to error logged in last message.
couldn't allocate memory for UDP sockets, suspending UDP message reception
We could initialize %d UDP listen sockets out of %d we received - this may or may not be an error indication.
No UDP listen socket could successfully be initialized, message reception via UDP disabled.
Invalid protocol '%s' in allowed sender list, line ignored
Error %d constructing parser object - ignoring allowed sender list
Error %d parsing address in allowed senderlist - ignoring.
You can not specify 0 bits of the netmask, this would match ALL systems. If you really intend to do that, remove all $AllowedSender directives.
Invalid number of bits (%d) in IPv4 address - adjusted to 32
Invalid number of bits (%d) in IPv6 address - adjusted to 128
Internal error caused AllowedSender to be ignored, AF = %d
Ignoring hostname based ACLs because DNS is disabled.
Adding hostname "%s" to ACL as a wildcard entry.
Hostname "%s" WON'T be added to ACL.
Error %d adding allowed sender entry - ignoring.
Error %d adding allowed sender entry - terminating, nothing more will be added.
	ERROR in getnameinfo() - something may be wrong - ignored for now
Malicious PTR record, message dropped IP = "%s" HOST = "%s"
Malicious PTR record (message accepted, but used IP instead of PTR name: IP = "%s" HOST = "%s"
Host name for your address (%s) unknown
lmnet.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
