__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
value_get_as_float
goal_seek_initialize
goal_seek_newton
value_new_float
goal_seek_point
goal_seek_bisection
value_new_error_VALUE
__stack_chk_fail
dgamma
pgamma
expm1
erlang_functions
go_plugin_header
go_plugin_depends
libm.so.6
libc.so.6
_edata
__bss_start
_end
erlang.so
GLIBC_2.2.5
GLIBC_2.4
%z" 
%r" 
%j" 
%b" 
%Z" 
%R" 
%J" 
%B" 
%:" 
%2" 
%*" 
%"" 
=9" 
=	" 
u+UH
ATUH
D$x1
D$ L
D$(L
L$xdH3
[]A\
ATUH
D$x1
L$xdH3
[]A\
d$ w
probblock
offtraf
dimcirc
offcap
OFFCAP:traffic capacity
circuits:number of circuits
gos:grade of service
=OFFCAP(30,0.01)
DIMCIRC,OFFTRAF,PROBBLOCK
traffic:number of calls
=DIMCIRC(24,0.01)
OFFCAP,OFFTRAF,PROBBLOCK
=OFFTRAF(24,30)
PROBBLOCK,DIMCIRC,OFFCAP
=PROBBLOCK(24,30)
OFFTRAF,DIMCIRC,OFFCAP
goffice
gnumeric
1.12.41
OFFCAP returns the traffic capacity given @{circuits} circuits with grade of service @{gos}.
DIMCIRC:number of circuits required
DIMCIRC returns the number of circuits required given @{traffic} calls with grade of service @{gos}.
OFFTRAF:predicted number of offered calls
traffic:number of carried calls
OFFTRAF returns the predicted number of offered calls given @{traffic} carried calls (taken from measurements) on @{circuits} circuits.
@{traffic} cannot exceed @{circuits}.
PROBBLOCK:probability of blocking
PROBBLOCK returns probability of blocking when @{traffic} calls load into @{circuits} circuits.
munG
;*3$"
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA!stack_realign
erlang.so-1.12.41-2.fc29.x86_64.debug
7zXZ
&Q!:c
@2!0
I|t R
h1Fh
6cX/
16$0N
^m&Z
C)(n
pGZG
nGbr
-Z>f
i)9M
R{q8
_!@y
\W5"
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.note.gnu.property
.init_array
.fini_array
.data.rel.ro
.dynamic
.got
.bss
.gnu.build.attributes
.gnu_debuglink
.gnu_debugdata
