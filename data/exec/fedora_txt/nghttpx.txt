/lib64/ld-linux-x86-64.so.2
libnghttp2.so.14
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
nghttp2_submit_headers
nghttp2_session_callbacks_set_on_begin_headers_callback
nghttp2_session_set_stream_user_data
nghttp2_session_get_stream_user_data
nghttp2_is_fatal
nghttp2_submit_response
nghttp2_submit_window_update
nghttp2_option_set_no_recv_client_magic
nghttp2_session_get_stream_remote_close
nghttp2_option_new
nghttp2_session_callbacks_set_on_frame_send_callback
nghttp2_check_header_name
nghttp2_session_callbacks_set_on_frame_recv_callback
nghttp2_submit_rst_stream
nghttp2_session_get_stream_effective_recv_data_length
nghttp2_session_callbacks_set_on_data_chunk_recv_callback
nghttp2_submit_goaway
nghttp2_session_callbacks_set_on_frame_not_send_callback
nghttp2_session_mem_send
nghttp2_session_mem_recv
nghttp2_session_want_read
nghttp2_session_callbacks_set_on_stream_close_callback
nghttp2_session_upgrade
nghttp2_session_callbacks_set_on_header_callback
nghttp2_session_get_effective_recv_data_length
nghttp2_session_server_new2
nghttp2_submit_trailer
nghttp2_option_set_peer_max_concurrent_streams
nghttp2_session_want_write
_fini
nghttp2_session_get_remote_settings
nghttp2_option_set_no_auto_window_update
nghttp2_submit_shutdown_notice
nghttp2_session_terminate_session
nghttp2_check_header_value
nghttp2_submit_ping
nghttp2_session_consume
nghttp2_strerror
nghttp2_session_client_new2
nghttp2_session_callbacks_set_select_padding_callback
nghttp2_session_get_last_proc_stream_id
nghttp2_session_get_stream_effective_local_window_size
nghttp2_session_callbacks_new
nghttp2_submit_settings
nghttp2_session_del
nghttp2_session_get_effective_local_window_size
nghttp2_submit_push_promise
nghttp2_submit_request
nghttp2_session_resume_data
libev.so.4
ev_run
ev_prepare_start
ev_now
ev_io_start
ev_loop_destroy
ev_default_loop
ev_child_stop
ev_child_start
ev_signal_start
ev_timer_again
ev_async_stop
ev_io_stop
ev_timer_stop
ev_feed_event
ev_prepare_stop
ev_async_send
ev_timer_start
ev_loop_new
ev_async_start
ev_break
libssl.so.10
SSL_SESSION_get_id
SSL_get_error
SSL_CTX_free
SSL_set_accept_state
SSL_SESSION_free
SSL_pending
SSL_read
SSL_CTX_set_client_CA_list
SSL_CTX_set_default_passwd_cb
SSL_CTX_ctrl
SSL_CTX_set_next_protos_advertised_cb
SSL_get_SSL_CTX
SSL_get_verify_result
SSL_get_servername
SSL_CTX_sess_set_get_cb
SSL_CTX_use_PrivateKey_file
SSL_set_bio
SSL_CTX_load_verify_locations
SSL_library_init
SSL_CTX_get_ex_data
SSL_get_session
SSL_get0_next_proto_negotiated
SSL_CTX_set_default_verify_paths
SSLv23_client_method
SSL_set_connect_state
SSL_CTX_set_default_passwd_cb_userdata
SSL_shutdown
SSL_get_current_cipher
SSL_write
SSL_CIPHER_get_id
SSL_CTX_callback_ctrl
d2i_SSL_SESSION
SSL_CTX_set_session_id_context
SSL_CTX_check_private_key
SSL_set_ex_data
SSL_CTX_set_next_proto_select_cb
SSL_set_SSL_CTX
SSL_CTX_sess_set_new_cb
SSL_CIPHER_get_name
SSL_set_shutdown
SSL_CTX_use_certificate_chain_file
SSL_get_peer_certificate
SSL_CTX_set_alpn_protos
SSL_load_client_CA_file
SSL_CTX_set_verify
SSL_CTX_set_alpn_select_cb
SSL_get0_alpn_selected
SSL_do_handshake
SSL_free
SSL_load_error_strings
SSL_CTX_set_info_callback
SSL_ctrl
SSL_get_ex_data
SSL_new
SSL_CTX_new
SSL_CTX_set_timeout
i2d_SSL_SESSION
SSLv23_server_method
SSL_CTX_set_cipher_list
SSL_CTX_set_ex_data
SSL_version
libcrypto.so.10
deflate
deflateEnd
HMAC_Init_ex
ERR_get_error
PEM_read_bio_DHparams
EVP_sha256
OPENSSL_add_all_algorithms_noconf
DH_free
CRYPTO_malloc
ASN1_STRING_data
X509_NAME_ENTRY_get_data
sk_num
EVP_aes_128_cbc
X509_verify_cert_error_string
BIO_new_file
EVP_MD_size
X509_get_subject_name
X509_free
BIO_free
ASN1_STRING_to_UTF8
BIO_s_file
CRYPTO_num_locks
PEM_read_bio_X509
EVP_DecryptInit_ex
EVP_CIPHER_key_length
BIO_set_flags
BIO_new
EVP_EncryptInit_ex
RAND_bytes
BIO_ctrl
GENERAL_NAMES_free
EVP_aes_256_cbc
ERR_clear_error
BIO_clear_flags
X509_STORE_CTX_get_error
ASN1_STRING_length
EC_KEY_free
OPENSSL_config
ERR_error_string
X509_NAME_get_index_by_NID
CRYPTO_free
CRYPTO_set_locking_callback
EC_KEY_new_by_curve_name
X509_STORE_CTX_get_error_depth
X509_NAME_get_entry
BIO_vfree
sk_value
X509_get_ext_d2i
libz.so.1
deflateInit2_
libstdc++.so.6
pthread_once
pthread_getspecific
pthread_create
__pthread_key_create
pthread_setspecific
_ZNSo9_M_insertIdEERSoT_
_ZTVN10__cxxabiv129__pointer_to_member_type_infoE
_ZTVN10__cxxabiv117__class_type_infoE
_ZSt9terminatev
_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
_ZNSt8ios_base4InitD1Ev
_ZTISt12future_error
_ZNSt11logic_errorC2ERKS_
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm
_ZTVN10__cxxabiv120__function_type_infoE
_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv
_ZTINSt13__future_base12_Result_baseE
_ZTVSt14basic_ifstreamIcSt11char_traitsIcEE
_ZTVSt15basic_streambufIcSt11char_traitsIcEE
_ZNSt6thread15_M_start_threadESt10shared_ptrINS_10_Impl_baseEEPFvvE
__gxx_personality_v0
_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode
_ZTVSt12future_error
_ZNSo3putEc
_ZTVSt13basic_filebufIcSt11char_traitsIcEE
__once_proxy
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZNKSt5ctypeIcE13_M_widen_initEv
_ZNSt12future_errorD1Ev
__cxa_throw_bad_array_new_length
_ZNSo9_M_insertIlEERSoT_
_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc
_ZNSo5writeEPKcl
_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
__cxa_pure_virtual
_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE
_ZdlPv
__cxa_begin_catch
_ZSt17current_exceptionv
_ZSt20__throw_length_errorPKc
_ZNSt13random_device9_M_getvalEv
_ZNSt13__future_base12_Result_baseD2Ev
_ZTVSt9basic_iosIcSt11char_traitsIcEE
_Znam
__cxa_allocate_exception
_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
_ZNSt6localeD1Ev
_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm
__cxa_end_catch
_ZNSi4readEPcl
_ZNSt6chrono3_V212steady_clock3nowEv
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc
_ZSt24__throw_out_of_range_fmtPKcz
_ZNSt8ios_baseD2Ev
_ZdaPv
_ZNSt15__exception_ptr13exception_ptrD1Ev
_ZSt25__throw_bad_function_callv
_ZNSt15__exception_ptreqERKNS_13exception_ptrES2_
_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEmc
_ZTIN10__cxxabiv115__forced_unwindE
_ZSt16__throw_bad_castv
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm
_ZSt17__throw_bad_allocv
_ZNSt8ios_base4InitC1Ev
_ZSt15__once_callable
_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_
_ZNSo9_M_insertIPKvEERSoT_
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcmm
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm
__cxa_guard_release
_ZSt4cerr
_ZNSt6thread4joinEv
_ZNSo9_M_insertImEERSoT_
_ZNSt15__exception_ptr13exception_ptr4swapERS0_
_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
_ZNSt15__exception_ptr13exception_ptrC1ERKS0_
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv
_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
_ZSt15future_categoryv
_Znwm
_ZSt20__throw_system_errori
__cxa_rethrow
_ZNSt12__basic_fileIcED1Ev
_ZNSt13__future_base12_Result_baseC2Ev
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcmm
_ZSt11__once_call
_ZNSt6chrono3_V212system_clock3nowEv
__cxa_throw
_ZNSt6localeC1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc
_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base
_ZNSt8ios_baseC2Ev
_ZSt19__throw_logic_errorPKc
_ZNKSt5ctypeIcE8do_widenEc
_ZNSt13random_device7_M_initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
__cxa_guard_acquire
_ZNSt28__atomic_futex_unsigned_base19_M_futex_notify_allEPj
_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE
_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode
_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev
_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_
_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED0Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
_ZSt20__throw_future_errori
_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
_ZSt4cout
_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
_ZNSo5flushEv
_ZNSt28__atomic_futex_unsigned_base19_M_futex_wait_untilEPjjbNSt6chrono8durationIlSt5ratioILl1ELl1EEEENS2_IlS3_ILl1ELl1000000000EEEE
_ZNSt11logic_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcm
_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev
_ZNSt13random_device7_M_finiEv
_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_
_ZNSolsEi
_ZNSolsEs
_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
libm.so.6
round
libgcc_s.so.1
_Unwind_Resume
libpthread.so.0
__errno_location
pthread_mutex_lock
fcntl
sigaction
connect
pthread_mutex_unlock
libc.so.6
setuid
socket
fflush
gmtime_r
gai_strerror
strsignal
optind
pipe
initgroups
fork
__stack_chk_fail
daemon
unlink
listen
memchr
getpid
kill
strdup
inet_pton
__assert_fail
localtime_r
strtol
isatty
getpwnam
strlen
__cxa_atexit
openlog
getaddrinfo
memset
writev
bind
memcmp
getnameinfo
__syslog_chk
getsockopt
dup2
strptime
__fprintf_chk
fchown
stdout
fputc
memcpy
strtoul
setsockopt
accept4
getenv
optarg
stderr
__snprintf_chk
getuid
execve
setrlimit
getopt_long
fileno
getcwd
fwrite
__memcpy_chk
strchr
_Exit
fdopen
__cxa_finalize
freeaddrinfo
__xstat
memmove
setgid
strcmp
__libc_start_main
__environ
_edata
__bss_start
_end
GCC_3.0
GLIBC_2.2.5
GLIBC_2.4
GLIBC_2.14
GLIBC_2.3.4
GLIBC_2.10
OPENSSL_1.0.1_EC
GLIBCXX_3.4.20
CXXABI_1.3.8
GLIBCXX_3.4.18
CXXABI_1.3.2
GLIBCXX_3.4.9
GLIBCXX_3.4.11
GLIBCXX_3.4.15
CXXABI_1.3
CXXABI_1.3.3
GLIBCXX_3.4.21
GLIBCXX_3.4.14
GLIBCXX_3.4.19
GLIBCXX_3.4
ATUI
[]A\
AUATI
D$(1
L$(dH3
8[]A\A]
AWAVAUATI
F0H9
FpH9
FPH9
F0H9
F0H9
F0H9
t!f.
|$(I
l$ I9
|$ M
t$f.
t$xH
t$pH
t$hH
t$`H
t$XH
D$PH
D$HH
D$8H
D$0H
D$(H
D$ H
t<f.
T$ H
|$ H
D$8H
D$8L
h M9
l$(I
\$ H
D$HH
D$XH
D$PH
D$08
l$0H
D$(H
|$XH
|$HL
t$PH
\$`H
] H9
H9\$
L$(H
p(L9
H;|$
H9D$(
\$8H
@XH9
C8H9
[]A\A]A^A_
t$(H
|$ H
\$8H
\$8H
|$PH
D$HH
|$8H
|$8H
D$0H
D$(H
D$ H
D$8H
D$HH
D$PH
|$8H
D$(1
defa
D$(dH3
fffff.
fffff.
fffff.
ATUI
[]A\
ATUSH
[]A\
D$ H
AWAVI
AUATUSH
H+L$
H9D$
d$0D
T$8H
t$0H
|$0I
H9D$
D$`H
D$`H
[]A\A]A^A_
H+D$
D$`H
|$0I
ffffff.
AWAVH
AUATI
[]A\A]A^A_
D$0H
D$0H
D$PH
D$ H
D$`H
D$PH
D$(H
D$pH
|$(H
T$xH
D$@H
T$pH
D$@H
D$@H
D$@I
D$0H
T$@H
D$(H
|$pH
D$ H
|$PH
|$@H
|$0H
t$ H
T$XH
T$PH
D$@H
D$@H
D$0H
D$0H
D$@H
D$@H
|$ H
T$XH
T$PH
|$0H
T$(H
|$pH
T$ H
|$PH
|$@H
|$0H
t2SH
AWAVAUATI
[A\A]A^A_]
AWAVAUATA
[A\A]A^A_]
ZYtQ
AWAVAUATUSH
D$pH
[]A\A]A^A_
t$0L
D$HD
tkrYUSH
AUATI
[]A\A]
AVAUI
ATUSH
l$(I
\$ H9
l$ H
]xH9
]HH9
C0H9
]0H9
C0H9
CpH9
CPH9
C0H9
C0H9
]A\A]A^
[]A\A]A^
ATUI
_ H9
l$ H
[]A\
[]A\
AUATL
[]A\A]
AUATL
[]A\A]
[]A\A]
AUATL
gfff
gfff
[]A\A]
[]A\A]
ATUSH
[]A\
AVAUATUSL
l$(I
\$ H9
l$ H
]A\A]A^
[]A\A]A^
ATUSH
[]A\
AUATL
[]A\A]
[]A\A]
<$I9
ATUSH
D$(1
T$(dH3
0[]A\
AWAVI
AUATI
[]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
tAATI
[]A\
AWAVH
AUATI
[]A\A]A^A_
AWAVH
mAUATI
4	H9
4$L)
L$8H
D>8H
} L9
[]A\A]A^A_
ATUSI
[]A\A]
	w9L9
fffff.
ATUI
[]A\
9~*@
AWAVAUATUSH
D$81
"tFH
T$ I9
H+D$
D$ H
t$8dH34%(
H[]A\A]A^A_
D$ H
T$(H
ATUH
D$H1
HcT$(H
 HcT$ H
D$$L
 GMTH
\$HdH3
P[]A\
ATUSH
D$x1
l$P1
/HcT$ H
D$$M
D$8I
D$PH9
D$`H
D$XH
\$xdH3
[]A\
D$`H
T$hH
|$PH
ATUH
D$x1
d$P1
D$$A
D$ L
t$8H
H+t$P1
D$PL9
D$`H
D$XH
\$xdH3
[]A\
D$`H
T$hH
|$PI
D$81
t$8dH34%(
fffff.
40A84
t5H9
t0f.
ffff.
ATUSH
[]A\A]
>=tfH
>=t	H
fE;P
tOHc
ATUI
fff.
USE1
fff.
AWAVH
AUATUSH
H9D$
[]A\A]A^A_
H;|$
ffffff.
AVAUATUH
[]A\A]A^
[]A\A]A^
AUATUSH
D$X1
8/t$1
L$XdH3
h[]A\A]
d$0H
?hu{
ffff.
AWAVAUATUSM
[]A\A]A^A_
]A\A]A^A_
ATUA
[]A\
[]A\
ffffff.
ATUA
[]A\
[]A\
ffff.
dH34%(
fff.
o^M<+
"""""""
AWAVA
AUATI
T$0dH
D$H1
L$HdH3
X[]A\A]A^A_
AWAVAUATUSH
D$81
D$ L
H+L$
D$8dH3
H[]A\A]A^A_
D$8dH3
[]A\A]A^A_
D$(1
H+D$
\$(dH3
H9D$
H9D$
H9D$
AVAUL
ATUSH
H9D$8
l$PI
T$PH
L$PH
L$`H
L$XH
H+L$XH9
t$pI
T$pH
L$pH
L$xH
|$pH
|$PI
|$0I
[]A\A]A^
t$`H
|$0I
|$PI
|$pI
ATUSH
D$(1
H+L$
T$(dH3
0[]A\
H+D$
ffffff.
	v-H
AWAVH
AUATUSH
H9D$
L;d$
H9D$
H9D$
L;d$
[]A\A]A^A_
;H;|$
fffff.
	v-H
AWAVAUATUSH
L;d$
H9T$
L;d$
[]A\A]A^A_
;H9<$H
AWAVL
AUATUSH
D$(1
D$'H
l$'H
T$(H
H9T$
L9$$D
L9$$B
L$(dH3
8[]A\A]A^A_
ffff.
AWAVI
AUATH
[]A\A]A^A_
AVAU
ATUH
 []A\A]A^
AWAVAUATI
rMH9
_AXu
[]A\A]A^A_
AWAVAUATUSH
|$@<-u
D$PH+D$@H
D$XH
D$pL
|$8H
D$0H9
D$(1
D$(N
L+t$(I
t$(L
L$ H
H9\$
\$@A
L$l|
|$pH
[]A\A]A^A_
A^XD9l$X
HcT$0I
|$HL
\$xL
d$pL9
|$pD
\$pH
l$xH9
=`%(
L$PH
t$@I9
9uAH
|$8H9|$0
|$HL
D$8H
T$0H)
D$@L
l$pH
|$pH
D$(H
AUATL
gfffffff
gfffffff
[]A\A]
[]A\A]
Q(L9
AWAVI
AUATI
[]A\A]A^A_
AWAVI
AUATUSH
t20L
[]A\A]A^A_
u+E1
t68H
t68H
t98H
t}SI
8A;9}
AWAVAUATI
'|	M
[]A\A]A^A_
@HcG
@HcG
AVATSH
[A\A^]
ffff.
AUATI
[]A\A]
ATUH
=Z	(
[]A\
ffff.
AVAUE1
ATUI
jpPH
[]A\A]A^
fffffff
fffff.
tkATUI
[]A\
wEH=X
(wY1
whH=
mAWI
AVAUL
ATUSH
t$0H
T$8L
L$(H
L$ H
L$ L
L$(L
T$(H
L$ H
L$ L
|$0I
T$(H
L$ L
H9\$
[]A\A]A^A_
H9T$
L$ t
t$0L
T$8H
L$(L
T$8L
ATUI
[]A\
ATUI
[]A\
fffff.
ATUH
[]A\
ATUH
[]A\
AWAVAUATUSH
\$ I
D$@L
D$HL
\$8L
L$0H
L$(H
L$(L
L$0L
\$8L
D$8L
\$0L
L$(H
L$(L
\$0L
t	I9
|$pH
D$pH
T$xH
t$pI
[]A\A]A^A_
t$@L
D$HL
\$8L
L$0L
\$8L
D$HH
|$pH)
T$xH
t$pI
|$pL
D$pH
T$xH
t$pI
|$pI
l$PH
D$PH
T$XH
t$PI
T$xH
t$pI
|$PH9
|$pI
|$pI
|$pI
|$PH
AWAVI
AUATI
\$ I
<$L9
[]A\A]A^A_
\$ H
\$ H
fffff.
[]A\
ffffff.
AWAVL
AUATI
[]A\A]A^A_
T$CH
@0H9
ffff.
AUATI
D$H1
:u	H9
l$ I
T$ H
D$ L9
D$0H
D$(H
t$HdH34%(
X[]A\A]
D$0H
T$8H
fffff.
AVAUATUH
D$81
\$8dH3
@[]A\A]A^
[]A\
ATUSH
[]A\
AWAVAUATUSH
T$0dH
H+3H
D$8H
H9D$0
D$(Lcl$$H
D$(I
<.f.
H9\$
D$8H
D$0E
D$@H
D$(H
|$$1
T$ H
HcL$ 1
|$HH
$H9D$H
D$XH
L$8H
[]A\A]A^A_
D$PH
D$PH
t$$H
D$PH
D$PH
t$(H
D$XI
|$HH
D$`H
T$hH
t$`I
|$`H9
D$XH
\$8H
t$8L
|$PH
T$PH
|$`H
fffff.
AWAVI
AUATUSH
D$ H
<	v	
D$@L
t$`L
|$@H
|$PK
t$<L
|$PH
\$`L
t$PH
|$`H
dH3<%(
[]A\A]A^A_
tu!H
41@849
T$<t
D$	<l
l$ H
t$(H
H;|$
d$pH
T$xH
t$pI
|$pL9
|$pI
|$PH
|$@H
|$ H
|$`H
AWAVAUATI
"wTH
C#<r
<su0H
[]A\A]A^A_
HcD$`
|$`H
T$`H
|$`H
HcD$`
C	<e
|$`H
T$`H
|$`H
T$`L
T$hH
T$pI9
l$hH
\$`H9
l$`H
|$`H
T$`H
|$`H
|$`H
T$`H
|$`H
|$`H
T$`H
|$`H
t$>H
|$`L
T$`H
|$`H
T$>E1
|$`H
D$`H
|$`H
T$`H
|$`H
t$>H
|$`L
T$`H
|$`H
T$>E1
C!<t
|$`H
T$`H
|$`H
\$`H
d$`H
|$`H
T$`H
|$`H
|$@H
D$@H
|$@H
|$`H
T$`H
|$`H
|$`H
T$`H
|$`H
|$`H
T$`H
|$`H
|$`H
T$`H
|$`H
|$`H
T$`L
T$hH
T$pI9
l$hH
\$`H9
l$`H
T$`L
T$hH
T$pI9
l$hH
\$`H9
l$`H
E0H9
|$`H
HcD$`
|$`H
HcD$`
|$`H
T$`H
|$`H
T$`H
D$hH)
l$hH
\$`H9
l$`H
t$>H
|$`L
T$`H
|$`H
t$>H)
|$PL
D$PH
|$PH
D$>f
|$PH
t$`H
D$PI
D$`H
D$`H
T$hH)
|$`H
T$`H
|$`H
|$`H
T$`H
|$`H
D$`I
|$`H
T$`H
|$`H
|$`H
T$`H
|$`H
D$hH
l$`H9
D$(H
D$ I
{(H;{0
H9l$
|$`H
H;|$
D$ H
|$(H
H;D$ 
|$`H
u HcD$`
|$`H
T$`H
|$`H
|$`H
T$`H
|$`H
|$PH
T$PH
|$PH
T$`L
D$`H
T$hH)
d$hH
l$`I9
|$`H
|$`H
AWAVI
AUATUSH
|$HH
[]A\A]A^A_
=t	H
@0L9
l$0H
C0H9
CpH9
CPH9
C0H9
AUATL
[]A\A]
AWAVAUATSH
dH34%(
[A\A]A^A_]
AUATI
dH3<%(
[]A\A]
D$ H
AUATI
dH3<%(
[]A\A]
D$ H
AWAVH
AUATUSH
H9D$
H9D$
[]A\A]A^A_
H9D$
;H9|$
AWAVAUATUSH
|$01
[]A\A]A^A_
vb'vb'v
<$H9
r0H9
\$(H
D$ H
|$0H
\$ H
L$ H
L$(H
AWAVAUATI
 t f
[]A\A]A^A_
AWAVI
AUATUSH
|5 L
[]A\A]A^A_
AWAVH
AUATI
[]A\A]A^A_
u$E1
AWAVI
AUATUSH
F0H)
C0H9
[]A\A]A^A_
u8E1
AWAVL
AUATUSH
\$(I
t$ L
uHI)
[]A\A]A^A_
[]A\A]A^A_
AWAVH
AUATH
[]A\A]A^A_
H9\$
[]A\A]A^A_
AWAVH
AUATI
N H9
N@H9
N`H9
H0H9
HPH9
HpH9
FpH9
FPH9
F0H9
[]A\A]A^A_
V0H9
VPH9
VpH9
AWAVAUATUSH
4	H9
K H9
H(L9
F0H)
C0H9
[]A\A]A^A_
V0H9
AWAVAUATUSH
4	H9
[]A\A]A^A_
AWAVH
AUATUSH
|$(I
|$ H
[]A\A]A^A_
AWAVAUATUSH
trI9
@0H9
[]A\A]A^A_
[]A\A]A^A_
fffff.
fffff.
ATUI
[]A\
ATUI
$wPI
[]A\
fffff.
AUATI
D$(1
L$(dH3
8[]A\A]
ATUH
@PH9
[]A\
ATUSH
[]A\
AWAVAUATI
[]A\A]A^A_
D$ H
fffff.
@PH9
ATUSH
[]A\
AUATI
[]A\A]
D$ H
AVAUI
ATUA
[]A\A]A^
AWAVI
AUATI
[]A\A]A^A_
D$ H
fff.
AUATI
[]A\A]
ATUH
[]A\
AVAUA
ATUH
[]A\A]A^
fff.
ATUSH
[]A\
ATUS
[]A\
AVAU
ATUI
[]A\A]A^
AWAVAUATI
\$0dH
T$0H
t$0H
l$PH
T$X1
|$PH
|$0H
[]A\A]A^A_
|$ H
|$ M
l$pH
|$PH
|$0H
AWAVAUATUSH
(H9,$
l$ H
D$ H
\$@H
|$@H9
T$(H
t$ H
|$ H9
[]A\A]A^A_
\$`H
T$`H
|$`H9
|$ H
AVAUATUSH
N8dH
@PH9
\$ H
[]A\A]A^
l$0H
fffff.
AWAVAUATUSH
t$,H
D$H1
L$HdH3
X[]A\A]A^A_
t$0I+
D$8H
T$0H9
t$,H
|$ H
H+\$
H+\$
|$0H
AWAVM
AUATI
H+0H
t$ L
l$@L
D$@H
D$@I
D$HI
D$@H
D$HH
D$@H
D$HH
l$ H
D$(H
|$ H
[]A\A]A^A_
D$(H
l$ H9
(H9,$
l$pH
D$pH
T$xH
t$pH
|$pH9
|$pH
|$ H
AWAVAUATSH
[A\A]A^A_]
AWAVAUATSH
[A\A]A^A_]
fffff.
AWAVAUATI
PPH+PHL
[A\A]A^A_]
XHL9
t7f.
AWAVAUATI
L$ H
t$`H
D$hH
D$`H
d$pH+0H
8:t5
l$pH
\$xH
D$ H
|$pH
D$(H
[]A\A]A^A_
D$@tpH
D$XH
T$PH
L$HH
D$XH
T$PH
T$HH
|$@H
T$HH
|$8H
T$@H
|$0H
T$8H
|$ H
T$0H
T$ H
D$ tmH
D$0tRH
D$@H
T$8H
D$@H
|$pH
D$(H
AWAVI
AUATI
D$X1
t$XdH34%(
h[]A\A]A^A_
T$PH
L$HL
D$@H
t$8H
L$0H
T$(H
D$ L
L$HL
D$@H
t$8H
L$0H
T$(H
D$ L
D$8H
t$0H
L$(H
T$ H
D$8H
t$0H
L$(H
T$ H
t$0H
L$(H
T$ H
t$0H
L$(H
T$ H
L$(H
T$ H
L$(H
T$ H
T$ H
T$ H
T$PH
D$ tRH
D$0H
T$(H
D$0H
|$PH
AWAVI
AUAT
|$pH
t$`L
l$HL
d$PH
T$ H
dH34%(
[]A\A]A^A_
T$pH
D$XH
t$PH
L$HH
T$@H
D$8L
\$0L
T$(L
L$ L
D$XH
t$PH
L$HH
T$@H
D$8L
\$0L
T$(L
t$HH
L$@H
T$8H
D$0L
\$(L
t$HH
L$@H
T$8H
D$0L
\$(L
T$ H
L$@H
T$8H
D$0L
\$(L
L$@H
T$8H
D$0L
\$(L
T$ H
T$8H
D$0L
\$(L
T$8H
D$0L
\$(L
T$ H
D$0L
\$(L
D$0L
\$(L
T$ H
\$(L
\$(L
T$ L
T$ L
T$pH
D$ L
D$(tmH
D$0tRH
D$@H
T$8H
D$@H
|$pH
fff.
ATUH
[]A\
fff.
AUATI
[]A\A]
AWAVI
AUATUSH
t$ H
[]A\A]A^A_
D$ H
D$(L
HH9\$
l$0H
D$0H
\$pH
T$pH
|$pH9
T$8H
t$0H
|$0H9
D$(H
\$(H
\$PH
|$PH9
D$(H
D$(H
|$(H
|$0H
AWAVAUATI
[]A\A]A^A_
l$ I
D$ H
\$@H
T$(H
t$ H
|$ H9
|$ H
AWAVI
AUATI
[]A\A]A^A_
AXAYu
fff.
ATUH
[]A\
fffff.
AVAUI
ATUH
[]A\A]A^
fff.
AVAUI
ATUH
[]A\A]A^
fff.
AWAVAUATI
@PH9
[A\A]A^A_]
(M9f Y^
_AXH
AWAVAUATI
D$81
=t%H
t^H9
|$8dH3<%(
H[]A\A]A^A_
T$ M
<$H9<$t
CXH9
CXH9
AWAVAUATUSH
[]A\A]A^A_
AWAVH
fffffff
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
AUATL
[]A\A]
[]A\A]
<$I9
AWAVAUATSH
dH34%(
[A\A]A^A_]
AWAVAUATI
D$81
>/t:L)
D$ H
T$8dH3
H[]A\A]A^A_
D$ H
T$(H
AWAVAUATSH
dH34%(
[A\A]A^A_]
AWAVH
AUATI
d#(t
[]A\A]A^A_
fffffff
AVAUATUSH
[]A\A]A^
[]A\A]A^
fff.
ffff.
ATUA
[]A\
ATUI
[]A\
t%SH
fff.
fff.
fff.
AVAUI
ATUI
[]A\A]A^
ffff.
AVAUI
ATUI
[]A\A]A^
AUATI
@PH9
[]A\A]
AWAVI
AUATI
[]A\A]A^A_
|$ L
H+(H
|$ L
|$ H
|$ I
|$ H
|$ I
|$ I
fff.
fffff.
AWAVAUATUSH
o8dH
D$(1
|$(dH3<%(
8[]A\A]A^A_
|$ L
|$ H
fff.
AWAVAUATUSH
|$0H
D$0tNH
\$PH
t$0H
|$PH9
t$0H
l$pH
T$8H
T$xH
t$pH
|$pH9
|$0I
[]A\A]A^A_
D$(M
T$(L
H+t$0L
d$8L
d$0I
T$(H
|$0I
|$pH
ATUSH
[([]A\
fff.
ATUH
@PH9
\$ H
[]A\
d$0H
AWAVAUATUSH
l$`H
l$@H
T$`H
t$hH
|$`L
|$`H
[]A\A]A^A_
|$(H
D$(H
D$ H
D$ H
D$(H
H9T$(v
T$VH+
t$TH
D$ H
|$`H
@PH9
\$0H
|$ H
L$(H
D$(H
D$(H
D$(1
D$(H
\$(H
\$BH
D$(H
|$(Hc
t$`H
@PH9
L$(H
D$(L
D$ H
|$`H
D$(H
|$(H
|$0H
D$(H
D$(H
AWAVAUATUSH
D$(1
\$(dH3
8[]A\A]A^A_
H+D$
AUATUSH
@PH9
[]A\A]
AWAVI
AUATUSH
D$`H
|$hH
\$`M
|$`H
D$hH
\$`H
T$PH
L$HL
D$@H
t$8H
L$0H
T$(H
D$ L
L$HL
D$@H
t$8H
L$0H
T$(H
D$ L
D$8H
t$0H
L$(H
T$ H
D$8H
t$0H
L$(H
T$ H
t$0H
L$(H
T$ H
t$0H
L$(H
T$ H
L$(H
T$ H
L$(H
T$ H
T$ H
T$ H
T$PH
D$@H
t$8H
L$0H
T$(H
D$ L
D$@H
t$8H
L$0H
T$(H
D$ L
t$0H
L$(H
T$ H
t$0H
L$(H
T$ H
L$(H
T$ H
L$(H
T$ H
T$ H
T$ H
|$`H
[]A\A]A^A_
T$PH
D$@H
t$8H
L$0H
D$(H
T$ L
D$@H
t$8H
L$0H
D$(H
T$ L
t$0H
L$(H
D$ H
t$0H
L$(H
D$ H
t$0H
L$(H
D$ H
t$0H
L$(H
D$ H
t$(H
L$ H
t$(H
L$ H
T$PH
t$(tpH
L$@H
D$8H
t$0H
L$@H
D$8H
D$0H
|$(H
D$0H
|$ H
D$(H
D$ H
T$PH
D$ tRH
D$0H
L$(H
D$0H
T$PH
D$ tRH
D$0H
L$(H
D$0H
T$PH
T$PH
D$(H
T$ H
D$(H
T$PH
$tGL
T$PH
D$(H
T$ H
D$(H
T$PH
$tGL
T$PH
|$PH
|$PH
|$`H
AWAVAUATUSH
T$xH
t$pH
|$pI
T$xH
t$pH
|$pI
T$xH
t$pH
|$pI
dH34%(
[]A\A]A^A_
@PH9
|$pI
T$`H
D$PH
t$HH
L$@H
T$8H
D$0L
T$(L
L$ L
D$PH
t$HH
L$@H
T$8H
D$0L
T$(L
t$@H
L$8H
T$0H
D$(L
t$@H
L$8H
T$0H
D$(L
T$ H
L$8H
T$0H
D$(L
L$8H
T$0H
D$(L
T$ H
T$0H
D$(L
T$0H
D$(L
T$ H
D$(L
D$(L
T$ H
T$ L
H9D$
T$`H
L$XL
D$PH
t$HH
L$@H
T$8H
D$0L
\$(L
T$ L
L$XL
D$PH
t$HH
L$@H
T$8H
D$0L
\$(L
D$HH
t$@H
L$8H
T$0H
D$(L
D$HH
t$@H
L$8H
T$0H
D$(L
\$ L
t$@H
L$8H
T$0H
D$(L
t$@H
L$8H
T$0H
D$(L
\$ H
L$8H
T$0H
D$(L
L$8H
T$0H
D$(L
\$ H
T$0H
D$(L
T$0H
D$(L
\$ H
D$(L
D$(L
\$ H
\$ L
T$xH
t$pH
|$pI
T$`H
D$PH
t$HH
L$@H
D$8L
L$0L
D$PH
t$HH
L$@H
D$8L
t$@H
L$8H
t$@H
L$8H
D$0H
|$(H
t$@H
L$8H
t$@H
L$8H
D$0H
|$ H
t$8H
L$0H
t$8H
L$0H
D$(H
L$(H
L$(H
D$ H
D$ H
T$`H
L$XH
D$PH
T$HH
t$@H
L$XH
D$PH
T$HH
D$HH
D$HH
T$@H
|$8H
D$HH
D$HH
T$@H
|$0H
D$@H
D$@H
T$8H
|$(H
D$8H
D$8H
T$0H
|$ H
D$0H
D$0H
T$(H
T$ H
H9p 
F I+F
G I+G
T$`H
D$ L
D$0H
T$(H
D$0H
T$`H
D$ H
D$0tRH
D$@H
T$8H
D$@H
T$`H
D$ L
D$0H
T$(H
D$0H
T$`H
D$ H
D$0tRH
D$@H
T$8H
D$@H
|$`H
|$pI
fff.
AWAVAUATUSH
T$XL
L$PL
D$HH
t$@H
L$8H
D$0H
T$(L
\$ L
T$XL
L$PL
D$HH
t$@H
L$8H
D$0H
T$(L
L$HL
D$@H
t$8H
L$0H
D$(H
L$HL
D$@H
t$8H
L$0H
D$(H
T$ L
D$@H
t$8H
L$0H
D$(H
D$@H
t$8H
L$0H
D$(H
T$ L
t$8H
L$0H
D$(H
t$8H
L$0H
D$(H
T$ H
L$0H
D$(H
L$0H
D$(H
T$ H
D$(H
D$(H
T$ H
T$ H
T$XL
L$PL
D$HH
t$@H
L$8H
D$0H
T$(L
T$XL
L$PL
D$HH
t$@H
L$8H
D$0H
T$(L
L$HL
D$@H
t$8H
L$0H
D$(H
L$HL
D$@H
t$8H
L$0H
D$(H
D$@H
t$8H
L$0H
D$(H
D$@H
t$8H
L$0H
D$(H
t$8H
L$0H
D$(H
t$8H
L$0H
D$(H
L$0H
D$(H
L$0H
D$(H
D$(H
D$(H
L$XH
D$PH
T$HH
t$@H
L$XH
D$PH
T$HH
D$HH
D$HH
T$@H
|$8H
D$HH
D$HH
T$@H
|$0H
D$@H
D$@H
T$8H
|$(H
D$8H
D$8H
T$0H
D$0H
D$0H
T$(H
L$xH
D$|H
D$HtpH
D$`H
T$XH
L$PH
D$`H
T$XH
T$PH
|$HH
T$PH
|$@H
T$HH
|$8H
T$@H
|$0H
T$8H
|$(H
T$0H
D$ H
[]A\A]A^A_
D$PtpH
D$hH
T$`H
L$XH
D$hH
T$`H
T$XH
|$PH
T$XH
|$HH
T$PH
|$@H
T$HH
|$8H
T$@H
|$0H
T$8H
D$(H
T$ H
D$(H
D$(H
D$(H
D$(H
D$(H
D$0H
T$(H
D$0H
D$8H
T$0H
D$8H
|$(H
T$ H
AWAVAUATUSH
dH34%(
[]A\A]A^A_
ATUH
[]A\
AUATI
[]A\A]
AVAUI
ATUH
[]A\A]A^
AWAVI
AUATUSH
L$(dH
T$pH
L$XL
D$PH
t$HH
L$@H
T$8H
D$0L
\$ L
L$XL
D$PH
t$HH
L$@H
T$8H
D$0L
\$ L
D$HH
t$@H
L$8H
T$0H
D$ L
D$HH
t$@H
L$8H
T$0H
D$ L
t$@H
L$8H
T$0H
D$ L
t$@H
L$8H
T$0H
D$ L
L$8H
T$0H
D$ L
L$8H
T$0H
D$ L
T$0H
D$ L
T$0H
D$ L
D$ L
D$ L
HL9d$ 
D$(H
|$ I
L9|$
T$pH
t$PH
L$HH
T$@H
D$8L
D$0L
t$PH
L$HH
T$@H
D$8H
L$@H
T$8H
L$@H
T$8H
D$0H
|$ H
L$@H
T$8H
L$@H
T$8H
D$0H
L$8H
T$0H
L$8H
T$0H
D$ H
T$ H
T$ H
41@849
T$pH
L$XH
D$PH
T$HH
t$@H
L$XH
D$PH
T$HH
D$HH
D$HH
T$@H
|$8H
D$HH
D$HH
T$@H
|$0H
D$@H
D$@H
T$8H
|$ H
D$8H
D$8H
T$0H
D$0H
D$0H
T$ H
T$pH
D$HtpH
D$`H
T$XH
L$PH
D$`H
T$XH
T$PH
|$HH
T$PH
|$@H
T$HH
|$8H
T$@H
|$0H
T$8H
T$0H
T$pH
D$HtpH
D$`H
T$XH
L$PH
D$`H
T$XH
T$PH
|$HH
T$PH
|$@H
T$HH
|$8H
T$@H
|$0H
T$8H
T$0H
D$(H
H+D$
T$pH
D$PtpH
D$hH
T$`H
L$XH
D$hH
T$`H
T$XH
|$PH
T$XH
|$HH
T$PH
|$@H
T$HH
|$8H
T$@H
|$0H
T$8H
t$(H
dH34%(
[]A\A]A^A_
T$pH
D$8tmH
D$@tRH
D$PH
L$HH
D$PH
T$pH
D$8tfL
D$HH
T$@H
D$HH
T$pH
D$ H
T$pH
D$ H
T$pH
D$ tmH
D$0tRH
D$@H
T$8H
D$@H
T$pH
D$0tcH
D$8tHL
D$@H
T$pH
D$0twH
D$8tHL
D$@H
T$pH
D$ tHL
D$0H
T$pH
D$0H
D$@tRH
T$PH
D$HH
T$PH
T$pH
D$ tHL
D$0H
|$pH
|$pH
AWAVAUATUSH
[]A\A]A^A_
AWAVAUATSH
dH34%(
[A\A]A^A_]
AWAVAUATI
D$81
>/t:L)
D$ H
T$8dH3
H[]A\A]A^A_
D$ H
T$(H
AWAVAUATUSH
D$H1
t$HdH34%(
X[]A\A]A^A_
T$@H
L$8L
D$0H
t$(H
L$ H
L$8L
D$0H
t$(H
L$ H
D$(H
t$ H
D$(H
t$ H
t$ H
t$ H
T$@H
D$ H
D$ H
AWAVE1
AUATI
<0H9
x fA
[]A\A]A^A_
ATUI
[]A\
ATUH
]XI9
C0H9
]@I9
C0H9
](I9
C0H9
C0H9
[]A\
fff.
AVAUL
ATUH
wH[L
]A\A]A^
[]A\A]A^
fff.
AVAUATUSH
t#H9k
]A\A]A^
AWAVI
AUATH
|$PL
|$PH
[]A\A]A^A_
AUATI
C0H9
[]A\A]
fffff.
fff.
fff.
fff.
fff.
AWAVH
W(AUATI
[]A\A]A^A_
l$ H
|$ I
|$`H
|$`L9
|$@H
|$@L9
|$ I
AWAVI
AUATH
|$PL
|$PH
[]A\A]A^A_
AUATI
C0H9
[]A\A]
fff.
fff.
AUATUSH
[]A\A]
AUATUSH
[]A\A]
fffff.
t7SH
fff.
fffff.
G0H;G(t
zDuB
AVAUATUSH
@ H9
[]A\A]A^
zDuB
AUATUSH
@`H9
[]A\A]
fff.
AWAVAUATUSH
([]A\A]A^A_
{xH9
AWAVAUATI
D$8I9
D$PL
l$`L
D$pH
HL9|$8
D$xL
t$pH
D$PL9
D$`H
D$XI
I;T$
l$PH
C0H9
|$pL9
|$PL9
H9,$
D,$A
l$PH
w H)
|$ H
D$pL9
D$`H
T$hH
<6H9
t$(H
t$0H
t$(H
QBI9
D$(I
|$@H
\$HI
S0H9
|$@H
\$HH
D$(I
D$0I
D$(H
dH34%(
[]A\A]A^A_
C0H9
D$ H
|$pH
|$PH
D$(H
ATUH
\$ dH
D$H1
D$ H
D$ H
D$0H
D$(H9
|$ H
D$HdH3
P[]A\
L$0L
|$ H
ATUH
\$ dH
D$H1
D$ H
D$ H
D$0H
D$(H9
|$ H
D$HdH3
P[]A\
L$0L
|$ H
ATUH
\$ dH
D$H1
D$ H
D$ H
D$0H
D$(H9
|$ H
D$HdH3
P[]A\
L$0L
|$ H
ATUH
\$ dH
D$H1
D$ H
D$ H
D$0H
D$(H9
|$ H
D$HdH3
P[]A\
L$0L
|$ H
ATUI
 []A\
ATUI
 []A\
ATUSH
C0H9
[]A\
AWAVAUATUSH
D$X1
\$0H
L$0H
|$0H
|$@H
|$8H
|$ H
T$0H9
T$@H
T$8H
T$0H
T$ H
|$0H
D$XdH3
h[]A\A]A^A_
\$0H
D$0H
L$0H
L$@H
L$8H
t$ H
D$0H9
D$@H
D$8H
D$0H
D$ H
|$0H
B0I)
<	H9
C0H9
L$ L
L$@L
t$ H
|$(H
t$@H
|$HH
L$@L
L$ L
D$ H
T$(H
D$@H
T$HH
AWAVAUATUSH
D$h1
\$@L
|$@H
L$@L
L$PL
t$ H
L$HL
|$ H
L$ L
L$0L
T$@L9
T$PH
T$HH
T$@H
T$ H9
T$0H
T$(f
|$@H
D$hdH3
x[]A\A]A^A_
4$H+E
\$@L
D$@H
L$@L
L$PL
t$ H
L$HL
D$ H
L$ L
L$0L
D$@L9
D$PH
D$HH
D$@H
D$ H9
D$0H
D$(f
|$@H
B0I)
C0H9
L$0L
L$PL
|$ H
L$0L
T$8L
L$PL
T$XL
L$PL
|$ H
L$0L
L$0L
T$8L
L$PL
T$XL
fffff.
fff.
ATUI
tWxHI
[]A\A]A^
]A\A]A^
ATUH
[]A\
[]A\
[]A\
ATUI
tWxHI
[]A\A]A^
]A\A]A^
ATUH
[]A\
[]A\
[]A\
ATUH
[]A\
[]A\
ATUI
[]A\
[]A\
AWAVAUATI
[]A\A]A^A_
D$ H
fff.
AVAUATUH
[]A\A]A^
D$ H
AWAVI
AUATI
[]A\A]A^A_
L+ H
fff.
AWAVI
AUATI
D$81
D$ H
L$(H
T$(H
D$ L
T$(H
D$8dH3
H[]A\A]A^A_
L$(E1
D$ H
ATUH
s []A\
AVAUATUSH
[]A\A]A^
M(L)
T$(H
D$ H
T$(H
D$ H
T$(H
D$ H
T$(H
D$ H
T$(H
D$ H
T$(H
D$ H
D$ H
P H;
B(H;
fffff.
ffffff.
AVAUA
ATUI
[]A\A]A^
fffff.
AWAVAUATUSH
[]A\A]A^A_
AUATUSH
[]A\A]
AWAVAUATUSH
T$ H
[]A\A]A^A_
D$ H
D$(L
l$0H
D$0H
\$PH
|$PH9
D$ H
T$8H
t$0H
|$0H9
D$(H
\$(H
\$pH
T$pH
|$pH9
D$ H
D$ H
D$(H
|$(H
D$(H
D$(H
|$0H
|$(H
D$(H
D$(H
ATUSH
[]A\
fff.
ffff.
fff.
fff.
fff.
fff.
ATUSH
[]A\
AVAU
ATUI
[]A\A]A^
fff.
AWAVAUATUSH
[]A\A]A^A_
AVAUATUSH
[]A\A]A^
fff.
AWAVAUATUSH
T$HH
D$@H
D$@H
t$@H
|$HH
T$XH
D$PH
t$@H
|$HL
L$@H
T$HH
D$PH
L$XH
T$HH
D$@H
D$@H
t$@H
|$HH
T$XH
D$PH
t$@H
|$HL
L$@H
T$HH
D$PH
L$XH
|$(L
\$ H
S H9
d$ M
\$(L
t$ H
[]A\A]A^A_
tbH;k A
d$ H
H;\$(t
T$X1
T$X1
D$PH
t$ H
D$PH
ffffff.
fff.
AWAVAUATI
H+L$
H+D$
H+L$
H+D$
H+D$
\$@H
T$HH
t$@H
|$@H
H+D$
H+D$
[]A\A]A^A_
H9D$
t$ E1
T$(H
t$ H
|$ I
l$`I
T$hH
t$`H
|$`L9
|$@H
|$ I
|$`I
AUATUSH
T$@1
[]A\A]
l$`H
d$ I
D$ H
T$ L
l$@L
t$ H
D$@H
l$`H
T$HH
t$@H
|$@L9
|$ I
D$ H
|$ I
|$@I
ATUSH
[]A\
AWAVH
AUATI
dH3<%(
([]A\A]A^A_
I+D$
I+D$
<$H;|$
t/ATI
[]A\
5_S%
AWAVI
AUATUSH
L9l$
F@I9EP
[]A\A]A^A_
[]A\A]A^A_
AUATI
t%f.
[]A\A]
AWAVH
AUATI
t$(1
H9,$tbH
t$(dH34%(
E@uaH
8[]A\A]A^A_
fffff.
ATUH
[]A\
$[]A\
AWAVAUATI
I;]0
I;]8
I;D$
I9E@
I;,$
I;l$
[]A\A]A^A_
tAATI
[]A\
AWAVAUATUSH
D$(1
<$M9
H9\$
} I9
D$ I
$H9D$
L$(dH3
8[]A\A]A^A_
h M9
t$ I
T$ I
AWAVH
AUATUSH
|$(I
|$ H
[]A\A]A^A_
AWAVAUATUSH
trI9
@0H9
[]A\A]A^A_
[]A\A]A^A_
AUATI
[]A\A]
ATUI
[]A\
AWAVAUATUSH
CpH9
[]A\A]A^A_
l$`D
D$`H
s8H9
|$pXZH9
t$0H
s8H9
D$,H
L$ H
L$DQ
t$8AVAW
t$PL
l$@H
D$@H
s8H9
|$@H9
D$,H
s8H9
T$(RAW
|$`H
|$@H
fff.
fffff.
AWAVI
AUATL
-e5%
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
5[2%
|$PH
-50%
|$PH
={1%
@0H9
AWAVI
AUATUSH
|$ I
D$HH
D$pH
D$(H
H;|$
H9\$
D$HH
\$ H
[]A\A]A^A_
H9\$
H9\$
H;|$
D$ H
D$ H
n@M+n8H
|$PL
L$@H
L$@H
|$(H
D$XH
T$XH
t$PL
H;|$
H9D$x
l$(H
T$XH
t$PL
|$pH
|$pH;|$8H
|$PI
H9\$
H9\$
|$0L
H;|$
H9\$
L$HH
T$(H
|$pH
|$PI
AWAVL
AUATUS
D$H1
d$ E1
T$(H
t$ H
|$ I
L$HdH3
X[]A\A]A^A_
|$ I
F0AUATUH
[]A\A]A^
AVAUI
ATUH
D$81
H+D$
H+D$
H+L$
D$ I
L$8dH3
@[]A\A]A^
H+L$
D$ H
T$(I
ffffff.
fffff.
fffff.
HhH+H`1
ffffff.
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATA
t;A9
}6Lc
[]A\A]A^A_
[]A\A]A^A_
A:4	
IcN@I
v8D:
IcN@I
v8D8
[]A\A]A^A_
ffff.
ATU1
AWAVI
AUATI
[]A\A]A^A_
fff.
ATUI
[]A\
ATUI
$wOH
[]A\
AUATI
dH34%(
[]A\A]
AVAUATU
[]A\A]A^
ffff.
AWAVI
AUATUSH
[]A\A]A^A_
d$ H
\$@H
T$(H
t$ H
<$L9
|$ I
d$ H
\$@H
T$(H
t$ H
<$L9
|$ I
|$ I
\$(1
D$(dH3
AUATUSH
[]A\A]
D$(1
D$(dH3
AVAUI
ATUI
dH3<%(
[]A\A]A^
AUAT1
USE1
tzL9
47@84
tII9
[]A\A]
AVAUI
ATUI
shrpf
[]A\A]A^
ATUSH
l$ 1
[]A\
D$0H
l$ 1
l$ 1
l$ 1
l$ 1
l$ 1
AWAVA
AUATA
[]A\A]A^A_
D$0H
tGI;Q
ffff.
fffff.
AWAVI
AUAT1
[]A\A]A^A_
D$0L
t$PH
T$8H
t$0I
|$0L
t$PIc
T$XH
t$PH
|$PI
\$PH
t$PH
|$XL
L$PL
T$XH
L$`H
T$hH
\$ H
\$ H
D$0Ic
t$PH
T$8H
t$0I
|$0L
|$0H
|$PI
|$0H
fff.
AWAVAUATI
t$,L
t$0L
|$0H
T$,H
l$pH
T$xH
t$pH
|$pH
l$0Hc
t$HH
|$HL
D$0H
L$pH
\$xH
t$pH
|$xH
\$@L
D$@H
\$@H
\$0H
[]A\A]A^A_
T$,L
l$PH
l$pL
T$XH
t$PH
|$PL9
U0H)
D$0H
D$0H
|$PI
|$pH
AVAUI
ATUS
\$0I
l$(H
tt[1
]A\A]A^
AWAVI
AUAT1
D$ dH
|$0H
D$0H
\$8H
dH34%(
[]A\A]A^A_
|$ E1
t$(H
T$hH
t$`H
|$`L9
t$(H
T$HH
t$@H
|$@L9
t$(H
|$`I
|$8H
|$ E1
t$(H
|$@I
AWAVAUATMc
D$X1
L$0H
t$HH
T$@E
Icu@I
}8D:
Ic}@M
E8E:
l$PH
|$PH
D$@E
D$HH
D$PH
H9D$
D$XdH3
h[]A\A]A^A_
xbHc
u8D:
D$HI
l$PH
D$PI
D$PH
D$PH
T$(H
L9d$
D$ H
D$ H
H9D$(
D$8H
D$(H
D$(H
D$8H
L$0H
T$@E
t$HI
T$HH
t$@H
L$0H
t$HE
T$HH
t$@H
AWAVAUATUSH
t$(H
L$ 1
D$PH
D$hH
D$pH
D$0H
\$PH
T$hH
D$`H
l$@A
d$@H
T$ H
t$0H
l$8L
|$(L
|$pH9
T$HL
D$ L
H+0H
[]A\A]A^A_
t$H1
T$HH
l$PH
T$hH
D$`H
D$`H
T$0H
|$pH
ffffff.
AWAVI
AUATI
l$PH
\$pH
l$XL
[]A\A]A^A_
t$0L
D$XH
L$PH9
D$ H
L$ H
D$(I)
l$(L
D$8H
T$0H9
T$0H
D$8I
t$XH
|$P1
t$XH
|$PI9
|$PH
t$8L
l$0M9
t$0M
fffff.
AVAUATUSH
[]A\A]A^
T$PI;T$XH
$t}H
T$PH
t$PH
|$HH
AWAVAUATI
D$xH
\$`H
T$xH
D$pH
[]A\A]A^A_
t$ H
D$@H
\$ L
l$(I9
l$HH
\$@H9
l$@H
l$(H
\$ H9
l$ H
l$`H
T$xH
D$pH
D$pH
AVAUATUH
[]A\A]A^
tkrYUSH
tkrYUSH
tkrYUSH
AWAVAUATUSH
H9D$
([]A\A]A^A_
([]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
AWAVAUATI
tpf.
\$ M
([]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
fffff.
fffff.
fffff.
AUATI
@XH9
C8H9
([]A\A]
t3r!
D$h1
|$ H
D$@H
D$HH
D$XH
D$PH
D$(H
D$PH
D$hdH3
D$PH
u,[H
fff.
u'[H
fff.
fff.
ATUH
[]A\
[]A\
AUATL
[]A\A]
[]A\A]
fffff.
fff.
fffff.
AUATH
D$x1
T$ H
l$PH
\$0H
l$(H
D$PH
D$XH
D$hH
D$`H
D$ H
D$8H
D$`H
D$xdH3
[]A\A]
D$`I
fff.
AWAVAUATI
D$ I
T$8H
D$8H
D$(H
T$ I
T$@I
D$@H
D$0H
T$(I
T$HI
D$HH
t$(H
\$ L9
\$(L
d$ L9
\$ H
[]A\A]A^A_
d$(H
l$ I9
l$@H
\$ L
t$(H
d$ M
AWAVH
wPAUATI
n8I9
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
fff.
AUATI
[]A\A]
AUATI
D$81
t$ H
D$ L
l$(H
D$8dH3
H[]A\A]
|$(H
AUATL
C@H;CH
sP[]A\A]
AWAVAUATI
fffffff
[A\A]A^A_]
I;D$
R(H+P H
(L9e
ATUI
[]A\
AWAVAUATUSH
d$`I
T$`H
L$`H
L$pH
L$hH
|$`I
|$@H
t$8L
[]A\A]A^A_
t$pH
|$`I
|$@H
AUATUSH
[]A\A]
[]A\A]
AWAVH
AUATI
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
ATUI
D$(1
<$H9
D$(dH3
0[]A\
ATUH
UUUUUUU
[]A\
[]A\
ATUH
[]A\
[]A\
fffff.
AVAUATUSL
]A\A]A^
[]A\A]A^
AWAVAUATUSH
H9k r
M9l$
|$ I
[]A\A]A^A_
H9j w
H9h r]H
I9\$
u9M9
AWAVI
AUATI
S H9
[]A\A]A^A_
P H9
tOE1
C I9
]A\A]A^A_
t/ATI
[]A\
GXH9
fffff.
fff.
WPH9
ffff.
fff.
=1|$
AWAV1
AUATI
D$`H
D$pH
L$hI
D$xD
([]A\A]A^A_
fffff.
ATUSH
[]A\
ATUSH
[]A\
ATUH
~qHc
[]A\
4$H9
ATUSH
[]A\A]
[]A\A]
AUATL
[]A\A]
[]A\A]
fff.
l$@H
l$@H
ATUSH
[]A\A]
[]A\A]
AWAVAUATI
H)]XI9
H;uP
[]A\A]A^A_
L)e8H9
H)UX
](L)
fffff.
AWAVL
AUATUSH
l$`H
l$`1
dH3<%(
[]A\A]A^A_
k8L9<$I
T$PH
D$0tpH
D$HH
T$@H
L$8H
D$HH
T$@H
T$8H
|$0H
T$8H
|$(H
T$0H
|$ H
T$(H
T$ H
{8tO
l$`H
{8tL
{8uXL
T$PH
D$ tRH
D$0H
T$(H
D$0H
|$PH
AWAVA
AUATI
_0dH
D$H1
t$HdH34%(
X[]A\A]A^A_
T$@H
L$8L
D$0H
t$(H
L$ H
L$8L
D$0H
t$(H
L$ H
D$(H
t$ H
D$(H
t$ H
t$ H
t$ H
T$@H
D$ H
D$ H
|$@H
fff.
ffff.
AUATI
[]A\A]
fff.
fffff.
AUATUSH
[]A\A]
fff.
F(H+F H
ATUI
D$(I+D$ H
[]A\
D$(H
I+D$ I
t$XH
AVAUH
ATUI
[]A\A]A^
AWAVI
AUATUSH
g dH
D$h1
l$@L
|$@H
t$ H
t$@H
T$0H
T$ H
\$@H
L$(L
l$HL
D$8L
t$PH
D$hdH3
x[]A\A]A^A_
|$@H
AWAVAUATI
[]A\A]A^A_
AVAUATUH
D$H1
l$ H
t$ H
T$0L
L$(H
t$ H
T$0L
L$(H
D$HdH3
P[]A\A]A^
AWAVAUATUSH
T$@L
l$ L
t$ H
L$(H
T$0H
|$ H
[]A\A]A^A_
`\A9
l$@H
l$@H
l$@H
l$@H
l$@H
l$@H
l$@H
|$ H
fffff.
AWAVAUATUSH
J(H+J H
t<PH
L<XH
L<XH)
t<PH
t$PH
[]A\A]A^A_
t$0H
T$ H
|$0H
t$8H
D$(L
|$@M
AUATI
[]A\A]
[]A\A]
fffff.
AVAUATUSH
S@[]A\A]A^
s(L)
AVAU
t$([H
D$ H
D$HH
D$8H
L$@I
D$0A\A]A^
AWAVI
AUATI
[]A\A]A^A_
[]A\A]A^A_
ATUH
D$H1
t$ H
t$ H
T$0H
L$(H
D$HdH3
P[]A\
tuAWAVI
AUATI
4*H)
([]A\A]A^A_
[]A\A]A^A_
AWAVAUATI
[]A\A]A^A_
s(L)
tkrYUSH
AVAUATUH
[]A\A]A^
fffff.
AUATI
D$ H
D$ H
T$(H
t$ H
|$(H
D$0H
T$8H
[]A\A]
\$@H
D$0H
ffff.
AWAVAUATUSH
\$pH
T$ H
D$(t
\$(H
[]A\A]A^A_
l$ H
\$(H
\$(H
l$0H
T$8H
t$0H
|$0H9
t$PL
T$XH
t$PL
|$PL9
|$(H
|$PI
|$0H
AWAVAUATUSH
T$pH
\$pL
l$ H
T$pH
\$pL
l$ M
t$pH
l$pM
t$@1
D$XH
t$pL
[]A\A]A^A_
|$pH
D$pH
D$0H
|$8H
T$pH
|$8M
D$8M
t$0H
|$8M
l$pM
l$pM
l$@H
D$XH
D$hH
d$pH
|$8H
d$pM
AWAVAUATUSH
[]A\A]A^A_
D$@L
D$ H
L$8H
L$(H
L94$
t$8H
L;d$
|$(H
|$0L
|$@L
l$ H
\$HH
|$HH
fff.
D$(1
D$(dH3
AUATUSH
[]A\A]
AWAVH
NAUATI
\-ht
[]A\A]A^A_
vb'vb'v
ATUI
[]A\
tgSH
fffff.
ATUS
[]A\A]
AWAVI
AUATH
d$0H
D$X1
T$0J
D$ H
D$0L9
D$@H
D$8fD
t$XdH34%(
h[]A\A]A^A_
D$ H
T$(H
D$@H
T$HH
|$0I
AUATUSH
[]A\A]
ffff.
fff.
ATUH
[]A\
ATUH
ATUH
AWAVAUATUSH
D$H1
|$HdH3<%(
X[]A\A]A^A_
<!:u
d$ I
D$ D
D$ L9
D$0H
D$(H
H9D$(
H+D$(
H9D$(
H+D$(
H+D$(
H+D$(H
D$0H
T$8H
|$ I
fffff.
	w71
G	<n
<euHH
nu"H
G>H9
fff.
ffff.
ffffff.
ffff.
ffff.
G	<R
EubH
ATUI
D$(1
T$(dH3
0[]A\
AWAVI
AUATUSH
D$81
D$8dH3
H[]A\A]A^A_
T$0H
t$(H
L$ H
t$(H
L$ H
T$0H
D$(H
T$ H
D$(H
T$ H
T$0H
D$ H
D$ H
T$0H
D$ H
D$ H
T$0H
D$ H
D$ H
T$0H
|$0H
AWAVAUATUSH
D$H1
HL9|$
D$HdH3
X[]A\A]A^A_
H9,$
T$@H
L$0H
T$(H
D$ L
L$0H
T$(H
D$ L
T$ H
T$ H
T$@H
L$0H
T$(H
D$ L
L$0H
T$(H
D$ L
T$ H
T$ H
T$@H
L$8H
T$0H
D$(L
L$ L
L$8H
T$0H
D$(L
L$ L
T$(H
D$ L
T$(H
D$ L
D$ L
D$ L
T$@H
$tlH
D$ H
D$ H
T$@H
$tlH
D$ H
D$ H
T$@H
D$ tRH
D$0H
T$(H
D$0H
|$@H
ATUSH
D$H1
d$pt
T$ H9
T$0H
T$(H
|$ H
T$@H
E0H9
D$HdH3
P[]A\
t$0H
|$8H
|$ H
E0H9
fff.
AUATUSH
D$(1
L$ H
T$ H
D$(dH3
8[]A\A]
fffff.
AWAVI
AUATA
D$81
D$ H9
,w?L
t$8dH34%(
H[]A\A]A^A_
D$ >H
ZYH9
<;uIA
@8t$
d$0H
D$ H
<;tz<=
$<,t%<;t!I
@8t$
47@84
47@84
 t#H
<"t&<\u
\$0H
D$ H
t$ H
|$(H
L$0L
D$ H
D$(H
AWAVAUATI
D$xH
l$pH
D$(1
I9D$
I+D$
L$'H
D$'/H
L$(dH3
8[]A\A]A^A_
I9D$
I+D$
</tM<.
I9D$
I+D$
<$H9|$
fff.
AWAVI
AUATI
L$ dH
D$h1
D$/?
\$@I
|$@H
t$hdH34%(
x[]A\A]A^A_
L$$D
D$&1
\$@uE
L$2I
D$6H
\$@t
d$"H
D$@fE
HcT$
L$@A
T$HH
t$@H
|$@H
L$(1
D$*H
|$@H
AVAUI
ATUH
[]A\A]A^
AWAVH
AUATUSH
|$HH
K H9
F0H)
C0H9
[]A\A]A^A_
fffff.
AWAVAUATL
mw]IcD
[]A\A]A^A_
tkrYUSH
AVAUH
ATUH
[]A\A]A^
[]A\A]A^
AWAVI
AUATUSH
[]A\A]A^A_
fffff.
fffff.
fffff.
fffff.
fff.
fffff.
fffff.
AUATI
l$(H
D$@H
D$XH
\$@H
T$XH
D$PH
[]A\A]
|$ H
D$pH
D$pH
l$@H
T$XH
D$PH
D$PH
fff.
AWAVAUATUSH
C H;C(u
[]A\A]A^A_
fffff.
K0H)
fffff.
AWAVH
wpAUATUSH
K0H)
[]A\A]A^A_
fffff.
AWAVAUATI
USHc
[]A\A]A^A_
ATUH
[]A\
ATUSH
[]A\
AVAUATUSH
 []A\A]A^
fff.
fffff.
AVAUI
ATUSH
[]A\A]A^
AUATI
[]A\A]
fff.
AVAUATUSH
[]A\A]A^
AWAVI
AUATI
l$PH
T$ H
D$(t
\$(H
[]A\A]A^A_
\$(H
\$(H
T$8H
t$0I
|$0I
T$8H
t$0L
|$0H;|$
|$0I
|$(H
AWAVAUATUSH
D$ H
D$`H
D$pH
D$0H
D$xH
D$8H
T$`H
l$`H
L9l$
D$0H
L$ H
T$8H
t$(H
D$@H
l$PH
L$HH
T$@t
L$`H
L$@H
D$@H
D$HH
\$Xf
\$XH
D$@H
D$HH
D$PH
D$HH
D$HH
D$@L
[]A\A]A^A_
L$HL
L$HI
L$@H
D$81
L$0H
T$(H
L$8dH3
L$0H
AWAVAUATUSH
[]A\A]A^A_
fff.
ATUH
[]A\
tAx1H
[]A\
[]A\
ATUH
[]A\
tAx1H
[]A\
[]A\
fff.
ATUI
[]A\
fff.
ATUSH
[]A\
fff.
fff.
fff.
fffff.
ATUH
[]A\
[]A\
[]A\
ATUH
[]A\
[]A\
[]A\
AUATUSH
[]A\A]
fffff.
fff.
AVAUATUH
[]A\A]A^
ATUI
[]A\
AWAVAUATI
[]A\A]A^A_
5:q#
fff.
fff.
AUATUSH
t$0H
D$HH
t$0H
[]A\A]
AWAVA
AUATA
D$HH
D$PH
D$XH
D$hH
l$xH
T$pD
t$@H
[]A\A]A^A_
fff.
D$81
T$(H
D$ H
D$ H
L$(H
T$(H
D$ H
T$(H
D$ t
D$8dH3
T$(H
D$ H
T$(H
D$ t
D$ H
T$(t
T$(H
D$ H
T$(1
D$ H
AWAVM
AUATM
T$<dH
D$h1
D$PAPAWATL
L$`L
D$HH
D$hdH3
x[]A\A]A^A_
T$HH
D$@H
D$@H
t$@H
|$HH
T$XH
D$PH
T$HH
D$@H
D$@H
t$@H
|$HH
T$XH
D$Pt
T$HH
D$@H
D$@H
t$@H
|$HH
T$XH
D$Pt
T$HH
D$@H
D$@H
t$@H
|$HH
T$XH
D$81
T$(H
D$ H
D$8dH3
AVAUATUSH
T$(H
D$ H
T$(H
D$ H
[]A\A]A^
T$(H
D$ H
T$(H
D$ H
AUATH
d$0H
l$0H
[]A\A]
d$@H
l$`I
t$@I
D$`H
T$hH
t$`H
|$`L9
|$@I
|$ H
t$8H
D$ H
L$0H
l$0H
|$ H
t$8H
D$ H
|$ H
t$0H
|$ H
t$8H
D$ H
|$ H
|$`I
|$@I
fffff.
ATUH
D$81
T$(H
D$ H
L$8dH3
@[]A\
AWAVAUATUSH
D$X1
k8I9
t$XdH34%(
h[]A\A]A^A_
T$PH
T$HL
D$@H
t$8H
L$0H
T$(H
D$ L
T$HL
D$@H
t$8H
L$0H
T$(H
D$ L
D$8H
t$0H
L$(H
T$ H
D$8H
t$0H
L$(H
T$ H
D$8H
t$0H
L$(H
T$ H
D$8H
t$0H
L$(H
T$ H
t$(H
L$ H
t$(H
L$ H
L$ H
L$ H
T$PH
D$(H
T$ H
D$(H
|$PH
AWAVAUATUSH
%uD#
[]A\A]A^A_
PROXL)
\$0H
\$0H
\$0H
\$0H
-$A#
\$0H
\$0H
\$0H
=]?#
\$0H
<4tr<6
\$0H
D$/ I
|$/L
ZYL9
\$0H
D$/ L
AZA[
\$0H
\$0H
\$0H
\$0H
\$0H
\$0H
ATUH
[]A\
ATUH
[]A\
fffff.
ATUSH
[]A\
ATUSH
[]A\
fffff.
ATUI
fffff.
ATUI
[]A\
AUATH
[]A\A]
ATUSH
[]A\
AUATUSH
[]A\A]
AUATI
[]A\A]
ATUH
[]A\
AWAVAUATUSH
[]A\A]A^A_
d$ H
o I)
D$ H
o H9l$
d$ H
d$ H
AWAVAUATI
[]A\A]A^A_
t$ L
t$ H
|$ I
t$ H
|$ I
|$ I
AWAVAUATUSH
[]A\A]A^A_
AVAUATSI
S E1
[A\A]A^]
AWAVI
AUATI
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATI
D$p1
D$pH
D$xH
\$pM
D$xH
dH3<%(
[]A\A]A^A_
|$pH
T$`H
D$@H
t$8H
L$0H
T$(H
D$ L
D$@H
t$8H
L$0H
T$(H
D$ L
t$0H
L$(H
T$ H
t$0H
L$(H
T$ H
L$(H
T$ H
L$(H
T$ H
T$ H
T$ H
T$`H
L$XL
D$PH
t$HH
L$@H
T$8H
D$0L
\$(L
T$ L
L$XL
D$PH
t$HH
L$@H
T$8H
D$0L
\$(L
D$HH
t$@H
L$8H
T$0H
D$(L
D$HH
t$@H
L$8H
T$0H
D$(L
\$ L
t$@H
L$8H
T$0H
D$(L
t$@H
L$8H
T$0H
D$(L
\$ H
L$8H
T$0H
D$(L
L$8H
T$0H
D$(L
\$ H
T$0H
D$(L
T$0H
D$(L
\$ H
D$(L
D$(L
\$ H
\$ L
T$`H
D$XH
t$PH
L$HH
D$@H
T$8L
L$0L
D$XH
t$PH
L$HH
D$@H
T$8L
t$HH
L$@H
D$8H
t$HH
L$@H
D$8H
T$0H
|$(H
t$HH
L$@H
D$8H
t$HH
L$@H
D$8H
T$0H
|$ H
t$@H
L$8H
D$0H
t$@H
L$8H
D$0H
T$(H
L$0H
D$(H
L$0H
D$(H
T$ H
D$(H
D$(H
T$ H
T$ H
T$`H
L$@H
D$8H
T$0H
t$(H
L$@H
D$8H
T$0H
D$0H
D$0H
T$(H
|$ H
D$0H
D$0H
T$(H
D$(H
D$(H
T$ H
D$ H
D$ H
T$`H
D$(H
T$ H
D$(H
T$`H
D$ tRH
D$0H
T$(H
D$0H
T$`H
D$ H
D$0tRH
D$@H
T$8H
D$@H
T$`H
|$`H
|$pH
|$`H
AWAVAUATI
D$ H
D$(H
T$ H
T$ H
T$pH
T$hL
L$`L
D$XH
t$PH
L$HH
D$@H
T$8L
\$0L
T$hL
L$`L
D$XH
t$PH
L$HH
D$@H
T$8L
L$XL
D$PH
t$HH
L$@H
D$8H
L$XL
D$PH
t$HH
L$@H
D$8H
T$0L
D$PH
t$HH
L$@H
D$8H
D$PH
t$HH
L$@H
D$8H
T$0L
t$HH
L$@H
D$8H
t$HH
L$@H
D$8H
T$0H
L$@H
D$8H
L$@H
D$8H
T$0H
D$8H
D$8H
T$0H
T$0H
@8H9
L9d$
T$pH
t$PH
L$HH
T$@H
D$8L
T$0L
L$ L
t$PH
L$HH
T$@H
D$8L
T$0L
L$ H
L$@H
T$8H
D$0L
T$ L
L$@H
T$8H
D$0L
T$ L
T$8H
D$0L
T$ L
T$8H
D$0L
T$ L
D$0L
T$ L
D$0L
T$ L
T$ L
T$ L
L9d$
T$ H
T$pH
t$8tpH
L$PH
D$HH
t$@H
L$PH
D$HH
D$@H
|$8H
D$@H
|$0H
D$8H
|$ H
D$0H
D$ H
H9D$
T$pH
D$@tmH
D$HtRH
D$XH
L$PH
D$XH
T$pH
D$8tmH
D$@tRH
D$PH
L$HH
D$PH
T$pH
D$@tmH
D$HtRH
D$XH
L$PH
D$XH
T$pH
D$ H
D$0tcH
D$8tHL
D$@H
|$(H
dH34%(
[]A\A]A^A_
T$pH
D$ tmH
D$0tRH
D$@H
T$8H
D$@H
T$pH
D$0tRH
D$@H
T$8H
D$@H
T$pH
D$ tHL
D$0H
T$pH
D$ tHL
D$0H
D$pH
T$pL
T$pH
T$pH
D$ tHL
D$0H
T$pH
D$ H
D$0twH
D$8tHL
D$@H
T$pH
|$pH
|$(H
D$(H
AWAVI
AUATUSH
D$X1
t$XdH34%(
h[]A\A]A^A_
0H9p
T$PH
T$HL
L$@L
D$8H
t$0H
L$(H
D$ H
T$HL
L$@L
D$8H
t$0H
L$(H
D$ H
L$8L
D$0H
t$(H
L$ H
L$8L
D$0H
t$(H
L$ H
D$0H
t$(H
L$ H
D$0H
t$(H
L$ H
t$(H
L$ H
t$(H
L$ H
L$ H
L$ H
T$PH
T$@L
L$8L
D$0H
t$(H
L$ H
T$@L
L$8L
D$0H
t$(H
L$ H
L$0L
D$(H
t$ H
L$0L
D$(H
t$ H
D$(H
t$ H
D$(H
t$ H
t$ H
t$ H
T$PH
D$(tpH
D$@H
T$8H
L$0H
D$@H
T$8H
T$0H
|$(H
T$0H
|$ H
T$(H
T$ H
T$PH
D$ H
D$ H
T$PH
T$PH
|$PH
fff.
ATUI
[]A\
fffff.
ATUH
[]A\
fffff.
fffff.
AVAUA
ATUH
[]A\A]A^
ATUH
[]A\
fff.
AWAVAUATUSH
[]A\A]A^A_
fffff.
AWAVAUATUSL
D$H1
t$,H
|$HdH3<%(
X[]A\A]A^A_
H+L$
H+L$
l$0I+
|$8H
T$0H9
t4H)
t$,H
|$0t
|$0H
fff.
AWAVAUATUSH
D$ H
\$ L
H+(H
D$`H
D$hH
p8H+p0H
l$@H
\$`H
D$hH
d$hH
D$`I
D$hI
L$`H
T$hH
L$BI
T$ L
HL;$$u
D$0H
|$0I
|$0H
D$`H
D$hH
D$(H
D$`I
D$ H
D$hI
[]A\A]A^A_
|$(I
|$(H
D$`H
D$hH
`0M9
T$ 1
|$`H
l$HL
d$@H
\$ H
D$(H
D$0H
|$@H
C0H9
D$`H
D$`I
D$ H
D$hI
l$@H
\$HI
D$`I
D$hI
t$ I
D$HL
d$@I9
D$ H
(L9d$
D$ H
t$ H
D$`H
41@849uuH
D$ L
D$(H
D$0H
|$@H
E0H9
HH9,$u
|$ H
D$ H
D$ H
|$ H
D$ H
AWAVI
AUATI
D$X1
t$XdH34%(
h[]A\A]A^A_
T$PH
T$HL
L$@L
D$8H
t$0H
L$(H
D$ H
T$HL
L$@L
D$8H
t$0H
L$(H
D$ H
L$8L
D$0H
t$(H
L$ H
L$8L
D$0H
t$(H
L$ H
L$8L
D$0H
t$(H
L$ H
L$8L
D$0H
t$(H
L$ H
L$0L
D$(H
t$ H
L$0L
D$(H
t$ H
D$ H
D$ H
T$PH
D$ H
D$ H
|$PH
>w,H
AWAVAUATUSH
<&M9
d$0M
[]A\A]A^A_
D$(L
t$ H
\$ H
\$ H
L$8t
L$8H
L$8H
T$HH
L$8H
L$0H
L$@L
D$8H
T$0M
D$8f
T$@H
L$8H
T$HL
D$8H
L$@H
L$@L
t$ H
L$8H
L$ H)
L$ L
T$ M
L$HL
L$@L
D$8H
D$8L
L$@f
L$8H
L$8t
T$8H
t$8M
L$XL
D$PH=
\$HI
\$HH
D$@L
T$@I
D$PL
L$XM
D$ M
L$H@
t$@L
\$8H
L$@L
t$8I
L$8t
T$8H
D$(H
L$8H
L$8t
D$8H
L$ H
L$@L
L$@L
L$8t
t$81
t$81
fff.
AWAVE1
AUATE1
L;|$
[]A\A]A^A_
L;|$
<]t$
<:v!
fff.
AWAVA
AUATL
[]A\A]A^A_
basic_string::_M_construct null not valid
Could not send IPC event to worker process: 
Could not send IPC event due to pipe overflow
Reopening log files: master process
Could not resolve the executable path
Unable to resolve address for 
Port was changed between old binary (
socket() syscall failed, error=
Failed to set SO_REUSEADDR option to listener socket, error=
Failed to set IPV6_V6ONLY option to listener socket, error=
Failed to set TCP_DEFER_ACCEPT option to listener socket
listen() syscall failed, error=
Failed to create pipe to communicate worker process: 
Listening on UNIX domain socket 
UNIX domain socket path was changed between old binary (
Failed to bind UNIX domain socket, error=
Failed to listen to UNIX domain socket, error=
Failed to listen on UNIX domain socket 
Changing owner of UNIX domain socket 
/usr/share/nghttp2/fetch-ocsp-response
failed to get current working directory: errno=
Usage: nghttpx [OPTIONS]... [<PRIVATE_KEY> <CERT>]
A reverse proxy for HTTP/2, HTTP/1 and SPDY.
  <PRIVATE_KEY>
              Set path  to server's private key.   Required unless -p,
              --client or --frontend-no-tls are given.
  <CERT>      Set path  to server's certificate.  Required  unless -p,
              --client or  --frontend-no-tls are given.  To  make OCSP
              stapling work, this must be absolute path.
Options:
  The options are categorized into several groups.
Connections:
  -b, --backend=(<HOST>,<PORT>|unix:<PATH>)[;<PATTERN>[:...]]
              Set  backend  host  and   port.   The  multiple  backend
              addresses are  accepted by repeating this  option.  UNIX
              domain socket  can be  specified by prefixing  path name
              with "unix:" (e.g., unix:/var/run/backend.sock).
              Optionally, if <PATTERN>s are given, the backend address
              is only used  if request matches the pattern.   If -s or
              -p  is  used,  <PATTERN>s   are  ignored.   The  pattern
              matching  is closely  designed to  ServeMux in  net/http
              package of Go  programming language.  <PATTERN> consists
              of path, host + path or  just host.  The path must start
              with "/".  If  it ends with "/", it  matches all request
              path in  its subtree.  To  deal with the request  to the
              directory without  trailing slash,  the path  which ends
              with "/" also matches the  request path which only lacks
              trailing '/'  (e.g., path  "/foo/" matches  request path
              "/foo").  If it does not end with "/", it performs exact
              match against  the request path.   If host is  given, it
              performs exact match against  the request host.  If host
              alone  is given,  "/"  is  appended to  it,  so that  it
              matches  all   request  paths  under  the   host  (e.g.,
              specifying "nghttp2.org" equals to "nghttp2.org/").
              Patterns with  host take  precedence over  patterns with
              just path.   Then, longer patterns take  precedence over
              shorter  ones,  breaking  a  tie by  the  order  of  the
              appearance in the configuration.
              If <PATTERN> is  omitted, "/" is used  as pattern, which
              matches  all  request  paths (catch-all  pattern).   The
              catch-all backend must be given.
              When doing  a match, nghttpx made  some normalization to
              pattern, request host and path.  For host part, they are
              converted to lower case.  For path part, percent-encoded
              unreserved characters  defined in RFC 3986  are decoded,
              and any  dot-segments (".."  and ".")   are resolved and
              removed.
              For   example,   -b'127.0.0.1,8080;nghttp2.org/httpbin/'
              matches the  request host "nghttp2.org" and  the request
              path "/httpbin/get", but does not match the request host
              "nghttp2.org" and the request path "/index.html".
              The  multiple <PATTERN>s  can  be specified,  delimiting
              them            by           ":".             Specifying
              -b'127.0.0.1,8080;nghttp2.org:www.nghttp2.org'  has  the
              same  effect  to specify  -b'127.0.0.1,8080;nghttp2.org'
              and -b'127.0.0.1,8080;www.nghttp2.org'.
              The backend addresses sharing same <PATTERN> are grouped
              together forming  load balancing  group.
              Since ";" and ":" are  used as delimiter, <PATTERN> must
              not  contain these  characters.  Since  ";" has  special
              meaning in shell, the option value must be quoted.
              Default: 
  -f, --frontend=(<HOST>,<PORT>|unix:<PATH>)
              Set  frontend  host and  port.   If  <HOST> is  '*',  it
              assumes  all addresses  including  both  IPv4 and  IPv6.
              UNIX domain  socket can  be specified by  prefixing path
              name with "unix:" (e.g., unix:/var/run/nghttpx.sock)
              Default: 
  --backlog=<N>
              Set listen backlog size.
              Default: 
  --backend-ipv4
              Resolve backend hostname to IPv4 address only.
  --backend-ipv6
              Resolve backend hostname to IPv6 address only.
  --backend-http-proxy-uri=<URI>
              Specify      proxy       URI      in       the      form
              http://[<USER>:<PASS>@]<PROXY>:<PORT>.    If   a   proxy
              requires  authentication,  specify  <USER>  and  <PASS>.
              Note that  they must be properly  percent-encoded.  This
              proxy  is used  when the  backend connection  is HTTP/2.
              First,  make  a CONNECT  request  to  the proxy  and  it
              connects  to the  backend  on behalf  of nghttpx.   This
              forms  tunnel.   After  that, nghttpx  performs  SSL/TLS
              handshake with  the downstream through the  tunnel.  The
              timeouts when connecting and  making CONNECT request can
              be     specified    by     --backend-read-timeout    and
              --backend-write-timeout options.
  --accept-proxy-protocol
              Accept PROXY protocol version 1 on frontend connection.
Performance:
  -n, --workers=<N>
              Set the number of worker threads.
              Default: 
  --read-rate=<SIZE>
              Set maximum  average read  rate on  frontend connection.
              Setting 0 to this option means read rate is unlimited.
              Default: 
  --read-burst=<SIZE>
              Set  maximum read  burst  size  on frontend  connection.
              Setting  0  to this  option  means  read burst  size  is
              unlimited.
              Default: 
  --write-rate=<SIZE>
              Set maximum  average write rate on  frontend connection.
              Setting 0 to this option means write rate is unlimited.
              Default: 
  --write-burst=<SIZE>
              Set  maximum write  burst size  on frontend  connection.
              Setting  0 to  this  option means  write  burst size  is
              unlimited.
              Default: 
  --worker-read-rate=<SIZE>
              Set maximum average read rate on frontend connection per
              worker.  Setting  0 to  this option  means read  rate is
              unlimited.  Not implemented yet.
              Default: 
  --worker-read-burst=<SIZE>
              Set maximum  read burst size on  frontend connection per
              worker.  Setting 0 to this  option means read burst size
              is unlimited.  Not implemented yet.
              Default: 
  --worker-write-rate=<SIZE>
              Set maximum  average write  rate on  frontend connection
              per worker.  Setting  0 to this option  means write rate
              is unlimited.  Not implemented yet.
              Default: 
  --worker-write-burst=<SIZE>
              Set maximum write burst  size on frontend connection per
              worker.  Setting 0 to this option means write burst size
              is unlimited.  Not implemented yet.
              Default: 
  --worker-frontend-connections=<N>
              Set maximum number  of simultaneous connections frontend
              accepts.  Setting 0 means unlimited.
              Default: 
  --backend-http2-connections-per-worker=<N>
              Set   maximum   number   of  backend   HTTP/2   physical
              connections  per  worker.   If  pattern is  used  in  -b
              option, this limit is applied  to each pattern group (in
              other  words, each  pattern group  can have  maximum <N>
              HTTP/2  connections).  The  default  value  is 0,  which
              means  that  the value  is  adjusted  to the  number  of
              backend addresses.  If pattern  is used, this adjustment
              is done for each pattern group.
  --backend-http1-connections-per-host=<N>
              Set   maximum  number   of  backend   concurrent  HTTP/1
              connections per origin host.   This option is meaningful
              when -s option  is used.  The origin  host is determined
              by  authority  portion  of requset  URI  (or  :authority
              header  field  for  HTTP/2).   To limit  the  number  of
              connections   per  frontend   for   default  mode,   use
              --backend-http1-connections-per-frontend.
              Default: 
  --backend-http1-connections-per-frontend=<N>
              Set   maximum  number   of  backend   concurrent  HTTP/1
              connections per frontend.  This  option is only used for
              default mode.   0 means unlimited.  To  limit the number
              of connections  per host for  HTTP/2 or SPDY  proxy mode
              (-s option), use --backend-http1-connections-per-host.
              Default: 
  --rlimit-nofile=<N>
              Set maximum number of open files (RLIMIT_NOFILE) to <N>.
              If 0 is given, nghttpx does not set the limit.
              Default: 
  --backend-request-buffer=<SIZE>
              Set buffer size used to store backend request.
              Default: 
  --backend-response-buffer=<SIZE>
              Set buffer size used to store backend response.
              Default: 
Timeout:
  --frontend-http2-read-timeout=<DURATION>
              Specify  read  timeout  for  HTTP/2  and  SPDY  frontend
              connection.
              Default: 
  --frontend-read-timeout=<DURATION>
              Specify read timeout for HTTP/1.1 frontend connection.
              Default: 
  --frontend-write-timeout=<DURATION>
              Specify write timeout for all frontend connections.
              Default: 
  --stream-read-timeout=<DURATION>
              Specify  read timeout  for HTTP/2  and SPDY  streams.  0
              means no timeout.
              Default: 
  --stream-write-timeout=<DURATION>
              Specify write  timeout for  HTTP/2 and SPDY  streams.  0
              means no timeout.
              Default: 
  --backend-read-timeout=<DURATION>
              Specify read timeout for backend connection.
              Default: 
  --backend-write-timeout=<DURATION>
              Specify write timeout for backend connection.
              Default: 
  --backend-keep-alive-timeout=<DURATION>
              Specify keep-alive timeout for backend connection.
              Default: 
  --listener-disable-timeout=<DURATION>
              After accepting  connection failed,  connection listener
              is disabled  for a given  amount of time.   Specifying 0
              disables this feature.
              Default: 
SSL/TLS:
  --ciphers=<SUITE>
              Set allowed  cipher list.  The  format of the  string is
              described in OpenSSL ciphers(1).
  -k, --insecure
              Don't  verify   backend  server's  certificate   if  -p,
              --client    or    --http2-bridge     are    given    and
              --backend-no-tls is not given.
  --cacert=<PATH>
              Set path to trusted CA  certificate file if -p, --client
              or --http2-bridge are given  and --backend-no-tls is not
              given.  The file must be  in PEM format.  It can contain
              multiple  certificates.    If  the  linked   OpenSSL  is
              configured to  load system  wide certificates,  they are
              loaded at startup regardless of this option.
  --private-key-passwd-file=<PATH>
              Path  to file  that contains  password for  the server's
              private key.   If none is  given and the private  key is
              password protected it'll be requested interactively.
  --subcert=<KEYPATH>:<CERTPATH>
              Specify  additional certificate  and  private key  file.
              nghttpx will  choose certificates based on  the hostname
              indicated  by  client  using TLS  SNI  extension.   This
              option  can  be  used  multiple  times.   To  make  OCSP
              stapling work, <CERTPATH> must be absolute path.
  --backend-tls-sni-field=<HOST>
              Explicitly  set the  content of  the TLS  SNI extension.
              This will default to the backend HOST name.
  --dh-param-file=<PATH>
              Path to file that contains  DH parameters in PEM format.
              Without  this   option,  DHE   cipher  suites   are  not
              available.
  --npn-list=<LIST>
              Comma delimited list of  ALPN protocol identifier sorted
              in the  order of preference.  That  means most desirable
              protocol comes  first.  This  is used  in both  ALPN and
              NPN.  The parameter must be  delimited by a single comma
              only  and any  white spaces  are  treated as  a part  of
              protocol string.
              Default: 
  --verify-client
              Require and verify client certificate.
  --verify-client-cacert=<PATH>
              Path  to file  that contains  CA certificates  to verify
              client certificate.  The file must be in PEM format.  It
              can contain multiple certificates.
  --client-private-key-file=<PATH>
              Path to  file that contains  client private key  used in
              backend client authentication.
  --client-cert-file=<PATH>
              Path to  file that  contains client certificate  used in
              backend client authentication.
  --tls-proto-list=<LIST>
              Comma delimited list of  SSL/TLS protocol to be enabled.
              The following protocols  are available: TLSv1.2, TLSv1.1
              and   TLSv1.0.    The   name   matching   is   done   in
              case-insensitive   manner.    The  parameter   must   be
              delimited by  a single comma  only and any  white spaces
              are treated as a part of protocol string.
              Default: 
  --tls-ticket-key-file=<PATH>
              Path to file that contains  random data to construct TLS
              session ticket  parameters.  If aes-128-cbc is  given in
              --tls-ticket-key-cipher, the  file must  contain exactly
              48    bytes.     If     aes-256-cbc    is    given    in
              --tls-ticket-key-cipher, the  file must  contain exactly
              80  bytes.   This  options  can be  used  repeatedly  to
              specify  multiple ticket  parameters.  If  several files
              are given,  only the  first key is  used to  encrypt TLS
              session  tickets.  Other  keys are  accepted but  server
              will  issue new  session  ticket with  first key.   This
              allows  session  key  rotation.  Please  note  that  key
              rotation  does  not  occur automatically.   User  should
              rearrange  files or  change options  values and  restart
              nghttpx gracefully.   If opening  or reading  given file
              fails, all loaded  keys are discarded and  it is treated
              as if none  of this option is given.  If  this option is
              not given or an error  occurred while opening or reading
              a file,  key is  generated every  1 hour  internally and
              they are  valid for  12 hours.   This is  recommended if
              ticket  key sharing  between  nghttpx  instances is  not
              required.
  --tls-ticket-key-memcached=<HOST>,<PORT>
              Specify  address of  memcached server  to store  session
              cache.   This  enables  shared TLS  ticket  key  between
              multiple nghttpx  instances.  nghttpx  does not  set TLS
              ticket  key  to  memcached.   The  external  ticket  key
              generator  is required.   nghttpx just  gets TLS  ticket
              keys from  memcached, and  use them,  possibly replacing
              current set of keys.  It is  up to extern TLS ticket key
              generator to  rotate keys frequently.  See  "TLS SESSION
              TICKET RESUMPTION"  section in  manual page to  know the
              data format in memcached entry.
  --tls-ticket-key-memcached-interval=<DURATION>
              Set interval to get TLS ticket keys from memcached.
              Default: 
  --tls-ticket-key-memcached-max-retry=<N>
              Set  maximum   number  of  consecutive   retries  before
              abandoning TLS ticket key  retrieval.  If this number is
              reached,  the  attempt  is considered  as  failure,  and
              "failure" count  is incremented by 1,  which contributed
              to            the            value            controlled
              --tls-ticket-key-memcached-max-fail option.
              Default: 
  --tls-ticket-key-memcached-max-fail=<N>
              Set  maximum   number  of  consecutive   failure  before
              disabling TLS ticket until next scheduled key retrieval.
              Default: 
  --tls-ticket-key-cipher=<CIPHER>
              Specify cipher  to encrypt TLS session  ticket.  Specify
              either   aes-128-cbc   or  aes-256-cbc.    By   default,
              aes-128-cbc is used.
  --fetch-ocsp-response-file=<PATH>
              Path to  fetch-ocsp-response script file.  It  should be
              absolute path.
              Default: 
  --ocsp-update-interval=<DURATION>
              Set interval to update OCSP response cache.
              Default: 
  --no-ocsp   Disable OCSP stapling.
  --tls-session-cache-memcached=<HOST>,<PORT>
              Specify  address of  memcached server  to store  session
              cache.   This  enables   shared  session  cache  between
              multiple nghttpx instances.
HTTP/2 and SPDY:
  -c, --http2-max-concurrent-streams=<N>
              Set the maximum number of  the concurrent streams in one
              HTTP/2 and SPDY session.
              Default: 
  --frontend-http2-window-bits=<N>
              Sets the  per-stream initial window size  of HTTP/2 SPDY
              frontend connection.  For HTTP/2,  the size is 2**<N>-1.
              For SPDY, the size is 2**<N>.
              Default: 
  --frontend-http2-connection-window-bits=<N>
              Sets the  per-connection window size of  HTTP/2 and SPDY
              frontend   connection.    For   HTTP/2,  the   size   is
              2**<N>-1. For SPDY, the size is 2**<N>.
              Default: 
  --frontend-no-tls
              Disable SSL/TLS on frontend connections.
  --backend-http2-window-bits=<N>
              Sets  the   initial  window   size  of   HTTP/2  backend
              connection to 2**<N>-1.
              Default: 
  --backend-http2-connection-window-bits=<N>
              Sets the  per-connection window  size of  HTTP/2 backend
              connection to 2**<N>-1.
              Default: 
  --backend-no-tls
              Disable SSL/TLS on backend connections.
  --http2-no-cookie-crumbling
              Don't crumble cookie header field.
  --padding=<N>
              Add  at most  <N> bytes  to  a HTTP/2  frame payload  as
              padding.  Specify 0 to  disable padding.  This option is
              meant for debugging purpose  and not intended to enhance
              protocol security.
  --no-server-push
              Disable  HTTP/2  server  push.    Server  push  is  only
              supported  by default  mode and  HTTP/2 frontend.   SPDY
              frontend does not support server push.
Mode:
  (default mode)
              Accept  HTTP/2,  SPDY  and HTTP/1.1  over  SSL/TLS.   If
              --frontend-no-tls is  used, accept HTTP/2  and HTTP/1.1.
              The  incoming HTTP/1.1  connection  can  be upgraded  to
              HTTP/2  through  HTTP  Upgrade.   The  protocol  to  the
              backend is HTTP/1.1.
  -s, --http2-proxy
              Like default mode, but enable secure proxy mode.
  --http2-bridge
              Like default  mode, but communicate with  the backend in
              HTTP/2 over SSL/TLS.  Thus  the incoming all connections
              are converted  to HTTP/2  connection and relayed  to the
              backend.  See --backend-http-proxy-uri option if you are
              behind  the proxy  and want  to connect  to the  outside
              HTTP/2 proxy.
  --client    Accept  HTTP/2   and  HTTP/1.1  without   SSL/TLS.   The
              incoming HTTP/1.1  connection can be upgraded  to HTTP/2
              connection through  HTTP Upgrade.   The protocol  to the
              backend is HTTP/2.   To use nghttpx as  a forward proxy,
              use -p option instead.
  -p, --client-proxy
              Like --client  option, but it also  requires the request
              path from frontend must be an absolute URI, suitable for
              use as a forward proxy.
Logging:
  -L, --log-level=<LEVEL>
              Set the severity  level of log output.   <LEVEL> must be
              one of INFO, NOTICE, WARN, ERROR and FATAL.
              Default: NOTICE
  --accesslog-file=<PATH>
              Set path to write access log.  To reopen file, send USR1
              signal to nghttpx.
  --accesslog-syslog
              Send  access log  to syslog.   If this  option is  used,
              --accesslog-file option is ignored.
  --accesslog-format=<FORMAT>
              Specify  format  string  for access  log.   The  default
              format is combined format.   The following variables are
              available:
              * $remote_addr: client IP address.
              * $time_local: local time in Common Log format.
              * $time_iso8601: local time in ISO 8601 format.
              * $request: HTTP request line.
              * $status: HTTP response status code.
              * $body_bytes_sent: the  number of bytes sent  to client
                as response body.
              * $http_<VAR>: value of HTTP  request header <VAR> where
                '_' in <VAR> is replaced with '-'.
              * $remote_port: client  port.
              * $server_port: server port.
              * $request_time: request processing time in seconds with
                milliseconds resolution.
              * $pid: PID of the running process.
              * $alpn: ALPN identifier of the protocol which generates
                the response.   For HTTP/1,  ALPN is  always http/1.1,
                regardless of minor version.
              * $ssl_cipher: cipher used for SSL/TLS connection.
              * $ssl_protocol: protocol for SSL/TLS connection.
              * $ssl_session_id: session ID for SSL/TLS connection.
              * $ssl_session_reused:  "r"   if  SSL/TLS   session  was
                reused.  Otherwise, "."
              The  variable  can  be  enclosed  by  "{"  and  "}"  for
              disambiguation (e.g., ${remote_addr}).
              Default: 
  --errorlog-file=<PATH>
              Set path to write error  log.  To reopen file, send USR1
              signal  to nghttpx.   stderr will  be redirected  to the
              error log file unless --errorlog-syslog is used.
              Default: 
  --errorlog-syslog
              Send  error log  to  syslog.  If  this  option is  used,
              --errorlog-file option is ignored.
  --syslog-facility=<FACILITY>
              Set syslog facility to <FACILITY>.
              Default: 
HTTP:
  --add-x-forwarded-for
              Append  X-Forwarded-For header  field to  the downstream
              request.
  --strip-incoming-x-forwarded-for
              Strip X-Forwarded-For  header field from  inbound client
              requests.
  --no-via    Don't append to  Via header field.  If  Via header field
              is received, it is left unaltered.
  --no-location-rewrite
              Don't rewrite  location header field  on --http2-bridge,
              --client  and  default   mode.   For  --http2-proxy  and
              --client-proxy mode,  location header field will  not be
              altered regardless of this option.
  --host-rewrite
              Rewrite   host   and   :authority   header   fields   on
              --http2-bridge,   --client   and  default   mode.    For
              --http2-proxy  and  --client-proxy mode,  these  headers
              will not be altered regardless of this option.
  --altsvc=<PROTOID,PORT[,HOST,[ORIGIN]]>
              Specify   protocol  ID,   port,  host   and  origin   of
              alternative service.  <HOST>  and <ORIGIN> are optional.
              They  are advertised  in  alt-svc header  field only  in
              HTTP/1.1  frontend.  This  option can  be used  multiple
              times   to   specify  multiple   alternative   services.
              Example: --altsvc=h2,443
  --add-request-header=<HEADER>
              Specify additional header field to add to request header
              set.  This  option just  appends header field  and won't
              replace anything  already set.  This option  can be used
              several  times   to  specify  multiple   header  fields.
              Example: --add-request-header="foo: bar"
  --add-response-header=<HEADER>
              Specify  additional  header  field to  add  to  response
              header set.   This option just appends  header field and
              won't replace anything already  set.  This option can be
              used several  times to  specify multiple  header fields.
              Example: --add-response-header="foo: bar"
  --header-field-buffer=<SIZE>
              Set maximum  buffer size for incoming  HTTP header field
              list.   This is  the sum  of  header name  and value  in
              bytes.
              Default: 
  --max-header-fields=<N>
              Set maximum number of incoming HTTP header fields, which
              appear in one request or response header field list.
              Default: 
Debug:
  --frontend-http2-dump-request-header=<PATH>
              Dumps request headers received by HTTP/2 frontend to the
              file denoted  in <PATH>.  The  output is done  in HTTP/1
              header field format and each header block is followed by
              an empty line.  This option  is not thread safe and MUST
              NOT be used with option -n<N>, where <N> >= 2.
  --frontend-http2-dump-response-header=<PATH>
              Dumps response headers sent  from HTTP/2 frontend to the
              file denoted  in <PATH>.  The  output is done  in HTTP/1
              header field format and each header block is followed by
              an empty line.  This option  is not thread safe and MUST
              NOT be used with option -n<N>, where <N> >= 2.
  -o, --frontend-frame-debug
              Print HTTP/2 frames in  frontend to stderr.  This option
              is  not thread  safe and  MUST NOT  be used  with option
              -n=N, where N >= 2.
Process:
  -D, --daemon
              Run in a background.  If -D is used, the current working
              directory is changed to '/'.
  --pid-file=<PATH>
              Set path to save PID of this program.
  --user=<USER>
              Run this program as <USER>.   This option is intended to
              be used to drop root privileges.
Scripting:
  --request-phase-file=<PATH>
              Set  mruby  script  file  which will  be  executed  when
              request  header  fields  are  completely  received  from
              frontend.  This hook is called request phase hook.
  --response-phase-file=<PATH>
              Set  mruby  script  file  which will  be  executed  when
              response  header  fields  are completely  received  from
              backend.  This hook is called response phase hook.
Misc:
  --conf=<PATH>
              Load configuration from <PATH>.
              Default: 
  --include=<PATH>
              Load additional configurations from <PATH>.  File <PATH>
              is  read  when  configuration  parser  encountered  this
              option.  This option can be used multiple times, or even
              recursively.
  -v, --version
              Print version and exit.
  -h, --help  Print this help and exit.
  The <SIZE> argument is an integer and an optional unit (e.g., 10K is
  10 * 1024).  Units are K, M and G (powers of 1024).
  The <DURATION> argument is an integer and an optional unit (e.g., 1s
  is 1 second and 500ms is 500 milliseconds).  Units are h, m, s or ms
  (hours, minutes, seconds and milliseconds, respectively).  If a unit
  is omitted, a second is used as unit.
Failed to load configuration from 
Failed to parse command-line argument.
Changing owner of access log file failed: 
Changing owner of error log file failed: 
Failed to open http2 upstream request header file: 
Changing owner of http2 upstream request header file 
Failed to open http2 upstream response header file: 
Changing owner of http2 upstream response header file
--backend-ipv4 and --backend-ipv6 cannot be used at the 
--http2-proxy, --http2-bridge, --client-proxy and --client 
cannot be used at the same time.
 not found.  OCSP stapling has been disabled.
-b: No catch-all backend address is configured
Resolving backend http proxy address
Setting rlimit-nofile failed: 
shrpx.cc
abnormally
; signal 
basic_string::append
UNKNOWN(
Worker process (
) exited 
 with status 
; exit status 
Executing new binary
fork() failed errno=
NGHTTP2_UNIX_FD=
NGHTTP2_UNIX_PATH=
NGHTTPX_LISTENER4_FD=
NGHTTPX_LISTENER6_FD=
NGHTTPX_PORT=
NGHTTPX_LISTENER4_FD
NGHTTPX_LISTENER6_FD
NGHTTPX_PORT
NGHTTP2_UNIX_FD
NGHTTP2_UNIX_PATH
cmdline
environ
execve failed: errno=
Address resolution for 
 succeeded: 
IPv4
IPv6
Listening on port 
) and new binary (
Unable to get IPv
 address for 
bind() syscall failed, error=
Listening 
 socket failed
Listening on 
, port 
Failed to daemonize: 
Could not save PID to file 
Changing owner of pid file 
 is too long > 
Failed to listen on address 
Worker process returned error
) spawned
nghttpx nghttp2/1.3.3
/dev/stderr
/etc/nghttpx/nghttpx.conf
DL:b:c:f:hkn:opsv
include_set.empty()
Failed to open log file
same time.
Too few arguments
--fetch-ocsp-response-file: 
Resolving backend address
Host-path pattern: group 
 -> 
Catch-all pattern is group 
localhost
Use UNIX domain socket path 
 for backend connection
Shutdown momentarily
help
int shrpx::main(int, char**)
127.0.0.1
$remote_addr - - [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"
TLSv1.2,TLSv1.1
h2,h2-16,h2-14,http/1.1
accept-proxy-protocol
response-phase-file
request-phase-file
tls-ticket-key-memcached-max-fail
tls-ticket-key-memcached-max-retry
tls-ticket-key-memcached-interval
tls-ticket-key-memcached
tls-session-cache-memcached
host-rewrite
tls-ticket-key-cipher
include
max-header-fields
header-field-buffer
no-ocsp
ocsp-update-interval
fetch-ocsp-response-file
backend-http2-connections-per-worker
no-server-push
backend-response-buffer
backend-request-buffer
rlimit-nofile
tls-ticket-key-file
listener-disable-timeout
backend-http1-connections-per-frontend
backend-http1-connections-per-host
no-host-rewrite
no-location-rewrite
worker-frontend-connections
add-response-header
add-request-header
altsvc
padding
frontend-frame-debug
http2-no-cookie-crumbling
frontend-http2-dump-response-header
frontend-http2-dump-request-header
client-cert-file
client-private-key-file
verify-client-cacert
verify-client
tls-proto-list
npn-list
worker-write-burst
worker-write-rate
worker-read-burst
worker-read-rate
write-burst
write-rate
read-burst
read-rate
backend-http-proxy-uri
backend-ipv6
backend-ipv4
cacert
insecure
client
ciphers
backlog
syslog-facility
user
pid-file
backend-tls-sni-field
backend-no-tls
frontend-no-tls
backend-http2-connection-window-bits
frontend-http2-connection-window-bits
backend-http2-window-bits
frontend-http2-window-bits
backend-keep-alive-timeout
errorlog-syslog
errorlog-file
accesslog-format
accesslog-syslog
accesslog-file
stream-write-timeout
stream-read-timeout
backend-write-timeout
backend-read-timeout
frontend-write-timeout
frontend-read-timeout
frontend-http2-read-timeout
no-via
strip-incoming-x-forwarded-for
add-x-forwarded-for
client-proxy
http2-bridge
http2-proxy
daemon
log-level
http2-max-concurrent-streams
workers
frontend
backend
subcert
dh-param-file
certificate-file
private-key-passwd-file
private-key-file
St22_Weak_result_type_implIPFvP8addrinfoEE
St17_Weak_result_typeIPFvP8addrinfoEE
St5_BindIFPFvP8addrinfoES1_EE
@%02x 
%a, %d %b %Y %H:%M:%S GMT
util.cc
a && b
https
http
unknown
/dev/stdout
/proc/self/fd/1
/proc/self/fd/2
/../
%08lx
vector::reserve
Did you mean:
int nghttp2::util::strcompare(const char*, const uint8_t*, size_t)
!#$%&'*+-.^_`|~
!$&'()*+,;=-._~
0123456789abcdef
0123456789ABCDEF
h2-14
h2-14
h2-16
h2-16
NO_ERROR
PROTOCOL_ERROR
INTERNAL_ERROR
FLOW_CONTROL_ERROR
SETTINGS_TIMEOUT
STREAM_CLOSED
FRAME_SIZE_ERROR
REFUSED_STREAM
CANCEL
COMPRESSION_ERROR
CONNECT_ERROR
ENHANCE_YOUR_CALM
INADEQUATE_SECURITY
HTTP_1_1_REQUIRED
[1;34m
%s%s%s: %s
          
DATA
PRIORITY
RST_STREAM
SETTINGS
PUSH_PROMISE
PING
GOAWAY
WINDOW_UPDATE
[1;35m
[1;36m
SETTINGS_HEADER_TABLE_SIZE
SETTINGS_ENABLE_PUSH
SETTINGS_INITIAL_WINDOW_SIZE
SETTINGS_MAX_FRAME_SIZE
SETTINGS_MAX_HEADER_LIST_SIZE
%s%s%s frame 
END_STREAM
PADDED
END_HEADERS
; %s
(padlen=%zu)
(padlen=%zu
; Open new stream
; First response header
; First push response header
(error_code=%s(0x%02x))
(niv=%lu)
[%s(0x%02x):%u]
(opaque_data=%s)
(window_size_increment=%d)
[33m
%s[%3ld.%03ld]%s
 recv (stream_id=%d
, sensitive
 [INVALID; error=%s] recv 
 send 
1.2.8
SETTINGS_MAX_CONCURRENT_STREAMS
<length=%zu, flags=0x%02x, stream_id=%d>
, dep_stream_id=%d, weight=%u, exclusive=%d
(dep_stream_id=%d, weight=%u, exclusive=%d)
(padlen=%zu, promised_stream_id=%d)
(last_stream_id=%d, error_code=%s(0x%02x), opaque_data(%u)=[%s])
 recv (stream_id=%d, length=%zu, srecv=%d, crecv=%d) DATA
OpenSSL global lock has been already set
ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
SSLv2
SSLv3
TLSv1.2
TLSv1.1
TLSv1
nghttp2::ssl::LibsslGlobalLock::LibsslGlobalLock()
shrpx_config.cc
!pattern.empty()
: bad value: '
Found pattern with query 
, matched pattern=
, path=
Invalid host, port: 
Hostname too long: 
Port is invalid: 
Failed to open 
 for writing. Cause: 
Private key passwd file 
 has insecure mode.
auth
authpriv
cron
daemon
kern
local0
local1
local2
local3
local4
local5
local6
local7
mail
syslog
user
uucp
(unknown)
news
vector::_M_default_append
sizeof(buf) >= expectedlen
, the actual file size is 
 bytes but only read 
 bytes from 
enc_keylen=
, hmac_keylen=
http_
Missing '}' after 
reques
time_loca
ssl_ciphe
remote_add
remote_por
server_por
time_iso860
request_tim
ssl_protoco
ssl_session_i
body_bytes_sen
ssl_session_reuse
no-vi
altsv
daemo
backen
includ
backlo
paddin
no-ocs
cipher
worker
subcer
fronten
insecur
pid-fil
npn-lis
log-leve
http2-prox
backend-ipv
http2-bridg
client-prox
dh-param-fil
errorlog-fil
rlimit-nofil
verify-clien
accesslog-fil
no-server-pus
backend-no-tl
tls-proto-lis
no-host-rewrit
errorlog-syslo
frontend-no-tl
syslog-facilit
certificate-fil
client-cert-fil
worker-read-rat
accesslog-syslo
accesslog-forma
worker-write-rat
max-header-field
worker-read-burs
request-phase-fil
add-request-heade
worker-write-burs
no-location-rewrit
response-phase-fil
tls-ticket-key-fil
add-response-heade
add-x-forwarded-fo
header-field-buffe
stream-read-timeou
frontend-frame-debu
ocsp-update-interva
backend-read-timeou
stream-write-timeou
verify-client-cacer
backend-tls-sni-fiel
accept-proxy-protoco
tls-ticket-key-ciphe
backend-write-timeou
frontend-read-timeou
backend-http-proxy-ur
backend-request-buffe
frontend-write-timeou
client-private-key-fil
private-key-passwd-fil
backend-response-buffe
tls-ticket-key-memcache
fetch-ocsp-response-fil
listener-disable-timeou
http2-no-cookie-crumblin
backend-http2-window-bit
frontend-http2-window-bit
backend-keep-alive-timeou
tls-session-cache-memcache
worker-frontend-connection
frontend-http2-read-timeou
http2-max-concurrent-stream
strip-incoming-x-forwarded-fo
!mapping.empty()
: Invalid severity level: 
: failed to get uid from 
: Unknown syslog facility: 
 is not allowed
: no hostname specified
: no port specified
: parse error
: not implemented yet
: too few parameters: 
: too many parameters: 
: port is invalid: 
 has already been included
aes-256-cbc
conf: ignored
Unknown option: 
aes-128-cbc
Could not open config file 
Bad configuration format in 
 at line 
Perform mapping selection, using host=
None match.  Use catch-all pattern
Could not open key passwd file 
: bad value.  Specify an integer >= 0.
tls-ticket-key-file: could not stat file 
tls-ticket-key-file: the expected file size is 
tls-ticket-key-file: could not open file 
tls-ticket-key-file: want to read 
Unrecognized log format variable: 
tls-ticket-key-memcached-interva
tls-ticket-key-memcached-max-fai
frontend-http2-dump-request-heade
backend-http1-connections-per-hos
tls-ticket-key-memcached-max-retr
frontend-http2-dump-response-heade
backend-http2-connections-per-worke
backend-http2-connection-window-bit
frontend-http2-connection-window-bit
backend-http1-connections-per-fronten
: ';' must not be used in pattern
: specify the integer in the range [0, 30], inclusive
: specify the integer in the range [16, 30], inclusive
: Couldn't read key file's passwd from 
: bad value.  Specify an integer.
: header field name is empty: 
: deprecated.  :authority and host header fields are NOT altered by default.  To rewrite these headers, use --host-rewrite option.
: specify an integer strictly more than 0
: specify the integer more than or equal to 0
: unsupported cipher for ticket encryption: 
: must be smaller than or equal to 30
: ignored because mruby support is disabled at build time.
bool shrpx::{anonymous}::path_match(const string&, const string&, InputIt, InputIt) [with InputIt = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; std::__cxx11::string = std::__cxx11::basic_string<char>]
bool shrpx::{anonymous}::path_match(const string&, const string&, InputIt, InputIt) [with InputIt = const char*; std::__cxx11::string = std::__cxx11::basic_string<char>]
void shrpx::{anonymous}::parse_mapping(const shrpx::DownstreamAddr&, const char*)
std::unique_ptr<shrpx::TicketKeys> shrpx::read_tls_ticket_key_file(const std::vector<std::__cxx11::basic_string<char> >&, const EVP_CIPHER*, const EVP_MD*)
no-host-rewrite
unix:
nghttp2_session_recv() returned error: 
static_cast<size_t>(rv) == rb->rleft()
No more read/write for this HTTP2 session
nghttp2_session_mem_send() returned error: 
nghttp2_submit_shutdown_notice() failed: 
nghttp2_submit_settings() returned error: 
nghttp2_submit_window_update() returned error: 
nghttp2_submit_rst_stream() failed: 
Failed to send control frame type=
nghttp2_session_consume() returned error: 
downstream->get_request_datalen() >= consumed
nghttp2_session_upgrade() returned error: 
HTTP response headers. stream_id=
Received upstream request HEADERS stream_id=
nghttp2_submit_push_promise() failed: 
HTTP push request headers. promised_stream_id=
HTTP non-final response header
HTTP response header completed
nghttp2_submit_headers() failed
nghttp2_submit_response() failed
nghttp2_submit_response() failed: 
HTTP request headers. stream_id=
GOAWAY received: last-stream-id=
Too large or many header field size=
Downstream body was ended by EOF
Downstream network/general error
Note: this is tunnel connection
 to finish off incomplete request
Sending GOAWAY: last-stream-id=
shrpx_http2_upstream.cc
[UPSTREAM:
SETTINGS timeout
rv == 0
RST_STREAM stream_id=
 with error_code=
, lib_error_code=
Stream timeout stream_id=
[DOWNSTREAM:
HTTP response completed
Connection upgraded to HTTP/2
memchunk.h
m->len()
:method
:scheme
:path
:authority
:status
x-http2-push
content-type
text/html; charset=UTF-8
content-length
Stream stream_id=
 is being closed
, error_code=
, debug_data=
, num=
[DCONN:
HTTP parser failure
EOF. stream_id=
tunneled 
Send RST_STREAM to 
stream stream_id=
virtual int shrpx::Http2Upstream::resume_read(shrpx::IOCtrlReason, shrpx::Downstream*, size_t)
size_t nghttp2::Memchunks<Memchunk>::remove(void*, size_t) [with Memchunk = nghttp2::Memchunk<16384ul>; size_t = long unsigned int]
ssize_t shrpx::{anonymous}::downstream_data_read_callback(nghttp2_session*, int32_t, uint8_t*, size_t, uint32_t*, nghttp2_data_source*, void*)
virtual int shrpx::Http2Upstream::on_read()
shrpx::Http2Upstream::Http2Upstream(shrpx::ClientHandler*)
N5shrpx8UpstreamE
N5shrpx13Http2UpstreamE
$@downstream->get_request_state() == Downstream::INITIAL
HTTP request headers completed
Content-Type: text/html; charset=UTF-8
Connection: close
Downstream request buf is full
Downstream request buffer is full
The end of the response body was indicated by 
shrpx_https_upstream.cc
Too large URI size=
Too large header block size=
HTTP request completed
HTTP Upgrade to HTTP/2 failed
Too many header field num=
!downstream_
HTTP response headers
HTTP request started
HTTP request headers
u.field_set & (1 << UF_HOST)
Connection: Keep-Alive
Connection: close
Connection: 
Upgrade: 
Alt-Svc: 
Via: 
HTTP/1.1 
Server: 
Content-Length: 
Date: 
HTTP parse failure: 
Return error reply
Network error/general error
close
void shrpx::HttpsUpstream::attach_downstream(std::unique_ptr<shrpx::Downstream>)
size_t nghttp2::Memchunks<Memchunk>::remove(void*, size_t) [with Memchunk = nghttp2::Memchunk<16384ul>; size_t = long unsigned int]
int shrpx::{anonymous}::htp_uricb(http_parser*, const char*, size_t)
void shrpx::{anonymous}::rewrite_request_host_path_from_uri(shrpx::Downstream*, const char*, http_parser_url&)
N5shrpx13HttpsUpstreamE
%s: __pos (which is %zu) > this->size() (which is %zu)
request invalid bodylen: content-length=
response invalid bodylen: content-length=
shrpx_downstream.cc
!key_prev
Deleting
Deleted
cooki
basic_string::erase
dconn_ is NULL
, received=
chunked
request_datalen_ >= len
response_datalen_ >= len
write
upstream timeout stream_id=
 event=
downstream timeout stream_id=
!blocked_link_
basic_string::substr
cookie
void shrpx::Downstream::attach_blocked_link(shrpx::BlockedLink*)
void shrpx::Downstream::dec_response_datalen(size_t)
void shrpx::Downstream::dec_request_datalen(size_t)
void shrpx::{anonymous}::append_last_header_value(bool, size_t&, nghttp2::Headers&, const char*, size_t)
void shrpx::{anonymous}::append_last_header_key(bool, size_t&, nghttp2::Headers&, const char*, size_t)
N5shrpx20DownstreamConnectionE
No more read/write for this session
Downstream connection was blocked by connect_blocker
Failed to connect to the proxy 
Connecting to downstream server
 is being closed with error code 
nghttp2_submit_request() failed: 
HTTP upgrade success. stream_id=
nghttp2_resume_session() failed: 
Received downstream PUSH_PROMISE stream_id=
Start connecting to backend server
Could not initiate backend connection
HTTP proxy request is too large
TLSv1.2 was not negotiated. HTTP/2 must not be negotiated.
shrpx_http2_session.cc
[DHTTP2:
Tunneling success
Tunneling failed: 
Using downstream address idx=
 out of 
Connecting to the proxy 
conn_.fd == -1
state_ == CONNECTED
This is non-final response.
transfer-encoding
backend request failed
Connection alive
PING ACK received
, promised_stream_id=
Disconnecting
ping timeout
connection check required
Connected to the proxy
CONNECT 
 HTTP/1.1
Host: 
Proxy-Authorization: Basic 
HTTP proxy request headers
Negotiated next protocol: 
Connection established
SSL/TLS handshake completed
Start checking connection
int shrpx::Http2Session::resume_data(shrpx::Http2DownstreamConnection*)
int shrpx::Http2Session::submit_priority(shrpx::Http2DownstreamConnection*, int32_t)
int shrpx::Http2Session::submit_rst_stream(int32_t, uint32_t)
int shrpx::Http2Session::submit_request(shrpx::Http2DownstreamConnection*, int32_t, const nghttp2_nv*, size_t, const nghttp2_data_provider*)
int shrpx::Http2Session::downstream_read_proxy()
int shrpx::Http2Session::initiate_connection()
N5shrpx12Http2SessionE
FivE
MN5shrpx12Http2SessionEFivE
St20_Simple_type_wrapperIMN5shrpx12Http2SessionEFivEE
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
?shrpx_downstream_queue.cc
link2 == link
shrpx::Downstream* shrpx::DownstreamQueue::remove_and_get_blocked(shrpx::Downstream*)
%s PID%d [%s%s%s] %s%s:%d%s %s
Failed to open accesslog file 
INFO
[1;30m
[%s] %s
[%s] %s (%s:%d)
%s PID%d [%s%s%s] %s
shrpx_log.cc
Failed to open errorlog file 
 HTTP/
[1;32m
[1;33m
[1;31m
NOTICE
WARN
FATAL
0123456789abcdef
</title><body><h1>
</h1><footer>
 at port 
</footer></body></html>
 nghttpx
<!DOCTYPE html><html lang="en"><title>
xn--
shrpx_ssl.cc
:depth=
[CLIENT_HANDLER:
TLS renegotiation started
, status_code=
, value=
cannot materialize session
Too long ALPN identifier: 
SSL_CTX_set_cipher_list 
BIO_new_file() failed: 
SSL_new() failed: 
getnameinfo() failed: 
Memached: cache session, id=
!req->canceled
!keys.empty()
encrypt session ticket key: 
session ticket key 
 not found
decrypt session ticket key: 
No certificate found
BIO_new failed
TLSv1.0
ssl_pem_passwd_cb: buf is too small 
client certificate verify error:num=
Memcached: session cache done.  key=
Memcached: failed to cache session key=
Memcached: returned status code 
Too long ALPN identifier list: 
EC_KEY_new_by_curv_name failed: 
PEM_read_bio_DHparams() failed: 
SSL_CTX_use_PrivateKey_file failed: 
SSL_CTX_use_certificate_file failed: 
SSL_CTX_check_private_key failed: 
Could not load trusted ca certificates from 
Could not load ca certificates from 
Could not load system trusted ca certificates: 
Could not load client private key from 
Could not load client certificate from 
Setting option TCP_NODELAY failed: errno=
Memcached: found cached session, id=
Memcached: get cached session, id=
session ticket key: RAND_bytes failed
Could not get X509 name object from the certificate.
Certificate verification failed: 
Certificate verification failed: hostname does not match
Could not read certificate file '
Could not read X509 structure from file '
We have multiple additional certificates (--subcert), but cert_tree is not given.  SNI may not work.
Failed to add sub certificate.
Failed to add default certificate.
int shrpx::ssl::{anonymous}::tls_session_new_cb(SSL*, SSL_SESSION*)
int shrpx::ssl::{anonymous}::ticket_key_cb(SSL*, unsigned char*, unsigned char*, EVP_CIPHER_CTX*, HMAC_CTX*, int)
*ZN5shrpx3ssl12_GLOBAL__N_118tls_session_new_cbEP6ssl_stP14ssl_session_stEUlPNS_16MemcachedRequestENS_15MemcachedResultEE_
*ZN5shrpx3ssl12_GLOBAL__N_118tls_session_get_cbEP6ssl_stPhiPiEUlPNS_16MemcachedRequestENS_15MemcachedResultEE_
nghttpx:tls-session-cache:
St22_Weak_result_type_implIPFvP6bio_stEE
St22_Weak_result_type_implIPFvP21stack_st_GENERAL_NAMEEE
St22_Weak_result_type_implIPFvP7x509_stEE
St17_Weak_result_typeIPFvP6bio_stEE
St17_Weak_result_typeIPFvP21stack_st_GENERAL_NAMEEE
St17_Weak_result_typeIPFvP7x509_stEE
St5_BindIFPFvP21stack_st_GENERAL_NAMEES1_EE
St5_BindIFPFvP7x509_stES1_EE
St5_BindIFPFvP6bio_stES1_EE
shrpx_worker.cc
group < dgrps_.size()
std::future_error: 
[WORKER:
WorkerEvent: client_fd=
, addrlen=
Too many connections >= 
ClientHandler creation failed
 created 
Graceful shutdown commencing
unknown event type 
Reopening log files: worker process (thread 
shrpx::DownstreamGroup* shrpx::Worker::get_dgrp(size_t)
*NSt13__future_base17_Async_state_implISt12_Bind_simpleIFZN5shrpx6Worker9run_asyncEvEUlvE_vEEvEE
*NSt13__future_base15_Deferred_stateISt12_Bind_simpleIFZN5shrpx6Worker9run_asyncEvEUlvE_vEEvEE
*St23_Sp_counted_ptr_inplaceINSt13__future_base17_Async_state_implISt12_Bind_simpleIFZN5shrpx6Worker9run_asyncEvEUlvE_vEEvEESaIS8_ELN9__gnu_cxx12_Lock_policyE2EE
*NSt6thread5_ImplISt12_Bind_simpleIFZNSt13__future_base17_Async_state_implIS1_IFZN5shrpx6Worker9run_asyncEvEUlvE_vEEvEC4EOS8_EUlvE_vEEEE
*NSt13__future_base12_Task_setterISt10unique_ptrINS_7_ResultIvEENS_12_Result_base8_DeleterEESt12_Bind_simpleIFZN5shrpx6Worker9run_asyncEvEUlvE_vEEvEE
*St23_Sp_counted_ptr_inplaceINSt6thread5_ImplISt12_Bind_simpleIFZNSt13__future_base17_Async_state_implIS2_IFZN5shrpx6Worker9run_asyncEvEUlvE_vEEvEC4EOS9_EUlvE_vEEEESaISF_ELN9__gnu_cxx12_Lock_policyE2EE
St11_Mutex_baseILN9__gnu_cxx12_Lock_policyE2EE
St16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE
NSt6thread10_Impl_baseE
NSt13__future_base13_State_baseV2E
NSt13__future_base7_ResultIvEE
NSt13__future_base21_Async_state_commonV2E
St19_Sp_make_shared_tag
shrpx_connect_blocker.cc
unblock downstream connection
connect failure, start sleeping 
`@shrpx_downstream_connection_pool.cc
gpool_.size() > group
void shrpx::DownstreamConnectionPool::remove_downstream_connection(shrpx::DownstreamConnection*)
std::unique_ptr<shrpx::DownstreamConnection> shrpx::DownstreamConnectionPool::pop_downstream_connection(size_t)
void shrpx::DownstreamConnectionPool::add_downstream_connection(std::unique_ptr<shrpx::DownstreamConnection>)
shrpx_connection.cc
tls: handshake write error
SSL/TLS session reused
cur->next
cur_pos == cur_last
tls: handshake read error
tls: handshake libssl error 
len == memchunks.rleft()
nghttpx-bio
TLSv1.2 and/or black listed cipher suite was negotiated. HTTP/2 must not be used.
Close connection due to TLS renegotiation
SSL_write: SSL_get_error returned 
SSL_read: SSL_get_error returned 
tls: handshake message is too large
tls: handshake is still in progress
void nghttp2::PeekMemchunks<Memchunk>::disable_peek(bool) [with Memchunk = nghttp2::Memchunk<16384ul>]
size_t nghttp2::Memchunks<Memchunk>::remove(void*, size_t) [with Memchunk = nghttp2::Memchunk<16384ul>; size_t = long unsigned int]
size_t nghttp2::PeekMemchunks<Memchunk>::remove(void*, size_t) [with Memchunk = nghttp2::Memchunk<16384ul>; size_t = long unsigned int]
shrpx_memcached_connection.cc
[MCONN:
socket() failed; errno=
connect() failed; errno=
memcached connect failed
connected to memcached server
recvbuf_.rleft() == 0
Time out
vector::_M_range_insert
Response has bad magic: 
, got 
totalbody is too large: got 
, want min 
buf.req == req.get()
Connecting to memcached server
Response received, but there is no in-flight request.
opcode in response does not match to the request: want 
zero length keylen expected: got 
response for GET does not have extra
totalbody is too short: totalbody 
response returned error status: 
int shrpx::MemcachedConnection::send_request()
int shrpx::MemcachedConnection::initiate_connection()
void shrpx::MemcachedConnection::disconnect()
shrpx_worker_process.cc
nghttpx:tls-ticket-key
Renew new ticket keys
!old_keys.empty()
failed to generate ticket key
ticket keys generation done
ticket_keys->keys.size() >= 1
 enc+dec: 
 dec: 
Could not change gid: 
Could not change uid: 
Still have root privileges?
Entering event loop
Failed to read data from ipc channel: errno=
IPC socket is closed.  Perform immediate shutdown.
Graceful shutdown signal received
Reopening log files: worker process (thread main)
Memcached: tls ticket key get request sent
static_cast<size_t>(EVP_CIPHER_key_length(ticket_key.cipher)) <= ticket_key.data.enc_key.size()
ticket_key.hmac_keylen <= ticket_key.data.hmac_key.size()
It is strongly recommended to specify --tls-ticket-key-cipher=aes-128-cbc (or tls-ticket-key-cipher=aes-128-cbc in configuration file) when --tls-ticket-key-file is used for the smooth transition when the default value of --tls-ticket-key-cipher becomes aes-256-cbc
Use internal session ticket key generator
Could not change supplementary groups: 
Memcached: tls ticket key value is too small: got 
Memcached: tls ticket key version: want 1, got 
Memcached: tls ticket key data is too small
Memcached: wrong tls ticket key size: want 
Memcached: too short tls ticket key payload: want 
int shrpx::{anonymous}::generate_ticket_key(shrpx::TicketKey&)
void shrpx::{anonymous}::renew_ticket_key_cb(ev_loop*, ev_timer*, int)
*ZN5shrpx12_GLOBAL__N_127memcached_get_ticket_key_cbEP7ev_loopP8ev_timeriEUlPNS_16MemcachedRequestENS_15MemcachedResultEE_
St14default_deleteIN5shrpx10TicketKeysEE
St19_Sp_counted_deleterIPN5shrpx10TicketKeysESt14default_deleteIS1_ESaIvELN9__gnu_cxx12_Lock_policyE2EE
St23_Sp_counted_ptr_inplaceIN5shrpx10TicketKeysESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE
203 Non-Authoritative Information
407 Proxy Authentication Required
416 Requested Range Not Satisfiable
431 Request Header Fields Too Large
505 HTTP Version Not Supported
511 Network Authentication Required
first == last || *first == ','
100 Continue
101 Switching Protocols
200 OK
201 Created
202 Accepted
204 No Content
205 Reset Content
206 Partial Content
300 Multiple Choices
301 Moved Permanently
302 Found
303 See Other
304 Not Modified
305 Use Proxy
307 Temporary Redirect
308 Permanent Redirect
400 Bad Request
401 Unauthorized
402 Payment Required
403 Forbidden
404 Not Found
405 Method Not Allowed
406 Not Acceptable
408 Request Timeout
409 Conflict
410 Gone
411 Length Required
412 Precondition Failed
413 Payload Too Large
414 URI Too Long
415 Unsupported Media Type
417 Expectation Failed
421 Misdirected Request
426 Upgrade Required
428 Precondition Required
429 Too Many Requests
500 Internal Server Error
501 Not Implemented
502 Bad Gateway
503 Service Unavailable
504 Gateway Timeout
:pat
:hos
expec
alt-sv
:metho
:schem
upgrad
traile
:statu
locatio
keep-aliv
user-agen
:authorit
cache-contro
content-lengt
http2-setting
accept-languag
accept-encodin
proxy-connectio
if-modified-sinc
transfer-encodin
x-forwarded-prot
http2.cc
token < HD_MAXIDX
HEAD
MERG
PURG
TRAC
MKCO
DELET
UNLOC
REPOR
NOTIF
MSEARC
OPTION
CONNEC
PROPFIN
CHECKOU
PROPPATC
MKCALENDA
MKACTIVIT
UNSUBSCRIB
*first == '='
*first == ';'
loadpolicy=
anchor=
rel=preload
std::pair<nghttp2::http2::LinkHeader, const char*> nghttp2::http2::{anonymous}::parse_next_link_header_once(const char*, const char*)
preload
rel="
void nghttp2::http2::index_header(nghttp2::http2::HeaderIndex&, int16_t, size_t)
shrpx_accept_handler.cc
acceptor: running out file descriptor; disable acceptor temporarily
shrpx_connection_handler.cc
[LISTEN:
Thread #
 joined
Start ocsp update for 
, fork() failed, errno=
, execve() faild, errno=
vector::_M_emplace_back_aux
Start ocsp update
ocsp query command for 
 failed: error=
, rstatus=
, status=
 finished successfully
Accepted connection. fd=
Too many connections >=
 times.
 seconds
ticket keys get done
workers_.size() == 0
Created worker thread #
Waiting for worker thread to join: n=
!(0 + ((ev_watcher *)(void *)(&ocsp_.rev))->active)
!(0 + ((ev_watcher *)(void *)(&ocsp_.chldev))->active)
Could not execute ocsp query command for 
Could not execute ocsp query command: 
Reading from ocsp query command failed: errno=
ocsp_.next < all_ssl_ctx_.size()
Dispatch connection to worker #
Sending graceful shutdown signal to worker
Memcached: could not get tls ticket; disable tls ticket
Memcached: tls ticket get failed, schedule next
Memcached: tls ticket get retry all failed 
Memcached: tls ticket get failed due to network error, retrying in 
Memcached: tls ticket get success
Memcached: tls ticket keys are empty; tls ticket disabled
void shrpx::ConnectionHandler::handle_ocsp_complete()
int shrpx::ConnectionHandler::start_ocsp_update(const char*)
int shrpx::ConnectionHandler::create_worker_thread(size_t)
*St22_Maybe_get_result_typeIZN5shrpx17ConnectionHandler17start_ocsp_updateEPKcEUlvE_vE
*St22_Weak_result_type_implIZN5shrpx17ConnectionHandler17start_ocsp_updateEPKcEUlvE_E
*St17_Weak_result_typeIZN5shrpx17ConnectionHandler17start_ocsp_updateEPKcEUlvE_E
*St5_BindIFZN5shrpx17ConnectionHandler17start_ocsp_updateEPKcEUlvE_vEE
St23_Sp_counted_ptr_inplaceISt6vectorIhSaIhEESaIS2_ELN9__gnu_cxx12_Lock_policyE2EE
shrpx_client_handler.cc
upstream_
PRI * HTTP/2.0
 in group 
 from pool
Downstream address group: 
 Create new one
http://
http/1.1
This is HTTP/1.1 connection, 
direct HTTP/2 connection
PROXY-protocol: Started
PROXY-protocol-v1: Finished, 
 bytes read
invalid client connection header
Pooling downstream connection DCONN:
Removing downstream connection DCONN:
Downstream connection pool is empty.
Reuse downstream connection DCONN:
but may be upgraded to HTTP/2 later.
No protocol negotiated. Fallback to HTTP/1.1
The negotiated next protocol: 
The negotiated protocol is not supported
PROXY-protocol-v1: No ending CR LF sequence found
PROXY-protocol-v1: PROXY version 1 ID not found
PROXY-protocol-v1: Bad PROXY protocol version 1 ID
PROXY-protocol-v1: INET protocol family not found
PROXY-protocol-v1: Unknown INET protocol family
PROXY-protocol-v1: Source address not found
PROXY-protocol-v1: Invalid source address
PROXY-protocol-v1: Destination address not found
PROXY-protocol-v1: Invalid destination address
PROXY-protocol-v1: Invalid source port
PROXY-protocol-v1: Invalid destination port
int shrpx::ClientHandler::upstream_write()
int shrpx::ClientHandler::upstream_read()
N5shrpx13ClientHandlerE
MN5shrpx13ClientHandlerEFivE
St20_Simple_type_wrapperIMN5shrpx13ClientHandlerEFivEE
shrpx_http_downstream_connection.cc
Idle connection timeout
Idle connection EOF
Detaching from DOWNSTREAM:
Attaching to DOWNSTREAM:
HTTP parser failure: 
downstream connect failed
!scheme.empty()
Cookie: 
X-Forwarded-For: 
Transfer-Encoding: chunked
X-Forwarded-Proto: 
virtual int shrpx::HttpDownstreamConnection::push_request_headers()
N5shrpx24HttpDownstreamConnectionE
shrpx_http2_downstream_connection.cc
downstream_->get_response_datalen() >= consumed
nghttp2_submit_priority() failed
Submit RST_STREAM for DOWNSTREAM:
nghttp2_submit_request() failed
, stream_id=
x-forwarded-for
trailers
x-forwarded-proto
virtual int shrpx::Http2DownstreamConnection::resume_read(shrpx::IOCtrlReason, size_t)
size_t nghttp2::Memchunks<Memchunk>::remove(void*, size_t) [with Memchunk = nghttp2::Memchunk<16384ul>; size_t = long unsigned int]
virtual int shrpx::Http2DownstreamConnection::push_request_headers()
N5shrpx25Http2DownstreamConnectionE
http_parser_pause
http_parser_parse_url
http_errno_description
http_errno_name
http_parser_execute
#$%&'
0123456789
abcdefghijklmnopqrstuvwxyz
^_`abcdefghijklmnopqrstuvwxyz
http-parser/http_parser.c
0 && "Unknown header_state"
0 && "Shouldn't get here."
parser->nread == 1
parser->flags & F_CHUNKED
parser->content_length == 0
0 && "unhandled state"
upgrade
proxy-connection
keep-alive
<unknown>
!"Unexpected state"
HPE_OK
HPE_CB_message_begin
HPE_CB_url
the on_url callback failed
HPE_CB_header_field
HPE_CB_header_value
HPE_CB_headers_complete
HPE_CB_body
the on_body callback failed
HPE_CB_message_complete
HPE_CB_status
the on_status callback failed
HPE_CB_chunk_header
HPE_CB_chunk_complete
HPE_INVALID_EOF_STATE
HPE_HEADER_OVERFLOW
HPE_CLOSED_CONNECTION
HPE_INVALID_VERSION
invalid HTTP version
HPE_INVALID_STATUS
invalid HTTP status code
HPE_INVALID_METHOD
invalid HTTP method
HPE_INVALID_URL
invalid URL
HPE_INVALID_HOST
invalid host
HPE_INVALID_PORT
invalid port
HPE_INVALID_PATH
invalid path
HPE_INVALID_QUERY_STRING
invalid query string
HPE_INVALID_FRAGMENT
invalid fragment
HPE_LF_EXPECTED
LF character expected
HPE_INVALID_HEADER_TOKEN
invalid character in header
HPE_INVALID_CONTENT_LENGTH
HPE_INVALID_CHUNK_SIZE
HPE_INVALID_CONSTANT
invalid constant string
HPE_INVALID_INTERNAL_STATE
HPE_STRICT
strict mode assertion failed
HPE_PAUSED
parser is paused
HPE_UNKNOWN
an unknown error occurred
DELETE
POST
CONNECT
OPTIONS
TRACE
COPY
MKCOL
MOVE
PROPFIND
PROPPATCH
UNLOCK
REBIND
UNBIND
REPORT
MKACTIVITY
CHECKOUT
MERGE
M-SEARCH
NOTIFY
UNSUBSCRIBE
PURGE
MKCALENDAR
((enum http_errno) (parser)->http_errno) == HPE_OK
parser->content_length != 0 && parser->content_length != (0x7fffffffffffffffLL * 2ULL + 1ULL)
((header_field_mark ? 1 : 0) + (header_value_mark ? 1 : 0) + (url_mark ? 1 : 0) + (body_mark ? 1 : 0) + (status_mark ? 1 : 0)) <= 1
((size_t) err) < (sizeof(http_strerror_tab) / sizeof((http_strerror_tab)[0]))
0 && "Attempting to pause parser in error state"
the on_message_begin callback failed
the on_header_field callback failed
the on_header_value callback failed
the on_headers_complete callback failed
the on_message_complete callback failed
the on_chunk_header callback failed
the on_chunk_complete callback failed
stream ended at an unexpected time
too many header bytes seen; overflow detected
data received after completed connection: close message
invalid character in content-length header
invalid character in chunk size header
encountered unexpected internal state
;*3$"
zPLR
}.@W.
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
HTTP/1.1 101 Switching Protocols
Connection: Upgrade
Upgrade: h2c
nghttpx.debug
7zXZ
(`wl`
8IFT}
N[*J)
b|EW0\
8Fo'
2p17
])]M
	l3o`X
.eia
o=kS
+>8oJ
b35@
cC=D-\s
"\zy
csQDO
[zVgh
YCe>R(
x+(Z
SLhn
CC~0
v2H^
kp1b
#u<s
6&kj
-?3G
S(*Srt
b]_w
Oxp=
N)=E
IA0y
n6lV
w2`S
>zx_
"ek|
M_!~
WwhT=
ee3y
0~eRW
AL1/_`
/rZ*
y.lAK
,8Oe
SX}9ES
H[}'
zz#@
#GAR(
	H;^|
`e-J
|U0#
p!&<
o5w{
E!Rp
c,2w
yzG%
(;%z
"y't
`_oA
eiLx
\a@o
_JR z{f
XwWZ
WnEChV4
a<S6
[e4~
mmYVK
H|U6
 hLq
9N^-D
K`NR
"{HGP
>qY-:W
Q!<I
BFHF
UthO
O'@{
%Ty?T
Mg[>
$M}p
,WSx9
Ksx~
,A2Y
fZ{f6
NFV2
.lh_
S~jY
y#H&
Hb _
:`ci-JW
	"s%C
;vY6
ey.H
sPr/
]E|:
I)F2
4:9n
9gpR
lBWj
,J$GH
:h3{
b`03
 kgI
WLp%Y#c
 Y?$
!4x;I
e#5l
5?.X
[~sf
~]w69R&
|t!C(:H
MC=m
ir6|
feZzqf
+I%8
z wm
n-;|
	viq
	"	y
waI8
wf0u
{xxf
%Gi@
"UZX
8"Oj
eSOG
*{C-U^
[p8\,z
:n2?7
`N58
Q>pb
k	.=
2K"|
Uk0E
R\@'
Idob
e#Nd"
sv+ga
5qTk
/p]?5%
y^~6
vMOu:u
<[*N#-
nZ~a7
L%E.T r
:dg=%
%~+1
Hr?w6
,L!]
h4FV
b&(,
U*xF
p*|h
k$Sgw	
9aoM
~UP}
qW't
<q<b
}u=c
99xo
C)lA
q~U,R
)8`x
jbhrt
Kee13
V+H<
_&dh
J(h^
PdFI
u+W!$h
#C(h
S]-`[>
J	W=
rYvJ
m+h(
U~Yb/'
m(o&
~}n=
+~X)
YC@9#L?
5(m]
Pe~:
bP=w)
F2Ny
:+B@h
|9ly|D
.zKe,xy
{jx<a
b`*P
kv!~
m(!}
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
