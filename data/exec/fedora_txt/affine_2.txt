4F3Z
__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
op_affine_get_type
gegl_operation_filter_get_type
affine_module_get_module
gegl_module_register_type
matrix3_identity
g_type_class_peek_parent
g_type_check_class_cast
gegl_operation_get_type
g_dgettext
g_param_spec_double
g_object_class_install_property
g_param_spec_string
g_param_spec_boolean
g_param_spec_int
g_object_unref
g_type_check_instance_cast
gegl_node_get_pad
gegl_pad_get_connections
gegl_connection_get_sink_node
g_type_check_instance_is_a
strcmp
matrix3_is_identity
gegl_buffer_copy
g_object_set
gegl_sampler_prepare
babl_format
g_object_get
gegl_buffer_get_extent
gegl_buffer_iterator_new
gegl_buffer_iterator_next
matrix3_copy
matrix3_invert
gegl_sampler_get
gegl_buffer_interpolation_from_string
gegl_sampler_type_from_interpolation
g_object_new
g_object_ref
gegl_operation_set_format
gegl_operation_get_source_node
gegl_operation_detect
matrix3_transform_point
floor
ceil
gegl_connection_get_source_node
g_assertion_message_expr
gegl_operation_source_get_bounding_box
matrix3_originate
matrix3_multiply
g_type_name
g_log
g_value_set_int
g_value_set_double
g_value_set_string
g_value_set_boolean
g_value_get_int
g_value_get_double
g_free
g_value_get_string
g_strdup
g_value_get_boolean
matrix3_equal
matrix3_determinant
matrix3_is_translate
matrix3_is_scale
gegl_module_query
gegl_module_register
rotate_get_type
scale_get_type
shear_get_type
translate_get_type
reflect_get_type
sincos
libgio-2.0.so.0
libgobject-2.0.so.0
libgmodule-2.0.so.0
libgthread-2.0.so.0
librt.so.1
libglib-2.0.so.0
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
affine.so
GLIBC_2.2.5
%zJ 
%rJ 
%jJ 
%bJ 
%ZJ 
%RJ 
%JJ 
%BJ 
%:J 
%2J 
%*J 
%"J 
%zI 
%rI 
%jI 
%bI 
%ZI 
%RI 
%JI 
%BI 
%:I 
%2I 
%*I 
%"I 
ATSubH
=hF 
=GD 
fff.
AUATSH
T$ H
T$0H
[A\A]
fffff.
ATUSH
H;(t
[]A\A]
[]A\A]
AWAVI
AUATUH
[]A\A]A^A_
D$PH
*T$8
*L$<
\$Pf
YT$h
D$0f
YD$X
XD$0
XD$`
XL$x
L$8f
l$DE
\$@E1
L$8H
D$ H
XD$P
XL$h
D$LH
D$pH
T$@A
L$XE9
XL$0
fff.
|$xI
H;(t
t$ H
\$`H
l$hL
d$pL
l$xL
t$PH
L$XI
fff.
T$ f
l$@L
H;(t-H
|$xH
H;(t0H
ffffff.
\$0H
\$0H
l$ L
d$(L
l$0H
l$ H
d$(L
l$0H
l$ H
d$(L
l$0H
l$ H
d$(L
l$0H
l$ H
d$(L
l$0H
\$ H
l$(L
d$0L
l$8L
t$@H
u:z8
ffffff.
\$XL
d$`H
ffff.
fffff.
D$HH
fffff.
|$ H
YL$@f
YD$0
YT$8
YL$@
YL$0
YD$8
L$@f
YD$8
YL$8
YL$(f
YD$(
D$(H
D$ H
D$(H
=], 
fffff.
fff.
AUATSH
[A\L
ffff.
\$ H
l$(L
d$0H
\$ H
l$(H
d$0H
fffff.
\$ H
l$(L
d$0H
fffff.
fff.
AUATSH
[A\L
\$ H
l$(L
d$0H
\$ H
l$(L
d$0H
\$ H
l$(L
d$0H
fffff.
=x% 
fff.
AUATSH
[A\L
\$ H
l$(L
d$0H
\$ H
l$(H
d$0H
fffff.
\$ H
l$(L
d$0H
fffff.
=(" 
fff.
AUATSH
[A\L
\$ H
l$(L
d$0H
\$ H
l$(H
d$0H
fffff.
\$ H
l$(L
d$0H
fffff.
fff.
AUATSH
[A\L
\$ H
l$(L
d$0H
\$ H
l$(H
d$0H
fffff.
\$ H
l$(L
d$0H
GeglOpPlugIn-affine
transform
X-coordinate of origin
gegl-0.0
Origin-x
origin-x
Y-coordinate of origin
Origin-y
origin-y
Filter
linear
filter
Hard edges
Hard-edges
hard-edges
Width of lanczos function
Lanczos-width
lanczos-width
output
buffer
RaGaBaA float
pixels
lanczos_width
format
input
connections
affine.c
IS_OP_AFFINE (source)
klass->create_matrix
property
affine.c:288
affine.c:320
Filter type (nearest, linear, lanczos, cubic)
%s: invalid %s id %u for "%s" of type `%s' in `%s'
get_bounding_box
get_source_matrix
get_invalidated_by_change
MbP?
GeglOpPlugIn-reflect
chant.h:162
chant.h:222
Direction vector's x component
Direction vector's y component
GeglOpPlugIn-rotate
Angle to rotate (clockwize)
degrees
Rotate the buffer around the specified origin.
?GeglOpPlugIn-scale
Scales the buffer.
Horizontal scale factor.
Vertical scale factor.
GeglOpPlugIn-shear
Shears the buffer.
Horizontal shear amount.
Vertical shear amount.
GeglOpPlugIn-translate
Horizontal translation.
Vertical translation.
Repositions the buffer (with subpixel precision).
affine.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.bss
.gnu_debuglink
