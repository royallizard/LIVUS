/lib64/ld-linux-x86-64.so.2
libgmp.so.3
__gmon_start__
_Jv_RegisterClasses
libnspr4.so
libnss3.so
libc.so.6
socket
strcpy
__printf_chk
exit
strncmp
puts
__stack_chk_fail
memchr
getpid
getnetbyname
strlen
memset
strstr
__errno_location
__fprintf_chk
stdout
fputc
memcpy
strtoul
malloc
__ctype_b_loc
stderr
system
getuid
strncat
fwrite
close
strchr
gethostbyname2
__cxa_finalize
fcntl
__sprintf_chk
__xstat
__libc_start_main
free
_edata
__bss_start
_end
__libc_csu_fini
__libc_csu_init
pfkey_lib_debug
pfkey_error_func
progname
pfkey_debug_func
pfkey_sock
GLIBC_2.4
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.2.5
ATSubH
AWAVAUATA
\$0E
d$DD
T$`H
T$(H
L$PH
t$XL
t$X1
t$8Mc
D$(1
D$$1
D$( D9D$D
L$0E
D$`H
T$8Mc
D$hK
T$PH
|$H1
D$PH
D$$H
T$8K
L$PH
L$DH
L$DL
t$pH
L$`H
MD$`9D$$
T$$Lcl$P
T$(H
L$HH
l$(I
D$$H
HcD$$D
t$HH
L$(I
L$$H
|$X1
L$hI
fff.
t$ H
fff.
l$ L
d$(L
l$0L
t$8L
|$@H
<8Hc
:u	H
ffff.
D$x1
T$xdH3
T$ A
T$ E1
IP6.ARPAfA
L+d$
T$ E1
T$ E1
IN-ADDR.A
ARPAfA
fff.
AVAUA
D$x1
T$xdH3
[]A\A]A^A_
ffff.
AWAVAUATI
D$H1
T$(L
t$0E1
8:t=f
T$HdH3
X[]A\A]A^A_
|$(I
|$0t
\$(H
l$0H
8?t4
u(L9
9.u1I
l$ L
t$(L
|$0H
l$ L
t$(L
|$0H
l$ L
t$(L
|$0H
l$ H
l$ H
d$ L
l$(L
t$0H
d$ H
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
AWAVI
AUATA
tb+D$
[]A\A]A^A_
[]A\A]A^A_
D$(1
dt/1
T$(dH3
iv)H
!tUH
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
D$tD
l$xD
l$yD
T$+H
t$|L
t$,A
T$,f
l$@H
\$8L
d$HL
l$PL
t$XL
|$`H
D$+H
T$,L
t$$H
T$$H
ffff.
D$81
D$PH
T$$f
L$(D
D$XD
L$*H
D$,H
D$ H
D$(H
T$8dH3
l$ H
d$(L
l$0L
t$8L
|$@H
T$_dH
AuwH
HcD$PI
D$PI
T$_A
t$`D
D$(f
fffff.
l$ H
d$(L
l$0L
t$8L
|$@H
l$ H
d$(L
l$0L
t$8L
|$@H
AVAUATI
[]A\A]A^A_
l$ L
t$(L
|$0H
T$@H
L$HH
T$@H
L$HH
l$`H
\$XL
d$hL
l$pL
t$xL
T$@H
L$HH
l$ H
t$ H
AVAUATUSH
!t]I
[]A\A]A^A_
ffffff.
ffff.
ffff.
C(H9
C8H9
ffffff.
l$ H
d$(L
l$0H
ffff.
l$0H
\$(L
d$8L
l$@L
t$HL
|$PH
AUATI
[]A\A]
[]A\A]
d$ L
l$(L
t$0H
ffffff.
t$0E
L$8E
L$HD
t$0D
L$8H
L$HD
D$@A
d$ D
l$`H
\$XL
d$hL
l$pL
t$xL
t$0E
L$8E
t$0D
L$8I
d$(D
T$ D
fffff.
AuqH
l$@D
T$0D
T$0D
L$8H
L$8H
2t#H
2t#H
AVAUI
D$Pt$H
L$HD
D$@L
L$HD
D$@H
L$8A
L$ D
L$PD
D$@H
H	D$P
[]A\A]A^A_
T$HH
t$HD
L$8H
t$HI
T$@1
L$(D
t$ H
D$P%
t$PH
t$PH
T$PH
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
u)L)
fffff.
D$(1
T$(dH3
l$ L
t$(L
|$0H
usage: Note: position of options and arguments is important!
usage: %s [ --debug ] [ --label <label> ] af1 dst1 spi1 proto1 [ af2 dst2 spi2 proto2 [ af3 dst3 spi3 proto3 [ af4 dst4 spi4 proto4 ] ] ]
usage: %s [ --debug ] [ --label <label> ] --said <SA1> [ <SA2> [ <SA3> [ <SA4> ] ] ]
        [ --debug ] is optional to any %s command.
        [ --label <label> ] is optional to any %s command.
argc=%d (%d incl. --debug option).
%s: --label option requires an argument.
...After check for --label option.
%s: NETKEY does not use the ipsec spigrp command. Use 'ip xfrm' instead.
%s: No spigrp - no IPsec support in kernel (are the modules loaded?)
...After check for no option to print /proc/net/ipsec_spigrp.
...After check for --help option.
"--version" option requested.
...After check for --version option.
processing %d args with --said flag.
...After check for --said option.
expecting 3 or more args with --said, got %d.
expecting 5 or more args without --said, got %d.
%s: Error, %s converting --sa argument:%s
%s: Address family %s not supported
%s: Error, %s converting %dth address argument:%s
processing %dth pfkey message.
processing %dth said of %dth pfkey message.
%s: Trouble building message header, error=%d.
setting x_satype proto=%d satype=%d
%s: Trouble building sa extension, error=%d.
%s: Trouble building address_d extension (%s), error=%d.
%s: Trouble building pfkey message, error=%d.
%s: pfkey write failed, returning %d with errno=%d.
usage: %s --help
usage: %s --version
usage: %s
--debug
"--debug" option requested.
--label
%s --label %s
using "%s" as a label.
/proc/net/pfkey
cat /proc/net/ipsec_spigrp
--help
"--help" option requested.
--version
%s, %s
--said
processing %d nspis.
processing spi #%d.
said[%d].dst=%s.
comp
%s: Badly formed proto: %s
%s: Badly formed spi: %s
inet
inet6
SA %d contains: 
proto = %d
spi = %08x
edst = %s
Opening pfkey socket.
:0:0:
<invalid>
illegal (non-DNS-name) character in name
unable to get temporary space for name
does not look numeric and name lookup failed
address-type mismatch from gethostbyname2!!!
address-type mismatch from getnetbyname!!!
non-hex field in IPv6 numeric address
field in IPv6 numeric address longer than 4 hex digits
illegal leading `:' in IPv6 numeric address
illegal trailing `:' in IPv6 numeric address
more than one :: in IPv6 numeric address
IPv6 numeric address ends prematurely
syntax error in IPv6 numeric address
extra garbage on end of IPv6 numeric address
incomplete IPv6 numeric address (internal error)
non-abbreviating empty field in IPv6 numeric address
internal error, tryhex called with bad length
?empty number in dotted-decimal address
?non-numeric component in dotted-decimal address
byte overflow in dotted-decimal address
?syntax error in dotted-decimal address
syntax error in dotted-decimal address
extra garbage on end of dotted-decimal address
non-ipv6 address may not contain `:'
does not appear to be either IPv4 or IPv6 numeric address
does not appear to be numeric address
unknown address family in tnatoaddr
invalid address family
not numeric
empty string
abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-_.
unknown % keyword
no @ in SA specifier
no SPI in SA specifier
no SPI found in SA specifier
%passthrough
tun0@0.0.0.0
%passthrough4
%passthrough6
tun0@::
%pass
int256@0.0.0.0
%drop
int257@0.0.0.0
%reject
int258@0.0.0.0
%hold
int259@0.0.0.0
%trap
int260@0.0.0.0
%trapsubnet
int261@0.0.0.0
string too short to be SA identifier
SA specifier lacks valid protocol prefix
unsigned-long overflow
unsupported number base
non-hex digit in hex number
hex number too long
non-digit in number
0123456789abcdef
%s: Trouble opening PF_KEY family socket with error: 
device does not exist.  See Openswan installation procedure.
Check permissions.  Should be 600.
You must be root to open this file.
Netlink not enabled OR KLIPS not loaded.
KLIPS is busy.  Most likely a serious internal error occured in a previous command.  Please report as much detail as possible to development team.
Invalid argument, KLIPS not loaded or check kernel log messages for specifics.
No kernel memory to allocate SA.
Algorithm support not available in the kernel.  Please compile in support.
SA already in use.  Delete old one first.
SA does not exist.  Cannot delete.
Unknown file open error %d.  Please report as much detail as possible to development team.
access denied.  
KLIPS not loaded or enabled.
Invalid argument, check kernel log messages for specifics.
device does not exist.  See FreeS/WAN installation procedure.
no room in kernel SAref table.  Cannot process request.
kernel SAref table internal error.  Cannot process request.
Unknown socket write error %d.  Please report as much detail as possible to development team.
No device?!?
pfkey_extensions_free
%x:%x:%x:%x:%x:%x:%x:%x-%x
pfkey_lib_debug:%s:Free extension %d (%zu)
pfkey_lib_debug:pfkey_msg_hdr_build:
pfkey_lib_debug:pfkey_msg_hdr_build:
pfkey_lib_debug:pfkey_msg_hdr_build: on_entry &pfkey_ext=0p%p pfkey_ext=0p%p *pfkey_ext=0p%p.
pfkey_lib_debug:pfkey_msg_hdr_build: why is pfkey_msg already pointing to something?
pfkey_lib_debug:pfkey_msg_hdr_build: msg type not set, must be non-zero..
pfkey_lib_debug:pfkey_msg_hdr_build: msg type too large:%d.
pfkey_lib_debug:pfkey_msg_hdr_build: satype %d > max %d
pfkey_lib_debug:pfkey_msg_hdr_build: memory allocation failed
pfkey_lib_debug:pfkey_msg_hdr_build: on_exit &pfkey_ext=0p%p pfkey_ext=0p%p *pfkey_ext=0p%p.
pfkey_lib_debug:pfkey_sa_build: spi=%08x replay=%d sa_state=%d auth=%d encrypt=%d flags=%d
pfkey_lib_debug:pfkey_sa_build: why is pfkey_sa already pointing to something?
pfkey_lib_debug:pfkey_sa_build: why is pfkey_sa already pointing to something?
pfkey_lib_debug:pfkey_sa_build: invalid exttype=%d.
pfkey_lib_debug:pfkey_sa_build: replay window size: %d -- must be 0 <= size <= 64
pfkey_lib_debug:pfkey_sa_build: auth=%d > SADB_AALG_MAX=%d.
pfkey_lib_debug:pfkey_sa_build: sa_state=%d exceeds MAX=%d.
pfkey_lib_debug:pfkey_sa_build: sa_state=%d is DEAD=%d is not allowed.
pfkey_lib_debug:pfkey_sa_build: SAref=%d must be (SAref == IPSEC_SAREF_NULL(%d) || SAref < IPSEC_SA_REF_TABLE_NUM_ENTRIES(%d)).
pfkey_lib_debug:pfkey_sa_build: memory allocation failed
pfkey_lib_debug:pfkey_sa_build: memory allocation failed
pfkey_lib_debug:pfkey_lifetime_build:
pfkey_lib_debug:pfkey_lifetime_build:
pfkey_lib_debug:pfkey_lifetime_build: why is pfkey_lifetime already pointing to something?
pfkey_lib_debug:pfkey_lifetime_build: why is pfkey_lifetime already pointing to something?
pfkey_lib_debug:pfkey_lifetime_build: invalid exttype=%d.
pfkey_lib_debug:pfkey_lifetime_build: memory allocation failed
pfkey_lib_debug:pfkey_lifetime_build: memory allocation failed
pfkey_lib_debug:pfkey_address_build: exttype=%d proto=%d prefixlen=%d
pfkey_lib_debug:pfkey_address_build: why is pfkey_address already pointing to something?
pfkey_lib_debug:pfkey_address_build: address is NULL
pfkey_lib_debug:pfkey_address_build: unrecognised ext_type=%d.
pfkey_lib_debug:pfkey_address_build: found address family AF_INET.
pfkey_lib_debug:pfkey_address_build: found address family AF_INET.
pfkey_lib_debug:pfkey_address_build: found address family AF_INET6.
pfkey_lib_debug:pfkey_address_build: found address family AF_INET6.
pfkey_lib_debug:pfkey_address_build: address->sa_family=%d not supported.
pfkey_lib_debug:pfkey_address_build: found address=%s.
pfkey_lib_debug:pfkey_address_build: address prefixes not supported yet.
pfkey_lib_debug:pfkey_address_build: successful created len: %d.
pfkey_lib_debug:pfkey_key_build:
pfkey_lib_debug:pfkey_key_build:
pfkey_lib_debug:pfkey_key_build: why is pfkey_key already pointing to something?
pfkey_lib_debug:pfkey_key_build: key_bits is zero, it must be non-zero.
pfkey_lib_debug:pfkey_key_build: unsupported extension type=%d.
pfkey_lib_debug:pfkey_key_build: memory allocation failed
pfkey_lib_debug:pfkey_ident_build:
pfkey_lib_debug:pfkey_ident_build:
pfkey_lib_debug:pfkey_ident_build: why is pfkey_ident already pointing to something?
pfkey_lib_debug:pfkey_ident_build: unsupported extension type=%d.
pfkey_lib_debug:pfkey_ident_build: ident_type must be non-zero.
pfkey_lib_debug:pfkey_ident_build: identtype=%d out of range.
pfkey_lib_debug:pfkey_ident_build: string required to allocate size of extension.
pfkey_lib_debug:pfkey_ident_build: memory allocation failed
pfkey_lib_debug:pfkey_sens_build:
pfkey_lib_debug:pfkey_sens_build:
pfkey_lib_debug:pfkey_sens_build: why is pfkey_sens already pointing to something?
pfkey_lib_debug:pfkey_sens_build: Sorry, I can't build exttype=%d yet.
pfkey_lib_debug:pfkey_prop_build:
pfkey_lib_debug:pfkey_prop_build:
pfkey_lib_debug:pfkey_prop_build: why is pfkey_prop already pointing to something?
pfkey_lib_debug:pfkey_prop_build: memory allocation failed
pfkey_lib_debug:pfkey_supported_build: why is pfkey_supported already pointing to something?
pfkey_lib_debug:pfkey_supported_build: why is pfkey_supported already pointing to something?
pfkey_lib_debug:pfkey_supported_build: unsupported extension type=%d.
pfkey_lib_debug:pfkey_supported_build: memory allocation failed
pfkey_lib_debug:pfkey_supported_build: memory allocation failed
pfkey_lib_debug:pfkey_spirange_build: why is pfkey_spirange already pointing to something?
pfkey_lib_debug:pfkey_spirange_build: why is pfkey_spirange already pointing to something?
pfkey_lib_debug:pfkey_spirange_build: minspi=%08x must be < maxspi=%08x.
pfkey_lib_debug:pfkey_spirange_build: minspi=%08x must be > 255.
pfkey_lib_debug:pfkey_spirange_build: memory allocation failed
pfkey_lib_debug:pfkey_spirange_build: memory allocation failed
pfkey_lib_debug:pfkey_x_kmprivate_build: why is pfkey_x_kmprivate already pointing to something?
pfkey_lib_debug:pfkey_x_kmprivate_build: why is pfkey_x_kmprivate already pointing to something?
pfkey_lib_debug:pfkey_x_kmprivate_build: Sorry, I can't build exttype=%d yet.
pfkey_lib_debug:pfkey_x_satype_build:
pfkey_lib_debug:pfkey_x_satype_build:
pfkey_lib_debug:pfkey_x_satype_build: why is pfkey_x_satype already pointing to something?
pfkey_lib_debug:pfkey_x_satype_build: SA type not set, must be non-zero.
pfkey_lib_debug:pfkey_x_satype_build: satype %d > max %d
pfkey_lib_debug:pfkey_x_satype_build: memory allocation failed
pfkey_lib_debug:pfkey_x_debug_build:
pfkey_lib_debug:pfkey_x_debug_build:
pfkey_lib_debug:pfkey_x_debug_build: why is pfkey_x_debug already pointing to something?
pfkey_lib_debug:pfkey_x_debug_build: tunnel=%x netlink=%x xform=%x eroute=%x spi=%x radij=%x esp=%x ah=%x rcv=%x pfkey=%x ipcomp=%x verbose=%x?
pfkey_lib_debug:pfkey_x_debug_build: memory allocation failed
pfkey_lib_debug:pfkey_x_nat_t_type_build:
pfkey_lib_debug:pfkey_x_nat_t_type_build:
pfkey_lib_debug:pfkey_x_nat_t_type_build: why is pfkey_x_nat_t_type already pointing to something?
pfkey_lib_debug:pfkey_x_nat_t_type_build: why is pfkey_x_nat_t_type already pointing to something?
pfkey_lib_debug:pfkey_x_nat_t_type_build: type=%d
pfkey_lib_debug:pfkey_x_nat_t_type_build: memory allocation failed
pfkey_lib_debug:pfkey_x_nat_t_type_build: memory allocation failed
pfkey_lib_debug:pfkey_x_nat_t_port_build:
pfkey_lib_debug:pfkey_x_nat_t_port_build:
pfkey_lib_debug:pfkey_x_nat_t_port_build: why is pfkey_x_nat_t_port already pointing to something?
pfkey_lib_debug:pfkey_x_nat_t_port_build: why is pfkey_x_nat_t_port already pointing to something?
pfkey_lib_debug:pfkey_nat_t_port_build: unrecognised ext_type=%d.
pfkey_lib_debug:pfkey_x_nat_t_port_build: ext=%d, port=%d
pfkey_lib_debug:pfkey_x_nat_t_port_build: memory allocation failed
pfkey_lib_debug:pfkey_x_nat_t_port_build: memory allocation failed
pfkey_lib_debug:pfkey_x_protocol_build: protocol=%u
pfkey_lib_debug:pfkey_x_protocol_build: bogus protocol pointer
pfkey_lib_debug:pfkey_build: memory allocation failed
pfkey_lib_debug:pfkey_msg_build: extensions[0] must be specified (struct sadb_msg).
pfkey_lib_debug:pfkey_msg_build: extensions[%d] needs %zu bytes
pfkey_lib_debug:pfkey_msg_build: memory allocation failed
pfkey_lib_debug:pfkey_msg_build: pfkey_msg=0p%p allocated %lu bytes, &(extensions[0])=0p%p
pfkey_lib_debug:ext type %d not permitted for %d/%d (build)
pfkey_lib_debug:pfkey_msg_build: copying %lu bytes from extensions[%u] (type=%d)
pfkey_lib_debug:pfkey_msg_build: Trouble parsing newly built pfkey message, error=%d.
pfkey_lib_debug:extensions for op: %d seen: %08llx required %08llx, missing: %08llx
pfkey_lib_debug:pfkey_ident_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_ident_parse: ident_type=%d out of range, must be less than %d.
pfkey_lib_debug:pfkey_ident_parse: res=%d, must be zero.
pfkey_lib_debug:pfkey_ident_parse: string padding must be zero, last is 0x%02x.
pfkey_lib_debug:pfkey_key_parse: expecting extension type IDENTITY_SRC or IDENTITY_DST, got %d.
pfkey_lib_debug:pfkey_x_saref_parse:
pfkey_lib_debug:pfkey_x_saref_parse:
pfkey_lib_debug:pfkey_x_saref_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_x_outif_parse:
pfkey_lib_debug:pfkey_x_outif_parse:
pfkey_lib_debug:pfkey_x_outif_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_x_protocol_parse:
pfkey_lib_debug:pfkey_x_protocol_parse:
pfkey_lib_debug:pfkey_x_protocol_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_protocol_parse: res=%d, must be zero.
pfkey_lib_debug:pfkey_x_debug_parse: enter
pfkey_lib_debug:pfkey_x_debug_parse: enter
pfkey_lib_debug:pfkey_x_debug_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_x_debug_parse: reserved[%d]=%d must be set to zero.
pfkey_lib_debug:pfkey_x_kmprivate_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_x_kmprivate_parse: reserved=%d must be set to zero.
pfkey_lib_debug:pfkey_x_kmprivate_parse: Sorry, I can't parse exttype=%d yet.
pfkey_lib_debug:pfkey_supported_parse: size wrong ext_len=%d, supported_ext_len=%d alg_ext_len=%d.
pfkey_lib_debug:pfkey_supported_parse: res=%d, must be zero.
pfkey_lib_debug:pfkey_supported_parse: alg[%d], id=%d, ivlen=%d, minbits=%d, maxbits=%d, res=%d, must be zero.
pfkey_lib_debug:pfkey_supported_parse: alg[%d], alg_id=%d > K_SADB_AALG_MAX=%d, fatal.
pfkey_lib_debug:pfkey_supported_parse: alg[%d], alg_id=%d > K_SADB_EALG_MAX=%d, fatal.
pfkey_lib_debug:pfkey_prop_parse: size wrong ext_len=%d, prop_ext_len=%d comb_ext_len=%d.
pfkey_lib_debug:pfkey_prop_parse: replay window size: %d -- must be 0 <= size <= 64
pfkey_lib_debug:pfkey_prop_parse: res[%d]=%d, must be zero.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_auth=%d > K_SADB_AALG_MAX=%d.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_auth_minbits=0, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_auth_maxbits=0, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_auth_minbits=%d > maxbits=%d, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_auth_minbits=%d != 0, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_auth_maxbits=%d != 0, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_encrypt_minbits=0, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_encrypt_maxbits=0, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_encrypt_minbits=%d > maxbits=%d, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_encrypt_minbits=%d != 0, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_encrypt_maxbits=%d != 0, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_soft_allocations=%d > hard_allocations=%d, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_soft_bytes=%Ld > hard_bytes=%Ld, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_soft_addtime=%Ld > hard_addtime=%Ld, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_soft_usetime=%Ld > hard_usetime=%Ld, fatal.
pfkey_lib_debug:pfkey_sens_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_sens_parse: Sorry, I can't parse exttype=%d yet.
pfkey_lib_debug:pfkey_key_parse: NULL pointer passed in.
pfkey_lib_debug:pfkey_key_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_key_parse: key length set to zero, must be non-zero.
pfkey_lib_debug:pfkey_key_parse: key length=%d does not agree with extension length=%d.
pfkey_lib_debug:pfkey_key_parse: res=%d, must be zero.
pfkey_lib_debug:pfkey_key_parse: expecting extension type AUTH or ENCRYPT, got %d.
pfkey_lib_debug:pfkey_key_parse: success, found len=%d exttype=%d(%s) bits=%d reserved=%d.
pfkey_lib_debug:pfkey_lifetime_parse:enter
pfkey_lib_debug:pfkey_lifetime_parse:enter
pfkey_lib_debug:pfkey_lifetime_parse: NULL pointer passed in.
pfkey_lib_debug:pfkey_lifetime_parse: NULL pointer passed in.
pfkey_lib_debug:pfkey_lifetime_parse: length wrong pfkey_lifetime->sadb_lifetime_len=%d sizeof(struct sadb_lifetime)=%d.
pfkey_lib_debug:pfkey_lifetime_parse: unexpected ext_type=%d.
pfkey_lib_debug:pfkey_lifetime_parse: life_type=%d(%s) alloc=%u bytes=%u add=%u use=%u.
pfkey_lib_debug:pfkey_x_satype_parse: enter
pfkey_lib_debug:pfkey_x_satype_parse: enter
pfkey_lib_debug:pfkey_x_satype_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_x_satype_parse: satype is zero, must be non-zero.
pfkey_lib_debug:pfkey_x_satype_parse: satype is zero, must be non-zero.
pfkey_lib_debug:pfkey_x_satype_parse: satype %d > max %d, invalid.
pfkey_lib_debug:pfkey_x_satype_parse: proto lookup from satype=%d failed.
pfkey_lib_debug:pfkey_x_satype_parse: reserved[%d]=%d must be set to zero.
pfkey_lib_debug:pfkey_x_satype_parse: len=%u ext=%u(%s) satype=%u(%s) res=%u,%u,%u.
pfkey_lib_debug:pfkey_spirange_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_spirange_parse: reserved=%d must be set to zero.
pfkey_lib_debug:pfkey_spirange_parse: minspi=%08x must be < maxspi=%08x.
pfkey_lib_debug:pfkey_spirange_parse: minspi=%08x must be > 255.
pfkey_lib_debug:pfkey_spirange_parse: ext_len=%u ext_type=%u(%s) min=%u max=%u res=%u.
pfkey_lib_debug:pfkey_sa_parse: NULL pointer passed in.
pfkey_lib_debug:pfkey_sa_parse: length wrong pfkey_sa->sadb_sa_len=%d sizeof(struct sadb_sa)=%d.
pfkey_lib_debug:pfkey_sa_parse: pfkey_sa->sadb_sa_auth=%d > K_SADB_AALG_MAX=%d.
pfkey_lib_debug:pfkey_sa_parse: state=%d exceeds MAX=%d.
pfkey_lib_debug:pfkey_sa_parse: state=%d is DEAD=%d.
pfkey_lib_debug:pfkey_sa_parse: replay window size: %d -- must be 0 <= size <= 64
pfkey_lib_debug:pfkey_sa_parse: unknown exttype=%d, expecting K_SADB_EXT_SA=%d or K_SADB_X_EXT_SA2=%d.
pfkey_lib_debug:pfkey_sa_parse: SAref=%d must be (SAref == IPSEC_SAREF_NULL(%d) || SAref < IPSEC_SA_REF_TABLE_NUM_ENTRIES(%d)).
pfkey_lib_debug:pfkey_sa_parse: successfully found len=%d exttype=%d(%s) spi=%08lx replay=%d state=%d auth=%d encrypt=%d flags=%d ref=%d.
pfkey_lib_debug:pfkey_address_parse: NULL pointer passed in.
pfkey_lib_debug:pfkey_address_parse: size wrong 1 ext_len=%d, adr_ext_len=%d, saddr_len=%d.
pfkey_lib_debug:pfkey_address_parse: res=%d, must be zero.
pfkey_lib_debug:pfkey_address_parse: unexpected ext_type=%d.
pfkey_lib_debug:pfkey_address_parse: found exttype=%u(%s) family=%d(AF_INET) address=%s proto=%u port=%u.
pfkey_lib_debug:pfkey_address_parse: found exttype=%u(%s) family=%d(AF_INET6) address=%s proto=%u port=%u.
pfkey_lib_debug:pfkey_address_parse: s->sa_family=%d not supported.
pfkey_lib_debug:pfkey_address_parse: size wrong 2 ext_len=%d, adr_ext_len=%d, saddr_len=%d.
pfkey_lib_debug:pfkey_address_parse: address prefixes not supported yet.
pfkey_lib_debug:pfkey_address_parse: successful.
pfkey_lib_debug:pfkey_address_parse: successful.
pfkey_lib_debug:pfkey_msg_parse: parsing message ver=%d, type=%d(%s), errno=%d, satype=%d(%s), len=%d, res=%d, seq=%d, pid=%d.
pfkey_lib_debug:pfkey_msg_parse: not PF_KEY_V2 msg, found %d, should be %d.
pfkey_lib_debug:pfkey_msg_parse: msg type not set, must be non-zero..
pfkey_lib_debug:pfkey_msg_parse: msg type=%d > max=%d.
pfkey_lib_debug:pfkey_msg_parse: satype %d conversion to proto failed for msg_type %d (%s).
pfkey_lib_debug:pfkey_msg_parse: satype %d(%s) conversion to proto gives %d for msg_type %d(%s).
pfkey_lib_debug:pfkey_msg_parse: satype is zero, must be non-zero for msg_type %d(%s).
pfkey_lib_debug:pfkey_msg_parse: errno set to %d.
pfkey_lib_debug:pfkey_msg_parse: remain=%d
pfkey_lib_debug:pfkey_msg_parse: remain %d less than ext len %d.
pfkey_lib_debug:pfkey_msg_parse: parsing ext type=%d(%s) remain=%d.
pfkey_lib_debug:pfkey_msg_parse: ext type %d(%s) invalid, K_SADB_EXT_MAX=%d.
pfkey_lib_debug:pfkey_msg_parse: ext type %d(%s) already seen.
pfkey_lib_debug:pfkey_msg_parse: ext type %d(%s) unknown, ignoring.
pfkey_lib_debug:ext type %d(%s) not permitted (parse)
pfkey_lib_debug:pfkey_msg_parse: remain=%d ext_type=%d(%s) ext_len=%d parsing ext 0p%p with parser %s.
pfkey_lib_debug:pfkey_msg_parse: extension parsing for type %d(%s) failed with error %d.
pfkey_lib_debug:pfkey_msg_parse: Extension %d(%s) parsed.
pfkey_lib_debug:pfkey_msg_parse: unexpected remainder of %d.
pfkey_lib_debug:required extensions missing.seen=%08llx.
pfkey_lib_debug:pfkey_msg_parse: required SADB_X_DELFLOW extensions missing: either %16llx must be present or %16llx must be present with SADB_X_SAFLAGS_CLEARFLOW set.
pfkey_lib_debug:pfkey_msg_parse: state=%d for add or update should be MATURE=%d.
pfkey_lib_debug:pfkey_msg_parse: auth alg is zero, must be non-zero for AH SAs.
pfkey_lib_debug:pfkey_msg_parse: AH handed encalg=%d, must be zero.
pfkey_lib_debug:pfkey_msg_parse: encrypt alg=%d is zero, must be non-zero for ESP=%d SAs.
pfkey_lib_debug:pfkey_msg_parse: ESP handed encNULL+authNONE, illegal combination.
pfkey_lib_debug:pfkey_msg_parse: encrypt alg=%d is zero, must be non-zero for COMP=%d SAs.
pfkey_lib_debug:pfkey_msg_parse: COMP handed auth=%d, must be zero.
pfkey_lib_debug:pfkey_msg_parse: spi=%08x must be > 255.
%x:%x:%x:%x:%x:%x:%x:%x
IPIP
COMP
UNKNOWN
pfkey_sa_parse
pfkey_lifetime_parse
pfkey_address_parse
pfkey_key_parse
pfkey_ident_parse
pfkey_sens_parse
pfkey_prop_parse
pfkey_supported_parse
pfkey_spirange_parse
pfkey_x_kmprivate_parse
pfkey_x_satype_parse
pfkey_x_ext_debug_parse
pfkey_x_ext_protocol_parse
pfkey_x_ext_nat_t_type_parse
pfkey_x_ext_nat_t_port_parse
pfkey_x_ext_outif_parse
pfkey_x_ext_saref_parse
unknown-ext
unknown-sadb-type
reserved
getspi
update
delete
acquire
register
expire
flush
dump
x-promisc
x-pchange
x-groupsa
x-addflow(eroute)
x-delflow(eroute)
x-debug
x-natt-new-mapping
x-plumbif
x-unplumbif
lifetime-current
lifetime-hard
lifetime-soft
source-address
destination-address
proxy-address
authentication-key
cipher-key
source-identity
destination-identity
sensitivity-label
proposal
supported-auth
supported-cipher
spi-range
X-kmpprivate
X-satype2
X-security-association
X-destination-address2
X-source-flow-address
X-dest-flow-address
X-source-mask
X-dest-mask
X-set-debug
X-ext-protocol
X-NAT-T-type
X-NAT-T-sport
X-NAT-T-dport
X-NAT-T-OA
X-plumbif
X-saref
unknown address family in anyaddr/unspecaddr
unknown address family in loopbackaddr
unknown address family in add_port
IPv4 address must be exactly 4 bytes
IPv6 address must be exactly 16 bytes
unknown address family in initaddr
0123456789abcdef
RCSID $Id: spigrp.c,v 1.51 2005/08/18 14:04:39 ken Exp $
0123456789ABCDEF
0123456789abcdef
$Id: pfkey_v2_build.c,v 1.53 2005/11/09 00:30:37 mcr Exp $
$Id: pfkey_v2_ext_bits.c,v 1.22 2005/05/11 01:45:31 mcr Exp $
$Id: pfkey_v2_parse.c,v 1.65 2005/04/06 17:46:05 mcr Exp $
spigrp.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.note.ABI-tag
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.interp
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rela.plt
.got.plt
.got
.text
