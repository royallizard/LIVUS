__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
ast_module_unregister
ast_unregister_application
ast_register_application2
ast_log
ast_audiohook_attach
ast_bridged_channel
ast_softhangup
pthread_mutex_lock
pthread_mutex_unlock
ast_module_register
ast_unregister_file_version
ast_register_file_version
ast_audiohook_read_frame
ast_write
ast_frame_free
__errno_location
strerror
ast_channel_datastore_find
ast_channel_datastore_remove
ast_datastore_free
ast_datastore_alloc
ast_channel_datastore_add
ast_channel_walk_locked
strlen
ast_walk_channel_by_name_prefix_locked
ast_walk_channel_by_exten_locked
memcpy
ast_check_hangup
option_verbose
ast_options
memset
ast_audiohook_init
ast_channel_start_silence_generator
ast_waitfor
ast_read
ast_goto_if_exists
option_debug
ast_debug_get_by_file
strtol
ast_channel_stop_silence_generator
ast_audiohook_detach
ast_audiohook_destroy
ast_verbose_get_by_file
__ast_verbose
ast_audiohook_write_frame
ast_deactivate_generator
ast_activate_generator
pbx_builtin_setvar_helper
__stack_chk_fail
pthread_mutexattr_init
pthread_mutexattr_settype
pthread_mutex_init
pthread_mutexattr_destroy
__snprintf_chk
ast_answer
ast_waitfordigit
ast_app_separate_args
pbx_builtin_getvar_helper
strcmp
strcat
strchr
strcasestr
__strncat_chk
__ctype_tolower_loc
ast_app_sayname
ast_get_channel_by_name_prefix_locked
ast_fileexists
ast_streamfile
ast_say_character_str
ast_say_digits
ast_waitstream
ast_channel_setoption
pthread_mutex_destroy
ast_app_parse_options
sscanf
ast_set_write_format
time
ast_config_AST_MONITOR_DIR
open
close
chanspy_opt_flags
chanspy_opt_args
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
GLIBC_2.2.5
GLIBC_2.3.4
GLIBC_2.3
GLIBC_2.4
%ze 
%re 
%je 
%be 
%Ze 
%Re 
%Je 
%Be 
%:e 
%2e 
%*e 
%"e 
%zd 
%rd 
%jd 
%bd 
%Zd 
%Rd 
%Jd 
%Bd 
%:d 
%2d 
%*d 
%"d 
=(d 
ATSubH
%\^ 
='^ 
fff.
fffff.
=ia 
ffff.
fffff.
l$ H
= Z 
thL9
[]A\A]A^A_
[]A\A]A^A_
AUATI
T$ H
[A\A]A^A_
AWAVAUATSH
spy-
1t<@
[A\A]A^A_
ffff.
AWAVAUI
\$7H
D$ H
[A\A]A^A_
d$7I
D$ H
AWAVAUI
ATSH
d$7I
D$ H
[A\A]A^A_
D$ H
Attaching %s to %s
app_chanspy.c
$Revision: 165892 $
write() failed: %s
DAHDI/pseudo
  == Spying on channel %s
ChanSpy
Chanspy
Got DTMF %c, goto context %s
SPY_CHANNEL
SPY_EXIT_CONTEXT
beep
SPYGROUP
default
%s/%d
Could Not Set Write Format.
%s/%s.%d.raw
app_chanspy
ExtenSpy
Unable to attach whisper audiohook to spyee %s. Whisper mode disabled!
Unable to attach barge audiohook on spyee %s. Barge mode disabled!
Exit by single digit did not work in chanspy. Extension %s does not exist in context %s
    -- Setting spy volume on %s to %d
  == Done Spying on channel %s
Volume factor must be a number between -4 and 4
Cannot open '%s' for recording
Listen to the audio of an active channel
This paragraph is copyright (c) 2006 by Digium, Inc. In order for your module to load, it must return this key via a function called "key".  Any code which includes this paragraph must be licensed under the GNU General Public License version 2 or later (at your option).  In addition to Digium's general reservations of rights, Digium expressly reserves the right to allow other parties to license this paragraph under different terms. Any use of Digium, Inc. trademarks or logos (including "Asterisk" or "Digium") without express written permission of Digium, Inc. is prohibited.
  ChanSpy([chanprefix][,options]): This application is used to listen to the
audio from an Asterisk channel. This includes the audio coming in and
out of the channel being spied on. If the 'chanprefix' parameter is specified,
only channels beginning with this string will be spied upon.
  While spying, the following actions may be performed:
    - Dialing # cycles the volume level.
    - Dialing * will stop spying and look for another channel to spy on.
    - Dialing a series of digits followed by # builds a channel name to append
      to 'chanprefix'. For example, executing ChanSpy(Agent) and then dialing
      the digits '1234#' while spying will begin spying on the channel
      'Agent/1234'. Note that this feature will be overriden if the 'd' option
       is used
  Note: The X option supersedes the three features above in that if a valid
        single digit extension exists in the correct context ChanSpy will
        exit to it. This also disables choosing a channel based on 'chanprefix'
        and a digit sequence.
  Options:
    b                      - Only spy on channels involved in a bridged call.
    B                      - Instead of whispering on a single channel barge in on both
                             channels involved in the call.
    d                      - Override the typical numeric DTMF functionality and instead
                             use DTMF to switch between spy modes.
                                     4 = spy mode
                                     5 = whisper mode
                                     6 = barge mode
    g(grp)                 - Only spy on channels in which one or more of the groups 
                             listed in 'grp' matches one or more groups from the
                             SPYGROUP variable set on the channel to be spied upon.
                             Note that both 'grp' and SPYGROUP can contain either a
                             single group or a colon-delimited list of groups, such
                             as 'sales:support:accounting'.
    n([mailbox][@context]) - Say the name of the person being spied on if that person has recorded
                             his/her name. If a context is specified, then that voicemail context will
                             be searched when retrieving the name, otherwise the "default" context
                             will be searched. If no mailbox is specified, then the channel name will
                             be used when searching for the name (i.e. if SIP/1000 is the channel being
                             spied on and no mailbox is specified, then "1000" will be used when searching
                             for the name).
    q                      - Don't play a beep when beginning to spy on a channel, or speak the
                             selected channel name.
    r[(basename)]          - Record the session to the monitor spool directory. An
                             optional base for the filename may be specified. The
                             default is 'chanspy'.
    s                      - Skip the playback of the channel type (i.e. SIP, IAX, etc) when
                             speaking the selected channel name.
    v([value])             - Adjust the initial volume in the range from -4 to 4. A
                             negative value refers to a quieter setting.
    w                      - Enable 'whisper' mode, so the spying channel can talk to
                             the spied-on channel.
    W                      - Enable 'private whisper' mode, so the spying channel can
                             talk to the spied-on channel but cannot listen to that
                             channel.
    o                      - Only listen to audio coming from this channel.
    X                      - Allow the user to exit ChanSpy to a valid single digit
                             numeric extension in the current context or the context
                             specified by the SPY_EXIT_CONTEXT channel variable. The
                             name of the last channel that was spied on will be stored
                             in the SPY_CHANNEL variable.
    e(ext)                 - Enable 'enforced' mode, so the spying channel can
                             only monitor extensions whose name is in the 'ext' : 
                             delimited list.
Listen to a channel, and optionally whisper into it
  ExtenSpy(exten[@context][,options]): This application is used to listen to the
audio from an Asterisk channel. This includes the audio coming in and
out of the channel being spied on. Only channels created by outgoing calls for the
specified extension will be selected for spying. If the optional context is not
supplied, the current channel's context will be used.
  While spying, the following actions may be performed:
    - Dialing # cycles the volume level.
    - Dialing * will stop spying and look for another channel to spy on.
  Note: The X option superseeds the two features above in that if a valid
        single digit extension exists in the correct context it ChanSpy will
        exit to it.
  Options:
    b                      - Only spy on channels involved in a bridged call.
    B                      - Instead of whispering on a single channel barge in on both
                             channels involved in the call.
    d                      - Override the typical numeric DTMF functionality and instead
                             use DTMF to switch between spy modes.
                                     4 = spy mode
                                     5 = whisper mode
                                     6 = barge mode
    g(grp)                 - Only spy on channels in which one or more of the groups 
                             listed in 'grp' matches one or more groups from the
                             SPYGROUP variable set on the channel to be spied upon.
                             Note that both 'grp' and SPYGROUP can contain either a
                             single group or a colon-delimited list of groups, such
                             as 'sales:support:accounting'.
    n([mailbox][@context]) - Say the name of the person being spied on if that person has recorded
                             his/her name. If a context is specified, then that voicemail context will
                             be searched when retrieving the name, otherwise the "default" context
                             will be searched. If no mailbox is specified, then the channel name will
                             be used when searching for the name (i.e. if SIP/1000 is the channel being
                             spied on and no mailbox is specified, then "1000" will be used when searching
                             for the name).
    q                      - Don't play a beep when beginning to spy on a channel, or speak the
                             selected channel name.
    r[(basename)]          - Record the session to the monitor spool directory. An
                             optional base for the filename may be specified. The
                             default is 'chanspy'.
    s                      - Skip the playback of the channel type (i.e. SIP, IAX, etc) when
                             speaking the selected channel name.
    v([value])             - Adjust the initial volume in the range from -4 to 4. A
                             negative value refers to a quieter setting.
    w                      - Enable 'whisper' mode, so the spying channel can talk to
                             the spied-on channel.
    W                      - Enable 'private whisper' mode, so the spying channel can
                             talk to the spied-on channel but cannot listen to that
                             channel.
    o                      - Only listen to audio coming from this channel.
    X                      - Allow the user to exit ChanSpy to a valid single digit
                             numeric extension in the current context or the context
                             specified by the SPY_EXIT_CONTEXT channel variable. The
                             name of the last channel that was spied on will be stored
                             in the SPY_CHANNEL variable.
extenspy_exec
common_exec
channel_spy
spy_generate
start_spying
chanspy_exec
a9c98e5d177805051735cb5b0b16b0a0
app_chanspy.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
