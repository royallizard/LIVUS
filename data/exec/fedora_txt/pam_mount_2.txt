tU>mnSU/
P`^B
__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
ERR_get_error
ERR_error_string
HX_basename
OpenSSL_add_all_ciphers
EVP_CIPHER_CTX_init
SSL_load_error_strings
fopen64
EVP_get_cipherbyname
fread
fclose
EVP_CIPHER_CTX_cleanup
ERR_free_strings
EVP_md5
strlen
EVP_BytesToKey
HXmc_meminit
HXmc_length
HXmc_memcat
HX_getl
HXmc_free
EVP_DecryptInit_ex
HXmc_trunc
EVP_DecryptUpdate
EVP_DecryptFinal_ex
__stack_chk_fail
__assert_fail
ioctl
HXmc_strcat
strcmp
strchr
__snprintf_chk
HXformat_add
__xstat64
stderr
__vfprintf_chk
__vsyslog_chk
malloc
memcpy
getpwnam
realloc
HXformat_aprintf
HXdeque_push
__errno_location
HXdeque_init
strtol
getegid
getgid
geteuid
getuid
setsid
chdir
setgid
setuid
readlink
strncpy
strncmp
kill
__lxstat64
HXdir_open
HXdir_read
strtoul
HX_chomp
__ctype_b_loc
HXdir_close
pam_sm_setcred
pam_sm_acct_mgmt
unsetenv
pam_get_user
pam_get_item
pam_strerror
pam_sm_authenticate
pam_set_data
mlock
pam_get_data
pam_set_item
pam_sm_chauthtok
memset
munlock
sigemptyset
sigaction
HXformat_init
fdopen
fscanf
waitpid
pam_sm_close_session
pam_sm_open_session
pam_getenv
xmlParseFile
xmlDocGetRootElement
xmlFreeDoc
getgrgid
strcasecmp
getgrnam
setmntent
getmntent
endmntent
HX_strsep
xmlGetProp
HXbtree_add
HXbtree_free
HXbtree_init
HXmc_strinit
HXdeque_del
HXdeque_free
perror
HXformat_free
calloc
HXbtrav_init
HXbtraverse
HXbtrav_free
HXbtree_find
usleep
write
setvbuf
fgets
HXbtree_get
rmdir
__realpath_chk
HX_dirname
mkdir
chown
seteuid
strncasecmp
pipe
fork
dup2
execvp
_exit
HXdeque_to_vec
libpam.so.0
libHX.so.14
libssl.so.7
libcrypto.so.7
libdl.so.2
libz.so.1
libxml2.so.2
libc.so.6
_edata
__bss_start
_end
pam_mount.so
LIBPAM_1.0
GLIBC_2.4
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.2.5
ATSubH
ffff.
AVAUI
ATUH
T$PH
[]A\A]A^A_
T$ H
l$@H
t$8H
D$ H
|$@I
L$@I
\$LH
\$LL
[]A\
fff.
[]A\
[]A\
D$81
D$8dH3
\$@H
l$HL
d$PL
l$XL
t$`H
t$HH
L$XL
D$`L
L$hH)
D$$0
D$(H
D$@H
D$0H
D$ H
D$@H
ffffff.
t$HH
L$XL
D$`L
L$hH)
D$$0
L$ H
D$(H
D$@H
D$0H
D$@H
ffffff.
ffff.
A;D$
fffff.
l$ L
t$(L
|$0H
ffffff.
 []A\A]A^
ffffff.
AVAUATUSH
l$0dH
T$ H
D$H%
t$(H
[]A\A]A^A_
|$ L
t$ L
D$H%
L$ H
D$H%
ffff.
AWAVAUI
|$(H
D$H1
|$(H
t$81
T$HdH3
X[]A\A]A^A_
D$ L
\$@L
ffffff.
d$(H
D$ H
\$8H
l$@L
d$HL
l$PH
T$ H
D$ H
\$ H
l$(L
d$0H
fff.
d$ L
l$(L
t$0H
AVAUATUS
[]A\A]A^A_
[]A\A]A^A_
ffffff.
d$ H
ffffff.
l$ H
[]A\A]
[]A\A]
ATUS
[]A\A]A^
tjrIA
[]A\A]A^
[]A\A]A^
AWAVAUI
ATUSH
[]A\A]A^A_
[]A\A]A^A_
ffff.
ATUH
[]A\
ffffff.
l$ H
l$ H
fffff.
l$ H
fff.
nosuid,nI
nosuid,n
AUATUS1
D$(1
odev
odev
D$@A
D$(dH3
8[]A\A]A^A_
\, H
[]A\
d$ L
l$(L
t$0H
L$ H
ffff.
d$ H
ATUSH
[]A\A]1
[]A\A]
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
tME1
[]A\A]
tLE1
<$1u
[]A\A]
[]A\
AWAVI
AUATUSH
|$ 1
[]A\A]A^A_
([]A\A]A^A_
ffffff.
t$ H
t$8H
t$8H
t$0I
t$8I
\$0H
D$PI9
t$8H
\$0H
AWAVAUI
ATUH
T$ H
[]A\A]A^A_
[]A\A]
[]A\
[]A\A]
AVAUATUSH
D$ H
D$8%
D$HH
[]A\A]A^A_
D$hH
|$hH
|$hL
D$`I
|$XL
t$`f
t$XL
t$`H
D$ I
|$@H
T$@H
|$0H
|$0H
|$0H
|$0H
T$8H
T$pH
t$|L
D$t1
|$pH
|$tH
|$|H
t$x1
T$ H
T$ H
|$0H
t$tE1
|$tH
t$p1
5	P 
|$$A
\$8H
l$@L
d$HL
l$PL
t$XL
|$`H
D$PI
l$ L
d$(L
l$0L
t$8L
|$@H
crypto.c
pam_mount(%s:%u) %s: %s
pt_fs_key != ((void *)0)
fs_key_cipher != ((void *)0)
fs_key_path != ((void *)0)
authtok != ((void *)0)
Salted__
failed to decrypt key
pam_mount(%s:%u) error opening %s
pam_mount(%s:%u) error getting cipher "%s"
pam_mount(%s:%u) error reading salt from encrypted filesystem key
pam_mount(%s:%u) magic string Salted__ not in filesystem key file
pam_mount(%s:%u) failed to hash system password
pam_mount(%s:%u) failed to read encrypted filesystem key from %s, or file empty.
failed to initialize decryption code
bad pad on end of encrypted file (wrong algorithm or key size?)
pam_mount(%s:%u) error closing file pointer
error cleaning up cipher context
decrypted_key
%.*s
DOMAIN_NAME
DOMAIN_USER
misc.c
file != ((void *)0)
format != ((void *)0)
command: %s
malloc: %s
user != ((void *)0)
set_myuid<pre>
HOME
set_myuid<post>
pam_mount(%s:%u) %s: Could not allocate %lu bytes
pam_mount(%s:%u) %s: Could not reallocate to %lu bytes
pam_mount(%s:%u) count string is NULL
pam_mount(%s:%u) count string is not valid
pam_mount(%s:%u) user %s could not be translated to UID
pam_mount(%s:%u) file %s could not be stat'ed
pam_mount(%s:%u) %s: (uid=%u, euid=%u, gid=%u, egid=%u)
pam_mount(%s:%u) error setting uid to 0
pam_mount(%s:%u) setting uid to user %s
pam_mount(%s:%u) could not get passwd entry for user %s
pam_mount(%s:%u) could not set gid to %ld
pam_mount(%s:%u) could not set uid to %ld
xstrdup
xrealloc
xmalloc
pmt_fileop_owns
pmt_fileop_exists
misc_warn
misc_log
/proc/%u/exe
%u(%s): %s -> %s
/proc
/proc/%s
/proc/%s/maps
/proc/%s/root
/proc/%s/cwd
/proc/%s/exe
/proc/%s/task
%s/%s
PATH
pam_mount.c
argc >= 0
argv[i] != ((void *)0)
use_first_pass
try_first_pass
soft_try_pass
nullok
debug
_PMT_DEBUG_LEVEL
pamh != ((void *)0)
pass != ((void *)0)
Password: 
pam_mount_system_authtok
operation != ((void *)0)
OPERATION
Session close
KRB5CCNAME
pam_mount_config
Session open
(null)
pam_mount(%s:%u) bad pam_mount option "%s"
pam_mount(%s:%u) could not get user
/etc/security/pam_mount.conf.xml
pam_mount(%s:%u) enter read_password
pam_mount(%s:%u) conv->conv(...): %s
pam_mount(%s:%u) pam_get_item: %s
retval != 0 || (pass != ((void *)0) && *pass != ((void *)0))
pam_mount(%s:%u) Clean global config (%d)
pam_mount(%s:%u) pam_mount 0.49: entering auth stage
pam_mount(%s:%u) could not get password from PAM system
pam_mount(%s:%u) error trying to read password
pam_mount(%s:%u) error trying to export password
pam_mount(%s:%u) saving authtok for session code (authtok=%p)
pam_mount(%s:%u) error trying to save authtok for session code
pam_mount(%s:%u) mlock authtok: %s
ret != 0 || pam_get_data(pamh, "pam_mount_system_authtok", &tmp) == 0
ret != 0 || tmp != ((void *)0)
pam_mount(%s:%u) clean system authtok=%p (%d)
pam_mount(%s:%u) error executing pmvarrun
pam_mount(%s:%u) error opening file: %s
pam_mount(%s:%u) error reading login count from pmvarrun
pam_mount(%s:%u) error waiting for child: %s
pam_mount(%s:%u) pmvarrun failed
pam_mount(%s:%u) pmvarrun says login count is %d
pam_mount(%s:%u) received order to close things
pam_mount(%s:%u) No volumes to umount
pam_mount(%s:%u) could not get user
pam_mount(%s:%u) could not chdir
pam_mount(%s:%u) %s seems to have other remaining open sessions
pam_mount(%s:%u) pam_mount execution complete
pam_mount(%s:%u) pam_mount 0.49: entering session stage
pam_mount(%s:%u) KRB5CCNAME setenv failed
pam_mount(%s:%u) error trying to save config structure
pam_mount(%s:%u) back from global readconfig
pam_mount(%s:%u) per-user configurations not allowed by pam_mount.conf.xml
pam_mount(%s:%u) going to readconfig user
pam_mount(%s:%u) back from user readconfig
pam_mount(%s:%u) %s does not exist or is not owned by user
pam_mount(%s:%u) no volumes to mount
pam_mount(%s:%u) error expanding configuration
pam_mount(%s:%u) error trying to retrieve authtok from auth code
pam_mount(%s:%u) about to perform mount operations
pam_mount(%s:%u) mount of %s failed
pam_mount(%s:%u) done opening session (ret=%d)
pam_sm_close_session
modify_pm_count
pam_sm_open_session
parse_pam_args
read_password
pam_sm_authenticate
pam_mount
rdconf1.c
pam_mount(%s:%u) %s
/etc/fstab
enable
allow
Error parsing allowed options
deny
Error parsing denied options
require
Could not get password entry
name
device
fsckloop device path too long
/dev/loop7
pam_mount password:
malloc
%s%s
remove
true
icase
pgrp
wait
term
kill
user
sgrp
invert
fstype
auto
noroot
encfs13
server
could not determine options
error parsing mount options
fskeycipher
fskeypath
cifsmount
cryptmount
fd0ssh
fsckloop
fsck
fusemount
fuseumount
lclmount
logout
luserconf
mkmountpoint
mntcheck
mntoptions
msg-authpw
msg-sessionpw
nfsmount
ncpmount
ncpumount
pmvarrun
smbmount
smbumount
unlosetup
volume
smbfs
//%(SERVER)/%(VOLUME)
%(MNTPT)
cifs
ncpfs
%(SERVER)/%(USER)
mount.fuse
%(before="-o " OPTIONS)
fusermount
%(SERVER):%(VOLUME)
%(FSTYPE)
%(before="-o" OPTIONS)
cryptumount
umount.crypt
%(FSCKTARGET)
%(before="-e" CIPHER)
%(before="-k" KEYBITS)
%(FSCKLOOP)
%(OPERATION)
pam_mount(%s:%u) getgrgid(%u) failed: %s
pam_mount(%s:%u) getgrnam("%s") failed: %s
pam_mount(%s:%u) could not open fstab
pam_mount(%s:%u) could not get %dth fstab field for %s
pam_mount(%s:%u) field of %d invalid
Tried to set <mntoptions allow=...> from user config
Error parsing required options
Tried to set <luserconf> from user config
<luserconf> is missing name= attribute
pam_mount(%s:%u) path to luserconf set to %s
Tried to set <fsckloop> from user config
Tried to set command from user config
reenter password for pam_mount:
/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin
pam_mount(%s:%u) Could not lookup account info for %s
pam_mount(%s:%u) config: empty or invalid content for <%s>
pam_mount(%s:%u) config: <and> does not have any child elements
pam_mount(%s:%u) config: <xor> must have exactly two child elements
pam_mount(%s:%u) config: <not> may only have one child element
pam_mount(%s:%u) getgrgid(%ld) failed: %s
pam_mount(%s:%u) config: unknown element <%s>
pam_mount(%s:%u) getpwnam: %s
pam_mount(%s:%u) The "invert" attribute is deprecated, support will be removed in next version.
pam_mount(%s:%u) You cannot have both simple and extended user control
could not determine mountpoint
username=%(USER),uid=%(USERUID),gid=%(USERGID)%(before="," OPTIONS)
pass-fd=0,volume=%(VOLUME)%(before="," OPTIONS)
%(MNTPT)%(before="-o" OPTIONS)
rdconf2.c
pam_mount(%s:%u) checking sanity of volume record (%s)
pam_mount(%s:%u) Illegal volume type %u (max is %u)
pam_mount(%s:%u) mount command not defined for this type
pam_mount(%s:%u) remote mount type specified without server
pam_mount(%s:%u) volume source is not defined
pam_mount(%s:%u) NCP volume definition missing user option
pam_mount(%s:%u) umount command not defined
pam_mount(%s:%u) fs_key_cipher defined without fs_key_path
pam_mount(%s:%u) fs_key_path defined without fs_key_cipher
pam_mount(%s:%u) checking sanity of luserconf volume record (%s)
pam_mount(%s:%u) You may not use wildcards in user-defined volumes
pam_mount(%s:%u) user-defined volume (%s), volume not owned by user
pam_mount(%s:%u) user-defined volume (%s), mountpoint not owned by user
pam_mount(%s:%u) option "%s" required
Luser volume for %s is missing options that are required by global <mntoptions>
pam_mount(%s:%u) option "%s" not allowed
Luser volume for %s has options that are not allowed per global <mntoptions>
pam_mount(%s:%u) all mount options denied, user tried to specify one
pam_mount(%s:%u) option "%s" denied
Luser volume for %s has options that are denied by global <mntoptions>
MNTPT
FSCKLOOP
FSTYPE
VOLUME
SERVER
USERUID
USERGID
OPTIONS
globalconf
fd >= 0
buf != ((void *)0)
pam_mount(%s:%u) %s
vinfo != ((void *)0)
password == ((void *)0)
umount errors:
/dev/mapper/
/etc/mtab
password != ((void *)0)
bind
/proc/filesystems
nodev
encryption
keybits
CIPHER
KEYBITS
losetup errors:
FSCKTARGET
PASSWD_FD
FSCK
pam_mount(%s:%u) getpwnam("%s") failed: %s
pam_mount(%s:%u) information for mount:
pam_mount(%s:%u) ----------------------
pam_mount(%s:%u) (defined by %s)
pam_mount(%s:%u) user:          %s
pam_mount(%s:%u) server:        %s
pam_mount(%s:%u) volume:        %s
pam_mount(%s:%u) mountpoint:    %s
pam_mount(%s:%u) options:       %s
pam_mount(%s:%u) fs_key_cipher: %s
pam_mount(%s:%u) fs_key_path:   %s
pam_mount(%s:%u) use_fstab:     %d
pam_mount(%s:%u) going to unmount
pam_mount(%s:%u) unmount of %s failed
pam_mount(%s:%u) {smb,ncp}umount not defined in pam_count.conf.xml
pam_mount(%s:%u) waiting for umount
pam_mount(%s:%u) could not remove %s
pam_mount(%s:%u) pmt::vol_to_dev: %s
pam_mount(%s:%u) could not open /etc/mtab
pam_mount(%s:%u) can't get realpath of volume %s: %s
pam_mount(%s:%u) realpath of volume "%s" is "%s"
pam_mount(%s:%u) checking to see if %s is already mounted at %s
pam_mount(%s:%u) could not determine uid from %s to make %s
pam_mount(%s:%u) could not chown %s to %s
pam_mount(%s:%u) getpwuid: %s
pam_mount(%s:%u) creating mount point %s
pam_mount(%s:%u) tried to create %s but failed
pam_mount(%s:%u) could not determine if %s is already mounted, failing
pam_mount(%s:%u) %s already seems to be mounted at %s, skipping
pam_mount(%s:%u) mount point %s does not exist (pam_mount not configured to make it)
pam_mount(%s:%u) proper mount command not defined in pam_mount.conf.xml
pam_mount(%s:%u) checking for encrypted filesystem key configuration
pam_mount(%s:%u) decrypting FS key using system auth. token and %s
pam_mount(%s:%u) about to start building mount command
pam_mount(%s:%u) fsck not defined in pam_mount.conf.xml
pam_mount(%s:%u) losetup not defined in pam_mount.conf.xml
pam_mount(%s:%u) error sending password to losetup
pam_mount(%s:%u) waiting for losetup
pam_mount(%s:%u) volume not a loopback (options: %s)
pam_mount(%s:%u) waiting for filesystem check
pam_mount(%s:%u) unlosetup not defined in pam_mount.conf.xml
pam_mount(%s:%u) waiting for losetup delete
pam_mount(%s:%u) error checking filesystem but will continue
pam_mount(%s:%u) error sending password to mount
pam_mount(%s:%u) waiting for mount
do_mount
mkmountpoint_real
check_filesystem
pipewrite
do_unmount
spawn.c
pam_mount(%s:%u) pipe(): %s
pam_mount(%s:%u) fork(): %s
pam_mount(%s:%u) execvp: %s
pam_mount(%s:%u) %s: sigaction: %s
pam_mount(%s:%u) saved_handler already grabbed, not overwriting
spawn_restore_sigchld
pam_mount.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
