__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
g_snprintf
gegl_operation_composer_get_type
g_type_module_register_type
__stack_chk_fail
g_slice_alloc0
gegl_operation_source_get_bounding_box
babl_format
gegl_operation_set_format
g_type_class_peek_parent
g_type_check_class_cast
gegl_operation_get_type
g_dgettext
gegl_operation_class_set_keys
g_param_spec_int
g_object_class_install_property
g_object_set_data_full
g_slice_free1
g_type_name
g_log
g_value_set_int
g_value_get_int
babl_format_get_n_components
g_return_if_fail_warning
g_malloc_n
g_malloc
g_malloc0_n
gegl_buffer_get
g_array_new
g_array_append_vals
rand
g_array_sort
gegl_buffer_set
g_free
g_array_free
gegl_chant_get_type
gegl_module_query
gegl_module_register
libgmodule-2.0.so.0
libgio-2.0.so.0
libgobject-2.0.so.0
libgthread-2.0.so.0
libglib-2.0.so.0
libm.so.6
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
matting-global.so
GLIBC_2.2.5
GLIBC_2.4
5b/ 
%d/ 
%b/ 
%b/ 
%b/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%j/ 
%r/ 
%r/ 
%r/ 
%r/ 
%z/ 
%z/ 
%z/ 
=y/ 
=9/ 
52/ 
=J+ 
\$Pf
T$0f
L$2H
D$ H
D$81
T$PH
ATUI
[]A\
tkATUH
 []A\
ATUStgH
 []A\
[]A\
AWAVAUATUSH
[]A\A]A^A_
D$XE
T$XH
|$ E1
HcD$
HcD$(H
|$pA
9L$X
d$ D9|$X
\$xD
LcL$ H
|$hD
D$(9D$,
T$dH
T$@E
D$PIc
t$8H
T$TO
D+L$
D+T$
|$8E
D$TL
\$,C
T$TD
HcD$(H
D+|$
D+L$
D$hE1
D$ H
d$,H
\$8I
\$0H
\$pL
\$@L
D$HA
uK9T$X~EA
u'A9
9D$(u
\$XD
t$(L
L$pH
t$xD
9D$X
\$xH
|$h1
D$\Mc
T$TM
D+\$,f
D$8E
D$PD+D$,E)
D$@D
D$HD
T$\E
GeglChantmatting-global.c
input
R'G'B' float
Y u8
R'G'B'A float
output
gegl-0.2
description
misc
categories
gegl:matting-global
name
Number of iterations
Iterations
chant-data
property
GEGL-../../gegl/gegl-chant.h
GEGL-matting-global.c
input_buf
aux_buf
output_buf
result
Given a sparse user supplied tri-map and an input image, create a foreground alpha matte. Set white as foreground, black as background for the tri-map. Everything else will be treated as unknown and filled in.
%s:%d: invalid %s id %u for "%s" of type '%s' in '%s'
babl_format_get_n_components (babl_format (FORMAT_INPUT )) == COMPONENTS_INPUT
babl_format_get_n_components (babl_format (FORMAT_AUX )) == COMPONENTS_AUX
babl_format_get_n_components (babl_format (FORMAT_OUTPUT)) == COMPONENTS_OUTPUT
matting_process
;*3$"
matting-global.so.debug
7zXZ
;NQq/
tOoO
DlR{
e/^=y
%J"'
UR%q
D_CY
f3y8
-`{Wl
ct/v
Nc.D
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.init
.plt
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.bss
.gnu_debuglink
.gnu_debugdata
