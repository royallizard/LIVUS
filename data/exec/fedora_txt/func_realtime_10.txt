__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
ast_custom_function_unregister
free
pthread_key_create
ast_log
__ast_app_separate_args
ast_autoservice_start
ast_update_realtime
ast_autoservice_stop
__stack_chk_fail
strlen
memcpy
ast_store_realtime
__snprintf_chk
pbx_builtin_setvar_helper
__ast_custom_function_register
__ast_custom_function_register_escalating
__ast_str_helper
ast_load_realtime_all
ast_destroy_realtime
ast_variables_destroy
pthread_once
pthread_getspecific
option_debug
ast_options
__ast_str_helper2
strcasecmp
ast_debug_get_by_module
calloc
pthread_setspecific
ast_register_file_version
ast_unregister_file_version
ast_module_register
ast_module_unregister
libpthread.so.0
libc.so.6
GLIBC_2.2.5
GLIBC_2.14
GLIBC_2.4
GLIBC_2.3.4
=A2 
5:2 
="/ 
5!, 
ATUI
D$(1
T$(dH3
0[]A\
L$ H
L$ H
AWAVAUATL
dH34%(
[A\A]A^A_]
5q' 
=*) 
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
dH34%(
AWAVAUATH
dH34%(
[A\A]A^A_]
AWAVAUATH
dH34%(
[A\A]A^A_]
AWAVI
AUATI
D$h1
5+" 
\$8H
L$hdH3
x[]A\A]A^A_
L$HA
T$XH
t$P1
|$H1
D$0H
D$8H
L$0L
D$(H
L$8L
t$`H
t$hL
AYAZ
T$XH
t$P1
|$H1
D$0H
T$8H
Syntax: %s(family,fieldmatch,matchvalue,updatecol) - missing argument!
Failed to update. Check the debug log for possible data repository related entries.
Failed to store. Check the debug log for possible data repository related entries.
Syntax: REALTIME_STORE(family,field1,field2,...,field30) - missing argument!
Failed to fetch/destroy. Realtime data is too large: need %zu, have %zu.
Syntax: REALTIME_DESTROY(family,fieldmatch[,matchvalue[,delim1[,delim2]]]) - missing argument!
Failed to fetch. Realtime data is too large: need %zu, have %zu.
Syntax: REALTIME(family,fieldmatch[,matchvalue[,delim1[,delim2]]]) - missing argument!
Memory Allocation Failure in function %s at line %d of %s
/builddir/build/BUILD/asterisk-13.9.1/include/asterisk/utils.h
/builddir/build/BUILD/asterisk-13.9.1/include/asterisk/threadstorage.h
Syntax: %s(family,fieldmatch,matchvalue%s) - missing argument!
Setting hash key %s to value %s
Read/Write/Store/Destroy values from a RealTime repository
This paragraph is copyright (c) 2006 by Digium, Inc. In order for your module to load, it must return this key via a function called "key".  Any code which includes this paragraph must be licensed under the GNU General Public License version 2 or later (at your option).  In addition to Digium's general reservations of rights, Digium expressly reserves the right to allow other parties to license this paragraph under different terms. Any use of Digium, Inc. trademarks or logos (including "Asterisk" or "Digium") without express written permission of Digium, Inc. is prohibited.
func_realtime.c
RTSTOREID
%s%s%s%s
,fieldname
REALTIME_FIELD
Comparing %s to %s
func_realtime
Match! Value is %s
~ODBCFIELDS~
$Revision$
REALTIME_DESTROY
REALTIME_STORE
REALTIME_HASH
REALTIME
function_realtime_read
function_realtime_store
function_realtime_readdestroy
function_realtime_write
_ast_calloc
ast_threadstorage_get
realtimefield_read
;*3$"
f450f61f60e761b3aa089ebed76ca8a5
func_realtime.so.debug
7zXZ
@8mv
#*51
_IX%
S!]X
-$us
!%	D
\H	(
{Uib
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.init
.plt
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.data
.bss
.gnu_debuglink
.gnu_debugdata
