__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
__ao2_ref
ast_bridge_technology_unregister
ast_bridge_queue_everyone_else
__ast_format_cap_alloc
ast_format_cap_append_by_type
__ast_bridge_technology_register
ast_channel_tech
ast_rtp_instance_get_glue
option_debug
ast_log
__ao2_cleanup
ast_options
ast_debug_get_by_module
ast_channel_has_hook_requiring_audio
ast_channel_name
ao2_container_count
ast_rtp_instance_dtmf_mode_get
ast_format_cap_count
ast_channel_rawreadformat
ast_format_cap_get_format_framing
ast_channel_rawwriteformat
ast_rtp_instance_get_engine
ast_format_cap_iscompatible
ast_format_cap_get_names
_Unwind_Resume
__gcc_personality_v0
__ao2_lock
ast_framehook_detach
__ao2_unlock
sched_yield
__ao2_trylock
ast_rtp_instance_set_bridged
ast_channel_get_bridge
__ao2_alloc
ast_framehook_attach
ast_register_file_version
ast_unregister_file_version
ast_module_register
ast_module_unregister
libgcc_s.so.1
libpthread.so.0
libc.so.6
__stack_chk_fail
GCC_3.0
GCC_3.3.1
GLIBC_2.0
GLIBC_2.1.3
GLIBC_2.4
a_&	
;D$$
9|$ 
T$$1
d$<[^_]
[^_]
9|$ 
[^_]
d$<[^_]
d$<[^_]
T$\1
D$\e3
d$l[^_]
D$8;E4
T$,e
D$\1
D$\e3
d$l[^_]
D$<;E4
UWVS
d$<[^_]
UWVS
d$<[^_]
Bridge '%s' can not use native RTP bridge as two channels are required
Bridge '%s' can not use native RTP bridge as channel '%s' has features which prevent it
Bridge '%s' can not use native RTP bridge as it was forbidden while getting details
Bridge '%s' can not use native RTP bridge as channel '%s' has DTMF hooks
Bridge '%s' can not use local native RTP bridge as local bridge or DTMF is not compatible
Channel codec0 = %s is not codec1 = %s, cannot native bridge in RTP.
Packetization differs between RTP streams (%d != %d or %d != %d). Cannot native bridge in RTP
Discontinued RTP bridging of '%s' and '%s' - media will flow through Asterisk core
Locally RTP bridged '%s' and '%s' in stack
Remotely bridged '%s' and '%s' - media will flow directly between them
This paragraph is copyright (c) 2006 by Digium, Inc. In order for your module to load, it must return this key via a function called "key".  Any code which includes this paragraph must be licensed under the GNU General Public License version 2 or later (at your option).  In addition to Digium's general reservations of rights, Digium expressly reserves the right to allow other parties to license this paragraph under different terms. Any use of Digium, Inc. trademarks or logos (including "Asterisk" or "Digium") without express written permission of Digium, Inc. is prohibited.
bridge_native_rtp.c
bridge_native_rtp
bridge_channel->chan
bc0->chan
bc1->chan
bridge
$Revision: 427583 $
Native RTP bridging module
native_rtp_bridge_start
native_rtp_framehook
native_rtp_bridge_framehook_attach
native_rtp_bridge_stop
native_rtp_bridge_framehook_detach
native_rtp_bridge_compatible
;*2$"
zPLR
d10568311aa53ffbe368f9bd67b07735
bridge_native_rtp.so.debug
7zXZ
x5)$
C Z{
((VCz+6\
N?p~6
*2Xe
uk\|
|2[1
p\I4
E1FD
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
