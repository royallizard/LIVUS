tdp@
__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
value_get_as_float
value_new_float
value_new_error_NUM
gnm_range_skew_pop
float_range_function
gnm_range_kurtosis_m3_pop
gnm_range_var_pop
gnm_range_var_est
gnm_range_skew_est
gnm_range_stddev_pop
gnm_range_stddev_est
gnm_range_mode
go_range_min
go_range_median_inter_sorted
go_range_max
gnm_range_kurtosis_m3_est
gnm_range_harmonic_mean
gnm_range_geometric_mean
go_range_devsq
go_range_average
gnm_range_avedev
gnm_range_rsq_pop
float_range_function2
gnm_range_covar
gnm_range_correl_pop
value_release
g_free
g_malloc0_n
gnm_expr_eval
value_new_cellrange
value_new_error_VALUE
gnm_cellref_make_abs
g_return_if_fail_warning
value_get_as_int
function_iterate_argument_values
value_new_int
gnm_range_product
go_range_sum
random_laplace_pdf
sqrt
go_fake_floor
value_get_as_checked_bool
dgeom
pgeom
random_exppow_pdf
collect_floats_value
pnorm
value_new_error_DIV0
dweibull
pweibull
value_new_error_NA
g_memdup
go_linear_regression
g_malloc_n
value_new_array
value_array_set
value_get_as_bool
go_regression_stat_new
go_regression_stat_destroy
go_fake_ceil
go_range_fractile_inter_sorted
dpois
ppois
permut
go_pow10
go_fake_trunc
qnorm
dnorm
dnbinom
value_area_fetch_x_y
value_area_get_height
value_area_get_width
value_new_error_REF
g_malloc
g_malloc0
go_logarithmic_regression
plnorm
qlnorm
go_logarithmic_fit
go_exponential_regression
dhyper
phyper
collect_float_pairs
qgamma
dgamma
pgamma
value_new_array_non_init
float_range_function2d
atanh
dexp
pexp
qbinom
pchisq
qchisq
dcauchy
pcauchy
pbinom2
dbinom
pbinom
qbeta
pbeta
range_sort
log1p
go_plugin_depends
go_plugin_header
stat_functions
libm.so.6
libc.so.6
_edata
__bss_start
_end
plugin.so
GLIBC_2.1.3
GLIBC_2.0
[^_]
[^_]
[^_]
d$ [^]
d$ [^]
z<uB
zXuV
d$ [^]
d$ [^]
d$0[^]
d$0[^]
d$0[^]
d$@[^]
d$@[^]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$$[]
d$,[^_]
Fu[1
d$l[^_]
d$l[^_]
[^_]
d$4[]
d$4[]
d$0[^]
d$0[^]
d$0[^]
d$0[^]
d$0[^]
d$0[^]
d$ [^]
d$ [^]
d$4[]
d$4[]
d$4[]
d$4[]
d$@[^]
d$@[^]
d$@[^]
d$0[^]
d$0[^]
d$\[^_]
d$L[^_]
d$$[]
d$P[^]
d$P[^]
d$P[^]
z?uE
d$@[^]
d$@[^]
d$41
d$41
d$41
d$@[^]
d$@[^]
d$@[^]
d$ [^]
d$ [^]
d$l[^_]
d$$[]
d$$[]
d$@[^]
d$@[^]
d$@[^]
d$@[^]
d$@[^]
d$@[^]
d$@[^]
d$@[^]
d$@[^]
[^_]
d$,[^_]
d$\[^_]
t&9E
d$\[^_]
[^_]
[^_]
[^_]
[^_]
d$@[^]
d$@[^]
d$@[^]
d$@[^]
8Ft=1
[^_]
[^_]
d$`[^]
d$@[^]
d$@[^]
d$P[^]
d$P[^]
d$P[^]
z"u 
d$@[^]
d$@[^]
[^_]
d$0[^]
d$@[^]
d$@[^]
d$@[^]
d$@[^]
d$@[^]
d$@[^]
d$\[^_]
d$\[^_]
d$0[^]
d$0[^]
d$0[^]
d$0[^]
d$@[^]
d$@[^]
d$@[^]
d$@[^]
d$@[^]
d$P[^]
d$P[^]
d$P[^]
z`un
z|uz
d$\[^_]
d$\[^_]
d$\[^_]
i == argc
goffice
gnumeric
1.10.11
adtest
sftest
cvmtest
lkstest
avedev
average
averagea
bernoulli
betadist
fff|ff
betainv
fffb
binom.dist.range
fff|f
cauchy
chidist
chiinv
chitest
confidence
correl
count
counta
covar
critbinom
devsq
expondist
fdist
finv
fisher
fisherinv
forecast
frequency
gammadist
gammainv
geomean
growth
A|AAb
harmean
hypgeomdist
ffff|b
intercept
kurt
large
linest
A|Abb
logest
logfit
loginv
lognormdist
logreg
maxa
mina
mode
negbinomdist
norminv
normsdist
normsinv
pearson
percentile
percentrank
permut
poisson
prob
AAf|f
quartile
fr|b
rank.avg
slope
small
standardize
ssmedian
stdev
stdeva
stdevp
stdevpa
steyx
skew
tdist
tinv
trend
trimmean
ttest
rrff
vara
varp
varpa
weibull
ztest
exppowdist
kurtp
landau
laplace
logistic
pareto
rayleigh
rayleightail
skewp
subtotal
cronbach
permutationa
x:array of sample values
CHITEST,ADTEST,LKSTEST,SFTEST
CHITEST,ADTEST,SFTEST,CVMTEST
wiki:en:Lilliefors_test
number1:first value
number2:second value
STDEV
SUM, COUNT
wiki:en:Arithmetic_mean
wolfram:ArithmeticMean.html
AVERAGE
k:integer
p:probability of success
=BERNOULLI(0,0.5)
RANDBERNOULLI
x:number
alpha:scale parameter
beta:scale parameter
=BETADIST(0.12,2,3)
BETAINV
p:probability
=BETAINV(0.45,1.6,1)
BETADIST
n:number of successes
trials:number of trials
=BINOMDIST(3,5,0.8,0)
start:start of the interval
=BINOM.DIST.RANGE(5,0.8,3,4)
BINOMDIST,R.PBINOM
=CAUCHY(0.43,1,TRUE)
RANDCAUCHY
=CHIDIST(5.3,2)
CHIINV,CHITEST
=CHIINV(0.98,7)
CHIDIST,CHITEST
actual_range:observed data
CHIDIST,CHIINV
alpha:significance level
size:sample size
=CONFIDENCE(0.05,1,33)
array1:first data set
array2:second data set
COVAR,FISHER,FISHERINV
wolfram:Covariance.html
Then COUNT(A1:A5) equals 5.
Then COUNTA(A1:A5) equals 5.
array2:set data set
CORREL,FISHER,FISHERINV
wiki:en:Covariance
=CRITBINOM(10,0.5,0.75)
BINOMDIST
y:scale parameter
=EXPONDIST(2,4,0)
=FDIST(2,5,5)
=FINV(0.2,2,4)
FDIST
FISHER:Fisher transformation
=FISHER(0.332)
FISHERINV,ATANH
=FISHERINV(2)
FISHER,TANH
known_ys:known y-values
known_xs:known x-values
INTERCEPT,TREND
FREQUENCY:frequency table
data_array:data values
FDIST,FINV
=GAMMADIST(1,2,3,0)
GAMMAINV
=GAMMAINV(0.34,2,4)
GAMMADIST
GEOMEAN:geometric mean
wiki:en:Geometric_mean
wolfram:GeometricMean.html
LOGEST,GROWTH,TREND
HARMEAN:harmonic mean
wiki:en:Harmonic_mean
wolfram:HarmonicMean.html
x:number of successes
n:sample size
N:population size
=HYPGEOMDIST(1,2,3,10)
BINOMDIST,POISSON
FORECAST,TREND
AVERAGE,VAR,SKEW,KURTP
data:data set
k:which value to find
LOGEST,TREND
LOGREG,LINEST,LOGEST
mean:mean
stddev:standard deviation
=LOGINV(0.5,2,3)
EXP,LN,LOG,LOG10,LOGNORMDIST
=LOGNORMDIST(3,1,2)
LOGFIT,LINEST,LOGEST
Then MAX(A1:A5) equals 40.1.
MIN,ABS
Then MAXA(A1:A5) equals 40.1.
MAX,MINA
MEDIAN:median of a data set
wiki:en:Median
Then MIN(A1:A5) equals 11.4.
MAX,ABS
Then MINA(A1:A5) equals 0.
MIN,MAXA
Then MODE(A1:A5) equals 11.4.
AVERAGE,MEDIAN
wiki:en:Mode_(statistics)
wolfram:Mode.html
f:number of failures
p:probability of a success
=NEGBINOMDIST(2,5,0.55)
mean:mean of the distribution
=NORMDIST(2,1,2,0)
=NORMINV(0.76,2,3)
=NORMSDIST(2)
wiki:en:Normal_distribution
p:given probability
=NORMSINV(0.2)
array1:first component values
array:data points
QUARTILE
array:range of numeric values
x:data point to be ranked
n:size of the base set
=PERMUT(7,3)
COMBIN
x:number of events
=POISSON(3,6,0)
NORMDIST,WEIBULL
x_range:possible values
BINOMDIST,CRITBINOM
ref:list of numbers
PERCENTRANK,RANK.AVG
PERCENTRANK,RANK
STDEV,STDEVPA
x:value
=STANDARDIZE(3,2,4)
array:data set
area1:first cell area
area2:second cell area
wiki:en:Standard_deviation
STDEV,STDEVA,STDEVPA
STDEVA,STDEVP
PEARSON,RSQ,SLOPE
AVERAGE,VAR,SKEWP,KURT
tails:1 or 2
=TDIST(2,5,1)
=TDIST(-2,5,1)
=TDIST(0,5,2)
TINV,TTEST
=TINV(0.4,32)
TDIST,TTEST
LINEST
VARP,STDEV,VARA
wiki:en:Variance
wolfram:Variance.html
VAR,VARPA
AVERAGE,DVAR,DVARP,STDEV,VAR
VARA,VARP
=WEIBULL(3,2,4,0)
ref:data set (sample)
x:population mean
b:scale parameter
=EXPPOWDIST(0.4,1,2)
RANDEXPPOW
k:number of trials
=GEOMDIST(2,10.4,TRUE)
RANDGEOM
AVERAGE,VARP,SKEWP,KURT
=LANDAU(0.34)
RANDLANDAU
a:mean
=LAPLACE(0.4,1)
RANDLAPLACE
=LOGISTIC(0.4,1)
RANDLOGISTIC
a:exponent
=PARETO(0.6,1,2)
RANDPARETO
sigma:scale parameter
=RAYLEIGH(0.4,1)
RANDRAYLEIGH
a:lower limit
=RAYLEIGHTAIL(0.6,0.3,1)
RANDRAYLEIGHTAIL
AVERAGE,VARP,SKEW,KURTP
ref1:first value
ref2:second value
COUNT,SUM
CRONBACH:Cronbach's alpha
ref1:first data set
ref2:second data set
x:total number of objects
y:number of selected objects
=PERMUTATIONA(2,7)
=PERMUTATIONA(2.3,7.6)
=PERMUTATIONA(0,0)
POWER
munG
gnumeric_cronbach
ADTEST:Anderson-Darling Test of Normality
This function returns an array with the first row giving the p-value of the Anderson-Darling Test, the second row the test statistic of the test, and the third the number of observations in the sample.
If there are less than 8 sample values, ADTEST returns #VALUE!
CHITEST,CVMTEST,LKSTEST,SFTEST
wiki:en:Anderson
Darling_test
SFTEST:Shapiro-Francia Test of Normality
This function returns an array with the first row giving the p-value of the Shapiro-Francia Test, the second row the test statistic of the test, and the third the number of observations in the sample.
If there are less than 5 or more than 5000 sample values, SFTEST returns #VALUE!
CHITEST,ADTEST,LKSTEST,CVMTEST
CVMTEST:Cram
r-von Mises Test of Normality
This function returns an array with the first row giving the p-value of the Cram
r-von Mises Test, the second row the test statistic of the test, and the third the number of observations in the sample.
If there are less than 8 sample values, CVMTEST returns #VALUE!
wiki:en:Cram
von-Mises_criterion
LKSTEST:Lilliefors (Kolmogorov-Smirnov) Test of Normality
This function returns an array with the first row giving the p-value of the Lilliefors (Kolmogorov-Smirnov) Test, the second row the test statistic of the test, and the third the number of observations in the sample.
If there are less than 5 sample values, LKSTEST returns #VALUE!
AVEDEV:average of the absolute deviations of a data set
This function is Excel compatible.
Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, 21.3, 25.9, and 40.1.
Then AVEDEV(A1:A5) equals 7.84.
AVERAGE:average of all the numeric values and cells
Then AVERAGE(A1:A5) equals 23.2.
AVERAGEA:average of all the values and cells
Numbers, text and logical values are included in the calculation too. If the cell contains text or the argument evaluates to FALSE, it is counted as value zero (0). If the argument evaluates to TRUE, it is counted as one (1). Note that empty cells are not counted.
Let us assume that the cells A1, A2, ..., A5 contain numbers and strings 11.4, 17.3, "missing", 25.9, and 40.1.
Then AVERAGEA(A1:A5) equals 18.94.
BERNOULLI:probability mass function of a Bernoulli distribution
If @{k} != 0 and @{k} != 1 this function returns a #NUM! error.
If @{p} < 0 or @{p} > 1 this function returns a #NUM! error.
BETADIST:cumulative distribution function of the beta distribution
a:optional lower bound, defaults to 0
b:optional upper bound, defaults to 1
If @{x} < @{a} or @{x} > @{b} this function returns a #NUM! error.
If @{alpha} <= 0 or @{beta} <= 0, this function returns a #NUM! error.
If @{a} >= @{b} this function returns a #NUM! error.
BETAINV:inverse of the cumulative distribution function of the beta distribution
BINOMDIST:probability mass of cumulative distribution function of the binomial distribution
p:probability of success in each trial
cumulative:whether to evaluate the mass function or the cumulative distribution function
If @{n} or @{trials} are non-integer they are truncated.
If @{n} < 0 or @{trials} < 0 this function returns a #NUM! error.
If @{n} > @{trials} this function returns a #NUM! error.
BINOM.DIST.RANGE:probability of the binomial distribution over an interval
end:end of the interval, defaults to @{start}
If @{start}, @{end} or @{trials} are non-integer they are truncated.
If @{trials} < 0 this function returns a #NUM! error.
If @{start} > @{end} this function returns 0.
This function is OpenFormula compatible.
CAUCHY:probability density or cumulative distribution function of the Cauchy, Lorentz or Breit-Wigner distribution
cumulative:whether to evaluate the density function or the cumulative distribution function
If @{a} < 0 this function returns a #NUM! error.
If @{cumulative} is neither TRUE nor FALSE this function returns a #VALUE! error.
CHIDIST:survival function of the chi-squared distribution
dof:number of degrees of freedom
The survival function is 1 minus the cumulative distribution function.
If @{dof} is non-integer it is truncated.
If @{dof} < 1 this function returns a #NUM! error.
CHIDIST(@{x},@{dof}) is the OpenFormula function LEGACY.CHIDIST(@{x},@{dof}).
CHIINV:inverse of the survival function of the chi-squared distribution
If @{p} < 0 or @{p} > 1 or @{dof} < 1 this function returns a #NUM! error.
CHIINV(@{p},@{dof}) is the OpenFormula function LEGACY.CHIDIST(@{p},@{dof}).
CHITEST:p value of the Goodness of Fit Test
theoretical_range:expected values
If the actual range is not an n by 1 or 1 by n range, but an n by m range, then CHITEST uses (n-1) times (m-1) as degrees of freedom. This is useful if the expected values were calculated from the observed value in a test of independence or test of homogeneity.
CHITEST is the OpenFormula function LEGACY.CHITEST.
CONFIDENCE:margin of error of a confidence interval for the population mean
stddev:population standard deviation
This function requires the usually unknown population standard deviation.
If @{size} is non-integer it is truncated.
If @{size} < 0 this function returns a #NUM! error.
If @{size} is 0 this function returns a #DIV/0! error.
CORREL:Pearson correlation coefficient of two data sets
Strings and empty cells are simply ignored.
Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, 21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, and 42.7.
Then CORREL(A1:A5,B1:B5) equals 0.996124788.
wiki:en:CorrelationCoefficient.html
COUNT:total number of integer or floating point arguments passed
COUNTA:number of arguments passed not including empty cells
Let us assume that the cells A1, A2, ..., A5 contain numbers and strings 11.4, "missing", "missing", 25.9, and 40.1.
AVERAGE,COUNT,DCOUNT,DCOUNTA,PRODUCT,SUM
COVAR:covariance of two data sets
Then COVAR(A1:A5,B1:B5) equals 65.858.
CRITBINOM:right-tailed critical value of the binomial distribution
alpha:significance level (area of the tail)
If @{trials} is a non-integer it is truncated.
If @{alpha} < 0 or @{alpha} > 1 this function returns a #NUM! error.
DEVSQ:sum of squares of deviations of a data set
Then DEVSQ(A1:A5) equals 470.56.
EXPONDIST:probability density or cumulative distribution function of the exponential distribution
If @{cumulative} is false it will return:	@{y} * exp (-@{y}*@{x}),otherwise it will return	1 - exp (-@{y}*@{x}).
If @{x} < 0 or @{y} <= 0 this will return an error.
FDIST:survival function of the F distribution
dof_of_num:numerator degrees of freedom
dof_of_denom:denominator degrees of freedom
If @{x} < 0 this function returns a #NUM! error.
If @{dof_of_num} < 1 or @{dof_of_denom} < 1, this function returns a #NUM! error.
FDIST is the OpenFormula function LEGACY.FDIST.
FINV:inverse of the survival function of the F distribution
If @{dof_of_num} < 1 or @{dof_of_denom} < 1 this function returns a #NUM! error.
FINV is the OpenFormula function LEGACY.FINV.
If @{x} is not a number, this function returns a #VALUE! error.
If @{x} <= -1 or @{x} >= 1, this function returns a #NUM! error.
FISHERINV:inverse of the Fisher transformation
If @{x} is a non-number this function returns a #VALUE! error.
FORECAST:estimates a future value according to existing values using simple linear regression
x:x-value whose matching y-value should be forecast
This function estimates a future value according to existing values using simple linear regression.
If @{known_xs} or @{known_ys} contains no data entries or different number of data entries, this function returns a #N/A error.
If the variance of the @{known_xs} is zero, this function returns a #DIV/0 error.
Then FORECAST(7,A1:A5,B1:B5) equals -10.859397661.
bins_array:array of cutoff values
The results are given as an array.
If the @{bins_array} is empty, this function returns the number of data points in @{data_array}.
FTEST:p-value for the two-tailed hypothesis test comparing the variances of two populations
array1:sample from the first population
array2:sample from the second population
Then FTEST(A1:A5,B1:B5) equals 0.510815017.
GAMMADIST:probability density or cumulative distribution function of the gamma distribution
GAMMAINV:inverse of the cumulative gamma distribution
If @{alpha} <= 0 or @{beta} <= 0 this function returns a #NUM! error.
The geometric mean is equal to the Nth root of the product of the N values.
Then GEOMEAN(A1:A5) equals 21.279182482.
AVERAGE,HARMEAN,MEDIAN,MODE,TRIMMEAN
GROWTH:exponential growth prediction
known_xs:known x-values; defaults to the array {1, 2, 3, 
new_xs:x-values for which to estimate the y-values; defaults to @{known_xs}
affine:if true, the model contains a constant term, defaults to true
GROWTH function applies the 
least squares
 method to fit an exponential curve to your data and predicts the exponential growth by using this curve.
GROWTH returns an array having one column and a row for each data point in @{new_xs}.
If @{known_ys} and @{known_xs} have unequal number of data points, this function returns a #NUM! error.
The harmonic mean of N data points is  N divided by the sum of the reciprocals of the data points).
Then HARMEAN(A1:A5) equals 19.529814427.
AVERAGE,GEOMEAN,MEDIAN,MODE,TRIMMEAN
HYPGEOMDIST:probability mass or cumulative distribution function of the hypergeometric distribution
M:number of possible successes in the population
If @{x},@{n},@{M} or @{N} is a non-integer it is truncated.
If @{x},@{n},@{M} or @{N} < 0 this function returns a #NUM! error.
If @{x} > @{M} or @{n} > @{N} this function returns a #NUM! error.
INTERCEPT:the intercept of a linear regression line
If the variance of the @{known_xs} is zero, this function returns #DIV/0 error.
Then INTERCEPT(A1:A5,B1:B5) equals -20.785117212.
KURT:unbiased estimate of the kurtosis of a data set
This is only meaningful if the underlying distribution really has a fourth moment.  The kurtosis is offset by three such that a normal distribution will have zero kurtosis.
If fewer than four numbers are given or all of them are equal this function returns a #DIV/0! error.
Then KURT(A1:A5) equals 1.234546305.
LARGE:@{k}-th largest value in a data set
If data set is empty this function returns a #NUM! error.
If @{k} <= 0 or @{k} is greater than the number of data items given this function returns a #NUM! error.
Then LARGE(A1:A5,2) equals 25.9.LARGE(A1:A5,4) equals 17.3.
PERCENTILE,PERCENTRANK,QUARTILE,SMALL
LINEST:multiple linear regression coefficients and statistics
known_ys:vector of values of dependent variable
known_xs:array of values of independent variables, defaults to a single vector {1,
stats:if true, some additional statistics are provided, defaults to false
This function returns an array with the first row giving the regression coefficients for the independent variables x_m, x_(m-1),
,x_2, x_1 followed by the y-intercept if @{affine} is true.
If @{stats} is true, the second row contains the corresponding standard errors of the regression coefficients.In this case, the third row contains the R^2 value and the standard error for the predicted value. The fourth row contains the observed F value and its degrees of freedom. Finally, the fifth row contains the regression sum of squares and the residual sum of squares.
If @{affine} is false, R^2 is the uncentered version of the coefficient of determination; that is the proportion of the sum of squares explained by the model.
If the length of @{known_ys} does not match the corresponding length of @{known_xs}, this function returns a #NUM! error.
LOGEST:exponential least square fit
known_xs:known x-values; default to an array {1, 2, 3, 
stat:if true, extra statistical information will be returned; defaults to FALSE
LOGEST function applies the 
least squares
 method to fit an exponential curve of the form	y = b * m{1}^x{1} * m{2}^x{2}... to your data.
LOGEST returns an array { m{n},m{n-1}, ...,m{1},b }.
Extra statistical information is written below the regression line coefficients in the result array.  Extra statistical information consists of four rows of data.  In the first row the standard error values for the coefficients m1, (m2, ...), b are represented.  The second row contains the square of R and the standard error for the y estimate.  The third row contains the F-observed value and the degrees of freedom.  The last row contains the regression sum of squares and the residual sum of squares.
LOGFIT:logarithmic least square fit (using a trial and error method)
LOGFIT function applies the 
least squares
 method to fit the logarithmic equation y = a + b * ln(sign * (x - c)) ,   sign = +1 or -1 to your data. The graph of the equation is a logarithmic curve moved horizontally by c and possibly mirrored across the y-axis (if sign = -1).
LOGFIT returns an array having five columns and one row. `Sign' is given in the first column, `a', `b', and `c' are given in columns 2 to 4. Column 5 holds the sum of squared residuals.
An error is returned when there are less than 3 different x's or y's, or when the shape of the point cloud is too different from a ``logarithmic'' one.
You can use the above formula = a + b * ln(sign * (x - c)) or rearrange it to = (exp((y - a) / b)) / sign + c to compute unknown y's or x's, respectively. 
This is non-linear fitting by trial-and-error. The accuracy of `c' is: width of x-range -> rounded to the next smaller (10^integer), times 0.000001. There might be cases in which the returned fit is not the best possible.
LOGINV:inverse of the cumulative distribution function of the lognormal distribution
If @{p} < 0 or @{p} > 1 or @{stddev} <= 0 this function returns #NUM! error.
wiki:en:Log-normal_distribution
wolfram:LogNormalDistribution.html
LOGNORMDIST:cumulative distribution function of the lognormal distribution
If @{stddev} = 0 LOGNORMDIST returns a #DIV/0! error.
If @{x} <= 0, @{mean} < 0 or @{stddev} <= 0 this function returns a #NUM! error.
LOGREG:the logarithmic regression
LOGREG function transforms your x's to z=ln(x) and applies the 
least squares
 method to fit the linear equation y = m * z + b to your y's and z's --- equivalent to fitting the equation y = m * ln(x) + b to y's and x's. LOGREG returns an array having two columns and one row. m is given in the first column and b in the second. 
Any extra statistical information is written below m and b in the result array.  This extra statistical information consists of four rows of data:  In the first row the standard error values for the coefficients m, b are given.  The second row contains the square of R and the standard error for the y estimate. The third row contains the F-observed value and the degrees of freedom.  The last row contains the regression sum of squares and the residual sum of squares.The default of @{stat} is FALSE.
MAX:largest value, with negative numbers considered smaller than positive numbers
MAXA:largest value, with negative numbers considered smaller than positive numbers
If even numbers are given MEDIAN returns the average of the two numbers in the center.
Then MEDIAN(A1:A5) equals 21.3.
AVERAGE,COUNT,COUNTA,DAVERAGE,MODE,SSMEDIAN,SUM
wolfram:StatisticalMedian.html
MIN:smallest value, with negative numbers considered smaller than positive numbers
MINA:smallest value, with negative numbers considered smaller than positive numbers
MODE:first most common number in the dataset
If the data set does not contain any duplicates this function returns a #N/A error.
Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, 11.4, 25.9, and 40.1.
NEGBINOMDIST:probability mass function of the negative binomial distribution
t:threshold number of successes
If @{f} or @{t} is a non-integer it is truncated.
If (@{f} + @{t} -1) <= 0 this function returns a #NUM! error.
If @{p} < 0 or @{p} > 1 this functions returns a #NUM! error.
BINOMDIST,COMBIN,FACT,HYPGEOMDIST,PERMUT
NORMDIST:probability density or cumulative distribution function of a normal distribution
stddev:standard deviation of the distribution
If @{stddev} is 0 this function returns a #DIV/0! error.
NORMINV:inverse of the cumulative distribution function of a normal distribution
If @{p} < 0 or @{p} > 1 or @{stddev} <= 0 this function returns a #NUM! error.
NORMDIST,NORMSDIST,NORMSINV,STANDARDIZE,ZTEST
NORMSDIST:cumulative density function of the standard normal distribution
NORMSDIST is the OpenFormula function LEGACY.NORMSDIST.
wolfram:NormalDistribution.html
NORMSINV:inverse of the cumulative density function of the standard normal distribution
If @{p} < 0 or @{p} > 1 this function returns #NUM! error.
NORMSINV is the OpenFormula function LEGACY.NORMSINV.
NORMDIST,NORMINV,NORMSDIST,STANDARDIZE,ZTEST
PEARSON:Pearson correlation coefficient of the paired set of data
array2:second component values
INTERCEPT,LINEST,RSQ,SLOPE,STEYX
PERCENTILE:determines the  100*@{k}-th percentile of the given data points
k:which percentile to calculate
If @{array} is empty, this function returns a #NUM! error.
If @{k} < 0 or @{k} > 1, this function returns a #NUM! error.
Then PERCENTILE(A1:A5,0.42) equals 20.02.
PERCENTRANK:rank of a data point in a data set
significance:number of significant digits, defaults to 3
If @{array} contains no data points, this function returns a #NUM! error.
If @{significance} is less than one, this function returns a #NUM! error.
If @{x} exceeds the largest value or is less than the smallest value in @{array}, this function returns a #NUM! error.
If @{x} does not match any of the values in @{array} or @{x} matches more than once, this function interpolates the returned value.
LARGE,MAX,MEDIAN,MIN,PERCENTILE,QUARTILE,SMALL
PERMUT:number of @{k}-permutations of a @{n}-set
k:number of elements in each permutation
If @{n} = 0 this function returns a #NUM! error.
If @{n} < @{k} this function returns a #NUM! error.
POISSON:probability mass or cumulative distribution function of the Poisson distribution
If @{x} is a non-integer it is truncated.
If @{mean} <= 0 POISSON returns the #NUM! error.
PROB:probability of an interval for a discrete (and finite) probability distribution
prob_range:probabilities of the corresponding values
lower_limit:lower interval limit
upper_limit:upper interval limit, defaults to @{lower_limit}
If the sum of the probabilities in @{prob_range} is not equal to 1 this function returns a #NUM! error.
If any value in @{prob_range} is <=0 or > 1, this function returns a #NUM! error.
If @{x_range} and @{prob_range} contain a different number of data entries, this function returns a #N/A error.
QUARTILE:the @{k}-th quartile of the data points
quart:a number from 0 to 4, indicating which quartile to calculate
If @{quart} < 0 or @{quart} > 4, this function returns a #NUM! error. If @{quart} = 0, the smallest value of @{array} to be returned.
If @{quart} is not an integer, it is truncated.
Then QUARTILE(A1:A5,1) equals 17.3.
LARGE,MAX,MEDIAN,MIN,PERCENTILE,SMALL
RANK:rank of a number in a list of numbers
x:number whose rank you want to find
order:0 (descending order) or non-zero (ascending order); defaults to 0
In case of a tie, RANK returns the largest possible rank.
Let us assume that the cells A1, A2, 
, A5 contain numbers 11.4, 17.3, 21.3, 25.9, and 25.9.
Then RANK(17.3,A1:A5) equals 4.
Then RANK(25.9,A1:A5) equals 1.
RANK.AVG:rank of a number in a list of numbers
In case of a tie, RANK returns the average rank.
This function is Excel 2010 compatible.
Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, 21.3, 25.9, and 25.9.
Then RANK.AVG(17.3,A1:A5) equals 4.
Then RANK.AVG(25.9,A1:A5) equals 1.5.
SLOPE:the slope of a linear regression line
Then SLOPE(A1:A5,B1:B5) equals 1.417959936.
SMALL:@{k}-th smallest value in a data set
Then SMALL(A1:A5,2) equals 17.3.SMALL(A1:A5,4) equals 25.9.
PERCENTILE,PERCENTRANK,QUARTILE,LARGE
STANDARDIZE:z-score of a value
mean:mean of the original distribution
stddev:standard deviation of the original distribution
SSMEDIAN:median for grouped data as commonly determined in the social sciences
interval:length of each grouping interval, defaults to 1
The data points given in @{array} are assumed to be the result of grouping data into intervals of length @{interval}
If @{interval} <= 0, this function returns a #NUM! error.SSMEDIAN does not check whether the data points are at least @{interval} apart.
Let us assume that the cells A1, A2, A3 contain numbers 7, 8, 8.
Then SSMEDIAN(A1:A3, 1) equals 7.75.
STDEV:sample standard deviation of the given sample
STDEV is also known as the N-1-standard deviation.
To obtain the population standard deviation of a whole population use STDEVP.
Then STDEV(A1:A5) equals 10.84619749.
AVERAGE,DSTDEV,DSTDEVP,STDEVA,STDEVPA,VAR
wolfram:StandardDeviation.html
STDEVA:sample standard deviation of the given sample
STDEVA is also known as the N-1-standard deviation.
To obtain the population standard deviation of a whole population use STDEVPA.
Then STDEVA(A1:A5) equals 15.119953704.
STDEVP:population standard deviation of the given population
This is also known as the N-standard deviation
Then STDEVP(A1:A5) equals 9.701133954.
STDEVPA:population standard deviation of an entire population
Then STDEVPA(A1:A5) equals 13.523697719.
STEYX:standard error of the predicted y-value in the regression
If @{known_ys} and @{known_xs} are empty or have a different number of arguments then this function returns a #N/A error.
Then STEYX(A1:A5,B1:B5) equals 1.101509979.
RSQ:square of the Pearson correlation coefficient of the paired set of data
CORREL,COVAR,INTERCEPT,LINEST,LOGEST,PEARSON,SLOPE,STEYX,TREND
SKEW:unbiased estimate for skewness of a distribution
This is only meaningful if the underlying distribution really has a third moment.  The skewness of a symmetric (e.g., normal) distribution is zero.
If less than three numbers are given, this function returns a #DIV/0! error.
Then SKEW(A1:A5) equals 0.976798268.
TDIST:survival function of the Student t-distribution
If @{tails} is neither 1 or 2 this function returns a #NUM! error.
The parameterization of this function is different from what is used for, e.g., NORMSDIST.  This is a common source of mistakes, but necessary for compatibility.
This function is Excel compatible for non-negative @{x}.
TINV:inverse of the survival function of the Student t-distribution
The parameterization of this function is different from what is used for, e.g., NORMSINV.  This is a common source of mistakes, but necessary for compatibility.
TREND:estimates future values of a given data set using a least squares approximation
Let us assume that the cells A1, A2, 
, A5 contain numbers 11.4, 17.3, 21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, and 42.7.
Then TREND(A1:A5,B1:B5) equals {12.1, 15.7, 21.6, 26.7, 39.7}.
TRIMMEAN:mean of the interior of a data set
ref:list of numbers whose mean you want to calculate
fraction:fraction of the data set excluded from the mean
If @{fraction}=0.2 and the data set contains 40 numbers, 8 numbers are trimmed from the data set (40 x 0.2): the 4 largest and the 4 smallest. To avoid a bias, the number of points to be excluded is always rounded down to the nearest even number.
Then TRIMMEAN(A1:A5,0.2) equals 23.2 and TRIMMEAN(A1:A5,0.4) equals 21.5.
AVERAGE,GEOMEAN,HARMEAN,MEDIAN,MODE
TTEST:p-value for a hypothesis test comparing the means of two populations using the Student t-distribution
tails:number of tails to consider
type:Type of test to perform. 1 indicates a test for paired variables, 2 a test of unpaired variables with equal variances, and 3 a test of unpaired variables with unequal variances
If the data sets contain a different number of data points and the test is paired (@{type} one), TTEST returns the #N/A error.
@{tails} and @{type} are truncated to integers.
If @{tails} is not one or two, this function returns a #NUM! error.
If @{type} is any other than one, two, or three, this function returns a #NUM! error.
Then TTEST(A1:A5,B1:B5,1,1) equals 0.003127619.TTEST(A1:A5,B1:B5,2,1) equals 0.006255239.TTEST(A1:A5,B1:B5,1,2) equals 0.111804322.TTEST(A1:A5,B1:B5,1,3) equals 0.113821797.
VAR:sample variance of the given sample
VAR is also known as the N-1-variance.
Since the N-1-variance includes Bessel's correction, whereas the N-variance calculated by VARPA or VARP does not, under reasonable conditions the N-1-variance is an unbiased estimator of the variance of the population from which the sample is drawn.
Then VAR(A1:A5) equals 117.64.
VARA:sample variance of the given sample
VARA is also known as the N-1-variance.
To get the true variance of a complete population use VARPA.
Then VARA(A1:A5) equals 228.613.
VARP:variance of an entire population
VARP is also known as the N-variance.
Let us assume that the cells A1, A2, ..., A5 contain number 11.4, 17.3, 21.3, 25.9, and 40.1.
Then VARP(A1:A5) equals 94.112
VARPA:variance of an entire population
VARPA is also known as the N-variance.
Then VARPA(A1:A5) equals 182.8904.
WEIBULL:probability density or cumulative distribution function of the Weibull distribution
If the @{cumulative} boolean is true it will return: 1 - exp (-(@{x}/@{beta})^@{alpha}),otherwise it will return (@{alpha}/@{beta}^@{alpha}) * @{x}^(@{alpha}-1) * exp(-(@{x}/@{beta}^@{alpha})).
ZTEST:the probability of observing a sample mean as large as or larger than the mean of the given sample
stddev:population standard deviation, defaults to the sample standard deviation
ZTEST calulates the probability of observing a sample mean as large as or larger than the mean of the given sample for samples drawn from a normal distribution with mean @{x} and standard deviation @{stddev}.
If @{ref} contains less than two data items ZTEST returns #DIV/0! error.
Then ZTEST(A1:A5,20) equals 0.254717826.
CONFIDENCE,NORMDIST,NORMINV,NORMSDIST,NORMSINV,STANDARDIZE
EXPPOWDIST:the probability density function of the Exponential Power distribution
This distribution has been recommended for lifetime analysis when a U-shaped hazard function is desired. This corresponds to rapid failure once the product starts to wear out after a period of steady or even improving reliability.
GEOMDIST:probability mass or cumulative distribution function of the hypergeometric distribution
p:probability of success in any trial
If @{k} < 0 this function returns a #NUM! error.
KURTP:population kurtosis of a data set
If fewer than two numbers are given or all of them are equal this function returns a #DIV/0! error.
Then KURTP(A1:A5) equals -0.691363424.
LANDAU:approximate probability density function of the Landau distribution
LAPLACE:probability density function of the Laplace distribution
LOGISTIC:probability density function of the logistic distribution
PARETO:probability density function of the pareto distribution
RAYLEIGH:probability density function of the Rayleigh distribution
RAYLEIGHTAIL:probability density function of the Rayleigh tail distribution
SKEWP:population skewness of a data set
If less than two numbers are given, SKEWP returns a #DIV/0! error.
Then SKEWP(A1:A5) equals 0.655256198.
SUBTOTAL:the subtotal of the given list of arguments
function_nbr:determines which function to use according to the following table:
	1   AVERAGE
	2   COUNT
	3   COUNTA
	4   MAX
	5   MIN
	6   PRODUCT
	7   STDEV
	8   STDEVP
	9   SUM
	10   VAR
	11   VARP
Let us assume that the cells A1, A2, ..., A5 contain numbers 23, 27, 28, 33, and 39.
Then SUBTOTAL(1,A1:A5) equals 30.SUBTOTAL(6,A1:A5) equals 22378356.SUBTOTAL(7,A1:A5) equals 6.164414003.SUBTOTAL(9,A1:A5) equals 150.SUBTOTAL(11,A1:A5) equals 30.4.
PERMUTATIONA:the number of permutations of @{y} objects chosen from @{x} objects with repetition allowed
If both @{x} and @{y} equal 0, PERMUTATIONA returns 1.
If @{x} < 0 or @{y} < 0, PERMUTATIONA returns #NUM!
If @{x} or @{y} are not integers, they are truncated
\UUU
X?4*
%PiiC
?nz3
WYmS
?vT5A
?333333
j-T@
TD@Ho
`_X@
/7@f
!x(@
xqf@
@Zd;
?@'1
M@333333
plugin.so.debug
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rel.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rel.plt
.got.plt
.got
.text
