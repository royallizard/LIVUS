m;D\
__gmon_start__
__cxa_finalize
_Jv_RegisterClasses
mono_debugger_readline_static_init
getenv
mono_debugger_readline_is_a_tty
isatty
mono_debugger_readline_readline
g_strdup
g_assertion_message_expr
mono_debugger_readline_add_history
mono_debugger_readline_current_line_buffer
mono_debugger_readline_get_columns
mono_debugger_readline_get_filename_completion_desired
mono_debugger_readline_set_filename_completion_desired
mono_debugger_readline_set_completion_matches
malloc
mono_debugger_readline_enable_completion
stdin
stdout
fileno
tcgetattr
stderr
memchr
strcmp
strlen
strncmp
strncpy
strcpy
fprintf
strchr
__ctype_b_loc
strrchr
realloc
strstr
setpwent
getpwent
endpwent
kill
fcntl
read
__errno_location
memcpy
memset
abort
fopen
fclose
libedit_fgetln
sigemptyset
sigaddset
sigprocmask
toupper
tolower
strtol
fchmod
fputs
fwrite
regcomp
regexec
regfree
signal
tgoto
tputs
tgetent
tgetflag
tgetnum
tgetstr
ioctl
fputc
fflush
tcsetattr
cfgetispeed
cfgetospeed
cfsetispeed
cfsetospeed
__assert_fail
strcspn
mkstemp
fork
unlink
execlp
exit
waitpid
lseek
_DIAGASSERT
getuid
getpwuid
getpwnam
sprintf
closedir
opendir
readdir
strcasecmp
qsort
_IO_getc
libglib-2.0.so.0
libtinfo.so.5
libc.so.6
__xstat
libmonodebuggerreadline.so.0
VER_1
GLIBC_2.1.3
GLIBC_2.1
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.0
 [^]
p[^]
<?tT
<:tB
< t5
<	t(
<#uO
<%u(
<-t(
</~U
<hu+
<tuG
<ru+
<euD
<&u#
<\u<
\[^_]
@,;E
@0;E
@0;E
@0;E
@0;E
0[^]
@(;E
@,;E
 [^]
@0;E
@,;E
@,;E
@H<3u
@@=@B
@@=@B
 [^]
 [^]
@(;E
@(;E
@0;E
@0;E
@0;E
 [^]
 [^]
 [^]
@0;E
@,;E
@,;E
 [^]
 [^]
 [^]
@@=@B
@0;E
 [^]
 [^]
 [^]
 [^]
<\u=
< tH
 [^]
<"uZ
<^u(
<-u"
 [^]
<?uZ
@,;E
@0;E
0[^]
l[^_]
@,;E
@T;E
@,;E
<?uQ
@(;E
@4;E
@0;E
@(;E
 [^]
@T;E
 [^]
@P;E
 [^]
@P;E
@P;E
@P;E
<"ur
[^_]
0[^]
<-u,
<%uW
,[^_]
[^_]
 [^]
 [^]
@@;E
 [^]
@,;E
 [^]
0[^]
()[]f
@(;E
@0;E
 [^]
/tmp
/his
tedi
t.XX
XXXX
XXXX
0[^]
<.u!
;E ~_
TERM
!in_readline
mono-debugger-readline.c
mono_debugger_readline_readline
EditLine wrapper
emacs
ReadLine compatible completion function
rl_complete
ReadLine compatible suspend function
rl_tstp
%s: Event not found
:^*$
^*$-0123456789
%s: Bad word specifier
()<>;&|$
*?_-[]~=
bind
telltc
settc
echotc
setty
HOME
edit: Bad value `%s'.
/.editrc
vi-paste-next
Vi paste previous deletion to the right of the cursor
vi-paste-prev
Vi paste previous deletion to the left of the cursor
vi-prev-big-word
Vi move to the previous space delimited word
vi-prev-word
Vi move to the previous word
vi-next-big-word
Vi move to the next space delimited word
vi-next-word
Vi move to the next word
vi-change-case
Vi change case of character under the cursor and advance one character
vi-change-meta
Vi change prefix command
vi-insert-at-bol
Vi enter insert mode at the beginning of line
vi-replace-char
Vi replace character under the cursor with the next character typed
vi-replace-mode
Vi enter replace mode
vi-substitute-char
Vi replace character under the cursor and enter insert mode
vi-substitute-line
Vi substitute entire line
vi-change-to-eol
Vi change to end of line
vi-insert
Vi enter insert mode
vi-add
Vi enter insert mode after the cursor
vi-add-at-eol
Vi enter insert mode at end of line
vi-delete-meta
Vi delete prefix command
vi-end-big-word
Vi move to the end of the current space delimited word
vi-end-word
Vi move to the end of the current word
vi-undo
Vi undo last change
vi-command-mode
Vi enter command mode (use alternative key bindings)
vi-zero
Vi move to the beginning of line
vi-delete-prev-char
Vi move to previous character (backspace)
vi-list-or-eof
Vi list choices for completion or indicate end of file if empty line
vi-kill-line-prev
Vi cut from beginning of line to cursor
vi-search-prev
Vi search history previous
vi-search-next
Vi search history next
vi-repeat-search-next
Vi repeat current search in the same search direction
vi-repeat-search-prev
Vi repeat current search in the opposite search direction
vi-next-char
Vi move to the character specified next
vi-prev-char
Vi move to the character specified previous
vi-to-next-char
Vi move up to the character specified next
vi-to-prev-char
Vi move up to the character specified previous
vi-repeat-next-char
Vi repeat current character search in the same search direction
vi-repeat-prev-char
Vi repeat current character search in the opposite search direction
vi-match
Vi go to matching () {} or []
vi-undo-line
Vi undo all changes to line
vi-to-column
Vi go to specified column
vi-yank-end
Vi yank to end of line
vi-yank
Vi yank
vi-comment-out
Vi comment out current command
vi-alias
Vi include shell alias
vi-to-history-line
Vi go to specified history file line.
vi-histedit
Vi edit history line with vi
vi-history-word
Vi append word from previous input line
vi-redo
Vi redo last non-motion command
em-delete-or-list
Delete character under cursor or list completions if at end of line
em-delete-next-word
Cut from cursor to end of current word
em-yank
Paste cut buffer at cursor position
em-kill-line
Cut the entire line and save in cut buffer
em-kill-region
Cut area between mark and cursor and save in cut buffer
em-copy-region
Copy area between mark and cursor to cut buffer
em-gosmacs-transpose
Exchange the two characters before the cursor
em-next-word
Move next to end of current word
em-upper-case
Uppercase the characters from cursor to end of current word
em-capitol-case
Capitalize the characters from cursor to end of current word
em-lower-case
Lowercase the characters from cursor to end of current word
em-set-mark
Set the mark at cursor
em-exchange-mark
Exchange the cursor and mark
em-universal-argument
Universal argument (argument times 4)
em-meta-next
Add 8th bit to next character typed
em-toggle-overwrite
Switch from insert to overwrite mode or vice versa
em-copy-prev-word
Copy current word to cursor
em-inc-search-next
Emacs incremental next search
em-inc-search-prev
Emacs incremental reverse search
ed-end-of-file
Indicate end of file
ed-insert
Add character to the line
ed-delete-prev-word
Delete from beginning of current word to cursor
ed-delete-next-char
Delete character under cursor
ed-kill-line
Cut to the end of line
ed-move-to-end
Move cursor to the end of line
ed-move-to-beg
Move cursor to the beginning of line
ed-transpose-chars
Exchange the character to the left of the cursor with the one under it
ed-next-char
Move to the right one character
ed-prev-word
Move to the beginning of the current word
ed-prev-char
Move to the left one character
ed-quoted-insert
Add the next character typed verbatim
ed-digit
Adds to argument or enters a digit
ed-argument-digit
Digit that starts argument
ed-unassigned
Indicates unbound character
ed-tty-sigint
Tty interrupt character
ed-tty-dsusp
Tty delayed suspend character
ed-tty-flush-output
Tty flush output characters
ed-tty-sigquit
Tty quit character
ed-tty-sigtstp
Tty suspend character
ed-tty-stop-output
Tty disallow output characters
ed-tty-start-output
Tty allow output characters
ed-newline
Execute command
ed-delete-prev-char
Delete the character to the left of the cursor
ed-clear-screen
Clear screen leaving current line at the top
ed-redisplay
Redisplay everything
ed-start-over
Erase current line and start from scratch
ed-sequence-lead-in
First character in a bound sequence
ed-prev-history
Move to the previous history line
ed-next-history
Move to the next history line
ed-search-prev-history
Search previous in history for a line matching the current
ed-search-next-history
Search next in history for a line matching the current
ed-prev-line
Move up one line
ed-next-line
Move down one line
ed-command
Editline extended command
list
%d %s
size
unique
_HiStOrY_V2_
unknown error
malloc() failed
first event not found
last event not found
empty list
no next event
no previous event
current event is invalid
event not found
can't read history from file
can't write history
required parameter(s) not supplied
history size negative
function not allowed with other history-functions-set the default
bad parameters
key_add: Null extended-key not allowed.
key_add: sequence-lead-in command not allowed
key_delete: Null extended-key not allowed.
Unbound extended key "%s"
Some extended keys too long for internal print buffer
 "%s..."
no input
%-15s->  %s
""""""""
""""""""""""""""""$""""""""""""""""
""""""""
#&"0"""""."
""""4"%
""""""
#&"0"""""."
""""4"%
""""""
!"F"
"""/
H"""""
R"""X87N;	@O]"E
M"W[_a"I
C"6P:>AJ"
"T"L"VZ^`BK
b""\"9
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""""""""""
""""""""""""""""""""""""""""""""""""emacs
%s	->	%s
%-15s->  is undefined
%-15s->  %s
%-4s to %-7s->  %s
Standard key bindings
Alternative key bindings
Multi-character bindings
Arrow key bindings
%s: Invalid switch `%c'.
%s: Invalid \ or ^ in instring.
%s: Invalid \ or ^ in outstring.
%s: Invalid command `%s'.
bind
echotc
edit
history
telltc
settc
setty
*[]?
add new blank line
audible bell
clear to bottom
clear to end of line
cursor to horiz pos
clear screen
delete a character
delete a line
start delete mode
end delete mode
end insert mode
cursor from status line
home cursor
insert character
start insert mode
insert padding
sends cursor down
sends cursor left
sends cursor right
sends cursor up
begin bold
end attributes
non destructive space
end standout
begin standout
cursor to status line
cursor up one
begin underline
end underline
visible bell
delete multiple chars
cursor down multiple
insert multiple chars
cursor left multiple
cursor right multiple
cursor up multiple
send cursor home
send cursor end
has automatic margins
has physical tabs
Number of lines
Number of columns
Has meta key
Tab chars destructive
newline ignored at right margin
Out of termcap string space.
TERM
dumb
emacs
Cannot read termcap database;
No entry for terminal type "%s";
using dumb terminal settings.
down
left
right
home
	Your terminal has the
	following characteristics:
	It has %d columns and %d lines
	It has %s meta key
not 
	It can%suse tabs
does not have
	It %s automatic margins
	It %s magic margins
(empty)
	%25s (%s) == %s
settc: Bad value `%s'.
tabs
meta
baud
rows
lines
cols
echotc: Termcap parameter `%s' not found.
echotc: Warning: unknown termcap %% `%c'.
echotc: Warning: Extra argument `%s'.
echotc: Warning: Missing argument.
echotc: Bad value `%s' for rows.
echotc: Warning: Too many required arguments (%d).
echotc: Bad value `%s' for cols.
echotc: Bad value `%s'.
iflag:
oflag:
cflag:
lflag:
chars:
ignbrk
brkint
ignpar
parmrk
inpck
istrip
inlcr
igncr
icrnl
iuclc
ixon
ixany
ixoff
imaxbel
opost
olcuc
onlcr
ocrnl
onocr
onlret
ofill
ofdel
nldly
crdly
tabdly
xtabs
bsdly
vtdly
ffdly
cbaud
cstopb
cread
parenb
parodd
hupcl
clocal
cibaud
crtscts
isig
icanon
xcase
echo
echoe
echok
echonl
noflsh
tostop
echoctl
echoprt
echoke
flusho
pendin
iexten
extproc
intr
quit
erase
kill
eol2
start
stop
werase
susp
reprint
discard
lnext
time
%s: Unknown switch `%c'.
%s%s
%c%s 
%s: Invalid argument `%s'.
tty.c
c-- != 0
c != -1
tty_stty
$-_.+!*'(),
0123456789abcdef
%s/%s
%s%s
%-*s  
Display all %d possibilities? (y or n) 
"\'`@$><=;|&{(
"\'`@$><=;|&{(
libmonodebuggerreadline.so.0.0.0.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_d
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
