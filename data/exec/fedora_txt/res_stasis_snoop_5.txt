tdX5
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
pbx_findapp
pbx_exec
ast_hangup
__ao2_cleanup_debug
__gcc_personality_v0
_Unwind_Resume
ast_channel_tech_pvt
__ao2_ref
__ast_pthread_mutex_lock
ast_audiohook_write_frame
__ast_pthread_mutex_unlock
ast_timer_ack
ast_null_frame
ast_audiohook_read_frame
ast_frame_dtor
ast_timer_close
free
ast_audiohook_destroy
ast_channel_chanspy_start_type
ast_json_null
ast_multi_channel_blob_create
ast_channel_uniqueid
ast_channel_snapshot_get_latest
ast_multi_channel_blob_add_channel
stasis_message_create
ast_channel_topic
stasis_publish
ast_json_unref
ast_channel_chanspy_stop_type
ast_channel_tech_pvt_set
ast_audiohook_detach
__ast_str_helper
stasis_app_control_snoop
__ao2_alloc
calloc
ast_timer_open
ast_timer_set_rate
__ao2_lock
ast_channel_rawwriteformat
ast_format_get_sample_rate
ast_channel_rawreadformat
ast_format_cache_get_slin_by_rate
__ao2_unlock
__ast_channel_alloc
ast_channel_tech_set
ast_timer_fd
ast_channel_set_fd
__ast_format_cap_alloc
__ast_format_cap_append
ast_channel_nativeformats_set
ast_channel_set_writeformat
ast_channel_set_rawwriteformat
ast_channel_set_readformat
ast_channel_set_rawreadformat
ast_background_stacksize
ast_pthread_create_detached_stack
ast_audiohook_init
ast_audiohook_attach
ast_log
ast_module_register
ast_module_unregister
libgcc_s.so.1
libpthread.so.0
libc.so.6
__stack_chk_fail
GCC_3.0
GCC_3.3.1
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.0
a_&	
jvPW
[^_]
UWVS
t$<V
[^_]
UWVS
[^_]
D$$P
t$8PV
VUWh
[^_]
t$8j
t$8j
UWVS
[^_]
D$ P
jvPW
jvPW
[^_]
UWVS
[^_]
T$ Wh
$RWh
T$ Wh
$RWh
PPPPPj
[^_]
Stasis
res_stasis_snoop.c
&(&snoop->whisper)->lock
&(&snoop->spy)->lock
spyer_channel
spyee_channel
((chan))
Snoop/%s-%08x
ast_format_cap_alloc
snoop->chan
ast_format_cap_append
Snoop
snoop_stasis_thread
res_stasis_snoop
res_stasis
Snoop Channel Driver
/builddir/build/BUILD/asterisk-15.5.0/include/asterisk/strings.h
Memory Allocation Failure in function %s at line %d of %s
/builddir/build/BUILD/asterisk-15.5.0/include/asterisk/utils.h
Stasis application snoop support
This paragraph is copyright (c) 2006 by Digium, Inc. In order for your module to load, it must return this key via a function called "key".  Any code which includes this paragraph must be licensed under the GNU General Public License version 2 or later (at your option).  In addition to Digium's general reservations of rights, Digium expressly reserves the right to allow other parties to license this paragraph under different terms. Any use of Digium, Inc. trademarks or logos (including "Asterisk" or "Digium") without express written permission of Digium, Inc. is prohibited.
_dtor_snoop
_dtor_payload
_dtor_message
_dtor_snoop_snapshot
_dtor_spyee_snapshot
__ast_calloc
_dtor_lock
snoop_determine_format
ast_str_create
snoop_destroy
snoop_hangup
snoop_read
snoop_write
snoop_fixup
_dtor_snoop
stasis_app_control_snoop
stasis_app_control_snoop
;*2$"
zPLR
zPLR
c. L.
Q. X.
x.Pa.
d. U.
X. O.
X. W.
i.0Z.
. {.
. N.
68b329da9893e34099c7d8ad5cb9c940
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+stack_realign
GA+stack_realign
GA+stack_clash
GA*cf_protection
GA*GOW
GA+stack_realign
GA+stack_clash
GA*cf_protection
GA*GOW
res_stasis_snoop.so-15.5.0-1.fc29.i386.debug
b.l@
7zXZ
t=\g
WuD*
#5*$	
3_)C
kI:i<.
aZ"lK
I3p4
HrQ]
6q?E$
MPj6
UAg6
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu.build.attributes
.gnu.build.attributes..text.startup
.gnu.build.attributes..text.exit
.gnu_debuglink
.gnu_debugdata
