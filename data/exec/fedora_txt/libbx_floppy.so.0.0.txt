-Y8d
1~r'+o%SF
(3P4
LJ"Cz
1~"q
zT.1
__gmon_start__
__cxa_finalize
_Jv_RegisterClasses
_ZN13bx_devmodel_c4initEv
_ZN13bx_devmodel_c5resetEj
_ZN13bx_devmodel_c14register_stateEv
_ZN13bx_devmodel_c19after_restore_stateEv
libfloppy_LTX_plugin_fini
theFloppyController
_ZN16bx_floppy_ctrl_c15raise_interruptEv
bx_devices
_ZN16bx_floppy_ctrl_c15lower_interruptEv
_ZN16bx_floppy_ctrl_c16get_media_statusEj
_ZN16bx_floppy_ctrl_c16enter_idle_phaseEv
_ZN16bx_floppy_ctrl_c16reset_changelineEv
_ZN16bx_floppy_ctrl_c20calculate_step_delayEhh
_ZN16bx_floppy_ctrl_c6get_tcEv
_ZN16bx_floppy_ctrl_c18enter_result_phaseEv
__sprintf_chk
_ZN12logfunctions6ldebugEPKcz
__stack_chk_fail
_ZN16bx_floppy_ctrl_c16increment_sectorEv
_ZN12logfunctions4infoEPKcz
_ZN16bx_floppy_ctrl_c5resetEj
_ZN16bx_floppy_ctrl_c5timerEv
_ZN12logfunctions5panicEPKcz
_ZN16bx_floppy_ctrl_c13timer_handlerEPv
_ZN16bx_floppy_stub_c16set_media_statusEjj
pluginlog
_ZN16bx_floppy_stub_c16get_media_statusEj
_ZN16bx_floppy_ctrl_c14evaluate_mediaEhhPcP8floppy_t
close
open64
__fxstat64
_ZN12logfunctions5errorEPKcz
ioctl
__errno_location
strerror
_ZN16bx_floppy_ctrl_c16set_media_statusEjj
_ZN16bx_floppy_ctrl_c11floppy_xferEhjPhjh
write
read
memset
lseek64
_ZN16bx_floppy_ctrl_c8dma_readEPh
bx_pc_system
_ZN14bx_pc_system_c14activate_timerEjjj
_ZN16bx_floppy_ctrl_c9dma_writeEPh
_ZN16bx_floppy_ctrl_c12read_handlerEPvjj
_ZN16bx_floppy_ctrl_c14floppy_commandEv
_ZN16bx_floppy_ctrl_c13write_handlerEPvjjj
bx_gui
_Unwind_Resume
_ZN16bx_floppy_ctrl_c14register_stateEv
_Znwm
_ZN9bx_list_cC1EP10bx_param_cPKcS3_i
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPhihh
_ZN9bx_list_cC1EP10bx_param_cPKci
_ZN16bx_shadow_bool_cC1EP10bx_param_cPKcPjh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPjihh
_ZN16bx_shadow_data_cC1EP10bx_param_cPKcPhj
_ZdlPv
__gxx_personality_v0
_ZN16bx_floppy_ctrl_c4initEv
pluginRegisterIRQ
pluginRegisterIOReadHandler
pluginRegisterIOWriteHandler
_ZN14bx_pc_system_c14register_timerEPvPFvS0_EjjjPKc
_ZN8bx_gui_c19register_statusitemEPKc
_ZN13bx_devmodel_cD2Ev
_ZTV13bx_devmodel_c
_ZN12logfunctionsD2Ev
_ZN13bx_devmodel_cD1Ev
_ZN16bx_floppy_stub_cD2Ev
_ZN16bx_floppy_stub_cD1Ev
_ZN16bx_floppy_ctrl_cC2Ev
_ZN12logfunctionsC2Ev
_ZTV16bx_floppy_ctrl_c
_ZN12logfunctions3putEPKc
_ZN16bx_floppy_ctrl_cC1Ev
libfloppy_LTX_plugin_init
pluginRegisterDeviceDevmodel
_ZN13bx_devmodel_cD0Ev
_ZN16bx_floppy_stub_cD0Ev
_ZN16bx_floppy_ctrl_cD2Ev
_ZN16bx_floppy_ctrl_cD1Ev
_ZN16bx_floppy_ctrl_cD0Ev
_ZTI16bx_floppy_ctrl_c
_ZTS16bx_floppy_ctrl_c
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTI16bx_floppy_stub_c
_ZTS16bx_floppy_stub_c
_ZTI13bx_devmodel_c
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTS13bx_devmodel_c
_ZTI12logfunctions
_ZTVN10__cxxabiv117__class_type_infoE
_ZTS12logfunctions
_ZTV16bx_floppy_stub_c
libstdc++.so.6
libm.so.6
libc.so.6
libgcc_s.so.1
_edata
__bss_start
_end
libbx_floppy.so.0
GCC_3.0
CXXABI_1.3
GLIBCXX_3.4
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.2.5
5"h 
%$h 
%"h 
%zg 
%rg 
%jg 
%bg 
%Zg 
%Rg 
%Jg 
%Bg 
%:g 
%2g 
%*g 
%"g 
=pf 
ATSubH
=pd 
%|` 
=8` 
fffff.
fff.
fff.
\8a@8
@x t
P_t 1
AUATUSH
D$H1
tDHc
D$HdH3
X[]A\A]
-r] 
@x u
fffff.
T/eH
T/aH
T/iH
D$(%
l$ L
d$(L
l$0L
t$8L
|$@H
fffff.
l$ L
d$(L
l$0L
t$8L
|$@H
l$ L
d$(L
l$0L
t$8L
|$@H
l$ L
d$(1
l$0L
t$8L
|$@H
l$ 1
d$(L
l$0L
t$8L
|$@H
fff.
AUATUSH
\*aH
L*eH
t*iD
@x t)D
[]A\A]
[]A\A]
C:D%et
[]A\A]1
[]A\A]
L-eA
T-aE
t/iH
Ax u
=kL 
[]A\A]
L(aD
D(iH
=9K 
l$ H
T/eH
T/aH
T/iH
@x u
l$ H
l$ H
gDv3
\$ H
l$(L
d$0H
Gx t
gx D
G]:G^s,D
fff.
AVAUATUSH
l$ dH
D$X1
%MF 
tLHc
GD<F
at'H
bx I
L$XdH3
h[]A\A]A^A_
G2Ic
`x I
`x I
D*eI
`x I
`x I
@z'I
`x I
`x I
l$ L
d$(L
l$0L
t$8L
|$@H
Gx t
={6 
AWAVAUATUSH
D$(1
d$ 1
D$(dH3
8[]A\A]A^A_
AVAUATI
50( 
8[]A\A]A^A_
T$ H
D$(H
D$(H
L$(H
D$ 1
fff.
RESULT: 
[%02x] 
controller reset in software
<<WRITE DONE>>
AFTER
  drive    = %u
  head     = %u
  cylinder = %u
  sector   = %u
floppy
set_media_status
get_media_status
unknown mode type
floppy.0.type
floppy.1.type
floppy.0.status
floppy.1.status
floppy.0.path
floppy.1.path
none
floppy_xfer: bad drive #%d
from
<<READ DONE>>
COMMAND: 
sense interrupt status
configure (eis     = 0x%02x)
configure (efifo   = 0x%02x)
configure (no poll = 0x%02x)
configure (fifothr = 0x%02x)
configure (pretrk  = 0x%02x)
format track
read/write normal data
BEFORE
  eot      = %u
  motor on, drive1 = %d
  motor on, drive0 = %d
  normal_operation=%02x
  drive_select=%02x
command = 0x%02x
  500 Kbps
  300 Kbps
  250 Kbps
  1 Mbps
Floppy State
data_rate
command_index
command_size
command_complete
pending_command
multi_track
pending_irq
reset_sensei
format_count
format_fillbyte
result
result_index
result_size
main_status_reg
status_reg0
status_reg1
status_reg2
status_reg3
floppy_buffer_index
lock
config
pretrk
perp_mode
buffer
drive%d
cylinder
head
sector
media_present
Floppy Drive
floppy.0.devtype
 A: 
floppy.1.devtype
 B: 
Exit
increment_sector: clamping cylinder to max
floppy:timer(): unknown case %02x
%s called in %s stub. you must not have loaded the %s plugin
evaluate_media: unknown media type %d
evaluate_media: media type %d not valid for this floppy drive
tried to open '%s' read/write: %s
tried to open '%s' read only: %s
fstat floppy 0 drive image file returns error: %s
evaluate_media: size of file '%s' (%lu) too large for selected type
evaluate_media: file '%s' of unknown size %lu
cannot determine media geometry, trying to use defaults
fd0: '%s' ro=%d, h=%d,t=%d,spt=%d
fd1: '%s' ro=%d, h=%d,t=%d,spt=%d
floppy_xfer: drive=%u, offset=%u, bytes=%u, direction=%s floppy
could not perform lseek() to %d on floppy image file
partial read() on floppy image returns %u/%u
read() on floppy image returns 0
could not perform write() on floppy image file
head number does not match head field
dma_read: sector size %d not supported
formatting cylinder %u head %u sector %u
tried to write disk %u, which is write-protected
port 0x3f5: no results to read
io_read: unsupported address 0x%04x
read(): during command 0x%02x, port 0x%04x returns 0x%02x
non DMA mode not fully implemented yet
floppy_command(): recalibrate drive %u
floppy_command(): read ID: motor not on
floppy_command(): read ID: bad drive #%d
attempt to read sector ID with media not present
floppy_command(): format track: motor not on
floppy_command(): format track: bad drive #%d
format track: sector size %d not supported
format track: %d sectors/track requested (%d expected)
attempt to format track with media not present
attempt to format track with media write-protected
non-DMA floppy format unimplemented
read/write command with DMA and int disabled
floppy_command(): read/write: motor not on
floppy_command(): read/write: bad drive #%d
head number in command[1] doesn't match head field
attempt to read/write sector %u with media not present
read/write command: sector size %d not supported
io: norm r/w parms out of range: sec#%02xh cyl#%02xh eot#%02xh head#%02xh
attempt to read/write sector %u past last sector %u
io: cylinder request != current cylinder
io: logical sector out of bounds
floppy_command(): unknown read/write command
perpendicular mode: config=0x%02x
You should never get here! cmd = 0x%02x
write access to port 0x%04x, value=0x%02x
DMA and interrupt capabilities disabled
io_write: digital output register
  dma_and_interrupt_enable=%02x
WARNING: non existing drive selected
write to data rate select register: unsupported bits set
write 0x03f5: receiving new command 0x%02x, old one (0x%02x) pending
io_write: 0x3f5: unsupported floppy command 0x%02x
io_write: 0x3f5: invalid floppy command 0x%02x
io_write: diskette controller data
io_write: reserved register 0x3f6 unsupported
io_write: config control register: 0x%02x
io_write ignored: 0x%04x = 0x%02x
Init $Id: floppy.cc,v 1.121 2009/08/10 08:08:25 sshwarts Exp $
16bx_floppy_ctrl_c
16bx_floppy_stub_c
13bx_devmodel_c
12logfunctions
zPLR
libbx_floppy.so.0.0.0.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
