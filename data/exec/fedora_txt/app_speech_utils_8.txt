__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
ast_module_unregister
ast_unregister_application
ast_custom_function_unregister
ast_channel_datastore_find
strcasecmp
ast_speech_change_results_type
ast_speech_destroy
ast_speech_change
strchr
strtol
__snprintf_chk
__stack_chk_fail
ast_register_application2
__ast_custom_function_register
__strdup
ast_log
ast_channel_datastore_remove
ast_speech_start
ast_openstream
ast_applystream
ast_playstream
strlen
memcpy
ast_app_separate_args
ast_set_read_format
pthread_mutex_lock
pbx_builtin_getvar_helper
pthread_mutex_unlock
ast_stopstream
ast_frame_free
ast_sched_runq
ast_sched_wait
ast_waitfor
ast_read
ast_answer
ast_app_parse_options
gettimeofday
__strncat_chk
ast_speech_change_state
ast_speech_results_get
ast_speech_write
calloc
ast_speech_dtmf
strtod
ast_speech_grammar_deactivate
ast_speech_grammar_activate
ast_speech_grammar_unload
ast_speech_grammar_load
ast_speech_new
ast_datastore_alloc
ast_channel_datastore_add
pbx_builtin_setvar_helper
ast_module_register
ast_unregister_file_version
ast_register_file_version
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
GLIBC_2.2.5
GLIBC_2.3.4
GLIBC_2.4
5B? 
%D? 
%B? 
%:? 
%2? 
%*? 
%"? 
%z> 
%r> 
%j> 
%b> 
%Z> 
%R> 
%J> 
%B> 
%:> 
%2> 
%*> 
%"> 
=X? 
ATSubH
=X; 
=+= 
=]= 
ffffff.
fffff.
[]A\
fffff.
fffff.
$uGH
AUATI
[]A\A]
EHE1
5t3 
=-4 
5_3 
=X4 
5J3 
553 
5 3 
d$ H
fffff.
fff.
fffff.
AWAVI
AUATSH
[A\A]A^A_
A9T$
t$0L
5A$ 
fff.
ffff.
SpeechCreate
SpeechLoadGrammar
SpeechUnloadGrammar
SpeechActivateGrammar
SpeechDeactivateGrammar
SpeechStart
SpeechBackground
SpeechDestroy
SpeechProcessingSound
normal
nbest
status
spoke
results
Create a Speech Structure
Load a Grammar
Unload a Grammar
Activate a Grammar
Deactivate a Grammar
End speech recognition
app_speech_utils.c
SPEECH_DTMF_MAXLEN
SPEECH_DTMF_TERMINATOR
none
dtmf
ERROR
$Revision: 147519 $
app_speech_utils
Dialplan Speech Applications
SPEECH
SPEECH(argument)
SPEECH_SCORE
SPEECH_TEXT
SPEECH_GRAMMAR
SPEECH_ENGINE
SPEECH_ENGINE(name)=value
SPEECH_RESULTS_TYPE
speech
Start recognizing voice in the audio stream
Play a sound file and wait for speech to be recognized
Change background processing sound
Memory Allocation Failure in function %s at line %d of %s
/builddir/build/BUILD/asterisk-1.6.1-rc1/include/asterisk/utils.h
This paragraph is copyright (c) 2006 by Digium, Inc. In order for your module to load, it must return this key via a function called "key".  Any code which includes this paragraph must be licensed under the GNU General Public License version 2 or later (at your option).  In addition to Digium's general reservations of rights, Digium expressly reserves the right to allow other parties to license this paragraph under different terms. Any use of Digium, Inc. trademarks or logos (including "Asterisk" or "Digium") without express written permission of Digium, Inc. is prohibited.
Gets information about speech recognition results.
Gets information about speech recognition results.
status:   Returns 1 upon speech object existing, or 0 if not
spoke:  Returns 1 if spoker spoke, or 0 if not
results:  Returns number of results that were recognized
Gets the confidence score of a result.
Gets the confidence score of a result.
SPEECH_SCORE([nbest number/]result number)
Gets the recognized text of a result.
Gets the recognized text of a result.
SPEECH_TEXT([nbest number/]result number)
Gets the matched grammar of a result if available.
Gets the matched grammar of a result if available.
SPEECH_GRAMMAR([nbest number/]result number)
Change a speech engine specific attribute.
Changes a speech engine specific attribute.
Sets the type of results that will be returned.
Sets the type of results that will be returned. Valid options are normal or nbest.
SPEECH_RESULTS_TYPE()=results type
  SpeechCreate(engine name):
This application creates information to be used by all the other applications.
It must be called before doing any speech recognition activities such as activating a grammar.
It takes the engine name to use as the argument, if not specified the default engine will be used.
  SpeechLoadGrammar(Grammar Name,Path):
Load a grammar only on the channel, not globally.
It takes the grammar name as first argument and path as second.
  SpeechUnloadGrammar(Grammar Name):
Unload a grammar. It takes the grammar name as the only argument.
  SpeechActivateGrammar(Grammar Name):
This activates the specified grammar to be recognized by the engine.
A grammar tells the speech recognition engine what to recognize, and how to portray it back to you 
in the dialplan. The grammar name is the only argument to this application.
  SpeechDeactivateGrammar(Grammar Name):
This deactivates the specified grammar so that it is no longer recognized.
The only argument is the grammar name to deactivate.
  SpeechStart():
Tell the speech recognition engine that it should start trying to get results from audio being 
fed to it. This has no arguments.
  SpeechBackground(<Sound File>[,Timeout[,options]]):
This application plays a sound file and waits for the person to speak. Once they start speaking playback
of the file stops, and silence is heard. Once they stop talking the processing sound is played to indicate
the speech recognition engine is working. Once results are available the application returns and results 
(score and text) are available using dialplan functions.
  The first text and score are ${SPEECH_TEXT(0)} AND ${SPEECH_SCORE(0)} while the second are ${SPEECH_TEXT(1)}
and ${SPEECH_SCORE(1)}.
  The first argument is the sound file and the second is the timeout integer in seconds. Note the timeout will
only start once the sound file has stopped playing. The third argument specifies options:
  Valid Options:
    n - Don't answer the channel if it has not already been answered.
  SpeechDestroy():
This destroys the information used by all the other speech recognition applications.
If you call this application but end up wanting to recognize more speech, you must call SpeechCreate
again before calling any other application. It takes no arguments.
  SpeechProcessingSound(Sound File):
This changes the processing sound that SpeechBackground plays back when the speech recognition engine is
processing and working to get results.
It takes the sound file as the only argument.
speech_processing_sound
_ast_strdup
speech_background
_ast_calloc
a9c98e5d177805051735cb5b0b16b0a0
app_speech_utils.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
