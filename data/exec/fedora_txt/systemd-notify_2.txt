/lib64/ld-linux-x86-64.so.2
__gcc_personality_v0
GCC_3.3.1
libgcc_s.so.1
memcpy
GLIBC_2.14
libc.so.6
free
GLIBC_2.2.5
_Unwind_Resume
GCC_3.0
sendmsg
libpthread.so.0
__libc_start_main
getgid
getpid
__gmon_start__
_init
_fini
__lxstat
getuid
_ITM_deregisterTMCloneTable
socket
_ITM_registerTMCloneTable
strlen
__cxa_finalize
write
_Jv_RegisterClasses
program_invocation_short_name
optarg
optind
strchr
getopt_long
unlink
getppid
fcntl
sigfillset
__asprintf_chk
GLIBC_2.8
read
sigemptyset
open
getsockopt
__errno_location
__fxstat
malloc
__xstat
realloc
getenv
clock_gettime
librt.so.1
__ctype_tolower_loc
GLIBC_2.3
__ctype_b_loc
strtoull
strtoll
sysconf
close
stdout
uname
canonicalize_file_name
__strdup
syscall
setsockopt
strtol
strtoul
statfs
access
ferror
kill
secure_getenv
GLIBC_2.17
_IO_getc
writev
fclose
fopen
basename
fgets
strerror
closedir
readdir
getrlimit
opendir
isatty
usleep
prctl
lseek
strnlen
qsort
connect
localtime
__stack_chk_fail
GLIBC_2.4
memcmp
__sprintf_chk
GLIBC_2.3.4
__bss_start
_end
_edata
__snprintf_chk
puts
abort
stpcpy
strrchr
__tls_get_addr
ld-linux-x86-64.so.2
strcmp
sscanf
__printf_chk
strncmp
__progname
strncpy
strftime
__vsnprintf_chk
strcasecmp
a_&	
AWAVAUATA
AYAZ
[A\A]A^A_]
fffdH
\tVH
\tLH
t+ff.
u{fffdH
fffff.
fffff.
fffff.
ATUS
[]A\
fffff.
fff.
x\ATUS
[]A\
fffff.
AWAVM
AUATA
#uzH
[]A\A]A^A_
\$ M
AWAVAUATSH
[A\A]A^A_]
AWAVAUATSH
3fff.
[A\A]A^A_]
ATUSH
[]A\
fffff.
AWAVA
AUAT
d$ H
l$PL
\$@ff.
[]A\A]A^A_
fff.
tgUSH
ffff.
fffff.
)D$P
)L$`
)T$p
fffff.
D$(1
L$(dH3
0[]A\
HcD$
fffff.
ffff.
AWAVAUATH
AQAQAQWL
AWQAS
[A\A]A^A_]
fffff.
fff.
AWAVAUATSH
ffff.
[A\A]A^A_]
fff.
ffff.
ffffff.
ATUI
[]A\
AWAVAUATA
[A\A]A^A_]
usE1
AWAVAUATUSH
t$8H
T$@H
L$HL
D$PL
L$Xt:
)D$`
)L$p
D$(1
D$ I
L$0H
L$(dH3
[]A\A]A^A_
ffffff.
AUATUSH
[]A\A]
A\A]
ffffff.
AWAVA
AUATL
[]A\A]A^A_
fffff.
../src/shared/time-util.c
../src/shared/util.c
true
false
close_nointr(fd) != -EBADF
openvz
other
lxc-libvirt
systemd-nspawn
docker
/proc/vz
/proc/bc
container
/run/systemd/container
/proc/cmdline
/etc/initrd-release
SYSTEMD_LOG_TARGET
SYSTEMD_LOG_LEVEL
../src/shared/log.c
SYSTEMD_LOG_COLOR
SYSTEMD_LOG_LOCATION
../src/notify/notify.c
argc >= 0
argv
systemd 219
Failed to parse PID %s.
Unhandled option
/run/systemd/system/
READY=1
STATUS=
MAINPID=%i
Out of memory.
help
version
ready
status
booted
line
/proc/%i/cmdline
_value
/proc/%i/environ
../src/shared/fileio.c
/proc/self/stat
 %*c %*d %*d %*d %lu 
<%i>
%h %e %T 
[%i]: 
emerg
console
debug
systemd.log_target
systemd.log_level
systemd.log_color
systemd.log_location
/dev/kmsg
/dev/console
console-prefixed
kmsg
journal
journal-or-kmsg
syslog
syslog-or-kmsg
auto
safe
null
alert
crit
warning
notice
info
ERRNO=
CODE_FUNCTION=
CODE_LINE=
CODE_FILE=
MESSAGE=
buffer
[1;31m
(%s:%i) 
NOTIFY_SOCKET
allocated
name
/proc/%i/comm
Failed to parse log target '%s'. Ignoring.
Failed to parse log level '%s'. Ignoring.
Failed to parse bool '%s'. Ignoring.
%s [OPTIONS...] [VARIABLE=VALUE...]
Notify the init system about service status updates.
  -h --help            Show this help
     --version         Show package version
     --ready           Inform the init system about service start-up completion
     --pid[=PID]       Set main pid of daemon
     --status=TEXT     Set status text
     --booted          Check if the system was booted up with systemd
+PAM +AUDIT +SELINUX +IMA -APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ -LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN
Code should not be reached '%s' at %s:%u, function %s(). Aborting.
Failed to notify init system: %m
Assertion '%s' failed at %s:%u, function %s(). Aborting.
(size_t) snprintf(header_priority, ELEMENTSOF(header_priority), "<%i>", level) < ELEMENTSOF(header_priority)
clock_gettime(clock_id, &ts) == 0
(size_t) snprintf(header_pid, ELEMENTSOF(header_pid), "[""%" "i""]: ", getpid()) < ELEMENTSOF(header_pid)
Failed to parse log color setting '%s'. Ignoring.
Failed to parse log location setting '%s'. Ignoring.
PRIORITY=%i
SYSLOG_FACILITY=%i
%s%s%s%s%.*i%s%s%s%s%s%.*i%s%s%s%sSYSLOG_IDENTIFIER=%s
unquote_first_word
log_parse_environment
/run/systemd/journal/socket
/dev/log
parse_argv
parse_argv
main
safe_close
parse_boolean
log_level_from_string
parse_proc_cmdline_item
write_to_syslog
read_one_line_file
getenv_for_pid
get_process_cmdline
greedy_realloc
write_to_kmsg
log_dispatch
;*3$"
zPLR
gold 1.11
systemd-notify.debug
7zXZ
;%4:D
2$JG
W9)H%
@4cqa
y+I)p\
u{H\V+<}
Rxmb
,==N
i"A*+
5cRq
	h1G
jNtQM
Cdx".
!zAT
pAX%
.An4
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.dynsym
.dynstr
.gnu.hash
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.gcc_except_table
.eh_frame
.eh_frame_hdr
.tdata
.tbss
.data.rel.ro.local
.jcr
.fini_array
.init_array
.dynamic
.got
.got.plt
.tm_clone_table
.data
.bss
.note.gnu.gold-version
.gnu_debuglink
.gnu_debugdata
