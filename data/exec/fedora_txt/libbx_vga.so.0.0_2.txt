LDGDH14#
m(!6
f4l)-H
\#1fMV
aoKr
y3h>2
;Xsv
Ya7s
_"H6
o$IV
/1CE
>cms
 kKrE#?*
__gmon_start__
__cxa_finalize
_Jv_RegisterClasses
_ZN13bx_devmodel_c4initEv
_ZN13bx_devmodel_c5resetEj
_ZN13bx_devmodel_c14register_stateEv
_ZN13bx_devmodel_c19after_restore_stateEv
_ZN13bx_vga_stub_c20get_actl_palette_idxEh
_ZN13bx_vga_stub_c11dump_statusEv
_Z22bx_vga_set_smf_pointerP8bx_vga_c
theVga
_ZN8bx_vga_c15init_iohandlersEPFjPvjjEPFvS0_jjjE
pluginRegisterIOReadHandler
pluginRegisterIOWriteHandler
__stack_chk_fail
_ZN8bx_vga_c27determine_screen_dimensionsEPjS0_
_ZN8bx_vga_c16mem_read_handlerEjjPvS0_
_ZN8bx_vga_c17mem_write_handlerEjjPvS0_
_ZN8bx_vga_c17get_text_snapshotEPPhPjS2_
_ZN8bx_vga_c20get_actl_palette_idxEh
_ZN8bx_vga_c11dump_statusEv
_ZN8bx_vga_c12vbe_mem_readEj
_ZN8bx_vga_c8mem_readEj
_ZN8bx_vga_c16vbe_read_handlerEPvjj
_ZN12logfunctions5panicEPKcz
_ZN13bx_vga_stub_c13trigger_timerEPv
pluginlog
_ZN13bx_vga_stub_c17get_text_snapshotEPPhPjS2_
_ZN13bx_vga_stub_c9mem_writeEjh
_ZN13bx_vga_stub_c8mem_readEj
_ZN13bx_vga_stub_c11redraw_areaEjjjj
_ZN8bx_vga_c13vbe_mem_writeEjh
_ZN12logfunctions4infoEPKcz
_ZN8bx_vga_c11redraw_areaEjjjj
old_iWidth
old_iHeight
memset
_ZN8bx_vga_c17vbe_write_handlerEPvjjj
_ZN12logfunctions5errorEPKcz
_ZN12logfunctions6ldebugEPKcz
bx_gui
_ZN8bx_vga_c9mem_writeEjh
_ZN8bx_gui_c17set_text_charbyteEth
_ZN8bx_vga_c12read_handlerEPvjj
bx_pc_system
_ZN14bx_pc_system_c9time_usecEv
_ZN8bx_vga_c6updateEv
old_MSL
memcpy
_ZN8bx_vga_c13timer_handlerEPv
_ZN8bx_vga_c13trigger_timerEPv
_ZN8bx_vga_c17vga_param_handlerEP10bx_param_cil
_ZN14bx_pc_system_c14activate_timerEjjj
_ZN8bx_vga_c5writeEjjjj
_ZN8bx_vga_c20write_handler_no_logEPvjjj
_ZN8bx_gui_c16set_text_charmapEPh
_ZN8bx_vga_c13write_handlerEPvjjj
_ZN8bx_vga_c19after_restore_stateEv
_ZN8bx_vga_c5resetEj
_Unwind_Resume
_ZN8bx_vga_c14register_stateEv
_Znwm
_ZN9bx_list_cC1EP10bx_param_cPKcS3_i
_ZN9bx_list_cC1EP10bx_param_cPKci
_ZN16bx_shadow_bool_cC1EP10bx_param_cPKcPjh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPhihh
__sprintf_chk
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPjihh
_ZN16bx_shadow_data_cC1EP10bx_param_cPKcPhj
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPtihh
_ZdlPv
__gxx_personality_v0
_ZN8bx_vga_c16init_systemtimerEPFvPvEPFlP10bx_param_cilE
_ZN14bx_pc_system_c14register_timerEPvPFvS0_EjjjPKc
_ZN14bx_param_num_c11set_handlerEPFlP10bx_param_cilE
_ZN13bx_vga_stub_cD0Ev
_ZTV13bx_devmodel_c
_ZN12logfunctionsD2Ev
_ZN13bx_vga_stub_cD1Ev
_ZN13bx_devmodel_cD0Ev
_ZN13bx_devmodel_cD1Ev
_ZN8bx_vga_c4initEv
strcmp
_ZN8bx_mem_c22registerMemoryHandlersEPvPFjjjS0_S0_ES2_jj
bx_devices
strlen
_ZN8bx_gui_c4initEiPPcjj
_Znam
strcpy
strtok
isspace
free
strdup
_ZdaPv
_ZN8bx_vga_cD1Ev
_ZTV8bx_vga_c
_ZN8bx_vga_cD2Ev
_ZN8bx_vga_cC2Ev
_ZN12logfunctionsC2Ev
_ZN12logfunctions3putEPKc
_ZN8bx_vga_cD0Ev
_ZN8bx_vga_cC1Ev
_ZTI8bx_vga_c
_ZTS8bx_vga_c
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTI13bx_vga_stub_c
_ZTS13bx_vga_stub_c
_ZTI13bx_devmodel_c
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTS13bx_devmodel_c
_ZTI12logfunctions
_ZTVN10__cxxabiv117__class_type_infoE
_ZTS12logfunctions
_ZTV13bx_vga_stub_c
_ZN20bx_pci_device_stub_cD1Ev
_ZTV20bx_pci_device_stub_c
_ZN20bx_pci_device_stub_c16pci_read_handlerEhj
_ZN20bx_pci_device_stub_c17pci_write_handlerEhjj
libvga_LTX_plugin_fini
_ZN16bx_svga_cirrus_c24mem_write_mode4and5_8bppEhjh
_ZN16bx_svga_cirrus_c25mem_write_mode4and5_16bppEhjh
_ZN16bx_svga_cirrus_c23cirrus_mem_read_handlerEjjPvS0_
_ZN16bx_svga_cirrus_c24cirrus_mem_write_handlerEjjPvS0_
_ZN16bx_svga_cirrus_c21svga_init_pcihandlersEv
_ZN16bx_svga_cirrus_c17svga_reset_bitbltEv
_ZN16bx_svga_cirrus_c28svga_setup_bitblt_cputovideoEjj
_ZN16bx_svga_cirrus_c23svga_patterncopy_memsrcEv
_ZN16bx_svga_cirrus_c24svga_simplebitblt_memsrcEv
_ZN16bx_svga_cirrus_c30svga_colorexpand_transp_memsrcEv
_ZN16bx_svga_cirrus_c30svga_setup_bitblt_videotovideoEjj
_ZN16bx_svga_cirrus_c17svga_simplebitbltEv
_ZN16bx_svga_cirrus_c16svga_patterncopyEv
_ZN16bx_svga_cirrus_c18svga_colorexpand_8EPhPKhi
_ZN16bx_svga_cirrus_c19svga_colorexpand_16EPhPKhi
_ZN16bx_svga_cirrus_c19svga_colorexpand_24EPhPKhi
_ZN16bx_svga_cirrus_c19svga_colorexpand_32EPhPKhi
_ZN16bx_svga_cirrus_c25svga_get_bkwd_rop_handlerEh
_ZN16bx_svga_cirrus_c24svga_get_fwd_rop_handlerEh
_ZN16bx_svga_cirrus_c28svga_setup_bitblt_videotocpuEjj
_ZN16bx_svga_cirrus_c15update_bank_ptrEh
_ZN16bx_svga_cirrus_c20draw_hardware_cursorEjjP18bx_svga_tileinfo_t
_ZN16bx_svga_cirrus_c21svga_asyncbitblt_nextEv
memmove
_ZN16bx_svga_cirrus_c14svga_solidfillEv
_ZN16bx_svga_cirrus_c16svga_colorexpandEPhPKhii
_ZN16bx_svga_cirrus_c11svga_bitbltEv
_ZThn175992_N16bx_svga_cirrus_c16pci_read_handlerEhj
_ZN16bx_svga_cirrus_c16pci_read_handlerEhj
_ZThn175992_N16bx_svga_cirrus_c17pci_write_handlerEhjj
_ZN16bx_svga_cirrus_c17pci_write_handlerEhjj
_ZN16bx_svga_cirrus_c15svga_modeupdateEv
_ZN16bx_svga_cirrus_c18svga_write_controlEjjh
_ZN16bx_svga_cirrus_c19svga_mmio_blt_writeEjh
_ZN16bx_svga_cirrus_c20svga_write_sequencerEjjh
_ZN16bx_svga_cirrus_c15svga_write_crtcEjjh
_ZN16bx_svga_cirrus_c18svga_write_handlerEPvjjj
_ZN16bx_svga_cirrus_c19svga_mmio_vga_writeEjh
_ZN16bx_svga_cirrus_c17svga_read_controlEjj
_ZN16bx_svga_cirrus_c18svga_mmio_blt_readEj
_ZN16bx_svga_cirrus_c19svga_read_sequencerEjj
_ZN16bx_svga_cirrus_c14svga_read_crtcEjj
_ZN16bx_svga_cirrus_c17svga_read_handlerEPvjj
_ZN16bx_svga_cirrus_c18svga_mmio_vga_readEj
_ZN16bx_svga_cirrus_c11svga_updateEv
_ZN16bx_svga_cirrus_c18svga_timer_handlerEPv
_ZN16bx_svga_cirrus_c20get_actl_palette_idxEh
_ZN16bx_svga_cirrus_c18svga_param_handlerEP10bx_param_cil
_ZN16bx_svga_cirrus_c13trigger_timerEPv
_ZN16bx_svga_cirrus_c17get_text_snapshotEPPhPjS2_
_ZN16bx_svga_cirrus_c9mem_writeEjh
_ZN16bx_svga_cirrus_c8mem_readEj
_ZN16bx_svga_cirrus_c11redraw_areaEjjjj
_ZN16bx_svga_cirrus_c19after_restore_stateEv
_ZN20bx_pci_device_stub_cD0Ev
_ZN16bx_svga_cirrus_c14register_stateEv
_ZN20bx_pci_device_stub_c18register_pci_stateEP9bx_list_cPh
_ZN16bx_svga_cirrus_c17svga_init_membersEv
_ZN16bx_svga_cirrus_c5resetEj
_ZN16bx_svga_cirrus_c4initEv
_ZThn175992_N16bx_svga_cirrus_cD0Ev
_ZN16bx_svga_cirrus_cD0Ev
_ZTV16bx_svga_cirrus_c
_ZThn175992_N16bx_svga_cirrus_cD1Ev
_ZN16bx_svga_cirrus_cD1Ev
_ZN16bx_svga_cirrus_cD2Ev
_ZN16bx_svga_cirrus_cC1Ev
_ZN16bx_svga_cirrus_cC2Ev
libvga_LTX_plugin_init
pluginRegisterDeviceDevmodel
_ZTI16bx_svga_cirrus_c
_ZTS16bx_svga_cirrus_c
_ZTI20bx_pci_device_stub_c
_ZTS20bx_pci_device_stub_c
libstdc++.so.6
libm.so.6
libc.so.6
libgcc_s.so.1
_edata
__bss_start
_end
libbx_vga.so.0
GCC_3.0
CXXABI_1.3
GLIBCXX_3.4
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.2.5
%z\!
%r\!
%j\!
%b\!
%Z\!
%R\!
%J\!
%B\!
%:\!
%2\!
%*\!
%"\!
%z[!
%r[!
%j[!
%b[!
%Z[!
%R[!
%J[!
%B[!
%:[!
%2[!
%*[!
%"[!
%zZ!
%rZ!
%jZ!
%bZ!
%ZZ!
%RZ!
%JZ!
%BZ!
%:Z!
%2Z!
%*Z!
%"Z!
ATSubH
AVAUATI
-pU!
D$(1
D$(dH3
8[]L
A\A]A^A_
y]@u
yRAu
fff.
[]A\A]
St+L
5mQ!
[]A\A]
fff.
fff.
fffff.
fffff.
AUATUS
[]A\A]A^
-;I!
[]A\A]A^1
[]A\A]A^1
[]A\A]A^1
 tDf
[]A\A]A^1
D$@A
D$?A
L$PA
D$pA
D$oE
L$OE
D$NA
|$P@
L$oD
|$OA	
t$N	
L$0D
D$ L
T$(L
L$0L
T$(A
L$@D
D$PA
D$oA
D$OA
L$NA
L$PD
|$oD
t$OD
L$P!
L$OE
L$NE
L$?A
|$OD
t$ND
|$OD
t$ND
L$o@
D$ L
T$(L
|$OD
L$0D
D$ L
T$(L
L$PD
|$oD
t$OD
D"|$
D"D$?!
L$PD
|$oD
t$OD
|$OD
t$ND
t$P@
L$p@
L$pD
|$OA	
L$oD
D2|$
D2D$?1
L$PD
|$oD
t$OD
L$PA
D$o	
D$OD
D$ND
D$?A
|$OD
t$ND
|$OD
t$ND
t$P@
L$oD
|$OA	
t$P@
t]@"
L$oD
|$OA	
L$p	
L$p1
L$P!
D$p"
L$p"
fffff.
l$ H
-Y0!
%v(I
fffff.
AWAVAUATUSH
[]A\A]A^A_
|$0H
t$8H
DkT$8
T$p9L$\
|$LAD
\$8L
D$hL
\$@1
L$LA
%c'!
L$PL
t$PH
D$0H
T$\I
L$`D
l$xD
T$\Mk
D$PH
T$`D
L$ht
D$@=
D$8E;
T$(D
D$8D
|$0H
T$(A
t$0M
\$xH
t$\fD
\$PH
L$Lf
T$@L
kt$8
9L$\
|$`A
|$`D
;D$@
T$PL
T$pH
d$0L
t$@I
|$@D
|$hH
|$xD
D;D$L
t$@I
P8HkT$pBL
D$@H
D$8E1
L$8H
|$0H
HkD$0BL
\$8D
D$@H
L$8E1
\$8L
T$0H
T$8D
0HkD$0BH
|$0AD
t$0A
t2t@
\$8L
T$P9D$L
|$\A
D$pH
t$h1
L$xH
t$hH
L$`H
T$@D
T$LD
L$@D
D$PA
l$8H
HkD$`BH
L$hL
\$(H
|$0AD
D$LL
L$@E1
L$@H
T$8H
HkD$8BH
D$@D
DkL$8
9L$\
|$`A
;D$@
L$PD
D$`H
L$pJ
T$0L
t$@I
\$@D
d$hH
|$xD
D;D$L
t$@I
HkT$pBH
t$8I
A;4$t-L
k\$8
9L$L
|$PAD
D$8H
D$hE1
d$@D
\$PL
\$pH
d$`J
D$0L
T$LH
T$LD
L$pH
HkT$`BH
Dk\$8
9L$\
|$`A
;D$L
\$PD
T$`L
\$pJ
d$0L
t$LI
L$hA
t$8D
|$xH
D;D$@
t$LI
HkT$pBH
k|$8
9L$P
|$\AD
L$8L
|$LE1
D$L0
L$@D
D$\H
L$hJ
T$0L
T$PI
l$xE1
T$PD
HkT$hBH
&vFH
l$ L
d$(L
l$0H
l$ H
l$ L
d$(L
l$0H
@P@t
l$ L
l$01
fffff.
;[]H
fff.
AWAVAUATUSH
D$(1
d$ 1
D$(dH3
8[]A\A]A^A_
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
AWAVAUATUSH
|$ H
l$0%
D$0H
|$ A
|$ A
[]A\A]A^A_
|$(H
H9D$
fff.
l$ H
fff.
l$ H
fffff.
[]A\A]
fff.
[]A\A]
fff.
fff.
fff.
ffff.
S~JA
fffff.
S~MA
fffff.
S~JA
ffff.
S~KA
S~JA
S~JA
S~MA
S~MA
S~NA
S~KA
S~KA
S~MA
fffff.
tgvm@
tgvm@
U	Hc
w2Hc
AWAVAUATA
4*A9
L$2A
@t'I
[]A\A]A^A_
t$8H
t$PE1
D$xH
L$hH
L$HA
d$HHcL$HH
d$@Hct$@H
L$hH
L$xL#L$`H#L$pL#D$`H#t$HI	
L$XH#L$HI	
L$@H#L$pI	
l$$A
t$2A
t$(L
t$PH
|$(H
D9t$$
t$$f
D$8@
9|$4
D$2L
\$(D
D$(H
\$@E
\$@H
\$@E
\$@H
t$8H
|$@Hct$@H
|$HHcL$HH
D$4E
t$@E
AVAUATUSH
([]A\A]A^A_
VUUU
ATUSH
~yE1
[]A\A]
l$ H
l$ H
l$ H
l$ H
l$ H
AWAVAUATUSH
[]A\A]A^A_
VUUU
fffff.
AWAVAUATUSH
HcT$
l$ D9d$
l$(E
[]A\A]A^A_
VUUU
HcD$
D$(L
Lct$
D$ D1
fffff.
ATUSH
[]A\
[]A\
[]A\
[]A\
[]A\
fffff.
l$ L
d$(L
l$0H
l$ L
d$(1
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
3vEH
t$ H
t$ H
t$ H
t$ H
fff.
@v2H
fff.
l$ H
t$ H
'w%H
t$ H
fffff.
!vGH
@vSH
t[vy
fffff.
AWAVAUATUSH
[]A\A]A^A_
L$81
t$PH
l$<9,$
D$ E1
D$(H
T$`I
t$8H
L$`f
Aw#D
;\$8sKA
=a~ 
D$@D
l$<9,$
L$HH
D$0H
T$ H
D;|$8
D$@H
-4} 
L$eL
L$fL
t$`H
=B| 
T$`fE
L$ Hk
L$ H
T$@D
D$<9D$
t$89t$
t$ E1
l$HA
l$(I
L$eL
L$dL
#D$pE!
D$`H
T$(H
t$@D
D$<9D$
t$89t$
5hs 
L$ E1
t$HA
t$(I
L$eL
L$dL
#D$pE!
D$`H
T$(H
T$`fE
T$`fE
L$@D
l$<9l$
L$HH
D$0H
T$ H
D;|$8
5jn 
D$@H
L$fL
|$`H
\$`fE
L$ Hk
L$ H
l$HD
D$<9
l$\H
t$(H
t$89t$
D$HH
L$eL
L$fL
|$`H
\$`fE
Aw#D
L$(Hk
L$(H
=xl 
fffff.
=)l 
fffff.
ATUSH
[]A\
%c` 
[]A\
AVAUATUSH
D$(1
\$ 1
D$(dH3
8[]A\A]A^A_
fff.
fffff.
5JR 
=IV 
5KR 
=mT 
vga video
VBE_read shouldn't reach this
trigger_timer
get_text_snapshot
mem_write
mem_read
redraw_area
VBE set xres (%d)
VBE set yres (%d)
VBE set bpp (%d)
VBE set bank to %d
VBE set invalid bank (%d)
VBE disabling
DAC in 8 bit mode
DAC in standard mode
VBE offset x %d
VBE offset y %d
VBE offset y %d out of bounds
VBE decent virtual height %d
io read from 03cd
io read from vga port 0x%04x
cannot draw 4bpp SVGA
cannot get svga tile info
update: select_high_bank != 1
update: shift_reg == %u
Changing timer interval to %d
8-bit write to %04x = %02x
16-bit write to %04x = %04x
Weird VGA write size
io write 3c4: value > 4
io write to 0x3cd = 0x%02x
io write: 0x3ce: value > 8
display.vga_extension
none
unknown display extension: %s
svga_cirrus
VGA Adapter State
misc_output
color_emulation
enable_ram
select_high_bank
horiz_sync_pol
vert_sync_pol
CRTC
write_protect
attribute_ctrl
flip_flop
video_enabled
palette_reg
overscan_color
color_plane_enable
horiz_pel_panning
color_select
mode_ctrl
graphics_alpha
display_type
enable_line_graphics
blink_intensity
pixel_panning_compat
pixel_clock_select
internal_palette_size
write_data_register
write_data_cycle
read_data_register
read_data_cycle
dac_state
pel_data
graphics_ctrl
enable_set_reset
color_compare
data_rotate
raster_op
read_map_select
write_mode
read_mode
chain_odd_even
shift_reg
memory_mapping
color_dont_care
bitmask
latch0
latch1
latch2
latch3
sequencer
map_mask
reset1
reset2
char_map_select
extended_mem
chain_four
line_offset
line_compare
vertical_display_end
charmap_address
x_dotclockdiv2
y_doublescan
last_bpp
memory
cur_dispi
curindex
visible_screen_size
offset_x
offset_y
virtual_xres
virtual_yres
virtual_start
bpp_multiplier
lfb_enabled
get_capabilities
dac_8bit
display.vga_update_interval
interval=%llu
bochs
display.displaylib_options
Exit
VBE unknown data read index 0x%x
%s called in %s stub. you must not have loaded the %s plugin
VBE_mem_write out of video memory write at %x
VBE unknown Display Interface %x
VBE known Display Interface %x
VBE set xres more then max xres (%d)
VBE set xres during vbe enabled!
VBE set yres more then max yres (%d)
VBE set yres during vbe enabled!
VBE set bpp with unknown bpp (%d)
VBE set bpp during vbe enabled!
VBE set bank in LFB mode ignored
VBE enabling x %d, y %d, bpp %d, %u bytes visible
VBE requested virtual width %d
VBE recalc virtual width %d height %d
VBE: write to virtual height register ignored
VBE: write unsupported register at index 0x%x
mem_write: graphics: mapping = %u
vga_mem_write: write mode 0: op = %u
vga_mem_write: write mode %u ?
io read: 0x3c0: flip_flop != 0
io read: 0x3c1: unknown register 0x%02x
io read 0x3c2: input status #0: ignoring
io read 0x3c5: sequencer reset
io read 0x3c5: sequencer clocking mode
io read 0x3c5: index %u unhandled
io read 0x3cf: reg 05 = 0x%02x
io read: 0x3cf: index %u unhandled
io read: invalid CRTC register 0x%02x
8-bit read from 0x%04x = 0x%02x
16-bit read from 0x%04x = 0x%04x
current guest pixel format is unsupported on indexed colour host displays
update(): text mode: out of memory
io write 0x3c0: address mode reg=0x%02x
io write 0x3c0: data-write mode 0x%02x
char map select: map #2 in block #%d unused
io write 0x3c5: index 0x%02x unhandled
io write 0x3c6: PEL mask=0x%02x != 0xFF
io write: 0x3cf: mode reg: value = 0x%02x
io write: 0x3cf: index %u unhandled
write: invalid CRTC register 0x%02x selected
write: invalid CRTC register 0x%02x ignored
io write: 3da: ignoring: feature ctrl & vert sync
unsupported io write to port 0x%04x, val=0x%02x
too many parameters, max is 16
VBE Bochs Display Extension Enabled
8bx_vga_c
13bx_vga_stub_c
13bx_devmodel_c
12logfunctions
SVGA Cirrus PCI
unknown ROP %02x
bank offset %08x is invalid
BLT: SOLIDFILL
svga_cirrus: COLOR EXPAND
svga_cirrus: BITBLT
svga_cirrus: PATTERN COPY
unknown pixel width
pci_read: io_len > 4!
new pci_memaddr: 0x%04x
new pci_mmioaddr = 0x%08x
switched to %u x %u x %u
SVGA write: io_len != 1
SVGA read: io_len != 1
mem_read 0x%08x
Cirrus SVGA State
crtc
control
shadow_reg0
shadow_reg1
hidden_dac
lockindex
palette
svga_unlock_special
svga_xres
svga_yres
svga_pitch
svga_bpp
svga_dispbpp
bank_base0
bank_base1
bank_limit0
bank_limit1
hw_cursor
CL-GD5446 PCI initialized
CL-GD5430 ISA initialized
CLVGA
BLT: MEMSYSDEST is not implemented
unsupported hardware cursor size
svga_asyncbitblt_next: unexpected call
BLT, cpu-to-video, transparent
COLOREXPAND: unknown pixelwidth %u
svga_cirrus: BLT, cpu-to-video
cpu-to-video BLT: unknown bltmode %02x
SIMPLE BLT: unknown bltmode %02x
PATTERNCOPY: unknown bltmode %02x
BLT: src:0x%08x,dst 0x%08x,block %ux%u,mode 0x%02x,ROP 0x%02x
BLT: srcpitch:0x%08x,dstpitch 0x%08x,modeext 0x%02x,writemask 0x%02x
BLT: memory-to-memory copy is requested, ROP %02x
BLT redraw: x = %d, y = %d, w = %d, h = %d
pci_read: (address + io_len) > 256!
pci_read: address 0x%02x, io_len 0x%02x, value 0x%x
svga_patterncopy_memsrc() - not tested
pci_write: address 0x%02x, io_len 0x%02x, value 0x%x
unknown bpp - seqencer.reg[0x07] = %02x
control: index 0x%02x write 0x%02x
BLT WRITE MASK support is not complete (value = 0x%02x)
control index 0x%02x is unknown(write 0x%02x)
MMIO blt write - address 0x%04x, value 0x%02x
CLGD543x_MMIO_BLTTRANSPARENTCOLOR
CLGD543x_MMIO_BLTTRANSPARENTCOLORMASK
sequencer: index 0x%02x write 0x%02x
sequencer index 0x%02x is unknown(write 0x%02x)
crtc: index 0x%02x write 0x%02x
CRTC index 0x%02x is unknown(write 0x%02x)
MMIO vga write - address 0x%04x, value 0x%02x
control index 0x%02x is unknown(read)
MMIO blt read - address 0x%04x
MMIO blt read - address 0x%04x, value 0x%02x
sequencer index 0x%02x is unknown(read)
CRTC index 0x%02x is unknown(read)
MMIO vga read - address 0x%04x, value 0x%02x
current guest pixel format is unsupported on indexed colour host displays, svga_dispbpp=%d
mem_write 0x%08x, value 0x%02x
16bx_svga_cirrus_c
20bx_pci_device_stub_c
zPLR
libbx_vga.so.0.0.0.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
