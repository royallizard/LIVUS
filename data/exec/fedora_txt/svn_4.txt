/lib64/ld-linux-x86-64.so.2
#t2CE
libsvn_client-1.so.0
apr_hash_get
svn_string_ncreate
svn_hash_from_cstring_keys
svn_hash_keys
svn_string_create
svn_opt_parse_path
svn_diff_file_options_parse
svn_error__locate
__gmon_start__
_Jv_RegisterClasses
svn_io_check_path
svn_path_split
svn_error_createf
svn_path_url_add_component2
svn_config_get
apr_hash_next
apr_array_push
svn_io_open_uniquely_named
svn_cstring_split
svn_io_temp_dir
svn_diff_file_output_unified3
apr_array_pop
svn_wc_entry
svn_error__malfunction
apr_hash_this
svn_mime_type_is_binary
svn_path_canonicalize
svn_error_root_cause
apr_pool_destroy
svn_stringbuf_create
svn_error_quick_wrap
svn_error_create
apr_hash_count
svn_path_basename
svn_wc_create_conflict_result
svn_error_clear
svn_stringbuf_dup
svn_sort__hash
apr_hash_set
apr_pool_clear
svn_diff_file_diff_2
svn_wc_adm_probe_open3
apr_psprintf
svn_time_from_cstring
apr_palloc
svn_diff_file_options_create
svn_path_uri_encode
svn_io_remove_file
svn_path_uri_decode
svn_path_is_url
svn_depth_from_word
svn_path_condense_targets
svn_utf_cstring_from_utf8_ex2
apr_hash_first
apr_pstrdup
svn_path_join
svn_error_wrap_apr
svn_string_dup
svn_opt__split_arg_at_peg_revision
apr_hash_make
svn_sort_compare_items_as_paths
svn_error_compose
svn_string_compare
svn_prop_name_is_valid
apr_pstrcat
svn_wc_get_actual_target
svn_config_get_bool
svn_path_local_style
svn_path_is_child
svn_pool_create_ex
apr_array_make
svn_utf_cstring_to_utf8
svn_client_args_to_target_array
svn_client_propget3
svn_client_import3
svn_client_diff_summarize2
svn_client_commit4
svn_client_revprop_set2
svn_client_cat2
svn_client_switch2
svn_client_diff4
svn_client_get_changelists
svn_client_resolve
svn_client_info2
svn_client_copy5
svn_client_log5
svn_client_merge3
svn_client_relocate
svn_client_mergeinfo_log_merged
svn_client_remove_from_changelists
svn_client_revprop_list
svn_client_blame4
svn_client_cleanup
svn_client_move5
svn_client_add_to_changelist
svn_client_list2
svn_client_revert2
svn_client_add4
svn_client_merge_reintegrate
svn_client_update3
svn_client_export4
svn_client_revprop_get
svn_client_status4
svn_client_mkdir3
svn_client_version
svn_client_proplist3
svn_client_checkout3
svn_client_lock
svn_client_url_from_path
svn_client_diff_peg4
svn_client_mergeinfo_log_eligible
svn_client_diff_summarize_peg2
svn_client_unlock
svn_client_create_context
svn_client_delete3
svn_client_propset3
svn_client_merge_peg3
libsvn_wc-1.so.0
svn_xml_make_close_tag
svn_path_cstring_from_utf8
svn_stringbuf_from_file2
svn_stream_printf
apr_itoa
svn_xml_make_open_tag_hash
svn_string_create_from_buf
svn_diff_file_output_merge2
svn_time_to_cstring
svn_error_dup
apr_pstrndup
svn_stringbuf_strip_whitespace
svn_depth_to_word
svn_ctype_table
svn_diff_file_diff3_2
svn_xml_make_header
svn_stringbuf_create_from_string
svn_stringbuf_appendcstr
svn_stringbuf_setempty
svn_prop_is_boolean
svn_stream_write
svn_xml_make_open_tag
svn_path_internal_style
svn_stringbuf_appendbytes
svn_wc_dup_status2
svn_wc_version
libsvn_ra-1.so.0
svn_ra_initialize
svn_ra_version
svn_ra_print_modules
libsvn_diff-1.so.0
apr_strftime
svn_utf_cstring_from_utf8
apr_getopt_long
apr_time_exp_lt
svn_diff_version
libsvn_ra_local-1.so.0
svn_delta_version
svn_subr_version
svn_stringbuf_set
svn_ver_check_list
libsvn_repos-1.so.0
svn_prop_needs_translation
svn_subst_translate_cstring2
apr_file_close
libsvn_fs-1.so.0
libsvn_fs_fs-1.so.0
apr_stat
apr_time_now
libsvn_fs_base-1.so.0
libsvn_fs_util-1.so.0
libsvn_ra_svn-1.so.0
apr_file_open_stdout
libsasl2.so.2
libsvn_ra_neon-1.so.0
svn_xml_escape_cdata_cstring
apr_file_write_full
libsvn_delta-1.so.0
apr_file_open_stderr
libsvn_subr-1.so.0
apr_env_get
apr_file_mtime_set
svn_config_set_bool
svn_cmdline_printf
svn_subst_detranslate_string
svn_compat_log_revprops_out
svn_opt_get_canonical_subcommand2
svn_cstring_count_newlines
svn_opt_print_help3
svn_opt_get_option_from_code2
svn_opt_format_option
svn_cmdline_fprintf
svn_config_get_config
svn_utf_stringbuf_to_utf8
svn_opt__eat_peg_revisions
svn_subst_translate_string
svn_opt_subcommand_takes_option3
svn_opt_parse_revprop
svn_opt_parse_revision_to_range
svn_config_ensure
svn_cmdline_fflush
svn_handle_error2
svn_cmdline_create_auth_baton
svn_cmdline_init
svn_xml_fuzzy_escape
svn_cmdline_fputs
svn_compat_log_revprops_clear
svn_opt_push_implicit_dot_target
svn_stream_for_stdout
svn_cmdline_cstring_from_utf8
svn_cmdline__print_xml_prop
svn_cmdline_handle_exit_error
svn_cmdline__getopt_init
svn_cmdline_prompt_user2
svn_cmdline_output_encoding
svn_handle_warning2
svn_opt_parse_num_args
svn_time_to_human_cstring
svn_io_parse_mimetypes_file
svn_config_set
svn_io_run_cmd
libz.so.1
libsqlite3.so.0
libaprutil-1.so.0
libcrypt.so.1
libexpat.so.1
libdb-4.8.so
libapr-1.so.0
apr_allocator_create
apr_allocator_owner_set
apr_filepath_set
apr_allocator_max_free_set
apr_signal
apr_filepath_get
libpthread.so.0
system
__errno_location
libdl.so.2
libneon.so.27
libc.so.6
__printf_chk
dcngettext
dcgettext
__stack_chk_fail
abort
__assert_fail
strtol
strlen
strstr
getenv
__ctype_b_loc
strchr
__ctype_tolower_loc
__cxa_finalize
strcmp
__libc_start_main
_edata
__bss_start
_end
svn_cl__diff
svn_cl__move
svn_cl__propedit
svn_cl__mkdir
svn_cl__import
svn_cl__cmd_table
svn_cl__add
svn_cl__status
svn_cl__merge
svn_cl__delete
svn_cl__revert
svn_cl__commit
svn_cl__log
svn_cl__get_log_message
__libc_csu_init
svn_cl__conflict_handler
svn_cl__lock
svn_cl__blame
svn_cl__global_options
__libc_csu_fini
svn_cl__copy
svn_cl__options
GLIBC_2.2.5
GLIBC_2.4
GLIBC_2.3
GLIBC_2.3.4
u+H9\$
ATUSH
[]A\A]A^A_
L$8u
5ov"
L$8t
L$8u
t$@H
H(Hc
|$HE1
E9t$
T$0I
tO~=
D$HH
|$H1
|$HH
H9D$H
H9D$x
H+T$HH
t$HL
T$PH
t$xL
T$XH+T$PL
t2~ 
t%H;
u?H;
D$8H
T$0L
|$hL
t$`H
D$8H
d$ H
D$HH
H+D$XH
t$XH
ATSubH
[A\]
|$(M
\$8H
l$@L
d$HL
l$PL
t$XL
|$`H
|$(L
t$HI
|$@M
D$(A
t$`H
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
D$ L
T$(L
T$(L
\$0L
D$ H
\$HH
l$PL
d$XL
l$`L
t$hL
|$pH
IhE1
L$8L
\$HH
l$PL
d$X1
l$`L
t$hL
|$pH
ffffff.
D$(H
|$(I
|$(I
|$(H
D$(H
\$8H
l$@L
d$HL
l$PL
t$XL
|$`H
|$(L
T$pH
L$xH
|$(L
|$(H
|$(H
l$hL
t$XH
d$`H
L$HH
D$XH
|$ L
T$PH
\$DE
t$pE
t$pH
t$`L
t$`I
l$hL
d$`L
|$8H
\$XH
l$`L
d$hL
l$pL
t$xL
|$@L
t$HH
|$ L
T$ H
t$HH
|$@M
D$8A
\$ H
l$(L
d$0L
l$8L
t$@H
AWAVAUATI
|$hH
[]A\A]A^A_
T$pH
D$PH
D$@H
D$XH
D$HD
D$@H
L$PH
t$x1
;D$,
D$@H
D$hH
t$xH
|$PL
|$xL
T$hH
|$pL
T$pH
t$pH
|$0L
|$pL
|$hH
|$pL
l$ L
d$(L
l$0L
t$8L
|$@H
|$8M
\$xH
~dE1
|$8A
t$8H
|$8L
T$8H
t$@H
|$HM
D$@H
|$HH
T$`H
t$XL
L$(H
t$lE1
T$HI
L$lL
t$8H
|$PL
t$XL
l$ H
fffff.
H9E0
\$xH
T$lI
D$lL
L$HI
|$PL
|$`L
5l?"
D$8H
|$XL
D$XH
D$DI
|$`H
T$0H
t$`H
|$XL
|$`L
D$`H
T$0L
T$0L
|$XL
T$0L
t$XH
|$`E1
DD$D
t$(H
\$hH
l$pL
d$xL
t$HH
T$8H
D$XH
|$0M
t$HA
T$ H
t$XH
|$HH
D$HH
|$HA
D$(H
t$(H
|$(I
T$(H
D$(D
|$PD
t$0L
T$(H
|$PH
t$(H
|$(I
l$0H
\$(L
d$8L
l$@H
L$(I
|$x1
t$HI
|$@M
|$xL
|$8H
|$8H
|$8H
D$8H
\$@H
l$HL
d$PL
l$XL
t$`H
ffff.
ffffff.
L$PH
T$xH
L$xL
l$ L
\$pE
l$ L
L$xH
T$XH
L$PH
L$PH
T$XH
t$`H
l$HL
|$@H
D$ H
L$8H
T$0L
T$XH
l$HL
|$@L
t$0L
d$(H
D$ H
D$xH
|$pH
l$xI
|$pH
|$PM
l$pH
\$hL
d$xL
t$XH
|$0L
T$HH
|$H1
d$ L
L$0H
T$H1
|$XL
|$XL
on is a H
tool forI
For adI
ditionalI
 informaI
tion, seI
e http:/I
/subvers
 versionH
SubversiH
 controlH
ion.tigrH
is.org/
l$ H
|$ M
l$@H
\$8L
d$HL
l$PL
t$XL
|$`H
L$(I
|$x1
t$HI
|$@M
|$xL
|$(H
AUATI
D$8H
|$8H
|$8E1
|$8H
|$8H
|$8H
|$8I
|$8E1
|$8H
|$8H
|$8H
|$8H
|$8H
|$8E1
|$8H
|$8H
|$8H
|$8H
|$8H
|$8H
|$8H
@[]A\A]A^
|$8H
D$8H
@[]A\A]A^
|$81
|$8H
|$8H
|$8H
|$8H
|$8H
|$8H
|$8H
|$8H
fff.
l$ L
d$(L
l$0H
|$`M
D$(tDH
D$(H
\$xH
|$`L
D$`D
l$@H
t$@L
D$`A
t$hH
|$PL
t$PE
L$0H
t$PL
T$8H
|$hH
t$@L
l$@L
\$LE
\$ H
l$(L
d$0L
l$8L
t$@H
|$(H
|$0H
D$x1
T$xdH3
|$ H
D$ H
t$PH
|$XL
|$XL
\$xH
|$XL
D$XD
D$,H
|$`H
t$@H
D$XA
t$`H
|$@L
D$hH
D$`L
D$hH
|$hL
D$hH
l$ L
d$(L
l$0L
t$8L
|$@H
t$HI
|$@E1
AWAVAUI
D$@I
[]A\A]A^A_
|$HH
T$XH
|$HH
D$HH
|$PH
D$PH
|$XH
D$XI
|$@I
L$HH
|$@H
L$PH
|$@H
|$@E1
D$(H
L$pL
D$ H
t$`H
|$@H
|$@H
L$hH
t$`1
t$hA
D$pt
L$pL
|$@H
|$@H
D$@H
|$@H
L$XH
|$@H
D$@H
|$@H
|$@E1
|$@1
|$@H
\$HH
l$PL
d$XL
l$`L
t$hL
|$pH
T$8H
t$0H
t$0H
D$0H
L$(1
|$8H
~PE1
T$8H
|$0L
|$pM
|$pL
D$pD
t$xH
|$`L
D$pH
T$xL
D$pA
D$0I
D$HL
d$PE
D$0D
d$(H
t$`H
l$ L
|$pH
D$0D
d$(H
t$`H
l$ L
|$pH
L$hH
T$`H
L$pH
T$hH
D$`H
T$pH
\$`E
D$ H
L$pL
d$0L
l$(H
d$(L
D$@L
L$HI
L$HL
D$@L
|$XH
|$HI
\$hH
l$pL
d$xL
t$PH
|$ H
D$X1
T$PH
|$XL
L$ H
t$0E1
T$PH
|$XL
L$ H
t$0E1
t$XH
|$0H
d$ L
l$(L
t$0H
L$(I
|$x1
t$HI
|$@M
|$xL
|$ M
l$8H
\$0L
d$@L
l$HL
t$PH
L$(I
|$x1
t$ H
|$ L
|$(L
t$ L
|$xL
|$(H
|$@I
t$HM
t$ H
t$ H
nPdH
    
|$XH
\$ H
l$(L
d$0L
l$8L
t$@H
t$ H
t$XL
d$@H
t$ H
d$8M
d$`H
D$HH
d$`H
d$`H
t$ H
t$ H
|$`H
D$`H
|$XH
|$hI
|$hH
t$hH
|$hH
|$xL
d$ L
t$X1
D$<I
T$<E1
d$@H
|$HI
t$hI
T$xH
L$xH
|$XL
L$pM
|$xH
D$xH
|$pH
T$@9P
T$@L
t$pL
L$`H
|$pH
L$0I
D$81
L$HH
\$pH
|$pL
T$PH
D$XH
T$PH
|$pM
\$pH
\$pH
F8E1
|$pL
d$ H
t$pL
L$HH
|$xL
|$xL
t$xH
\$xH
|$xH
T$09P
T$0L
|$`L
L$`H
t$xH
D$Pt
D$x1
|$8L
t$(H
|$8L
|$8H
T$xH
D$TH
t$HH
D$ H
t$8H
T$PH
|$@H
L$(E
|$@H
|$@H
l$Xt
l$ H
ffff.
\$ H
l$(L
d$0H
|$hM
|$hL
t$hH
T$xL
t$xH
L$pH
T$pH
D$(E
D$hD
l$8E1
d$0I
|$PL
D$HH
L$(H
t$PH
D$hA
d$0L
l$pH
([]A\A]
AVAUI
D$ u
t$ H
|$ H
|$(H
T$ H
t$(H
0[]A\A]A^
fff.
|$PL
\$xL
D$PH
|$@L
D$HH
t$HH
|$HL
|$XM
|$XL
t$XH
|$XL
D$XE1
D$HH
|$hD
T$HL
l$ L
t$@H
D$HH
|$@L
D$XI
\$@H
D$PL
t$XH
T$hL
L$hM
t$HH
|$@1
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
t$HI
|$@M
~zE1
l$ L
d$(L
l$0L
t$8L
|$@H
t$HI
|$@M
~xE1
l$ H
d$(L
l$0H
\$ H
l$(L
d$0L
l$8L
t$@H
\$ H
l$(L
d$0H
l$8L
t$@H
t$pH
T$lH
T$HH
T$HH
|$PL
L$@L
D$`L
|$0L
l$(H
t$PH
T$\H
T$\E1
T$@H
|$HH
T$@H
L$lD
T$`D
T$@H
fff.
AUATI
|$(I
|$(M
|$(I
|$(E1
|$(H
|$(H
|$(H
|$(H
|$(H
|$(H
|$(E1
|$(H
|$(H
|$(H
|$(H
|$(H
|$(H
|$(H
D$(H
8[]A\A]
|$(H
L$xD
L$|H
D$tt/H
t$ L
L$hD
D$XL
L$hD
D$XE
T$`A
D$XL
T$`L
D$XL
T$`L
\$hH
D$(D
t$@L
|$8L
\$0L
T$ D
t$xE
t$0L
|$(L
T$ D
|$`M
|$PL
D$`H
L$0I
D$8H
|$hE1
T$hH
|$p1
D$pH
l$ L
L$PL
T$8H
|$@A
D$@H
L$8H
D$L1
	D$L
|$0N
L$LM
T$@H
t$8L
L$LH
T$@H
t$8M
t$HI
|$@M
t$xL
t$ H
l$ L
d$(L
l$0L
t$8L
|$@H
fffff.
ATUH
[]A\
[]A\
d$ H
}@E1
|$(I
\$0H
l$8L
d$@H
|$(H
t$(H
|$(H
|$(I
t$(H
t$HI
|$@I
K4E0
t'H9
[]A\
ffff.
fff.
\$0H
l$8L
d$@L
l$HL
t$PH
|$(L
D$ H
|$(L
|$ L
ATUH
|$hL
D$(L
t$hE1
D$hH
[]A\A]A^A_
|$01
T$hH
D$(L
|$pH
\$8H
l$@L
l$HL
T$0L
T$ L
t$PH
D$XH
T$ H
L$|E1
D$ 1
\$|H
|$ L
t$pH
|$ L
H9D$pu
H9D$Xt/H
ffffff.
$H;B
l$ H
d$(L
l$01
t$8L
t$8L
l$ L
|$@H
ffff.
AWAVAUATUH
|$HH
t$@L
|$8H
|$8H
D$@H
t$XH
|$XH
L$0H
[]A\A]A^A_
t$0H
t$0H
T$(L
D$`_
D$n 
D$o M
T$0L
D$`A
D$nM
D$oUH
D$`D
D$`R
D$`M
D$XI
D$0H
|$XH
T$@M
|$XH
D$HH
D$XH
T$HE1
D$HH
L$0H
|$`1
l$`M
<atd<c
T$@H
t$0H
D$@H
L$HL
D$PL
L$pH
L$ H
t$ H
l$ H
l$ H
l$ L
d$(L
l$0H
ffffff.
ffff.
tkr)
ffffff.
AWAVI
AUATUH
|$(L
H[]A\A]A^A_
T$ H
|$8L
T$ H
t$8H
D$(H
[]A\A]A^A_
d$ H
ffff.
ATUSH
A\A]A^
l$ H
l$ L
t$(L
|$0H
subversion/svn/add-cmd.c
         -
%6ld
%s %10s %s 
%-14s 
%s %10s 
%s%s
line-number
merged
subversion/svn/blame-cmd.c
subversion
blame
Skipping binary file: '%s'
                                           -
'verbose' option invalid in XML mode
'incremental' option only valid in XML mode
subversion/svn/cat-cmd.c
subversion/svn/changelist-cmd.c
Changelist names must not be empty
subversion/svn/checkout-cmd.c
'%s' does not appear to be a URL
subversion/svn/commit-cmd.c
config
no-unlock
miscellany
Must give local path (not URL) as the target of a commit
svn: warning: The depth of this commit is '%s', but copied directories will regardless be committed with depth '%s'. You must remove unwanted children of those directories in a separate commit.
base
working
mine-conflict
theirs-conflict
mine-full
theirs-full
launch
Conflict discovered in '%s'.
Select: (p) postpone
, (df) diff-full, (e) edit
, (r) resolved
        
(s) show all options: 
||||||| ORIGINAL
=======
No editor found.
Error running editor.
No merge tool found.
Error running merge tool.
Invalid option.
No editor found; leaving all conflicts.
Error running editor; leaving all conflicts.
No merge tool found; leaving all conflicts.
Error running merge tool; leaving all conflicts.
Conflict for property '%s' discovered on '%s'.
They want to delete the property, you want to change the value to '%s'.
They want to change the property value to '%s', you want to delete the property.
        (mc) mine-conflict, (tc) theirs-conflict
        (mf) mine-full, (tf) theirs-full
  (e)  edit             - change merged file in an editor
  (df) diff-full        - show all changes made to merged file
  (r)  resolved         - accept merged version of file
  (dc) display-conflict - show all conflicts (ignoring merged version)
  (mc) mine-conflict    - accept my version for all conflicts (same)
  (tc) theirs-conflict  - accept their version for all conflicts (same)
  (mf) mine-full        - accept my version of entire file (even non-conflicts)
  (tf) theirs-full      - accept their version of entire file (same)
  (p)  postpone         - mark the conflict to be resolved later
  (l)  launch           - launch external tool to resolve conflict
  (s)  show all         - show this list
Invalid option; cannot choose based on conflicts in a binary file.
Invalid option; cannot choose based on conflicts for properties.
Invalid option; cannot display conflicts for a binary file.
Invalid option; cannot display conflicts for properties.
Invalid option; original files not available.
>>>>>>> THEIRS (select with 'tc')
<<<<<<< MINE (select with 'mc')
Invalid option; there's no merged version to diff.
Invalid option; there's no merged version to edit.
Conflict discovered when trying to add '%s'.
An object of the same name already exists.
Select: (p) postpone, (mf) mine-full, (tf) theirs-full, (h) help:
  (p)  postpone    - resolve the conflict later
  (mf) mine-full   - accept pre-existing item (ignore upstream addition)
  (tf) theirs-full - accept incoming item (overwrite pre-existing item)
  (h)  help        - show this help
subversion/svn/copy-cmd.c
Local, non-commit operations do not take a log message or revision properties
subversion/svn/delete-cmd.c
modified
none
added
kind
item
%c%c      %s
subversion/svn/diff-cmd.c
Can't open stdout
Can't open stderr
paths
'--xml' option only valid with '--summarize' option
'--new' option only valid with '--old' option
Target lists to diff may not contain both working copy paths and URLs
Path '%s' not relative to base URLs
AMDsubversion/svn/export-cmd.c
Destination directory exists; please remove the directory or use --force to overwrite
1.6.16
The following repository access (RA) modules are available:
usage: svn <subcommand> [options] [args]
Subversion command-line client, version %s.
Type 'svn help <subcommand>' for help on a specific subcommand.
Type 'svn --version' to see the program version and RA modules
  or 'svn --version --quiet' to see just the version number.
Most subcommands take file and/or directory arguments, recursing
on the directories.  If no arguments are supplied to such a
command, it recurses on the current directory (inclusive) by default.
Available subcommands:
subversion/svn/import-cmd.c
Invalid URL '%s'
Repository URL required when importing
Too many arguments to import command
normal
delete
replace
revision
repository
root
uuid
wc-info
schedule
copy-from-url
copy-from-rev
text-updated
checksum
changelist
prev-base-file
prev-wc-file
cur-base-file
prop-file
token
owner
comment
created
expires
Path: %s
Name: %s
Repository Root: %s
Repository UUID: %s
Revision: %ld
Node Kind: file
Node Kind: directory
Node Kind: none
Node Kind: unknown
Schedule: normal
Schedule: add
Schedule: delete
Schedule: replace
Depth: empty
Depth: files
Depth: immediates
Depth: INVALID
Copied From URL: %s
Copied From Rev: %ld
Last Changed Author: %s
Last Changed Rev: %ld
Last Changed Date
Text Last Updated
Checksum: %s
Conflict Properties File: %s
Lock Token: %s
Lock Owner: %s
Lock Created
Lock Expires
Lock Comment (%i lines):
Lock Comment (%i line):
Changelist: %s
Tree conflict
Source  left
  %s: %s
Source right
subversion/svn/info-cmd.c
%s:  (Not a valid URL)
Resource is not under version control.
Conflict Previous Base File: %s
Conflict Previous Working File: %s
Conflict Current Base File: %s
%s:  (Not a versioned resource)
size
%b %d %H:%M
%b %d  %Y
subversion/svn/list-cmd.c
%7ld %-8.8s %c %10s %12s %s%s
subversion/svn/lock-cmd.c
Lock comment contains a zero byte
logentry
action
copyfrom-rev
copyfrom-path
(no author)
(no date)
 | %d lines
 | %d line
Changed paths:
 (from %s:%ld)
   %c %s%s
Merged via:
 r%ld%c
subversion/svn/log-cmd.c
svn:author
svn:date
svn:log
------------------------------------------------------------------------
r%ld | %s | %s
'with-all-revprops' option only valid in XML mode
'with-no-revprops' option only valid in XML mode
'with-revprop' option only valid in XML mode
-c and -r are mutually exclusive
Only relative paths can be specified after a URL
cannot assign with 'with-revprop' option (drop the '=')
------------------------------------------------------------------------
subversion/svn/main.c
Caught signal
svn: 
Can't specify -c with --old
There is no change 0
CRLF
help
Subcommand argument required
Unknown command: '%s'
servers
diff-cmd
helpers
diff3-cmd
mime-types-file
enable-auto-props
interactive-conflicts
Try 'svn help' for more info
add intermediate parents
praise
annotate
checkout
cleanup
remove
export
import
specify lock comment ARG
merge
mergeinfo
mkdir
rename
propdel
propedit
propget
proplist
propset
resolve
revert
stat
switch
update
force
force operation to run
force-log
show help on a subcommand
message
specify log message ARG
quiet
non-recursive
change
incremental
verbose
print extra information
show-updates
display update information
username
specify a username ARG
password
specify a password ARG
extensions
set-depth
output in XML
strict
use strict semantics
stop-on-copy
no-ignore
no-auth-cache
trust-server-cert
non-interactive
do no interactive prompting
dry-run
no-diff-deleted
notice-ancestry
ignore-ancestry
ignore-externals
ignore externals definitions
use ARG as diff command
use ARG as merge command
editor-cmd
use ARG as external editor
record-only
use ARG as the older target
use ARG as the newer target
relocate
relocate via URL-rewriting
config-dir
config-option
enable automatic properties
no-auto-props
disable automatic properties
native-eol
limit
maximum number of log entries
don't unlock the targets
summarize
show a summary of the results
remove changelist association
keep-changelists
keep-local
keep path in working copy
with-all-revprops
with-no-revprops
with-revprop
make intermediate directories
use-merge-history
accept
show-revs
reintegrate
svn_subr
svn_client
svn_wc
svn_ra
svn_delta
svn_diff
--version
Non-numeric limit argument given
Argument to --limit must be positive
Non-numeric change argument (%s) given to -c
Syntax error in revision argument '%s'
Error converting depth from locale to UTF-8
'%s' is not a valid depth; try 'empty', 'files', 'immediates', or 'infinity'
'%s' is not a valid depth; try 'exclude', 'empty', 'files', 'immediates', or 'infinity'
Invalid syntax of argument of --config-option
Syntax error in native-eol argument '%s'
'%s' is not a valid --accept value
'%s' is not a valid --show-revs value
Subcommand '%s' doesn't accept option '%s'
Type 'svn help %s' for usage.
Multiple revision arguments encountered; can't specify -c twice, or both -c and -r
-r and -c can't be used with --reintegrate
--depth and --set-depth are mutually exclusive
--with-all-revprops and --with-no-revprops are mutually exclusive
--with-revprop and --with-no-revprops are mutually exclusive
--trust-server-cert requires --non-interactive
Log message file is a versioned file; use '--force-log' to override
Lock comment file is a versioned file; use '--force-log' to override
The log message is a pathname (was -F intended?); use '--force-log' to override
The lock comment is a pathname (was -F intended?); use '--force-log' to override
--relocate and --depth are mutually exclusive
Unrecognized file in argument of --config-option
--auto-props and --no-auto-props are mutually exclusive
--reintegrate cannot be used with --ignore-ancestry or --record-only
--reintegrate cannot be used with --ignore-ancestry
--reintegrate cannot be used with --record-only
--accept=%s incompatible with --non-interactive
svn: run 'svn cleanup' to remove locks (type 'svn help cleanup' for details)
Put files and directories under version control, scheduling
them for addition to repository.  They will be added in next commit.
usage: add PATH...
Output the content of specified files or
URLs with revision and author information in-line.
usage: blame TARGET[@REV]...
  If specified, REV determines in which revision the target is first
  looked up.
Output the content of specified files or URLs.
usage: cat TARGET[@REV]...
  If specified, REV determines in which revision the target is first
  looked up.
Associate (or dissociate) changelist CLNAME with the named files.
usage: 1. changelist CLNAME TARGET...
       2. changelist --remove TARGET...
Check out a working copy from a repository.
usage: checkout URL[@REV]... [PATH]
  If specified, REV determines in which revision the URL is first
  looked up.
  If PATH is omitted, the basename of the URL will be used as
  the destination. If multiple URLs are given each will be checked
  out into a sub-directory of PATH, with the name of the sub-directory
  being the basename of the URL.
  If --force is used, unversioned obstructing paths in the working
  copy destination do not automatically cause the check out to fail.
  If the obstructing path is the same type (file or directory) as the
  corresponding path in the repository it becomes versioned but its
  contents are left 'as-is' in the working copy.  This means that an
  obstructing directory's unversioned children may also obstruct and
  become versioned.  For files, any content differences between the
  obstruction and the repository are treated like a local modification
  to the working copy.  All properties from the repository are applied
  to the obstructing path.
  See also 'svn help update' for a list of possible characters
  reporting the action taken.
Recursively clean up the working copy, removing locks, resuming
unfinished operations, etc.
usage: cleanup [PATH...]
Send changes from your working copy to the repository.
usage: commit [PATH...]
  A log message must be provided, but it can be empty.  If it is not
  given by a --message or --file option, an editor will be started.
  If any targets are (or contain) locked items, those will be
  unlocked after a successful commit.
Duplicate something in working copy or repository, remembering
history.
usage: copy SRC[@REV]... DST
When copying multiple sources, they will be added as children of DST,
which must be a directory.
  SRC and DST can each be either a working copy (WC) path or URL:
    WC  -> WC:   copy and schedule for addition (with history)
    WC  -> URL:  immediately commit a copy of WC to URL
    URL -> WC:   check out URL into WC, schedule for addition
    URL -> URL:  complete server-side copy;  used to branch and tag
  All the SRCs must be of the same type.
WARNING: For compatibility with previous versions of Subversion,
copies performed using two working copy paths (WC -> WC) will not
contact the repository.  As such, they may not, by default, be able
to propagate merge tracking information from the source of the copy
to the destination.
Remove files and directories from version control.
usage: 1. delete PATH...
       2. delete URL...
  1. Each item specified by a PATH is scheduled for deletion upon
    the next commit.  Files, and directories that have not been
    committed, are immediately removed from the working copy
    unless the --keep-local option is given.
    PATHs that are, or contain, unversioned or modified items will
    not be removed unless the --force option is given.
  2. Each item specified by a URL is deleted from the repository
    via an immediate commit.
Display the differences between two revisions or paths.
usage: 1. diff [-c M | -r N[:M]] [TARGET[@REV]...]
       2. diff [-r N[:M]] --old=OLD-TGT[@OLDREV] [--new=NEW-TGT[@NEWREV]] \
               [PATH...]
       3. diff OLD-URL[@OLDREV] NEW-URL[@NEWREV]
  1. Display the changes made to TARGETs as they are seen in REV between
     two revisions.  TARGETs may be all working copy paths or all URLs.
     If TARGETs are working copy paths, N defaults to BASE and M to the
     working copy; if URLs, N must be specified and M defaults to HEAD.
     The '-c M' option is equivalent to '-r N:M' where N = M-1.
     Using '-c -M' does the reverse: '-r M:N' where N = M-1.
  2. Display the differences between OLD-TGT as it was seen in OLDREV and
     NEW-TGT as it was seen in NEWREV.  PATHs, if given, are relative to
     OLD-TGT and NEW-TGT and restrict the output to differences for those
     paths.  OLD-TGT and NEW-TGT may be working copy paths or URL[@REV].
     NEW-TGT defaults to OLD-TGT if not specified.  -r N makes OLDREV default
     to N, -r N:M makes OLDREV default to N and NEWREV default to M.
  3. Shorthand for 'svn diff --old=OLD-URL[@OLDREV] --new=NEW-URL[@NEWREV]'
  Use just 'svn diff' to display local modifications in a working copy.
Create an unversioned copy of a tree.
usage: 1. export [-r REV] URL[@PEGREV] [PATH]
       2. export [-r REV] PATH1[@PEGREV] [PATH2]
  1. Exports a clean directory tree from the repository specified by
     URL, at revision REV if it is given, otherwise at HEAD, into
     PATH. If PATH is omitted, the last component of the URL is used
     for the local directory name.
  2. Exports a clean directory tree from the working copy specified by
     PATH1, at revision REV if it is given, otherwise at WORKING, into
     PATH2.  If PATH2 is omitted, the last component of the PATH1 is used
     for the local directory name. If REV is not specified, all local
     changes will be preserved.  Files not under version control will
     not be copied.
  If specified, PEGREV determines in which revision the target is first
  looked up.
Describe the usage of this program or its subcommands.
usage: help [SUBCOMMAND...]
Commit an unversioned file or tree into the repository.
usage: import [PATH] URL
  Recursively commit a copy of PATH to URL.
  If PATH is omitted '.' is assumed.
  Parent directories are created as necessary in the repository.
  If PATH is a directory, the contents of the directory are added
  directly under URL.
  Unversionable items such as device files and pipes are ignored
  if --force is specified.
Display information about a local or remote item.
usage: info [TARGET[@REV]...]
  Print information about each TARGET (default: '.').
  TARGET may be either a working-copy path or URL.  If specified, REV
  determines in which revision the target is first looked up.
List directory entries in the repository.
usage: list [TARGET[@REV]...]
  List each TARGET file and the contents of each TARGET directory as
  they exist in the repository.  If TARGET is a working copy path, the
  corresponding repository URL will be used. If specified, REV determines
  in which revision the target is first looked up.
  The default TARGET is '.', meaning the repository URL of the current
  working directory.
  With --verbose, the following fields will be shown for each item:
    Revision number of the last commit
    Author of the last commit
    If locked, the letter 'O'.  (Use 'svn info URL' to see details)
    Size (in bytes)
    Date and time of the last commit
Lock working copy paths or URLs in the repository, so that
no other user can commit changes to them.
usage: lock TARGET...
  Use --force to steal the lock from another user or working copy.
read lock comment from file ARG
force validity of lock comment source
Show the log messages for a set of revision(s) and/or file(s).
usage: 1. log [PATH]
       2. log URL[@REV] [PATH...]
  1. Print the log messages for a local PATH (default: '.').
     The default revision range is BASE:1.
  2. Print the log messages for the PATHs (default: '.') under URL.
     If specified, REV determines in which revision the URL is first
     looked up, and the default revision range is REV:1; otherwise,
     the URL is looked up in HEAD, and the default revision range is
     HEAD:1.
  Multiple '-c' or '-r' options may be specified (but not a
  combination of '-c' and '-r' options), and mixing of forward and
  reverse ranges is allowed.
  With -v, also print all affected paths with each log message.
  With -q, don't print the log message body itself (note that this is
  compatible with -v).
  Each log message is printed just once, even if more than one of the
  affected paths for that revision were explicitly requested.  Logs
  follow copy history by default.  Use --stop-on-copy to disable this
  behavior, which can be useful for determining branchpoints.
  Examples:
    svn log
    svn log foo.c
    svn log http://www.example.com/repo/project/foo.c
    svn log http://www.example.com/repo/project foo.c bar.c
retrieve revision property ARG
the change made in revision ARG
Apply the differences between two sources to a working copy path.
usage: 1. merge sourceURL1[@N] sourceURL2[@M] [WCPATH]
       2. merge sourceWCPATH1@N sourceWCPATH2@M [WCPATH]
       3. merge [-c M[,N...] | -r N:M ...] SOURCE[@REV] [WCPATH]
  1. In the first form, the source URLs are specified at revisions
     N and M.  These are the two sources to be compared.  The revisions
     default to HEAD if omitted.
  2. In the second form, the URLs corresponding to the source working
     copy paths define the sources to be compared.  The revisions must
     be specified.
  3. In the third form, SOURCE can be either a URL or a working copy
     path (in which case its corresponding URL is used).  SOURCE (in
     revision REV) is compared as it existed between revisions N and M
     for each revision range provided.  If REV is not specified, HEAD
     is assumed.  '-c M' is equivalent to '-r <M-1>:M', and '-c -M'
     does the reverse: '-r M:<M-1>'.  If no revision ranges are
     specified, the default range of 0:REV is used.  Multiple '-c'
     and/or '-r' options may be specified, and mixing of forward
     and reverse ranges is allowed.
  WCPATH is the working copy path that will receive the changes.
  If WCPATH is omitted, a default value of '.' is assumed, unless
  the sources have identical basenames that match a file within '.':
  in which case, the differences will be applied to that file.
  NOTE:  Subversion will only record metadata to track the merge
  if the two sources are on the same line of history -- if the
  first source is an ancestor of the second, or vice-versa.  This is
  guaranteed to be the case when using the third form listed above.
  The --ignore-ancestry option overrides this, forcing Subversion to
  regard the sources as unrelated and not to track the merge.
Display merge-related information.
usage: mergeinfo SOURCE[@REV] [TARGET[@REV]]
  Display information related to merges (or potential merges) between
  SOURCE and TARGET (default: '.').  If the --show-revs option
  is not provided, display revisions which have been merged from
  SOURCE to TARGET; otherwise, display the type of information
  specified by the --show-revs option.
Create a new directory under version control.
usage: 1. mkdir PATH...
       2. mkdir URL...
  Create version controlled directories.
  1. Each directory specified by a working copy PATH is created locally
    and scheduled for addition upon the next commit.
  2. Each directory specified by a URL is created in the repository via
    an immediate commit.
  In both cases, all the intermediate directories must already exist,
  unless the --parents option is given.
Move and/or rename something in working copy or repository.
usage: move SRC... DST
When moving multiple sources, they will be added as children of DST,
which must be a directory.
  Note:  this subcommand is equivalent to a 'copy' and 'delete'.
  Note:  the --revision option has no use and is deprecated.
  SRC and DST can both be working copy (WC) paths or URLs:
    WC  -> WC:   move and schedule for addition (with history)
    URL -> URL:  complete server-side rename.
  All the SRCs must be of the same type.
Remove a property from files, dirs, or revisions.
usage: 1. propdel PROPNAME [PATH...]
       2. propdel PROPNAME --revprop -r REV [TARGET]
  1. Removes versioned props in working copy.
  2. Removes unversioned remote prop on repos revision.
     TARGET only determines which repository to access.
Edit a property with an external editor.
usage: 1. propedit PROPNAME TARGET...
       2. propedit PROPNAME --revprop -r REV [TARGET]
  1. Edits versioned prop in working copy or repository.
  2. Edits unversioned remote prop on repos revision.
     TARGET only determines which repository to access.
See 'svn help propset' for more on setting properties.
Print the value of a property on files, dirs, or revisions.
usage: 1. propget PROPNAME [TARGET[@REV]...]
       2. propget PROPNAME --revprop -r REV [TARGET]
  1. Prints versioned props. If specified, REV determines in which
     revision the target is first looked up.
  2. Prints unversioned remote prop on repos revision.
     TARGET only determines which repository to access.
  By default, this subcommand will add an extra newline to the end
  of the property values so that the output looks pretty.  Also,
  whenever there are multiple paths involved, each property value
  is prefixed with the path with which it is associated.  Use the
  --strict option to disable these beautifications (useful when
  redirecting a binary property value to a file, but available only
  if you supply a single TARGET to a non-recursive propget operation).
List all properties on files, dirs, or revisions.
usage: 1. proplist [TARGET[@REV]...]
       2. proplist --revprop -r REV [TARGET]
  1. Lists versioned props. If specified, REV determines in which
     revision the target is first looked up.
  2. Lists unversioned remote props on repos revision.
     TARGET only determines which repository to access.
Set the value of a property on files, dirs, or revisions.
usage: 1. propset PROPNAME PROPVAL PATH...
       2. propset PROPNAME --revprop -r REV PROPVAL [TARGET]
  1. Changes a versioned file or directory property in a working copy.
  2. Changes an unversioned property on a repository revision.
     (TARGET only determines which repository to access.)
  The value may be provided with the --file option instead of PROPVAL.
  Note: svn recognizes the following special versioned properties
  but will store any arbitrary properties set:
    svn:ignore     - A newline separated list of file glob patterns to ignore.
    svn:keywords   - Keywords to be expanded.  Valid keywords are:
      URL, HeadURL             - The URL for the head version of the object.
      Author, LastChangedBy    - The last person to modify the file.
      Date, LastChangedDate    - The date/time the object was last modified.
      Rev, Revision,           - The last revision the object changed.
      LastChangedRevision
      Id                       - A compressed summary of the previous
                                   4 keywords.
      Header                   - Similar to Id but includes the full URL.
    svn:executable - If present, make the file executable.  Use
      'svn propdel svn:executable PATH...' to clear.
    svn:eol-style  - One of 'native', 'LF', 'CR', 'CRLF'.
    svn:mime-type  - The mimetype of the file.  Used to determine
      whether to merge the file, and how to serve it from Apache.
      A mimetype beginning with 'text/' (or an absent mimetype) is
      treated as text.  Anything else is treated as binary.
    svn:externals  - A newline separated list of module specifiers,
      each of which consists of a relative directory path, optional
      revision flags and an URL.  The ordering of the three elements
      implements different behavior.  Subversion 1.4 and earlier only
      support the following formats and the URLs cannot have peg
      revisions:
        foo             http://example.com/repos/zig
        foo/bar -r 1234 http://example.com/repos/zag
      Subversion 1.5 and greater support the above formats and the
      following formats where the URLs may have peg revisions:
                http://example.com/repos/zig foo
        -r 1234 http://example.com/repos/zig foo/bar
      Relative URLs are supported in Subversion 1.5 and greater for
      all above formats and are indicated by starting the URL with one
      of the following strings
        ../  to the parent directory of the extracted external
        ^/   to the repository root
        //   to the scheme
        /    to the server root
      The ambiguous format 'relative_path relative_path' is taken as
      'relative_url relative_path' with peg revision support.
    svn:needs-lock - If present, indicates that the file should be locked
      before it is modified.  Makes the working copy file read-only
      when it is not locked.  Use 'svn propdel svn:needs-lock PATH...'
      to clear.
  The svn:keywords, svn:executable, svn:eol-style, svn:mime-type and
  svn:needs-lock properties cannot be set on a directory.  A non-recursive
  attempt will fail, and a recursive attempt will set the property
  only on the file children of the directory.
read property value from file ARG
Resolve conflicts on working copy files or directories.
usage: resolve --accept=ARG [PATH...]
  Note:  the --accept option is currently required.
specify automatic conflict resolution source
                            ('base', 'working', 'mine-conflict',
                             'theirs-conflict', 'mine-full', 'theirs-full')
Remove 'conflicted' state on working copy files or directories.
usage: resolved PATH...
  Note:  this subcommand does not semantically resolve conflicts or
  remove conflict markers; it merely removes the conflict-related
  artifact files and allows PATH to be committed again.  It has been
  deprecated in favor of running 'svn resolve --accept working'.
Restore pristine working copy file (undo most local edits).
usage: revert PATH...
  Note:  this subcommand does not require network access, and resolves
  any conflicted states.  However, it does not restore removed directories.
Print the status of working copy files and directories.
usage: status [PATH...]
  With no args, print only locally modified items (no network access).
  With -q, print only summary information about locally modified items.
  With -u, add working revision and server out-of-date information.
  With -v, print full revision information on every item.
  The first seven columns in the output are each one character wide:
    First column: Says if item was added, deleted, or otherwise changed
      ' ' no modifications
      'A' Added
      'C' Conflicted
      'D' Deleted
      'I' Ignored
      'M' Modified
      'R' Replaced
      'X' an unversioned directory created by an externals definition
      '?' item is not under version control
      '!' item is missing (removed by non-svn command) or incomplete
      '~' versioned item obstructed by some item of a different kind
    Second column: Modifications of a file's or directory's properties
      ' ' no modifications
      'C' Conflicted
      'M' Modified
    Third column: Whether the working copy directory is locked
      ' ' not locked
      'L' locked
    Fourth column: Scheduled commit will contain addition-with-history
      ' ' no history scheduled with commit
      '+' history scheduled with commit
    Fifth column: Whether the item is switched or a file external
      ' ' normal
      'S' the item has a Switched URL relative to the parent
      'X' a versioned file created by an eXternals definition
    Sixth column: Repository lock token
      (without -u)
      ' ' no lock token
      'K' lock token present
      (with -u)
      ' ' not locked in repository, no lock token
      'K' locked in repository, lock toKen present
      'O' locked in repository, lock token in some Other working copy
      'T' locked in repository, lock token present but sTolen
      'B' not locked in repository, lock token present but Broken
    Seventh column: Whether the item is the victim of a tree conflict
      ' ' normal
      'C' tree-Conflicted
    If the item is a tree conflict victim, an additional line is printed
    after the item's status line, explaining the nature of the conflict.
  The out-of-date information appears in the ninth column (with -u):
      '*' a newer revision exists on the server
      ' ' the working copy is up to date
  Remaining fields are variable width and delimited by spaces:
    The working revision (with -u or -v)
    The last committed revision and last committed author (with -v)
    The working copy path is always the final field, so it can
      include spaces.
  Example output:
    svn status wc
     M     wc/bar.c
    A  +   wc/qax.c
    svn status -u wc
     M           965    wc/bar.c
           *     965    wc/foo.c
    A  +         965    wc/qax.c
    Status against revision:   981
    svn status --show-updates --verbose wc
     M           965       938 kfogel       wc/bar.c
           *     965       922 sussman      wc/foo.c
    A  +         965       687 joe          wc/qax.c
                 965       687 joe          wc/zig.c
    Status against revision:   981
    svn status
     M      wc/bar.c
    !     C wc/qaz.c
          >   local missing, incoming edit upon update
    D       wc/qax.c
Update the working copy to a different URL.
usage: 1. switch URL[@PEGREV] [PATH]
       2. switch --relocate FROM TO [PATH...]
  1. Update the working copy to mirror a new URL within the repository.
     This behavior is similar to 'svn update', and is the way to
     move a working copy to a branch or tag within the same repository.
     If specified, PEGREV determines in which revision the target is first
     looked up.
     If --force is used, unversioned obstructing paths in the working
     copy do not automatically cause a failure if the switch attempts to
     add the same path.  If the obstructing path is the same type (file
     or directory) as the corresponding path in the repository it becomes
     versioned but its contents are left 'as-is' in the working copy.
     This means that an obstructing directory's unversioned children may
     also obstruct and become versioned.  For files, any content differences
     between the obstruction and the repository are treated like a local
     modification to the working copy.  All properties from the repository
     are applied to the obstructing path.
     Use the --set-depth option to set a new working copy depth on the
     targets of this operation.
  2. Rewrite working copy URL metadata to reflect a syntactic change only.
     This is used when repository's root URL changes (such as a scheme
     or hostname change) but your working copy still reflects the same
     directory within the same repository.
  See also 'svn help update' for a list of possible characters
  reporting the action taken.
Unlock working copy paths or URLs.
usage: unlock TARGET...
  Use --force to break the lock.
Bring changes from the repository into the working copy.
usage: update [PATH...]
  If no revision is given, bring working copy up-to-date with HEAD rev.
  Else synchronize working copy to revision given by -r.
  For each updated item a line will start with a character reporting the
  action taken.  These characters have the following meaning:
    A  Added
    D  Deleted
    U  Updated
    C  Conflict
    G  Merged
    E  Existed
  A character in the first column signifies an update to the actual file,
  while updates to the file's properties are shown in the second column.
  A 'B' in the third column signifies that the lock for the file has
  been broken or stolen.
  If --force is used, unversioned obstructing paths in the working
  copy do not automatically cause a failure if the update attempts to
  add the same path.  If the obstructing path is the same type (file
  or directory) as the corresponding path in the repository it becomes
  versioned but its contents are left 'as-is' in the working copy.
  This means that an obstructing directory's unversioned children may
  also obstruct and become versioned.  For files, any content differences
  between the obstruction and the repository are treated like a local
  modification to the working copy.  All properties from the repository
  are applied to the obstructing path.  Obstructing paths are reported
  in the first column with code 'E'.
  Use the --set-depth option to set a new working copy depth on the
  targets of this operation.
force validity of log message source
print nothing, or only summary information
descend recursively, same as --depth=infinity
obsolete; try --depth=files or --depth=immediates
the change made by revision ARG (like -r ARG-1:ARG)
                             If ARG is negative this is like -r ARG:ARG-1
ARG (some commands also take ARG1:ARG2 range)
                             A revision argument can be one of:
                                NUMBER       revision number
                                '{' DATE '}' revision at start of the date
                                'HEAD'       latest in repository
                                'BASE'       base rev of item's working copy
                                'COMMITTED'  last commit at or before BASE
                                'PREV'       revision just before COMMITTED
read log message from file ARG
give output suitable for concatenation
treat value as being in charset encoding ARG
show program version information
Default: '-u'. When Subversion is invoking an
                             external diff program, ARG is simply passed along
                             to the program. But when Subversion is using its
                             default internal diff implementation, or when
                             Subversion is displaying blame annotations, ARG
                             could be any of the following:
                                -u (--unified):
                                   Output 3 lines of unified context.
                                -b (--ignore-space-change):
                                   Ignore changes in the amount of white space.
                                -w (--ignore-all-space):
                                   Ignore all white space.
                                --ignore-eol-style:
                                   Ignore changes in EOL style.
                                -p (--show-c-function):
                                   Show C function name in diff output.
pass contents of file ARG as additional args
limit operation by depth ARG ('empty', 'files',
                            'immediates', or 'infinity')
set new working copy depth to ARG ('exclude',
                            'empty', 'files', 'immediates', or 'infinity')
do not cross copies while traversing history
disregard default and svn:ignore property ignores
do not cache authentication tokens
accept unknown SSL server certificates without
                             prompting (but only with '--non-interactive')
try operation but make no changes
do not print differences for deleted files
notice ancestry when calculating differences
ignore ancestry when calculating merges
mark revisions as merged (use with -r)
operate on a revision property (use with -r)
read user configuration files from directory ARG
set user configuration option in the format:
                                 FILE:SECTION:OPTION=[VALUE]
                             For example:
                                 servers:global:http-library=serf
use a different EOL marker than the standard
                             system marker for files with the svn:eol-style
                             property set to 'native'.
                             ARG may be one of 'LF', 'CR', 'CRLF'
operate only on members of changelist ARG
                             [aliases: --cl]
don't delete changelists after commit
retrieve all revision properties
retrieve no revision properties
set revision property ARG in new revision
                             using the name[=value] format
use/display additional information from merge
                             history
specify automatic conflict resolution action
                            ('postpone', 'base', 'mine-conflict',
                             'theirs-conflict', 'mine-full', 'theirs-full',
                             'edit', 'launch')
specify which collection of revisions to display
                             ('merged', 'eligible')
lump-merge all of source URL's unmerged changes
subversion/svn/merge-cmd.c
Merge source required
Second revision required
Too many arguments given
Cannot specify a revision range with two URLs
A working copy merge source needs an explicit revision
--depth cannot be used with --reintegrate
--force cannot be used with --reintegrate
--reintegrate can only be used with a single merge source
r%ld
Not enough arguments given
subversion/svn/mergeinfo-cmd.c
subversion/svn/mkdir-cmd.c
Try 'svn add' or 'svn add --non-recursive' instead?
Try 'svn mkdir --parents' instead?
subversion/svn/move-cmd.c
Cannot specify revisions (except HEAD) with move operations
Summary of conflicts in external item:
Failed to revert '%s' -- try updating instead.
Resolved conflicted state of '%s'
Fetching external item into '%s'
Error handling externals definition for '%s':
Exported external at revision %ld.
Checked out external at revision %ld.
Updated external to revision %ld.
Performing status on external item at '%s'
Status against revision: %6ld
Path '%s' is now a member of changelist '%s'.
Path '%s' is no longer a member of a changelist.
--- Merging differences between repository URLs into '%s':
--- Reverse-merging r%ld into '%s':
--- Merging r%ld through r%ld into '%s':
--- Reverse-merging r%ld through r%ld into '%s':
--- Merging differences between foreign repository URLs into '%s':
--- Merging (from foreign repository) r%ld into '%s':
--- Reverse-merging (from foreign repository) r%ld into '%s':
--- Merging (from foreign repository) r%ld through r%ld into '%s':
--- Reverse-merging (from foreign repository) r%ld through r%ld into '%s':
property '%s' deleted from '%s'.
property '%s' set on repository revision %ld
property '%s' deleted from repository revision %ld
Summary of conflicts:
  Text conflicts: %u
  Property conflicts: %u
  Tree conflicts: %u
  Skipped paths: %u
Skipped missing target: '%s'
Skipped '%s'
D    %s
R    %s
C    %s
A    %s
%s %s
Restored '%s'
Reverted '%s'
A  (bin)  %s
A         %s
D         %s
subversion/svn/notify.c
Exported revision %ld.
Checked out revision %ld.
Updated to revision %ld.
External at revision %ld.
At revision %ld.
External export complete.
Export complete.
External checkout complete.
Checkout complete.
External update complete.
Update complete.
Sending        %s
Adding  (bin)  %s
Adding         %s
Deleting       %s
Replacing      %s
Transmitting file data 
'%s' locked by user '%s'.
'%s' unlocked.
--- Merging r%ld into '%s':
   C %s
property '%s' set on '%s'
subversion/svn/propdel-cmd.c
Cannot specify revision for deleting versioned property '%s'
Attempting to delete nonexistent property '%s'
subversion/svn/propedit-cmd.c
svn-prop
'%s' is not a valid Subversion property name
--encoding option applies only to textual Subversion-controlled properties
Set new value for property '%s' on revision %ld
No changes to property '%s' on revision %ld
Cannot specify revision for editing versioned property '%s'
Explicit target argument required
'%s' does not appear to be a working copy path
Set new value for property '%s' on '%s'
No changes to property '%s' on '%s'
subversion/svn/propget-cmd.c
Error writing to stream
%s - 
Properties on '%s':
--verbose cannot be used with --revprop or --strict or --xml
Strict output of property values only available for single-target, non-recursive propget operations
Unversioned properties on revision %ld:
subversion/svn/props.c
property
false
Must specify the revision as a number, a date or 'HEAD' when operating on a revision property
Wrong number of targets specified
Either a URL or versioned item is required
To turn off the %s property, use 'svn propdel';
setting the property to '%s' will not turn it off.
subversion/svn/propset-cmd.c
Cannot specify revision for setting versioned property '%s'
Explicit target required ('%s' interpreted as prop value)
subversion/svn/resolve-cmd.c
missing --accept option
invalid 'accept' ARG
subversion/svn/resolved-cmd.c
subversion/svn/revert-cmd.c
Try 'svn revert --depth infinity' instead?
subversion/svn/status-cmd.c
against
--- Changelist '%s':
missing
incomplete
replaced
obstructed
ignored
unversioned
true
wc-locked
copied
switched
file-external
tree-conflicted
wc-status
subversion/svn/status.c
repos-status
      >   %s
%c%c%c%c%c%c%c %s%s
 ? A!DRMGCI~X!
'%s' has lock token, but no lock owner
%c%c%c%c%c%c%c %c   %6s   %6s %-12s %s%s
%c%c%c%c%c%c%c %c   %6s   %s%s
subversion/svn/switch-cmd.c
'%s' to '%s' is not a valid relocation
side
repos-url
path-in-repos
obstruction
action && reason
local %s, incoming %s upon %s
victim
tree-conflict
source-left
source-right
subversion/svn/tree-conflicts.c
subversion/svn/unlock-cmd.c
SVN_EDITOR
VISUAL
subversion/svn/util.c
buffer && prefix
Committed revision %ld.
Warning: %s
Can't get working directory
%s %s
system('%s') returned %d
SVN_MERGE
merge-tool-cmd
.tmp
Can't write to '%s'
Can't stat '%s'
log-encoding
   '%s'
svn-commit
Write error
unknown_operation
unknown operation
svn: Skipping argument: 
eligible
(invalid date)
(%s) %s@%ld
None of the environment variables SVN_EDITOR, VISUAL or EDITOR are set, and no 'editor-cmd' run-time configuration option was found
The EDITOR, SVN_EDITOR or VISUAL environment variable or 'editor-cmd' run-time configuration option is empty or consists solely of whitespace. Expected a shell command.
Can't change working directory to '%s'
Can't restore working directory
The environment variable SVN_MERGE and the merge-tool-cmd run-time configuration option were not set.
The external merge tool exited with exit code %d
The SVN_MERGE environment variable is empty or consists solely of whitespace. Expected a shell command.
Error normalizing edited contents to internal format
Log message contains a zero byte
Your commit message was left in a temporary file:
--This line, and those below, will be ignored--
Error normalizing log message to internal format
Cannot invoke editor to get log message when non-interactive
Could not use external editor to fetch log message; consider setting the $SVN_EDITOR environment variable or using the --message (-m) or --file (-F) options
Log message unchanged or not specified
(a)bort, (c)ontinue, (e)dit:
Use --force to override this restriction
truncate_buffer_at_prefix
svn.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.note.ABI-tag
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.interp
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rela.plt
.got.plt
.got
.text
