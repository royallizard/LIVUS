 ?7(
|{.1
CdoCE
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
g_snprintf
gegl_operation_area_filter_get_type
g_type_module_register_type
__stack_chk_fail
g_slice_alloc0
g_type_class_peek_parent
gegl_operation_get_type
g_type_check_class_cast
gegl_operation_filter_get_type
g_dgettext
gegl_operation_class_set_keys
gegl_param_spec_double
g_object_class_install_property
g_param_spec_string
g_object_set_data_full
g_free
g_slice_free1
g_malloc_n
_ZGVbN2v___exp_finite
g_type_name
g_log
g_value_set_double
g_value_set_string
g_value_get_double
g_value_get_string
g_strdup
g_type_check_instance_cast
babl_format
gegl_operation_set_format
gegl_cl_is_accelerated
gegl_buffer_new
g_assertion_message_expr
g_malloc0_n
gegl_buffer_get
gegl_buffer_set
g_object_unref
gegl_operation_get_format
gegl_buffer_cl_iterator_new
gegl_buffer_cl_iterator_add_2
gegl_buffer_cl_iterator_next
gegl_clCreateBuffer
gegl_cl_get_context
gegl_clEnqueueWriteBuffer
gegl_cl_get_command_queue
gegl_clSetKernelArg
gegl_clEnqueueNDRangeKernel
gegl_cl_errstring
gegl_cl_compile_and_build
gegl_clFinish
gegl_clReleaseMemObject
gegl_chant_get_type
gegl_module_query
gegl_module_register
libgmodule-2.0.so.0
libgio-2.0.so.0
libgobject-2.0.so.0
libgthread-2.0.so.0
libglib-2.0.so.0
libm.so.6
_ZGVbN2v___log_finite
_ZGVbN2v_log
_ZGVcN4v___log_finite
_ZGVcN4v_log
_ZGVdN4v___log_finite
_ZGVdN4v_log
_ZGVeN8v___log_finite
_ZGVeN8v_log
_ZGVbN4v___logf_finite
_ZGVbN4v_logf
_ZGVcN8v___logf_finite
_ZGVcN8v_logf
_ZGVdN8v___logf_finite
_ZGVdN8v_logf
_ZGVeN16v___logf_finite
_ZGVeN16v_logf
_ZGVbN2v_exp
_ZGVcN4v___exp_finite
_ZGVcN4v_exp
_ZGVdN4v___exp_finite
_ZGVdN4v_exp
_ZGVeN8v___exp_finite
_ZGVeN8v_exp
_ZGVbN4v___expf_finite
_ZGVbN4v_expf
_ZGVcN8v___expf_finite
_ZGVcN8v_expf
_ZGVdN8v___expf_finite
_ZGVdN8v_expf
_ZGVeN16v___expf_finite
_ZGVeN16v_expf
_ZGVbN2vv___pow_finite
_ZGVbN2vv_pow
_ZGVcN4vv___pow_finite
_ZGVcN4vv_pow
_ZGVdN4vv___pow_finite
_ZGVdN4vv_pow
_ZGVeN8vv___pow_finite
_ZGVeN8vv_pow
_ZGVbN4vv___powf_finite
_ZGVbN4vv_powf
_ZGVcN8vv___powf_finite
_ZGVcN8vv_powf
_ZGVdN8vv___powf_finite
_ZGVdN8vv_powf
_ZGVeN16vv___powf_finite
_ZGVeN16vv_powf
libmvec.so.1
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
gaussian-blur.so
GLIBC_2.4
GLIBC_2.2.5
GLIBC_2.15
GLIBC_2.22
%zM 
%rM 
%jM 
%bM 
%ZM 
%RM 
%JM 
%BM 
%:M 
%2M 
%*M 
%"M 
%zL 
%rL 
%jL 
%bL 
=iM 
=9M 
52M 
u+UH
=ZL 
\$`f
D$H1
D$@8
D$(H
=,I 
[]A\
AVAUATUSH
[]A\A]A^A_
XL$x
l$xA
)d$Pf
)d$`
o% 4
)L$@I
)T$0
oT$0
)D$ f
(t$`f
(\$ f
(L$@f
YD$p
tuATUH
 []A\
t$ H
AVAUATUSH
T$`H
t$0dH
L$ )
\$8E
|$0E1
T$x1
T$0Hc
ZT$@f
L$(I
T$0D
D9\$t
\$(H
L$xE1
ZT$P
|$hIc
t,Hc
|$0I
;T$ 
t$xD;d$8
\$0E1
|$`H
[]A\A]A^A_
|$0E1
D$(H
D$tM
HcT$(H
H;t$0u
D+\$xL
t$@D;d$8
<$E1
T$hE
D$ D
D$0Ic
D$(D
+D$01
D$(H
H;L$
;L$ 
|$`H
L$(E
Hc|$(
\$tH
t$x1
L$tH
t$xH
d$(E
\$(H
L$(H
|$`E1
F(PA
F$PH
F(Pj
=O. 
t$tH
~D$h1
D$hH
~D$h1
D$hH
%J% 
%r$ 
%r$ 
%*% 
%R$ 
%"$ 
%r$ 
%R$ 
%z# 
GeglChantgaussian-blur.c
gegl-0.2
description
categories
gegl:gaussian-blur
name
Size X
std_dev_x
Size Y
std_dev_y
Filter
auto
filter
chant-data
property
GEGL-../../gegl/gegl-chant.h
RaGaBaA float
input
output
fir_ver_blur_CL
fir_hor_blur_CL
GEGL-gaussian-blur.c
xoff >= radius
yoff >= radius
Performs an averaging of neighboring pixels with the normal distribution as weighting
Standard deviation for the horizontal axis. (multiply by ~2 to get radius)
Standard deviation for the vertical axis. (multiply by ~2 to get radius.)
Optional parameter to override the automatic selection of blur filter. Choices are fir, iir, auto
%s:%d: invalid %s id %u for "%s" of type '%s' in '%s'
float4 fir_get_mean_component_1D_CL(const global float4 *buf,     
                                    int offset,                   
                                    const int delta_offset,       
                                    constant float *cmatrix,      
                                    const int matrix_length)      
{                                                                 
    float4 acc = 0.0f;                                            
    int i;                                                        
                                                                  
    for(i=0; i<matrix_length; i++)                                
      {                                                           
        acc    += buf[offset] * cmatrix[i];                       
        offset += delta_offset;                                   
      }                                                           
    return acc;                                                   
}                                                                 
                                                                  
__kernel void fir_ver_blur_CL(const global float4 *src_buf,       
                              const int src_width,                
                              global float4 *dst_buf,             
                              constant float *cmatrix,            
                              const int matrix_length,            
                              const int yoff)                     
{                                                                 
    int gidx = get_global_id(0);                                  
    int gidy = get_global_id(1);                                  
    int gid  = gidx + gidy * get_global_size(0);                  
                                                                  
    int radius = matrix_length / 2;                               
    int src_offset = gidx + (gidy - radius + yoff) * src_width;   
                                                                  
    dst_buf[gid] = fir_get_mean_component_1D_CL(                  
        src_buf, src_offset, src_width, cmatrix, matrix_length);  
}                                                                 
                                                                  
__kernel void fir_hor_blur_CL(const global float4 *src_buf,       
                              const int src_width,                
                              global float4 *dst_buf,             
                              constant float *cmatrix,            
                              const int matrix_length,            
                              const int yoff)                     
{                                                                 
    int gidx = get_global_id(0);                                  
    int gidy = get_global_id(1);                                  
    int gid  = gidx + gidy * get_global_size(0);                  
                                                                  
    int radius = matrix_length / 2;                               
    int src_offset = gidy * src_width + (gidx - radius + yoff);   
                                                                  
    dst_buf[gid] = fir_get_mean_component_1D_CL(                  
        src_buf, src_offset, 1, cmatrix, matrix_length);          
}                                                                 
[OpenCL] Error in gegl:gaussian-blur: %s
fir_ver_blur
fir_hor_blur
;*3$"
gcc 8.0.1 20180218
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gaussian-blur.so-0.2.0-38.fc28.x86_64.debug
7zXZ
qb#]
5tQB
% Gjx
o:R)
}Nv]
zC|)w8
1iMiQ
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.note.gnu.property
.init_array
.fini_array
.data.rel.ro
.dynamic
.got
.bss
.gnu.build.attributes
.gnu_debuglink
.gnu_debugdata
