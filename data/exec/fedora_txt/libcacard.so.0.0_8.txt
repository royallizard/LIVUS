td s
U9.o
yuoj&-V1E
__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
vcard_get_current_applet_private
__assert_fail
vcard_make_response
vcard_response_new_bytes
realloc
memcpy
vcard_emul_rsa_op
vcard_response_new
cac_card_init
vcard_set_type
malloc
vcard_new_applet
vcard_set_applet_private
vcard_add_applet
vcard_response_new_data
vcard_response_new_status_bytes
vcard_get_buffer_response
vcard_set_buffer_response
vcard_buffer_response_delete
vcard_buffer_response_new
vcard_response_delete
vcard_apdu_new
vcard_apdu_delete
vcard_process_apdu
vcard_process_applet_apdu
vcard_get_type
vcard_emul_get_login_count
vcard_find_applet
vcard_select_applet
vcard_applet_get_aid
vcard_emul_login
vevent_new
vreader_reference
vcard_reference
vevent_delete
vreader_free
vcard_free
vevent_queue_init
pthread_mutex_init
pthread_cond_init
vevent_queue_vevent
pthread_mutex_lock
pthread_cond_signal
pthread_mutex_unlock
vevent_wait_next_vevent
pthread_cond_wait
vevent_get_next_vevent
PK11_ReferenceSlot
__strdup
CERT_DupCertificate
PK11_FindKeyByDERCert
PK11_FreeSlot
vreader_get_private
vcard_new
vcard_init
vcard_emul_type_select
PORT_Strdup
PK11_FindGenericObjects
PK11_GetNextGenericObject
PK11_ReadRawAttribute
CERT_GetDefaultCertDB
CERT_NewTempCertificate
SECITEM_FreeItem
CERT_DestroyCertificate
SECMOD_WaitForAnyTokenEvent
vreader_get_reader_list
vreader_list_get_first
vreader_list_get_next
vreader_list_get_reader
PK11_IsPresent
PK11_GetSlotName
vreader_new
vreader_add_reader
PK11_GetSlotSeries
vreader_insert_card
vcard_emul_delete_key
SECKEY_DestroyPrivateKey
PK11_SignatureLen
PK11_PubDecryptRaw
PK11_FindPrivateKeyFromCert
PORT_GetError
vcard_get_private
PK11_Authenticate
memset
vcard_emul_reset
PK11_Logout
vcard_emul_get_atr
vcard_emul_force_card_remove
vreader_card_is_present
vcard_emul_force_card_insert
vcard_emul_init
vreader_init
NSS_Init
PK11_SetPasswordFunc
PK11_FindSlotByName
PK11_FindCertFromNickname
SECMOD_GetDefaultModuleListLock
SECMOD_GetDefaultModuleList
SECMOD_GetReadLock
PK11_IsRemovable
PK11_IsHW
SECMOD_ReleaseReadLock
PR_CreateThread
SECMOD_LoadUserModule
SECMOD_DestroyModule
PORT_SetError
vcard_emul_replay_insertion_events
vreader_queue_card_event
vcard_emul_options
vcard_emul_type_from_string
__strncpy_chk
vcard_emul_usage
stderr
fwrite
strcasecmp
vcard_reset
vcard_delete_applet
vcard_get_atr
vcard_set_atr_func
vreader_get_id
vreader_set_id
vreader_get_name
vreader_power_on
vreader_power_off
vreader_xfr_bytes
vreader_list_delete
vreader_get_reader_by_id
vreader_get_reader_by_name
strcmp
vreader_remove_reader
libssl3.so
libsmime3.so
libnss3.so
libnssutil3.so
libplds4.so
libplc4.so
libnspr4.so
libpthread.so.0
libdl.so.2
libc.so.6
__stack_chk_fail
_edata
__bss_start
_end
libcacard.so.0
GLIBC_2.0
GLIBC_2.3.2
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.3.4
NSS_3.9.3
NSS_3.4
NSS_3.5
NSS_3.3
NSS_3.12
NSS_3.9.2
NSS_3.2
<Vt2v(<
< t$<Lu
v/<RtS<X
<6t<
;L$8
L$,tm
UWVS
D$<1
;|$xt}
D$9y
T$<e3
d$L[^_]
|$P;L$L
|$0;L$,
tAs'
itWvef
T$$t	
T$$t(
D$(=
ND$(
UWVS
[^_]
[^_]
UWVS
d$,[^_]
;T$L
D$L;D$,
|$8u
f%{&f
D$ f1
d$\[^_]
ED$p
D$,9A
L$4f
L$<1
UWVS
[^_]
T$ )
;|$ 
d$([
d$([
UWVS
[^_]
UWVS
[^_]
[^_]
[^_]
tl9p
d$ 1
cac.c
applet_private
pki_applet->cert != ((void *)0)
cac_applet_pki_reset
cac_applet_pki_process_apdu
card_7816.c
*response != ((void *)0)
vcard7816_vm_process_apdu
event.c
vevent_queue_tail
vevent_queue_vevent
vcard_emul_nss.c
buffer_size == signature_len
atr != ((void *)0)
sql:/etc/pki/nssdb
soft=
sizeof(type_str) > type_len
use_hw=
hw_type=
hw_params=
library=libcoolkeypk11.so name=Coolkey
emul args: comma separated list of the following arguments
 db={nss_database}               (default sql:/etc/pki/nssdb)
 use_hw=[yes|no]                 (default yes)
 hw_type={card_type_to_emulate}  (default CAC)
 hw_param={param_for_card}       (default "")
 soft=({slot_name},{vreader_name},{card_type_to_emulate},{params_for_card},
       {cert1},{cert2},{cert3}    (default none)
  {nss_database}          The location of the NSS cert & key database
  {card_type_to_emulate}  What card interface to present to the guest
  {param_for_card}        Card interface specific parameters
  {slot_name}             NSS slot that contains the certs
  {vreader_name}          Virutal reader name to present to the guest
  {certN}                 Nickname of the certificate n on the virtual card
These parameters come as a single string separated by blanks or newlines.
Unless use_hw is set to no, all tokens that look like removable hardware
tokens will be presented to the guest using the emulator specified by 
hw_type, and parameters of hw_param.
If more one or more soft= parameters are specified, these readers will be
presented to the guest
vcard_emul_rsa_op
vcard_emul_get_atr
VCARD_NSSvcard_emul_options
vcard.c
channel < 4
vcard_select_applet
vreader.c
card_status == VCARD_DONE
vreader_xfr_bytes
libcacard.so.0.0.0.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rel.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rel.plt
.got.plt
.got
.text
