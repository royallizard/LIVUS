tdPB
tdH~
R4H"!
r+<.
8]J'
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
gvplugin_dot_layout_LTX_library
gvlayout_dot_layout
dotgen_engine
dotgen_features
dot_cleanup
reverse_edge
delete_fast_edge
find_fast_edge
acyclic
nonconstraint_edge
E_constr
agxget
mapbool
class1
mark_clusters
agfstnode
agfstout
agnxtout
agnxtnode
UF_find
virtual_node
make_aux_edge
virtual_weight
agraphof
agroot
__assert_fail
merge_chain
mergeable
ports_eq
class2
build_skeleton
grealloc
gmalloc
agedge
Concentrate
interclexp
agfstedge
safe_other_edge
agnxtedge
agcontains
find_flat_edge
expand_cluster
allocate_ranks
build_ranks
delete_fast_node
UF_singleton
agnameof
agerr
agdelete
UF_setname
zmalloc
install_cluster
install_in_rank
enqueue_neighbors
mark_lowclusters
Bezier
__sprintf_chk
findCluster
agget
free
arrowEndClip
arrowStartClip
dot_compoundEdges
mkClustMap
dtclose
dot_scan_ranks
__longjmp_chk
dot_concentrate
_setjmp
portcmp
decompose
zapinlist
new_virtual_edge
fast_nodeapp
delete_flat_edge
unmerge_oneway
flat_edges
rec_save_vlists
rec_reset_vlists
free_label
agdelrec
agfstsubg
agnxtsubg
agbindrec
agattr
agxset
dot_init_node_edge
common_init_node
gv_nodesize
N_group
common_init_edge
E_weight
late_int
late_string
E_showboxes
E_minlen
gv_cleanup_edge
setEdgeType
__isoc99_sscanf
Verbose
dot_rank
dot_mincross
dot_position
dot_sameports
dot_splines
dotneato_postprocess
stderr
__fprintf_chk
agsubg
agdelnode
agdelsubg
memset
agnode
agsubnode
qsort
G_ordering
N_ordering
is_cluster
save_vlist
flat_rev
enqueue
new_queue
dequeue
free_queue
MaxIter
agnedges
strtod
elapsed_sec
start_timer
agfstin
agnxtin
G_margin
agnnodes
selfRightSpace
countDummyNodes
fwrite
zrealloc
do_graph_label
agsubedge
is_a_cluster
strcmp
mapBool
rank1
CL_type
UF_union
maptoken
init_UF_size
initEdgeTypes
rank3
Agstrictdirected
agopen
infosizes
agpushdisc
strtol
rank2
agclose
arrow_flags
arrow_length
hypot
shape_clip
E_samehead
E_sametail
clip_and_install
beginpath
endpath
agcopyattr
shapeOf
strlen
agset
getsplinepoints
add_box
routesplinesinit
makeStraightEdge
E_headlabel
E_labelangle
E_taillabel
place_portlabel
updateBB
State
EdgeLabelsDone
routesplinesterm
orthoEdges
E_labeldistance
routesplines
routepolylines
makeSelfEdge
simpleSplineRoute
agisdirected
Agundirected
agnxtattr
Agdirected
new_spline
update_bb_bz
libgvc.so.6
libltdl.so.7
libxdot.so.4
libexpat.so.1
libz.so.1
libcgraph.so.6
libcdt.so.5
libpathplan.so.4
libm.so.6
libc.so.6
__stack_chk_fail
_edata
__bss_start
_end
libgvplugin_dot_layout.so.6
GLIBC_2.0
GLIBC_2.3.4
GLIBC_2.11
GLIBC_2.7
GLIBC_2.1.3
GLIBC_2.4
[^_]
UWVS
d$L[^_]
d$4^
d$L[^_]
UWVS
d$,[^_]
UWVS
[^_]
[^_]
I\9N\u
d$<[^_]
L$ ;N
T$$;
L$ ;N
D$ ;F
[^_]
UWVS
D$$kT$(,
d$L[^_]
d$L[^_]
UWVS
L$(;
d$<[^_]
UWVS
;9}M
d$,[^_]
UWVS
|$@u#
d$,[^_]
d$,[^_]
UWVS
[^_]
UWVS
[^_]
[^_]
D$89
[^_]
D$89
[^_]
UWVS
[^_]
\$Hf
[^_]
[^_]
t$,9l$@
D$@)
[^_]
UWVS
[^_]
,WVS
;L$d
D$,9D$d
L$d+L$`
d$L[^_]
UWVS
;L$(
d$<[^_]
UWVS
l$T,
T$X;
+D$|
T$T;
[^_]
[^_]
DD$h
DD$`
d$<[^_]
[^_]
T$ ~{
UWVS
~a;1tU1
UWVS
T$$9
UWVS
UWVS
[^_]
UWVS
[^_]
[^_]
UWVS
9D$@
9L$D
9L$@
9D$D|'
9D$D|
9L$@}
d$,[^_]
9D$D
d$,[^_]
9D$D
D$$k
kD$ ,
D$`f
[^_]
D$Hf
UWVS
d$\[^_]
d$\1
[^_]
[^_]
[^_]
UWVS
d$,[^_]
UWVS
d$,[^_]
UWVS
D$ uS
D$ttd
[^_]
[^_]
[^_]
d$$1
d$$1
[^_]
d$,[^_]
d$<[^_]
UWVS
d$,[^_]
[^_]
<ot6<it
d$,[^_]
[^_]
d$,[^_]
<itl
;D$,
L$01
D$ 9
D$ )
;T$,}(
;T$,
d$L[^_]
UWVS
d$h[^_]
[^_]
|$D9
d$,[
UWVS
d$,[^_]
UWVS
[^_]
[^_]
d$,[^_]
UWVS
d$,[^_]
:92~
UWVS
;T$(
d$<[^_]
[^_]
UWVS
9l$,
d$<[^_]
d$<[^_]
d$<[^_]
UWVS
[^_]
UWVS
;D$4
l$(~8
d$L[^_]
UWVS
D$(kD$$,
D$ ,
;D$$
9D$Pt9
d$<[^_]
T$T~L
;t$<
D$\9D$H
kD$\,
D$lkD$H,
D$H+D$\
D$H9D$P
9D$8
;l$DvG
D$p9D$H
;|$,
;|$,r
;D$<
D$X9D$dth
;t$<~	
t$41
D$Pk
t$@9
;t$8
9D$T
l$,9
l$,9
;t$8t
;t$8u
D$D9T$,
T$Lt
T$L9T
9T$8
9T$8u
9t$Hu
9T$8
9T$8u
;D$,
D$\u
L$L;
9D$8t
9D$8u
T$L9
9D$8
9D$8u
;T$h
T$Lu
+T$L
D$H+D$\
l$@,
9D$P
D$X9D$`
[^_]
;D$<
[^_]
UWVS
9D$(
|$4~^
D$,,
9D$0
d$|[^_]
d$`^_]
\$hf
d$|[
[^_]
D$@f
d$\[^_]
\$@f
d$l[^_]
|$ k
D$,)
D$$k
D$0)
[^_]
Wx+P
|$$kD$
89T$
UWVS
D$8f
;T$ 
[^_]
D$@f
[^_]
\$0f
d$4[^
D$8f
T$ f
D$0f
d$L[^_]
L$(k
[^_]
d$ [^_
;L$ 
d$l[^_]
d$l[^_]
t$(9
;D$(
d$L[^_]
UWVS
D$$,
9D$(
D$hf
[^_]
D$(uV
L$8;H
D$4,
9T$L
D$49
L$49
;|$0
D$(;l$@
D$4,
D$8f
|$Pu
D$f%
D$f%
:APt
zNuL
z0u.
[^_]
[^_]
[^_]
[^_]
d$,[^_]
[^_]
<mtd
[^_]
[^_]
d$,[^_]
d$,[^_]
d$,[^_]
d$,[^_]
UWV1
[^_]
\$(f
d$L[^_]
UWVS
d$,[^_]
;rpth
d$,[^_]
8du7
UWVS
D$De
\$Xf
|$,1
|$,t#f
l$,t,
;D$ 
T$09
;T$0
l$$f
t$,t(
t$,t$
[^_]
L$,1
L$,1
[^_]
UWVS
D$(9J
[^_]
[^_]
UWVS
;V<t
[^_]
d$@^_]
d$$[^
.)D$
[^_]
9T$$
[^_]
d$<1
t!9l$
[^_]
tf9l$
[^_]
d$@[^_
UWVS
[^_]
UWVS
\$hf
[^_]
UWVS
\$hf
[^_]
UWVS
[^_]
[^_]
[^_]
[^_]
;o4|
D$$1
9D$4
|$$)
\$`f
D$$ 
;D$,
D$$ 
l$8;D$,
D$$1
9D$0
9D$(
9l$(
9D$0~
[^_]
D$hf
UWVS
[^_]
|$h1
D$Tu
\$\f
D$h,
;T$p
[^_]
D$|9D$T
9L$h
D$|9D$T
|$\;W
D$h;
D$h;
D$\9D$t
D$T9D$|
@\9B\
D$\1
z/u-
D$h;
D$h9D$T
D$\9P
[^_]
T$@<
D$8;
D$D1
;|$L
[^_]
t$@<
T$@<
D$8;
D$P1
9L$T
D$L;
D$@;G
UWVS
[^_]
[^_]
D$t 
D$x 
UWVS
d$|[^_]
\$89
\$@u
d$T[^
UWV1
[^_]
UWV1
[^_]
UWVS
D$ 9D$
D$09D$8
$;|$
$;|$
[^_]
dot_layout
class2.c
(((Agedgeinfo_t*)(((Agobj_t*)(orig))->data))->to_virt) == ((void *)0)
(((Agedgeinfo_t*)(((Agobj_t*)(orig))->data))->to_virt) != ((void *)0)
(((Agedgeinfo_t*)(((Agobj_t*)(e))->data))->to_virt) == ((void *)0)
make_chain
merge_chain
cluster.c
(((Agnodeinfo_t*)(((Agobj_t*)(from))->data))->rank) < (((Agnodeinfo_t*)(((Agobj_t*)(to))->data))->rank)
%s was already in a rankset, deleted from cluster %s
map_path
(%.5g,%.5g)
compound.c
cluster named %s not found
lhead
ltail
bez->sflag
bez->eflag
segment [%s,%s] does not intersect box ll=%s,ur=%s
%s -> %s: spline size > 1 not supported
%s -> %s: head not inside head cluster %s
%s -> %s: tail is inside head cluster %s
%s -> %s: tail not inside tail cluster %s
%s -> %s: head is inside tail cluster %s
boxIntersectf
makeCompoundEdge
@conc.c
(((Agnodeinfo_t*)(((Agobj_t*)(right))->data))->in).size + (((Agnodeinfo_t*)(((Agobj_t*)(right))->data))->out).size == 0
rebuiltd_vlists: rank lead %s not in order %d of rank %d
degenerate concentrated rank %s,%d
concentrate=true may not work correctly.
mergevirtual
fastgr.c
e != ((void *)0)
u != v
find_fast_node(g, n)
merge_oneway glitch
n != (((Agnodeinfo_t*)(((Agobj_t*)(n))->data))->next)
(((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->next) == ((void *)0)
merge_oneway
delete_flat_edge
delete_fast_node
fast_nodeapp
fast_node
delete_fast_edge
flat.c
(((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->out).size == 2
(((Agraphinfo_t*)(((Agobj_t*)(g))->data))->minrank) == 0
setbounds
abomination
Agnodeinfo_t
Agraphinfo_t
order
Agedgeinfo_t
phase
aspect
%lf,%d
Target AR = %g
_new_rank
dotinit.c
v == n
compound
dot does not support the aspect attribute for disconnected graphs or graphs with clusters
remove_from_rank
Amincross.c
surprise
mclimit
remincross
ordering '%s' not recognized.
ordering '%s' not recognized for node '%s'.
(((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->order) < (((Agnodeinfo_t*)(((Agobj_t*)(w))->data))->order)
(rv == 0) || ((((Agnodeinfo_t*)(((Agobj_t*)(rv))->data))->order)-(((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->order))*dir > 0
(((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->rank) == r
(((Agnodeinfo_t*)(((Agobj_t*)(((((((Agobj_t*)(e))->tag).objtype) == 2? (e): ((e)-1))->node)))->data))->low) < M->nrows
(((Agnodeinfo_t*)(((Agobj_t*)(((((((Agobj_t*)(e))->tag).objtype) == 3? (e): ((e)+1))->node)))->data))->low) < M->ncols
constraining_flat_edge(g,v,e) == 0
install_in_rank, line %d: %s %s rank %d i = %d an = 0
(((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].n <= (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].an
install_in_rank, line %d: ND_order(%s) [%d] > GD_rank(Root)[%d].an [%d]
install_in_rank, line %d: rank %d not in rank range [%d,%d]
install_in_rank, line %d: GD_rank(g)[%d].v + ND_order(%s) [%d] > GD_rank(g)[%d].av + GD_rank(Root)[%d].an [%d]
mincross: pass %d iter %d trying %d cur_cross %d best_cross %d
merge2: graph %s, rank %d has only %d < %d nodes
mincross %s: %d crossings, %.2f secs.
install_in_rank
neighbor
balance
transpose_step
postorder
flat_reorder
flat_search
?nslimit
position.c
rank(g, 2, nsiter2(g)) == 0
AR=%0.4lf	 Area= %0.4lf	
Dummy=%d
next#iter=%d
Edge length %f larger than maximum %u allowed.
Check for overwide node(s).
contain_nodes clust %s rank %d missing node
Going to apply another expansion.
connectGraph
dot_position
MbP?
?level edge rec
level node rec
level graph rec
sink
same
source
compact
nslimit1
cluster
rank.c
newrank
level assignment constraints
_weak_%d
root
searchsize
Maxrank = %d, minrank = %d
leader != ((void *)0)
ranking: failure to create strong constraint edge between nodes %s and %s
((((((Agobj_t*)(e))->tag).objtype) == 2? (e): ((e)-1))->node) == UF_find(((((((Agobj_t*)(e))->tag).objtype) == 2? (e): ((e)-1))->node))
((((((Agobj_t*)(e))->tag).objtype) == 3? (e): ((e)+1))->node) == UF_find(((((((Agobj_t*)(e))->tag).objtype) == 3? (e): ((e)+1))->node))
((((Agnodeinfo_t*)(((Agobj_t*)(n))->data))->UF_size) <= 1) || (n == leader)
minmax_edges
cluster_leader
too many (> %d) same{head,tail} groups for node %s
samehead
sametail
C{%s}
label
dotsplines.c
auxg
headport
tailport
weight
10000
edge labels with splines=curved not supported in dot - use xlabels
(l = (((Agedgeinfo_t*)(((Agobj_t*)(fe))->data))->label))
(((Agedgeinfo_t*)(((Agobj_t*)(fe))->data))->label)
setEdgeLabelPos
_dot_splines
combiAR = %lf
;*2$"8
libgvplugin_dot_layout.so.6.0.0.debug
7zXZ
k@f]6
Me}\
@z*y
NK[m
_&VG
'+kIn
@~7b 
;1^7
omp^
07~1
"M:[Uq
rz'R
Zr!Mv
t1	~
2--qv
XQ-W"
Wtwjr
\{Z<5
BHU&7
Vd$@
k;]U8M
Y1fh
$p]k
(ByS
jHgI
7 jBNo
"0b:g
u	"Gv
t$x_9
a/a=
Jjc~
2/0v
;'M\
t9rX;
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
