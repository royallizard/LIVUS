/lib64/ld-linux-x86-64.so.2
libutil.so.1
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
openpty
libreadline.so.6
write_history
where_history
read_history
readline
append_history
_fini
using_history
add_history
libssl.so.10
SSL_get_error
TLSv1_client_method
SSL_CTX_free
SSL_pending
SSL_read
SSL_CTX_ctrl
SSL_get_verify_result
SSLv3_server_method
SSL_set_cipher_list
SSL_CTX_use_PrivateKey_file
SSL_connect
SSL_CTX_load_verify_locations
SSL_library_init
SSLv23_client_method
SSL_COMP_get_name
SSL_accept
SSL_shutdown
SSL_get_current_cipher
SSL_write
TLSv1_server_method
SSL_CIPHER_get_name
SSLv2_server_method
SSL_CTX_use_certificate_chain_file
SSLv3_client_method
SSL_CTX_use_certificate_file
SSL_get_peer_certificate
SSL_set_fd
SSL_COMP_get_compression_methods
SSL_CTX_set_verify
SSL_get_current_expansion
SSL_get_current_compression
SSL_free
SSL_load_error_strings
SSL_new
SSL_CTX_new
SSLv23_server_method
SSL_CTX_set_cipher_list
libcrypto.so.10
OpenSSL_add_all_digests
RAND_status
ERR_get_error
PEM_read_bio_DHparams
OPENSSL_add_all_algorithms_noconf
DH_free
RAND_egd
RAND_seed
ERR_peek_error
BIO_new_file
BN_bin2bn
X509_get_subject_name
ERR_error_string_n
X509_free
BIO_free
OpenSSL_add_all_ciphers
ERR_func_error_string
X509_NAME_oneline
X509_get_issuer_name
ERR_reason_error_string
DH_new
ERR_error_string
ERR_lib_error_string
libc.so.6
setuid
chroot
socket
__res_init
fflush
strcpy
__rawmemchr
fchmod
_IO_putc
fopen
gai_strerror
strncmp
ftruncate
strrchr
regexec
pipe
__strdup
ftruncate64
getpwuid
__fdelt_chk
initgroups
nanosleep
signal
strncpy
fork
sigprocmask
__stack_chk_fail
__lxstat
unlink
listen
select
realloc
abort
strtoll
socketpair
memrchr
getpid
kill
strftime
__assert_fail
mkstemp
flock
localtime_r
strtod
strtol
isatty
ctime_r
symlink
getpwnam
getppid
calloc
strlen
send
sigemptyset
openlog
getaddrinfo
memset
strstr
__errno_location
tcsetattr
bind
chdir
memcmp
__syslog_chk
asctime
getsockopt
setgroups
grantpt
ttyname
dup2
pause
unsetenv
__fxstat64
poll
ptsname
__fprintf_chk
sigaddset
getgrnam
fchown
stdout
fputc
recv
getsid
fputs
regerror
lseek
memcpy
fclose
tcsetpgrp
__vsnprintf_chk
strtoul
setsockopt
malloc
umask
strcasecmp
setpgid
getpeername
__res_state
getgid
__lxstat64
__xstat64
__ctype_b_loc
getenv
recvfrom
regcomp
getservbyname
stderr
ioctl
alarm
system
gethostbyname
__snprintf_chk
getgroups
getuid
readlink
getegid
getpgid
__strncat_chk
execvp
__xmknod
creat
__fxstat
strncat
fileno
gethostname
usleep
if_indextoname
fwrite
gettimeofday
sigaction
geteuid
srandom
waitpid
unlockpt
localtime
lseek64
strchr
getsockname
sendto
fdopen
hstrerror
tcgetattr
__ctype_toupper_loc
__strcpy_chk
__cxa_finalize
freeaddrinfo
setsid
fcntl
__sprintf_chk
__h_errno_location
__xstat
memmove
uname
getgrouplist
setgid
__strcat_chk
mkfifo
strcmp
recvmsg
tcgetpgrp
__libc_start_main
stpcpy
__cxa_atexit
_edata
__bss_start
_end
GLIBC_2.2.5
GLIBC_2.15
GLIBC_2.4
GLIBC_2.14
GLIBC_2.3.4
GLIBC_2.3
%z1$
%r1$
%j1$
%b1$
%Z1$
%R1$
%J1$
%B1$
%:1$
%21$
%*1$
%"1$
%z0$
%r0$
%j0$
%b0$
%Z0$
%R0$
%J0$
%B0$
%:0$
%20$
%*0$
%"0$
%z/$
%r/$
%j/$
%b/$
%Z/$
%R/$
%J/$
%B/$
%:/$
%2/$
%*/$
%"/$
%z.$
%r.$
%j.$
%b.$
%Z.$
%R.$
%J.$
%B.$
%:.$
%2.$
%*.$
%".$
%z-$
%r-$
%j-$
%b-$
%Z-$
%R-$
%J-$
%B-$
%:-$
%2-$
%*-$
%"-$
%z,$
%r,$
%j,$
%b,$
%Z,$
%R,$
%J,$
%B,$
%:,$
%2,$
%*,$
%",$
%z+$
%r+$
%j+$
%b+$
%Z+$
%R+$
%J+$
%B+$
%:+$
%2+$
%*+$
%"+$
%z*$
%r*$
%j*$
%b*$
%Z*$
%R*$
%J*$
%B*$
AWAVAUATI
5!)$
51&$
[]A\A]A^A_
=s#$
=Q$$
fffff.
fffff.
fffff.
=Yi#
ATUSH
D$(1
L$(dH3
0[]A\
L$(L
D$(1
T$(dH3
ffff.
AUATI
[]A\A]
AUATUSH
[]A\A]
fffff.
AWAVH
AUATI
L$81
L$8dH3
H[]A\A]A^A_
t$0H9
t$0H
T$0I
l$(f
|$$I
L;d$
l$(H
H;l$0|
ffffff.
AWAVAUATUSH
t$`E1
D$HH
t$ D
AXAY
H;D$
H)D$
H)t$
D$PH
D$PH
T$xfD
D$hfD
|$PH
D$PH
T$Xt
D$PH9
D$PH
[]A\A]A^A_
|$PH
D$PH
D$ff
D$vf
D$nf
D$~f
L$lP
T$(E1
T$ M
D$XH9
t*E1
T$0H
L$ A
T$0H
L$ A
T$(H
T$0L
L$ A
L$ L
T$0H
T$0L
L$ H
T$8L
L$0H
L$ L
L$0L
T$8L
L$0H
L$ E
L$ L
L$0L
T$0L
L$ L
T$0tk
T$0L
L$ L
T$`H
ffffff.
ATUH
[]A\
<4tZ<6tVH
<4t.<6t*H
@10H
ffffff.
ATUA
[]A\
[]A\
ATUSI
]A\A]A^
AWAVH
AUAT
5S5#
[]A\A]A^A_
fff.
AWAVAUATUSH
D$PH
D$`H
D$pH
D$xH
L$PH
D$`H
L$pH
t$@L
d$@H
D$ I
L$(H
D$@H
HcT$<H
D$@L
LckxA
d$@L
L$@L
D$8H
L$HH
T$0H
D$0H
[]A\A]A^A_
HcT$0
GOPEf
HcT$0H
HcT$0
HcT$0H
Cxt)
H$AQD
H AQD
AWAVAUATUS
[]A\A]A^A_
Ic@$A
ffffff.
AWAVAUATI
t$4H
L$ H
D$(H
<$,t
t$`H
t$XH
\$XI
D$XH9
T$(H
|$ H
T$4H
LcT$0H
HcD$0H
[]A\A]A^A_
\$8H
\$XH
L$(L
D$8H
T$0H
D$XL
\$8M
T$4H
\$8I
L$xL
\$8H
L$pH
d$pH
\$XE1
D$XL
\$8H
D$pL
\$8H
d$pL
t$8H
L$0H
T$(H
\$8H
D$XH
L$PH
d$pH
\$XH
T$xH
t$pj
D$pH
D$dPL
t$x1
t$x1
t$x1
t$x1
t$x1
t$x1
D$xL
D$x1
D$xL
8:t'I
D$xL
D$xL
8:t#I
D$xL
D$x1
D$xL
8:t'I
D$xL
D$xL
8:t#I
D$xL
t$hL
D$XL
T$hH
T8`L
t$x1
$v'H
t$x1
D$xL
8:t'I
D$xL
t$x1
D$xL
8:t'I
D$xL
t$hL
D$0L
T$hH
T88H
D$x1
D$xL
8:t'I
D$xL
t$x1
D$x1
D$xL
8:t'I
D$xL
D$xL
8:t#I
D$xL
z(u&
t$xM
z(u&
t$x1
T$xH
t$hH
T$hJ
T$hH
fffff.
ATUI
[]A\
ATUI
[]A\
ffffff.
ffffff.
ffffff.
AWAVAUATA
dH34%(
[A\A]A^A_]
fffff.
AWAVI
AUATUSH
d$ L
dH3<%(
[]A\A]A^A_
HcT$
T$ A
D$ t
L$ 1
AYAZ
O`PH
D$(PD
J$Pj
D$ A
D$,PD
N$APD
F(PH
HcH$
@HcP$
@(	D
Hc@$
HcJ$
J0Hcr$
#B(	D
D$ H
Hc@$
D$L%;
AUATA
[]A\A]
[]A\A]
t5Hc@$H	
H(Hc@$
tUSH
-t,H
ffff.
ATUI
ht4H
[]A\
AWAVI
AUATUSH
d$0H
l$ H
HcP$H
D$0P
D$@H
D$4PL
D$DH
N$Pj
D$8P
D$<PD
L$@1
HcH$Lcx(H
T$XH
D$PH
dH34%(
[]A\A]A^A_
Hcx$HcP(I
D$4PL
D$DH
fffff.
AUATH
[]A\A]
[]A\A]1
AUATA
[]A\A]
x%Hc
ATUSH
[]A\
[]A\
AWAVE1
AUATA
[]A\A]A^A_
fffff.
AWAVAUATUSH
CHE1
|$ 1
l$`H
D$(p
l$ H
H)kHM
[]A\A]A^A_
|$ 1
l$`L
l$ H
f;D$`H
D$d9
APAVI
AWAVI
f9D$b
AWAVAUATUSH
l$ A
[]A\A]A^A_
fffff.
AUATUSH
[]A\A]
fff.
AVAUM
ATUI
L$PD
D$HL
[]A\A]A^
AWAVAUATM
l$@D
t$HD
|$Pt
[]A\A]A^A_
ATUSH
[]A\
AVAUATUI
l$8D
t$@t
[]A\A]A^
]A\A]A^
AWAV
AUATM
D$(H
[]A\A]A^A_
AWAVE
AUATA
[]A\A]A^A_
AUATA
([]A\A]
AVAUA
ATUM
[]A\A]A^
ffff.
AUATI
D$(H
[]A\A]
ATUHc
 []A\
AUAT
XZtR
[]A\A]
AWAV
AUATA
[]A\A]A^A_
AWAVAUATUSH
D$HH
t$`E
D$ H
D$pH
D$(H
D$XH
D$@H
D$TH
|$(L
T$ H
d$ H
l$(E1
D;l$T
D9l$TL
D;l$Tu
[]A\A]A^A_
t$HH
l$ E1
\$ H
|$@H
D$ H
SCM_TIMEfA
STAM
TIMESTAM
t$(A
D$HH
t$XH
D$tH
t$(A
D$HH
t$XH
D$tH
D$(H
data
ATUH
[]A\
AVAUATUH
 []A\A]A^
ffffff.
Ct!C
AWAVI
AUATA
[]A\A]A^A_
AWAT
ffffff.
[]A\
AWAVAUATI
D$ D
T$ L
d$`H
T$<D
D$<p
t$ L
[]A\A]A^A_
|$bf
t$PH
i|$P@B
l$(f
fD;l$
|$ H
D$XH
|$ H
T$XH
HcT$
D$<H
d$`L
|$ H
|$ H
|$ L
AWAVM
AUATI
T$,H
L$HH
T$@H
[]A\A]A^A_
AWAV
AUATUSH
T$(H
[]A\A]A^A_
AUATA
[]A\A]
AWAVI
AUATI
d$@L
l$ H
4$dH
T$ I
T$0H
AURH
[]A\A]A^A_
|$8H
T$(I
T$8H
L$(L
T$8H
USuDA
AQAPL
[]A\
AWAVAUATUSH
f dH
D$81
t$ H
T$0H
D$0L
AWSH
ZYt&H
L$8dH3
H[]A\A]A^A_
|$(H
AWAVA
AUATI
T$LL
D$LE
%	9#
|$"m
D$`L
d$PL
D$(H
D$0H
D$8H
t$TL
D$hp
D$`H
L$hH
T$0H
T$8H
t$ H
T$ H
L$LH
t$ 1
t$ 1
[]A\A]A^A_
D$"y
t$ 1
t$ 1
AWAV
AUATUSH
L$81
d$ H
T$ I
T$(H
D$(D
|$0H
D$4H
L$8dH3
H[]A\A]A^A_
AVAUL
ATUI
[]A\A]A^
C"y1
AWAV
AUATUSH
T$ I
L$ H
D$0D
|$(H
D$,H
[]A\A]A^A_
[]A\
AWAVAUATUSH
l$ A
T$,H
T$(I
T$0I
T$8I
T$@I
T$HI
T$PI
T$XI
T$`I
T$hI
T$pI
T$xI
T$ RPH
[]A\A]A^A_
AWAVAUATA
T$HH
L$DdH
D$`p
D$dp
D$HD
T$DH
t$Hf
D$Hf
|$hH
-N$#
D$`L
l$PH
l$pL
d$ H
D$(H
D$dH
D$0H
t$DH
D$PH
D$PI
[]A\A]A^A_
T$(H
T$0D
t$dH
t$`H
t$`H
tHf.
D$8H
D$DH
L$HH
D$`H
T$0H
D$dH
t$`H
D$8H
T$dH
T$`H
L$TH
l$DH
|$HH
D$dH
fff.
AWAVI
AUATA
([]A\A]A^A_
[]A\A]A^A_
AUATH
]A\A]
]A\A]
[]A\A]
ffffff.
AWAVAUATUSH
t$0H
D$,H
D$(E
[]A\A]A^A_
ffff.
AWAVA
AUATA
D$(L
[]A\A]A^A_
D$(L
AWAVAUATI
d$(j
D$,H
D$(P
[]A\A]A^A_
AWAVAUATUSH
t$,M
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
AWAVA
AUAT
t$0H
[]A\A]A^A_
D$(H
D$0H
D$8H
D$@H
D$HH
D$PH
D$XH
D$`H
D$hH
D$pH
D$xH
L$ H
D$(H
D$0H
D$8H
D$@H
D$HH
D$PH
D$XH
D$`H
D$hH
D$pH
D$xH
fffff.
AWAVI
AUATE
t$@t
]A\A]A^A_
ADDR
fffff.
AWAVE
AUATI
|$ H
D$x1
D$@E1
T$ H
\$DD
D$HH
D$\H
D$`PD
L$d1
|$PH
t$xdH34%(
[]A\A]A^A_
D$@E1
D$@M
t$81
L$8f
@1<0
L$(M
AWAVA
AUATH
L$h1
L$$H
HcT$$H9
H9L$(
\$hdH3
x[]A\A]A^A_
Hc4$L
Hc4$D
AUATI
[]A\A]
ATUH
St#U
St#U
[]A\
fff.
PORT
ADDR
AVAUATUSH
[]A\A]A^
fffff.
AWAVAUATUSH
v|dH
AUATW1
ASARVPH
D$RfA
D$\f
D$fP1
d$ L
ARW1
dH3<%(
[]A\A]A^A_
AWAVM
AUATUSH
D$X1
\$XdH3
h[]A\A]A^A_
l$(D
PORT
ADDR
AWAVAUATE
t$ L
D$(dH
t$8H
L$(L
L$ A
T$@L
[]A\A]A^A_
D$>f
AWAVAUATI
t$ L
D$$PH
D$(PH
D$(PL
t$HAVH
D$<P
D$$P
[]A\A]A^A_
AWAVAUATI
t$hL
|$pdH
t$hL
AQAWM
([]A\A]A^A_
ffffff.
AWAVI
AUATA
|$ AW
AUATL
[]A\A]A^A_
AWAVI
AUATI
t$ L
[]A\A]A^A_
D$8H
ZYur
t$0H
AWAVAUATUSH
[]A\A]A^A_
x06@
AWAVAUATUSH
t$`H
x06@
([]A\A]A^A_
USu<H
D$(I
[]A\
AVAUI
ATUI
[]A\A]A^
1080
ATUI
[]A\
D$$PL
fff.
AWAVA
AUATL
D$H1
VAVH
AUASARAPWD
L$HdH3
X[]A\A]A^A_
D$ H
D$0H
D$"H
T$(fA
D$6P
D$=PD
L$D1
D$@H
D$!<[
<Zu-H
fff.
AWAVAUATUSH
D$4p
D$8p
l$XL
T$PM
[]A\A]A^A_
D$LH
t$PPH
D$PPH
D$TPH
D$TPH
D$@PH
D$hPH
D$HP
|$XH
D$|L
L$`1
AXAYH
D$PH
D$dP
D$TPD
D$hH
T$XD
AUATI
[]A\A]
AWAVL
AUAT
D$8H
D$0H
\$(H
L$ H
D$(H
Proxy-au1
thorizat
ion: BasH
|$(H
[]A\A]A^A_
\$ I
\$ I
D$(I
ffff.
AWAVAUATUSH
D$ p
d$@L
[]A\A]A^A_
D$4H
t$8H
D$8PH
D$<PH
D$<PL
D$PPL
L$XH
T$PH
L$8M
D$8D
D$LP
D$@PD
L$XL
L$8H
T$P1
8080
AWAVI
AUATI
[]A\A]A^A_
AWAVAUATI
t$(1
D$0P
L$<L
D$(H
T$0H
[]A\A]A^A_
AWAVAUATI
t$(1
D$,P
d$ L
[]A\A]A^A_
D$(H
AWAVAUATUSH
t$PL
D$hI
D$hP
D$hP
t$PH
[]A\A]A^A_
AWAVAUATI
D$@H
D$,M
L$ E
L$,L
|$0H
T$$H
t$(L
T$(H
T$$H
T$(H
[]A\A]A^A_
d$(H
L$<E
D$$H
D$$H
l$$H
d$(H
ffff.
AUATUSH
t$@H
D$XM
D$XP
D$XPD
[]A\A]
AWAVA
AUATA
USE1
\$ A
T$4E
L$<E
D$8E
t$4A
|$,H
D$,H
|$0A
|$(E
t$`L
|$pL
|$tL
D$ 9
L$@E
D$"H
[]A\A]A^A_
t$$L
D$P1
|$PA
|$`H
T$(E
D$ ;D$d
D$";D$p
|$d9
D$p9
|$ H
|$"H
|$ H
|$"H
D$09
D$ 9
D$0H
|$09
|$09
D$ 9
T$0H
t$"9
D$T9
T$"9
|$ H
|$ H
D$0L
|$,E1
|$`A
D$T9
T$dI
L$ I
D$tA
|$tA
t$"9
|$09
D$ 9
T$ H
T$,H
T$,H
L$"I
T$"H
L$ I
T$TH
T$,H
T$,H
T$pH
T$dH
L$ I
AWAVAUATE
|$(H
L$(L
D$<D
[]A\A]A^A_
D$`H
D$pH
l$pH
\$HH
L$@H
D$ H
D$PH
D$`M
L$PH
L$HH
D$PH
T$HH
D$PM
L$8H
T$ H
t$0H
D$PH
|$(H
\$ H
T$ I
D$ I
T$ H
T$01
\$(1
T$(dH3
AUATA
D$H1
x;Hc
L$HdH3
X[]A\A]
AUATA
D$H1
xCHc
L$HdH3
X[]A\A]
AUATA
usin
[]A\A]
stdio fo
r writinf
readline
adinH
 on stdif
n for re1
 andf
AWAVAUATI
[]A\A]A^A_
|$PL
D$PH
D$XH
D$`H
D$(H
D$hH
D$0H
D$pH
D$8H
D$xH
D$@H
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSL
d$PE1
T$,A
D$$1
[]A\A]A^A_
t$0L
L$0H
t$(L
L$(H
t$8L
L$ E
T$8H
L$8H
T$0H
T$8H
ATUI
D$x1
$tOH
L$xdH3
[]A\
AVAUA
ATUH
[]A\A]A^
fff.
AWAVAUATA
[]A\A]A^A_
ffff.
AVAUATUA
D$x1
L$xdH3
[]A\A]A^
fff.
AVAUA
ATUI
D$x1
T$ H
T$8H
T$@H
T$(H
T$0H
T$HH
T$PH
|$HH
=dy"
\$PH
t$8H
T$@H
t$(H
|$0H
t$ H
L$xdH3
[]A\A]A^
\$`H
i|$`@B
D$XH
T$0H
d$0L
T$ H
T$ H
AWAVAUATUSH
D$$p
D$(p
D$HH
L$4L
L$@1
t$@j
D$@PH
D$DPH
D$DPL
t$xAVH
D$XPL
|$"m
T$$I
D$@Pj
D$DPD
t$4D
[]A\A]A^A_
D$"y
AWAVAUATA
D$,p
D$HH
L$4L
L$0H
t$8j
D$4PH
D$`H
L$LH
t$4D
[]A\A]A^A_
AUATUSH
D$x1
L$xdH3
[]A\A]
fff.
AUATUSH
D$x1
L$xdH3
[]A\A]
AWAVAUATUSH
[]A\A]A^A_
ATUSH
[]A\
AWAVH
AUATI
[]A\A]A^A_
AWAVAUATUSH
.XXXXXX
[]A\A]A^A_
[]A\
AWAVI
AUATA
D$0H
t$0L
d$PH
T$(H
L$`H
L$`1
L$`H
[]A\A]A^A_
/dev/net
/tun
t$ L
D$`H
L$dH
5^X"
ffffff.
eto~=@
ffffff.
AVAUATUS
[]A\A]A^
D$,0
D$0H
t$@H
=)U"
==U"
AYAZH
unknown 
    
time    H
=+S"
=2S"
H;8t
H;8t
=aR"
=YR"
ht4@
5PQ"
=`P"
H;8t
AVAUL
ATUL
[]A\A]A^
[]A\A]A^
[]A\A]A^
t"H9
AWAVI
AUATI
[]A\A]A^A_
[]A\A]A^A_
ffffff.
AUATI
[]A\A]
ATUH
XZw H
[]A\
fffff.
AWAV1
AUATI
xKLc
tpr~f
[]A\A]A^A_
E	PA
ffff.
AVAUI
ATU1
 []A\A]A^
ffffff.
AWAVI
AUAT
t$ H
<$dH
t;Hc}
,$E1
 t	f
[]A\A]A^A_
ffffff.
ATUH
[]A\
ATUH
D$(1
L$(dH3
0[]A\
ATUSH
[]A\
AVAUA
ATUI
[]A\A]A^
AWAVA
AUATA
\$ H
dH34%(
[]A\A]A^A_
ATUL
 []A\
ATUL
 []A\
AWAVA
AUATI
t:xOA
[]A\A]A^A_
ffffff.
StiH
[]A\
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
AWAVI
AUATI
D$HH
D$PL
L$8H
\$@H
D$ H
D$HdH
L$h1
D$(H
D$@H
T$HH
L$hdH3
x[]A\A]A^A_
D$HH
L$HH
L$@H
D$@H
D$HI
D$HH
L$HH
D$HH
L$HH
L$@H
\$@E1
L$@H
t$HH
D$@H
L$@H
t$HH
D$HH
L$HH
L$@H
\$@L
t$PL
L$8L
D$0H
L$@H
t$HH
D$HH
L$HH
L$@H
D$8H
D$HH
L$HH
D$HH
L$HH
L$@H
D$HI
\$@H
D$HH
t$PL
L$8L
D$0H
L$@H
t$HH
t$PL
L$8L
D$0H
L$@H
t$HH
D$HH
L$HH
L$@H
T$HH
AWAVAUATI
D$H1
D$@^
|$HdH3<%(
X[]A\A]A^A_
D$@x
AWAVI
AUATA
dH34%(
[]A\A]A^A_
fffff.
ATUA
ATUA
ATUI
[]A\
ffffff.
AWAV
AUATI
[]A\A]A^A_
tr~@
fffff.
AWAVA
AUATA
=(&"
%m*&
D$H1
t$@L
\$8D
T$4H
L$0I
t$(H
L$ H
t$(D
L$0D
T$4L
D$0PAT1
ARAQM
T$HdH3
X[]A\A]A^A_
D$0PAT1
ARAQM
AUATI
[]A\A]
fffff.
|$`L
[]A\
L$ H
D$ H
D$0H
AUATH
C(Hc
[]A\A]
AUATI
C(Hc
[]A\A]
[]A\
AWAV
AUATA
[]A\A]A^A_
AUATU
[]A\A]A^
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
fffff.
ATUH
[]A\
ffffff.
ATUH
[]A\
fff.
AVAUA
ATUI
]A\A]A^
]A\A]A^
]A\A]A^
]A\A]A^
fff.
[]A\
[]A\
AVAUATUH
[]A\A]A^
[]A\A]A^
[]A\
[]A\
fffff.
AUATH
[]A\A]
AUATH
[]A\A]
AUATH
[]A\A]
fffff.
AUATH
[]A\A]
fffff.
AUATH
[]A\A]
AUATH
[]A\A]
AUATH
[]A\A]
AUATU
[]A\A]A^
ffffff.
AUATH
[]A\A]
ffffff.
[]A\
[]A\
[]A\
ffffff.
[]A\
[]A\
fff.
[]A\
fffff.
[]A\
fffff.
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
fffff.
[]A\
Z[]A\
AWAVA
AUATI
T$,D
8[]A\A]A^A_
ffffff.
[]A\
AUATH
[]A\A]
[]A\
[]A\
[]A\
fff.
[]A\
[]A\
ATUH
tSRPH
[]A\
ffff.
[]A\
AWAVI
AUATA
AVP1
([]A\A]A^A_
fff.
AWAV
AUATA
[]A\A]A^A_
AUATI
[]A\A]
[]A\
[]A\
AWAVH
AUATI
[]A\A]A^A_
fffff.
AVAUH
ATUH
[]A\A]A^
AWAVH
AUATI
[]A\A]A^A_
AVAUI
ATUA
[]A\A]A^
vkAP
[]A\A]A^
AUATA
[]A\A]
ffffff.
AWAVA
AUATI
PAP1
[]A\A]A^A_
AWAVH
AUATA
4$XZ
[]A\A]A^A_
AUATA
[]A\A]
AWAVA
AUATI
AQAVM
[]A\A]A^A_
[]A\
fffff.
fff.
AUATI
(t0H
[]A\A]
[]A\
fff.
AVAUL
ATUH
ARAPI
AQP1
dH34%(
[]A\A]A^
ffffff.
[]A\
[]A\
AWAVH
AUAT
[]A\A]A^A_
AWAVA
AUATI
D$0H
\$,1
[]A\A]A^A_
 t&H
[]A\
[]A\
[]A\
AWAVI
AUATI
[]A\A]A^A_
fffff.
[]A\
[]A\
 t&H
[]A\
[]A\
AUATH
[]A\A]
AUATH
[]A\A]
fff.
AUATH
[]A\A]
[]A\
[]A\
[]A\
[]A\
[]A\H
fffff.
[]A\
[]A\
AUATI
[]A\A]
[]A\A]
AWAVA
AUATL
[]A\A]A^A_
exiting on signal %d
unlink("%s"): %s
released lock "%s"
Usage:
   options:
socat version %s on %s
features:
  #define WITH_STDIO %d
  #define WITH_FDNUM %d
  #define WITH_FILE %d
  #define WITH_CREAT %d
  #define WITH_GOPEN %d
  #define WITH_TERMIOS %d
  #define WITH_PIPE %d
  #define WITH_UNIX %d
  #define WITH_IP4 %d
  #define WITH_IP6 %d
  #define WITH_RAWIP %d
  #define WITH_INTERFACE %d
  #define WITH_TCP %d
  #define WITH_UDP %d
  #define WITH_SCTP %d
  #define WITH_LISTEN %d
  #define WITH_SOCKS4 %d
  #define WITH_SOCKS4A %d
  #define WITH_PROXY %d
  #define WITH_SYSTEM %d
  #define WITH_EXEC %d
  #define WITH_READLINE %d
  #define WITH_TUN %d
  #define WITH_PTY %d
  #define WITH_OPENSSL %d
  #undef WITH_FIPS
  #undef WITH_LIBWRAP
  #define WITH_SYCLS %d
  #define WITH_FILAN %d
  #define WITH_RETRY %d
%Y/%m/%d %H:%M:%S
.%06ld 
escape char found in input
 %02x
switching to syslog
inactivity timeout triggered
poll(): %s
poll(...[%d]: invalid request
socket 1 (fd %d) is at EOF
socket 2 (fd %d) is at EOF
signal(SIGPIPE, SIG_IGN): %s
SOCAT_MAIN_WAIT
socat version %s on %s
VERSION
argv[%d]: "%s"
could not obtain lock "%s"
exiting with status %d
socat [options] <bi-address> <bi-address>
      -V     print version and feature information to stdout, and exit
      -h|-?  print a help text describing command line options and addresses
      -hh    like -h, plus a list of all common address option names
      -hhh   like -hh, plus a list of all available address option names
      -d     increase verbosity (use up to 4 times; 2 are recommended)
      -D     analyze file descriptors before loop
      -ly[facility]  log to syslog, using facility (default is daemon)
      -lf<logfile>   log to file
      -ls            log to stderr (default if no other log)
      -lm[facility]  mixed log mode (stderr during initialization, then syslog)
      -lp<progname>  set the program name used for logging
      -lu            use microseconds for logging timestamps
      -lh            add hostname to log messages
      -v     verbose data traffic, text
      -x     verbose data traffic, hexadecimal
      -b<size_t>     set data buffer size (8192)
      -s     sloppy (continue on error)
      -t<timeout>    wait seconds before closing second channel
      -T<timeout>    total inactivity timeout in seconds
      -u     unidirectional mode (left to right)
      -U     unidirectional mode (right to left)
      -g     do not check option groups
      -L <lockfile>  try to obtain lock, or fail
      -W <lockfile>  try to obtain lock, or wait
      -4     prefer IPv4 if version is not explicitly specified
      -6     prefer IPv6 if version is not explicitly specified
   running on %s version %s, release %s, machine %s
  #define WITH_ABSTRACT_UNIXSOCKET %d
  #define WITH_GENERICSOCKET %d
  #define WITH_MSGLEVEL %d /*%s*/
terminated child did not leave data for us
xiopoll({%d,%0o}, 1, {%ld.%06ld}): %s
%s%s length=%lu from=%lu to=%lu
transferred %lu bytes from %d to %d
starting data transfer loop with FDs [%d,%d] and [%d,%d]
data loop: sock1->eof=%d, sock2->eof=%d, closing=%d, wasaction=%d, total_to={%ld.%06ld}
poll timed out (no data within %ld.%06ld seconds)
socket 1 to socket 2 is in error
socket 2 to socket 1 is in error
socket 1 (fd %d) is at EOF, ignoring
socket 2 (fd %d) is at EOF, ignoring
xiopoll({%d,%0o}{%d,%0o}{%d,%0o}{%d,%0o}, 4, {%ld.%06ld}): %s
child %d has already died (diedunknown1)
child %d has already died (diedunknown2)
child %d has already died (diedunknown3)
child %d has already died (diedunknown4)
resolved and opened all sock addresses
option -l%c requires an argument; use option "-h" for help
unknown log option "%s"; use option "-h" for help
option -b requires an argument; use option "-h" for help
option -t requires an argument; use option "-h" for help
option -T requires an argument; use option "-h" for help
only one -L and -W option allowed
option -L requires an argument; use option "-h" for help
option -W requires an argument; use option "-h" for help
unknown option "%s"; use option "-h" for help
exactly 2 addresses required (there are %d); use option "-h" for help
-U and -u must not be combined
running on %s version %s, release %s, machine %s
debug
info
notice
warn
error
fatal
This product includes software written by Tim Hudson (tjh@cryptsoft.com)
This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit. (http://www.openssl.org/)
socat by Gerhard Rieger - see www.dest-unreach.org
Jan 24 2015 02:38:36
1.7.2.4
.Axioinitialize.c
SOCAT_DEFAULT_LISTEN_IP
SOCAT_PREFERRED_RESOLVE_IP
atexit(xioexit) failed
PPID
fork(): %s
just born: child process %d
SOCAT_FORK_WAIT
forked off child process %d
3 << opt_crdly.arg3 == 0003000
3 << opt_tabdly.arg3 == 0014000
3 << opt_csize.arg3 == 0000060
xioinitialize
      %s	groups=
	phase=%s
	type=%s
   bi-address:
      <single-address>
   single-address:
   address-head:
      %s
   opts:
      <opt>{,<opts>}:
   opt:
      %s is an alias for %s
INIT
EARLY
PREOPEN
PASTOPEN
PRESOCKET
PASTSOCKET
PREBIGEN
PASTBIGEN
PREBIND
PASTBIND
PRELISTEN
PASTLISTEN
PRECONNECT
PASTCONNECT
PREACCEPT
PASTACCEPT
CONNECTED
PREFORK
PASTFORK
LATE
LATE2
PREEXEC
SPECIFIC
FIFO
READLINE
undef
NAMED
CHILD
RETRY
TERMIOS
RANGE
PARENT
UNIX
INTERFACE
SOCKS4
OPENSSL
PROCESS
APPL
SCTP
CONST
BOOL
BYTE
PTRDIFF
SIZE_T
SOCKADDR
UNSIGNED-INT
UNSIGNED-LONG
UNSIGNED-SHORT
MODE_T
GID_T
UID_T
INT[3]
STRUCT-TIMEVAL
STRUCT-TIMESPEC
DOUBLE
STRING-NULL
LONG-LONG
OFF_T
OFF64_T
INT:INTP
INT:INT:INT
INT:INT:BIN
INT:INT:STRING
IP4NAME
STRUCT-LINGER
STRUCT-IP_MREQN
      pipe[,<opts>]	groups=FD,FIFO
      echo is an alias for pipe
      fifo is an alias for pipe
      <single-address>!!<single-address>
      <address-head>[,<opts>]
         <num> is a short form for fd:<num>
         <filename> is a short form for gopen:<filename>
         %s is an alias name for %s
strdup(%lu): out of memory
xiosetopt('%c', "%s"): port separator must be single character
xiosetopt('%c', "%s"): unknown option
xioinqopt('%c', "%s", %lu): unknown option
strdup("%s"): out of memory
strdup("FD"): out of memory
unknown device/address "%s"
invalid mode for address "%s"
abstract
abstract-client
abstract-connect
abstract-listen
abstract-recv
abstract-recvfrom
abstract-sendto
fifo
gopen
inet
inet-l
inet-listen
inet4
inet4-l
inet4-listen
inet6
inet6-l
inet6-listen
interface
ip-datagram
ip-dgram
ip-recv
ip-recvfrom
ip-send
ip-sendto
ip4-datagram
ip4-dgram
ip4-recv
ip4-recvfrom
ip4-send
ip4-sendto
ip6-datagram
ip6-dgram
ip6-recv
ip6-recvfrom
ip6-send
ip6-sendto
openssl
openssl-connect
openssl-listen
proxy
proxy-connect
readline
sctp
sctp-connect
sctp-l
sctp-listen
sctp4
sctp4-connect
sctp4-l
sctp4-listen
sctp6
sctp6-connect
sctp6-l
sctp6-listen
socket-connect
socket-datagram
socket-listen
socket-recv
socket-recvfrom
socket-sendto
socks
socks4
socks4a
ssl-l
stderr
stdin
stdio
stdout
system
tcp-connect
tcp-l
tcp-listen
tcp4
tcp4-connect
tcp4-l
tcp4-listen
tcp6
tcp6-connect
tcp6-l
tcp6-listen
udp-connect
udp-datagram
udp-dgram
udp-l
udp-listen
udp-recv
udp-recvfrom
udp-send
udp-sendto
udp4
udp4-connect
udp4-datagram
udp4-dgram
udp4-l
udp4-listen
udp4-recv
udp4-recvfrom
udp4-send
udp4-sendto
udp6
udp6-connect
udp6-datagram
udp6-dgram
udp6-l
udp6-listen
udp6-recv
udp6-recvfrom
udp6-send
udp6-sendto
unix
unix-client
unix-connect
unix-l
unix-listen
unix-recv
unix-recvfrom
unix-send
unix-sendto
keyword too long, in address "%s%s"
interpreting address "%s" as file descriptor
interpreting address "%s" as file name
strdup("GOPEN"): out of memory
syntax error in address "%s%s"
unidirectional open of dual address
ignoring option "%s"
setting option "%s"
memdup(, %lu): out of memory
setting option "%s" to %d
setting option "%s" to %u
setting option "%s" to %lu
setting option "%s" to %Lu
getpwnam("%s"): no such user
getgrnam("%s"): no such group
setting option "%s" to "%s"
strtod("%s", NULL): %s
setting option "%s" to %d:%d
setting option "%s" to %d:...
trailing data in option "%s"
option "%s": value required
setting option "%s" to NULL
option "%s": values required
_groupbits(%d) -> %d
error resolving bind option
lseek(%d, %ld, %d): %s
lseek64(%d, %ld, %d): %s
fcntl(%d, %d): %s
fcntl(%d, %d, %d): %s
ioctl(%d, 0x%x, %p): %s
ioctl(%d, 0x%x, NULL): %s
ioctl(%d, 0x%x, 0x%x): %s
flock(%d, %d): %s
fchown(%d, %u, -1): %s
fchown(%d, -1, %u): %s
fchmod(%d, %u): %s
ftruncate(%d, %ld): %s
ftruncate64(%d, %ld): %s
setuid(%u): %s
setgid(%u): %s
getpwuid(%u): no such user
initgroups(%s, %u): %s
USER
LOGNAME
HOME
SHELL
chroot("%s"): %s
chdir("/"): %s
setsid(): %s
setpgid(%d, %d): %s
setpgid(0, %d): %s
/dev/tty
close(%d): %s
tcsetpgrp(%d): %s
option %s: invalid value %u
tcgetattr(%d, %p): %s
fchown(%d, %u, %u): %s
sizeof(uint32_t)=%lu
cannot resolve interface "%s"
interface "%s" not found
attachfilter
b1000000
b110
b115200
b1152000
b1200
b134
b150
b1500000
b1800
b19200
b200
b2000000
b230400
b2400
b2500000
b300
b3000000
b3500000
b38400
b4000000
b460800
b4800
b500000
b57600
b576000
b600
b921600
b9600
backlog
brkint
bsdly
cert
chroot
chroot-early
cipher
ciphers
clocal
cloexec
connect-timeout
cool-write
coolwrite
crdly
cread
crlf
crterase
crtkill
crtscts
csize
cstopb
ctlecho
dash
delete
detachfilter
echoctl
echoe
echok
echoke
echonl
echoprt
end-close
escape
f-setlk
f-setlk-rd
f-setlk-wr
f-setlkw
f-setlkw-rd
f-setlkw-wr
fdin
fdout
ffdly
fiosetown
flock
flock-ex
flock-ex-nb
flock-nb
flock-sh
flock-sh-nb
flusho
forever
ftruncate
ftruncate32
ftruncate64
gid-e
gid-l
group-early
group-late
history
history-file
hupcl
icanon
icrnl
iexten
iff-allmulti
iff-automedia
iff-broadcast
iff-debug
iff-loopback
iff-master
iff-multicast
iff-no-pi
iff-noarp
iff-notrailers
iff-pointopoint
iff-portsel
iff-promisc
iff-running
iff-slave
iff-up
ignbrk
igncr
ignorecr
ignoreeof
ignoreof
ignpar
imaxbel
inlcr
inpck
ioctl
ioctl-bin
ioctl-int
ioctl-intp
ioctl-string
ioctl-void
ip-add-membership
ip-freebind
ip-hdrincl
ip-membership
ip-mtu
ip-mtu-discover
ip-multicast-if
ip-multicast-loop
ip-multicast-ttl
ip-options
ip-pktinfo
ip-pktoptions
ip-recverr
ip-recvopts
ip-recvtos
ip-recvttl
ip-retopts
ip-router-alert
ip-tos
ip-ttl
ipfreebind
iphdrincl
ipmtu
ipmtudiscover
ipmulticastloop
ipmulticastttl
ipoptions
ippktinfo
ippktoptions
iprecverr
iprecvopts
iprecvtos
iprecvttl
ipretopts
iprouteralert
iptos
ipttl
ipv6-add-membership
ipv6-authhdr
ipv6-dstopts
ipv6-hoplimit
ipv6-hopopts
ipv6-join-group
ipv6-pktinfo
ipv6-recvdstopts
ipv6-recverr
ipv6-recvhoplimit
ipv6-recvhopopts
ipv6-recvpktinfo
ipv6-recvrthdr
ipv6-recvtclass
ipv6-rthdr
ipv6-tclass
ipv6-unicast-hops
ipv6-v6only
ipv6only
isig
ispeed
istrip
iuclc
ixany
ixoff
ixon
lockfile
lockw
login
lowport
lseek
lseek32
lseek32-cur
lseek32-end
lseek32-set
lseek64
lseek64-cur
lseek64-end
lseek64-set
max-children
maxchildren
mode
mss-late
nldly
nocheck
noecho
noflsh
nofork
noprompt
null-eof
o-append
o-async
o-creat
o-create
o-direct
o-directory
o-dsync
o-excl
o-largefile
o-ndelay
o-noatime
o-noctty
o-nofollow
o-nonblock
o-rdonly
o-rdwr
o-rsync
o-sync
o-trunc
o-wronly
o_create
o_direct
o_directory
o_dsync
o_excl
o_largefile
o_ndelay
o_noctty
o_nofollow
o_rdonly
o_rdwr
o_rsync
o_sync
o_wronly
ocrnl
ofdel
ofill
olcuc
onlcr
onlret
onocr
openpty
openssl-cafile
openssl-capath
openssl-certificate
openssl-cipherlist
openssl-compress
openssl-dhparam
openssl-egd
openssl-key
openssl-method
openssl-pseudo
openssl-verify
opost
ospeed
owner
parenb
parmrk
parodd
pendin
perm
perm-early
perm-late
pipes
pktopts
protocol
protocol-family
proxy-auth
proxy-authorization
proxy-resolve
proxyauth
proxyport
prterase
pty-interval
pty-intervall
pty-wait-slave
range
readbytes
remove
res-aaonly
res-debug
res-defnames
res-dnsrch
res-igntc
res-primary
res-recurse
res-stayopen
res-usevc
resolv
retry
rprnt
sane
security-encryption-network
security-encryption-transport
securityauthentication
securityencryptionnetwork
securityencryptiontransport
seek-cur
seek-end
seek-set
setgid
setgid-early
setpgid
setsid
setsockopt-bin
setsockopt-int
setsockopt-string
setuid
setuid-early
shut-close
shut-down
shut-none
shut-null
sighup
sigint
sigquit
siocspgrp
so-acceptconn
so-attach-filter
so-bindtodevice
so-broadcast
so-bsdcompat
so-debug
so-detach-filter
so-dontroute
so-error
so-keepalive
so-linger
so-no-check
so-oobinline
so-passcred
so-peercred
so-priority
so-prototype
so-rcvbuf
so-rcvbuf-late
so-rcvlowat
so-rcvtimeo
so-reuseaddr
so-reuseport
so-security-authentication
so-sndbuf
so-sndbuf-late
so-sndlowat
so-sndtimeo
so-timestamp
so-type
socksport
socksuser
socktype
sourceport
su-d
su-e
substuser
substuser-delayed
substuser-early
swtch
symbolic-link
tab0
tab1
tab2
tab3
tabdly
tandem
tcp-cork
tcp-defer-accept
tcp-info
tcp-keepcnt
tcp-keepidle
tcp-keepintvl
tcp-linger2
tcp-maxseg
tcp-maxseg-late
tcp-md5sig
tcp-nodelay
tcp-quickack
tcp-syncnt
tcp-window-clamp
tiocsctty
tostop
tun-device
tun-name
tun-no-pi
tun-type
uid-e
uid-l
umask
unix-tightsocklen
unlink
unlink-close
unlink-early
unlink-late
user-late
vdiscard
veof
veol
veol2
verase
vintr
vkill
vlnext
vmin
vquit
vreprint
vstart
vstop
vsusp
vswtc
vtdly
vtime
vwerase
waitlock
waitslave
xcase
xtabs
applyopt_offset(): type %d not implemented
parseopts(): unknown option "%s"
parseopts(): option "%s" not supported with this address type
parseopts()  groups=%08x, ent->group=%08x
no value permitted for option "%s"
parseopts(): problem with "%s" data
parseopts(%s): byte value exceeds limit (%lu vs. %u), using max
error in option "%s": "0" or "1" required
parseopts(%s): unsigned int value exceeds limit (%lu vs. %u), using max
parseopts(%s): unsigned short value exceeds limit (%lu vs. %u), using max
option "%s": 2 arguments required
setting option "%s" to %d:"%s"
option "%s": 3 arguments required
setting option "%s" to %d:%d:%d
setting option "%s" to %d:%d:...
setting option "%s" to %d:%d:"%s"
syntax in option %s: missing ':'
setting option "%s" to {"%s","%s","%s"}
setting option "%s" to {"%s","%s"}
parseopts(): internal error on option "%s": unimplemented type %d
setting option "%s" to {%d,%d}
showleft(): option "%s" not inquired
groupbits(%d): fstat(%d, %p): %s
cannot convert type %d of option %s to int
port specification not allowed in this bind option
bind: unknown address family %d
ioctl() data type %d not implemented
setsockopt(%d, %d, %d, %p, %lu): %s
setsockopt(%d, %d, %d, {%d}, %lu): %s
setsockopt(%d, %d, %d, {%u}, %lu): %s
setsockopt(%d, %d, %d, {%ld}, %lu): %s
setsockopt(%d, %d, %d, "%s", %lu): %s
setsockopt(%d, %d, %d, {%ld,%ld}, %lu): %s
setsockopt(%d, %d, %d, {%d,%d}): %s
setsockopt(%d, %d, %d, {0x%x}, %lu): %s
applyopts(): type %d not implemented
getsockopt(%d, %d, %d, %p, {%u}): %s
setsockopt(%d, %d, %d, %p, %d): %s
internal: option "%s": unimplemented type %d
setsockopt(%d, %d, %d, {...}, %lu): %s
setsockopt() data type %d not implemented
fcntl(%d, %d, {type=F_WRLCK,whence=SEEK_SET,start=0,len=LONG_MAX,pid=0}): %s
setenv("USER", "%s", 1): insufficient space
setenv("LOGNAME", "%s", 1): insufficient space
setenv("HOME", "%s", 1): insufficient space
setenv("SHELL", "%s", 1): insufficient space
open("/dev/tty", O_NOCTTY, 0640): %s
ioctl(%d, TIOCNOTTY, NULL): %s
ioctl(%d, TIOCSCTTY, NULL): %s
applyopts(): option "%s" not implemented
tcsetattr(%d, TCSADRAIN, %p): %s
TERMIOS option not handled - internal error?
applyopts(): option "%s" does not apply
fcntl(%d, F_SETFD, FD_CLOEXEC): %s
only one use of options lockfile and waitlock allowed
applyopts_single: masksize %lu not implemented
setsockopt(%d, %d, %d, {0x%08x,0x%08x,%d}, %lu): %s
setsockopt(%d, %d, %d, {...,0x%08x}, %lu): %s
%d option(s) could not be used
so-security-encryption-network
so-security-encryption-transport
socatsignalpass(%d)
kill(%d, %d): %s
socatsignalpass() ->
sigaction(%d, %p, NULL): %s
too many sub processes registered for signal %d
sub process registered for unsupported signal
exec'd process %d on socket %d terminated
waitpid(-1, {}, WNOHANG): no child has exited
waitpid(-1, {%d}, WNOHANG): %s
waitpid(): child %d exited with status %d
waitpid(): child %d exited on signal %d
waitpid(): child %d stopped on signal %d
waitpid(): cannot determine status of child %d
childdied(%d): cannot identify child %d
sigaction(SIGCHLD, %p, NULL): %s
childdied(signum=%d)
childdied() finished
waitpid(-1, {}, WNOHANG): %s
saving pid in diedunknown%lu
xioread(): invalid xiofile descriptor %p
xioread(): invalid xiofile sub descriptor %p[0]
read(%d, %p, %lu): %s (probably PTY closed)
received packet with %lu bytes from %s
recvfrom(): wrong peer protocol, ignoring packet
recvfrom(): wrong peer address, ignoring packet
xioread(%d, ...)/IP4: short packet
internal: undefined read operation
recvfrom(%d, %p, %lu, 0, %s, {%u}): %s
recvfrom(%d, %p, %lu, 0, %s, %u): %s
xiopending(): invalid xiofile descriptor %p
xiopending(): invalid xiofile sub descriptor %p[0]
read(%d, %p, %lu): %s
permitting packet from %s
xiowrite(): invalid xiofile descriptor %p
xiowrite(): invalid xiofile sub descriptor %p[1]
sendto(%d, %p, %lu, 0, %s, %u) only wrote %lu of %lu bytes
xiowrite(): bad data type specification %d
sendto(%d, %p, %lu, 0, %s, %u): %s
write(%d, %p, %lu): %s
local address: %s
SIGALRM while waiting for w/o child process to die, killing it now
xioshutdown(): invalid file descriptor
shutdown(%d, %d): %s
waitpid(%d, %p, 0): %s
xioclose1(): invalid file descriptor
cannot restore terminal settings on fd %d: %s
xioclose(): invalid file descriptor
kill(%d, SIGTERM): %s
setgroups(%d, %p): %s
cannot query current terminal settings on fd %d: %s
%s:%s: wrong number of parameters (%d instead of 1)
using file descriptor %d for %s
error in FD number "%s"
:<num>
%s: wrong number of parameters (%d instead of 0)
reading from and writing to stdio
stdin
stdout
stderr
stdin
stdout
using %s for %s
pipe(%p): %s
unlink(%s): %s
mkfifo(%s, %d): %s
opening %s "%s" for %s
:<filename>
writing to and reading from unnamed pipe
%s: wrong number of parameters (%d instead of 1)
xioopen_fifo("%s"): does not exist, creating fifo
created named pipe "%s" for %s
xioopen_fifo("%s"): already exist, opening it
"%s" is a socket, connecting to it
"%s" is not a socket, open()'ing it
getsockname(%d, %p, {%d}): %s
successfully connected via %s
creat("%s", 0%03o): %s
creating regular file "%s" for %s
chown("%s", -1, %u): %s
chown("%s", %u, -1): %s
chmod("%s", 0%03o): %s
<named>
stat("%s"): %s
open("%s", 0%lo, 0%03o): %s
applyopts_named(): option "%s" not implemented
"%s" already exists; removing it
xiosigaction_hasread(%d, {%d,%d,%d,%d}, )
xiosigaction_hasread() finished
%s: wrong number of parameters (%d instead of 3)
ancillary message: len=%lu, level=%d, type=%d, data=%s
refusing connection from %s due to range option
permitting connection from %s due to range option
refusing connection from %s due to wrong sourceport
permitting connection from %s due to sourceport option
refusing connection from %s due to lowport option
permitting connection from %s due to lowport option
syntax error in range "%s": use <addr>:<mask>
network address is %lu bytes long, mask is %lu bytes long
range option not supported with address family %d
xiopoll({%d,POLLOUT|POLLERR},,{%ld.%06ld): %s
successfully connected from local address %s
successfully prepared local socket %s
%s: wrong number of parameters (%d instead of 4)
starting recvfrom loop, switching to syslog
sigaction(SIGUSR1, {&xiosigaction_subaddr_ok}, NULL): %s
sigaction(SIGCHLD, {&xiosigaction_subaddr_ok}, NULL): %s
socketpair(%d, %d, %d, %p): %s
:<domain>:<type>:<protocol>:<local-address>
:<domain>:<type>:<protocol>:<remote-address>
:<domain>:<protocol>:<local-address>
:<domain>:<protocol>:<remote-address>
xiosigaction_hasread() ->
ipv4
ipv6
unknown protocol family "%s"
garbage in parameter: "%s"
data too long: "%s"
syntax error in "%s"
recvmsg(): %s
SOCKET.%u
, %06ld usecs
LEVEL%u
type%u
ancillary message: %s: %s=%s
socket(%d, %d, %d): %s
gettimeofday(%p, {0,0}): %s
bind(%d, {%s}, %ld): %s
no low port available
connect(%d, %s, %ld): %s
connecting to %s: %s
opening connection to %s
bind(%d, {%s}, %u): %s
option fork not allowed here
starting recvfrom loop
receiving on %s
receiving IP protocol %u
poll({%d,,},,-1): %s
receiving packet from %s
PEER
continue listening
unknown interface "%s"
:<interface>
listen(%d, %d): %s
starting accept loop
listening on %s
accept(%d, %p, {%u}): %s
getpeername(%d, %p, {%u}): %s
shutdown(%d, 2): %s
permitting connection from %s
still listening
SOCK
getsockname(%d, %p, {%u}): %s
option max-children not allowed without option fork
starting accept loop, switching to syslog
accepting connection from %s on %s
maxchildren are active, waiting
socket address %lu characters long, truncating to %lu
unix socket address %lu characters long, truncating to %lu
"%s" exists
res_init()
res_init() -> %d
::ffff:%s
IP_OPTIONS
IP_TOS
IP_TTL
type_%u
IP_PKTINFO
%s%c%s%c%s
dstaddr
locaddr
IP_IF
IP_DSTADDR
IP_LOCADDR
changed _res.options from 0x%lx to 0x%lx
xiogetaddrinfo(, "%s", ...): extra trailing data "%s"
getaddrinfo("%s", "%s", {%d,%d,%d,%d}, {}): %s
address resolved to unknown protocol family %d
not a valid netmask in "%s"
netmask "%s" is too large
gethostbyname("%s"): %s
client address is 0x%08x
masked address is 0x%08x
xioparsenetwork_ip4("%s",,): missing netmask delimiter
invalid client address 0.0.0.0
permitted client subnet: %s:%s
client address %s is not permitted
missing brackets for IPv6 range definition "%s"
xioparsenetwork_ip6("%s",,): missing mask bits delimiter '/'
permitted client subnet: [%04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x]:[%04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x]
masked address is [%04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x]
[%04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x]
sockaddr_inet6_info(): buffer too short
client address is %s
IPV6_PKTINFO
IPV6_DSTADDR
IPV6_IF
IPV6_HOPLIMIT
IPV6_RTHDR
IPV6_AUTHHDR
IPV6_DSTOPTS
IPV6_HOPOPTS
IPV6_TCLASS
IPV6.%u
data
unsupported protocol family
starting connect loop
%s: wrong number of parameters (%d instead of 2)
starting connect loop, switching to syslog
xioopen_rawip_sendto("%s:%s",,): protocol number exceeds 255 (%u)
xioopen_rawip_sendto("%s:%s",,): trailing garbage in protocol specification
xioopen_rawip_recvfrom("%s",,): protocol number exceeds 255 (%u)
xioopen_rawip_recvfrom("%s",,): trailing garbage in protocol specification
xioopen_rawip_recv("%s",,): protocol number exceeds 255 (%u)
xioopen_rawip_recv("%s",,): trailing garbage in protocol specification
:<host>:<protocol>
anonymous
"socks/tcp" resolves to %u
1080
 DESTNAME=
waiting for socks reply
received all %ld bytes
socks: ident failed
socks: undefined status %u
%s: 3 parameters required
:<socks-server>:<host>:<port>
cannot resolve service "socks/tcp", using %s
sending socks4%s request VN=%d DC=%d DSTPORT=%d DSTIP=%d.%d.%d.%d USERID=%s%s%s
sending socks4(a) request data %s
read(): EOF during read of socks reply, peer might not be a socks4 server
received socks4 reply data (offset %ld): %s
received %d bytes, waiting for %lu more bytes
received socks reply VN=%u CD=%u DSTPORT=%u DSTIP=%u.%u.%u.%u
socks: reply code version is not 0 (%d)
successfully connected via socks4
socks: connect request rejected or failed
socks: ident refused by client
opening connection to %s:%u via socks4 server %s:%s as user "%s"
%u.%u.%u.%u
CONNECT %s:%u HTTP/1.0
sending "%s"
sending "%s\r\n"
sending "\r\n"
write(%d, "\r\n", 2): %s
 HTTP
HTTP/1.0 
HTTP/1.1 
proxy: invalid answer "%s"
:<proxy-server>:<host>:<port>
_xioopen_proxy_connect(): PROXY CONNECT buffer too small
proxy_connect: connection closed by proxy
proxy_connect: received answer "%s"
proxy_connect: received header "%s"
proxy answer exceeds %d bytes, aborting
opening connection to %s:%u via proxy %s:%s
successfully connected to %s:%u via proxy %s:%s
xioopen_ipdgram_listen(): unknown address family %d
setsockopt(%d, %d, %d, {%d}, %ld): %s
permitting UDP connection from %s
accepting UDP connection from %s
recvfrom(%d, %p, 1, MSG_PEEK, {%s}, {%u}): %s
listening on UDP %s
connect(%d, {%s}, %u): %s
:<remote-address>:<port>
_xioopen_foxec(): options "pipes" and "pty" must not be specified together; ignoring "pipes"
cannot fork off child process here
forking off child, using %s for %s
option nofork is not allowed here
open("/dev/ptmx", O_RDWR|O_NOCTTY, 0620): %s
open("%s", O_RDWR|O_NOCTTY, 0620): %s
openpty(%p, %p, %p, NULL, NULL): %s
setenv("PATH", "%s", 1): insufficient space
fcntl(%d, F_SETFD, 0): %s
dup2(%d, %d): %s
dup2(%d, %d): %s)
/dev/ptmx
grantpt(%d): %s
unlockpt(%d): %s
ptsname(%d): %s
ttyname(%d): %s
opened pseudo terminal %s
signal(SIGCHLD, SIG_DFL): %s
dup(%d): %s
PATH
socket
pipes
"%s:%s": wrong number of parameters (%d instead of 1)
internal: miscalculated string lengths
execvp("%s", "%s", "%s", "%s", ...): %s
child: args = "%s"
execvp'ing "%s"
execvp("%s", "%s"): %s
execvp("%s", "%s", "%s"): %s
:<command-line>
system("%s") returned with status %d
executing shell command "%s"
system(): %s
:<shell-command>
%s: 0 parameters required
write(%d, "\r", 1): %s
address with data processing not allowed here
cannot query current terminal settings on fd %d. %s
regcomp(%p, "%s", REG_EXTENDED|REG_NOSUB): %s
write() only wrote %lu of 1 byte
poll({%d, 0x%04hu,}, 1, 0): %s
PTY is %s
symlink("%s", "%s"): %s
chown("%s", %d, %d): %s
chmod("%s", %03o): %s
SSL connection using %s
SSL connection expansion "%s"
ERR_get_error(): %lx
%s(): %s
peer certificate:
	subject: %s
	issuer: %s
accepted peer certificate
no check of certificate
no peer certificate
SSL_new() failed
SSL_new(): %s
SSL_set_fd() failed
SSL_set_fd(, %d): %s
SSL_connect(): %s
I/O error
SSL_connect
unknown error
SSL_accept(): %s
SSL_accept
SSLv2
SSL2
SSLv3
SSL3
SSLv23
SSL23
TLSv1
TLS1
RAND_seed(0x{%lx}, %lu)
SSL_CTX_new()
SSL_CTX_new(): %s
DH_new(): %s
DH_new() failed
BN_bin2bn(): %s
BN_bin2bn() failed
auto
Disabling OpenSSL compression
SSL_CTX_load_verify_locations
SSL_CTX_use_PrivateKey_file
BIO_new_file("%s", "r"): %s
%s: 2 parameters required
%s: 1 parameter required
connection closed by peer
SSL_read(): %s
SSL_read(): %s / %s / %s / %s
SSL_write(): %s
unable to get certificate CRL
certificate signature failure
CRL signature failure
certificate is not yet valid
certificate has expired
CRL is not yet valid
CRL has expired
self signed certificate
certificate chain too long
certificate revoked
invalid CA certificate
certificate not trusted
certificate rejected
subject issuer mismatch
SSL connection compression "%s"
too few entropy; use options "egd" or "pseudo"
rejected peer certificate with error %ld
no peer certificate and no check
connection closed (wrong version number?)
nonblocking operation did not complete
SSL_connect(): socket closed by peer
SSL_connect(): %s / %s / %s / %s
SSL_accept(): socket closed by peer
SSL_accept(): %s / %s / %s / %s
OpenSSL method "%s" not provided by library
openssl-method="%s": unknown method
SSL_CTX_set_tmp_dh(%p, %p): %s
SSL_CTX_set_tmp_dh(%p, %p) failed
OpenSSL built without compression support
Using default OpenSSL compression
openssl-compress="%s": unknown compression method
SSL_CTX_use_certificate_file(%p, "%s", SSL_FILETYPE_PEM) failed
SSL_CTX_use_certificate_file(): %s
PEM_read_bio_DHparams(%p, NULL, NULL, NULL): error
SSL_CTX_set_tmp_dh(%p, %p): error
SSL_set_cipher_list(, "%s") failed
SSL_set_cipher_list(, "%s"): %s
no certificate given; consider option "cert"
SSL_write(): %s / %s / %s / %s
unable to get issuer certificate
unable to decrypt certificate's signature
unable to decrypt CRL's signature
unable to decode issuer public key
format error in certificate's notBefore field
format error in certificate's notAfter field
format error in CRL's lastUpdate field
format error in CRL's nextUpdate field
self signed certificate in certificate chain
unable to get local issuer certificate
unable to verify the first certificate
path length constraint exceeded
unsupported certificate purpose
authority and subject key identifier mismatch
authority and issuer serial number mismatch
key usage does not include certificate signing
application verification failure
Lstat("%s", %p): %s
mkstemp("%s"): %s
waiting for lock "%s"
obtained lock "%s"
unknown tun-type "%s"
"%s": system set flags: 0x%hx
"%s": xio merged flags: 0x%hx
"%s": resulting flags: 0x%hx
[:<ip-addr>/<bits>]
%s: wrong number of parameters (%d instead of 0 or 1)
creating tunnel network interface
ioctl(%d, TUNSETIFF, {"%s"}: %s
socket(PF_INET, SOCK_DGRAM, 0): %s
ioctl(%d, SIOCSIFADDR, {"%s", "%s"}: %s
ioctl(%d, SIOCSIFNETMASK, {"0x%08u", "%s"}, %s
ioctl(%d, SIOCGIFFLAGS, {"%s"}: %s
ioctl(%d, SIOCSIFFLAGS, {"%s", %hd}: %s
%Y/%m/%d %H:%M:%S 
%s[%d] 
N exit(1)
DINWEF
unknown syslog facility "%s"
cannot open log file "%s": %s
unknown diagnostic option %c
HOSTNAME
authpriv
cron
daemon
kern
local0
local1
local2
local3
local4
local5
local6
local7
mail
news
uucp
cannot read time:   %s[%d] E %s
unterminated string
unterminated character
error in character
syntax error in "%s"
continuation line not implemented
error in character termination
odd number of hexadecimal digits
01<anon>
%u.%u.%u.%u:%hu
AF=%d 
setenv("%s", "%s", 1): %s
write(%d, %p, %lu): only wrote %lu bytes, trying to continue 
socket_init(): unknown address family %d
inet4addr_info(): buffer too short
sockaddr_inet4_info(): buffer too short
[%04x:%04x:%04x:%04x:%04x:%04x:%04x:%04x]:%hu
sockaddr_info(): buffer too short (%lu)
0x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x
sockaddr_info(): buffer too short
parseport("%s", %d): extra trailing data "%s"
cannot resolve service "%s/%d"
socket(PF_INET, SOCK_DGRAM, IPPROTO_IP): %s
ioctl(%d, SIOCGIFINDEX, {"%s"}): %s
ioctl(%d, SIOCGIFINDEX, {"%s"}) -> { %d }
	%ld
isatty(%d): %s
	NULL
 cc[%d]=%d
 cc[%d]=%s
getsockopt(,,, {}, %d)
%s=""	
getsockopt(,,, {%d}, %d)
%s=%d	
%08x 
getsockopt(,,, {%s}, %d)
%s={%s}	
getsockopt(,,, {%d,%d}, %d)
%s={%d,%d}	
getsockname(%d): %s
getpeername(%d): %s
 <-> 
fstat(%d, %p): %s
chrdev
blkdev
symlink
	sigio
%hu,%hu
				
	%d	x%06x
lstat("%s", %p): %s
checking file descriptor %u
fstat(%d): %s
fd %d is a %s
poll: 
PRI,
OUT,
ERR,
NVAL,
; FIONREAD=%lu
recvmsg=%ld, 
TCP_NODELAY
TCP_MAXSEG
TCP_CORK
TCP_KEEPIDLE
TCP_KEEPINTVL
TCP_KEEPCNT
TCP_SYNCNT
TCP_LINGER2
TCP_ACCEPT
TCP_WINDOW_CLAMP
TCP_INFO
TCP_QUICKACK
TCP_MD5SIG
IPV6_V6ONLY
IP_HDRINCL
IP_ROUTER_ALERT
IP_RECVOPTS
IP_RETOPTS
IP_PKTOPTIONS
IP_MTU_DISCOVER
IP_RECVERR
IP_RECVTTL
IP_RECVTOS
IP_MTU
IP_FREEBIND
IP_MULTICAST_TTL
IP_MULTICAST_LOOP
DEBUG
REUSEADDR
TYPE
ERROR
DONTROUTE
BROADCAST
SNDBUF
RCVBUF
KEEPALIVE
OOBINLINE
NO_CHECK
PRIORITY
BSDCOMPAT
REUSEPORT
PASSCRED
PEERCRED
RCVLOWAT
SNDLOWAT
RCVTIMEO
SNDTIMEO
SECURITY_AUTHENTICATION
SECURITY_ENCRYPTION_TRANSPORT
SECURITY_ENCRYPTION_NETWORK
BINDTODEVICE
ATTACH_FILTER
DETACH_FILTER
STREAM
DGRAM
SEQPACKET
 	IFLAGS=%08x OFLAGS=%08x CFLAGS=%08x LFLAGS=%08x
getsockopt(%d, SOL_SOCKET, SO_TYPE, %p, {%u}): %s
fd %d: socket of type %d ("%s")
getsockopt(%d, SOL_SOCKET, %d, %p, {%u}): %s
**** NO FURTHER ANALYSIS FOR THIS SOCKET TYPE IMPLEMENTED
  FD  type	device	inode	mode	links	uid	gid	rdev	size	blksize	blocks	atime		mtime		ctime		cloexec	flags	sigown
  FD  type	device	inode	mode	links	uid	gid	rdev	size	blksize	blocks	atime				mtime				ctime				cloexec	flags	sigown
%4d: %s	%s	%lu	0%03o	%lu	%u	%u	%hu,%hu	%ld	%ld	%ld
open("%s", O_RDONLY|O_NOCTTY|O_NONBLOCK|O_LARGEFILE, 0700): %s
poll({%d, %hd, %hd}, 1, 0): %s
%s(, {%lu,%lu,0%03o,%lu,%u,%u
,%lu
,%ld
,...}) -> %d
%s(, {}) -> %d
umask(0%03o)
umask() -> 0%03o
open("%s", 0%o, 0%03o)
open("%s", 0%o, 0%03o) -> %d
creat("%s", 0%03o)
creat("%s", 0%03o) -> %d
lseek(%d, %ld, %d)
lseek() -> %ld
lseek64(%d, %ld, %d)
lseek64() -> %ld
getpid()
getpid() -> %d
getppid()
getppid() -> %d
getpgrp()
getpgid(%d)
getpgid() -> %d
setpgid(%d, %d)
setpgid() -> %d
tcgetpgrp(%d)
tcgetpgrp() -> %d
tcsetpgrp(%d, %d)
tcsetpgrp() -> %d
getsid(%d)
getsid() -> %d
setsid()
setsid() -> %d
getuid()
getuid() -> %u
geteuid()
geteuid() -> %u
setuid(%u)
setuid() -> %d
getgid()
getgid() -> %u
getegid()
getegid() -> %u
setgid(%u)
setgid() -> %d
initgroups("%s", %u)
initgroups() -> %d
getgroups(%d, %u,...)
getgroups() -> %d
setgroups(%lu, [])
setgroups(%lu, [%u])
setgroups(%lu, [%u,%u])
setgroups(%lu, [%u,%u,...])
setgroups() -> %d
chdir("%s")
chdir() -> %d
chroot("%s")
chroot() -> %d
gettimeofday(%p, {%d,%d})
gettimeofday(%p, NULL)
mknod("%s", 0%o, %lu)
mknod() -> %d
mkfifo("%s", 0%o)
mkfifo() -> %d
fstat(%d, %p)
fstat
fstat64(%d, %p)
fstat64
lstat(%s, %p)
lstat
lstat64(%s, %p)
lstat64
dup(%d)
dup(%d) -> %d
dup2(%d, %d)
dup2(%d, %d) -> %d
pipe(%p)
pipe({%d,%d}) -> %d
read(%d, %p, %lu)
read -> %ld
write(%d, %p, %lu)
write -> %ld
fcntl(%d, %d)
fcntl() -> %d
fcntl(%d, %d, %ld)
ftruncate(%d, %ld)
ftruncate() -> %d
ftruncate64(%d, %ld)
ftruncate64() -> %d
flock(%d, %d)
flock() -> %d
ioctl(%d, 0x%x, %p{%lu})
ioctl(%d, 0x%x, 0x%p)
ioctl() -> %d
ioctl(%d, 0x%x, %d)
close(%d)
close()  -> %d
fchown(%d, %u, %u)
fchown() -> %d
fchmod(%d, 0%o)
fchmod()  -> %d
unlink("%s")
unlink()  -> %d
symlink("%s", "%s")
symlink()  -> %d
readlink("%s", %p, %lu)
readlink() -> %d
chown("%s", %u, %u)
chown()  -> %d
chmod("%s", 0%o)
poll({%d,0x%02hx,}, , %u, %d)
poll(, {,,0x%02hx}) -> %d
NULL/
fork()
fork() -> %d
waitpid(%d, %p, %d)
waitpid(, {%d}, ) -> %d
signal(%d, %p)
signal() -> %p
sigaction(%d, %p, %p)
sigaction() -> %d
sigprocmask(%d, %p, %p)
sigprocmask() -> %d
alarm(%u)
alarm() -> %u
kill(%d, %d)
kill() -> %d
execvp("%s", "%s")
execvp("%s", "%s" "%s")
execvp("%s", "%s" "%s" "%s")
execvp() -> %d
system("%s")
system() -> %d
socketpair(%d, %d, %d, %p)
socket(%d, %d, %d)
socket(%d, %d, %d) -> %d
bind(%d, %s, %u)
bind() -> %d
connect(%d, {%d,%s}, %u)
listen(%d, %d)
listen() -> %d
accept(%d, %p, %p)
accept(,,) -> %d
getsockname(%d, %p, %p{%u})
getpeername(%d, %p, %p{%u})
setsockopt() -> %d
recv(%d, %p, %lu, %d)
recv() -> %d
send() -> %d
sendto() -> %d
shutdown(%d, %d)
shutdown()  -> %d
sleep(%u)
sleep() -> %u
usleep(%lu)
usleep() ->
nanosleep({%ld,%ld},%p)
nanosleep(,{%ld,%ld}) -> %d
nanosleep() -> %d
pause()
pause() -> %d
gethostbyname("%s")
gethostbyname() -> NULL
getaddrinfo(,,,{%p}) -> %d
malloc(%ld)
malloc() -> %p
malloc(%ld): out of memory
calloc(%ld, %ld)
calloc() -> %p
realloc(%p, %ld)
realloc() -> %p
tcgetattr(%d, %p)
%02x,
tcsetattr() -> %d
ttyname(%d)
ttyname() -> %s
ttyname() -> NULL
isatty(%d)
isatty() -> %d
openpty(%p, %p, %p, %p, %p)
grantpt(%d)
grantpt() -> %d
unlockpt(%d)
unlockpt() -> %d
ptsname(%d)
ptsname() -> %s
ptsname() -> NULL
uname(%p)
uname({%s, %s, %s, %s, %s})
gethostname(%p, %lu)
gethostname("%s", ) -> %d
atexit(%p)
atexit() -> %d
exit(%d)
abort()
mkstemp("%s")
mkstemp({%s}) -> %d
setenv("%s", "%s", %d)
setenv() -> %d
unsetenv("%s")
unsetenv() ->
readline("%s")
readline(NULL)
readline() -> "..."
readline() -> NULL
using_history()
using_history() ->
read_history("%s")
read_history(NULL)
read_history() -> %d
read_history() -> 0
write_history("%s")
write_history(NULL)
write_history() -> %d
write_history() -> 0
append_history(%d, "%s")
append_history(%d, NULL)
append_history() -> %d
append_history() -> 0
where_history()
where_history() -> %d
add_history("%s")
add_history() ->
getgrouplist("%s", %u, %p, [%d])
getgrouplist(,, [], [%d]) -> %d
getgrouplist(,, [%u], [%d]) -> %d
getgrouplist(,, [%u,%u], [%d]) -> %d
getgrouplist(,, [%u,%u,...], [%d]) -> %d
gettimeofday({%ld,%ld}, {%d,%d}) -> %d
gettimeofday({%ld,%ld},) -> %d
fcntl(%d, %d, {type=%hd,whence=%hd,start=%ld,len=%ld,pid=%d})
poll({%d,0x%02hx,}{%d,0x%02hx,}{%d,0x%02hx,}{%d,0x%02hx,}, %u, %d)
poll(, {,,0x%02hx}{,,0x%02hx}{,,0x%02hx}{,,0x%02hx}) -> %d
select(%d, &0x%lx, &0x%lx, &0x%lx, %s%lu.%06ld)
select -> (, 0x%lx, 0x%lx, 0x%lx, %s%lu.%06ld), %d
execvp("%s", "%s" "%s" "%s" "%s")
execvp("%s", "%s" "%s" "%s" "%s" "%s")
execvp("%s", "%s" "%s" "%s" "%s" "%s" ...)
socketpair(%d, %d, %d, {%d,%d}) -> %d
accept(%d, {%d, %s}, %u) -> %d
getsockname(, {%s}, {%u}) -> %d
getpeername(, {%s}, {%u}) -> %d
getsockopt(%d, %d, %d, %p, {%u})
getsockopt() -> (,,, 0x%08x, %d), %d
setsockopt(%d, %d, %d, {0x%x}, %d)
setsockopt(%d, %d, %d, {0x%08x,%08x}, %d)
recvfrom(%d, %p, %lu, %d, %p, %u)
recvfrom(,,,, {%d,%s}, %u) -> %d
recvfrom(,,,, NULL, NULL) -> %d
recvmsg(%d, %p{%p,%u,%p,%lu,%p,%lu,%d}, %d)
recvmsg(, {%s,%u,,%lu,,%lu,}, ) -> %d
send(%d, %p[%08x...], %lu, %d)
sendto(%d, %p[%08x...], %lu, %d, {%s}, %d)
gethostbyname() -> %d.%d.%d.%d
getaddrinfo(%s%s%s, %s%s%s, {%d,%d,%d,%d,%u,%p,%p,%p}, %p)
getaddrinfo(,,,{{%s, %s}) -> 0
calloc(%ld, %ld): out of memory
realloc(%p, %ld): out of memory
tcgetattr(, {%08x,%08x,%08x,%08x,%s}) -> %d
tcsetattr(%d, %d, {%08x,%08x,%08x,%08x,%s})
openpty({%d}, {%d}, {"%s"},,) -> %d
SSL_load_error_strings()
SSL_load_error_strings() ->
SSL_library_init()
SSL_library_init() -> %d
SSLv2_server_method()
SSLv2_server_method() -> %p
SSLv3_client_method()
SSLv3_client_method() -> %p
SSLv3_server_method()
SSLv3_server_method() -> %p
SSLv23_client_method()
SSLv23_client_method() -> %p
SSLv23_server_method()
SSLv23_server_method() -> %p
TLSv1_client_method()
TLSv1_client_method() -> %p
TLSv1_server_method()
TLSv1_server_method() -> %p
SSL_CTX_new(%p)
SSL_CTX_new() -> %p
SSL_new(%p)
SSL_new() -> %p
SSL_CTX_set_verify() -> 
SSL_CTX_set_tmp_dh(%p, %p)
SSL_CTX_set_tmp_dh() -> %d
SSL_set_cipher_list(%p, "%s")
SSL_set_cipher_list() -> %d
SSL_get_verify_result(%p)
SSL_set_fd(%p, %d)
SSL_set_fd() -> %d
SSL_connect(%p)
SSL_connect() -> %d
SSL_accept(%p)
SSL_accept() -> %d
SSL_read(%p, %p, %d)
SSL_read() -> %d
SSL_pending(%p)
SSL_pending() -> %d
SSL_write(%p, %p, %d)
SSL_write() -> %d
SSL_get_peer_certificate(%p)
SSL_shutdown(%p)
SSL_shutdown() -> %d
SSL_CTX_free(%p)
SSL_CTX_free() -> void
SSL_free(%p)
SSL_free() -> void
RAND_egd("%s")
RAND_egd() -> %d
PEM_read_bio_DHparams() -> %p
BIO_new_file("%s", "%s")
BIO_new_file() -> %p
BIO_new_file() -> NULL
SSL_get_current_expansion(%p)
SSL_COMP_get_name(%p)
SSL_COMP_get_name() -> "%s"
SSL_COMP_get_name() -> NULL
SSL_CTX_load_verify_locations(%p, %s%s%s, %s%s%s)
SSL_CTX_load_verify_locations() -> %d
SSL_CTX_use_certificate_file(%p, "%s", %d)
SSL_CTX_use_certificate_file() -> %d
SSL_CTX_use_certificate_chain_file(%p, "%s")
SSL_CTX_use_certificate_chain_file() -> %d
SSL_CTX_use_PrivateKey_file(%p, "%s", %d)
SSL_CTX_use_PrivateKey_file() -> %d
SSL_CTX_set_verify(%p, %u, %p)
SSL_CTX_set_cipher_list(%p, "%s")
SSL_CTX_set_cipher_list() -> %d
SSL_get_verify_result() -> %lx
SSL_get_peer_certificate() -> %p
SSL_get_peer_certificate() -> NULL
PEM_read_bio_DHparams(%p, %p, %p, %p)
PEM_read_bio_DHparams() -> NULL
SSL_get_current_compression(%p)
SSL_get_current_compression() -> %p
SSL_get_current_compression() -> NULL
SSL_get_current_expansion() -> %p
SSL_get_current_expansion() -> NULL
named pipe
character device
block device
regular file
symbolic link
local socket
"MT"?
reading
reading and writing
;*3$"
>|Gt
socat.debug
7zXZ
d|*d
=V?L
l*Vc
x	p:
bYV`
 ?+r
<2:b
hSi3
<<jI
L+Ca
Dtu$
y{\/
X,*	
c1pV
!4],N
s,eq
xshj^|3&"+
~Kl?!
BhLt
"szZ:
I$w]@
h<Jh
PeW;
28~(
hqp;
p{~`
]2b{
*=._
yKs~S
|s\UNv
iJZ/L
1HdG
:,8Z
FP./
i _5
Mr`F
N{+R
NV	Q!N4
m)l!
J..R
c]Zk
F>E"
DY E=x-B
\*Y)
h6E4
l {y
{4/f
l$dA
K'tQx
_Q7h
j9`.
E#	r
B;w2
\{El
J&BE
87OeX	
a*LAf
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
