/lib64/ld-linux-x86-64.so.2
libwsutil.so.4
g_str_hash
__gmon_start__
_Jv_RegisterClasses
g_strdup
g_hash_table_insert
g_list_free
g_strconcat
g_malloc
g_string_new
_ITM_deregisterTMCloneTable
g_assertion_message_expr
g_slist_append
_ITM_registerTMCloneTable
g_strdup_printf
g_string_free
g_hash_table_new
g_snprintf
g_ascii_table
g_slist_foreach
g_hash_table_lookup
g_strerror
g_list_first
g_string_append
g_string_append_printf
g_log
g_str_equal
g_strlcpy
started_with_special_privs
init_process_policies
ws_add_crash_info
relinquish_special_privs_perm
create_tempfile
libglib-2.0.so.0
g_thread_exit
g_list_foreach
g_hash_table_remove
g_list_prepend
g_async_queue_try_pop_unlocked
g_thread_new
g_async_queue_push_unlocked
g_array_free
g_async_queue_new
g_slist_nth
g_array_insert_vals
g_array_remove_index
g_ascii_strcasecmp
g_ascii_strncasecmp
g_list_nth_data
g_async_queue_lock
g_async_queue_timeout_pop_unlocked
g_malloc0
g_log_set_handler
g_list_append
g_array_append_vals
g_path_get_basename
g_thread_join
g_strsplit_set
g_hash_table_foreach
g_array_new
g_strdup_vprintf
g_async_queue_unlock
g_strfreev
g_slist_free
libpcap.so.1
pcap_set_buffer_size
pcap_lookupnet
pcap_open_live
pcap_geterr
pcap_lib_version
pcap_set_rfmon
pcap_close
pcap_activate
pcap_breakloop
pcap_setfilter
pcap_set_promisc
pcap_freecode
pcap_findalldevs
pcap_create
pcap_set_snaplen
pcap_can_set_rfmon
pcap_dispatch
pcap_set_datalink
bpf_image
pcap_datalink
pcap_datalink_val_to_name
pcap_list_datalinks
pcap_get_selectable_fd
pcap_compile
pcap_freealldevs
pcap_free_datalinks
pcap_set_timeout
pcap_stats
pcap_datalink_name_to_val
pcap_snapshot
pcap_statustostr
pcap_datalink_val_to_description
libcap.so.2
cap_free
cap_set_proc
cap_init
cap_set_flag
libz.so.1
zlibVersion
libnl-genl-3.so.200
genl_ctrl_resolve
genlmsg_put
genl_connect
genlmsg_attrlen
genlmsg_attrdata
libnl-3.so.200
nla_next
nlmsg_alloc
nla_len
nl_recvmsgs
nl_cb_alloc
nl_cb_put
nlmsg_hdr
nla_get_u16
nl_cb_err
nl_send_auto_complete
nla_ok
nla_parse
nla_get_string
nla_get_u32
nla_data
nl_socket_free
nl_cb_set
nla_type
nla_put
nl_socket_alloc
nlmsg_data
libpthread.so.0
read
__errno_location
sigaction
libc.so.6
socket
fflush
__printf_chk
fopen
optind
strrchr
__isoc99_sscanf
__fdelt_chk
inet_ntop
__stack_chk_fail
unlink
putchar
select
inet_pton
strftime
strtol
fgets
strlen
prctl
sigemptyset
strstr
__fprintf_chk
stdout
fputc
fputs
memcpy
fclose
strtoul
__strncpy_chk
getenv
optarg
stderr
ioctl
getopt_long
if_nametoindex
fwrite
gettimeofday
localtime
strchr
__vfprintf_chk
fdopen
sleep
__cxa_finalize
__xstat
uname
strcmp
__libc_start_main
ferror
_edata
__bss_start
_end
__libc_csu_fini
_IO_stdin_used
__data_start
__libc_csu_init
libnl_3
GLIBC_2.2.5
GLIBC_2.15
GLIBC_2.14
GLIBC_2.4
GLIBC_2.7
GLIBC_2.3.4
AWAVAUATI
L$@H
|$8I
l$pA
t$`H
t$XH
L$`H
|$@H
D$(H
D$pH
D$8H
D$`H
D$0H
D$ ;B
t$(H
|$81
|$8H
|$0H
t$0H
D$`I
F;<(td
T$$H
|$HH
t$XH
t$`H
t$`H
fffff.
fffff.
fffff.
fffff.
AWAV
AUATI
D$h1
D$ H
D$ H
D$0L
D$0I
D$8A
t$ I
D$DA
D$@A
D$HA
D$LA
D$PA
D$TA
L$hdH3
x[]A\A]A^A_
AWAVI
AUATH
D$81
\$ H
D$8dH3
]A\A]A^A_1
L$ H
L$(H
L$0H
L$8H
L$@H
D$8H
L$ H
L$(H
L$0H
L$8H
L$@H
L$ H
L$(H
L$0H
L$8H
L$@H
|$(H
D$(H
T$PH
D$h%
T$ H
T$(H
T$0H
T$8H
T$@H
T$ H
T$(H
T$0H
T$8H
T$@H
T$ H
T$(H
T$0H
T$8H
T$@H
ffff.
ATUSH
[]A\
AUATA
D$H1
d$$H
T$ H
T$(H
T$0H
T$$H
D$HdH3
X[]A\A]
AWAVAUATUSH
D$x1
|$0H
T$8H
T$@H
T$HH
T$PH
T$XH
T$`H
|$@H
D$01
t$ D
T$$H
D$@D
t$ D
D$HD
t$\H
t$(D
L$TD
D$PD
l$dD
D$xdH3
[]A\A]A^A_
fffff.
fff.
AUATA
[]A\A]
AVAUI
ATUH
T$ I
[]A\A]A^
fffff.
dH34%(
ffff.
dH34%(
fffff.
ffffff.
ATUI
[]A\
xeH=
ATUI
t$8H
T$@H
L$HL
D$PL
L$Xt:
)D$`
)L$p
D$(1
D$0H
T$(dH3
[]A\
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
fffff.
fffff.
fffff.
AUATUSH
([]A\A]
ffff.
AUATH
[]A\A]
ATUI
[]A\
fffff.
dH34%(
%@xt
ZYuj
fffff.
ATUSH
 []A\
ffffff.
fff.
AUATI
D$ H
[]A\A]H
[]A\A]
[]A\A]
AVAUATUSH
D$h1
\$hdH3
p[]A\A]A^
AUATI
[]A\A]
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
ffffff.
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
ffff.
ATUI
[]A\
{pH)
t$ H
T$ H
T$ H
CdA9
AWAVAUATUSH
l$pL
d$0L
l$ 1
T$0H
T$8H
T$@H
T$HH
T$PH
T$XH
T$`H
t$XL
|$0H
L$HL
D$ L
D;t$ r
[]A\A]A^A_
t$0H
AWAVAUATUSH
L$0H
D$ H
l$`L
l$`L
l$`L
l$`D
D$\=M<
EDE1
[]A\A]A^A_
:-uDA
u=E1
D$pL
t$pH
D$pM)
T$HL
L$@H
Hc5G
|$`1
|$pH
HiL$`@B
HiD$p@B
T$hH
D$xH
D$pH
T$xH
D$`H
d$(1
D$HH
D$8H
|$81
\$ D
\$ uwE
ARAVA
L$(E
ASARH
AVAWH
L$(A
t$HH
|$\H
AUPRH
#D$@
t$\H
D$PA
D$0A
D$0L
D$4P
AUATI
[]A\A]
AWAVAUATUSH
[]A\A]A^A_
fffff.
fffff.
AVAUM
ATUH
d$PL
 []A\A]A^
AWAVM
AUATI
D$H1
L$<H
t$>H
D$8M<+
L$HdH3
X[]A\A]A^A_
t$ 1
T$"M
t$,M
fff.
AWAVE1
AUATM
D$ H
D$$dH
D$X1
L$8H
L$DL
T$Jf
T$XdH3
h[]A\A]A^A_
t$01
t$8H
<$fD
D$0L
t$0A
t$(H
|$2H
t$0H
t$$H
t$<H
L$0H
\$<L
<$H)
ffffff.
AWAVAUATI
D$,dH
D$h1
D$(D
\$$D
L$,A
\$$E
D$(D
L$ D
t$DH
t$@M
\$TH
L$XH
|$hdH3<%(
x[]A\A]A^A_
D$,E1
D$,E
t$0f
T$0f
L$2M
t$8M
t$<M
t$0H
t$0f
|$2L
t$,M
AWAVM
AUATI
D$(H
D$ dH
D$h1
HiL$@@B
L$HH
D$TH
L$`M
D$XH
\$hdH3
x[]A\A]A^A_
t$0f
|$0fD
D$2L
t$(M
t$2H
t$0f
t$ M
t$01
T$2M
t$4M
t$0A
\$0f
D$8D
t$8M
t$<M
t$0A
L$0H
\$<H
t$8M
t$<M
AUATUSH
D$81
ZYt{
t$8dH34%(
H[]A\A]
AVAUI
ATUH
[]A\A]A^
ATUH
[]A\
fff.
ffffff.
AUATUSH
dH34%(
([]A\A]
ffffff.
AUATA
]A\A]
[]A\A]
[]A\A]
fffff.
AUATI
[]A\A]
P~ H
CPH9
{P t
ATUI
[]A\
<$AH
D$H1
D$HdH3
D$ H
T$(1
ATUSH
|$(H
tMrk
[]A\
AWAVAUATI
D$(1
T$(dH3
8[]A\A]A^A_
Dl$ D
ATU1
D$(1
L$(dH3
0[]A\
AWAVAUATUSH
t$ H
\$(H
t$0L
D$$L
|$PH
|$8H
t$$H
[]A\A]A^A_
D$$H
AWAVAUATA
[]A\A]A^A_
jAE1
fffff.
AWAVAUATUSH
l$8A
D$0H
D$ H
|$@ 
[]A\A]A^A_
gfff
gfff
AWAVA
AUATL
[]A\A]A^A_
Can't get list of interfaces: %s
with libpcap
with 
The specified adapter index is a negative number
The specified adapter index is too large (greater than %d)
There is no interface with that adapter index
There are no interfaces on which a capture can be done
Interface description[%02d] : %s
Console display name[%02d]: %s
Buffer size[%02d]     : %d (MB)
AutostopFilesize(%u) : %u (KB)
--capture-comment can be set only once per file
The specified data link type "%s" isn't valid
Invalid or unknown -a flag "%s"
Invalid or unknown -b arg "%s"
Data link types of interface %s when %sin monitor mode (use option -y to set):
Data link types of interface %s (use option -y to set):
Too many ring buffer files (%u). Reducing to %u.
%u is a lot of ring buffer files.
WIRESHARK_QUIT_AFTER_CAPTURE
(unspecified)
TRUE
FALSE
PCAPNG
PCAP
CAPTURE OPTIONS     :
Interface name[%02d]  : %s
Capture filter[%02d]  : %s
Snap length[%02d] (%u) : %d
Link Type[%02d]       : %d
Promiscuous Mode[%02d]: %s
Monitor Mode[%02d]    : %s
Interface name[df]  : %s
Interface Descr[df] : %s
Capture filter[df]  : %s
Snap length[df] (%u) : %d
Link Type[df]       : %d
Promiscuous Mode[df]: %s
Buffer size[df]     : %d (MB)
Monitor Mode[df]    : %s
SavingToFile        : %u
SaveFile            : %s
GroupReadAccess     : %u
Fileformat          : %s
RealTimeMode        : %u
ShowInfo            : %u
QuitAfterCap        : %u
MultiFilesOn        : %u
FileDuration    (%u) : %u
RingNumFiles    (%u) : %u
AutostopFiles   (%u) : %u
AutostopPackets (%u) : %u
AutostopDuration(%u) : %u
autostop duration
autostop filesize
autostop files
number of ring buffer files
ring buffer filesize
ring buffer duration
buffer size
packet count
snapshot length
capture_opts.c
not 
  %s
 (%s)
 (not supported)
%d. %s
capture_opts_add_opt
/sys/class/net/%s/wireless
bluetooth
usbmon
vmxnet
Loopback
vmnet
cnd_class_capturesize
cnd_class_timeout
The specified %s "%s" isn't a decimal number
The specified %s "%s" is a negative number
The specified %s "%s" is too large (greater than %d)
The specified %s is zero
cnd_new: Couldn't find class ID "%s"
cnd_register_class: Duplicate class ID "%s"
Dumpcap 1.12.7%s
Capture network packets and dump them into a pcapng file.
See http://www.wireshark.org for more information.
Usage: dumpcap [options] ...
  -i <interface>           name or idx of interface (def: first non-loopback),
                           or for remote capturing, use one of these formats:
                               rpcap://<host>/<interface>
                               TCP@<host>:<port>
  -f <capture filter>      packet filter in libpcap filter syntax
  -s <snaplen>             packet snapshot length (def: 65535)
  -p                       don't capture in promiscuous mode
  -I                       capture in monitor mode, if available
  -B <buffer size>         size of kernel buffer in MiB (def: %dMiB)
  -y <link type>           link layer type (def: first appropriate)
  -D                       print list of interfaces and exit
  -L                       print list of link-layer types of iface and exit
  -d                       print generated BPF code for capture filter
  -k                       set channel on wifi interface <freq>,[<type>]
  -S                       print statistics for each interface once per second
  -M                       for -D, -L, and -S, produce machine-readable output
  -c <packet count>        stop after n packets (def: infinite)
  -a <autostop cond.> ...  duration:NUM - stop after NUM seconds
                           filesize:NUM - stop this file after NUM KB
                              files:NUM - stop after NUM files
  -w <filename>            name of file to save (def: tempfile)
  -g                       enable group read access on the output file(s)
  -b <ringbuffer opt.> ... duration:NUM - switch to next file after NUM secs
                           filesize:NUM - switch to next file after NUM KB
                              files:NUM - ringbuffer: replace after NUM files
  -n                       use pcapng format instead of pcap (default)
  -P                       use libpcap format instead of pcapng
  --capture-comment <comment>
                           add a capture comment to the output file
                           (only for pcapng)
  -N <packet_limit>        maximum number of packets buffered within dumpcap
  -C <byte_limit>          maximum number of bytes used for buffering packets
                           within dumpcap
  -t                       use a separate thread per interface
  -q                       don't report packet capture counts
  -v                       print version information and exit
  -h                       display this help and exit
WARNING: dumpcap will enable kernel BPF JIT compiler if available.
By doing "echo 0 > /proc/sys/net/core/bpf_jit_enable"
Example: dumpcap -i eth0 -a duration:60 -w output.pcapng
"Capture packets from interface eth0 until 60s passed into output.pcapng"
Use Ctrl-C to stop capturing at any time.
Entering open_capture_device().
Calling pcap_create() using %s.
Calling pcap_set_snaplen() with snaplen %d.
Calling pcap_set_promisc() with promisc_mode %d.
Queued a packet of length %d captured on interface %u.
Queue size is now %ld bytes (%ld packets)
Dropped a packet of length %d captured on interface %u.
You are running (T)Wireshark with a version of the libpcap library
that doesn't handle HP-UX network devices well; this means that
(T)Wireshark may not be able to capture packets.
To fix this, you should install libpcap 0.6.2, or a later version
of libpcap, rather than libpcap 0.4 or 0.5.x.  It is available in
packaged binary form from the Software Porting And Archive Centre
for HP-UX; the Centre is at http://hpux.connect.org.uk/ - the page
at the URL lists a number of mirror sites.
The capture session could not be initiated on interface '%s' (%s).
Please check to make sure you have sufficient permissions, and that you have the proper interface or pipe specified.%s
Unable to set data link type on interface '%s' (%s).
is not one of the DLTs supported by this device
capture_loop_close_input: closing %p
Invalid capture filter "%s" for interface '%s'!
That string isn't a valid capture filter (%s).
See the User's Guide for a description of the capture filter syntax.
cap_set_proc() fail return: %s
Unexpected error from select: %s
cap_pipe_dispatch: invalid state
Started thread for interface %d.
Stopped thread for interface %d.
Using threads is required for capturing on multiple interfaces!
The capture session could not be initiated because
"%s" is not a valid socket specification
The capture session could not be initiated due to error getting information on pipe/socket: %s
The capture session could not be initiated due to error on pipe open: %s
The capture session could not be initiated due to error on socket create: %s
The capture session coud not be initiated due to error on socket connect: Path name too long
The capture session coud not be initiated due to error on socket connect: %s
The capture session could not be initiated because
"%s" is neither an interface nor a socket nor a pipe
End of file on pipe magic during open
Error on pipe magic during open: %s
End of file on pipe header during open
Error on pipe header during open: %s
Unable to read old libpcap format
Ring buffer requested, but capture is being written to standard output or to a named pipe.
The temporary file to which the capture would be saved ("%s") could not be opened: %s.
The file to which the capture would be saved ("%s") could not be opened: %s.
Using PCAPNG is required for capturing on multiple interfaces! Use the -n option.
The file to which the capture would be saved ("%s") could not be opened: Error %d.
Dequeued a packet of length %d captured on interface %d.
Waiting for thread of interface %u...
Thread of interface %u terminated.
read error: PacketReceivePacket failed
The network adapter on which the capture was being done is no longer running; the capture has stopped.
Error while capturing packets: %s
Not all the packets could be written to the file to which the capture was being saved
("%s") because there is no space left on the file system
on which that file resides.
Not all the packets could be written to the file to which the capture was being saved
("%s") because you are too close to, or over, your disk quota
on the file system on which that file resides.
An error occurred while writing to the file to which the capture was being saved
("%s"): %s.
The file to which the capture was being saved
("%s") could not be closed: %s.
Can't get packet-drop statistics: %s
Packets received/dropped on interface '%s': %u/%u (pcap:%u/dumpcap:%u/flushed:%u/ps_ifdrop:%u)
Packets received/dropped on interface '%s': %u/%u (pcap:%u/dumpcap:%u/flushed:%u/ps_ifdrop:%u) (%.1f%%)
Capture loop stopped with error
The capture session could not be initiated due to the socket error: 
         %d: %s
Dumpcap 1.12.7%s
See http://www.wireshark.org for more information.
Only one -k flag may be specified
a:b:B:C:c:dDf:ghi:Ik:LMN:npPqSs:tvw:y:Z:
Only one of -D, -L, -d, -k, or -S may be supplied.
Ring buffer requested, but a capture isn't being done.
A capture comment can only be set if we capture into a single pcapng file.
Ring buffer requested, but capture isn't being saved to a permanent file.
Ring buffer requested, but no maximum capture file size or duration were specified.
%d: Failed to init ws80211: %s
%d: Failed to set channel: %s
pcap_can_set_rfmon() failed: %s
pcap_can_set_rfmon() returned %d
The capabilities of the capture device "%s" could not be obtained (%s).
Please check to make sure you have sufficient permissions, and that
you have the proper interface or pipe specified.
The capture device "%s" has no data link types.
Capture interface:
Stop conditions:
Output (files):
Miscellaneous:
You might want to reset it
SUCCESS
FAILURE
CaptureChild
pcap_create() returned %p.
buffersize %d.
monitor_mode %d.
pcap_activate() returned %d.
open_capture_device %s : %s
Err 
Crit
Warn
Msg 
Info
Dbg 
unknown log_level %u
dumpcap.c
%02u:%02u:%02u %8s %s %s
File: %s
File: %s
Packets: %s
Packets: %u 
%u:%s
Capture filter error: %s
Dumpcap 1.12.7%s
capture_loop_close_input
dumpcap: 
Primary Error: %s
Secondary Error: %s
Frame %u too long (%d bytes)
Error reading from pipe: %s
(not specified)
Capture loop starting ...
Could not allocate memory.
capture_loop_open_input : %s
cap_pipe_open_live: %s
TCP@
Unrecognized libpcap format
cap_pipe_open_live: error %s
capture_loop_init_filter: %s
Can't install filter (%s).
capture_loop_open_output: %s
wireshark_%d_interfaces
wireshark_pcapng_
wireshark_pcap_
capture_loop_init_output
Capture loop running!
Capture read
Capture loop stopping ...
recvfrom: Network is down
The interface went down
read: Device not configured
read: I/O error
capture_loop_close_output
Counters provided by dumpcap
Packets captured: %u
Capture loop stopped!
!pcap_opts->from_cap_pipe
capture-comment
Compiled 
Running 
Dumpcap 1.12.7%s
Main
Capture
prctl() fail return: %s
byte_limit
packet_limit
Invalid Option: %s
Invalid argument: %s
%d. %s	
<unknown IPv4>
<unknown IPv6>
<type unknown %i>
	loopback
	network
Dropped
Received
Interface
%-15s  %10s  %10s
%-15s  %10u  %10u
%s	%u	%u
Need one interface
pcap_activate() failed: %s
DLT %d
%d	%s	%s
Interface: %s
and 
'%s'
%u interfaces
Capturing on %s
capture_loop_close_input
capture_loop_start
can't find PPA for 
/proc/sys/net/core/bpf_jit_enable
console_log_handler
Please report this to the Wireshark developers.
http://bugs.wireshark.org/
(This is not a crash; please do not report it as such.)
Y@%05u
%Y%m%d%H%M%S
length <= SP_MAX_MSG_LEN
sync_pipe_write.c
pipe_write_header
(64-bit) 
GLib %d.%d.%d
with libz 
1.2.8
with POSIX capabilities
 (Linux)
with libnl 3
%s %s.%s
%s %s
LANG
, with locale %s
, without locale
, with libz %s
Built using gcc %s.
unknown OS version (uname failed - %s)
5.1.1 20150618 (Red Hat 5.1.1-4)
Copyright 1998-2015 Gerald Combs <gerald@wireshark.org> and contributors.
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 (Git Rev Unknown from unknown)
failed to allocate netlink message
Failed to allocate netlink socket.
Failed to connect to generic netlink.
building message failed
%s.mon
nl80211
nl80211 not found.
phy%d.mon
Cannot open /proc/net/dev
Error parsing /proc/net/dev
NOHT
HT20
HT40-
HT40+
;*3$"
dumpcap.debug
7zXZ
$w	W]
^$Ke
3_3_
5e~ad
F'[T
1i7/\
? _-
x(Sx
=o=,
_x38
#='$
q#S=K
14PP9
"c>YZ
jaiS
QM6Px<M q
*z5:
Sp;ncB)
'Y%Lf
 '.}
(v7Y	
9F<#{0h
ZPWs
D>lHX
7yO-
trHQ
tl&h
a`#Y
+~8y
u+Z\^uX
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
