` ' 
`8"(
6th^^
Ribd9WE
6M?[
rZ=I
:%XV
5hIT/
pS\vWY'
	2(T
AN/P
a< c
b$K#
bcxT
|\[pZ)+
__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
gmx_fatal
save_calloc
correl
save_free
sffn2effn
normalize_acf
debug
fwrite
__fprintf_chk
average_acf
norm_and_scale_vectors
gmx_invsqrt_exptab
gmx_invsqrt_fracttab
dump_tmp
ffopen
ffclose
print_and_integrate
evaluate_integral
sqrt
do_four_core
__sprintf_chk
fit_acf
bDebugMode
do_lmfit
fit_function
__printf_chk
nfp_ffn
putchar
longs_ffn
sqrtf
add_acf_pargs
get_acfnout
low_do_autocorr
bool_names
xvgropen
LegendreP
stderr
fputc
__isoc99_sscanf
get_acffitfn
cross_corr
sincos
mfitfn
mrqmin_new
logf
do_expfit
malloc
exit
gaussj
mrqmin
mrqcof_new
print_one
low_ana_dih_trans
has_dihedral
mk_multiplicity_lookup
strncpy
strstr
mk_chi_lookup
calc_distribution_props
make_histo
get_chi_product_traj
normalize_histo
read_ang_dih
read_first_x
save_realloc
set_pbc
dih_angle
atan2
read_next_x
bond_angle
pr_rvec
close_trj
write_xpm
libopen
__isoc99_fscanf
do_pp2shifts
please_cite
mk_dlist
gmx_strcasecmp
pr_dlist
stdout
pr_trans
read_eigenvectors
open_trn
fread_trnheader
fread_htrn
write_eigenvectors
open_tpx
fwrite_trn
close_trn
enlarge_mat
reset_index
init_mat
mk_matrix
set_mat_entry
done_mat
done_matrix
row_energy
mat_energy
swap_rows
swap_mat
low_rmsd_dist
rmsd_distribution
new_clustid
ssyevr_
sparse_eigensolver
ssaupd_
gmx_sparsematrix_vector_multiply
sseupd_
__file__
__line__
__vfprintf_chk
warning2
fflush
safe_asin
asinf
icosaeder_vertices
divarc
sincosf
ico_dot_arc
ceilf
xpunsp
ico_dot_dod
unsp_type
make_unsp
ico_wk
last_n_dot
last_densit
last_unsp
ico_cube
del_cube
floor
ico_pt
last_cubus
nsc_dclm_pbc
put_atoms_in_triclinic_unitcell
floorf
_range_check
pbc_dx
nhelix
ellipticity
ahx_len
twist
ca_phi
rise
av_hblen
av_phipsi
mkbbind
rd_index
pprms
calc_hxprops
do_start_end
pr_bb
fit_ahx
do_fit
init_gemParams
fitGemRecomb
takeAwayBallistic
dumpN
fopen64
opt2parg_bSet
opt2parg_real
gmx_analyze
CopyRight
parse_common_args
opt2fn_null
opt2fn
read_xvg_time
nenum
output_env_get_print_xvgr_codes
xvgr_legend
view_all
thanx
qsort
lsq_y_ax_b
multi_regression
analyse_corr
lsq_y_ax_b_error
compute_derivative
output_env_get_xvg_format
gmx_anaeig
ftp2fn_null
ftp2fn
fn2bTPX
ftp2bSet
fn2ftp
read_xvg
proj_unit
__strdup
open_trx
gmx_rmpbc_init
gmx_rmpbc_done
gmx_rmpbc
write_trx
close_trx
reset_x
output_env_get_time_factor
output_env_get_xvgr_tlabel
init_t_atoms
__strcat_chk
free_t_atoms
__strcpy_chk
strrchr
get_index
read_tps_conf
write_sto_conf
__isoc99_scanf
gmx_g_angle
opt2bSet
do_view
gmx_bond
gmx_stats_init
gmx_stats_add_point
gmx_stats_get_npoints
gmx_stats_get_ase
gmx_stats_done
gmx_bundle
read_first_frame
gmx_rmpbc_trxfr
output_env_conv_time
acos
write_trxframe
read_next_frame
xvgr_world
make_chi_ind
gmx_chi
get_stx_coordnum
read_stx_conf
get_strings
write_pdbfile
write_xpm3
pr_energy
cp_index
mc_optimize
getenv
rando
gather
_gmx_error
jp_same
read_whole_trj
gmx_cluster
read_xpm_matrix
output_env_get_time_invfactor
matrix2real
rmsdev
fputs
output_env_get_time_unit
write_xpm_split
output_env_conv_times
memcpy
strchr
strcpy
calc_rm_cm
build_res_index
find_res_end
debug_strcmp
find_next_match_atoms_in_res
find_first_atom_in_res
find_matching_names
gmx_confrms
write_hconf_p
rm_gropbc
ftp2ext
gmx_covar
write_sto_conf_indexed
gmx_ctime_r
getcwd
calc_box_center
gmx_current
compare
get_electrons
fgets
center_coords
calc_electron_density
bsearch
calc_density
plot_density
gmx_density
__ctype_toupper_loc
read_top
gmx_densmap
gmx_dih
init_rama
new_data
calc_nbegin
numerical_deriv
do_four
four1
gmx_dielectric
write_xvg
gmx_kinetics
gmx_spatial
ceil
gmx_fexist
strlen
is_optional
pa_val
rtrim
strcat
is_output
make_backup
ltrim
rename
remove
strncmp
gmx_tune_pme
gettimeofday
feof
GromacsVersion
ShortProgram
read_tpx_state
eel_names
evdw_names
max_cutoff
write_tpx_state
calc_grid
read_checkpoint_simulation_part
do_gkr
gmx_nint
acosf
read_mu_from_enx
do_enx
gmx_step_str
calc_eps
check_times
jacobi
gmx_stats_get_average
open_enx
do_enxnms
dipole_atom2molindex
gmx_dipoles
read_tpx_top
tpcomp
ntop
interaction_function
calc_disres_R_6
gmx_disre
init_par
gmx_log_open
read_tpxheader
read_tpx
gmx_mtop_generate_local_top
init_disres
cluster_index
init_mdatoms
atoms2md
update_mdatoms
mk_forcerec
init_forcerec
init_nrnb
gmx_parallel_env_initialized
gmx_finalize
gmx_log_close
yesno_names
gmx_mtop_global_atoms
mk_graph
gmx_dist
gmx_dyndom
mult_matrix
print_m4
m4_op
gmx_enemat
get_lines
egrp_nm
close_enx
gmx_strncasecmp
gmx_energy
stdin
fgets2
find_block_id_enxframe
gmx_mtop_atominfo_global
xvgr_new_dataset
gmx_strdup
xvgropen_type
xvgr_subtitle
calc_lie
gmx_lie
gmx_filter
calc_xcm
calc_gyro
principal_comp
calc_gyro_z
gmx_gyrate
sub_xcm
gmx_rmpbc_copy
calc_h2order
h2order_plot
gmx_h2order
pbc_correct_gem
memset
gmx_hbond
write_xpm_m
hxtypenames
dump_ahx
dump_otrj
write_gms_ndx
gmx_helix
dist_plot
output_env_get_time_label
find_residues
dump_res
gmx_mindist
check_index
init_corr
printmol
gmx_stats_get_point
gmx_stats_get_ab
corr_loop
bRmod_fd
do_corr
gmx_msd
gmx_morph
rmsdev_ind
gmx_nmeig
gmx_mtxio_read
gmx_sparsematrix_destroy
gmx_nmens
make_seed
calc_order
write_bfactors
gmx_order
init_index
calc_principal_axes
gmx_principal
gmx_polystat
p_integrate
calc_potential
plot_potential
gmx_potential
gmx_rama
xvgr_line_props
xvgr_view
guess_ePBC
max_cutoff2
epbc_names
gmx_rdf
do_scattering_intensity
orient_princ
gmx_rms
calc_similar_ind
correlate_aniso
print_dir
gmx_rmsf
gmx_rotacf
gmx_saltbr
add_rec
do_conect
connelly_plot
t_atoms_set_resinfo
put_symtab
calc_radius
sas_plot
gmx_atomprop_init
gmx_atomprop_query
gmx_atomprop_destroy
gmx_sas
add_grp
gmx_ana_indexmap_update
gmx_select
gmx_ana_traj_create
gmx_ana_set_nanagrps
parse_trjana_args
gmx_ana_get_nanagrps
gmx_ana_get_anagrps
gmx_ana_init_coverfrac
gmx_ana_get_topology
gmx_ana_indexmap_init
gmx_ana_get_grpnames
xvgr_selections
new_blocka
gmx_ana_do
write_index
get_a_line
rms_diff
gmx_rmsdist
nframes_read
gmx_rotmat
calc_fit_R
do_fit_ndim
sgangle_plot
sgangle_plot_single
gmx_sgangle
gmx_sorient
spol_atom2molindex
gmx_spol
gmx_tcaf
kset_c
gmx_traj
write_trxframe_indexed
m_inv_gen
gmx_velacc
gmx_helixorient
gmx_clustsize
clear_trxframe
gmx_mtop_atomnr_to_atom
res_ndx
res_natm
gmx_mdmat
searchOrderedTable
setup_tab
read_pdo_header
read_pdo_data
enforceEqualWeights
tabulated_pot
setup_acc_wham
calc_profile
calc_z
cyclicProfByWeightedCorr
prof_normalization_and_unit
getRandomIntArray
copy_pullgrp_to_synthwindow
calc_cummulants
searchCummulant
create_synthetic_histo
print_histograms
do_bootstrapping
srand
whaminFileType
read_wham_in
pdo_open_file
popen
pdo_close_file
pclose
read_pdo_files
read_tpr_header
epull_names
epullg_names
dist_ndim
read_pull_xf
read_tpr_pullxf_files
gmx_wham
complex_mult
gmx_sham
gmx_warning
gmx_nmtraj
strtod
strtol
check_trn
do_trunc
gmx_fio_getfp
gmx_fio_ftell
gmx_ftell
gmx_fseek
truncate64
gmx_trjconv
init_top
ftp2desc
reset_x_ndim
set_trxframe_ePBC
put_atoms_in_box
_IO_getc
abort
prec2ndec
gmx_conect_generate
put_atoms_in_compact_unitcell
__strncat_chk
trx_get_fileio
put_atom_in_box
write_g96_conf
gmx_trjcat
opt2fns
gmx_fio_getftp
gmx_fio_getxdr
xdr_xtc_get_last_frame_time
xtc_seek_time
gmx_fio_seek
gmx_trjorder
get_params
init_warning
read_inpfile
get_eenum
get_ereal
get_estr
write_inpfile
done_warning
diff_maps
matelmt_cmp
leg_discrete
black
ps_rgb
ps_strfont
ps_ctext
ps_moveto
ps_setorigin
ps_fillbox
ps_box
ps_unsetorigin
ps_moverel
leg_continuous
leg_bicontinuous
add_maps
xpm_mat
ps_mat
gmxlibfn
ps_open
ps_linewidth
ps_init_rgb_box
ps_init_rgb_nbox
ps_translate
ps_comment
ps_rgb_nbox
linecolors
ps_close
ps_line
ps_flip
make_axis_labels
prune_mat
zero_lines
write_combined_matrix
white
do_mat
gradient_map
gradient_mat
rainbow_map
rainbow_mat
gmx_xpm2ps
blue
calc_mass
calc_geom
center_conf
scale_conf
read_bfac
set_pdb_conf_bfac
pdb_legend
visualize_images
calc_triclinic_images
visualize_box
calc_compact_unitcell_vertices
compact_unitcell_edges
calc_rotmatrix
gmx_editconf
check_box
rotate_conf
set_pdb_wide_format
get_pdb_atomnumber
write_pdbfile_indexed
sort_molecule
rm_res_pbc
is_hydrogen
add_conf
gmx_genbox
gen_box
pbc_dx_aiuc
sort_ions
__ctype_b_loc
gmx_genion
init_calcpot
calc_pot
gmx_genconf
mkcompact
sortwater
randwater
gmx_genpr
free_enxnms
free_enxframe
bRgt
gmx_eneconv
gmx_large_int_to_int
gmx_vanhove
bPhobics
search_str
ps_font
ps_rotate
ps_arcslice
ps_color
ps_fillarcslice
wheel2
gmx_wheel
do_nsgrid
init_mtop
stupid_fill_block
stupid_fill_blocka
pr_forcerec
calc_shifts
put_charge_groups_in_box
init_neighbor_list
search_neighbours
dump_nblist
bXor
done_atom
mk_mshift
pr_rvecs
init_cr_nopar
set_state_entries
pr_inputrec
init_md
init_enerdata
do_pbc_first
done_state
replace_atom
delete_atom
cosh
read_xvg_legend
lambdas_histogram
xvgrclose
gmx_bar
log10
gmx_sumi_sim
calc_ke_part
wallcycle_start
global_stat
wallcycle_stop
gmx_bcast
gs_simlocal
calc_pres
calc_temp
correct_ekin
restore_ekinstate_from_state
calc_vcm_grp
calc_dispcorr
sum_ekin
check_cm_grp
do_stopcm_grp
accumulate_u
gmx_sumf_sim
search_string
get_mol_id
get_block
get_tpr_version
gmx_fio_checktype
gmx_fio_doe_string
gmx_fio_doe_int
gmx_fio_setprecision
gmx_fio_getname
close_tpx
set_inbox
get_mtype_list
check_types
init_ins_at
est_prot_area
init_lip
init_mem_at
init_resize
gen_rm_list
rm_group
rm_bonded
top_update
md_print_warning
check_ir_old_tpx_versions
gmx_mtop_ftype_count
do_md_membed
wcycle_set_reset_counters
init_ekindata
global_stat_init
n_flexible_constraints
init_shell_flexcon
dd_init_local_top
dd_init_local_state
dd_partition_system
update_energyhistory
do_constrain_first
construct_vsites
init_npt_vars
runtime_start
print_date_and_time
do_per_step
unshift_self
correct_box
dd_collect_state
relax_shell_flexcon
update_constraints
trotter_update
write_traj
gmx_gettime
gmx_get_stop_condition
natoms_beyond_ns_buffer
update_box
sum_dhdl
vrescale_energy
upd_mdebin
print_ebin
print_time
wcycle_get_reset_counters
wallcycle_reset_all
reset_dd_statistics_counters
update_tcouple
update_pcouple
update_coords
NPT_energy
dd_cycles_add
runtime_upd_proc
update_annealing_target_temp
upd_mdebin_step
do_force
print_ebin_header
gmx_get_signal_name
pull_print_output
write_sto_conf_mtop
runtime_end
done_mdoutf
gmx_got_usr_signal
do_pbc_mtop
split_system
pd_cg_range
pd_at_range
partdec_init_local_state
set_vsite_top
make_local_shells
dd_make_local_pull_groups
gmx_pme_finish
init_bufstate
restore_energyhistory_from_state
set_stochd_state
constr_rmsd
set_constraints
mdrunner_membed
init_parallel
can_use_allvsall
gmx_setup_nodecomm
wallcycle_init
gmx_bcast_sim
bcast_state_setup
init_dihres
init_vsite
do_pbc_first_mtop
construct_vsites_mtop
signal_handler_install
init_pull
init_constraints
dd_init_bondeds
set_dd_parameters
setup_dd_grid
finish_run
init_domain_decomposition
make_dd_communicators
set_over_alloc_dd
bcast_state
gmx_pme_init
gmx_pmeonly
opt2fn_master
gmx_fexist_master
load_checkpoint
calc_ewaldcoeff
init_orires
finish_pull
init_QMMMrec
gmx_pppm_init
gmx_membed
add_suffix_to_output_names
tMPI_Get_recommended_nthreads
gmx_rng_init
gmx_rng_uniform_real
gmx_sumf
gmx_pme_error
gmx_erfc
libmd.so.6
libgmx.so.6
libpthread.so.0
libdl.so.2
libm.so.6
libfftw3f.so.3
libxml2.so.2
libc.so.6
__stack_chk_fail
_edata
__bss_start
libgmxana.so.6
GLIBC_2.0
GLIBC_2.1
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.7
d$L[^_]
[^_]
d$\[^_]
d$,[^_]
[^_]
d$<[^_]
d$L[^_]
~r9u
[^_]
[^_]
VUUU
[^_]
33s?
[^_]
[^_]
d$l[^_]
d$,[^_]
d$,[^_]
d$\[^_]
d$L[^_]
[^_]
z?uE
[^_]
[^_]
[^_]
d$4[]
d$4[]
d$4[]
d$4[]
d$l[^_]
d$,[^_]
[^_]
9U$t
9M$t
[^_]
9E$}
[^_]
[^_]
9E$|
E$9E
[^_]
9M }
d$|[^_]
9E }
d$l[^_]
9U }
d$l[^_]
9M |D
19E 
9E }
[^_]
[^_]
9M,tk
9u(~Y
9U(tk
[^_]
[^_]
d$|[^_]
d$L[^_]
d$|[^_]
[^_]
[^_]
d$<[^_]
d$<[^_]
VUUU
[^_]
[^_]
~n9M
[^_]
[^_]
d$$[]
GPt=
9u,~
;E$t
[^_]
d$\[^_]
d$\[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
d$,[^_]
d$l[^_]
d$\[^_]
d$$[]
d$<[^_]
[^_]
[^_]
d$ [^]
d$ [^]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
d$\[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
vl~}
d$\[^_]
d$l[^_]
d$l[^_]
d$\[^_]
[^_]
Q,;U(|
d$L[^_]
d$l[^_]
;U t?
[^_]
d$l[^_]
Nt.xf
d$L[^_]
d$|[^_]
d$|[^_]
[^_]
zgui
[^_]
33s?
33s?
33s?
[^_]
;u$u
[^_]
d$\[^_]
[^_]
[^_]
[^_]
VUUU
zjup
[^_]
d$\[^_]
[^_]
VUUU
[^_]
[^_]
[^_]
kQD4
kQ@4
kQH4
kQL4
D$$ 
D$$ 
D$$ 
D$$ 
D$$ 
D$$ 
D$$ 
D$$ 
D$$ 
D$$ 
[^_]
Omegf
Chi1
Chi2
Chi3
Chi4
Chi5
Chi6
d$$[]
[^_]
d$l[^_]
[^_]
[^_]
[^_]
all 
[^_]
[^_]
t>9M
[^_]
[^_]
~	9M
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
E(9E
[^_]
}(9}
}(9}
[^_]
d$\[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
E$9E
[^_]
[^_]
T$ )
[^_]
d$L[^_]
d$\[^_]
d$\[^_]
d$|[^_]
[^_]
UUUU
Doma
in d
ecom
posi
tion
 grif
rese
ttin
g al
l ti
me a
nd c
ycle
 cou
nterf
Aver
age 
PME 
mesh
/for
ce l
oad:
R E 
A L 
  C 
Y C 
L E 
  A 
N D 
  T 
I M 
E   
A C 
C O 
U N 
T I 
sign
al, 
stop
ping
 at 
the 
next
    f
    
    
 -  
[^_]
} @f
mdruf
    f
:9<2
    
    
 -  
[^_]
;1u	;y
0948
[^_]
[^_]
N$;M 
[^_]
[^_]
Ed;0|
d$l[^_]
[^_]
t$~"
;U0tc
UUUU
[^_]
[^_]
[^_]
UUUU
UUUU
[^_]
[^_]
[^_]
0<	w
0<	v
zLuN
F(;F0
V$~+
;V,s
W 9M
[^_]
[^_]
}TtD
Ener
gy A
utoc
orre
latif
[^_]
W$~,
Shea
r Vi
scos
Bulk
 Vis
cosif
Auto
corr
elat
ion 
of E
nerg
y Fl
uctu
atiof
zfuh
[^_]
p890t3
VUUU
VUUU
;0}#
Samp
[^_]
[^_]
d$l[^_]
[^_]
[^_]
VUUU
E ;0
[^_]
Wate
r or
ient
atio
n wi
th r
espe
ct t
o no
rmal
[^_]
[^_]
d$$[]
d$\[^_]
d$\[^_]
d$l[^_]
<Ot$
d$|[^_]
}]9:u
d$\[^_]
d$\[^_]
[^_]
[^_]
[^_]
33s?
33s?
33s?
[^_]
33s?
33s?
d$$^_]
~	9E
;7t/
tL;u
xt;O
gfff
[^_]
;Q4}b
F`;<
[^_]
Wt9r
[^_]
d$<[^_]
gfff
[^_]
[^_]
9u,~
[^_]
9UDtk
[^_]
d$<[^_]
T$81
[^_]
d$L[^_]
d$L[^_]
d$L[^_]
d$L[^_]
d$l[^_]
[^_]
d$|[^_]
[^_]
[^_]
[^_]
[^_]
;yL|
;~L|
[^_]
[^_]
[^_]
[^_]
VUUU
[^_]
[^_]
;E u
[^_]
Orde
rpar
amet
ers 
Sz p
er a
Orde
rpar
amet
ers 
per 
atom
 per
 slif
Orde
r te
nsor
 dia
gona
l el
emenf
Deut
eriu
m or
der 
para
metef
[^_]
Scd 
orde
r pa
rame
ters
Orde
rpar
amet
ers 
per 
atom
 per
 slif
[^_]
[^_]
[^_]
d$<[^_]
[^_]
d$L[^_]
u09u
[^_]
;}0u
Elec
tros
tati
c Po
tent
Char
ge D
istr
ibut
Elec
tric
 Fief
[^_]
[^_]
[^_]
d$L[^_]
d$\[^_]
9u8}
8atL
[^_]
[^_]
[^_]
[^_]
VUUU
VUUU
t79M
[^_]
d$L[^_]
[^_]
[^_]
VUUU
[^_]
VUUU
;7}j
[^_]
d$\[^_]
F09E
[^_]
[^_]
[^_]
G(9p
[^_]
D$ +
[^_]
[^_]
d$,[^_]
[^_]
UUUU
UUUU
[^_]
d$<[^_]
[^_]
Dist
ance
 bet
ween
 pla
ne a
nd f
irst
 ato
m of
 vec
Dist
ance
 bet
ween
 pla
ne a
nd s
econ
d at
om o
f ve
ctor
[^_]
Dist
ance
 bet
ween
 pla
ne a
nd f
irst
 ato
m of
 vec
Dist
ance
 bet
ween
 pla
ne a
nd s
econ
d at
om o
f ve
ctor
[^_]
Z-axf
[^_]
[^_]
d$l[^_]
[^_]
(v f
[^_]
[^_]
d$l[^_]
[^_]
[^_]
d$L[^_]
[^_]
[^_]
[^_]
mols
;<1|
[^_]
d$<[^_]
d$L[^_]
[^_]
[^_]
[^_]
[^_]
d$\[^_]
[^_]
[^_]
[^_]
[^_]
d$\[^_]
d$l[^_]
d$l[^_]
8^_]
d$l[^_]
[^_]
[^_]
[^_]
[^_]
/bin
/gun
d$l[^_]
[^_]
d$,[^_]
[^_]
d$|[^_]
[^_]
d$L[^_]
[^_]
[^_]
[^_]
48;t8
t/~H
[^_]
[^_]
[^_]
[^_]
;1})
gfff
gfff
z|uz
[^_]
gfff
<Lu0
[^_]
[^_]
[^_]
[^_]
z&u$
[^_]
d$L[^_]
d$\[^_]
[^_]
d$<[^_]
[^_]
[^_]
d$|[^_]
d$l[^_]
d$<[^_]
[^_]
[^_]
[^_]
[^_]
d$,[^_]
[^_]
[^_]
D$$1
d$L[^_]
d$L[^_]
d$\[^_]
d$l[^_]
d$L[^_]
R$t>
[^_]
[^_]
D$$ 
D$$ 
D$$ 
D$$ 
D$$ 
D$$ 
D$$ 
D$$ 
D$$ 
D$$ 
D$$ 
[^_]
[^_]
z!u%
[^_]
[^_]
[^_]
z6u:
[^_]
[^_]
d$l[^_]
[^_]
[^_]
Gene
rate
d by
 gen
d$|[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
B ~9
[^_]
gfff
[^_]
d$L[^_]
fff?
fff?
fff?
d$l[^_]
gfff
fff?
fff?
d$\[^_]
[^_]
[^_]
[^_]
d$0[^_]
[^_]
[^_]
d$<[^_]
d$l[^_]
d$4[^_]
d$D[^_]
G ~Y
[^_]
[^_]
[^_]
[^_]
d$L[^_]
[^_]
R09Q
[^_]
v0;w
VH~]
3WH3GL	
[^_]
d$<[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
d$<[^_]
d$,[^_]
[^_]
[^_]
d$l[^_]
d$\[^_]
[^_]
[^_]
[^_]
9G,~
[^_]
d$(^_]
[^_]
B89M
Qd)Al)
xh)P<
[^_]
9J4~4
d$\[^_]
[^_]
[^_]
z u&
~	;M$
@(;E$}[
x(9x
z"u'
z!u#
D$<	
D$ 1
D$ 1
D$<	
D$ 1
D$ 1
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
d$0^_]
d$0^_]
d$0^_]
um;u
rT9E
/builddir/build/BUILD/gromacs-4.5.1/src/tools/autocorr.c
Averaging correlation functions
Evaluating integral: n = %d (file %s, line %d)
Unknown mode in do_autocorr (%d)
COR: Correlation time (plain integral from %6.3f to %6.3f ps) = %8.5f ps
COR: Relaxation times are computed as fit to an exponential:
COR: Fit to correlation function from %6.3f ps to %6.3f ps, results in a
COR:%11s%11s%11s%11s%11s%11s%11s
Length of the ACF, default is half the number of frames
HIDDENUse fast fourier transform for correlation function
HIDDENNumber of frames between time origins for ACF when no FFT is used
Order of Legendre polynomial for ACF (0 indicates none)
Skip N points in the output file of correlation functions
Time where to begin the exponential fit of the correlation function
Time where to end the exponential fit of the correlation function, -1 is until the end
Incompatible options bCos && bVector (%s, %d)
Can't combine mode %lu with FFT, turning off FFT
Incompatible mode bits: normal and vector (or Legendre)
Will calculate %s of %d thingies for %d frames
bAver = %s, bFour = %s bNormalize= %s
mode = %lu, dt = %g, nrestart = %d
Using FFT to calculate %s, #points for FFT = %d
WARNING: setting number of restarts to 1
Starting do_ac_core: nframes=%d, nout=%d, nrestart=%d,mode=%lu
j: %d, k: %d, xj:(%g,%g,%g), xk:(%g,%g,%g)
Invalid mode (%d) in do_ac_core
Correlation time (integral over corrfn): %g (ps)
CORRelation time (integral over corrfn %d): %g (ps)
Average correlation time %.3f Std. Dev. %.3f Error %.3f (ps)
ACF data structures have not been initialised. Call add_acf_pargs
nCos = %d, %s %d
Before normalization
%5d  %10f
After normalization
%10d  %10g
%10.3f  %10.5f
cfour
c1diag%d.xvg
c1dfout%d.xvg
c1off%d.xvg
c1ofout%d.xvg
 a2 ()
 a3 (ps)
COR:
COR:   %s
 a1 (ps)
Sum (ps)
Tail Value
Integral
Fit from
COR:%11.4e%11.4e%11.4e%11.4e
 %11.4e
-acflen
-normalize
Normalize ACF
-fftcorr
-nrestart
-fitfn
Fit function
-ncskip
-beginfit
-endfit
ACF data not initialized yet
autocorrelation
csum
ctmp
Thingie %d
Time (ps)
time (ps)
item
Correlation times
ct-distr.xvg
%5d  %.3f
Mb`?
<exp_5_parm called: x = %10.3f  y = %10.3f
a = ( %8.3f  %8.3f  %8.3f  %8.3f  %8.3f)
There are %d points to fit %d vars!
Fit to function %d from %g through %g, dt=%g
/builddir/build/BUILD/gromacs-4.5.1/src/tools/expfit.c
j= %d, i= %d, x= %g, y= %g, dy= %g
Not enough data points for fitting!
fitfn = %d, should be in 0..%d (%s,%d)
Will keep parameters fixed during fit procedure: %d
%4s  %10s  %10s  %10s  %10s  %10s
nparm = %d in file %s, line %d
FIT: # points used in fit is: %d
FIT: ------------------------------------------------------------
FIT: %8.3g +/- %8.3g%9.4g +/- %8.3g%8.3g +/- %8.3g
FIT: Integral (calc with fitted function) from %g ps to inf. is: %g
# parm0 = %g, parm1 = %g, parm2 = %g
Will fit data from %g (ps) to %g (ps).
# of data points used in the fit is : %d
y = a2 exp(-x/a1) + (1-a2) exp(-x/a3)
y = exp(-v) (cosh(wv) + 1/w sinh(wv)), v = x/(2 a1), w = sqrt(1 - a2)
y = a1 exp(-x/a2) +  a3 exp(-x/a4) + a5
y = a1 exp(-x/a2) +  a3 exp(-x/a4) + a5 exp(-x/a6) + a7
y = a1 exp(-x/a2) +  a3 exp(-x/a4) + a5 exp(-x/a6) + a7 exp(-x/a8) + a9
y = a2*ee(a1,x) + (1-a2)*ee(a2,x)
dparm
covar
lista
covar[i]
alpha[i]
%d parameter fit
Lambda
chi^2
Step
%4d  %10.5e  %10.5e  %10.5e
Fit failed!
parm2 (ps)    
parm1 (ps)   
parm0     
FIT: %21s%21s%21s
test%d.xvg
C(t) + Fit to C(t)
n= %d, i= %d, x= %g, y= %g
Fitted to y=exp(a+bx):
a = %10.5f	 b = %10.5f
Fitted to y=Aexp(-x/tau):
A  = %10.5f	 tau  = %10.5f
dA = %10.5f	 dtau = %10.5f
none
aexp
exp_exp
exp5
exp7
exp9
no fit
y = exp(-x/a1)
y = a2 exp(-x/a1)
z>/builddir/build/BUILD/gromacs-4.5.1/src/tools/polynomials.c
Legendre polynomials of order %d are not supported, %s %d
pANumerical Recipes run-time error...
allocation failure in rvector()
allocation failure 1 in matrix1()
allocation failure 2 in matrix1()
allocation failure in ivector()
Bad LISTA permutation in MRQMIN-1
Bad LISTA permutation in MRQMIN-2
...now exiting to system...
GAUSSJ: Singular Matrix-1
irow = %d, icol = %d
  %10.3f
GAUSSJ: Singular Matrix-2
?%s%s.xvg
Printing %s  
rot_occ[k]
tr_h
tr_f
Number of transitions: %s
# transitions/timeframe
%10.3f  %10d
Transition time: %s
dlist
xity
index = %d, data[%d] = %g
chi_prtrj
Probability
Cumulative Rotamers
# Counts
cumulative rotamer
chi product for
chiproduct
chi_prhist
histo-chiprod%s.xvg
  and %s  
@ xaxis tick on
@ xaxis tick major 1
@ type xy
%5d  %10d
%5d  %10g
%5s 
  %10d
Empty histogram!
angles[cur]
angles[prev]
dih[i]
*time
*trans_frac
*aver_angle
angle %d fr %d = %g
Now calculating transitions...
/builddir/build/BUILD/gromacs-4.5.1/src/tools/anadih.c
Total number of transitions: %10d
Time between transitions:    %10.3f ps
WARNING: not all dihedrals found in topology (only %d out of %d)!
No points in histogram (%s, %d)
Min data: %10g  Max data: %10g
Histogramming: ndata=%d, nhisto=%d, minx=%g,maxx=%g,dx=%g
Now calculating Chi product trajectories...
cumulative rotamer distribution for %s
Angle[0]=%g, costh=%g, index0 = %d, %d, %d
angle (%f) index out of range (0..%d) : %d
/builddir/build/BUILD/gromacs-4.5.1/src/tools/pp2shift.c
 *** Chemical shifts from the chemical shift index ***
x_phi
y_psi
newdata
newdata[i]
Error reading from file %s
sd->data
sd->data[i]
ca-shift.dat
cb-shift.dat
ha-shift.dat
co-shift.dat
Wishart98a
delta Cb
delta CO
delta Ha
delta Ca
%12s  %10s  %10s  %10s  %10s
%12s  %10g  %10g  %10g  %10g
4C  %6.2f
  %6.2f  %6.2f
HISA
HISB
There are %d dihedrals
Dihedral: 
 Phi  
 Psi  
Chi%d  
Number:   
%4d  
Residue %s
   Phi [%5d,%5d,%5d,%5d]
   Psi [%5d,%5d,%5d,%5d]
 Omega [%5d,%5d,%5d,%5d]
   Chi%d[%5d,%5d,%5d,%5d]
\begin{table}[h]
\begin{tabular}{|l|l|}
\hline
Residue	&$\chi_%d$	\\
%s	&\HL{%d}	\\
%s	&\%d	\\
\end{tabular}
\end{table}
/builddir/build/BUILD/gromacs-4.5.1/src/tools/dlist.c
Could not find N atom but could find other atoms in residue %s%d
There are %d residues with dihedrals
Now printing out transitions and OPs...
Now printing out rotamer occupancies...
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
 Angle [   AI,   AJ,   AK,   AL]  #tr/ns  S^2D  
--------------------------------------------
 Angle [   AI,   AJ,   AK,   AL]  rotamers  0  g(-)  t  g(+)
--------------------------------------------
Non existant dihedral %d in file %s, line %d
\caption{Number of dihedral transitions per nanosecond}
non 
*xav
*xref
*eignr
*eigval
*eigvec
(*eigvec)[*nvec]
reference, 
/builddir/build/BUILD/gromacs-4.5.1/src/tools/eigio.c
Read %smass weighted reference structure with %d atoms from %s
Eigenvectors in %s were determined without fitting
WARNING: %s does not start with t=0, which should be the average structure. This might not be a eigenvector file. Some things might go wrong.
Read %smass weighted average/minimum structure with %d atoms from %s
Read %d eigenvectors (for %d atoms)
Writing %saverage structure & eigenvectors %d--%d to %s
?/builddir/build/BUILD/gromacs-4.5.1/src/tools/cmat.c
m->erow
m->m_ind
m->mat
m->mat[i]
(*m)->m_ind
(*m)->erow
a.u.
RMS (nm)
RMS Distribution
%10g  %10d
isuppz
iwork
resid
workd
workl
select
/builddir/build/BUILD/gromacs-4.5.1/src/tools/eigensolver.c
Internal errror in LAPACK diagonalization.
Calculation Ritz values and Lanczos vectors, max %d iterations...
Iteration %4d: %3d out of %3d Ritz values converged.
Maximum number of iterations (%d) reached in Arnoldi
diagonalization, but only %d of %d eigenvectors converged.
Unspecified error from Arnoldi diagonalization:%d
Calculating eigenvalues and eigenvectors...
---> ERROR when executing line %i in file %s !
---> WARNING : line %i in file %s
/builddir/build/BUILD/gromacs-4.5.1/src/tools/nsc.c
divarc: rotation axis of length %f
divarc: vector 1 of sq.length %f
divarc: vector 2 of sq.length %f
ico_dot_arc: error in formula for tessalation level (%d->%d, %d)
ico_dot: tn exceeds dimension of xus
ico_dot: n_dot(%d) and tn(%d) differ
ico_dot_dod: error in formula for tessalation level (%d->%d, %d)
make_unsp: mode %c%d not allowed
nsc_dclm: no surface atoms selected
nsc_dclm: n_dot=%5d ra2max=%9.3f %9.3f
Can not invert matrix, determinant = %e
/builddir/build/BUILD/gromacs-4.5.1/include/vec.h
Atom %d cell index %d. x = (%8.3f,%8.3f,%8.3f) fc = (%8.3f,%8.3f,%8.3f)
neighbour list calculated/box(xyz):%d %d %d
box %6d : atoms %4d-%4d    %5d
i_ac=%d, dotarea=%8.3f, aisq=%8.3f
---> Execution stopped !
 ...!
ASIN : invalid argument %f
ico_wk
nsc_dclm: n_dot=%5d %9.3f
atom_area
nbox = %d, %d, %d
wkatm
wkat1
wkdot
wkbox
wknb
wkat1[iat_xx]
atom %5d on place %5d
list place %5d by atom %7d
wkatm[jat]
iiat
wkatm[iat]
area=%8.3f
MbP?
?)rh
?0sT
!)@Checking group %s
There are %d residues
rnr==0
%10g  
helix from: %d through %d
Please select a group containing the entire backbone
/builddir/build/BUILD/gromacs-4.5.1/src/tools/hxprops.c
There are %d complete backbone residues (from %d to %d)
%3s %3s %3s %3s %3s %7s %7s %7s %7s %7s %3s
%3d %3d %3d %3d %3d %7.2f %7.2f %7.3f %7.3f %7.3f %3s
?ffffff
?ffffff
?Need at least 3 Calphas to fit to, (now %d)...
/builddir/build/BUILD/gromacs-4.5.1/src/tools/fitahx.c
nmass=%d, nca=%d
?/builddir/build/BUILD/gromacs-4.5.1/src/tools/geminate.c
Diffusion coefficient is %f A^2/ps
Time between frames is non-positive!
Sorry, can't do reversible geminate recombination without gsl. Recompile using --with-gsl.
Sorry, can't take away ballistic component without gsl. Recompile using --with-gsl.
@ type XY
@ xaxis label "Frame"
@ yaxis label "N"
@ s0 line type 3
%-10i %-g
FWill fit to the following function:
Using two columns as y and sigma values
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_analyze.c
Warning: don't know how to initialize the parameters
Making distributions with %d bins
HIDDENThe derivative is the difference over # points
Integrate data function(s) numerically using trapezium rule
Start averaging the integral from here
Interpret second data set as error in the y values for integrating
Perform a linear regression analysis on the data. If -xydy is set a second set will be interpreted as the error bar in the Y value. Otherwise, if multiple data sets are present a multilinear regression will be performed yielding the constant A that minimize chi^2 = (y - A0 x0 - A1 x1 - ... - AN xN)^2 where now Y is the first data set in the input file and xi the others. Do read the information at the option [TT]-time[tt].
Do a Luzar and Chandler analysis on a correlation function and related as produced by g_hbond. When in addition the -xydy flag is given the second and fourth column will be interpreted as errors in c(t) and n(t).
Temperature for the Luzar hydrogen bonding kinetics analysis
Time (ps) from which to start fitting the correlation functions in order to obtain the forward and backward rate constants for HB breaking and formation
Time (ps) where to stop fitting the correlation functions in order to obtain the forward and backward rate constants for HB breaking and formation. Only with -gem
If >= 0, the tail of the ACF will be smoothed by fitting it to an exponential function: y = A exp(-x/tau)
HIDDENMinimum number of blocks for block averaging
HIDDENResolution for the block averaging, block size increases with a factor 2^(1/#)
HIDDENAlways use a single exponential fit for the error estimate
HIDDENAllow a negative long-time correlation
HIDDENAlso plot analytical block average using a autocorrelation fit
Print the high-frequency fluctuation after filtering with a cosine filter of length #
Subtract the average before autocorrelating
Calculate one ACF over all sets
HIDDENNumber of exponentials to fit to the ultrafast component
HIDDENTime up to which the ballistic component will be fitted
Read %d sets of %d points, dt = %g
Calculating the derivative as (f[i+%d]-f[i])/(%d*dt)
Calculating the integral using the trapezium rule
Integral %d  %10.5f  +/- %10.5f
                                      std. dev.    relative deviation of
                       standard       ---------   cumulants from those of
set      average       deviation      sqrt(n-1)   a Gaussian distribition
                                                      cum. 3   cum. 4
SS%d  %13.6e   %12.6e   %12.6e      %6.3f   %6.3f
Will calculate the fluctuation over %d points
  using a filter of length %g of %d points
Set %3d filtered fluctuation: %12.6e
Overall filtered fluctuation: %12.6e
Cosine content of set %d with %.1f periods: %g
Errorbars: discarding %d points on both sides: %d%% interval
The number of points is smaller than 4, can not make an error estimate
@ subtitle "using block averaging, total time %g (%d points)"
Data set %d has strange time correlations:
the std. error using single points is larger than that of blocks of 2 points
The error estimate might be inaccurate, check the fit
Warning: tau2 is longer than the length of the data (%g)
         the statistics might be bad
a fitted parameter is negative
invalid fit:  e.e. %g  a %g  tau1 %g  tau2 %g
Will fix tau2 at the total time: %g
Will use a single exponential fit for set %d
Set %3d:  err.est. %g  a %g  tau1 %g  tau2 %g
Set %3d:  ac erest %g  a %g  tau1 %g  tau2 %g
Number of data points is less than the number of parameters to fit
.The system is underdetermined, hence no ballistic term can be found.
First time is not larger than 0, using index number as time for power fit
Power fit set %3d:  error %.3f  a %g  b %g
Fitting data to a function f(x) = ax + b
Minimizing residual chi2 = Sum_i w_i [f(x_i) - y_i]2
Error estimates will be given if w_i (sigma) values are given
Correlation coefficient = %.1f%%
Fitting %d data points in %d sets
RMS difference in derivatives is %g
Inconsistent input. I need c(t) sigma_c(t) n(t) sigma_n(t) K(t) sigma_K(t)
Will power fit up to point %d, since it is not larger than 0
g_analyze reads an ascii file and analyzes data sets.
A line in the input file may start with a time
(see option [TT]-time[tt]) and any number of y values may follow.
read when they are separated by & (option [TT]-n[tt]),
in this case only one y value is read from each line.
All lines starting with # and @ are skipped.
All analyses can also be done for the derivative of a set
All options, except for [TT]-av[tt] and [TT]-power[tt] assume that the
points are equidistant in time.[PAR]
g_analyze always shows the average and standard deviation of each
set. For each set it also shows the relative deviation of the third
and fourth cumulant from those of a Gaussian distribution with the same
Option [TT]-ac[tt] produces the autocorrelation function(s).[PAR]
Option [TT]-cc[tt] plots the resemblance of set i with a cosine of
i/2 periods. The formula is:[BR]2 (int0-T y(t) cos(i pi t) dt)^2 / int0-T y(t) y(t) dt[BR]
This is useful for principal components obtained from covariance
analysis, since the principal components of random diffusion are
Option [TT]-msd[tt] produces the mean square displacement(s).[PAR]
Option [TT]-dist[tt] produces distribution plot(s).[PAR]
Option [TT]-av[tt] produces the average over the sets.
Error bars can be added with the option [TT]-errbar[tt].
The errorbars can represent the standard deviation, the error
(assuming the points are independent) or the interval containing
90% of the points, by discarding 5% of the points at the top and
Option [TT]-ee[tt] produces error estimates using block averaging.
A set is divided in a number of blocks and averages are calculated for
each block. The error for the total average is calculated from
the variance between averages of the m blocks B_i as follows:
error^2 = Sum (B_i - <B>)^2 / (m*(m-1)).
These errors are plotted as a function of the block size.
Also an analytical block average curve is plotted, assuming
that the autocorrelation is a sum of two exponentials.
The analytical curve for the block average is:[BR]
f(t) = sigma sqrt(2/T (  a   (tau1 ((exp(-t/tau1) - 1) tau1/t + 1)) +[BR]
                       (1-a) (tau2 ((exp(-t/tau2) - 1) tau2/t + 1)))),[BR]where T is the total time.
a, tau1 and tau2 are obtained by fitting f^2(t) to error^2.
When the actual block average is very close to the analytical curve,
the error is sigma*sqrt(2/T (a tau1 + (1-a) tau2)).
The complete derivation is given in
B. Hess, J. Chem. Phys. 116:209-217, 2002.[PAR]
Option [TT]-bal[tt] finds and subtracts the ultrafast "ballistic"
component from a hydrogen bond autocorrelation function by the fitting
of a sum of exponentials, as described in e.g.
O. Markovitch, J. Chem. Phys. 129:084505, 2008. The fastest term
is the one with the most negative coefficient in the exponential,
or with [TT]-d[tt], the one with most negative time derivative at time 0.
[TT]-nbalexp[tt] sets the number of exponentials to fit.[PAR]
Option [TT]-gem[tt] fits bimolecular rate constants ka and kb
(and optionally kD) to the hydrogen bond autocorrelation function
according to the reversible geminate recombination model. Removal of
the ballistic component first is strongly adviced. The model is presented in
O. Markovitch, J. Chem. Phys. 129:084505, 2008.[PAR]
Option [TT]-filter[tt] prints the RMS high-frequency fluctuation
of each set and over all sets with respect to a filtered average.
The filter is proportional to cos(pi t/len) where t goes from -len/2
to len/2. len is supplied with the option [TT]-filter[tt].
This filter reduces oscillations with period len/2 and len by a factor
of 0.79 and 0.33 respectively.[PAR]
Option [TT]-g[tt] fits the data to the function given with option
Option [TT]-power[tt] fits the data to b t^a, which is accomplished
by fitting to a t + b on log-log scale. All points after the first
zero or negative value are ignored.[PAR]Option [TT]-luzar[tt] performs a Luzar & Chandler kinetics analysis
on output from [TT]g_hbond[tt]. The input file can be taken directly
from [TT]g_hbond -ac[tt], and then the same result should be produced.
fitparm
Starting parameters:
a%-2d = %12.5e
No solution was found
 %g  %g
-time
Expect a time in the input
First time to read from set
Last time to read from set
Read # sets separated by &
Use the derivative
Binwidth for the distribution
-errbar
Error bars for -av
-integrate
-aver_start
-xydy
-regression
-luzar
-temp
-fitstart
-fitend
-smooth
-nbmin
-resol
-eeexpfit
-eenlc
-eefitac
-filter
-power
Fit data to: b t^a
-subav
-oneacf
-nbalexp
-baltime
graph
autocorr
-msd
coscont
distr
errest
-bal
ballisitc
fitlog
Integral %10.3f +/- %10.5f
MSD (nm\S2\N)
Mean square displacement
 %g %8g
%d, time=%g
cosine content
set / half periods
Cosine content
 %d %g
@TYPE xydydy
@TYPE xydy
 %g %g
Error estimate
Block size (time)
Error estimates
fitsig
set %d tau1 estimate %f
@ legend string %d "av %f"
@ legend string %d "ee %6g"
%g %g %g
C'(t)
Hydrogen Bond Autocorrelation
ctd[set]
  %g
(use option -xydy).
Chi2                    = %g
S (Sqrt(Chi2/(n-2))     = %g
a    = %g +/- %g
b    = %g +/- %g
a    = %g
b    = %g
xx[j]
chi2 = %g
xx[i]
Spoel2006b
Not doing anything. Sorry.
stddev
Multiple sets can also be
(option [TT]-d[tt]).[PAR]
standard deviation.[PAR]
pure cosines.[PAR]
the bottom.[PAR]
[TT]-fitfn[tt].[PAR]
Ac'(t)
?/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_anaeig.c
Calculating inner-product matrix of %dx%d eigenvectors
Will compare the covariance matrices using %d dimensions
Trace of the two matrices: %g and %g
this is %d%% and %d%% of the total trace
Square root of the traces: %g and %g
The overlap of the covariance matrices:
Calculating overlap between eigenvectors of set 2 with eigenvectors
@ subtitle "using %d eigenvectors of trajectory 1"
@ xaxis ticklabel start type spec
@ yaxis ticklabel start type spec
First eigenvector for analysis (-1 is select)
Last eigenvector for analysis (-1 is till the last)
Only analyse every nr-th frame
Maximum for projection of the eigenvector on the average structure, max=0 gives the extremes
Number of frames for the extremes output
Split eigenvector projections where time is zero
Compute entropy according to the Quasiharmonic formula or Schlitter's method.
Temperature for entropy calculations
Number of eigenvalues to skip when computing the entropy due to the quasi harmonic approximation. When you do a rotational and/or translational fit prior to the covariance analysis, you get 3 or 6 eigenvalues that are very close to zero, and which should not be taken into account when computing the entropy.
Warning: number of eigenvalues in xvg file (%d) does not mtch trr file (%d)
Replacing eigenvalue %d. From trr: %10g, from xvg: %10g
i = %5d w = %10g lam = %10g hwkT = %10g dS = %10g
The Entropy due to the Quasi Harmonic approximation is %g J/mol K
The Entropy due to the Schlitter formula is %g J/mol K
Need a second eigenvector file to do this analysis.
Dimensions in the eigenvector files don't match
Note: the structure in %s should be the same
      as the one used for the fit in g_covar
Select the index group that was used for the least squares fit in g_covar
Select an index group of %d elements that corresponds to the eigenvectors
you selected a group with %d elements instead of %d
RMSD (without fit) between the two average structures: %.3f (nm)
Select eigenvectors for output, end your selection with 0
%d eigenvectors selected for output
Writing eigenvector components to %s
black: total, red: x, green: y, blue: z
Selected vector %d is larger than the number of eigenvalues (%d)
Writing a filtered trajectory to %s using eigenvectors
the number of atoms in your trajectory (%d) is larger than the number of atoms in your structure file (%d)
projection on eigenvectors (%s)
projection on eigenvector %d (%s)
You have selected less than 3 eigenvectors
You have selected four or more eigenvectors:
fourth eigenvector will be plotted in bfactor field of pdb file
4D proj. of traj. on eigenv. %d, %d, %d and %d
3D proj. of traj. on eigenv. %d, %d and %d
%-6s%5u  %-4.4s%3.3s %c%4d%c   %8.3f%8.3f%8.3f
fourth dimension plotted as B-factor
%7d     %10.6f %10.1f %10.6f %10.1f
Writing %d frames along eigenvector %d to %s
If you want some output, set one (or two or ...) of the output file options
[TT]g_anaeig[tt] analyzes eigenvectors. The eigenvectors can be of a
covariance matrix ([TT]g_covar[tt]) or of a Normal Modes analysis
When a trajectory is projected on eigenvectors, all structures are
fitted to the structure in the eigenvector file, if present, otherwise
to the structure in the structure file. When no run input file is
supplied, periodicity will not be taken into account. Most analyses
are performed on eigenvectors [TT]-first[tt] to [TT]-last[tt], but when
[TT]-first[tt] is set to -1 you will be prompted for a selection.[PAR]
[TT]-comp[tt]: plot the vector components per atom of eigenvectors
[TT]-first[tt] to [TT]-last[tt].[PAR]
[TT]-rmsf[tt]: plot the RMS fluctuation per atom of eigenvectors
[TT]-first[tt] to [TT]-last[tt] (requires [TT]-eig[tt]).[PAR]
[TT]-proj[tt]: calculate projections of a trajectory on eigenvectors
[TT]-first[tt] to [TT]-last[tt].
The projections of a trajectory on the eigenvectors of its
covariance matrix are called principal components (pc's).
It is often useful to check the cosine content of the pc's,
since the pc's of random diffusion are cosines with the number
of periods equal to half the pc index.
The cosine content of the pc's can be calculated with the program
[TT]-2d[tt]: calculate a 2d projection of a trajectory on eigenvectors
[TT]-first[tt] and [TT]-last[tt].[PAR]
[TT]-3d[tt]: calculate a 3d projection of a trajectory on the first
three selected eigenvectors.[PAR]
[TT]-filt[tt]: filter the trajectory to show only the motion along
eigenvectors [TT]-first[tt] to [TT]-last[tt].[PAR]
[TT]-extr[tt]: calculate the two extreme projections along a trajectory
on the average structure and interpolate [TT]-nframes[tt] frames
between them, or set your own extremes with [TT]-max[tt]. The
eigenvector [TT]-first[tt] will be written unless [TT]-first[tt] and
[TT]-last[tt] have been set explicitly, in which case all eigenvectors
will be written to separate files. Chain identifiers will be added
when writing a [TT].pdb[tt] file with two or three structures (you
can use [TT]rasmol -nmrpdb[tt] to view such a pdb file).[PAR]
  Overlap calculations between covariance analysis:[BR]
  NOTE: the analysis should use the same fitting structure[PAR]
[TT]-over[tt]: calculate the subspace overlap of the eigenvectors in
file [TT]-v2[tt] with eigenvectors [TT]-first[tt] to [TT]-last[tt]
[TT]-inpr[tt]: calculate a matrix of inner-products between
eigenvectors in files [TT]-v[tt] and [TT]-v2[tt]. All eigenvectors
of both files will be used unless [TT]-first[tt] and [TT]-last[tt]
have been set explicitly.[PAR]
When [TT]-v[tt], [TT]-eig[tt], [TT]-v2[tt] and [TT]-eig2[tt] are given,
a single number for the overlap between the covariance matrices is
generated. The formulas are:[BR]
        difference = sqrt(tr((sqrt(M1) - sqrt(M2))^2))[BR]
normalized overlap = 1 - difference/sqrt(tr(M1) + tr(M2))[BR]
     shape overlap = 1 - sqrt(tr((sqrt(M1/tr(M1)) - sqrt(M2/tr(M2)))^2))[BR]
where M1 and M2 are the two covariance matrices and tr is the trace
of a matrix. The numbers are proportional to the overlap of the square
root of the fluctuations. The normalized overlap is the most useful
number, it is 1 for identical matrices and 0 when the sampled
subspaces are orthogonal.[PAR]
When the [TT]-entropy[tt] flag is given an entropy estimate will be
computed based on the Quasiharmonic approach and based on
mat[x1]
run 2
run 1
in.prod.
Eigenvector inner-products
  normalized:  %.3f
       shape:  %.3f
Overlap
Eigenvectors of trajectory 2
Subspace overlap
%5d  %5.3f
@ autoscale onread none
@ with g%d
@ g%d on
@ title "%s"
@ subtitle "%s"
@ xaxis  label "%s"
@ xaxis  ticklabel off
@ world xmin %g
@ world xmax %g
@ world ymin %g
@ world ymax %g
@ view xmin 0.15
@ view xmax 0.85
@ view ymin %g
@ view ymax %g
@ yaxis  label "%s"
@ xaxis tick major %g
@ xaxis tick minor %g
@ xaxis ticklabel start %g
@ yaxis tick major %g
@ yaxis tick minor %g
@ yaxis ticklabel start %g
@ zeroxaxis bar on
@ zeroxaxis bar linestyle 3
%10.4f %10.5f
-first
-last
-skip
-max
-nframes
-split
-entropy
-nevskip
eigenvec
eigenvec2
eigenval
-eig2
eigenval2
-comp
eigcomp
-rmsf
eigrmsf
-proj
2dproj
3dproj.pdb
-filt
filtered
-extr
extreme.pdb
-over
-inpr
inprod
eigval1
xvgdata[j]
xvgdata
Read %d eigenvalues from %s
eigval[%d] = %g
n = %d, nskip = %d kteh = %g
eigval2
w_rls
xrefp
u\S1/2\Nnm
iout
Error reading user input
outvec
ylabel
vec %d
y[g]
y[g][s]
Atom number
Eigenvector components
Writing rmsf to %s
RMS fluctuation (nm) 
all_at
inprod[i]
xread
2D projection of trajectory
%10.5f %10.5f
%8.4f%8.4f
HEADER    %s
REMARK    %s
ATOM
CONECT%5d%5d
Maximum
Minimum
eigenvector
%11s %17s %17s
%11s %10s %10s %10s %10s
imin
imax
%%d%s
([TT]g_nmeig[tt]).[PAR]
[TT]g_analyze[tt].[PAR]
in file [TT]-v[tt].[PAR]
Schlitter's formula.
@ffffff
?333333
]r2<
@angle triplets
dihedral quadruplets
-type
Type of angle to analyse
-all
-binwidth
-periodic
-chandler
-avercorr
angdist
angaver
dihfrac
dihtrans
trhisto
dihcorr
Mu2005a
angstat
Average Angle: %s
Angle (degrees)
%10.5f  %8.3f
Trans fraction: %s
Fraction
%10.5f  %10.3f
Average trans fraction: %g
 < angle >  = %g
< angle^2 > = %g
Std. Dev.   = %g
Angle Distribution: %s
Dihedral Distribution: %s
Order parameter S^2 = %g
Degrees
@with g0
@    world xmin -180
@    world xmax  180
@    world ymin 0
@    world ymax %g
@    xaxis  tick major 60
@    xaxis  tick minor 30
@    yaxis  tick major 0.005
%10g  %10f
dihedral
improper
ryckaert-bellemans
Plot all angles separately in the averages file, in the order of appearance in the index file.
binwidth (degrees) for calculating the distribution
Print dihedral angles modulo 360 degrees
Use Chandler correlation function (N[trans] = 1, N[gauche] = 0) rather than cosine correlation function. Trans is defined as phi < -60 || phi > 60.
Average the correlation functions for the individual angles/dihedrals
Can not combine angles with trn dump
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_angle.c
number of index elements not multiple of %d, these can not be %s
Warning: calculating fractions as defined in this program
makes sense for Ryckaert Bellemans dihs. only. Ignoring -of
Can only do transition, fraction or correlation
on dihedrals. Select -d
There are %d dihedrals. Will fill %d atom positions with cos/sin
Not enough frames for correlation function
Dihedral Autocorrelation Function
Found points in the range from %d to %d (max %d)
@    subtitle "average angle: %g\So\N"
@    yaxis  tick minor 0.0025
Counting transitions only works for dihedrals with multiplicity 3
g_angle computes the angle distribution for a number of angles
or dihedrals. This way you can check whether your simulation
is correct. With option -ov you can plot the average angle of
a group of angles as a function of time. With the -all option
the first graph is the average, the rest are the individual angles.[PAR]
With the -of option g_angle also calculates the fraction of trans
dihedrals (only for dihedrals) as function of time, but this is
probably only fun for a selected few.[PAR]
With option -oc a dihedral correlation function is calculated.[PAR]
It should be noted that the indexfile should contain
atom-triples for angles or atom-quadruplets for dihedrals.
If this is not the case, the program will crash.[PAR]
With option [TT]-or[tt] a trajectory file is dumped containing cos and
sin of selected dihedral angles which subsequently can be used as
input for a PCA analysis using [TT]g_covar[tt].
?g_bond makes a distribution of bond lengths. If all is well a
gaussian distribution should be made when using a harmonic potential.
Bonds are read from a single group in the index file in order i1-j1
[TT]-tol[tt] gives the half-width of the distribution as a fraction
of the bondlength ([TT]-blen[tt]). That means, for a bond of 0.2
a tol of 0.1 gives a distribution from 0.18 to 0.22.[PAR]
Option [TT]-d[tt] plots all the distances as a function of time.
This requires a structure file for the atom and residue names in
the output. If however the option [TT]-averdist[tt] is given (as well
or separately) the average bond length is plotted instead.
It should be possible to get bond information from the topology.
Bond length. By default length of first bond
Half width of distribution as fraction of blen
Average bond length distributions
Average distances (turns on -d)
WARNING: odd number of atoms (%d) in group!
Will gather information on %d bonds
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_bond.c
Total number of samples               : %d
Mean                                  : %g
Standard deviation of the distribution: %g
Standard deviation of the mean        : %g
No distribution... (i0 = %d, i1 = %d)? ? ! ! ? !
i2-j2 through in-jn.[PAR]
-blen
-tol
-aver
-averdist
b_all
btab
No atoms in trajectory!
Distance (nm)
Average distance
leg[i/2]
%s %s%d - %s %s%d
 %.5f
b_one
Bond Length (nm)
Bond Stretching Distribution
sigma
b_aver
%5s  %5s  %8s  %8s
%5u  %5u  %8.5f  %8.5f
b_all[i]
zD-na
Number of axes
bun_len
bun_dist
bun_z
bun_tilt
-otr
bun_tiltr
-otl
bun_tiltl
bun_kink
-okr
bun_kinkr
-okl
bun_kinkl
and a group of kink 
bun.end[0]
bun.end[1]
bun.end[2]
bun.mid
bun.dir
bun.len
Axis lengths
Distance of axis centers
Z-shift of axis centers
Axis tilts
Radial axis tilts
Lateral axis tilts
Kink angles
Radial kink angles
Lateral kink angles
mtot
xout
the bottom-kink vectors.
display the reference axis.
Use the Z-axis as reference iso the average axis
Select a group of top and a group of bottom 
The size of one of your index groups is not a multiple of n
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_bundle.c
@ subtitle "+ = ) (   - = ( )"
g_bundle analyzes bundles of axes. The axes can be for instance
helix axes. The program reads two index groups and divides both
of them in [TT]-na[tt] parts. The centers of mass of these parts
define the tops and bottoms of the axes.
Several quantities are written to file:
the axis length, the distance and the z-shift of the axis mid-points
with respect to the average center of all axes, the total tilt,
the radial tilt and the lateral tilt with respect to the average axis.
With options [TT]-ok[tt], [TT]-okr[tt] and [TT]-okl[tt] the total,
radial and lateral kinks of the axes are plotted. An extra index
group of kink atoms is required, which is also divided into [TT]-na[tt]
parts. The kink angle is defined as the angle between the kink-top and
With option [TT]-oa[tt] the top, mid (or kink when [TT]-ok[tt] is set)
and bottom points of each axis
are written to a pdb file each frame. The residue numbers correspond
to the axis numbers. When viewing this file with [TT]rasmol[tt], use the
command line option [TT]-nmrpdb[tt], and type [TT]set axis true[tt] to
@ with g0
@ xaxis tick major 90
@ xaxis tick minor 30
@ xaxis ticklabel prec 0
@ yaxis tick on
@ yaxis tick major 90
@ yaxis tick minor 30
@ yaxis ticklabel prec 0
@    s0 type xy
@    s0 symbol 2
@    s0 symbol size 0.410000
@    s0 symbol fill 1
@    s0 symbol color 1
@    s0 symbol linewidth 1
@    s0 symbol linestyle 1
@    s0 symbol center false
@    s0 symbol char 0
@    s0 skip 0
@    s0 linestyle 0
@    s0 linewidth 1
J_HaN
JHaHb2
JHaHb3
ss_str
his_aa_ss
his_aa_ss[i]
his_aa_ss[i][j]
his_aa_ss[i][j][Dih]
his_aa
his_aa[Dih]
his_aa[Dih][i]
histmp
Jcsig
Jc[i]
Jcsig[i]
hindex
Residue   
%7s   SD
%-10s
  %5.2f %4.2f
Coupling
#Res.
%5d 
histo-phi%s
\xf\f{} Distribution for %s
histo-psi%s
\xy\f{} Distribution for %s
histo-omega%s
\xw\f{} Distribution for %s
histo-chi%d%s
@ yaxis tick off
@ yaxis ticklabel off
sheet
%s-%s.xvg
coil
starting residue
-phi
-psi
-omega
-rama
-viol
-rad
-shift
-core_rotamer
-maxchi
-normhisto
Normalize histograms
-ramomega
-bfact
-chi_prod
-HChi
-bmax
ssdump
Jcoupling
restrans
chiprodhisto
Title: %s
aminoacids.dat
%d dihedrals found
Angle (rad)
\xf\f{}
\xy\f{}
\xw\f{}
\xc\f{}\s%d\N
All residues, 
Phi 
Omega 
Chi 1-
S2Min
S2Max
Omega
Chi1
Chi2
Chi3
Chi4
Chi5
Chi6
Dihedral Order Parameters
%10s %10s %10s 
%10.3f %10.3f 
REMARK generated by g_chi
%s%%6.f%%6.2f
ATOM  
Dihedrals with S2 > 0.8
 Psi 
ramaPhiPsi%s.xvg
\8y\4 (deg)
\8f\4 (deg)
violPhiPsi%s.xvg
ramomega%s.xpm
Omega/Ramachandran Plot
ramaX1X2%s.xvg
\8c\4\s2\N (deg)
\8c\4\s1\N (deg)
No chi1 & chi2 angle for %s
Transitions/ns
Dihedral Rotamer Transitions
chi_lookup
chi_lookup[i]
Phi ACF for
corrphi
Psi ACF for
corrpsi
Omega ACF for
corromega
corrchi%d
Chi%d ACF for
histogram distributions.
dihedrals and maxchi >= 3)
J_NHa1
J_NHa2
J_HaC'
J_NHCb
J_Ci-1Hai
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_chi.c
Res. %d has imcomplete occupancy or bfacs > %g
 *** J-Couplings from simulation (plus std. dev.) ***
\S3\NJ-Couplings from Karplus Equation
\xc\f{}\s%d\N Distribution for %s
# this effort to set graph size fails unless you run with -autoscale none or -autoscale y flags
Produces MANY output files (up to about 4 times the number of residues in the protein, twice that if autocorrelation functions are calculated). Typically several hundred files are output.
Phi and psi dihedrals are calculated in a non-standard way, using H-N-CA-C for phi instead of C(-)-N-CA-C, and N-CA-C-O for psi instead of N-CA-C-N(+). This causes (usually small) discrepancies with the output of other tools like g_rama.
-r0 option does not work properly
Rotamers with multiplicity 2 are printed in chi.log as if they had multiplicity 3, with the 3rd (g(+)) always having probability 0
Output for Phi dihedral angles
Output for Psi dihedral angles
Output for Omega dihedrals (peptide bonds)
Generate Phi/Psi and Chi1/Chi2 ramachandran plots
Write a file that gives 0 or 1 for violated Ramachandran angles
Output separate files for every dihedral.
in angle vs time files, use radians rather than degrees.
Compute chemical shifts from Phi/Psi angles
bin width for histograms (degrees)
only the central -core_rotamer*(360/multiplicity) belongs to each rotamer (the rest is assigned to rotamer 0)
calculate first ndih Chi dihedrals
compute average omega as a function of phi/psi and plot it in an xpm plot
B-factor value for pdb file for atoms with no calculated dihedral order parameter
compute a single cumulative rotamer for each residue
Include dihedrals to sidechain hydrogens
Maximum B-factor on any of the atoms that make up a dihedral, for the dihedral angle to be considere in the statistics. Applies to database work where a number of X-Ray structures is analyzed. -bmax <= 0 means no limit.
Will calculate autocorrelation
core_rotamer fraction > 1.0 ; will use 1.0
core_rotamer fraction < 0.0 ; will use 0.0
Will only calculate first %d Chi dihedrals in stead of %d.
%d residues with dihedrals found
No dihedrals in your structure!
Need at least 2 frames for correlation
j after resetting (nr. active dihedrals) = %d
REMARK B-factor field contains negative of dihedral order parameters
\8c\4\s1\N-\8c\4\s2\N Ramachandran Plot
g_chi computes phi, psi, omega and chi dihedrals for all your 
amino acid backbone and sidechains.
It can compute dihedral angle as a function of time, and as
The distributions (histo-(dihedral)(RESIDUE).xvg) are cumulative over all residues of each type.[PAR]
If option [TT]-corr[tt] is given, the program will
calculate dihedral autocorrelation functions. The function used
is C(t) = < cos(chi(tau)) cos(chi(tau+t)) >. The use of cosines
rather than angles themselves, resolves the problem of periodicity.
(Van der Spoel & Berendsen (1997), [BB]Biophys. J. 72[bb], 2032-2041).
Separate files for each dihedral of each residue
(corr(dihedral)(RESIDUE)(nresnr).xvg) are output, as well as a
file containing the information for all residues (argument of [TT]-corr[tt]).[PAR]
With option [TT]-all[tt], the angles themselves as a function of time for
each residue are printed to separate files (dihedral)(RESIDUE)(nresnr).xvg.
These can be in radians or degrees.[PAR]
A log file (argument [TT]-g[tt]) is also written. This contains [BR]
(a) information about the number of residues of each type.[BR]
(b) The NMR 3J coupling constants from the Karplus equation.[BR]
(c) a table for each residue of the number of transitions between 
rotamers per nanosecond,  and the order parameter S2 of each dihedral.[BR]
(d) a table for each residue of the rotamer occupancy.[BR]
All rotamers are taken as 3-fold, except for omegas and chi-dihedrals
to planar groups (i.e. chi2 of aromatics asp and asn, chi3 of glu
and gln, and chi4 of arg), which are 2-fold. "rotamer 0" means 
that the dihedral was not in the core region of each rotamer. 
The width of the core region can be set with [TT]-core_rotamer[tt][PAR]
The S2 order parameters are also output to an xvg file
(argument [TT]-o[tt] ) and optionally as a pdb file with
the S2 values as B-factor (argument [TT]-p[tt]). 
The total number of rotamer transitions per timestep
(argument [TT]-ot[tt]), the number of transitions per rotamer
(argument [TT]-rt[tt]), and the 3J couplings (argument [TT]-jc[tt]), 
can also be written to .xvg files.[PAR]
If [TT]-chi_prod[tt] is set (and maxchi > 0), cumulative rotamers, e.g.
1+9(chi1-1)+3(chi2-1)+(chi3-1) (if the residue has three 3-fold 
are calculated. As before, if any dihedral is not in the core region,
the rotamer is taken to be 0. The occupancies of these cumulative 
rotamers (starting with rotamer 0) are written to the file
that is the argument of [TT]-cp[tt], and if the [TT]-all[tt] flag
is given, the rotamers as functions of time
are written to chiproduct(RESIDUE)(nresnr).xvg 
and their occupancies to histo-chiproduct(RESIDUE)(nresnr).xvg.[PAR]
The option [TT]-r[tt] generates a contour plot of the average omega angle
as a function of the phi and psi angles, that is, in a Ramachandran plot
the average omega angle is plotted using color coding.
1100000000000000001111111000000000001111111111111111111111111
1100000000000000001111110000000000011111111111111111111111111
1100000000000000001111100000000000111111111111111111111111111
1100000000000000001111100000000001111111111111111111111111111
1100000000000000001111100000000011111111111111111111111111111
1110000000000000001111110000000111111111111111111111111111111
1110000000000000001111110000001111111111111111111111111111111
1110000000000000001111111000011111111111111111111111111111111
1110000000000000001111111100111111111111111111111111111111111
1110000000000000001111111111111111111111111111111111111111111
1110000000000000001111111111111110011111111111111111111111111
1110000000000000001111111111111100000111111111111111111111111
1110000000000000001111111111111000000000001111111111111111111
1100000000000000001111111111110000000000000011111111111111111
1100000000000000001111111111100000000000000011111111111111111
1000000000000000001111111111000000000000000001111111111111110
0000000000000000001111111110000000000000000000111111111111100
0000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000111111111111000000000000000
1100000000000000000000000000000001111111111111100000000000111
1100000000000000000000000000000001111111111111110000000000111
333333
333333
@433333
333333
@433333
@gfffff
333333#@
4CEnergy: %8.4f
low_index
TESTMC
Doing 1000 random swaps
Taking uphill step
gather algortihm
incons
Linking structures 
nnb[i]
i:%5d nbs:
%5d[%5.3f]
xx[i0]
 and RMSD calculation
middle
 Distance 
-dista
-nlevels
-cutoff
-fit
Maximum level in RMSD matrix
-wcl
-nst
-rmsmin
-method
-minstruct
-binary
-niter
Number of iterations for MC
-pbc
PBC check
rmsd-clust
rmsd-dist
rmsd-eig
clust-size
clust-trans
-ntr
-clid
clust-id.xvg
clusters.pdb
Invalid method
Will use P=%d, M=%d
Using RMSD cutoff %g nm
Using %d iterations
skip (%d) should be >= 1
Select group for output:
d1[i]
d2[i]
Reading rms distance matrix 
Matrix (%dx%d) is not square
mat->matrix[i]
mat->matrix
Average RMSD is %g
clust.cl
Eigenvalues (nm\S2\N)
Eigenvector index
RMSD matrix Eigenvalues
nnb[i].nb
%3d%%
%3d%%
i:%5d #:%5d nbs:
Finding clusters %4d
nnb[0].nb
Clusters (%d):
cl_id
strind
usextps
Found %d clusters
%s%%0%dd.%s
fnout
bWrite
structures with rmsd > %g
all structures
the first %d 
 with more than %d structures
ntrans
trans[i]
to cluster
from cluster
# transitions
Cluster Transitions
Cluster #
%5d %5d
Clusters
@    s0 symbol size 0.2
%8g %8d
# Structures
Cluster Sizes
@g%d type %s
%8d %8d
%3d | %3d %s | %6g%s |
%3s | %3s  %4s | %6s %4s |
%s %6g
trxsfn
Time (%s)
RMSD (nm)
linkage
jarvis-patrick
monte-carlo
diagonalization
gromos
[TT]cutoff[tt].[PAR]
structures in pool.[PAR]
for each cluster.[PAR]
diagonalization.[BR]
cluster pairs.[BR]
each cluster.[BR]
Doing Monte Carlo clustering
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_cluster.c
Iter: %d Swapped %4d and %4d (now %g)
Sorting and renumbering clusters
Cluster index for conformation %d: %d
Nearest neighborlist. M = %d, P = %d
Allocated %lu bytes for frames
Read %d frames from trajectory %s
Use RMSD of distances instead of RMS deviation
Discretize RMSD matrix in # levels
RMSD cut-off (nm) for two structures to be neighbor
Use least squares fitting before RMSD calculation
Only analyze every nr-th frame
Write average iso middle structure for each cluster
Write all structures for first # clusters to numbered files
Only write all structures if more than # per cluster
minimum rms difference with rest of cluster for writing structures
Method for cluster determination
Minimum number of structures in cluster for coloring in the xpm file
Treat the RMSD matrix as consisting of 0 and 1, where the cut-off is given by -cutoff
Number of nearest neighbors considered for Jarvis-Patrick algorithm, 0 is use cutoff
Number of identical nearest neighbors required to form a cluster
Random number seed for Monte Carlo clustering algorithm
Boltzmann weighting factor for Monte Carlo optimization (zero turns off uphill steps)
Warning: assuming the time unit in %s is %s
Warning: cannot write cluster structures without reading trajectory
         ignoring option -cl %s
Using %s method for clustering
M (%d) must be 0 or larger than 1
Will use P=%d and RMSD cutoff (%g)
Number of neighbors required (P) must be less than M
Will use P=%d, M=%d and RMSD cutoff (%g)
%s for determining the neighbors
Select group for least squares fit%s:
Matrix size (%dx%d) does not match the number of frames (%d)
Computing %dx%d RMS deviation matrix
# RMSD calculations left: %d   
Computing %dx%d RMS distance deviation matrix
The RMSD ranges from %g to %g nm
Number of structures for matrix %d
Energy of the matrix is %g nm
WARNING: rmsd cutoff %g is outside range of rmsd values %g to %g
WARNING: rmsd minimum %g is below lowest rmsd value %g
WARNING: rmsd minimum %g is above rmsd cutoff %g
Making list of neighbors within cutoff 
Nearest neighborlist after sort.
DEATH HORROR unknown method "%s"
Energy of the matrix after clustering is %g nm
There are %d clusters with at least %d conformations
will not number filename %s containing '%c'
cannot separate extension in filename %s
Writing %s structure for each cluster to %s
Writing %s for %sclusters%s to %s
Counted %d transitions in total, max %d between two specific clusters
%3s | %3s  %4s | %6s %4s | cluster members
Writing rms distance/clustering matrix 
RMS%sDeviation / Cluster Index
g_cluster can cluster structures with several different methods.
Distances between structures can be determined from a trajectory
or read from an XPM matrix file with the [TT]-dm[tt] option.
RMS deviation after fitting or RMS deviation of atom-pair distances
can be used to define the distance between structures.[PAR]
single linkage: add a structure to a cluster when its distance to any
element of the cluster is less than [TT]cutoff[tt].[PAR]
Jarvis Patrick: add a structure to a cluster when this structure
and a structure in the cluster have each other as neighbors and
they have a least [TT]P[tt] neighbors in common. The neighbors
of a structure are the M closest structures or all structures within
Monte Carlo: reorder the RMSD matrix using Monte Carlo.[PAR]
diagonalization: diagonalize the RMSD matrix.[PAR]
gromos: use algorithm as described in Daura [IT]et al.[it]
([IT]Angew. Chem. Int. Ed.[it] [BB]1999[bb], [IT]38[it], pp 236-240).
Count number of neighbors using cut-off, take structure with
largest number of neighbors with all its neighbors as cluster
and eleminate it from the pool of clusters. Repeat for remaining
When the clustering algorithm assigns each structure to exactly one
cluster (single linkage, Jarvis Patrick and gromos) and a trajectory
file is supplied, the structure with
the smallest average distance to the others or the average structure
or all structures for each cluster will be written to a trajectory
file. When writing all structures, separate numbered files are made
Two output files are always written:[BR]
[TT]-o[tt] writes the RMSD values in the upper left half of the matrix
and a graphical depiction of the clusters in the lower right half
When [TT]-minstruct[tt] = 1 the graphical depiction is black
when two structures are in the same cluster.
When [TT]-minstruct[tt] > 1 different colors will be used for each
[TT]-g[tt] writes information on the options used and a detailed list
of all clusters and their members.[PAR]
Additionally, a number of optional output files can be written:[BR]
[TT]-dist[tt] writes the RMSD distribution.[BR]
[TT]-ev[tt] writes the eigenvectors of the RMSD matrix
[TT]-sz[tt] writes the cluster sizes.[BR]
[TT]-tr[tt] writes a matrix of the number transitions between
[TT]-ntr[tt] writes the total number of transitions to or from
[TT]-clid[tt] writes the cluster number as a function of time.[BR]
[TT]-cl[tt] writes average (with option [TT]-av[tt]) or central
structure of each cluster or writes numbered files with cluster members
for a selected set of clusters (with option [TT]-wcl[tt], depends on
[TT]-nst[tt] and [TT]-rmsmin[tt]).[BR]
?(%d %d)
{%d %d}
rindex1
rindex2
Find matching names: %d, %d
R: %s%d %s%d
comparing %d %d
 [%d<%d %d<%d]
 -> %d %d %s-%s
 R:%d-%d:%d-%d:%d 
%d.%d.%dX%sX%s
 -> %s%d-%s%d %s%d-%s%d
(%d %d): %d %d
-one
-name
-bfac
conf1.gro
conf2
fit.pdb
fit1.ndx
fit2.ndx
match.ndx
top1
Need >= 3 points to fit!
top2
[ Match_%s_%s ]
%4u%s
%d atomname%s did not match
fit_x
msds
atoms1->pdbinfo
atoms1->atom
atoms2->pdbinfo
atoms2->atom
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_confrms.c
All atoms in index groups 1 and 2 match
Both index groups modified from %d to %d atoms
Index group 1 modified from %d to %d atoms
Index group 2 modified from %d to %d atoms
g_confrms computes the root mean square deviation (RMSD) of two
structures after LSQ fitting the second structure on the first one.
The two structures do NOT need to have the same number of atoms,
only the two index groups used for the fit need to be identical.
With [TT]-name[tt] only matching atom names from the selected groups
will be used for the fit and RMSD calculation. This can be useful 
when comparing mutants of a protein.
The superimposed structures are written to file. In a [TT].pdb[tt] file
the two structures will be written as separate models
(use [TT]rasmol -nmrpdb[tt]). Also in a [TT].pdb[tt] file, B-factors
calculated from the atomic MSD values can be written with [TT]-bfac[tt].
Only write the fitted structure to file
Mass-weighted fitting and RMSD
Try to make molecules whole again
Do least squares superposition of the target structure to the reference
Only compare matching atom names
Added chain labels A for first and B for second structure
Output B-factors from atomic MSD values
Reading first structure file
Containing %d atoms in %d residues
Select group from first structure
Reading second structure file
Select group from second structure
; Matching atoms between %s from %s and %s from %s
You selected groups with differen number of atoms.
Warning: atomnames at index %d don't match: %u %s, %u %s
Root mean square deviation after lsq fit = %g nm
Atomic MSD's range from %g to %g nm^2
WARNING: cannot write B-factor values to gro file
WARNING: cannot write B-factor values to %s file
WARNING: cannot write the reference structure to %s file
u nm^2
non-
Fit to a reference structure
-ref
-mwa
average.pdb
-ascii
-xpm
-xpma
covara
Average structure
Read %d frames
xproj
mat2
Covariance
mat2[i]
Diagonalizing ...
Writing eigenvalues to %s
(%snm\S2\N)
%10d %g
Program: %s
Working directory: %s
Read index groups from %s
Fit group is '%s' (%d atoms)
No fit was used
Analysis is %smass weighted
Fit is %smass weighted
Wrote %d eigenvalues to %s
Wrote the log to %s
covariance matrix.
Use the deviation from the conformation in the structure file instead of from the average
Mass-weighted covariance analysis
Last eigenvector to write away (-1 is till the last)
Apply corrections for periodic boundary conditions
Choose a group for the least squares fit
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_covar.c
Choose a group for the covariance analysis
Note: the fit and analysis group are identical,
      while the fit is mass weighted and the analysis is not.
      Making the fit non mass weighted.
Number of degrees of freedoms to large for matrix.
Calculating the average structure ...
WARNING: number of atoms in tpx (%d) and trajectory (%d) do not match
Constructing covariance matrix (%dx%d) ...
Trace of the covariance matrix: %g (%snm^2)
Sum of the eigenvalues: %g (%snm^2)
WARNING: eigenvalue sum deviates from the trace of the covariance matrix
Eigenvalues of the covariance matrix
Covariance analysis log, written %s
Current working directory is undefined
Read %d frames from %s (time %g to %g %s)
Read reference structure for fit from %s
Analysis group is '%s' (%d atoms)
Diagonalized the %dx%d covariance matrix
Trace of the covariance matrix before diagonalizing: %g
Trace of the covariance matrix after diagonalizing: %g
Wrote reference structure to %s
Wrote average structure to %s and %s
Wrote eigenvectors %d to %d to %s
[TT]g_covar[tt] calculates and diagonalizes the (mass-weighted)
All structures are fitted to the structure in the structure file.
When this is not a run input file periodicity will not be taken into
account. When the fit and analysis groups are identical and the analysis
is non mass-weighted, the fit will also be non mass-weighted.
The eigenvectors are written to a trajectory file ([TT]-v[tt]).
When the same atoms are used for the fit and the covariance analysis,
the reference structure for the fit is written first with t=-1.
The average (or reference when [TT]-ref[tt] is used) structure is
written with t=0, the eigenvectors
are written as frames with the eigenvector number as timestamp.
The eigenvectors can be analyzed with [TT]g_anaeig[tt].
Option [TT]-ascii[tt] writes the whole covariance matrix to
an ASCII file. The order of the elements is: x1x1, x1y1, x1z1, x1x2, ...
Option [TT]-xpm[tt] writes the whole covariance matrix to an xpm file.
Option [TT]-xpma[tt] writes the atomic covariance matrix to an xpm file,
i.e. for each atom pair the sum of the xx, yy and zz covariances is
A%.3f	%10.6g	%10.6g
Too less points.
-nojump
-eps
-bfit
-efit
-bvit
-evit
current.xvg
-caf
caf.xvg
-dsp
dsp.xvg
md.xvg
mj.xvg
mc.xvg
xtop
vtop
grpname
mass2
qmol
indexm
Atom index out of range: %d
ACF (e nm/ps)\S2
J(t) (e nm/ps)
# time	 Jx	 Jy 	 J_z 
< M\sJ\N > (enm)
< M\sD\N > (enm)
Averaged rotational part of M
mjdsp
dsp2
mtrans
xshfr
cacf
%.3f	%.6f	%.6f	%.6f
%.3f	%10.6g
xfit
yfit
Fluctuations:
 epsilon=%f
Start fit at %f ps (%f).
End fit at %f ps (%f).
sigma=%.4f
Too less points for a fit.
Shift of the frames for averaging the correlation functions and the mean-square displacement.
Removes jumps of atoms across the box.
Dielectric constant of the surrounding medium. eps=0.0 corresponds to eps=infinity (thinfoil boundary conditions).
Begin of the fit of the straight line to the MSD of the translational fraction of the dipole moment.
End of the fit of the straight line to the MSD of the translational fraction of the dipole moment.
Begin of the fit of the current autocorrelation function to a*t^b.
End of the fit of the current autocorrelation function to a*t^b.
Fraction of the trajectory taken into account for the integral.
Temperature for calculating epsilon.
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_current.c
System not neutral (q=%f) will not calculate translational part of the dipole moment.
The index group does not consist of whole molecules
Split group of %d atoms into %d molecules
Current autocorrelation function
# time	 acf	 average 	 std.dev
< M\sD\N (0)\c7\CJ(t) >  (e nm/ps)\S2
M\sD\N - current  autocorrelation function
# time	 M_D(0) J(t) acf 	 Integral acf
Averaged translational part of M
# time	 x	 y 	 z 	 average of M_J^2 	 std.dev
# time	 x	 y 	 z 	 average of M_D^2 	 std.dev
<|M\sJ\N(t)-M\sJ\N(0)|\S2\N > / 6.0*V*k\sB\N*T / Sm\S-1\Nps\S-1\N
MSD of the squared translational dipole moment M
%.3f	%8.5f	%8.5f	%8.5f	%8.5f	%8.5f
Prefactor fit E-H: 1 / 6.0*V*k_B*T: %g
#Prefactor fit E-H: 1 / 6.0*V*k_B*T: %g
Average translational dipole moment M_J [enm] after %d frames (|M|^2): %f %f %f (%f)
Average molecular dipole moment M_D [enm] after %d frames (|M|^2): %f %f %f (%f)
Calculating M_D - current correlation integral ... 
Calculating current autocorrelation ... 
********************************************
Absolute values:
 epsilon=%f
 <M_D^2> , <M_J^2>, <(M_J*M_D)^2>:  (%f, %f, %f)
********************************************
 deltaM_D , deltaM_J, deltaM_JD:  (%f, %f, %f)
Static dielectric constant using integral and fluctuations: %f
 < M_JM_D > via integral:  %.3f
***************************************************
Average volume V=%f nm^3 at T=%f K
and corresponding refactor 1.0 / 3.0*V*k_B*T*EPSILON_0: %f 
Integral and integrated fit to the current acf yields at t=%f:
sigma=%8.3f (pure integral: %.3f)
Einstein-Helfand fit to the MSD of the translational dipole moment yields:
translational fraction of M^2: %.4f
Dielectric constant using EH: %.4f
This is a tool for calculating the current autocorrelation function, the correlation
of the rotational and translational dipole moment of the system, and the resulting static
dielectric constant. To obtain a reasonable result the index group has to be neutral.
Furthermore the routine is capable of extracting the static conductivity from the current 
autocorrelation function, if velocities are given. Additionally an Einstein-Helfand fit also
allows to get the static conductivity.[PAR]
The flag [TT]-caf[tt] is for the output of the current autocorrelation function and [TT]-mc[tt] writes the
correlation of the rotational and translational part of the dipole moment in the corresponding
file. However this option is only available for trajectories containing velocities.
Options [TT]-sh[tt] and [TT]-tr[tt] are responsible for the averaging and integration of the
autocorrelation functions. Since averaging proceeds by shifting the starting point
through the trajectory, the shift can be modified with [TT]-sh[tt] to enable the choice of uncorrelated
starting points. Towards the end, statistical inaccuracy grows and integrating the
correlation function only yields reliable values until a certain point, depending on
the number of frames. The option [TT]-tr[tt] controls the region of the integral taken into account
for calculating the static dielectric constant.
Option [TT]-temp[tt] sets the temperature required for the computation of the static dielectric constant.
Option [TT]-eps[tt] controls the dielectric constant of the surrounding medium for simulations using
a Reaction Field or dipole corrections of the Ewald summation (eps=0 corresponds to
tin-foil boundary conditions).
[TT]-[no]nojump[tt] unfolds the coordinates to allow free diffusion. This is required to get a continuous
translational dipole moment, required for the Einstein-Helfand fit. The resuls from the fit allow to
determine the dielectric constant for system of charged molecules. However it is also possible to extract
the dielectric constant from the fluctuations of the total dipole moment in folded coordinates. But this
options has to be used with care, since only very short time spans fulfill the approximation, that the density
of the molecules is approximately constant and the averages are already converged. To be on the safe side,
the dielectric constant should be calculated with the help of the Einstein-Helfand method for
the translational part of the dielectric constant.
mBCouldn't open %s. Exiting.
*eltab
%s = %d
Sorting list..
Invalid axes. Terminating
*slDensity
(*slDensity)[i]
Density (kg m\S-3\N)
Number density (nm\S-3\N)
Charge density (e nm\S-3\N)
Electron density (e nm\S-3\N)
Box (nm)
Partial densities
%12g  
   %12g
It should look like:[BR]
   2[BR]
   atomname = nrelectrons[BR]
partial charge.
Divide the box in #nr slices.
-dens
-symm
electrons
charge
electron
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_density.c
Invalid number of atomtypes in datafile
reading datafile. Check your datafile.
Invalid line in datafile at line %d
Could not read coordinates from statusfile
Dividing the box in %d slices
Couldn't find %s. Add it to the .dat file
Read %d frames from trajectory. Counting electrons
Read %d frames from trajectory. Calculating density
Compute partial densities across the box, using an index file. Densities
in kg/m^3, number densities or electron densities can be
calculated. For electron densities, a file describing the number of
electrons for each type of atom should be provided using [TT]-ei[tt].
The first line contains the number of lines to read from the file.
There should be one line for each unique atom name in your system.
The number of electrons for each atom is modified by its atomic
Take the normal on the membrane in direction X, Y or Z.
Number of groups to compute densities of
Symmetrize the density along the axis, with respect to the center. Useful for bilayers.
Shift the center of mass along the axis to zero. This means if your axis is Z and your box is bX, bY, bZ, the center of mass will be at bX/2, bY/2, 0.
When calculating electron densities, atomnames are used instead of types. This is bad.
Can not symmetrize without centering. Turning on -center
Read %d atomtypes from datafile
S:(nm^-3)
(nm^-2)
axial (nm)
-bin
Grid size (nm)
The direction to average over
-xmin
-xmax
-amax
-rmax
Maximum radial distance
-mirror
-sums
-unit
Unit for the output
-dmin
Minimum density in output
-dmax
y (nm)
z (nm)
densmap
nm-3
nm-2
Select an analysis group
grid[i]
tickx
tickz
Density sums:
%s number density
, %c > %g nm
, %c < %g nm
, %c: %g - %g nm
size is set by this option.
Minimum coordinate for averaging
Maximum coordinate for averaging
Number of grid cells in the first direction
Number of grid cells in the second direction
Maximum axial distance from the center
Add the mirror image below the axial axis
Print density sums (1D map) to stdout
Maximum density in output (0 means calculate it)
Both amax and rmax should be larger than zero
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_densmap.c
Select two groups to define the axis and an analysis group
No run input file was supplied (option -s), this is required for the center of mass calculation
  The maximum density is %f %s
g_densmap computes 2D number-density maps.
It can make planar and axial-radial density maps.
The output [TT].xpm[tt] file can be visualized with for instance xv
and can be converted to postscript with xpm2ps.
Optionally, output can be in text form to a .dat file.
The default analysis is a 2-D number-density map for a selected
group of atoms in the x-y plane.
The averaging direction can be changed with the option [TT]-aver[tt].
When [TT]-xmin[tt] and/or [TT]-xmax[tt] are set only atoms that are
within the limit(s) in the averaging direction are taken into account.
The grid spacing is set with the option [TT]-bin[tt].
When [TT]-n1[tt] or [TT]-n2[tt] is non-zero, the grid
Box size fluctuations are properly taken into account.
When options [TT]-amax[tt] and [TT]-rmax[tt] are set, an axial-radial
number-density map is made. Three groups should be supplied, the centers
of mass of the first two groups define the axis, the third defines the
analysis group. The axial direction goes from -amax to +amax, where
the center is defined as the midpoint between the centers of mass and
the positive direction goes from the first to the second center of mass.
The radial direction goes from 0 to rmax or from -rmax to +rmax
when the [TT]-mirror[tt] option has been set.
The normalization of the output is set with the [TT]-unit[tt] option.
The default produces a true number density. Unit [TT]nm-2[tt] leaves out
the normalization for the averaging or the angular direction.
Option [TT]count[tt] produces the count for each grid cell.
When you do not want the scale in the output to go
from zero to the maximum density, you can set the maximum
with the option [TT]-dmax[tt].
-mult
minimum
No such multiplicity %d
 Frequency  Dihedral minima
%10d  %s
transition
std.dev
maximum
dih-%d
Dihedral Angles
g_dih can do two things. The default is to analyze dihedral transitions
by merely computing all the dihedral angles defined in your topology
for the whole trajectory. When a dihedral flips over to another minimum
an angle/time plot is made.[PAR]
The opther option is to discretize the dihedral space into a number of
bins, and group each conformation in dihedral space in the
appropriate bin. The output is then given as a number of dihedral
conformations sorted according to occupancy.
Perform cluster analysis in dihedral space instead of analysing dihedral transitions.
mulitiplicity for dihedral angles (by default read from topology)
Using %d for dihedral multiplicity rather than topology values
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_dih.c
Calculated all dihedrals, now analysing...
* * * C L U S T E R   A N A L Y S I S * * *
	* * * D I H E D R A L    S T A T I S T I C S * * *
%-10s %10s %10s %10s %10s %10s %10s
%-10s %10.3f %10.3f %10.3f %10.3f %10.3f %-10s%3.0f
Begin time %f not in x-domain [%f through %f]
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_dielectric.c
nbegin = %d, x[nbegin] = %g, tbegin = %g
Making smooth transition from %d through %d
x: %g factors for smoothing: %10g %10g
MAXEPS = %10.5e at frequency %10.5e GHz (tauD = %8.1f ps)
use fast fourier transform for correlation function
use first column as X axis rather than first data set
Time were to end the integration of the data and start to use the fit
Length of function including data and tail from fit
Start value for fit parameter A
Start value for fit parameter tau1
Start value for fit parameter tau2
Epsilon of the reaction field used in your simulation. A value of 0 means infinity.
Fix parameters at their start values, A (2), tau1 (1), or tau2 (4)
Number of points for smoothing
Read data set containing %d colums and %d rows
Assuming (from data) that timestep is %g, nxtail = %d
Creating standard deviation numbers ...
DATA INTEGRAL: %5.1f, tauD(old) = %5.1f ps, tau_slope = %5.1f, tau_slope,D = %5.1f ps
tau_D from tau1 = %8.3g , eps(Infty) = %8.3f
FIT INTEGRAL (tau_M): %5.1f, tau_D = %5.1f
dielectric calculates frequency dependent dielectric constants
from the autocorrelation function of the total dipole moment in
your simulation. This ACF can be generated by g_dipoles.
For an estimate of the error you can run g_statistics on the
ACF, and use the output thus generated for this program.
The functional forms of the available functions are:[PAR]
One parameter  : y = Exp[-a1 x],
Two parameters : y = a2 Exp[-a1 x],
Three parameters: y = a2 Exp[-a1 x] + (1 - a2) Exp[-a3 x].
Start values for the fit procedure can be given on the command line.
It is also possible to fix parameters at their start value, use -fix
with the number of the parameter you want to fix.
Three output files are generated, the first contains the ACF,
an exponential fit to it with 1, 2 or 3 parameters, and the
numerical derivative of the combination data/fit.
The second file contains the real and imaginary parts of the
frequency-dependent dielectric constant, the last gives a plot
known as the Cole-Cole plot, in which the imaginary
component is plotted as a function of the real component.
For a pure exponential relaxation (Debye relaxation) the latter
plot should be one half of a circle.
scaling fitted curve by %g
integral_smth.xvg
SMOOTH integral = %10.5e
Empty dataset in %s, line %d!
Doing FFT of %d points
Freq. (GHz)
Epsilon(\8w\4)
Eps''
Eps'
Cole-Cole plot
dipcorr
deriv
epsw
cole
Correlation
Std. Dev.
Combined
Derivative
-fft
-eint
Begin time of fit
End time of fit
-tail
-tau1
-tau2
-eps0
Epsilon 0 of your liquid
-epsRF
-fix
-ffn
-nsmooth
Spoel98a
y[i]
y[2]
fitparms
y[3]
y[4]
y[5]
Data
@This program should be compiled with the GNU scientific library. Please install the library and reinstall GROMACS.
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_kinetics.c
-div
-ign
Width of the bins in nm
-nab
Select group to generate SDF:
Memory allocation error
grid.cube
test
%5d%12.6f%12.6f%12.6f
%5ld%12.6f%12.6f%12.6f
%5d%12.6f%12.6f%12.6f%12.6f
bin[%d][%d][%d] was = %ld
%12.6f 
USAGE: 
WARNINGS: 
BUGS: 
RISKY OPTIONS: 
Use periodic boundary conditions for computing distances
Calculate and apply the divisor for bin occupancies based on atoms/minimal cube size. Set as TRUE for visualization and as FALSE (-nodiv) to get accurate counts per frame
Do not display this number of outer cubes (positive values may reduce boundary speckles; -1 ensures outer surface is visible)
Number of additional bins to ensure proper memory allocation
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_spatial.c
Select group to output coords (e.g. solute):
There was an item outside of the allocated memory. Increase the value given with the -nab option.
Memory was allocated for [%f,%f,%f]	to	[%f,%f,%f]
Memory was required for [%f,%f,%f]
Spatial Distribution Function
A bin was not empty when it should have been empty. Programming error.
Counts per frame in all %ld cubes divided by %le
Normalized data: average %le, min %le, max %le
grid.cube contains counts per frame in all %ld cubes
Raw data: average %le, min %le, max %le
g_spatial calculates the spatial distribution function and 
outputs it in a form that can be read by VMD as Gaussian98 cube format. 
This was developed from template.c (gromacs-3.3). 
For a system of 32K atoms and a 50ns trajectory, the SDF can be generated 
in about 30 minutes, with most of the time dedicated to the two runs through 
trjconv that are required to center everything properly. 
This also takes a whole bunch of space (3 copies of the xtc file). 
Still, the pictures are pretty and very informative when the fitted selection is properly made. 
3-4 atoms in a widely mobile group like a free amino acid in solution works 
well, or select the protein backbone in a stable folded structure to get the SDF 
of solvent and look at the time-averaged solvation shell. 
It is also possible using this program to generate the SDF based on some arbitrarty 
Cartesian coordinate. To do that, simply omit the preliminary trjconv steps. 
1. Use make_ndx to create a group containing the atoms around which you want the SDF 
2. trjconv -s a.tpr -f a.xtc -o b.xtc -center tric -ur compact -pbc none 
3. trjconv -s a.tpr -f b.xtc -o c.xtc -fit rot+trans 
4. run g_spatial on the xtc output of step #3. 
5. Load grid.cube into VMD and view as an isosurface. 
*** Systems such as micelles will require trjconv -pbc cluster between steps 1 and 2
The SDF will be generated for a cube that contains all bins that have some non-zero occupancy. 
However, the preparatory -fit rot+trans option to trjconv implies that your system will be rotating 
and translating in space (in order that the selected group does not). Therefore the values that are 
returned will only be valid for some region around your central group/coordinate that has full overlap 
with system volume throughout the entire translated/rotated system over the course of the trajectory. 
It is up to the user to ensure that this is the case. 
When the allocated memory is not large enough, a segmentation fault may occur. This is usually detected 
and the program is halted prior to the fault while displaying a warning message suggesting the use of the -nab 
option. However, the program does not detect all such events. If you encounter a segmentation fault, run it again 
with an increased -nab value. 
To reduce the amount of space and time required, you can output only the coords 
that are going to be used in the first and subsequent run through trjconv. 
However, be sure to set the -nab option to a sufficiently high value since 
memory is allocated for cube bins based on the initial coords and the -nab 
(Number of Additional Bins) option value. 
?-launch
-ntpr
-min
-upfac
-downfac
-four
-steps
-simsteps
-resetstep
-npstring
-npme
-passall
many
File %s not found.
-cpo
-cpi
Number of repeats < 0!
Will test %d tpr file%s.
WARNING: steps=
%lld
command
%s%s-npme %d -s %s %s
%s%s%s -npme %d -s %s %s
Using
Please use
-b%s
*cmd_args_bench
*cmd_args_launch
*cmd_np
 %s %s 
-append
-maxh
-deffnm
-resethway
-cpnum
*str
-resetstep %d 
-%s %s 
Logfile not found!
Run was terminated.
TPX version conflict!
A fatal error occured!
cmd_stub
%s%s%s 
subset
*nPMEnodes
%d, 
and %d (auto).
perfdata[k]
perfdata[k][i].Gcycles
perfdata[k][i].ns_per_day
perfdata[k][i].PME_f_load
pd->mdrun_cmd_line
, pass %d/%d
-err
%s 1> /dev/null 2>%s
Step %s
reading tpx file
Total  
Total %d %lf
Performance:
%s %f %f %f %f
Fatal error:
(%3d)
%12.3f
%4d%s %12.3f %12.3f %s    %s
 Check %s file for problems.
%s_no%d_np%d_npme%d%s
renaming log file to %s
Saving stderr output in %s
Deleting %s
 and at launch time
UNDEFINED
interleave
pp_pme
cartesian
Repeat each test this often
-ddorder
-ddcheck
-ddbondcomm
-rdd
-rcon
-dlb
-dds
-ddcsx
HIDDENThe DD cell sizes in x
-ddcsy
HIDDENThe DD cell sizes in y
-ddcsz
HIDDENThe DD cell sizes in z
-gcom
Be loud and noisy
-compact
Write a compact log file
-seppot
-pforce
-reprod
-cpt
Checkpoint interval (minutes)
-multi
-replex
-reseed
-rerunvsite
-ionize
-confout
-stepout
ExtraArgs
Checkpoint file %s not found!
Will try runs with %d 
- %d 
MPIRUN
MDRUN
Trying '%s' ... 
passed.
%s for Gromacs %s
Number of nodes         : %d
The mpirun command is   : %s
Passing # of nodes via  : %s
Number of threads       : %d
The mdrun  command is   : %s
mdrun args benchmarks   : %s
Benchmark steps         : 
dlb equilibration steps : %d
Checkpoint time step    : 
mdrun args at launchtime: %s
Unused arguments        : %s
 steps.
Simulation steps        : 
Repeats for each test   : %d
Input file              : %s
info->rcoulomb
info->rvdw
info->rlist
info->rlistlong
info->nkx
info->nky
info->nkz
info->fsx
info->fsy
info->fsz
tpr_names
tpr_names[i]
pmegrid
   Coulomb type         : %s
   Van der Waals type   : %s
 No.   scaling  rcoulomb
  nkx  nky  nkz
   spacing
      rvdw
     rlist
 rlistlong
  tpr file
gridall
%5d%5d%5d %12f %12f
_bench%.2d.tpr
, scaling factor %f
%4d%10f%10f
, unmodified settings
-input-
%4d%10s%10f
%5d%5d%5d
 %9f 
  %-14s
perfdata
Tuning took%8.1f minutes.
Summary of successful runs:
    DD grid
  %3d %3d %3d
the automatic number of
 (see line %d)
and original PME settings.
mpirun
benchtest.log
NNODES=
Program: 
perf
errors
tuned
-dhdl
-field
-table
-tablep
-tableb
-rerun
-tpi
-tpid
tpidist
wham
-ffout
-devout
deviatie
-runav
runaver
pullx
pullf
-mtx
-bcpo
-beo
-bdhdl
benchdhdl
-bfield
benchfld
-btpi
benchtpi
-btpid
benchtpid
-bjo
-bffout
benchgct
-bdevout
benchdev
-brunav
benchrnav
-bpx
benchpx
-bpf
benchpf
-bmtx
benchn
-bdn
part of the Ewald sum. 
for mdrun as needed.[PAR]
via the MPIRUN variable, e.g.
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_tune_pme.c
Checkpoint input and output file must not be identical,
because then the input file might change during the benchmarks.
Number of nodes/threads must be a positive integer.
Note: Choose ntpr>1 to shift PME load between real and reciprocal space.
WARNING: Resetting -ntpr to 2 since both scaling factors are the same.
Please choose upfac unequal to downfac to test various PME grid settings
-max must be between 0 and 0.5
-min must be between 0 and 0.5
-max must be larger or equal to -min
Number of steps must be positive.
. Are you sure you want to perform so %s steps for each benchmark?
Cannot have a negative number of presteps.
Both scaling factors must be larger than zero and upper
scaling limit (%f) must be larger than lower limit (%f).
WARNING: Applying extreme scaling factor. I hope you know what you are doing.
Please choose a positive value for fourierspacing.
NOTE: Specify -ntpr > 2 for both scaling factors to take effect.
(upfac=%f, downfac=%f)
%s this command line to launch the simulation:
------------------------------------------------------------
Launching simulation with best parameters now.
Executing '%s'
No timings, logfile truncated?
Counters were not reset properly.
No DD grid found for these settings.
mdrun was not started in parallel!
Unknown option for -npme in make_npme_list
Unknown option for eNPME in make_npme_list
Will try the following %d different values for -npme:
No benchmarks done since number of repeats (-r) is 0.
Individual timings for input file %d (%s):
PME nodes      Gcycles       ns/day        PME/f    Remark
=== Progress %2.0f%%, tpr %d/%d, run %d/%d%s:
WARNING: Could not find logfile %s.
WARNING: Time step counters were reset at step %s,
         though they were supposed to be reset at step %s!
Domain decomposition grid %d x %d x %d, separate PME nodes %d
PME nodes from command line and output file are not identical
There is no domain decomposition for
The -dd or -npme option request a parallel simulation
WARNING: A fatal error has occured during this benchmark:
WARNING: Could not find stderr file %s.
No performance data in log file.
Cleaning up, deleting benchmark temp files ...
Skipping remaining passes of unsuccessful setting, see log file for details.
WARNING: The cycle and time step counters could not be reset
properly. The reason could be that mpirun did not manage to
export the environment variable GMX_RESET_COUNTER. You might
have to give a special switch to mpirun for that.
Alternatively, you can manually set GMX_RESET_COUNTER to the
value normally provided by -presteps.
Number of nodes to run the tests on (must be > 2 for separate PME nodes)
Specify the number of processors to $MPIRUN using this string
HIDDENPut arguments unknown to mdrun at the end of the command line. Can e.g. be used for debugging purposes. 
Number of threads to run the tests on (turns MPI & mpirun off)
Max fraction of PME nodes to test with
Min fraction of PME nodes to test with
Benchmark all possible values for -npme or just the subset that is expected to perform well
Upper limit for rcoulomb scaling factor (Note that rcoulomb upscaling results in fourier grid downscaling)
Lower limit for rcoulomb scaling factor
Number of tpr files to benchmark. Create these many files with scaling factors ranging from 1.0 to fac. If < 1, automatically choose the number of tpr files to test
Use this fourierspacing value instead of the grid found in the tpr input file. (Spacing applies to a scaling factor of 1.0 if multiple tpr files are written)
Take timings for these many steps in the benchmark runs
Let dlb equilibrate these many steps before timings are taken (reset cycle counters after these many steps)
If non-negative, perform these many steps in the real run (overwrite nsteps from tpr, add cpt steps)
Lauch the real simulation after optimization
Set the default filename for all file options at launch time
Check for all bonded interactions with DD
HIDDENUse special bonded atom communication when -rdd > cut-off
The maximum distance for bonded interactions with DD (nm), 0 is determine from initial coordinates
Maximum distance for P-LINCS (nm), 0 is estimate
Dynamic load balancing (with DD)
Minimum allowed dlb scaling of the DD cell size
Global communication frequency
Write separate V and dVdl terms for each interaction type and node to the log file(s)
Print all forces larger than this (kJ/mol nm)
Try to avoid optimizations that affect binary reproducibility
Keep and number checkpoint files
Append to previous output files when continuing from checkpoint instead of adding the simulation part number to all file names (for launch only)
Terminate after 0.99 times this time (hours)
Do multiple simulations in parallel
Attempt replica exchange every # steps
Seed for replica exchange, -1 is generate a seed
HIDDENRecalculate virtual site coordinates with -rerun
Do a simulation including the effect of an X-Ray bombardment on your system
HIDDENWrite the last configuration with -c and force checkpointing at the last step
HIDDENFrequency of writing the remaining runtime
HIDDENReset the cycle counters after half the number of steps or halfway -maxh (launch only)
WARNING: The following arguments you provided have no effect:
Use the -passall option to force them to appear on the command lines
for the benchmark simulations%s.
WARNING: -npstring has no effect when using threads.
Can't run multi-threaded MPI simulation yet!
PME-only nodes.
  Note that the automatic number of PME-only nodes and no separate PME nodes are always tested.
Making sure that mdrun can be executed. 
%s%s-version -maxh 0.001 1> %s 2>&1
%s%s%s -version -maxh 0.001 1> %s 2>&1
Output from test run could not be found.
Need a threaded version of mdrun. This one
(%s)
seems to have been compiled with MPI instead.
Need an MPI-enabled version of mdrun. This one
(%s)
seems to have been compiled without MPI support.
Cannot execute mdrun. Please check %s for problems!
      P E R F O R M A N C E   R E S U L T S
Not setting number of nodes in system call
Note: Simulation input file %s will have 
Requested grid spacing  : %f (This will be the grid spacing at a scaling factor of 1.0)
Making benchmark tpr file%s with %s time step%s
 (adding %s steps from checkpoint file)
%s requires rcoulomb (%f) to be equal to rlist (%f).
%s requires rcoulomb (%f) to be equal to or smaller than rlist (%f)
Calculating PME grid points on the basis of a fourierspacing of %f nm
   Grid spacing x y z   : %f %f %f
   rvdw_switch          : %f nm
   rlist                : %f nm
   rlistlong            : %f nm
Will try these real/reciprocal workload settings:
Possible PME grid settings (apart from input file settings):
  nkx  nky  nkz  max spacing  scaling factor
NOTE: You requested %d tpr files, but apart from the input file grid only the
      above listed %d suitable PME grids were found. Will test all suitable settings.
Writing benchmark tpr %s with nsteps=
Note that in addition to rcoulomb and the fourier grid
also other input settings were changed (see table above).
Please check if the modified settings are appropriate.
Line tpr PME nodes  Gcycles Av.     Std.dev.       ns/day        PME/f
%4d %3d %4d%s %12.3f %12.3f %12.3f %s
None of the runs was successful! Check %s for problems.
Best performance was achieved with %s PME nodes
   New Fourier grid xyz: %d %d %d (was %d %d %d)
Writing optimized simulation file %s with nsteps=%s.
Can only do optimizations for simulations with %s electrostatics.
Optimized PME settings:
   New Coulomb radius: %f nm (was %f nm)
   New Van der Waals radius: %f nm (was %f nm)
For a given number [TT]-np[tt] or [TT]-nt[tt] of processors/threads, this program systematically
times mdrun with various numbers of PME-only nodes and determines
which setting is fastest. It will also test whether performance can
be enhanced by shifting load from the reciprocal to the real space
Simply pass your [TT].tpr[tt] file to g_tune_pme together with other options
Which executables are used can be set in the environment variables
MPIRUN and MDRUN. If these are not present, 'mpirun' and 'mdrun'
will be used as defaults. Note that for certain MPI frameworks you
need to provide a machine- or hostfile. This can also be passed
'export MPIRUN="/usr/local/mpirun -machinefile hosts"'[PAR]
Please call g_tune_pme with the normal options you would pass to
mdrun and add [TT]-np[tt] for the number of processors to perform the
tests on, or [TT]-nt[tt] for the number of threads. You can also add [TT]-r[tt]
to repeat each test several times to get better statistics. [PAR]
g_tune_pme can test various real space / reciprocal space workloads
for you. With [TT]-ntpr[tt] you control how many extra [TT].tpr[tt] files will be
written with enlarged cutoffs and smaller fourier grids respectively.
Typically, the first test (no. 0) will be with the settings from the input
[TT].tpr[tt] file; the last test (no. [TT]ntpr[tt]) will have cutoffs multiplied
by (and at the same time fourier grid dimensions divided by) the scaling
factor [TT]-fac[tt] (default 1.2). The remaining [TT].tpr[tt] files will have equally
spaced values inbetween these extremes. Note that you can set [TT]-ntpr[tt] to 1
if you just want to find the optimal number of PME-only nodes; in that case
your input [TT].tpr[tt] file will remain unchanged.[PAR]
For the benchmark runs, the default of 1000 time steps should suffice for most
MD systems. The dynamic load balancing needs about 100 time steps
to adapt to local load imbalances, therefore the time step counters
are by default reset after 100 steps. For large systems
(>1M atoms) you may have to set [TT]-resetstep[tt] to a higher value.
From the 'DD' load imbalance entries in the md.log output file you
can tell after how many steps the load is sufficiently balanced.[PAR]Example call: [TT]g_tune_pme -np 64 -s protein.tpr -launch[tt][PAR]
After calling mdrun several times, detailed performance information
is available in the output file perf.out. 
Note that during the benchmarks a couple of temporary files are written
(options -b*), these will be automatically deleted after each test.[PAR]
If you want the simulation to be started automatically with the
optimized parameters, use the command line option [TT]-launch[tt].[PAR]
>\f{12}m\f{4}\sX\N
\f{12}m\f{4}\sY\N
\f{12}m\f{4}\sZ\N
\f{12}m\f{4}\stot\N
Box-%c (nm)
\f{12}m\f{4} (D)
-autoscale xy -nxy
xcm[n]
CY: %10f  %5d
Alpha
M\sx \N
M\sy \N
M\sz \N
|M\stot \N|
epsilon
G\sk
g\sk
< |M|\S2\N > - < |M| >\S2\N
< |M| >\S2\N / < |M|\S2\N >
RMSD cos
<mu>
Error
Volume
Mu-X
Mu-Y
Mu-Z
muall
muall[0]
muall[i]
Qlsq
Total Dipole Moment (Debye)
Epsilon and Kirkwood factors
Total dipole moment
slab_dipoles
Doing slab analysis
Dipole (D)
Average molecular dipole
Average pair orientation
dipsp
dummy.dat
End of %s reached
dipole_bin
GKRWIDTH
gb->elem
gb->count
gb->cmap
gb->cmap[i]
inten
inten[i]
ev[i]
Q[%d] = %8.3f  %8.3f  %8.3f
ev[%d] = %8.3f  %8.3f  %8.3f
Q'[%d] = %8.3f  %8.3f  %8.3f
Quadrupole
set title "t = %4.3f"
set xrange [0.0:%4.2f]
set yrange [0.0:%4.2f]
set zrange [0.0:%4.2f]
%10g %f 
%10g  %10.3e %10.3e %10.3e
%10g  %12.8e
G\sk\N(r)
< cos >
h\sOO\N
g\sOO\N
Distance dependent Gk
ngrp = %d, nframes = %d
No data in the cmap
t0 %g, t %g, teller %d
molsep
Dipole moment (Debye)
-----------------------------
 Total < M_x > = %g Debye
 Total < M_y > = %g Debye
 Total < M_z > = %g Debye
Epsilon = %g
mu (Debye)
Dipole Moment Distribution
(*gb)->elem
(*gb)->count
(*gb)
total
-mumax
-epsilonRF
-pairs
-ncos
-axis
-gkratom
-gkratom2
-rcmax
-ndegrees
Mtot
dipdist
-adip
-dip3d
-cos
cosaver
-cmap
quadrupole
-slab
ncos has to be either 1 or 2
grpindex
-autoscale xy
low dielectric media.
simulation.
the simulation
([TT]total[tt]).[PAR]
EXAMPLES[PAR]
Average dipole moment per slab
%10.3f  %10.3f  %10.3f  %10.3f  %10.3f
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_dipoles.c
mu[%d] = %5.2f %5.2f %5.2f |mi| = %5.2f, mu[%d] = %5.2f %5.2f %5.2f |mj| = %5.2f rr = %5.2f cosa = %5.2f
Something strange: expected %d entries in energy file at step %s
(time %g) but found %d entries
\f{4}<|cos\f{12}q\f{4}\sij\N|>
\f{4}<|cos\f{12}q\f{4}\siX\N|>
\f{4}<|cos\f{12}q\f{4}\siY\N|>
\f{4}<|cos\f{12}q\f{4}\siZ\N|>
Using Volume from topology: %g nm^3
Total dipole moment of the simulation box vs. time
axtitle = %s, nslices = %d, idim = %d
# This file was created by %s
# which is part of G R O M A C S:
 Skipping Frame %6d, time: %8.3f
set arrow %d from %f, %f, %f to %f, %f, %f lt %d  # %d %d
splot 'dummy.dat' using 1:2:3 w vec
pause -1 'Hit return to continue'
%10.3e  %10.3e  %10.3e  %10.3e  %10.3e  %10.3e
%10g  %12.8e %12.8e %12.8e %12.8e
%10g  %10.3e %10.3e %10.3e %10.3e
Average volume over run is %g
Number density is %g molecules / nm^3
%10.5e %12.5e %12.5e %12.5e %12.5e  %12.5e
Dipole Orientation Distribution
Not enough frames for autocorrelation
Autocorrelation Function of Total Dipole
Dipole Autocorrelation Function
Average  = %8.4f  Std. Dev. = %8.4f  Error = %8.4f
Quadrupole moment (Debye-Ang)
Averages  = %8.4f  %8.4f  %8.4f
Std. Dev. = %8.4f  %8.4f  %8.4f
Error     = %8.4f  %8.4f  %8.4f
The following averages for the complete trajectory have been calculated:
 Total < M_x^2 > = %g Debye^2
 Total < M_y^2 > = %g Debye^2
 Total < M_z^2 > = %g Debye^2
 Total < |M|^2 > = %g Debye^2
 Total |< M >|^2 = %g Debye^2
 < |M|^2 > - |< M >|^2 = %g Debye^2
Finite system Kirkwood g factor G_k = %g
Infinite system Kirkwood g factor g_k = %g
Average absolute dipole orientation
index[%d]=%d does not correspond to the first atom of a molecule
The index group is not a set of whole molecules
There are %d molecules in the selection
dipole of a single molecule (in Debye)
max dipole in Debye (for histrogram)
epsilon of the reaction field used during the simulation, needed for dielectric constant calculation. WARNING: 0.0 means infinity (default)
Skip steps in the output (but not in the computations)
Average temperature of the simulation (needed for dielectric constant calculation)
Correlation function to calculate
Calculate |cos theta| between all pairs of molecules. May be slow
Must be 1 or 2. Determines whether the <cos> is computed between all mole cules in one group, or between molecules in two different groups. This turns on the -gkr flag.
Take the normal on the computational box in direction X, Y or Z.
Use the n-th atom of a molecule (starting from 1) to calculate the distance between molecules rather than the center of charge (when 0) in the calculation of distance dependent Kirkwood factors
Same as previous option in case ncos = 2, i.e. dipole interaction between two groups of molecules
Maximum distance to use in the dipole orientation distribution (with ncos == 2). If zero, a criterium based on the box length will be used.
Plot the 'torsion angle' defined as the rotation of the two dipole vectors around the distance vector between the two molecules in the xpm file from the -cmap option. By default the cosine of the angle between the dipoles is plotted.
Number of colors in the cmap output
Number of divisions on the y-axis in the camp output (for 180 degrees)
Using %g as mu_max and %g as the dipole moment.
WARNING: EpsilonRF = 0.0, this really means EpsilonRF = infinity
WARNING: Can not determine quadrupoles from energy file
WARNING: Can not determine Gk(r) from energy file
WARNING: Can not calculate Gk and gk, since you did
         not enter a valid dipole for the molecules
There are %d charged molecules in the selection,
will subtract their charge at their center of mass
g_dipoles computes the total dipole plus fluctuations of a simulation
system. From this you can compute e.g. the dielectric constant for
For molecules with a net charge, the net charge is subtracted at
center of mass of the molecule.[PAR]
The file Mtot.xvg contains the total dipole moment of a frame, the
components as well as the norm of the vector.
The file aver.xvg contains < |Mu|^2 > and |< Mu >|^2 during the
The file dipdist.xvg contains the distribution of dipole moments during
The mu_max is used as the highest value in the distribution graph.[PAR]
Furthermore the dipole autocorrelation function will be computed when
option -corr is used. The output file name is given with the [TT]-c[tt]
The correlation functions can be averaged over all molecules
([TT]mol[tt]), plotted per molecule separately ([TT]molsep[tt])
or it can be computed over the total dipole moment of the simulation box
Option [TT]-g[tt] produces a plot of the distance dependent Kirkwood
G-factor, as well as the average cosine of the angle between the dipoles
as a function of the distance. The plot also includes gOO and hOO
according to Nymand & Linse, JCP 112 (2000) pp 6386-6395. In the same plot
we also include the energy per scale computed by taking the inner product of
the dipoles divided by the distance to the third power.[PAR]
g_dipoles -corr mol -P1 -o dip_sqr -mu 2.273 -mumax 5.0 -nofft[PAR]
This will calculate the autocorrelation function of the molecular
dipoles using a first order Legendre polynomial of the angle of the
dipole vector and itself a time t later. For this calculation 1001
frames will be used. Further the dielectric constant will be calculated
using an epsilonRF of infinity (default), temperature of 300 K (default) and
an average dipole moment of the molecule of 2.273 (SPC). For the
distribution function a maximum of 5.0 will be used.
?es-8R
@DISRE: ndr = %d, label = %d  i=%d, n =%d
tpr inconsistency. ndr = %d, label = %d
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_disre.c
There are %d restraints and %d pairs
Number of large violations that are stored in the log file every step
Maximum distance violation in matrix output. If less than or equal to 0 the maximum will be determined by the data.
Number of levels in the matrix output
Use inverse third power averaging or linear for matrix output
There are more frames in the trajectory than in the cluster index file. t = %8f
++++++++++++++ STATISTICS ++++++++++++++++++++++
Cluster  NFrames    SumV      MaxV     SumVT     MaxVT     SumVS     MaxVS
Inconsistency in cluster %s.
Found %d frames in trajectory rather than the expected %d
Inconsistency with cluster %d. Invalid name
%-10s%6d%8.3f  %8.3f  %8.3f  %8.3f  %8.3f  %8.3f
++++++++++++++ STATISTICS ++++++++++++++++++++++++
Restr. Core     Up1     <r>   <rT3>   <rT6>  <viol><violT3><violT6>
%6d%5s%8.3f%8.3f%8.3f%8.3f%8.3f%8.3f%8.3f
+++ Sorted by linear averaged violations: +++
+++++++ Using %s averaging: ++++++++
Number of violated restraints: %d/%d
Coloured by average violation in Angstrom
nlabel = %d, index = %d, ndr = %d
DR %d, atoms %d, %d, distance %g
Warning: the maxdr that you have specified (%g) is smaller than
the largest value in your simulation (%g)
Highest level in the matrix will be %g
g_disre computes violations of distance restraints.
If necessary all protons can be added to a protein molecule 
using the protonate program.[PAR]
computes the instantaneous violations rather than time-averaged,
because this analysis is done from a trajectory file afterwards
it does not make sense to use time averaging. However,
the time averaged values per restraint are given in the log file.[PAR]
An index file may be used to select specific restraints for
When the optional[TT]-q[tt] flag is given a pdb file coloured by the
amount of average violations.[PAR]
When the [TT]-c[tt] option is given, an index file will be read
containing the frames in your trajectory corresponding to the clusters
(defined in another manner) that you want to analyze. For these clusters
the program will compute average violations using the third power
averaging algorithm and print them in the log file.
ndr = %d, rt_6 = %f
Index:
Viol: 
 %6.3f
-ntop
-maxdr
-third
drsum
draver
drnum
drmax
restr
disres
ind_fit
Inidividual Restraints
vvindex
index %d
dr->aver1
dr->aver2
dr->aver_3
dr->aver_6
dr_clust
Sum of Violations
Average Violation
# Violations
Largest Violation
Made forcerec
my_clust
dr[%d].aver_3[%d] = %f
+++++++ %s ++++++++
Sum of violations: %8.3f nm
Average violation: %8.3f nm
Largest violation: %8.3f nm
t_res
w_dr
nlabel is %d, label = %d
ndr = %d, index = %d
<V> (nm)
Distance Violations
The program always
printing.[PAR]
linear
third power
sixth power
All restraints
Core restraints
@UUUUUU
UUUUUU
g_dist can calculate the distance between the centers of mass of two
groups of atoms as a function of time. The total distance and its
x, y and z components are plotted.[PAR]
Or when [TT]-dist[tt] is set, print all the atoms in group 2 that are
closer than a certain distance to the center of mass of group 1.[PAR]
With options [TT]-lt[tt] and [TT]-dist[tt] the number of contacts
of all atoms in group 2 that are closer than a certain distance
to the center of mass of group 1 are plotted as a function of the time
that the contact was continously present.[PAR]
Other programs that calculate distances are [TT]g_mindist[tt]
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_dist.c
Atom number %d, item %d of group %d, is larger than number of atoms in the topolgy (%d)
Atom number %d in an index group is larger than number of atoms in the trajectory (%d)
Print all atoms in group 2 closer than dist to the center of mass of group 1
and [TT]g_bond[tt].
d\sx\N
d\sy\N
d\sz\N
lifetime
isize
contact_time
%12.7f 
%12.7f %12.7f %12.7f %12.7f
t: %g  %d %s %d %s  %g (nm)
*ccount
%s - %s within %g nm
Number of contacts
%10.3f %10.3f
-firstangle
-lastangle
-nframe
-maxangle
-head
Last atom of the arrow vector
dyndom
rotated
domains
Select group to rotate:
index_all
Effective translation %g nm
Arrow vector not given
Phi = %.1f, Theta = %.1f
Rinvy
Rinvz
comparison (using diff).[PAR]
validate the structure.
Angle of rotation about rotation vector
Number of steps on the pathway
DymDom dtermined angle of rotation about rotation vector
Translation (Aangstroem) along rotation vector (see DynDom info file)
First atom of the arrow vector
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_dyndom.c
Going to rotate %s containg %d atoms
Frame: %2d (label %c), angle: %8.3f deg., trans: %8.3f nm
Arrow vector:   %10.4f  %10.4f  %10.4f
Center of mass: %10.4f  %10.4f  %10.4f
g_dyndom reads a pdb file output from DynDom
http://www.cmp.uea.ac.uk/dyndom/
It reads the coordinates, and the coordinates of the rotation axis
furthermore it reads an index file containing the domains.
Furthermore it takes the first and last atom of the arrow file
as command line arguments (head and tail) and
finally it takes the translation vector (given in DynDom info file)
and the angle of rotation (also as command line arguments). If the angle
determined by DynDom is given, one should be able to recover the
second structure used for generating the DynDom output.
Because of limited numerical accuracy this should be verified by
computing an all-atom RMSD (using [TT]g_confrms[tt]) rather than by file
The purpose of this program is to interpolate and extrapolate the
rotation as found by DynDom. As a result unphysical structures with
long or short bonds, or overlapping atoms may be produced. Visual
inspection, and energy minimization may be necessary to
-sum
-mean
max value for energies
min value for energies
-coul
extract Coulomb SR energies
-coulr
extract Coulomb LR energies
-coul14
extract Coulomb 1-4 energies
-lj14
-bhamsr
-bhamlr
-free
calculate free energy
-groups
groups.dat
-eref
eref.dat
-emat
-etot
No energies!
Read %d groups
group %d
%s:%s-%s
eneset
Read frame: %d, Time: %.3f
eneset[i]
emat[j]
emat[j][i]
groupnr
Read %d reference energies
erefres
erefres[i]
%s %lf
eaver
efree
edif
%s Interaction Energies
Residue Index
Energy (kJ/mol)
etot[m]
kJ/mol
Mean Energy
@ legend string %d "%s"
Free
Diff
@TYPE xy
#%3s
 %9s
%3.0f
 %9.5g
[TT]2[tt][BR]
[TT]Protein[tt][BR]
[TT]SOL[tt][BR]
in the comparison.
Sum the energy terms selected rather than display them all
Skip number of frames between data points
with -groups extracts matrix of mean energies instead of matrix for each timestep
number of levels for matrix colors
extract Lennard-Jones SR energies
extract Lennard-Jones LR energies
extract Lennard-Jones 1-4 energies
extract Buckingham SR energies
extract Buckingham LR energies
reference temperature for free energy calculation
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_enemat.c
Will read groupnames from inputfile
WARNING! could not find group %s (%d,%d)in energy file
Will select half-matrix of energies with %d elements
Will build energy half-matrix of %d groups, %d elements, over %d frames
Will read reference energies from inputfile
Matrix of %s energy is uniform at %f (will not produce output).
Matrix of %s energy ranges from %f to %f
Energy range adjusted: %f to %f
While typing at your keyboard, suddenly...
...nothing happens.
WARNING: Not Implemented Yet
WARNING: group %s not found in reference energies.
g_enemat extracts an energy matrix from the energy file ([TT]-f[tt]).
With [TT]-groups[tt] a file must be supplied with on each
line a group of atoms to be used. For these groups matrix of
interaction energies will be extracted from the energy file
by looking for energy groups with names corresponding to pairs
of groups of atoms. E.g. if your [TT]-groups[tt] file contains:[BR]
then energy groups with names like 'Coul-SR:Protein-SOL' and 
'LJ:Protein-SOL' are expected in the energy file (although
[TT]g_enemat[tt] is most useful if many groups are analyzed
simultaneously). Matrices for different energy types are written
out separately, as controlled by the
[TT]-[no]coul[tt], [TT]-[no]coulr[tt], [TT]-[no]coul14[tt], 
[TT]-[no]lj[tt], [TT]-[no]lj14[tt], 
[TT]-[no]bham[tt] and [TT]-[no]free[tt] options.
Finally, the total interaction energy energy per group can be 
calculated ([TT]-etot[tt]).[PAR]
An approximation of the free energy can be calculated using:
E(free) = E0 + kT log( <exp((E-E0)/kT)> ), where '<>'
stands for time-average. A file with reference free energies
can be supplied to calculate the free energy difference
with some reference state. Group names (e.g. residue names)
in the reference file should correspond to the group names
as used in the [TT]-groups[tt] file, but a appended number
(e.g. residue number) in the [TT]-groups[tt] will be ignored
AStoring average for err.est.: %s steps
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_energy.c
Requested %d blocks, we have %d blocks, min %s nsteps %s
Not enough steps (%s) for statistics
Statistics over %s steps [ %.4f through %.4f ps ], %d data sets
All statistics are over %s points
All statistics are over %d points (frames)
 %s has statistics over %d points (frames)
All other statistics are over %s points
-------------------------------------------------------------------------------
%-24s %10g %10s %10s %10g  (%s)
Temperature dependent fluctuation properties at T = %g. #constr/mol = %d
Warning: nmol = %d, this may not be what you want.
Isothermal Compressibility: %10g /%s
Adiabatic bulk modulus:     %10g  %s
Heat capacity at constant pressure Cp: %10g J/mol K
Thermal expansion coefficient alphaP: %10g 1/K
Heat capacity at constant volume Cv: %10g J/mol K
Shear viscosity using Einstein relation
Reference temperature for free energy calculation
Print energies in high precision
Minimum number of blocks for error estimate
Maximum number of blocks for error estimate
Compute the total dipole moment from the components
Also print the exact average and rmsd stored in the energy frames (only when 1 term is requested)
Number of molecules in your sample: the energies are divided by this number
Number of constraints per molecule. Necessary for calculating the heat capacity
Calculate autocorrelation of energy fluctuations rather than energy itself
Analyse instantaneous orientation data
Also plot the eigenvectors with -oten
Could not find term %s for viscosity calculation
Select the terms you want from the following list by
selecting either (part of) the name or the number or a combination.
End your selection with an empty line or a zero.
String '%s' does not match anything
Printing averages can only be done when a single set is selected
No orientation restraints in topology!
Found %d orientation restraints with %d experiments
Select the orientation restraint labels you want (-1 is all)
Selecting all %d orientation restraints
Orientation restraint label %d not found
Orientation restraint deviation
No distance restraints in topology!
get_bounds for distance restraints
@ subtitle "averaged (tau=%g) and instantaneous"
Number of disre sub-blocks not equal to 2
Number of disre pairs in the energy file (%d) does not match the number in the run input file (%d)
Select the terms you want from the following list
This energy file contains both histogram dhdl data and non-histogram dhdl data. Don't know what to do.
Length inconsistency in dhdl data
Orientational restraints read in incorrectly
Number of orientation restraints in energy file (%d) does not match with the topology (%d)
Number of orientation experiments in energy file (%g) does not match with the topology (%d)
Average calculated orientations
RMS orientation restraint deviations
Sum of violations averaged over simulation: %g nm
Largest violation averaged over simulation: %g nm
Wrote %d lambda values with %d samples as 
WARNING time mismatch %g!=%g at frame %s
WARNING file length mismatch %d!=%d
Running average free energy difference
dF = -kT ln < exp(-(EB-EA)/kT) >A
WARNING energy set name mismatch %s!=%s
g_energy extracts energy components or distance restraint
data from an energy file. The user is prompted to interactively
select the energy terms she wants.[PAR]
Average, RMSD and drift are calculated with full precision from the
simulation (see printed manual). Drift is calculated by performing
a LSQ fit of the data to a straight line. The reported total drift
is the difference of the fit at the first and last point.
An error estimate of the average is given based on a block averages
over 5 blocks using the full precision averages. The error estimate
can be performed over multiple block lengths with the options
[TT]-nbmin[tt] and [TT]-nbmax[tt].
Note that in most cases the energy files contains averages over all
MD steps, or over many more points than the number of frames in
energy file. This makes the g_energy statistics output more accurate
than the xvg output. When exact averages are not present in the energy
file the statistics mentioned above is simply over the single, per-frame
The term fluctuation gives the RMSD around the LSQ fit.[PAR]
Some fluctuation-dependent properties can be calculated provided
the correct energy terms are selected. The following properties
Property                        Energy terms needed[BR]
---------------------------------------------------[BR]
Heat capacity Cp (NPT sims):    Enthalpy, Temp     [BR]
Heat capacity Cv (NVT sims):    Etot, Temp         [BR]
Thermal expansion coeff. (NPT): Enthalpy, Vol, Temp[BR]
Isothermal compressibility:     Vol, Temp          [BR]
Adiabatic bulk modulus:         Vol, Temp          [BR]
You always need to set the number of molecules [TT]-nmol[tt], and,
if you used constraints in your simulations you will need to give
the number of constraints per molecule [TT]-nconstr[tt] in order to
correct for this: (nconstr/2) kB is subtracted from the heat
capacity in this case. For instance in the case of rigid water
you need to give the value 3 to this option.[PAR]
When the [TT]-viol[tt] option is set, the time averaged
violations are plotted and the running time-averaged and
instantaneous sum of violations are recalculated. Additionally
running time-averaged and instantaneous distances between
selected pairs can be plotted with the [TT]-pairs[tt] option.[PAR]
Options [TT]-ora[tt], [TT]-ort[tt], [TT]-oda[tt], [TT]-odr[tt] and
[TT]-odt[tt] are used for analyzing orientation restraint data.
The first two options plot the orientation, the last three the
deviations of the orientations from the experimental values.
The options that end on an 'a' plot the average over time
as a function of restraint. The options that end on a 't'
prompt the user for restraint label numbers and plot the data
as a function of time. Option [TT]-odr[tt] plots the RMS
deviation as a function of restraint.
When the run used time or ensemble averaged orientation restraints,
option [TT]-orinst[tt] can be used to analyse the instantaneous,
not ensemble-averaged orientations and deviations instead of
the time and ensemble averages.[PAR]
Option [TT]-oten[tt] plots the eigenvalues of the molecular order
tensor for each orientation restraint experiment. With option
[TT]-ovec[tt] also the eigenvectors are plotted.[PAR]
Option [TT]-odh[tt] extracts and plots the free energy data
(Hamiltoian differences and/or the Hamiltonian derivative dhdl)
With [TT]-fee[tt] an estimate is calculated for the free-energy
difference with an ideal gas state: [BR]
  Delta A = A(N,V,T) - A_idgas(N,V,T) = kT ln < e^(Upot/kT) >[BR]
  Delta G = G(N,p,T) - G_idgas(N,p,T) = kT ln < e^(Upot/kT) >[BR]
where k is Boltzmann's constant, T is set by [TT]-fetemp[tt] and
the average is over the ensemble (or time in a trajectory).
Note that this is in principle
only correct when averaging over the whole (Boltzmann) ensemble
and using the potential energy. This also allows for an entropy
  Delta S(N,V,T) = S(N,V,T) - S_idgas(N,V,T) = (<Upot> - Delta A)/T[BR]
  Delta S(N,p,T) = S(N,p,T) - S_idgas(N,p,T) = (<Upot> + pV - Delta G)/T
When a second energy file is specified ([TT]-f2[tt]), a free energy
difference is calculated dF = -kT ln < e ^ -(EB-EA)/kT >A ,
where EA and EB are the energies from the first and second energy
files, and the average is over the ensemble A. [BB]NOTE[bb] that
the energies must both be calculated from the same trajectory.
esum->s
s->ener
s->es
The term%s
Tot-Drift
RMSD
Err.Est.
Average
%-24s %10s %10s %10s %10s
-kT ln<e^(E/kT)>
empera
olum
%.1e
%-24s %10g %10s %10g %10g
  (%s)
Total
Allen1987a
Shear
Bulk
enesum
enesum[i]
(kg m\S-1\N s\S-1\N ps)
Shear viscosity integral
eviscoi.xvg
(kg m\S-1\N s\S-1\N)
evisco.xvg
\8h\4 (cp)
-fee
Do a free energy estimate
-fetemp
-zero
Subtract a zero-point energy
-nbmax
-mutot
-nmol
-nconstr
-fluc
-orinst
-ovec
Running average
Instantaneous
violaver
-ora
orienta
-ort
orientt
-oda
orideva
-odr
oridevr
-odt
oridevt
-oten
oriten
enecorr
-vis
visco
-ravg
runavgdf
-odh
Enter the box volume (nm^3): 
VERBOSE
newnm
%3d  %-14s
%3d  %-34s
number %d is out of range
No energy terms selected
newnm[i]
Gromacs Energies
bIsEner
*label
*obs
orient
odrms
End your selection with 0
orsel
odtleg
odtleg[i]
Calculated orientations
@ subtitle "instantaneous"
Order tensor
otenleg
vec%d%s
eig%d
*ltop
Pair Distances
edat.s
edat.step
edat.steps
edat.points
edat.s[i].ener
edat.s[i].es
pairleg
pairleg[i]
%d %s %d %s (%d)
 %3d=%14s
leg[2*i]
a %s
leg[2*i+1]
i %s
%12.6f
  %8.4f  %8.4f
  %8.4f
Unexpected block data
\DeltaH
dH/d\lambda
%s, %s
Time
%s (%s)
N(%s)
T = %g (K), %s = %g
Unexpected block data in file
N(%s(%s=%g) | %s=%g)
N(%s | %s=%g)
%g %d
%g %d
setnames
%s %s %g
setnames[i]
  %.4f
  %16.12f
  %10.6f
  %10f
Restraint label
%5d  %g
Average restraint deviation
DR Index
r\S-3\N average violations
%10d  %10.5e
-graphtype bar
%d dH histograms 
%d dH data blocks 
No dH data in %s
\8D\4E = E\sB\N-E\sA\N
<e\S-\8D\4E/kT\N>\s0..t\N
eneset2
eneset2[i]
\8D\4E (kJ/mol)
%-24s %10s
%-24s %10g
Pres-XX
Pres-XY
Pres-XZ
Pres-YX
Pres-YY
Pres-YZ
Pres-ZX
Pres-ZY
Pres-ZZ
Temperature
Pressure
energy values.[PAR]
will be computed:[BR]
from the ener.edr file.[PAR]
estimate using:[BR]
g_lie computes a free energy estimate based on an energy analysis
from. One needs an energy file with the following components:
Lennard-Jones interaction between ligand and solvent
Coulomb interaction between ligand and solvent
Factor in the LIE equation for Lennard-Jones component of energy
Factor in the LIE equation for Coulomb component of energy
Name of the ligand in the energy file
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_lie.c
Using the following energy terms:
Coul (A-B) LJ-SR (A-B) etc.
-Elj
-Eqq
-Clj
-Cqq
-ligand
ld->lj
Coul
ld->qq
LJ:  
  %12s
Coul:
DGbind (kJ/mol)
LIE free energy estimate
DGbind = %.3f (%.3f)
lowpass
highpass
filter weights:
equally in the output.
Sets the filter length as well as the output interval for low-pass filtering
Write all low-pass filtered frames
Remove jumps of atoms across the box
Fit all frames to a reference structure
Select group for least squares fit
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_filter.c
g_filter performs frequency filtering on a trajectory.
The filter shape is cos(pi t/A) + 1 from -A to +A, where A is given
by the option [TT]-nf[tt] times the time step in the input trajectory.
This filter reduces fluctuations with period A by 85%, with period
2*A by 50% and with period 3*A by 17% for low-pass filtering.
Both a low-pass and high-pass filtered trajectory can be written.[PAR]
Option [TT]-ol[tt] writes a low-pass filtered trajectory.
A frame is written every [TT]nf[tt] input frames.
This ratio of filter length and output interval ensures a good
suppression of aliasing of high-frequency motion, which is useful for
making smooth movies. Also averages of properties which are linear
in the coordinates are preserved, since all input frames are weighted
When all frames are needed, use the [TT]-all[tt] option.[PAR]
Option [TT]-oh[tt] writes a high-pass filtered trajectory.
The high-pass filtered coordinates are added to the coordinates
from the structure file. When using high-pass filtering use [TT]-fit[tt]
or make sure you use a trajectory which has been fitted on
the coordinates in the structure file.
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_gyrate.c
g_gyrate computes the radius of gyration of a group of atoms
and the radii of gyration about the x, y and z axes,
as a function of time. The atoms are explicitly mass weighted.[PAR]
With the [TT]-nmol[tt] option the radius of gyration will be calculated
for multiple molecules by splitting the analysis group in equally
With the option [TT]-nz[tt] 2D radii of gyration in the x-y plane
of slices along the z-axis are calculated.
The number of molecules to analyze
Use absolute value of the charge of an atom as weighting factor instead of mass
Calculate the radii of gyration about the principal axes.
Calculate the moments of inertia (defined by the principal axes).
Calculate the 2D radii of gyration of # slices along the z-axis
Will rotate system along principal axes
Will print radius normalised by charge
The number of atoms in the group (%d) is not a multiple of nmol (%d)
@ subtitle "Axes are principal component axes"
 %5.3f %5.3f
sized parts.[PAR]
-moi
Itot
gyrate
moi-acf
Can only do acf with nmol=1
moi_trans
Will print moments of inertia
Rg (nm)
Radius of Charge
I (a.m.u. nm\S2\N)
Moments of inertia
Radius of gyration
moi_trans[m]
%10g  %10g  %10g  %10g  %10g
Moment of inertia vector ACF
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_h2order.c
No valid value for -axis-. Exiting.
Box divided in %d slices. Initial width of slice: %f
HELP PANIC! slice = %d, OUT OF RANGE!
Read trajectory. Printing parameters to file
mu_x, mu_y, mu_z (D), cosine with normal
Compute the orientation of water molecules with respect to the normal
of the box. The program determines the average cosine of the angle
between de dipole moment of water and an axis of the box. The box is
divided in slices and the average orientation per slice is printed.
Each water molecule is assigned to a slice, per time frame, based on the
position of the oxygen. When -nm  is used the angle between the water
dipole and the axis from the center of mass to the oxygen is calculated
instead of the angle between the dipole and a box axis.
Calculate order parameter as function of boxlength, dividing the box in #nr slices.
The program assigns whole water molecules to a slice, based on the firstatom of three in the index file group. It assumes an order O,H,H.Name is not important, but the order is. If this demand is not met,assigning molecules to slices is different.
Coordinate: %f 
%d waters in slice %d
No water in slice %d
%d slices
box (nm)
%8.3f %8.3f %8.3f %8.3f %e
@B/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_hbond.c
Hm. This isn't the first time I found this donor (%d,%d)
Donor %d has more than %d hydrogens!
Warning: Atom %d is not in the d/a-table!
'per' not initialized properly.
p2i not initialized. This shouldn't happen!
Your computational box has shrunk too much.
%s can not handle this situation, sorry.
Correlation functions too short to compute thermodynamics
Hydrogen bond thermodynamics at T = %g K
This program needs the GNU scientific library to work.
Fitting paramaters chi^2 = %10g, Quality of fit = %10g
The Rate and Delta G are followed by an error estimate
----------------------------------------------------------
Type      Rate (1/ps)  Sigma Time (ps)  DG (kJ/mol)  Sigma
Forward    %10.3f %6.2f   %8.3f  %10.3f %6.2f
Backward   %10.3f %6.2f   %8.3f  %10.3f %6.2f
Fitting parameters chi^2 = %10g
Q = %10g
--------------------------------------------------
Type      Rate (1/ps) Time (ps)  DG (kJ/mol)  Chi^2
Forward    %10.3f   %8.3f  %10.3f  %10g
Backward   %10.3f   %8.3f  %10.3f
One-way    %10.3f   %s%8.3f  %10.3f
 - Numerical problems computing HB thermodynamics:
sc2 = %g  sn2 = %g  sk2 = %g sck = %g snk = %g scn = %g
Integral   %10.3f   %s%8.3f  %10.3f
Relaxation %10.3f   %8.3f  %s%10.3f
according to the reversible geminate recombination model by Omer Markowitch.
according to the theory of Luzar and Chandler.
Too many pshifts. Something's utterly wrong here.
rHbExGem not initialized! m = %i
Shift not found, but must be there.
Normalization for c(t) = %g for gh(t) = %g
ACF successfully calculated.
WARNING: Correlation function is probably not long enough
because the standard deviation in the tail of C(t) > %g
Tail value (average C(t) over second half of acf): %g +/- %g
Cutoff angle (degrees, Acceptor - Donor - Hydrogen)
Cutoff radius (nm, X - Acceptor, see next option)
Use distance Donor-Acceptor (if TRUE) or Hydrogen-Acceptor (FALSE)
Second cutoff radius. Mainly useful with -contact and -ac
Binwidth angle distribution (degrees)
Binwidth distance distribution (nm)
Regard nitrogen atoms as acceptors
Do not look for hydrogen bonds, but merely for contacts within the cut-off distance
when > 0, only calculate hydrogen bonds within # nm shell around one particle
Time (ps) from which to start fitting the correlation functions in order to obtain the forward and backward rate constants for HB breaking and formation. With -gemfit we suggest -fitstart 0
Time (ps) to which to stop fitting the correlation functions in order to obtain the forward and backward rate constants for HB breaking and formation (only with -gemfit)
Temperature (K) for computing the Gibbs energy corresponding to HB breaking and reforming
Dump the first N hydrogen bond ACFs in a single xvg file for debugging
Theoretical maximum number of hydrogen bonds used for normalizing HB autocorrelation function. Can be useful in case the program estimates it wrongly
H-bonds between the same donor and acceptor, but with different hydrogen are treated as a single H-bond. Mainly important for the ACF.
Use reversible geminate recombination for the kinetics/thermodynamics calclations. See Markovitch et al., J. Chem. Phys 129, 084505 (2008) for details.
Dffusion coefficient to use in the rev. gem. recomb. kinetic model. If non-positive, then it will be fitted to the ACF along with ka and kd.
The option [TT]-sel[tt] that used to work on selected hbonds is out of order, and therefore not available for the time being.
Note that some aspects of reversible geminate recombination won't work without gsl.
Turning off -contact option...
Can not analyze contact between H and A: turn off -noda
Atom has index %d larger than number of atoms %d.
Checking for overlap in atoms between %s and %s
Partial overlap between groups '%s' and '%s'
Calculating %s between %s (%d atoms) and %s (%d atoms)
Calculating %s in %s (%d atoms)
Found %d donors and %d acceptors
Could not allocate enough memory for hbmap
Could not allocate enough memory for per->pHist
Select atom for shell (1 atom):
group contains %d atoms, should be 1 (one)
Will calculate hydrogen bonds within a shell of %g nm around atom %i
Topology (%d atoms) does not match trajectory (%d atoms)
Will do grid-seach on %dx%dx%d grid, rcut=%g
Can't do geminate recombination without periodic box.
Inconsistent donor groups, %d iso %d, atom %d
Inconsistent acceptor groups, %d iso %d, atom %d
Donor %d does not have hydrogen %d (a = %d)
Incomprehensible iValue %d in set_hb
No such hydrogen %d on donor %d
distance is higher than what is allowed for an hbond: %f
Cannot calculate autocorrelation of life times with less than two frames
Found %d different %s in trajectory
Found %d different atom-pairs within %s distance
Merging hbonds with Acceptor and Donor swapped
Couldn't find mirror of [%i, %i, %i], index 
Neither hydrogen bond nor distance
- Reduced number of hbonds from %d to %d
- Reduced number of distances from %d to %d
Hydrogen - Acceptor Distance (nm)
Donor - Hydrogen - Acceptor Angle (\SO\N)
Average number of %s per timeframe %.3f out of %g possible
Could not initiate t_gemParams params.
Uninterrupted contact lifetime
Uninterrupted hydrogen bond lifetime
Note that the lifetime obtained in this manner is close to useless
Use the -ac option instead and check the Forward lifetime
There were %i periodic shifts
Freeing pHist for all donors...
g_hbond computes and analyzes hydrogen bonds. Hydrogen bonds are
determined based on cutoffs for the angle Acceptor - Donor - Hydrogen
(zero is extended) and the distance Hydrogen - Acceptor.
OH and NH groups are regarded as donors, O is an acceptor always,
N is an acceptor by default, but this can be switched using
[TT]-nitacc[tt]. Dummy hydrogen atoms are assumed to be connected
to the first preceding non-hydrogen atom.[PAR]
You need to specify two groups for analysis, which must be either
identical or non-overlapping. All hydrogen bonds between the two
If you set -shell, you will be asked for an additional index group
which should contain exactly one atom. In this case, only hydrogen
bonds between atoms within the shell distance from the one atom are
Note that the triplets need not be on separate lines.
Each atom triplet specifies a hydrogen bond to be analyzed,
note also that no check is made for the types of atoms.[PAR]
[TT]-num[tt]:  number of hydrogen bonds as a function of time.[BR]
[TT]-ac[tt]:   average over all autocorrelations of the existence
functions (either 0 or 1) of all hydrogen bonds.[BR]
[TT]-dist[tt]: distance distribution of all hydrogen bonds.[BR]
[TT]-ang[tt]:  angle distribution of all hydrogen bonds.[BR]
[TT]-hx[tt]:   the number of n-n+i hydrogen bonds as a function of time
where n and n+i stand for residue numbers and i ranges from 0 to 6.
This includes the n-n+3, n-n+4 and n-n+5 hydrogen bonds associated
[TT]-hbn[tt]:  all selected groups, donors, hydrogens and acceptors
for selected groups, all hydrogen bonded atoms from all groups and
all solvent atoms involved in insertion.[BR]
[TT]-hbm[tt]:  existence matrix for all hydrogen bonds over all
frames, this also contains information on solvent insertion
into hydrogen bonds. Ordering is identical to that in [TT]-hbn[tt]
[TT]-dan[tt]: write out the number of donors and acceptors analyzed for
each timeframe. This is especially useful when using [TT]-shell[tt].[BR]
[TT]-nhbdist[tt]: compute the number of HBonds per hydrogen in order to
compare results to Raman Spectroscopy.
Note: options [TT]-ac[tt], [TT]-life[tt], [TT]-hbn[tt] and [TT]-hbm[tt]
require an amount of memory proportional to the total numbers of donors
times the total number of acceptors in the selected group(s).
pHist->frame
pHist->p
ddd->don
ddd->nhydro
ddd->hydro
ddd->nhbonds
ddd->grp
ddd->dptr
Error in func_type %s
a->acc
a->grp
a->aptr
newgrid->atoms
Ac\sfin sys\v{}\z{}(t)
Ac(t)
Cc\scontact,hb\v{}\z{}(t)
-dAc\sfs\v{}\z{}/dt
Doing autocorrelation 
legGem
legGem[i]
Ac\s%s\v{}\z{}(t)
Ac\s%s,fit\v{}\z{}(t)
debug-ac.xvg
Donor:
pfound
rHbExGem
rHbExGem[m]
poff
j<poff[m]
ctdouble
timedouble
fittedct
Contact Autocorrelation
rhbex
dght
ACF %d/%d
  %1d-%1d
hydrogen bonds
second cut-off
hydrogen bonding
Contacts
Hydrogen Bonds
Hydrogen bonds
Contact
-abin
-rbin
-nitacc
-contact
-shell
-dump
-max_hb
-merge
-geminate
-diff
-num
hbnum
hbond
hbac
hbang
hbhelix
-hbn
-hbm
-don
donor
-dan
danum
-life
hblife
-nhbdist
None
Present
Present & Inserted
Invalid recombination type.
Geminate recombination: %s
Turning on -contact option...
Turning off -merge option...
Turning on -merge option...
0 HBs
1 HB
2 HBs
3 HBs
Number of donor-H with N HBs
hb->per
grpnames
datable
Specify 2 groups to analyze:
Making hbmap structure...
hb->hbmap
hb->hbmap[i]
done.
Making per structure...
hb->per->pHist
hb->per->pHist[i]
pShift->p
pShift->frame
hb->per->p2i
No Donors or Acceptors found
No Donors found
No Acceptors found
Nothing to be done
(grid)[z]
(grid)[z][y]
adist
hb->time
hb->nhb
hb->ndist
hb->n_bound
hb->nhx
hb->danr
No donor atom %d
No acceptor atom %d
hb->hbmap[id][ia]
hb->hbmap[id][ia]->h
hb->hbmap[id][ia]->g
hb->h[i]
hb->g[i]
invalid shift: p=%u, nper=%u
Invalid donor %d
Invalid acceptor %d
Nbound
Nfree
Number
Donor properties
%10.3e  %6d  %6d
%12.5e
  %8d
g[z][y]
g[z]
No %s found!!
gtmp
htmp
ptmp
%d/%d
Illegal shift!
hb0->h[0]
hb0->g[0]
No contact history
hb1->h[0]
hb1->g[0]
Acceptor
Hydrogen
Donor
# %10s  %12s  %12s
[ %s ]
[ donors_hydrogens_%s ]
 %4u %4u
[ acceptors_%s ]
[ contacts_%s-%s ]
[ hbonds_%s-%s ]
[ contacts_%s ]
[ hbonds_%s ]
%4s%d%-4s
 %6u %6u %6u
%12s  %12s  %12s
leg[0]
leg[1]
Pairs within %g nm
%10g  %10d  %10d
Hydrogen Bond Distribution
Time(ps)
t p(t)
%5d  %5d
%8.3f  %10.3e  %10.3e
%s lifetime = %.2f ps
mat.matrix
mat.matrix[x]
mat.axis_y
Contact Existence Map
Hydrogen Bond Existence Map
Contact Index
Hydrogen Bond Index
mat.map
...done.
Donors and Acceptors
legnames
Donors %s
Acceptors %s
number of legend entries
n-n+1
n-n+2
n-n+3
n-n+4
n-n+5
n-n>6
groups are analyzed.[PAR]
considered.[PAR]
[TT]
[ selected ][BR]
     20    21    24[BR]
     25    26    29[BR]
      1     3     6[BR]
[BB]Output:[bb][BR]
with helices in proteins.[BR]
index file.[BR]
?dump%d.gro
%5d%5s%5s%5d%8.3f%8.3f%8.3f
WEDGAMMA10.DAT
Toggle fit to a perfect helix
Print debug info
-prop
-ahxstart
First residue in helix
-ahxend
Last residue in helix
zconf
waver
bbindex
caindex
nall=%d
%s.out
nca=%d, nbb=%d
t=%.2f
Helix fitted to Z-Axis
TWIST
RISE
CPHI
RMSA
CD222
Helix radius
Twist per residue
Angle (deg)
Rise per residue
Rise (nm)
len-ahx
Length of the Helix
dip-ahx
Helix Backbone Dipole
rq (nm e)
rms-ahx
rmsa-ahx
Average RMSD per Residue
cd222
Ellipticity at 222 nm
pprms
RMS Distance from \8a\4-helix
caphi
Average Ca-Ca Dihedral
\8F\4(deg)
Average \8F\4 angles
Average \8Y\4 angles
Average n-n+3 hbond length
Average n-n+4 hbond length
Average n-n+5 hbond length
JCaHa
J-Coupling Values
helicity
Helicity per Residue
% of time
That bit is fitted
of the
it all.[BR]
Dumping fitted helix frame %d
The first residue number in the sequence
Check at every step which part of the sequence is helical
Select property to weight eigenvectors with. WARNING experimental stuff
Write a new 'trajectory' file for ED
%s Weighted Trajectory: %d atoms, NO box
Sorry can only run when the number of atoms in the run input file (%d) is equal to the number in the trajectory (%d)
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_helix.c
Weighted and Averaged conformation
RMS Deviation from Ideal Helix
g_helix computes all kind of helix properties. First, the peptide
is checked to find the longest helical part. This is determined by
Hydrogen bonds and Phi/Psi angles.
to an ideal helix around the Z-axis and centered around the origin.
Then the following properties are computed:[PAR]
[BB]1.[bb] Helix radius (file radius.xvg). This is merely the
RMS deviation in two dimensions for all Calpha atoms.
it is calced as sqrt((SUM i(x^2(i)+y^2(i)))/N), where N is the number
of backbone atoms. For an ideal helix the radius is 0.23 nm[BR]
[BB]2.[bb] Twist (file twist.xvg). The average helical angle per
residue is calculated. For alpha helix it is 100 degrees,
for 3-10 helices it will be smaller,
for 5-helices it will be larger.[BR]
[BB]3.[bb] Rise per residue (file rise.xvg). The helical rise per
residue is plotted as the difference in Z-coordinate between Ca
atoms. For an ideal helix this is 0.15 nm[BR]
[BB]4.[bb] Total helix length (file len-ahx.xvg). The total length
helix in nm. This is simply the average rise (see above) times the
number of helical residues (see below).[BR]
[BB]5.[bb] Number of helical residues (file n-ahx.xvg). The title says
[BB]6.[bb] Helix Dipole, backbone only (file dip-ahx.xvg).[BR]
[BB]7.[bb] RMS deviation from ideal helix, calculated for the Calpha
atoms only (file rms-ahx.xvg).[BR]
[BB]8.[bb] Average Calpha-Calpha dihedral angle (file phi-ahx.xvg).[BR]
[BB]9.[bb] Average Phi and Psi angles (file phipsi.xvg).[BR]
[BB]10.[bb] Ellipticity at 222 nm according to [IT]Hirst and Brooks[it]
%simum Distance
Number of Contacts %s %g nm
Internal in %s
%s%d 
mindres
maxdres
mindres[i-1]
maxdres[i-1]
  %12e
%12e  %12d  %12d
 %7g
Residue (#)
residx
Res %d (%d):
 %d(%d)
-matrix
Distance for contacts
-group
-respertime
-printresname
Write residue names
mindist
numcont
atm-pair
mindistres
index[i]
min per.
max int.
box1
box2
box3
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_mindist.c
Found %d residues out of %d (%d/%d atoms)
Calculate half a matrix of group-group distances
Calculate *maximum* distance instead of minimum
Count contacts with multiple atoms in the first group as one
Calculate minimum distance with periodic images
Split graph where time is zero
Number of secondary groups to compute distance to a central group
Take periodic boundary conditions into account
When writing per-residue distances, write distance for each time point
You have to specify either the index file or a tpr file
Choose a group for distance calculation
WARNING: Without a run input file a trajectory with broken molecules will not give the correct periodic image distance
Special case: making distance matrix between all atoms in group %s
Minimum distance to periodic image
@ subtitle "and maximum internal distance"
	%g	%6.3f %6.3f %6.3f %6.3f %6.3f
The shortest periodic distance is %g (nm) at time %g (%s),
between atoms %d and %d
g_mindist computes the distance between one group and a number of
other groups. Both the minimum distance
(between any pair of atoms from the respective groups)
and the number of contacts within a given
distance are written to two separate output files.
With the [TT]-group[tt] option a contact of an atom an other group
with multiple atoms in the first group is counted as one contact
instead of as multiple contacts.
With [TT]-or[tt], minimum distances to each residue in the first
group are determined and plotted as a function of residue number.[PAR]
With option [TT]-pi[tt] the minimum distance of a group to its
periodic image is plotted. This is useful for checking if a protein
has seen its periodic image during a simulation. Only one shift in
each direction is considered, giving a total of 26 shifts.
It also plots the maximum distance within the group and the lengths
of the three box vectors.[PAR]
Other programs that calculate distances are [TT]g_dist[tt]
$tIOptions got screwed. Did not expect value %d
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_msd.c
Error: did not expect option value %d
Diffusion Coefficients / Molecule
<D> = %.4f Std. Dev. = %.4f Error = %.4f
WARNING: The trajectory only contains part of the system (%d of %d atoms) and therefore the COM motion of only this part of the system will be removed
Extended data structures because of new restart %d
Used %d restart points spaced %g %s over %g %s
Select a group to calculate mean squared displacement for:
Now select a group for center of mass removal:
Split group of %d atoms into %d molecules
No frame found need time tpdb = %g ps
Can not write %s
Not enough points for fitting (%d).
Can not determine the diffusion constant.
D[%10s] %.4f (+/- %.4f) 1e-5 cm^2/s
D[%10s] %.4g (+/- %.4g) 1e-5 cm^2/s
# MSD gathered over %g %s with %d restarts
# Diffusion constants fitted from time %g to %g %s
# D[%10s] = %.4f (+/- %.4f) (1e-5 cm^2/s)
 %10g %10g %10g %10g %10g %10g
Compute diffusion coefficient in one direction
Calculate the lateral diffusion in a plane perpendicular to
Number of groups to calculate MSD for
The frame to use for option -pdb (%t)
Time between restarting points in trajectory (%t)
Start time for fitting the MSD (%t), -1 is 10%
End time for fitting the MSD (%t), -1 is 90%
Must have at least 1 group (now %d)
With molecular msd can only have 1 group (now %d)
Can only calculate the full tensor for 3D msd
Could not read a topology from %s. Try a tpr file instead.
Calculating diffusion coefficients for molecules.
g_msd computes the mean square displacement (MSD) of atoms from
a set of initial positions. This provides an easy way to compute
the diffusion constant using the Einstein relation.
The time between the reference points for the MSD calculation
is set with [TT]-trestart[tt].
The diffusion constant is calculated by least squares fitting a
straight line (D*t + c) through the MSD(t) from [TT]-beginfit[tt] to
[TT]-endfit[tt] (note that t is time from the reference positions,
not simulation time). An error estimate given, which is the difference
of the diffusion coefficients obtained from fits over the two halves
There are three, mutually exclusive, options to determine different
types of mean square displacement: [TT]-type[tt], [TT]-lateral[tt]
and [TT]-ten[tt]. Option [TT]-ten[tt] writes the full MSD tensor for
each group, the order in the output is: trace xx yy zz yx zx zy.[PAR]
If [TT]-mol[tt] is set, g_msd plots the MSD for individual molecules: 
for each individual molecule a diffusion constant is computed for 
its center of mass. The chosen index group will be split into 
The default way to calculate a MSD is by using mass-weighted averages.
This can be turned off with [TT]-nomw[tt].[PAR]
With the option [TT]-rmcomm[tt], the center of mass motion of a 
specific group can be removed. For trajectories produced with 
GROMACS this is usually not necessary, 
as mdrun usually already removes the center of mass motion.
When you use this option be sure that the whole system is stored
The diffusion coefficient is determined by linear regression of the MSD,
where, unlike for the normal output of D, the times are weighted
according to the number of reference points, i.e. short times have
a higher weight. Also when [TT]-beginfit[tt]=-1,fitting starts at 10%
and when [TT]-endfit[tt]=-1, fitting goes to 90%.
Using this option one also gets an accurate error estimate
based on the statistics between individual molecules.
Note that this diffusion coefficient and error estimate are only
accurate when the MSD is completely linear between
[TT]-beginfit[tt] and [TT]-endfit[tt].[PAR]
Option [TT]-pdb[tt] writes a pdb file with the coordinates of the frame
at time [TT]-tpdb[tt] with in the B-factor field the square root of
the diffusion coefficient of the molecule.
This option implies option [TT]-mol[tt].
curr
curr->ndata
curr->data
curr->datam
curr->mass
Molecule
top->atoms.pdbinfo
lsq1
molecular MSD
x[prev]
xa[0]
xa[1]
*x_pdb
curr->x0
curr->x0[curr->nrestart-1]
curr->com
curr->n_offs
curr->lsq
curr->lsq[curr->nrestart-1]
curr->ndata[i]
curr->data[i]
curr->datam[i]
curr->time
gnx_com
index_com
grpname_com
Fitting from %g to %g %s
Mean Square Displacement
SigmaD
-lateral
-ten
Calculate the full tensor
-ngroup
Mass weighted MSD
-rmcomm
Remove center of mass motion
-tpdb
-trestart
-mol
diff_mol
-pdb
of the fit interval.[PAR]
molecules.[PAR]
in the trajectory file.[PAR]
?g_morph does a linear interpolation of conformations in order to
create intermediates. Of course these are completely unphysical, but
that you may try to justify yourself. Output is in the form of a 
generic trajectory. The number of intermediates can be controlled with
the -ninterm flag. The first and last flag correspond to the way of
interpolating: 0 corresponds to input structure 1 while
1 corresponds to input structure 2.
If you specify first < 0 or last > 1 extrapolation will be
on the path from input structure x1 to x2. In general the coordinates
of the intermediate x(i) out of N total intermidates correspond to:[PAR]
x(i) = x1 + (first+(i/(N-1))*(last-first))*(x2-x1)[PAR]
Finally the RMSD with respect to both input structures can be computed
if explicitly selected (-or option). In that case an index file may be
read to select what group RMS is computed from.
Corresponds to first generated structure (0 is input x0, see above)
Corresponds to last generated structure (1 is input x1, see above)
Do a least squares fit of the second to the first structure before interpolating
Number of atoms in first structure is %d, in second %d
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_morph.c
Select group for LSQ superposition:
Select group for RMSD calculation:
You selected group %s, containing %d atoms
RMSD between input conformations is %g nm
conf1
rms-interm
-ninterm
Number of intermediates
Ref = 1\Sst\N conf
Ref = 2\Snd\N conf
Conf
dummy
g_nmeig calculates the eigenvectors/values of a (Hessian) matrix,
which can be calculated with [TT]mdrun[tt].
The structure is written first with t=0. The eigenvectors
An ensemble of structures can be generated from the eigenvectors with
[TT]g_nmens[tt]. When mass weighting is used, the generated eigenvectors
will be scaled back to plain cartesian coordinates before generating the
output - in this case they will no longer be exactly orthogonal in the
standard cartesian norm (But in the mass weighted norm they would be).
Divide elements of Hessian by product of sqrt(mass) of involved atoms prior to diagonalization. This should be used for 'Normal Modes' analysis
First eigenvector to write away
Last eigenvector to write away
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_nmeig.c
Cannot use sparse Hessian with first eigenvector != 1.
Cannot use sparse Hessian to calculate all eigenvectors.
Will try to allocate memory and convert to full matrix representation...
Converted sparse to full matrix storage.
Diagonalizing to find vectors %d through %d...
Diagonalizing to find eigenvectors 1 through %d...
One of the lowest 6 eigenvalues has a non-zero value.
This could mean that the reference structure was not
@ subtitle "not mass weighted"
Writing eigenfrequencies - negative eigenvalues will be set to zero.
eigenfreq
eigenvectors
full_hessian
properly energy minimized.
Writing eigenvalues...
Eigenvalue [Gromacs units]
Eigenvalue index
@ subtitle "mass weighted"
%6d %15g
Wavenumber [cm\S-1\N]
Eigenfrequencies
,[TT]g_nmens[tt] generates an ensemble around an average structure
in a subspace which is defined by a set of normal modes (eigenvectors).
The eigenvectors are assumed to be mass-weighted.
The position along each eigenvector is randomly taken from a Gaussian
distribution with variance kT/eigenvalue.[PAR]
By default the starting eigenvector is set to 7, since the first six
normal modes are the translational and rotational degrees of freedom.
Random seed, -1 generates a seed from time and pid
Number of structures to generate
First eigenvector to use (-1 is select)
Last eigenvector to use (-1 is till the last)
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_nmens.c
%d eigenvectors selected for output
Using seed %d and a temperature of %g K
Temperature in Kelvin
ensemble
invsqrtm
xout1
xout2
Generated %d structures
?/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_order.c
Select the group that contains the atoms you want to use for the tetrahedrality order parameter calculation:
S\sk\N Distance Order Parameter
S\sg\N Angle Order Parameter / Slab
S\sk\N Distance Order Parameter / Slab
Number of elements in first group: %d
Calculating order parameters for each of %d molecules
Select an index group to calculate the radial membrane normal
Select an index group to use as distance reference
Warning:  slicing and specified unit vectors are not currently compatible
grp %d does not have same number of elements as grp 1
WARNING: distance between atoms %d and %d > 0.3 nm (%f). Index file might be corrupt.
Atom %d Tensor: x=%g , y=%g, z=%g
Average angle between double bond and normal: %f
Direction of the normal on the membrane
Only give Sz element of order tensor. (axis can be specified with -d)
Calculate order parameters for unsaturated carbons. Note that this cannot be mixed with normal order parameters.
Compute per-molecule Scd order parameters
Compute a radial membrane normal
Compute distance from a reference (currently defined only for radial and permolecule)
Taking x axis as normal to the membrane
Taking carbons as unsaturated!
Calculating Scd order parameters for each of %d molecules
Cannot yet output radial distances without permolecule
Groupname: %s First atomname: %s First atomnr %u
Won't write B-factors with averaged order parameters; use -permolecule
Taking y axis as normal to the membrane
Taking z axis as normal to the membrane
Compute the order parameter per atom for carbon tails. For atom i the
vector i-1, i+1 is used together with an axis. 
The index file should contain only the groups to be used for calculations,
with each group of equivalent carbons along the relevant acyl chain in its own
group. There should not be any generic groups (like System, Protein) in the index
file to avoid confusing the program (this is not relevant to tetrahedral order
parameters however, which only work for water anyway).[PAR]
diagonal elements of the order tensor and even calculate the deuterium
order parameter Scd (default). If the option -szonly is given, only one
order tensor component (specified by the -d option) is given and the
order parameter per slice is calculated as well. If -szonly is not
selected, all diagonal elements and the deuterium order parameter is
given.[PAR]The tetrahedrality order parameters can be determined
around an atom. Both angle an distance order parameters are calculated. See
P.-L. Chau and A.J. Hardwick, Mol. Phys., 93, (1998), 511-518.
sg_slice
sk_slice
sg_slice_tot
sk_slice_tot
S\sg\N
S\sg\N Angle Order Parameter
S\sk\N
sl_count
r_nn[i]
sgmol
skmol
sgbin
%f %f
slCount
*slOrder
(*slOrder)[i]
*distvals
(*distvals)[i]
*order
slFrameorder
comidx
distidx
Atom
%12d   %12g
%12d	
%12g	
ngrps = %d, nslices = %d
Slice
%12d       %12g
%12g     %12g
%12d   %12g   %12g   %12g
frout.x
Order parameters
-szonly
-unsat
-permolecule
-radial
-calcdist
deuter
sliced
sg-ang
sk-dist
-Sgsl
sg-ang-slice
-Sksl
sk-dist-slice
Can not have nslices < 1
Invalid axis, use x, y or z
Dividing box in %d slices.
Only calculating Sz
Calculating radial distances
Using following groups: 
distvals[i]
The program can also give all
for more details.[BR]
@A333333
?g_principal calculates the three principal axes of inertia for a group
Dummy option to avoid empty array
%15.10f     %15.10f  %15.10f  %15.10f
of atoms.
-foo
axis1
axis2
axis3
Plot average eigenvalues
polystat
polyvec
persist
intdist
end to end
<R\sg\N>
<R\sg\N> eig1
<R\sg\N> eig2
<R\sg\N> eig3
<R\sg\N eig1>
<R\sg\N eig2>
<R\sg\N eig3>
molind
Size of %d polymers
Principal components
legp
eig%d %c
Persistence length
sum_inp
ninp
<R\S2\N(n)>/n (nm\S2\N)
Internal distances
intd
gyr_all
eigv
gyr[d]
gyr_all[d]
eigv[d]
%10.3f %8.4f
@    xaxes scale Logarithmic
%d  %8.4f
and prints the average.[PAR]
gyration tensors are written.
written.[PAR]
Use the mass weighting for radii of gyration
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_polystat.c
Select a group of polymer mainchain atoms:
Group %s consists of %d molecules
Group size per molecule, min: %d atoms, max %d atoms
%10.3f %8.4f %8.4f %8.4f %8.4f %8.4f
Average end to end distance: %.3f (nm)
Average radius of gyration:  %.3f (nm)
Average persistence length:  %.2f bonds
g_polystat plots static properties of polymers as a function of time
By default it determines the average end-to-end distance and radii
of gyration of polymers. It asks for an index group and split this
into molecules. The end-to-end distance is then determined using
the first and the last atom in the index group for each molecules.
For the radius of gyration the total and the three principal components
for the average gyration tensor are written.
With option [TT]-v[tt] the eigenvectors are written.
With option [TT]-pc[tt] also the average eigenvalues of the individual
With option [TT]-i[tt] the mean square internal distances are
With option [TT]-p[tt] the persistence length is determined.
The chosen index group should consist of atoms that are
consecutively bonded in the polymer mainchains.
The persistence length is then determined from the cosine of
the angles between bonds with an index difference that is even,
the odd pairs are not used, because straight polymer backbones
are usually all trans and therefore only every second bond aligns.
The persistence length is defined as number of bonds where
the average cos reaches a value of 1/e. This point is determined
by a linear interpolation of log(<cos>).
?Warning: nr of slices very small. This will resultin nonsense.
Integrating from slice %d to slice %d
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_potential.c
Read %d frames from trajectory. Calculating potentialin spherical coordinates
Read %d frames from trajectory. Calculating potential
Compute the electrostatical potential across the box. The potential is
calculated by first summing the charges per slice and then integrating
twice of this charge distribution. Periodic boundaries are not taken
into account. Reference of potential is taken to be the left side of
the box. It's also possible to calculate the potential in spherical
coordinates as function of r by calculating a charge distribution in
spherical slices and twice integrating them. epsilon_r is taken as 1,
2 is more appropriate in many cases.
Calculate potential as function of boxlength, dividing the box in #nr slices.
Discard first #nr slices of box for integration
Discard last #nr slices of box for integration
Translate all coordinates <distance> in the direction of the box
Assume net zero charge of groups to improve accuracy
Discarding slices for integration should not be necessary.
*slField
*slCharge
*slPotential
(*slField)[i]
(*slCharge)[i]
(*slPotential)[i]
Potential (V)
Charge density (q/nm\S3\N)
Field (V/nm)
%20.16g  
   %20.16g
-spherical
Calculate spherical thingie
Number of groups to consider
-correct
Cg_rama selects the Phi/Psi dihedral combinations from your topology file
and computes these as a function of time.
Using simple Unix tools such as [IT]grep[it] you can select out
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_rama.c
@    xaxis  tick on
@    xaxis  tick major 60
@    xaxis  tick minor 30
@    yaxis  tick on
@    yaxis  tick major 60
@    yaxis  tick minor 30
@ s0 symbol 2
@ s0 symbol size 0.4
@ s0 symbol fill 1
specific residues.
%g  %g  %s
No masses available while mass weighting was requested
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_rdf.c
Group '%s' of %d atoms consists of %d %s
Select a reference group and %d group%s
Trajectory (%d atoms) does not match topology (%d atoms)
Atom index (%d) in index group %s (%d atoms) larger than number of atoms in trajectory (%d atoms)
The last box vector is not parallel to the z-axis: %f %f %f
xy-rdf's are not supported for pbc type'%s'
RDF with respect to the center of mass of first group
RDF with respect to the surface of the first group
Use periodic boundary conditions for computing distances. Without PBC the maximum range will be three times the largest box edge.
Normalize for volume and density
Use only the x and y components of the distance
Shortest distance (nm) to be considered
Number of secondary groups to compute RDFs around a central group
From this distance onwards the RDF is tranformed by g'(r) = 1 + [g(r)-1] exp(-(r/fade-1)^2 to make it go to 1 smoothly. If fade is 0.0 nothing is done.
[HIDDEN]Grid spacing (in nm) for FFTs when computing structure factors
[HIDDEN]# pixels per edge of the square detector plate
Number of different colors in the diffraction image
[HIDDEN]Distance (in cm) from the sample to the detector
[HIDDEN]Wavelength for X-rays/Neutrons for scattering. 0.1 nm corresponds to roughly 12 keV
Energy of the incoming X-ray (keV) 
Can not have both -com and -surf
Turning of normalization because of option -surf
Neither index file nor topology file specified
Nothing to do!
The structure of liquids can be studied by either neutron or X-ray
scattering. The most common way to describe liquid structure is by a
radial distribution function. However, this is not easy to obtain from
g_rdf calculates radial distribution functions in different ways.
The normal method is around a (set of) particle(s), the other methods
are around the center of mass of a set of particles ([TT]-com[tt])
or to the closest particle in a set ([TT]-surf[tt]).
With all methods rdf's can also be calculated around axes parallel
to the z-axis with option [TT]-xy[tt].
With option [TT]-surf[tt] normalization can not be used.[PAR]
The option [TT]-rdf[tt] sets the type of rdf to be computed.
Default is for atoms or particles, but one can also select center
of mass or geometry of molecules or residues. In all cases only
the atoms in the index groups are taken into account.
For molecules and/or the center of mass option a run input file
Other weighting than COM or COG can currently only be achieved
by providing a run input file with different masses.
Options [TT]-com[tt] and [TT]-surf[tt] also work in conjunction
If a run input file is supplied ([TT]-s[tt]) and [TT]-rdf[tt] is set
to [TT]atom[tt], exclusions defined
in that file are taken into account when calculating the rdf.
The option [TT]-cut[tt] is meant as an alternative way to avoid
intramolecular peaks in the rdf plot.
It is however better to supply a run input file with a higher number of
exclusions. For eg. benzene a topology with nrexcl set to 5
would eliminate all intramolecular contributions to the rdf.
Note that all atoms in the selected groups are used, also the ones
that don't have Lennard-Jones interactions.[PAR]
Option [TT]-cn[tt] produces the cumulative number rdf,
i.e. the average number of particles within a distance r.[PAR]
To bridge the gap between theory and experiment structure factors can
be computed (option [TT]-sq[tt]). The algorithm uses FFT, the grid
spacing of which is determined by option [TT]-grid[tt].
Unknown rdf option '%s'
coi[0]
rmax2 = %g
npairs
bExcl
count[g]
npairs[g]
pairs[g][i]
x_i1
inv_segvol
rdf[g]
Radial distribution
Radial distribution of %s %s
 closest atom in %s.
@ subtitle "%s%s - %s"
@ subtitle "reference %s%s"
integrand
h(Q)
Q(/nm)
Cumulative Number RDF
@ subtitle "%s-%s"
@ subtitle "reference %s"
Binwidth (nm)
-com
-surf
-rdf
RDF type
-norm
-cut
-fade
-grid
-npixel
-nlevel
-distance
-wave
-startq
Starting q (1/nm) 
-endq
Ending q (1/nm)
-energy
sfactor
rdf_cn
Cromer1968a
mol_com
mol_cog
res_com
res_cog
a scattering experiment.[PAR]
is required.
with [TT]-rdf[tt].[PAR]
? to 
rhosc
Rho sc
\8r\4
\8r\4\ssc\N
rot+trans
lsq fit
translational fit
-what
Structural difference measure
Fit to reference structure
-prev
Compare with previous frame
-fitall
-skip2
-bmin
-dlog
-mir
rmsdmir
avgrp
Maiorov95
w_rms
least squares
Select group for %s fit
gn_rms
ind_rms
irms
rlsnorm
rls[j]
rlsm
rlsm[j]
mat_x
bInMat
rev_ind_m
w_rls_m
ind_rms_m
w_rms_m
Found %d bonds in topology
ind_bond1
ind_bond2
0 bonds found
mat_x[tel_mat]
time2
mat_x2
mat_x2[tel_mat2]
rmsd_mat
bond_mat
delta
delta[j]
rmsdav_mat
rmsdav_mat[j]
mat_x2_j
 element %5d; time %5.2f  
rmsd_mat[i]
bond_mat[i]
%s %s matrix
delta_tot
Maximum in delta matrix: %f
del_xaxis
del_yaxis
%s %s vs. delta t
delta.xpm
Error writing to output file
%s av. bond angle deviation
%s with frame %g %s ago
%s with Mirror
Mirror %s
Average %s
aver.xvg
%s: Min %f, Max %f, Avg %f
translational
versus the other.[PAR]
HIDDENFit all pairs of structures in matrix
Only write every nr-th frame to matrix
Maximum level in comparison matrix
Minimum level in comparison matrix
Maximum level in bond angle matrix
Minimum level in bond angle matrix
Use mass weighting for superposition
Number of levels in the matrices
Number of groups to compute RMS between
HIDDENUse a log x-axis in the delta t matrix
HIDDENMaximum level in delta matrix
HIDDENAverage over this distance in the RMSD matrix
The number of frames to skip is <= 0. Writing out all frames.
The number of frames to skip in second trajectory is <= 0.
  Writing out all frames.
WARNING: option -skip also applies to -prev
WARNING: second trajectory (-f2) useless when not calculating matrix (-m/-bm),
         will not read from %s
WARNING: second trajectory (-f2) useless when making delta matrix,
         will not read from %s
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_rms.c
WARNING: Need a run input file for bond angle matrix,
         will not calculate bond angle matrix.
All masses in the fit group are 0, using masses of 1
Select group%s for %s calculation
All masses in group %d are 0, using masses of 1
WARNING: topology has %d atoms, whereas trajectory has %d
Using %d bonds for bond angle matrix
Will read second trajectory file
Second trajectory (%d atoms) does not match the first one (%d atoms)
Building %s matrix, %dx%d elements
Building bond angle matrix, %dx%d elements
Min and Max value set to resp. %f and %f
Min. angle: %f, Max. angle: %f
Bond angle Min and Max set to:
Min. angle: %f, Max. angle: %f
@ subtitle "%s%s after %s%s%s"
@ subtitle "of %s after lsq fit to mirror of %s"
@ subtitle "after lsq fit to mirror %s"
g_rms compares two structures by computing the root mean square
deviation (RMSD), the size-independent 'rho' similarity parameter
(rho) or the scaled rho (rhosc), 
see Maiorov & Crippen, PROTEINS [BB]22[bb], 273 (1995).
This is selected by [TT]-what[tt].[PAR]Each structure from a trajectory ([TT]-f[tt]) is compared to a
reference structure. The reference structure
is taken from the structure file ([TT]-s[tt]).[PAR]
With option [TT]-mir[tt] also a comparison with the mirror image of
the reference structure is calculated.
This is useful as a reference for 'significant' values, see
Maiorov & Crippen, PROTEINS [BB]22[bb], 273 (1995).[PAR]
Option [TT]-prev[tt] produces the comparison with a previous frame
the specified number of frames ago.[PAR]
Option [TT]-m[tt] produces a matrix in [TT].xpm[tt] format of
comparison values of each structure in the trajectory with respect to
each other structure. This file can be visualized with for instance
[TT]xv[tt] and can be converted to postscript with [TT]xpm2ps[tt].[PAR]
Option [TT]-fit[tt] controls the least-squares fitting of
the structures on top of each other: complete fit (rotation and
translation), translation only, or no fitting at all.[PAR]
Option [TT]-mw[tt] controls whether mass weighting is done or not.
If you select the option (default) and 
supply a valid tpr file masses will be taken from there, 
otherwise the masses will be deduced from the atommass.dat file in
the GROMACS library directory. This is fine for proteins but not
necessarily for other molecules. A default mass of 12.011 amu (Carbon)
is assigned to unknown atoms. You can check whether this happend by
turning on the [TT]-debug[tt] flag and inspecting the log file.[PAR]
With [TT]-f2[tt], the 'other structures' are taken from a second
trajectory, this generates a comparison matrix of one trajectory
Option [TT]-bin[tt] does a binary dump of the comparison matrix.[PAR]
Option [TT]-bm[tt] produces a matrix of average bond angle deviations
analogously to the [TT]-m[tt] option. Only bonds between atoms in the
comparison group are considered.
8AComputed
X-Ray
 %c 
 %9.2e
 (nm^2)
             Eigenvectors
  %c   
%7.4f  
-res
-aniso
xaver
rmsdev
correl
-dir
U[i]
rmsd_x
pdbatoms
refatoms
pdbx
pdbatoms->pdbinfo
Uaver
(A\b\S\So\N\S2\N)
B-Factors
%5d  %10.5f  %10.5f
RMS fluctuation
%5d %8.4f
RMS Deviation
coordinates.[PAR]
flag is set
the least.
Correlation between X-Ray and Computed Uij
MSF     X         Y         Z
Eigv  %-8.2e %-8.2e %-8.2e (nm^2)
Calculate averages for each residue
Compute anisotropic termperature factors
Do a least squares superposition before computing RMSF. Without this you must make sure that the reference structure and the trajectory match.
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_rmsf.c
Select group(s) for root mean square calculation
Can not find %s%d-%s in pdbfile
g_rmsf computes the root mean square fluctuation (RMSF, i.e. standard 
deviation) of atomic positions 
after (optionally) fitting to a reference frame.[PAR]
With option [TT]-oq[tt] the RMSF values are converted to B-factor
values, which are written to a pdb file with the coordinates, of the
structure file, or of a pdb file when [TT]-q[tt] is specified.
Option [TT]-ox[tt] writes the B-factors to a file with the average
With the option [TT]-od[tt] the root mean square deviation with
respect to the reference structure is calculated.[PAR]
With the option [TT]aniso[tt] g_rmsf will compute anisotropic
temperature factors and then it will also output average coordinates
and a pdb file with ANISOU records (corresonding to the [TT]-oq[tt]
or [TT]-ox[tt] option). Please note that the U values
are orientation dependent, so before comparison with experimental data
you should verify that you fit to the experimental coordinates.[PAR]
When a pdb input file is passed to the program and the [TT]-aniso[tt]
a correlation plot of the Uij will be created, if any anisotropic
temperature factors are present in the pdb file.[PAR]
With option [TT]-dir[tt] the average MSF (3x3) matrix is diagonalized.
This shows the directions in which the atoms fluctuate the most and
$tIP~$EAverage over molecules
rotacf
c1[i]
Done with trajectory
Use index doublets (vectors) for correlation function instead of triplets (planes)
number of index elements not multiple of 3, these can not be atom triplets
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_rotacf.c
number of index elements not multiple of 2, these can not be atom doublets
Rotational Correlation Function
g_rotacf calculates the rotational correlation function
for molecules. Three atoms (i,j,k) must be given in the index
file, defining two vectors ij and jk. The rotational acf
is calculated as the autocorrelation function of the vector
n = ij x jk, i.e. the cross product of the two vectors.
Since three atoms span a plane, the order of the three atoms
does not matter. Optionally, controlled by the -d switch, you can
calculate the rotational correlation function for linear molecules
by specifying two atoms (i,j) in the index file.
g_rotacf -P 1 -nparm 2 -fft -n index -o rotacf-x-P1
-fa expfit-x-P1 -beginfit 2.5 -endfit 20.0[PAR]
This will calculate the rotational correlation function using a first
order Legendre polynomial of the angle of a vector defined by the index
file. The correlation function will be fitted from 2.5 ps till 20.0 ps
to a two parameter exponential.
g_saltbr plots the distance between all combination of charged groups
as a function of time. The groups are combined in different ways.
A minimum distance can be given, (eg. the cut-off), then groups
that are never closer than that distance will not be plotted.[BR]
Output will be in a number of fixed filenames, min-min.xvg, plus-min.xvg
and plus-plus.xvg, or files for every individual ion-pair if the [TT]-sep[tt]
option is selected. In this case files are named as [TT]sb-ResnameResnr-Atomnr[tt].
Use separate files for each interaction (may be MANY)
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_saltbr.c
Distance between positively charged groups
Distance between negatively charged groups
Distance between oppositely charged groups
There may be many such files.
trunc distance
-sep
%s%d-%d
CG: %10s Q: %6g  Atoms:
cgdist
nWithin
cgdist[i]
nWithin[i]
cgdist[i][j]
sb-%s:%s.xvg
%s:%s
@ s%d legend "%s"
plus-plus.xvg
min-min.xvg
plus-min.xvg
Building CONECT records
CONECT%5d%5d%5d
atoms->atom
atoms->atomname
xnew
Hydrophobic
Hydrophilic
D Gsolv
Volume (nm\S3\N)
Density (g/l)
Eisenberg86a
bOut
bPhobic
atom_area2
res_a
res_area
res_area2
dgs_factor
Area (nm\S2\N)
Solvent Accessible Surface
Volume and Density
pbc check
check.pdb
%10g  %10g  %10g  %10g
%12.5e  %12.5e  %12.5e
surfacedots
Printing out areas per atom
Area per residue
Atom #
Area per atom
%10d  %10g %10g
%d %g %g
%5d   1     FCX  FCX  FCZ
grpname[i]
-probe
-ndots
-qmax
-f_index
-minarea
Take periodicity into account
-prot
-dgs
resarea
atomarea
volume
connelly
surfat
Eisenhaber95
The area can be plotted
generated (option [TT]-i[tt])
computed.
high density.
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_sas.c
Warning dot %d has no conections
Connely Dot Surface Generated by g_sas
No tpr file, will not compute Delta G of solvation
Warning: your tpr file is too old, will not compute Delta G of solvation
In case you use free energy of solvation predictions:
WARNING: non-rectangular boxes may give erroneous results or crashes.
Analysis based on vacuum simulations (with the possibility of evaporation)
will certainly crash the analysis.
Select a group for calculation of surface and a group for output:
Select a group of hydrophobic atoms:
WARNING: could not find a Van der Waals radius for %d atoms
Consistency check failed: not all %d atoms in the hydrophobic index
found in the normal index selection (%d atoms)
Atom %5d %5s-%5s: q= %6.3f, r= %6.3f, dgsol= %6.3f, hydrophobic= %s
%d out of %d atoms were classified as hydrophobic
Need a tpr file for option -tv
Need a tpr file for Connelly plot
Something wrong in nsc_dclm_pbc
[ position_restraints ]
#define FCX 1000
#define FCY 1000
#define FCZ 1000
; Atom  Type  fx   fy   fz
Radius of the solvent probe (nm)
Number of dots per sphere, more dots means more accuracy
The maximum charge (e, absolute value) of a hydrophobic atom
Determine from a group in the index file what are the hydrophobic atoms rather than from the charge
The minimum area (nm^2) to count an atom as a surface atom when writing a position restraint file  (see help)
Output the protein to the connelly pdb file too
default value for solvation free energy per area (kJ/mol/nm^2)
Probe size too small, setting it to %g
Ndots too small, setting it to %d
g_sas computes hydrophobic, hydrophilic and total solvent accessible surface area.
As a side effect the Connolly surface can be generated as well in
a pdb file where the nodes are represented as atoms and the vertices
connecting the nearest nodes as CONECT records.
The program will ask for a group for the surface calculation
and a group for the output. The calculation group should always
consists of all the non-solvent atoms in the system.
The output group can be the whole or part of the calculation group.
per residue and atom as well (options [TT]-or[tt] and [TT]-oa[tt]).
In combination with the latter option an [TT]itp[tt] file can be
which can be used to restrain surface atoms.[PAR]
By default, periodic boundary conditions are taken into account,
this can be turned off using the [TT]-nopbc[tt] option.[PAR]
With the [TT]-tv[tt] option the total volume and density of the molecule can be
Please consider whether the normal probe radius is appropriate
in this case or whether you would rather use e.g. 0. It is good
to keep in mind that the results for volume and density are very
approximate, in e.g. ice Ih one can easily fit water molecules in the
pores which would yield too low volume, too high surface area and too
L>%11.3f
 %6.4f
_%.3f
-cfnorm
-resnr
Residue number output type
size.xvg
cfrac.xvg
index.dat
mask.dat
index.ndx
d.size
Selection size
Covered fraction
d.mmap
of one another.[PAR]
selection can be given.[PAR]
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_select.c
Do not print the frame time (-om, -oi) or the index size (-oi)
Normalize by total number of positions with -os
Normalize by covered fraction with -os
Only one index group allowed with -dump
Only atom selection allowed with -on
warning: the mask (-om) will only be written for the first group
warning: will not write the mask (-om) for a static selection
g_select writes out basic data about dynamic selections.
It can be used for some simple analyses, or the output can
be combined with output from other programs and/or external
analysis programs to calculate more complex things.
Any combination of the output options is possible, but note
that [TT]-om[tt] only operates on the first selection.[PAR]
With [TT]-os[tt], calculates the number of positions in each
selection for each frame. With [TT]-norm[tt], the output is
between 0 and 1 and describes the fraction from the maximum
number of positions (e.g., for selection 'resname RA and x < 5'
the maximum number of positions is the number of atoms in
RA residues). With [TT]-cfnorm[tt], the output is divided
by the fraction covered by the selection.
[TT]-norm[tt] and [TT]-cfnorm[tt] can be specified independently
With [TT]-oc[tt], the fraction covered by each selection is
written out as a function of time.[PAR]
With [TT]-oi[tt], the selected atoms/residues/molecules are
written out as a function of time. In the output, the first
column contains the frame time, the second contains the number
of positions, followed by the atom/residue/molecule numbers.
If more than one selection is specified, the size of the second
group immediately follows the last number of the first group
and so on. With [TT]-dump[tt], the frame time and the number
of positions is omitted from the output. In this case, only one
With [TT]-on[tt], the selected atoms are written as a index file
compatible with make_ndx and the analyzing tools. Each selection
is written as a selection group and for dynamic selections a
group is written for each frame.[PAR]
For residue numbers, the output of [TT]-oi[tt] can be controlled
with [TT]-resnr[tt]: [TT]number[tt] (default) prints the residue
numbers as they appear in the input file, while [TT]index[tt] prints
unique numbers assigned to the residues in the order they appear
in the input file, starting with 1. The former is more intuitive,
but if the input contains multiple residues with the same number,
the output can be less useful.[PAR]
With [TT]-om[tt], a mask is printed for the first selection
as a function of time. Each line in the output corresponds to
one frame, and contains either 0/1 for each atom/residue/molecule
possibly selected. 1 stands for the atom/residue/molecule being
selected for the current frame, 0 for not selected.
With [TT]-dump[tt], the frame time is omitted from the output.
equiv[neq]
%d %s %s %n
Discretize rms in # levels
Maximum level in matrices
-sumh
-equiv
distrmsd
-rms
rmsdist
-scl
rmsscale
rmsmean
-nmr3
-nmr6
-noe
dtot
dtot2
dtot1_3
dtot1_6
rmsc
dtot[i]
dtot2[i]
dtot1_3[i]
dtot1_6[i]
mean[i]
rms[i]
rmsc[i]
d_r[i]
rmsmax = %g, rmscmax = %g
noe_index
noe_gr
Dumping equivalent list
 %d %s %s
%s %s %d -> %s
%d %d %d %d %s %s %d
nnm[i]
noe[i]
Atom Index
RMS of distance
Relative RMS
Mean Distance
1/r^3 averaged distances
1/r^6 averaged distances
intnsty
1/r^6
1/r^3
ianr
%-5.3f
atom name; e.g.:[PAR]
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_rmsdist.c
average distance over equivalent hydrogens
Use periodic boundary conditions when computing distances
WARNING: using -noe without -max makes no sense, setting -max to %g
@ subtitle "of distances between %s atoms"
Found %d non-equivalent atom-groups in %d atoms
;%4s %3s %4s %4s%3s %4s %4s %4s %4s%3s %5s %5s %8s %2s %2s %s
%4d %4d %4s %4s%3d %4d %4d %4s %4s%3d %5s %5s %8d %2d %2s %s
Smallest 1/r^%d averaged distance was %g
NOTE: no 1/r^%d averaged distances found below %g, smallest was %g
g_rmsdist computes the root mean square deviation of atom distances,
which has the advantage that no fit is needed like in standard RMS
deviation as computed by g_rms.
The reference structure is taken from the structure file.
The rmsd at time t is calculated as the rms
of the differences in distance between atom-pairs in the reference
structure and the structure at time t.[PAR]
g_rmsdist can also produce matrices of the rms distances, rms distances
scaled with the mean distance and the mean distances and matrices with
NMR averaged distances (1/r^3 and 1/r^6 averaging). Finally, lists
of atom pairs with 1/r^3 and 1/r^6 averaged distance below the
maximum distance ([TT]-max[tt], which will default to 0.6 in this case)
can be generated, by default averaging over equivalent hydrogens
(all triplets of hydrogens named *[123]). Additionally a list of
equivalent atoms can be supplied ([TT]-equiv[tt]), each line containing
a set of equivalent atoms specified as residue number and name and
[TT]3 SER  HB1 3 SER  HB2[tt][PAR]
Residue and atom names must exactly match those in the structure
file, including case. Specifying non-sequential atoms is undefined.
?================-----------------fitxy
Use mass weighted fitting
rotmat
xi[nfr]
srmsd
Processing frame %d of %d
xi[i]
Fit matrix
in the xy-plane.
be performed.
the rotation matrix.
Determine the optimal reference structure
Use every nr-th frame for -ref
Fit the x/y rotation before determining the rotation
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_rotmat.c
Atom index (%d) is larger than the number of atoms in the trajecory (%d)
Average RMSD between all structures: %.3f
Structure with lowest RMSD to all others: time %g, av. RMSD %.3f
%7g %7.4f %7.4f %7.4f %7.4f %7.4f %7.4f %7.4f %7.4f %7.4f
g_rotmat plots the rotation matrix required for least squares fitting
a conformation onto the reference conformation provided with
[TT]-s[tt]. Translation is removed before fitting.
The output are the three vectors that give the new directions
of the x, y and z directions of the reference conformation,
for example: (zx,zy,zz) is the orientation of the reference
z-axis in the trajectory frame.
This tool is useful for, for instance,
determining the orientation of a molecule
at an interface, possibly on a trajectory produced with
[TT]trjconv -fit rotxy+transxy[tt] to remove the rotation
Option [TT]-ref[tt] determines a reference structure for fitting,
instead of using the structure from [TT]-s[tt]. The structure with
the lowest sum of RMSD's to all other structures is used.
Since the computational cost of this procedure grows with
the square of the number of frames, the [TT]-skip[tt] option
can be useful. A full fit or only a fit in the x/y plane can
Option [TT]-fitxy[tt] fits in the x/y plane before determining
GGroup %s contains the following atoms: 
Careful: distance only makes sense in some situations.
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_sgangle.c
Something wrong with contents of index file.
Only one group compute angle between vector at time zero and time t
Compute the angle and distance between two groups. 
The groups are defined by a number of atoms given in an index file and
may be two or three atoms in size.
If -one is set, only one group should be specified in the index
file and the angle between this group at time 0 and t will be computed.
The angles calculated depend on the order in which the atoms are 
given. Giving for instance 5 6 will rotate the vector 5-6 with 
180 degrees compared to giving 6 5. [PAR]If three atoms are given, 
the normal on the plane spanned by those three atoms will be
calculated, using the formula  P1P2 x P1P3.
The cos of the angle is calculated, using the inproduct of the two
Here is what some of the file options do:[BR]
-oa: Angle between the two groups specified in the index file. If a group contains three atoms the normal to the plane defined by those three atoms will be used. If a group contains two atoms, the vector defined by those two atoms will be used.[BR]
-od: Distance between two groups. Distance is taken from the center of one group to the center of the other group.[BR]
-od1: If one plane and one vector is given, the distances for each of the atoms from the center of the plane is given separately.[BR]
-od2: For two planes this option has no meaning.
Atomname %d: %s
Angle between %s and %s
Distance between %s and %s
Time (ps
%12g  %12g  %12g
Cos(angle) 
xzero
Use the Z-axis as reference
sg_angle
sg_dist
-od1
sg_dist1
-od2
sg_dist2
normalized vectors.[PAR]
<cos(\8q\4\s1\N)>
<3cos\S2\N(\8q\4\s2\N)-1>
cos(\8q\4\s1\N)
3cos\S2\N(\8q\4\s2\N)-1
-v23
-rmin
Minimum distance (nm)
Maximum distance (nm)
-cbin
Binwidth for the cosine
Binwidth for r (nm)
sori.xvg
snor.xvg
sord.xvg
scum.xvg
scount.xvg
hist1
hist2
histi1
histi2
histn
cos(\8q\4\s2\N)
Solvent orientation
Solvent distribution
molecules/nm
distance.[PAR]
Use the center of mass as the reference postion
Use the vector between atoms 2 and 3
Check PBC for the center of mass calculation. Only necessary when your reference group consists of several molecules.
Select a group of reference particles and a solvent group:
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_sorient.c
The number of solvent atoms (%d) is not a multiple of 3
COM: %8.3f  %8.3f  %8.3f  iter = %d
Average nr of molecules between %g and %g nm: %.1f
Average cos(theta1)     between %g and %g nm: %6.3f
Average 3cos2(theta2)-1 between %g and %g nm: %6.3f
Solvent orientation between %g and %g nm
@ subtitle "average shell size %.1f molecules"
Solvent normal orientation between %g and %g nm
@ subtitle "as a function of distance"
Cumulative solvent orientation
g_sorient analyzes solvent orientation around solutes.
It calculates two angles between the vector from one or more
reference positions to the first atom of each solvent molecule:[BR]
theta1: the angle with the vector from the first atom of the solvent
molecule to the midpoint between atoms 2 and 3.[BR]
theta2: the angle with the normal of the solvent plane, defined by the
same three atoms, or when the option [TT]-v23[tt] is set
the angle with the vector between atoms 2 and 3.[BR]
The reference can be a set of atoms or
the center of mass of a set of atoms. The group of solvent atoms should
consist of 3 atoms per solvent molecule.
Only solvent molecules between [TT]-rmin[tt] and [TT]-rmax[tt] are
considered for [TT]-o[tt] and [TT]-no[tt] each frame.[PAR]
[TT]-o[tt]: distribtion of cos(theta1) for rmin<=r<=rmax.[PAR]
[TT]-no[tt]: distribution of cos(theta2) for rmin<=r<=rmax.[PAR]
[TT]-ro[tt]: <cos(theta1)> and <3cos^2(theta2)-1> as a function of the
[TT]-co[tt]: the sum over all solvent molecules within distance r
of cos(theta1) and 3cos^2(theta2)-1 as a function of r.[PAR]
[TT]-rc[tt]: the distribution of the solvent molecules as a function of r
?/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_spol.c
The reference atom of the solvent molecule
Average number of molecules within %g nm is %.1f
Average dipole:                               %f (D), std.dev. %f
Average radial component of the dipole:       %f (D)
Average radial component of the polarization: %f (D)
Cumulative solvent distribution
g_spol analyzes dipoles around a solute; it is especially useful
for polarizable water. A group of reference atoms, or a center
of mass reference (option [TT]-com[tt]) and a group of solvent
atoms is required. The program splits the group of solvent atoms
into molecules. For each solvent molecule the distance to the
closest atom in reference group or to the COM is determined.
A cumulative distribution of these distances is plotted.
For each distance between [TT]-rmin[tt] and [TT]-rmax[tt]
the inner product of the distance vector
and the dipole of the solvent molecule is determined.
For solvent molecules with net charge (ions), the net charge of the ion
is subtracted evenly at all atoms in the selection of each ion.
The average of these dipole components is printed.
The same is done for the polarization, where the average dipole is
subtracted from the instantaneous dipole. The magnitude of the average
dipole is set with the option [TT]-dip[tt], the direction is defined
by the vector from the first atom in the selected solvent group
to the midpoint between the second and the third atom.
-refat
-dip
The average dipole (D)
The bin width
scdist.xvg
 @BCalculate tcaf of molecules
-k34
transcur
tcaf_all
tcaf
tcaf_fit
tcaf_cub
visc_k
tc[i]
Density = %g (kg/m^3)
TC (nm/ps)
Transverse Current
tcaf[k]
tcafc
tcafc[k]
TCAF
TCAF's and fits
k (nm\S-1\N)
TCAF Fits
%6.3f %g
Averaged over k-vectors:
@    s1 symbol 3
@    s1 symbol color 2
infinite wavelength.[PAR]
Also use k=(3,0,0) and k=(4,0,0)
Exponential decay time for the TCAF fit weights
Need a topology to determine the molecules
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_tcaf.c
Velocity Autocorrelation Function for %s
DEATH HORROR: vectors not orthogonal
Transverse Current Autocorrelation Functions
\8h\4 (10\S-3\N kg m\S-1\N s\S-1\N)
k %6.3f  tau %6.3f  eta %8.5f 10^-3 kg/(m s)
k %6.3f  tau %6.3f  Omega %6.3f  eta %8.5f 10^-3 kg/(m s)
g_tcaf computes tranverse current autocorrelations.
These are used to estimate the shear viscosity eta.
For details see: Palmer, JCP 49 (1994) pp 359-366.[PAR]
Transverse currents are calculated using the
k-vectors (1,0,0) and (2,0,0) each also in the y- and z-direction,
(1,1,0) and (1,-1,0) each also in the 2 other planes (these vectors
are not independent) and (1,1,1) and the 3 other box diagonals (also
not independent). For each k-vector the sine and cosine are used, in
combination with the velocity in 2 perpendicular directions. This gives
a total of 16*2*2=64 transverse currents. One autocorrelation is
calculated fitted for each k-vector, which gives 16 tcaf's. Each of
these tcaf's is fitted to f(t) = exp(-v)(cosh(Wv) + 1/W sinh(Wv)),
v = -t/(2 tau), W = sqrt(1 - 4 tau eta/rho k^2), which gives 16 tau's
and eta's. The fit weights decay with time as exp(-t/wt), the tcaf and
fit are calculated up to time 5*wt.
The eta's should be fitted to 1 - a eta(k) k^2, from which
one can estimate the shear viscosity at k=0.[PAR]
When the box is cubic, one can use the option [TT]-oc[tt], which
averages the tcaf's over all k-vectors with the same length.
This results in more accurate tcaf's.
Both the cubic tcaf's and fits are written to [TT]-oc[tt]
The cubic eta estimates are also written to [TT]-ov[tt].[PAR]
With option [TT]-mol[tt] the transverse current is determined of
molecules instead of atoms. In this case the index group should
consist of molecule numbers instead of atom numbers.[PAR]
The k-dependent viscosities in the [TT]-ov[tt] file should be
fitted to eta(k) = eta0 (1 - a k^2) to obtain the viscosity at
NOTE: make sure you write coordinates and velocities often enough.
The initial, non-exponential, part of the autocorrelation function
is very important for obtaining a good fit.
@/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_traj.c
No frames found for %s, will not write %s
Maximum %s is %g on atom %d %s, res. %s %d
Plot data for the com of each group
Index contains molecule numbers iso atom numbers
Binwidth for velocity histogram (nm/ps)
Scale factor for pdb output, 0 is autoscale
Interpreting indexfile entries as molecules.
Using center of mass.
Need a run input file for option -mol, -cv or -cf
Molecule index (%d) is out of range (%d-%d)
Please select one or more output file options
Extending histogram from %d to %d
WARNING: More than one frame was used for option -cv or -cf
If atoms jump across the box you should use the -nojump option
g_traj plots coordinates, velocities, forces and/or the box.
With [TT]-com[tt] the coordinates, velocities and forces are
calculated for the center of mass of each group.
When [TT]-mol[tt] is set, the numbers in the index file are
interpreted as molecule numbers and the same procedure as with
[TT]-com[tt] is used for each molecule.[PAR]
Option [TT]-ot[tt] plots the temperature of each group,
provided velocities are present in the trajectory file.
No corrections are made for constrained degrees of freedom!
This implies [TT]-com[tt].[PAR]
Options [TT]-ekt[tt] and [TT]-ekr[tt] plot the translational and
rotational kinetic energy of each group,
Options [TT]-cv[tt] and [TT]-cf[tt] write the average velocities
and average forces as temperature factors to a pdb file with
the average coordinates. The temperature factors are scaled such
that the maximum is 10. The scaling can be changed with the option
[TT]-scale[tt]. To get the velocities or forces of one
frame set both [TT]-b[tt] and [TT]-e[tt] to the time of
desired frame. When averaging over frames you might need to use
the [TT]-nojump[tt] option to obtain the correct average coordinates.
If you select either of these option the average force and velocity
for each atom are written to an xvg file as well
(specified with [TT]-av[tt] or [TT]-af[tt]).[PAR]
Option [TT]-vd[tt] computes a velocity distribution, i.e. the
norm of the vector is plotted. In addition in the same graph
the kinetic energy distribution is given.
leg[j]
atom %d%s
mol %d%s
coordinates
Used %d frames for %s
%-5d  %10.3f  %10.3f  %10.3f
	%14.7e
Center of mass
Coordinate
Center of mass velocity
Velocity
Make molecules whole for COM
Plot X-component
Plot Y-component
Plot Z-component
-len
Plot vector length
Full precision output
-scale
coord.xvg
-oxt
coord.xtc
box.xvg
temp.xvg
-ekt
ektrans.xvg
-ekr
ekrot.xvg
veldist.xvg
veloc.pdb
force.pdb
all_veloc.xvg
all_force.xvg
%s%s%s%s%s%s
isize0
index0
Coordinate (nm)
Velocity (nm/ps)
Force (kJ mol\S-1\N nm\S-1\N)
Force
Box vector elements
Energy (kJ mol\S-1\N)
Center of mass translation
Center of mass rotation
sumxv
sumv
sumxf
sumf
*histo
TCM[i]
L[i]
arbitrary units
V (nm/ps)
Velocity distribution
%10.3e  %10d
average velocity
average force
Momentum Autocorrelation Function
Velocity Autocorrelation Function
g_velacc computes the velocity autocorrelation function.
When the [TT]-m[tt] option is used, the momentum autocorrelation
With option [TT]-mol[tt] the velocity autocorrelation function of
molecules is calculated. In this case the index group should consist
of molecule numbers instead of atom numbers.
Calculate the momentum autocorrelation function
Calculate the velocity acf of molecules
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_velacc.c
function is calculated.[PAR]
normm
g_helixorient calculates the coordinates and direction of the average
axis inside an alpha helix, and the direction/vectors of both the
alpha carbon and (optionally) a sidechain atom relative to the axis.[PAR]
As input, you need to specify an index group with alpha carbon atoms
corresponding to an alpha helix of continuous residues. Sidechain
directions require a second index group of the same size, containing
the heavy atom in each residue that should represent the sidechain.[PAR]
Note that this program does not do any fitting of structures.[PAR]
We need four Calpha coordinates to define the local direction of the helix
The tilt/rotation is calculated from Euler rotations, where we define
the helix axis as the local X axis, the residues/CA-vector as Y, and the
Z axis from their cross product. We use the Euler Y-Z-X rotation, meaning
we first tilt the helix axis (1) around and (2) orthogonal to the residues
vector, and finally apply the (3) rotation around it. For debugging or other
purposes, we also write out the actual Euler rotation angles as theta1-3.xvg
Select a group of Calpha atoms corresponding to a single continuous helix:
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_helixorient.c
Select a group of atoms defining the sidechain direction (1/residue):
Number of sidechain atoms (%d) != number of CA atoms (%d)
Incremental local helix rotation
Cumulative local helix rotation
%15.12g %15.12g %15.12g       
Calculate sidechain directions relative to helix axis too.
Calculate incremental rather than total rotation/tilt.
axis.[PAR]
-oaxis
-ocenter
-orise
-oradius
-otwist
-obending
-otilt
-orot
x_CA
x_SC
diff13
diff24
residuetwist
residueradius
residuerise
residueorigin
residuehelixaxis
residuevector
sidechainvector
residuebending
residuehelixaxis_t0
residuevector_t0
axis3_t0
residuehelixaxis_tlast
residuevector_tlast
axis3_tlast
theta1.xvg
theta2.xvg
theta3.xvg
Tilt (degrees)
Incremental local helix tilt
Rotation (degrees)
Cumulative local helix tilt
%15.12g  
%15.12g       
%15.12g      
-sidechain
-incremental
This program computes the size distributions of molecular/atomic clusters in
the gas phase. The output is given in the form of a XPM file.
The total number of clusters is written to a XVG file.[PAR]
When the [TT]-mol[tt] option is given clusters will be made out of
molecules rather than atoms, which allows clustering of large molecules.
In this case an index file would still contain atom numbers
or your calculation will die with a SEGV.[PAR]
When velocities are present in your trajectory, the temperature of
the largest cluster will be printed in a separate xvg file assuming
that the particles are free to move. If you are using constraints,
please correct the temperature. For instance water simulated with SHAKE
or SETTLE will yield a temperature that is 1.5 times too low. You can
compensate for this with the -ndf option. Remember to take the removal
of center of mass motion into account.[PAR]
The [TT]-mc[tt] option will produce an index file containing the
atom numbers of the largest cluster.
Largest distance (nm) to be considered in a cluster
Cluster molecules rather than atoms (needs tpr file)
Use periodic boundary conditions
Number of frames to skip between writing
Number of levels of grey in xpm output
Number of degrees of freedom of the entire system for temperature calculation. If not set, the number of atoms times three is used.
RGB values for the color of the lowest occupied cluster size
RGB values for the color of the highest occupied cluster size
You need a tpr file for the -mol option
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_clustsize.c
Temperature of largest cluster
tpr (%d atoms) and xtc (%d atoms) do not match!
Using molecules rather than atoms. Not reading index file %s
negative cluster size %d for element %d
You need a tpr file to analyse temperatures
Total number of atoms in clusters =  %d
cmid: %g, cmax: %g, max_size: %d
Weighted cluster size distribution
-nskip
-ndf
-rgblo
-rgbhi
csize
csizew
nclust
maxclust
avclust
histo-clust
-mcn
Number of clusters
#molecules
Average cluster size
Max cluster size
T (K)
mtop
clust_index
clust_size
cs_dist
cs_dist[n_x-1]
%14.6e  %10d
%14.6e  %10.3f
[ max_clust ]
Cluster size
Cluster size distribution
%5d  %8.3f
Size
# clusters
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_mdmat.c
g_mdmat makes distance matrices consisting of the smallest distance
between residue pairs. With -frames these distance matrices can be
of time, to be able to see differences in tertiary structure as a
funcion of time. If you choose your options unwise, this may generate
a large output file. Default only an averaged matrix over the whole
Also a count of the number of different atomic contacts between
residues over the whole trajectory can be made.
The output can be processed with xpm2ps to make a PostScript (tm) plot.
Discretize distance in # levels
Will calculate number of different contacts
New residue: atom %5s %5s %6d, index entry %5d, newres %5d
There are %d residues with %d atoms
Increase in number of contacts
@ legend string 0 "Total/mean"
@ legend string 4 "Mean/# atoms"
%3d  %8.3f  %3d  %8.3f  %3d  %8.3f
rndx
natm
stored as a function
trajectory is output.
-frames
Will truncate at %f nm
Select group for analysis
useatoms.atom
useatoms.atomname
useatoms.resinfo
totnmat
mean_n
tot_n
totnmat[i]
totmdmat
totmdmat[i]
t=%.0f ps
Processed %d frames
Mean smallest distance
Ratio
@ legend on
@ legend box on
@ legend loctype view
@ legend 0.75, 0.8
@ legend string 1 "Total"
@ legend string 2 "Mean"
@ legend string 3 "# atoms"
mean/atm
ratio
#%3s %8s  %3s  %8s  %3s  %8s
FSetting up tabulated potential from file %s
Found %d columns in %s. Expected 2.
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_wham.c
The tabulated potential in %s must be provided in 
ascending z-direction
z-values in %s are not equally spaced.
Found equally spaced tabulated potential from %g to %g, spacing %g
Error reading header from pdo file
This does not appear to be a valid pdo file. Found %s, expected %s
This does not appear to be a version 3.0 pdo file
Error reading dimensions in header from pdo file
Currently only supports one dimension
Found nPull=%d , nSkip=%d, ref=%s
Expected '#####', found %s. Hick.
time %f larger than tmax %f, stop reading pdo file
Found -hist-eq. Enforcing equal weights for all histograms, 
i.e. doing a non-weighted histogram analysis method. Ndata = %d
Distance %f out of bounds of tabulated potential (jl=%d, ju=%d).
Provide an extended table.
Enforcing a periodic profile by a sampling wheighted correction.
Distributing %f between adjacent bins to enforce a cyclic profile
Corrections to enforce periodicity
corrections propotional to 1/(n\si\Nn\si+1\N)\S%.2f
Sorry I don't know this energy unit.
Ups, random iWin = %d, nPull = %d, nr = %d, blockLength = %d, blockBase = %d
Cummulants of umbrella histograms
Cumulants of all histograms created.
++++ WARNING ++++
	Only %d data points per synthetic histogram!
	You may want to consider option -bs-dt.
Umbrella histograms. Bootstrap #%d
When computing statistical errors by bootstrapping entire histograms:
  *******************************************
  ******** Start bootstrap nr %d ************
  *******************************************
	Converged in %d iterations. Final maximum change %g
Average and stddev from bootstrapping
Wrote boot strap result to %s
Unknown file type of %s. Should be tpr, xvg, or pdo.
Filename too long. Only %d characters allowed
Cannot find executable %s. You may want to define the path to gunzip with the environment variable GMX_PATH_GZIP.
Automatic determination of boundaries from %d pdo files...
Determined boundaries to %f and %f
Found option -boundsonly, now exiting.
This is not a tpr of an umbrella simulation. Found ir.ePull = %s
This is not a tpr of umbrella simulation. Found only %d pull groups
Found pull geometry 'position' and more than 1 pull dimension (%d).
Hence, the pull potential does not correspond to a one-dimensional umbrella potential.
If you have some special umbrella setup you may want to write your own pdo files
and feed them into g_wham. Check g_wham -h !
Pull group %d has force constant of of 0.0 in %s.
That doesn't seem to be an Umbrella tpr.
Pull geometry %s not supported
File %s, %d groups, geometry "%s", dimensions [%s %s %s], (%d dimensions)
	grp %d) k = %.3f  inittial distance = %g
Found %d pull groups in %s,
 but %d data columns in %s (expected %d)
Found %d times and %d %s sets %s
 *** WARNING, Could not determine time step in %s
Sorry, flipping not supported for gmx4 output
Bad error, this error should have been catched before. Ups.
time %f larger than tmax %f, stop reading this pullx/pullf file
Reading %d tpr and pullf files
Automatic determination of boundaries...
Expected the %d'th file in input file to be a tpr file
Expected the %d'th file in input file to be a xvg (pullx/pullf) file
determine min and max automatically
Determine min and max and exit (with -auto)
Calculate the log of the profile before printing
energy unit in case of log output
Define profile to 0.0 at this position (with -log)
Create cyclic/periodic profile. Assumes min and max are the same point.
for '-cycl weighted', set parameter alpha
Combine halves of profile (not supported)
Enforce equal weight for all histograms. (Non-Weighed-HAM)
nr of bootstraps to estimate statistical uncertainty
timestep for synthetic bootstrap histograms (ps). Ensure independent data points!
seed for bootstrapping. (-1 = use time)
In bootstrapping, consider complete histograms as one data point. Accounts better for long autocorrelations.
when mixin histograms only mix within blocks of -histBS_block.
verbose bootstrapping. Print the cummulants and a histogram file for each bootstrap.
Force input does not work with tabulated potentials. Provide pullx.xvg or pdo files!
Give either pullx (-ix) OR pullf (-if) data. Not both.
g_wham supports three input modes, pullx, pullf, or pdo file input.
 Check g_wham -h !
With -auto, do not give -min or -max
When giving -min, you must give -max (and vice versa), too
Note: min and max given, switching off -auto.
Found %d tpr and %d pull %s files in %s and %s, respectively
Found %d file names in %s, but %d in %s
Wrote histograms to %s, now exiting.
Switched to exact iteration in iteration %d
Converged in %d iterations. Final maximum change %g
This is an analysis program that implements the Weighted
Histogram Analysis Method (WHAM). It is intended to analyze
output files generated by umbrella sampling simulations to 
compute a potential of mean force (PMF). [PAR]
At present, three input modes are supported:[BR]
[TT]*[tt] With option [TT]-it[tt], the user provides a file which contains the
  filenames of the umbrella simulation run-input files (tpr files),
  AND, with option -ix, a file which contains filenames of
  the pullx mdrun output files. The tpr and pullx files must
  be in corresponding order, i.e. the first tpr created the
[TT]*[tt] Same as the previous input mode, except that the the user
  provides the pull force ouput file names (pullf.xvg) with option -if.
  From the pull force the position in the ubrella potential is
  computed. This does not work with tabulated umbrella potentials.
[TT]*[tt] With option [TT]-ip[tt], the user provides filenames of (gzipped) pdo files, i.e.
  the gromacs 3.3 umbrella output files. If you have some unusual
  reaction coordinate you may also generate your own pdo files and
  feed them with the -ip option into to g_wham. The pdo file header
  must be similar to the folowing:[BR]
# Component selection: 0 0 1[BR]
# Group 1 'GR1'  Umb. Pos. 5.0 Umb. Cons. 1000.0[BR]
# Group 2 'GR2'  Umb. Pos. 2.0 Umb. Cons. 500.0[BR]
  Nr of pull groups, umbrella positions, force constants, and names
  may (of course) differ. Following the header, a time column and
  a data columns for each pull group follow (i.e. the displacement
  with respect to the umbrella center). Up to four pull groups are possible
By default, the output files are[BR]
  [TT]-o[tt]      PMF output file[BR]
  [TT]-hist[tt]   histograms output file[PAR]
The umbrella potential is assumed to be harmonic and the force constants are 
read from the tpr or pdo files. If a non-harmonic umbrella force was applied 
a tabulated potential can be provied with -tab.[PAR]
  [TT]-bins[tt]   Nr of bins used in analysis[BR]
  [TT]-temp[tt]   Temperature in the simulations[BR]
  [TT]-tol[tt]    Stop iteration if profile (probability) changed less than tolerance[BR]
  [TT]-auto[tt]   Automatic determination of boudndaries[BR]
  [TT]-min,-max[tt]   Boundaries of the profile [BR]
The data points which are used 
to compute the profile can be restricted with options -b, -e, and -dt. 
Play particularly with -b to ensure sufficient equilibration in each 
With -log (default) the profile is written in energy units, otherwise (-nolog) as 
probability. The unit can be specified with -unit. With energy output, 
the energy in the first bin is defined to be zero. If you want the free energy at a different 
position to be zero, choose with -zprof0 (useful with bootstrapping, see below).[PAR]
For cyclic (or periodic) reaction coordinates (dihedral angle, channel PMF
without osmotic gradient), -cycl is useful.[BR]
[TT]-cycl yes[tt]        min and max are assumed to
be neighboring points and histogram points outside min and max are mapped into 
the interval [min,max] (compare histogram output). [BR]
[TT]-cycl weighted[tt]   First, a non-cyclic profile is computed. Subsequently, 
periodicity is enforced by adding corrections dG(i) between neighboring bins
i and i+1. The correction is chosen proportional to 1/[n(i)*n(i+1)]^alpha, where
n(i) denotes the total nr of data points in bin i as collected from all histograms.
alpha is defined with -alpha. The corrections are written to the file defined by -wcorr.
 (Compare Hub and de Groot, PNAS 105:1198 (2008))[PAR]
Statistical errors may be estimated with bootstrap analysis. Use it with care, 
otherwise the statistical error may be substantially undererstimated !![BR]
[TT]-nBootstrap[tt] defines the nr of bootstraps. Two bootstrapping modes are supported.[BR]
[TT]-histbs[tt]    Complete histograms are considered as independent data points (default). For each
bootstrap, N histograms are randomly chosen from the N given histograms (allowing duplication).
To avoid gaps without data along the reaction coordinate blocks of histograms (-histbs-block)
may be defined. In that case, the given histograms are divided into blocks and 
only histograms within each block are mixed. Note that the histograms
within each block must be representative for all possible histograms, otherwise the
statistical error is undererstimated![BR]
[TT]-nohistbs[tt]  The given histograms are used to generate new random histograms,
such that the generated data points are distributed according the given histograms. The number
of points generated for each bootstrap histogram can be controlled with -bs-dt.
Note that one data point should be generated for each *independent* point in the given
histograms. With the long autocorrelations in MD simulations, this procedure may 
easily understimate the error![BR]
[TT]-bsres[tt]   Average profile and standard deviations[BR]
[TT]-bsprof[tt]  All bootstrapping profiles[BR]
With [TT]-vbs[tt] (verbose bootstrapping), the histograms of each bootstrap are written, and, 
with [TT]-nohistBS[tt], the cummulants of the histogram.
opt->tabY
opt->tabX
UMBRELLA
%s%s%s%d%d%d
%s%s%s%s%s%d
pullgroup %d, pullname = %s
%s%s%lf%s%s%lf
#####
window->Histo
window->z
window->k
window->pos
window->Flipped
window->N
window->Ntot
window->Histo[i]
tmpbuf
window[i].bContrib
window[i].bContrib[j]
Initialized rapid wham stuff.
Hub2008
weight
histsum
\f{12}D\f{}G(z)
%s_cumul.xvg
cummulant
window[i].cum
window[i].cum[j]
Wrote cumulants to %s
Umbrella histograms
%s_bs%d.xvg
Wrote %s
bsProfile
bsProfiles_av
bsProfiles_av2
allPull_winId
allPull_pullId
synthWindow
synthWindow[i].Histo
synthWindow[i].Histo[0]
synthWindow[i].N
synthWindow[i].pos
synthWindow[i].z
synthWindow[i].k
synthWindow[i].bContrib
randomArray
Hub2006
Boot strap profiles
	%4d) Maximum change %e
@    title "%s"
@    xaxis  label "%s"
@    yaxis  label "%s"
%e	%e	%e
xvg.gz
pdo.gz
filename
filename[i]
Found file %s in %s
File %s does not exist.
GMX_PATH_GZIP
%s/gunzip
%s -c < %s
Unable to open pipe to `%s'
Unable to open file %s
No files found. Hick.
Opening %s ...
*window
header->k
header->init_dist
header->umbInitDist
position
Empty pull %s file %s
window->Histo[g]
kCal
E (kJ mol\S-1\N)
E (kcal mol\S-1\N)
E (kT)
weighted
Minimum coordinate in profile
Maximum coordinate in profile
-auto
-bins
Number of bins in profile
Tolerance
verbose mode
first time to analyse (ps)
last time to analyse (ps)
Analyse only every dt ps
-histonly
Write histograms and exit
-boundsonly
-log
-zprof0
-cycl
-alpha
-flip
-hist-eq
-nBootstrap
-bs-dt
-bs-seed
-histbs
-histbs-block
-vbs
pullx-files
pullf-files
tpr-files
pdo-files
-hist
-bsres
bsResult
-bsprof
bsProfs
-tab
umb-pot
-wcorr
cycl-corr
Found %d pdo files in %s
Umbrella potential
Density of states
  first pullx, etc.[BR]
[TT]# UMBRELLA      3.0[BR]
# nSkip 1[BR]
# Ref. Group 'TestAtom'[BR]
# Nr. of pull groups 2[BR]
#####[tt][BR]
  at present.[PAR]
WHAM OPTIONS[PAR]
umbrella window![PAR]
ERROR ANALYSIS[BR]
Bootstrapping output:[BR]
D/builddir/build/BUILD/gromacs-4.5.1/src/tools/correl.c
@/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_sham.c
 REMARKS Energy Landscape from GROMACS
 %7d %7d %7d %7d %7d %7d %7d %7d %7d
%12.5E%12.5E%12.5E%12.5E%12.5E%12.5E
Tolerance on time in appropriate units (usually ps)
Turn off energy weighting even if energies are given
Temperature for single histogram analysis
Minimum probability. Anything lower than this will be set to zero
Dimensions for distances, used for volume correction (max 3 values, dimensions > 3 will get the same value as the last)
Number of bins for energy landscapes (max 3 values, dimensions > 3 will get the same value as the last)
Minimum for the axes in energy landscape (see above for > 3 dimensions)
Maximum for the axes in energy landscape (see above for > 3 dimensions)
Maximum probability in output, default is calculate
Maximum free energy in output, default is calculate
Minimum enthalpy in output, default is calculate
Maximum enthalpy in output, default is calculate
Number of levels for energy landscape
Legend label for the custom landscape
Can not do free energy and energy corrections at the same time
Can only handle one free energy component in %s
Can only handle one energy component or one energy and one T in %s
Number of energies (%d) does not match number of entries (%d) in %s
Can only handle one mapping data column in %s
Your xmax[%d] value %f is smaller than the largest data point %f
Your xmin[%d] value %f is larger than the smallest data point %f
There are %d bins in the %d-dimensional histogram. Beta-Emin = %g
Number of bins in file from -mdata option does not correspond to current analysis
Minimum %d at index %6d energy %10.3f
%-6s%5u  %-4.4s%3.3s  %4d    %8.3f%8.3f%8.3f%6.2f%6.2f
g_sham makes multi-dimensional free-energy, enthalpy and entropy plots.
g_sham reads one or more xvg files and analyzes data sets.
g_sham basic purpose is plotting Gibbs free energy landscapes
by Bolzmann inverting multi-dimensional histograms (option [TT]-lp[tt])
make enthalpy (option [TT]-lsh[tt]) and entropy (option [TT]-lss[tt])
plots. The histograms can be made for any quantities the user supplies.
Option [TT]-ge[tt] can be used to supply a file with free energies
when the ensemble is not a Boltzmann ensemble, but needs to be biased
by this free energy. One free energy value is required for each
(multi-dimensional) data point in the [TT]-f[tt] input.
Option [TT]-ene[tt] can be used to supply a file with energies.
These energies are used as a weighting function in the single
histogram analysis method due to Kumar et. al. When also temperatures
are supplied (as a second column in the file) an experimental
weighting scheme is applied. In addition the vales
are used for making enthalpy and entropy plots.
With option [TT]-dim[tt] dimensions can be gives for distances.
When a distance is 2- or 3-dimensional, the circumference or surface
sampled by two particles increases with increasing distance.
Depending on what one would like to show, one can choose to correct
the histogram and free-energy for this volume effect.
The probability is normalized by r and r^2 for a dimension of 2 and 3
A value of -1 is used to indicate an angle in degrees between two
vectors: a sin(angle) normalization will be applied.
Note that for angles between vectors the inner-product or cosine
is the natural quantity to use, as it will produce bins of the same
xm->ed
       2 !NTITLE
 REMARKS DATE: 2004-12-21 
%12.5E
   -9999
-ttol
-sham
-tsham
-pmin
-dim
-ngrid
-pmax
-gmax
-emin
-emax
-mname
gibbs
-ene
esham
-histo
edist
prob
-lsh
enthalpy
-lss
-map
-ls3
gibbs3
-mdata
mapdata
shamlog
histo[i]
Energy distribution
  %6d
idim
ibox
min_eig
max_eig
nxyz
Ptot = %g
%5d  %10.5e  %10.5e  %10.5e
b->index
b->a
[ %d ]
axis_z
Minima sorted after energy
PP[i]
Probability Distribution
G (kJ/mol)
Gibbs Energy Landscape
H (kJ/mol)
Enthalpy Landscape
TDS (kJ/mol)
Entropy Landscape
Custom Landscape
out.xplor
user.xplor
WW[i]
12.xpm
W (kJ/mol)
13.xpm
SHAM Energy Landscape
23.xpm
(option [TT]-ls[tt])
but it can also
respectively.
volume.
[TT]g_nmtraj[tt] generates an virtual trajectory from an eigenvector, 
corresponding to a harmonic cartesian oscillation around the average 
structure. The eigenvectors should normally be mass-weighted, but you can 
use non-weighted eigenvectors to generate orthogonal motions. 
The output frames are written as a trajectory file covering an entire period, and 
the first frame is the average structure. If you write the trajectory in (or convert to) 
PDB format you can view it directly in PyMol and also render a photorealistic movie. 
Motion amplitudes are calculated from the eigenvalues and a preset temperature, 
assuming equipartition of the energy over all modes. To make the motion clearly visible 
in PyMol you might want to amplify it by setting an unrealistic high temperature. 
However, be aware that both the linear cartesian displacements and mass weighting will 
lead to serious structure deformation for high amplitudes - this is is simply a limitation 
of the cartesian normal mode model. By default the selected eigenvector is set to 7, since 
 the first six normal modes are the translational and rotational degrees of freedom.
String of eigenvectors to use (first is 1)
String of phases (default is 0.0)
Amplitude for modes with eigenvalue<=0
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_nmtraj.c
More phases than eigenvector indices specified.
Warning: Setting phase of last %d modes to zero...
Different number of atoms in topology and eigenvectors.
Could not find mode %d in eigenvector file.
-eignr
-phases
-amplitude
Number of frames to generate
nmtraj
imodes
out_eigidx
mode phases: %g %g
KD#W&
MbP?
v@%s is not a trj file, exiting
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_trjconv.c
You forgot to set the truncation time
Sorry, can not trunc %s, truncation of this filetype is not supported
Do you REALLY want to truncate this trajectory (%s) at:
frame %d, time %g, bytes %ld ??? (type YES if so)
Once again, I'm gonna DO this...
Already at end of file (t=%g)...
Only write frame when t MOD dt = first time (%t)
Round measurements to nearest picosecond
Dump frame nearest specified time (%t)
Starting time (%t) (default: don't change)
Change time step between input frames (%t)
PBC treatment (see help text for full description)
Size for new cubic box (default: read from input)
All coordinates will be translated by trans. This can advantageously be combined with -pbc mol -ur compact.
All coordinates will be shifted by framenr*shift
Fit molecule to ref structure in the structure file
Precision for .xtc and .gro writing in number of decimal places
Read and write velocities if possible
Read and write forces if possible
Truncate input trj file after this time (%t)
Execute command for every output frame with the frame number as argument
Start writing new file when t MOD split = first time (%t)
Write each frame to a separate .gro, .g96 or .pdb file
Prepend file number in case you use the -sep flag with this number of zeroes
Drop all frames below this value
Drop all frames above this value
Add conect records when writing pdb files. Useful for visualization of non-standard molecules, e.g. coarse grained ones
WARNING: Option for unitcell representation (-ur %s)
         only has effect in combination with -pbc %s, %s or %s.
         Ingoring unitcell representation.
PBC condition treatment does not work together with rotational fit.
Please do the PBC condition treatment first and then run trjconv in a second step
for the rotational fit.
First doing the rotational fit and then doing the PBC treatment gives incorrect
results!
Output file name '%s' does not contain a '.'
Can only use the sub option with output file types xtc and trr
Option -pbc %s requires a .tpr file for the -s option
Select groups of frame number indices:
Need at least 2 atoms to fit!
WARNING: fitting with only 2 atoms is not unique
Could not read a frame from %s
Setting output precision to %g (nm)
Using output precision of %g (nm)
APPENDING to existing file %s
Index[%d] %d is larger than the number of atoms in the trajectory file (%d)
Generated by %s. #atoms=%d, a BOX is stored in this file.
Molecule %d marked for clustering but not atom %d
Atom %d marked for clustering but not molecule %d
No molecules selected in the cluster
No central molecules could be found
Assertion failed for "%s" in file %s, line %d
dump core ? (y/n):
COM: %8.3f  %8.3f  %8.3f  iter = %d  Isq = %8.3f
 ->  frame %6d time %8.3f      
Shifting position of residue %d (atoms %u-%u) by %g,%g,%g
There are no molecule descriptions. I need a tpr file for this pbc option.
Shifting position of molecule %d by %8.3f  %8.3f  %8.3f
File %s.xtc should still be open (%d open xtc files)
in order to write frame %d. my_clust = %d
Less than zero open xtc files!
Generated by trjconv : %s t= %9.5f
REMARK    GENERATED BY TRJCONV
WARNING no output, last frame read at t=%g
trjconv can convert trajectory files in many ways:[BR]
[BB]1.[bb] from one format to another[BR]
[BB]2.[bb] select a subset of atoms[BR]
[BB]3.[bb] change the periodicity representation[BR]
[BB]4.[bb] keep multimeric molecules together[BR]
[BB]5.[bb] center atoms in the box[BR]
[BB]6.[bb] fit atoms to reference structure[BR]
[BB]7.[bb] reduce the number of frames[BR]
[BB]8.[bb] change the timestamps of the frames 
([TT]-t0[tt] and [TT]-timestep[tt])[BR]
[BB]9.[bb] cut the trajectory in small subtrajectories according
to information in an index file. This allows subsequent analysis of
the subtrajectories that could, for example be the result of a
cluster analysis. Use option [TT]-sub[tt].
This assumes that the entries in the index file are frame numbers and
dumps each group in the index file to a separate trajectory file.[BR]
[BB]10.[bb] select frames within a certain range of a quantity given
The program [TT]trjcat[tt] can concatenate multiple trajectory files.
Currently seven formats are supported for input and output:
[TT].xtc[tt], [TT].trr[tt], [TT].trj[tt], [TT].gro[tt], [TT].g96[tt],
[TT].pdb[tt] and [TT].g87[tt].
The file formats are detected from the file extension.
The precision of [TT].xtc[tt] and [TT].gro[tt] output is taken from the
input file for [TT].xtc[tt], [TT].gro[tt] and [TT].pdb[tt],
and from the [TT]-ndec[tt] option for other input formats. The precision
is always taken from [TT]-ndec[tt], when this option is set.
All other formats have fixed precision. [TT].trr[tt] and [TT].trj[tt]
output can be single or double precision, depending on the precision
Note that velocities are only supported in
[TT].trr[tt], [TT].trj[tt], [TT].gro[tt] and [TT].g96[tt] files.[PAR]
Option [TT]-app[tt] can be used to
append output to an existing trajectory file.
No checks are performed to ensure integrity
of the resulting combined trajectory file.[PAR]
Option [TT]-sep[tt] can be used to write every frame to a separate
.gro, .g96 or .pdb file, default all frames all written to one file.
[TT].pdb[tt] files with all frames concatenated can be viewed with
It is possible to select part of your trajectory and write it out
to a new trajectory file in order to save disk space, e.g. for leaving
out the water from a trajectory of a protein in water.
[BB]ALWAYS[bb] put the original trajectory on tape!
We recommend to use the portable [TT].xtc[tt] format for your analysis
to save disk space and to have portable files.[PAR]
There are two options for fitting the trajectory to a reference
either for essential dynamics analysis or for whatever.
The first option is just plain fitting to a reference structure
in the structure file, the second option is a progressive fit
in which the first timeframe is fitted to the reference structure 
in the structure file to obtain and each subsequent timeframe is 
fitted to the previously fitted structure. This way a continuous
trajectory is generated, which might not be the case when using the
regular fit method, e.g. when your protein undergoes large
conformational transitions.[PAR]
Option [TT]-pbc[tt] sets the type of periodic boundary condition
* [TT]mol[tt] puts the center of mass of molecules in the box.[BR]
* [TT]res[tt] puts the center of mass of residues in the box.[BR]
* [TT]atom[tt] puts all the atoms in the box.[BR]
* [TT]nojump[tt] checks if atoms jump across the box and then puts
them back. This has the effect that all molecules
will remain whole (provided they were whole in the initial
conformation), note that this ensures a continuous trajectory but
molecules may diffuse out of the box. The starting configuration
for this procedure is taken from the structure file, if one is
supplied, otherwise it is the first frame.[BR]
* [TT]cluster[tt] clusters all the atoms in the selected index
such that they are all closest to the center of mass of the cluster
which is iteratively updated. Note that this will only give meaningful
results if you in fact have a cluster. Luckily that can be checked
afterwards using a trajectory viewer. Note also that if your molecules
are broken this will not work either.[BR]
* [TT]whole[tt] only makes broken molecules whole.[PAR]
Option [TT]-ur[tt] sets the unit cell representation for options
[TT]mol[tt], [TT]res[tt] and [TT]atom[tt] of [TT]-pbc[tt].
All three options give different results for triclinic boxes and
identical results for rectangular boxes.
[TT]rect[tt] is the ordinary brick shape.
[TT]tric[tt] is the triclinic unit cell.
[TT]compact[tt] puts all atoms at the closest distance from the center
of the box. This can be useful for visualizing e.g. truncated
octahedrons. The center for options [TT]tric[tt] and [TT]compact[tt]
is [TT]tric[tt] (see below), unless the option [TT]-boxcenter[tt]
Option [TT]-center[tt] centers the system in the box. The user can
select the group which is used to determine the geometrical center.
Option [TT]-boxcenter[tt] sets the location of the center of the box
for options [TT]-pbc[tt] and [TT]-center[tt]. The center options are:
[TT]tric[tt]: half of the sum of the box vectors,
[TT]rect[tt]: half of the box diagonal,
Use option [TT]-pbc mol[tt] in addition to [TT]-center[tt] when you
want all molecules in the box after the centering.[PAR]
With [TT]-dt[tt] it is possible to reduce the number of 
frames in the output. This option relies on the accuracy of the times
in your input trajectory, so if these are inaccurate use the
[TT]-timestep[tt] option to modify the time (this can be done
simultaneously). For making smooth movies the program [TT]g_filter[tt]
can reduce the number of frames while using low-pass frequency
filtering, this reduces aliasing of high frequency motions.[PAR]
Using [TT]-trunc[tt] trjconv can truncate [TT].trj[tt] in place, i.e.
without copying the file. This is useful when a run has crashed
during disk I/O (one more disk full), or when two contiguous
trajectories must be concatenated without have double frames.[PAR]
[TT]trjcat[tt] is more suitable for concatenating trajectory files.[PAR]
Option [TT]-dump[tt] can be used to extract a frame at or near
one specific time from your trajectory.[PAR]
Option [TT]-drop[tt] reads an [TT].xvg[tt] file with times and values.
When options [TT]-dropunder[tt] and/or [TT]-dropover[tt] are set,
frames with a value below and above the value of the respective options
Error truncating file %s
Ok, I'll forget about it
whole
tric
rotxy+transxy
progressive
Only write every nr-th frame
-round
-timestep
Unit-cell representation
Center atoms in box
-boxcenter
Center for -pbc and -center
-box
-ndec
-vel
-force
-trunc
-exec
-app
Append output
-nzero
-dropunder
-dropover
-conect
-sub
-drop
Will write %s: %s
clust_status
clust_status_id
nfwritten
 t= 
frindex[%4d]=%4d
Select group for clustering
Select group for centering
Select group for output
fr.x
Reading drop file ...
 %d time points
Found no data points in %s
Precision of %s is %g (nm)
xmem
vmem
fmem
bMol
m_com
m_shift
bTmp
m == nmol_cl
dumping %d
Dumping frame at t= %g %s
00000000000
%s.%s
%s t= %9.5f
DHE, ftp=%d
%s  %d
Error executing command: %s
in an [TT].xvg[tt] file.[PAR]
of the trjconv binary.
[TT]rasmol -nmrpdb[tt].[PAR]
treatment:[BR]
is set differently.[PAR]
[TT]zero[tt]: zero.
will not be written.
First time to use (%t)
Last time to use (%t)
-prec
-settime
-sort
-keeplast
-overwrite
-cat
-demux
remd
Dump of replica_index.xvg
  %3d
No input files!
No output files!
fnms_out
fnms_out[i]
%d_%s
fp_in
bSet
fp_out
readtime
timest
cont_type
%25s   %10.3f %s          
Sorting disabled.
%25s   %10.3f %s   %10.3f %s
Reading first frame from %s
 Will append after %f 
lasttime %g
0  0  1  2  3  4  5[BR]
2  1  0  2  3  5  4[BR]
trajectory indices.
tries to be smart. Beware.
Change starting time interactively
Sort trajectory files (not frames)
keep overlapping frames at end of trajectory
overwrite overlapping frames during appending
do not discard double time frames
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_trjcat.c
You have specified %d files and %d entries in the demux table
Don't know what to do with more than 1 output file if  not demultiplexing
Number of output files should be 1 or %d (#input files), not %d
Trajectory file %s has %d atoms while previous trajs had %d atoms
Trajectory file %s has time %f while previous trajs had time %f
First time in demuxing table does not match trajectories
trx[0].time = %g, time[k] = %g
Demuxing the same replica %d twice at time %f
Couldn't read frame from file.
WARNING: Couldn't find a time in the frame.
Different numbers of atoms (%d/%d) in files
Not enough atoms (%d) for index group (%d)
Enter the new start time (%s) for each file.
There are two special options, both disable sorting:
c (continue) - The start time is taken from the end
of the previous file. Use it when your continuation run
restarts with t=0.
l (last) - The time in this file will be changed the
same amount as in the previous. Use it when the time in the
new run continues from the end of the previous one,
since this takes possible overlap into account.
          File             Current start (%s)  New start (%s)
---------------------------------------------------------
'%s' not recognized as a floating point number, 'c' or 'l'. Try again: 
Summary of files and start times used:
          File                Start time       Time step
---------------------------------------------------------
 WARNING: same Start time as previous
%25s        Continue from last file
%25s        Change by same amount as last file
Will append to %s rather than creating a new file
Can only append to the first file which is %s (not %s)
WARNING: Appending without -overwrite implies -keeplast between the first two files. 
If the trajectories have an overlap and have not been written binary 
reproducible this will produce an incorrect trajectory!
Error reading last frame. Maybe seek not supported.
Overwrite only supported for XTC.
Error seeking to append position.
Error seeking: attempted to seek to %f but got %f.
WARNING: Frames around t=%f %s have a different spacing than the rest,
might be a gap or overlap that couldn't be corrected automatically.
Continue writing frames from %s t=%g %s, frame=%d      
 ->  frame %6d time %8.3f %s     
Last frame written was %d, time %f %s
trjcat concatenates several input trajectory files in sorted order. 
In case of double time frames the one in the later file is used. 
By specifying [TT]-settime[tt] you will be asked for the start time 
of each file. The input files are taken from the command line, 
such that a command like [TT]trjcat -o fixed.trr *.trr[tt] should do 
the trick. Using [TT]-cat[tt] you can simply paste several files 
together without removal of frames with identical time stamps.[PAR]
One important option is inferred when the output file is amongst the
input files. In that case that particular file will be appended to
which implies you do not need to store double the amount of data.
Obviously the file to append to has to be the one with lowest starting
time since one can only append at the end of a file.[PAR]
If the [TT]-demux[tt] option is given, the N trajectories that are
read, are written in another order as specified in the xvg file.
The xvg file should contain something like:[PAR]
Where the first number is the time, and subsequent numbers point to
The frames corresponding to the numbers present at the first line
are collected into the output trajectory. If the number of frames in
the trajectory does not match that in the xvg file then the program
Number of atoms in a molecule
ordered
-nshell
Number of molecules
Creating pdbfino records
top.atoms.pdbinfo
%10.3f  %8d
to atoms in a reference group
protein.
a group of reference atoms and 
Atom used for the distance calculation, 0 is COM
Use the distance to the center of mass of the reference group
Cutoff used for the distance calculation when computing the number of molecules in a shell around e.g. a protein
Order molecules on z-coordinate
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_trjorder.c
Select %sa group of molecules to be ordered:
Number of atoms in the run input file is larger than in the trjactory
An atom number in group %s is larger than the number of atoms in the trajectory
Number of atoms in the molecule group (%d) is not a multiple of na (%d)
The reference atom can not be larger than the number of atoms in a molecule
Will compute the number of molecules within a radius of %g
trjorder orders molecules according to the smallest distance
or on z-coordinate (with option [TT]-z[tt]).
With distance ordering, it will ask for a group of reference
atoms and a group of molecules. For each frame of the trajectory
the selected molecules will be reordered according to the shortest
distance between atom number [TT]-da[tt] in the molecule and all the
atoms in the reference group. The center of mass of the molecules can
be used instead of a reference atom by setting [TT]-da[tt] to 0.
All atoms in the trajectory are written
to the output trajectory.[PAR]
trjorder can be useful for e.g. analyzing the n waters closest to a
In that case the reference group would be the protein and the group
of molecules would consist of all the water atoms. When an index group
of the first n waters is made, the ordered trajectory can be used
with any Gromacs program to analyze the n closest waters.
If the output file is a pdb file, the distance to the reference target
will be stored in the B-factor field in order to color with e.g. rasmol.
With option [TT]-nshell[tt] the number of molecules within a shell
of radius [TT]-r[tt] around the reference group are printed.
Auto tick spacing failed for %c-axis, guessing %g
Auto tick spacing for %c-axis: major %g, minor %g
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_xpm2ps.c
Warning: two colormaps differ only in RGB value, using one colormap.
Not enough symbols to merge the two colormaps
Combining colormaps of %d and %d elements into one of %d elements
Set the x-size of the box to %.3f
Set the y-size of the box to %.3f
Selected legend of matrix # %d for display
Selected legend of matrix # %d for second display
Here starts the filling of box #%d
Here starts the zero lines drawing
converting %dx%d matrix to %dx%d
Size of frame %d in 1st (%dx%d) and 2nd matrix (%dx%d) do not match.
No such combination rule %d for matrices
combination results in uniform matrix (%g), no output
WAKE UP!! Size of frame %d in 2nd matrix file (%dx%d) does not match size of 1st matrix (%dx%d) or the other way around.
Display frame, ticks, labels, title and legend
Horizontal size of the matrix in ps units
Element x-size, overrides -size (also y-size when -by is not set)
Rainbow colors, convert white to
Re-scale colormap to a smooth gradient from white {1,1,1} to {r,g,b}
only write out every nr-th row and column
insert line in xpm matrix where axis label is zero
Skip first N colors from xpm file for the legend
Minimum for combination output
Maximum for combination output
RGB value %g out of range (0.0-1.0)
WARNING: can only write result of arithmetic combination of two matrices to .xpm file
         file %s will not be written
Different number of matrices, using the smallest number.
WARNING: arithmetic matrix combination selected (-combine), but no second matrix (-f2) supplied
         no matrix combination will be performed
xpm2ps makes a beautiful color plot of an XPixelMap file.
Labels and axis can be displayed, when they are supplied
Matrix data may be generated by programs such as do_dssp, g_rms or
Parameters are set in the [TT]m2p[tt] file optionally supplied with
[TT]-di[tt]. Reasonable defaults are provided. Settings for the y-axis
default to those for the x-axis. Font names have a defaulting hierarchy:
titlefont -> legendfont; titlefont -> (xfont -> yfont -> ytickfont)
-> xtickfont, e.g. setting titlefont sets all fonts, setting xfont
sets yfont, ytickfont and xtickfont.[PAR]
When no [TT]m2p[tt] file is supplied, many setting are set by
command line options. The most important option is [TT]-size[tt]
which sets the size of the whole matrix in postscript units.
This option can be overridden with the [TT]-bx[tt] and [TT]-by[tt]
options (and the corresponding parameters in the [TT]m2p[tt] file),
which set the size of a single matrix element.[PAR]
With [TT]-f2[tt] a 2nd matrix file can be supplied, both matrix
files will be read simultaneously and the upper left half of the
first one ([TT]-f[tt]) is plotted together with the lower right
half of the second one ([TT]-f2[tt]). The diagonal will contain
values from the matrix file selected with [TT]-diag[tt].
Plotting of the diagonal values can be suppressed altogether by
setting [TT]-diag[tt] to [TT]none[tt].
In this case, a new color map will be generated with
a red gradient for negative numbers and a blue for positive.
If the color coding and legend labels of both matrices are identical,
only one legend will be displayed, else two separate legends are
With [TT]-combine[tt] an alternative operation can be selected
to combine the matrices. The output range is automatically set
to the actual range of the combined matrix. This can be overridden
with [TT]-cmin[tt] and [TT]-cmax[tt].[PAR]
[TT]-title[tt] can be set to [TT]none[tt] to suppress the title, or to
[TT]ylabel[tt] to show the title in the Y-label position (alongside
With the [TT]-rainbow[tt] option dull grey-scale matrices can be turned
into attractive color pictures.[PAR]
Merged or rainbowed matrices can be written to an XPixelMap file with
black&white
Helvetica
titlefont
titlefontsize
legendfont
legendlabel
legend2label
legendfontsize
xbox
ybox
matrixspacing
xoffset
yoffset
boxlinewidth
ticklinewidth
zerolinewidth
x-lineat0value
x-major
x-minor
x-firstmajor
x-majorat0
x-majorticklen
x-minorticklen
x-label
x-fontsize
x-font
x-tickfontsize
x-tickfont
y-lineat0value
y-major
y-minor
y-firstmajor
y-majorat0
y-majorticklen
y-minorticklen
y-label
y-fontsize
y-font
y-tickfontsize
y-tickfont
mat[i].map
Here starts the BOX drawing
xtick
ytick
%s / %s
Now it's legend time!
Were there, dude
mat[i].axis_x
mat[i].axis_y
Combining two %dx%d matrices
Matrix %d is %d x %d
both
second
blue
halves
-frame
-title
Show title at
-yonce
Show y-label only once
-legend
Show legend
-diag
Diagonal
Element y-size
-rainbow
-gradient
-zeroline
-legoffset
-combine
Combine two matrices
-cmin
-cmax
root2
There are %d matrices in %s
in the correct matrix format.
g_mdmat.[PAR]
displayed.
the Y-axis).[PAR]
the [TT]-xpm[tt] option.
black
?    shift       :%7.3f%7.3f%7.3f (nm)
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_editconf.c
Range of values for B-factors too large (min %g, max %g) will scale down a factor 10
Range of values for B-factors too small (min %g, max %g) will scale up a factor 10
Will attach %d B-factors to %d residues
Will attach %d B-factors to %d atoms
B-factors range from %g to %g
%-6s%5u  %-4.4s%3.3s %c%4d%c   %8.3f%8.3f%8.3f%6.2f%6.2f
Aligning %g %g %g to %g %g %g : xprod  %g %g %g
Rotation matrix: 
%g %g %g
%g %g %g
%g %g %g
For complex molecules, the periodicity removal routine may break down, 
in that case you can use trjconv.
Choose output from default index groups
HIDDENVisualize a grid of boxes, -1 visualizes the 14 box images
Angles between the box vectors (bc,ac,ab)
Distance between the solute and the box
Center molecule in box (implied by -box and -d)
Coordinates of geometrical center
Center of rotation for alignment
Rotation around the X, Y and Z axes in degrees
Orient molecule(s) along their principal axes
Density (g/l) of the output box achieved by scaling
Remove the periodicity (make molecule whole again)
Store the charge of the atom in the B-factor field and the radius of the atom in the occupancy field
Default Van der Waals radius (in nm) if one can not be found in the database or if no parameters are present in the topology file
Use rmin/2 (minimum in the Van der Waals potential) rather than sigma/2 
Read the Van der Waals radii from the file vdwradii.dat rather than computing the radii based on the force field
Force B-factor attachment per atom
Add chain label for all residues
Add CONECT records to a pdb file when written. Can only be done when a topology is present
WARNING: setting -density overrides -scale
Incompatible options -mead and -grasp. Turning off -grasp
Output file should be a .pdb file when using the -grasp option
Input file should be a .tp[abr] file when using the -mead option
Volume: %g nm^3, corresponds to roughly %d electrons
Atom numbers don't match (%d vs. %d)
Sorry, can not visualize box with index groups
Sorry, can only visualize box with a pdb file
Select a group for determining the system size:
    system size :%7.3f%7.3f%7.3f (nm)
    diameter    :%7.3f               (nm)
    center      :%7.3f%7.3f%7.3f (nm)
    box vectors :%7.3f%7.3f%7.3f (nm)
    box angles  :%7.2f%7.2f%7.2f (degrees)
    box volume  :%7.2f               (nm^3)
Select group for the determining the orientation
Cannot scale density with zero mass (%g) or volume (%g)
Scaling all box vectors by %g
Select a group that you want to align:
Aligning %d atoms (out of %d) to %g %g %g, center of rotation %g %g %g
Using %g %g %g as principal axis
Select a group that you want to translate:
Translating %d atoms (out of %d) by %g %g %g nm
Rotating %g, %g, %g degrees around the X, Y and Z axis respectively
new system size : %6.3f %6.3f %6.3f
new center      :%7.3f%7.3f%7.3f (nm)
new box vectors :%7.3f%7.3f%7.3f (nm)
new box angles  :%7.2f%7.2f%7.2f (degrees)
new box volume  :%7.2f               (nm^3)
WARNING: Your box is triclinic with non-orthogonal axes. In this case, the
distance from the solute to a box surface along the corresponding normal
vector might be somewhat smaller than your specified value %f.
You can check the actual value with g_mindist -pi
WARNING: No boxtype specified - distance condition applied in each dimension.
If the molecule rotates the actual distance will be smaller. You might want
to use a cubic box instead, or why not try a dodecahedron today?
Sorry, cannot do bfactors with an index group.
REMARK    The B-factors in this file hold atomic radii
REMARK    The occupancy in this file hold atomic charges
GRASP PDB FILE
FORMAT NUMBER=1
REMARK    The B-factors in this file hold atomic charges
REMARK    The occupancy in this file hold atomic radii
editconf converts generic structure format to [TT].gro[tt], [TT].g96[tt]
The box can be modified with options [TT]-box[tt], [TT]-d[tt] and
[TT]-angles[tt]. Both [TT]-box[tt] and [TT]-d[tt]
will center the system in the box, unless [TT]-noc[tt] is used.
Option [TT]-bt[tt] determines the box type: [TT]triclinic[tt] is a
triclinic box, [TT]cubic[tt] is a rectangular box with all sides equal
[TT]dodecahedron[tt] represents a rhombic dodecahedron and
[TT]octahedron[tt] is a truncated octahedron.
The last two are special cases of a triclinic box.
The length of the three box vectors of the truncated octahedron is the
shortest distance between two opposite hexagons.
The volume of a dodecahedron is 0.71 and that of a truncated octahedron
is 0.77 of that of a cubic box with the same periodic image distance.
Option [TT]-box[tt] requires only
one value for a cubic box, dodecahedron and a truncated octahedron.
With [TT]-d[tt] and a [TT]triclinic[tt] box the size of the system in the x, y
and z directions is used. With [TT]-d[tt] and [TT]cubic[tt],
[TT]dodecahedron[tt] or [TT]octahedron[tt] boxes, the dimensions are set
to the diameter of the system (largest distance between atoms) plus twice
Option [TT]-angles[tt] is only meaningful with option [TT]-box[tt] and
a triclinic box and can not be used with option [TT]-d[tt].
When [TT]-n[tt] or [TT]-ndef[tt] is set, a group
can be selected for calculating the size and the geometric center,
otherwise the whole system is used.
[TT]-rotate[tt] rotates the coordinates and velocities.
[TT]-princ[tt] aligns the principal axes of the system along the
coordinate axes, this may allow you to decrease the box volume,
but beware that molecules can rotate significantly in a nanosecond.
Scaling is applied before any of the other operations are
performed. Boxes and coordinates can be scaled to give a certain density (option
[TT]-density[tt]). Note that this may be inaccurate in case a gro
file is given as input. A special feature of the scaling option, when the
factor -1 is given in one dimension, one obtains a mirror image,
mirrored in one of the plains, when one uses -1 in three dimensions
a point-mirror image is obtained.[PAR]
Groups are selected after all operations have been applied.[PAR]
Periodicity can be removed in a crude manner.
It is important that the box sizes at the bottom of your input file
are correct when the periodicity is to be removed.
When writing [TT].pdb[tt] files, B-factors can be
added with the [TT]-bf[tt] option. B-factors are read
from a file with with following format: first line states number of
entries in the file, next lines state an index
followed by a B-factor. The B-factors will be attached per residue
unless an index is larger than the number of residues or unless the
[TT]-atom[tt] option is set. Obviously, any type of numeric data can
be added instead of B-factors. [TT]-legend[tt] will produce
a row of CA atoms with B-factors ranging from the minimum to the
maximum value found, effectively making a legend for viewing.
With the option -mead a special pdb (pqr) file for the MEAD electrostatics
program (Poisson-Boltzmann solver) can be made. A further prerequisite
is that the input file is a run input file.
The B-factor field is then filled with the Van der Waals radius
of the atoms while the occupancy field will hold the charge.
The option -grasp is similar, but it puts the charges in the B-factor
and the radius in the occupancy.
Option [TT]-align[tt] allows alignment
of the principal axis of a specified group against the given vector, 
with an optional center of rotation specified by [TT]-aligncenter[tt].
Finally with option [TT]-label[tt] editconf can add a chain identifier
to a pdb file, which can be useful for analysis with e.g. rasmol.
To convert a truncated octrahedron file produced by a package which uses
a cubic box with the corners cut off (such as Gromos) use:[BR]
[TT]editconf -f <in> -rotate 0 45 35.264 -bt o -box <veclen> -o <out>[tt][BR]
where [TT]veclen[tt] is the size of the cubic box times sqrt(3)/2.
*bfac_val
*bfac_nr
Reading %d B-factors from %s
Residue nr %d not found
Images
vert
No v
-ndef
-visbox
Box type for -box and -d
Box vector lengths (a,b,c)
-angles
-aligncenter
-align
Align to target vector
-translate
Translation
-rotate
-princ
Scaling factor
-density
-grasp
-rvdw
-sig56
-vdwread
-atom
Make B-factor legend
-mead
Read %d atoms
%selocities found
images.pdb
Volume  of input %g (nm^3)
Mass    of input %g (a.m.u.)
Density of input %g (g/l)
WARNING: %s
Select a group for output:
triclinic
cubic
dodecahedron
octahedron
or [TT].pdb[tt].
the specified distance.
?333333
?UUUUUU
?UUUUUU
?.!	
@SOL
Processing topology
temp.top
system
 water
%s in water
%*s %d
%-15s %5d
Sorting configuration
moltypes
 different
Found %d%s molecule type%s:
newatoms
newatoms->resinfo
newx
newv
newr
 and velocities
atoms_solvt
x_solvt
v_solvt
r_solvt
atoms_solvt->resinfo
atoms_solvt->atomname
atoms_solvt->atom
protein
spc216
insert
box size
-try
random generator seed
-vdwd
default vdwaals distance
-maxsol
Note: no velocities found
Note: no atoms in %s
x_insrt
r_insrt
atoms_insrt.resinfo
atoms_insrt.atomname
atoms_insrt.atom
title_insrt
Try %d
 success (now %d atoms)!
unless [TT]-box[tt] is set.
at random positions.
Volume                 :  %10g (nm^3)
Density                :  %10g (g/l)
Number of SOL molecules:  %5d   
Removing line #%d '%s' from topology file (%s)
Adding line for %d solvent molecules to topology file (%s)
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_genbox.c
%7s (%4d atoms): %5d residues
No solvent in %s, please check your input
Reading solvent configuration%s
solvent configuration contains %d atoms in %d residues
Initialising van der waals distances...
Will generate new solvent configuration of %dx%dx%d boxes
Generated solvent containing %d atoms in %d residues
Molecules must be whole in the initial configurations.
no of extra molecules to insert
try inserting -nmol*-try times
thickness of optional water layer around solute
maximum number of solvent molecules to add if they fit in the box. If zero (default) this is ignored
keep velocities from input solute and solvent
When specifying inserted molecules (-ci), -nmol must be larger than 0
When no solute (-cp) is specified, a box size (-box) must be specified
Reading solute configuration%s
Undefined solute box.
Create one with editconf or give explicit -box command line option
No molecule in %s, please check your input
Reading molecule configuration 
Containing %d atoms in %d residue
Added %d molecules (out of %d requested) of %s
Writing generated configuration to %s
Output configuration contains %d atoms in %d residues
Genbox can do one of 3 things:[PAR]
1) Generate a box of solvent. Specify -cs and -box. Or specify -cs and
-cp with a structure file with a box, but without atoms.[PAR]
2) Solvate a solute configuration, eg. a protein, in a bath of solvent 
molecules. Specify [TT]-cp[tt] (solute) and [TT]-cs[tt] (solvent). 
The box specified in the solute coordinate file ([TT]-cp[tt]) is used,
If you want the solute to be centered in the box,
the program [TT]editconf[tt] has sophisticated options
to change the box dimensions and center the solute.
Solvent molecules are removed from the box where the 
distance between any atom of the solute molecule(s) and any atom of 
the solvent molecule is less than the sum of the VanderWaals radii of 
both atoms. A database ([TT]vdwradii.dat[tt]) of VanderWaals radii is 
read by the program, atoms not in the database are 
assigned a default distance [TT]-vdwd[tt].
Note that this option will also influence the distances between
solvent molecules if they contain atoms that are not in the database.
3) Insert a number ([TT]-nmol[tt]) of extra molecules ([TT]-ci[tt]) 
The program iterates until [TT]nmol[tt] molecules
have been inserted in the box. To test whether an insertion is 
successful the same VanderWaals criterium is used as for removal of 
solvent molecules. When no appropriately 
sized holes (holes that can hold an extra molecule) are available the 
program tries for [TT]-nmol[tt] * [TT]-try[tt] times before giving up. 
Increase -try if you have several small holes to fill.[PAR]
The default solvent is Simple Point Charge water (SPC), with coordinates 
from [TT]$GMXLIB/spc216.gro[tt]. These coordinates can also be used
for other 3-site water models, since a short equibilibration will remove
the small differences between the models.
Other solvents are also supported, as well as mixed solvents. The
only restriction to solvent types is that a solvent molecule consists
of exactly one residue. The residue information in the coordinate
files is used, and should therefore be more or less consistent.
In practice this means that two subsequent solvent molecules in the 
solvent coordinate file should have different residue number.
The box of solute is built by stacking the coordinates read from
the coordinate file. This means that these coordinates should be 
equlibrated in periodic boundary conditions to ensure a good
alignment of molecules on the stacking interfaces.
The [TT]-maxsol[tt] option simply adds only the first [TT]-maxsol[tt]
solvent molecules and leaves out the rest would have fit into the box.
The program can optionally rotate the solute molecule to align the
longest molecule axis along a box edge. This way the amount of solvent
molecules necessary is reduced.
It should be kept in mind that this only works for
short simulations, as eg. an alpha-helical peptide in solution can 
rotate over 90 degrees, within 500 ps. In general it is therefore 
better to make a more or less cubic box.[PAR]
Setting -shell larger than zero will place a layer of water of
the specified thickness (nm) around the solute. Hint: it is a good
idea to put the protein in the center of a box first (using editconf).
Finally, genbox will optionally remove lines from your topology file in 
which a number of solvent molecules is already added, and adds a 
line with the total number of solvent molecules in your coordinate file.
DNo more replaceable solvent!
pptr
paptr
nptr
naptr
genion
topol
Processing topology
mol_line
%-10s  %d
repl
Number of positive ions
-pname
Name of the positive ion
Charge of the positive ion
Number of negative ions
-nname
Name of the negative ion
Charge of the negative ion
Minimum distance between ions
-random
-conc
-neutral
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_genion.c
Replacing solvent molecule %d (atom %d) with %s
Calculation of the potential is not reliable, therefore the [TT]-random[tt] option is now turned on by default.
If you specify a salt concentration existing ions are not taken into account. In effect you therefore specify the amount of salt to be added.
Not computing potential with random option!
Negative number of ions to add?
No ions to add and no potential to calculate.
Will try to add %d %s ions and %d %s ions.
Select a continuous group of solvent molecules
The solvent group %s is not continuous: index[%d]=%d, index[%d]=%d
Your solvent group size (%d) is not a multiple of %d
Number of (%d-atomic) solvent molecules: %d
Not enough solvent for adding ions
No line with moleculetype '%s' found the [ molecules ] section of file '%s'
The last entry for moleculetype '%s' in the [ molecules ] section of file '%s' has less solvent molecules (%d) than were replaced (%d)
Replacing %d solute molecules in topology file (%s)  by %d %s and %d %s ions.
Potential calculated by genion
Use random placement of ions instead of based on potential. The rmin option should still work
Seed for random number generator
Scaling factor for the potential for -pot
Specify salt concentration (mol/liter). This will add sufficient ions to reach up to the specified concentration as computed from the volume of the cell in the input tpr file. Overrides the -np and  nn options.
This option will add enough ions to neutralize the system. In combination with the concentration option a neutral system at a given salt concentration will be generated.
genion replaces solvent molecules by monoatomic ions at
the position of the first atoms with the most favorable electrostatic
potential or at random. The potential is calculated on all atoms, using
normal GROMACS particle based methods (in contrast to other methods
based on solving the Poisson-Boltzmann equation).
The potential is recalculated after every ion insertion.
If specified in the run input file, a reaction field, shift function
or user function can be used. For the user function a table file
can be specified with the option [TT]-table[tt].
The group of solvent molecules should be continuous and all molecules
should have the same number of atoms.
The user should add the ion molecules to the topology file or use
the [TT]-p[tt] option to automatically modify the topology.[PAR]
The ion molecule type, residue and atom names in all force fields
are the capitalized element names without sign. Ions which can have
multiple charge states get the multiplicilty added, without sign,
for the uncommon states only.[PAR]
With the option [TT]-pot[tt] the potential can be written as B-factors
in a pdb file (for visualisation using e.g. rasmol).
The unit of the potential is 1000 kJ/(mol e), the scaling be changed
with the [TT]-scale[tt] option.[PAR]
For larger ions, e.g. sulfate we recommended to use genbox.
genconf multiplies a given coordinate file by simply stacking them
on top of each other, like a small child playing with wooden blocks.
The program makes a grid of [IT]user defined[it]
and interspaces the grid point with an extra space [TT]-dist[tt].[PAR]
When option [TT]-rot[tt] is used the program does not check for overlap
between molecules on grid points. It is recommended to make the box in
the input file at least as big as the coordinates + 
If the optional trajectory file is given, conformations are not
generated, but read from this file and translated appropriately to
The program should allow for random displacement of lattice points.
Random generator seed, if 0 generated from the time
Divide the box in blocks on this number of cpus
Number of atoms per molecule, assumed to start from 0. If you set this wrong, it will screw up your system!
Number of boxes (-nbox) should be larger than zero
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_genconf.c
Can not shuffle if the molecules only have %d atoms
center of geometry: %f, %f, %f
Not enough frames in trajectory
proportions ([TT]-nbox[tt]), 
Van der Waals radius.[PAR]
build the grid.
-trj
-nbox
Number of boxes
Distance between boxes
-rot
Randomly rotate conformations
-shuffle
Random shuffling of molecules
Sort molecules on X coord
-nmolat
-maxrot
Maximum random rotation
-renumber
Renumber residues
vrot
No atoms in trajectory %s
constraint
distance restraint
-freeze
-disre
-disre_dist
-disre_frac
-disre_up2
-constr
posre
disre_dist should be >= 0
Reading structure file
[ freeze ]
; constraints for %s of %s
[ constraints ]
;%4s %5s %1s %10s
[ distance_restraints ]
funct
%5d %5d %1d %10g
[ position_restraints ]
;%3s %5s %9s %10s %10s
%4d %4d %10g %10g %10g
force constants (kJ mol-1 nm-2)
if the -of option or this one is given an index file will be written containing atom numbers of all atoms that have a B-factor less than the level given here
Generate a distance restraint matrix for all the atoms in index
Distance range around the actual distance for generating distance restraints
Fraction of distance to be used as interval rather than a fixed distance. If the fraction of the distance that you specify here is less than the distance given in the previous option, that one is used instead.
Distance between upper bound for distance restraints, and the distance at which the force becomes constant (see manual)
Only generate distance restraints for atoms pairs within cutoff (nm)
Generate a constraint matrix rather than distance restraints. Constraints of type 2 will be generated that do generate exclusions.
no index file and no structure file suplied
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_genpr.c
disre_frac should be between 0 and 1
No B-factors in input file %s, use a pdb file next time.
Select group to generate %s matrix from
; distance restraints for %s of %s
;%4s %5s %1s %5s %10s %10s %10s %10s %10s
%5d %5d %1d %5d %10d %10g %10g %10g %10g
Select group to position restrain
; position restraints for %s of %s
genrestr produces an include file for a topology containing
a list of atom numbers and three force constants for the
X, Y and Z direction. A single isotropic force constant may
be given on the command line instead of three components.[PAR]
WARNING: position restraints only work for the one molecule at a time.
Position restraints are interactions within molecules, therefore
they should be included within the correct [TT][ moleculetype ][tt]
block in the topology. Since the atom numbers in every moleculetype
in the topology start at 1 and the numbers in the input file for
genpr number consecutively from 1, genpr will only produce a useful
file for the first molecule.[PAR]
The -of option produces an index file that can be used for
freezing atoms. In this case the input file must be a pdb file.[PAR]
With the [TT]-disre[tt] option half a matrix of distance restraints
is generated instead of position restraints. With this matrix, that
one typically would apply to C-alpha atoms in a protein, one can
maintain the overall conformation of a protein without tieing it to
a specific position (as with position restraints).
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_eneconv.c
Energy files don't match, different number of energies:
 %s: %d
 %s: %d
Continue conversion using only the first %d terms (n/y)?
(you should be sure that the energy terms match)
          File             Current start       New start
---------------------------------------------------------
Enter the new start time for each file.
There are two special options, both disables sorting:
c (continue) - The start time is taken from the end
of the previous file. Use it when your continuation run
restarts with t=0 and there is no overlap.
l (last) - The time in this file will be changed the
same amount as in the previous. Use it when the time in the
new run continues from the end of the previous one,
since this takes possible overlap into account.
Summary of files and start times used:
          File                Start time
-----------------------------------------
%25s        Continue from end of last file
With [IT]multiple files[it] specified for the [TT]-f[tt] option:[BR]
Concatenates several energy files in sorted order.
In case of double time frames the one
in the later file is used. By specifying [TT]-settime[tt] you will be
asked for the start time of each file. The input files are taken
such that the command [TT]eneconv -o fixed.edr *.edr[tt] should do
With [IT]one file[it] specified for [TT]-f[tt]:[BR]
Reads one energy file and writes another, applying the [TT]-dt[tt],
[TT]-offset[tt], [TT]-t0[tt] and [TT]-settime[tt] options and
converting to a different format if necessary (indicated by file
[TT]-settime[tt] is applied first, then [TT]-dt[tt]/[TT]-offset[tt]
followed by [TT]-b[tt] and [TT]-e[tt] to select which frames to write.
When combining trajectories the sigma and E^2 (necessary for statistics) are not updated correctly. Only the actual energy is correct. One thus has to compute statistics in another way.
Only write out frame when t MOD dt = offset
Sort energy files (not frames)
Multiply energy component by this factor
Select the terms you want to scale from the following list
tadjust %12.6e + fr->t %12.6e <= t %12.6e
fr->step %s, fr->t %.4f, fro->step %s fro->t %.4f, w %d
WARNING: missing energy sums at time %f
Continue writing frames from t=%g, step=%s
Last step written from %s: t %g, step %s
WARNING: There might be a gap around t=%g
Last frame written was at step %s, time %f
Will not convert
Enter the new start time:
%25s   %10.3f             
Try that again: 
%25s   %10.3f
from the command line,
the trick. [PAR]
extentions).[PAR]
fixed
First time to use
Last time to use
-offset
Time offset for -dt option
-scalefac
-error
Stop on errors in the file
fnms
ee_sum
fro->ener
Cannot read energy term
fr->step %s, fr->t %.4f
energy average summation
Writing frame time %g    
No frames written.
Wrote %d frames
sqrt(time) (ps^1/2)
-sqrt
Maximum r in the matrix (nm)
-mmax
vanhove
vanhove_r
vanhove_t
sx[nfr]
mcount
mat[f]
rcount
tcount
Processing frame %d
pr[m]
ticky
G (1/nm)
Van Hove function
G (nm\S-1\N)
%g ps
t (ps)
in time t.
is determined automatically.
[TT]-fm[tt] or [TT]-ft[tt].
time can be reduced.
Use sqrt(t) on the matrix axis which binspacing # in sqrt(ps)
Number of frames in the matrix, 0 is plot all
Binwidth in the matrix and for -or (nm)
Maximum density in the matrix, 0 is calculate (1/nm)
Number of levels in the matrix
Number of curves for the -or output
Frame spacing for the -or output
Integration limit for the -ot output (nm)
Number of frames in the -ot output, 0 is plot all
For output set one (or more) of the output file options
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_vanhove.c
Can not invert matrix, determinant is zero
Value at (0,0): %.3f, maximum of the rest %.3f
@ subtitle "for particles in group %s"
Probability of moving less than %g nm
g_vanhove computes the Van Hove correlation function.
The Van Hove G(r,t) is the probability that a particle that is at r0
at time zero can be found at position r0+r at time t.
g_vanhove determines G not for a vector r, but for the length of r.
Thus it gives the probability that a particle moves a distance of r
Jumps across the periodic boundaries are removed.
Corrections are made for scaling due to isotropic
or anisotropic pressure coupling.
With option [TT]-om[tt] the whole matrix can be written as a function
of t and r or as a function of sqrt(t) and r (option [TT]-sqrt[tt]).
With option [TT]-or[tt] the Van Hove function is plotted for one
or more values of t. Option [TT]-nr[tt] sets the number of times,
option [TT]-fr[tt] the number spacing between the times.
The binwidth is set with option [TT]-rbin[tt]. The number of bins
With option [TT]-ot[tt] the integral up to a certain distance
(option [TT]-rt[tt]) is plotted as a function of time.
For all frames that are read the coordinates of the selected particles
are stored in memory. Therefore the program may use a lot of memory.
For options [TT]-om[tt] and [TT]-ot[tt] the program may be slow.
This is because the calculation scales as the number of frames times
Note that with the [TT]-dt[tt] option the memory usage and calculation
x8phbres.dat
rnms
rnms[i]
%s-%d
slen = %d
-rot0
Toggle numbers
First residue is %d
Initial rotation is %g
Title will be '%s'
No residue numbers
Incorrect usage of option %s
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_wheel.c
wheel plots a helical wheel representation of your sequence.
The input sequence is in the .dat file where the first line contains
the number of residues and each consecutive line contains a residuename.
Rotate around an angle initially (90 degrees makes sense)
Plot a title in the center of the wheel (must be shorter than 10 characters, or it will overwrite the wheel)
@/builddir/build/BUILD/gromacs-4.5.1/src/tools/addconf.c
Neighborsearching with a cut-off of %g
Successfully made neighbourlist
Sorry, %s pbc is not yet supported
Removed %d atoms that were outside the box
 tested %d pairs, removed %d atoms.
Keeping %d solvent atoms after proximity check
Will add %d atoms in %d residues
cg_index
mtop->moltype
mtop->molblock
ffp->functype
ffp->iparams
ir->opts.egp_flags
nFreeze
Solvent
Protein
WARNING: Nothing to add
Calculating Overlap...
box_margin = %g
remove
nri = %d, nrj = %d
Checking %s-Solvent overlap:
Neither atom is solvent%d %d
remove[%5d] = %s
keep
Added %d molecules
v_all
Doing single force calculation...
/builddir/build/BUILD/gromacs-4.5.1/src/tools/calcpot.c
WARNING: turning of free energy, will use lambda=0
Using a coulomb cut-off of %g nm
cgcm
There were %d interactions
state
Input Parameters
*pot
Replace_atom: inr (%d) not in %d .. %d
/builddir/build/BUILD/gromacs-4.5.1/src/tools/edittop.c
Delete_atom: inr (%d) not in %d .. %d
Replacing atom %d ... 
 done
Deleting atom %d ...
niatoms
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_bar.c
Temperatures in files %s and %s are not the same!
Native lambda in files %s and %s are not the same (and they should be)!
Foreign lambda in files %s and %s are not the same (and they should be)!
File %s contains no usable data.
Found temperature of %g in file '%s'
Did not find a temperature in the subtitle in file '%s', use the -temp option of g_bar
While trying to read the lambda value from the file path: last directory in the path '%s' does not contain a number
Malformed number in file path '%s'
File %s contains multiple sets but no legends, can not determine the lambda values
There is no legend in file '%s', can not deduce lambda
There is no proper lambda legend in file '%s', can not deduce lambda
File %s contains multiple sets but no indication of the native lambda
File '%s' contains fewer than two columns
Temperature in file %s different from earlier files or setting
%s: %.1f - %.1f; lambda = %.3f
    foreign lambdas:
The number of digits after the decimal point
Minimum number of blocks for error estimation
Maximum number of blocks for error estimation
Number of bins for histogram output
Can not have negative number of digits
Unexpected block data in file %s
Lambda values change in %s: can't apply BAR method
Did not find a delta h information in file %s
Can't handle both raw delta U data and histograms in the same file %s
Unexpected block count in %s: was %d, now %d
histogram with more than two sets of data!
Histogram counts don't match in %s
   Samples in time interval: %.3f - %.3f
Removing samples outside of: %.3f - %.3f
WARNING: Using the derivative data (dH/dlambda) to extrapolate delta H values.
This will only work if the Hamiltonian is linear in lambda.
Some dhdl files contain only one value (dH/dl), while others 
contain multiple values (dH/dl and/or Delta H), will not proceed 
because of possible inconsistencies.
Could not find a set for lambda = %g in the files for lambda = %g
WARNING: setting the precision to %g because that is the minimum
         reasonable number, given the expected discretization error.
WARNING: histogram number incompatible with block number for averaging: can't do error estimate
Detailed results in kT (see help for explanation):
WARNING: Some of these results violate the Second Law of Thermodynamics: 
         This is can be the result of severe undersampling, or (more likely)
         there is something wrong with the simulations.
maximum discretization error = 
WARNING: discretization error (%g) is larger than statistical error.
       Decrease histogram spacing for more accurate results
maximum histogram range error = 
WARNING: histogram range error (%g) is larger than statistical error.
       Increase histogram range for more accurate results
g_bar calculates free energy difference estimates through 
Bennett's acceptance ratio method (BAR). It also automatically
adds series of individual free energies obtained with BAR into
a combined free energy estimate.[PAR]
Every individual BAR free energy difference relies on two 
simulations at different states: say state A and state B, as
controlled by a parameter 'lambda' (see the mdp parameter
'init_lambda'). The BAR method calculates a ratio of weighted
average of the Hamiltonian difference of state B given state A and
vice versa. If the Hamiltonian does not linearly depend on lambda
(in which case we can extrapolate the derivative of the Hamiltonian
w.r.t. lambda, as is the default when 'free_energy' is on), the
energy differences to the other state need to be calculated
explicitly during the simulation. This can be controlled with
the mdp option 'foreign_lambda'.[PAR]
Input option [TT]-f[tt] expects multiple dhdl files. 
Two types of input files are supported:[BR]
* Files with only one y-value, for such files it is assumed 
that the y-value is dH/dlambda and that the Hamiltonian depends 
linearly on lambda. The lambda value of the simulation is inferred 
from the subtitle if present, otherwise from a number in the
subdirectory in the file name.
* Files with more than one y-value. The files should have columns 
with dH/dlambda and Delta lambda. The lambda values are inferred 
lambda of the simulation from the legend of dH/dlambda 
and the foreign lambda's from the legends of Delta H.[BR]
The lambda of the simulation is parsed from dhdl.xvg file's legend 
containing the string 'dH', the foreign lambda's from the legend 
containing the capitalized letters 'D' and 'H'. The temperature 
is parsed from the legend line containing 'T ='.[PAR]
The input option [TT]-g[tt] expects multiple .edr files. 
These can contain either lists of energy differences (see the
mdp option separate_dhdl_file), or a series of histograms
(see the mdp options dh_hist_size and dh_hist_spacing).
The temperature and lambda values are automatically deduced from
the ener.edr file.[PAR]The free energy estimates are determined using BAR with bisection, 
the precision of the output is set with [TT]-prec[tt]. 
An error estimate taking into account time correlations 
is made by splitting the data into blocks and determining 
the free energy differences over those blocks and assuming 
The final error estimate is determined from the average variance 
over 5 blocks. A range of blocks numbers for error estimation can 
be provided with the options [TT]-nbmin[tt] and [TT]-nbmax[tt].[PAR]
g_bar tries to aggregate samples with the same 'native' and 'foreign'
lambda values, but always assumes independent samples: note that
when aggregating energy differences/derivatives with different
sampling intervals, this is almost certainly not correct: usually
subsequent energies are correlated and different time intervals mean
different degrees of correlation between samples.[PAR]
The results are split in two parts: the last part contains the final 
results in kJ/mol, together with the error estimate for each part 
and the total. The first part contains detailed free energy 
difference estimates and phase space overlap measures in units of 
kT (together with their computed error estimate). The printed 
*  lam_A: the lambda values for point A.[BR]
*  lam_B: the lambda values for point B.[BR]
*     DG: the free energy estimate.[BR]
*    s_A: an estimate of the relative entropy of B in A.[BR]
*    s_A: an estimate of the relative entropy of A in B.[BR]
*  stdev: an estimate expected per-sample standard deviation.[PAR]
The relative entropy of both states in each other's ensemble can be 
interpreted as a measure of phase space overlap: 
the relative entropy s_A of the work samples of lambda_B in the 
ensemble of lambda_A (and vice versa for s_B), is a 
measure of the 'distance' between Boltzmann distributions of 
the two states, that goes to zero for identical distributions. See 
Wu & Kofke, J. Chem. Phys. 123 084109 (2009) for more information.
The estimate of the expected per-sample standard deviation, as given 
in Bennett's original BAR paper: 
Bennett, J. Comp. Phys. 22, p 245 (1976), Eq. 10 gives an estimate 
of the quality of sampling (not directly of the actual statistical 
error, because it assumes independent samples).[PAR]
To get a visual estimate of the phase space overlap, use the 
-oh option to write series of histograms, together with the 
sc->s
sc->r
DG %9.5f %9.5f
barsim
ba->np
\xl\f{}
\8l\4
ba->lambda
legend[i]
 %.3f (%d pts)
Writing histogram to %s
[\Delta]H (%s)
Samples
N(\DeltaH)
setnames[nsets-1]
*bin
Begin time for BAR
End time for BAR
Temperature (K)
-nbin
barint
histogram
partsum
nhists
npts
lambdas
s->du
s->hist
h->bin[i]
 %.3f (%d hists)
%%6.3f
%%%d.%df
%%%ds
%s %s %s
\DeltaG
Free energy differences
Free energy integral
Temperature: %g K
 lam_A
%6s 
 lam_B
disc 
range 
s_A 
s_B 
stdev 
Final results in kJ/mol:
lambda 
,   DG 
 +/- 
 (max. range err. = 
total  
No results to calculate.
from the legends: 
the blocks are independent. 
values are:[BR]
-nbin option.[PAR]
>ffffff
?Bw#
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_membed.c
Group %s not found in indexfile.
Maybe you have non-default groups in your mdp file, while not using the '-n' option of grompp.
In that case use the '-n' option.
Something is wrong in mol ids, at %d, mol_id %d
mol_id %d larger than total number of molecules %d.
Can not read file %s,
             this file is from a Gromacs version which is older than 2.0
             Make a new one with grompp or use a gro or pdb file, if possible
Unknown precision in file %s: real is %d bytes instead of %d or %d
Reading file %s, %s (%s precision)
Moleculetype %s is found both in the group to insert and the rest of the system.
Because we need to exclude all interactions between the atoms in the group to
insert, the same moleculetype can not be used in both groups. Change the
moleculetype of the molecules %s in the inserted group. Do not forget to provide
an appropriate *.itp file
Something is wrong with your membrane. Max and min z values are %f and %f.
Maybe your membrane is not centered in the box, but located at the box edge in the z-direction,
so that one membrane is distributed over two periodic box images. Another possibility is that
your water layer is not thick enough.
Piecewise sum of inserted atoms not same as size of group selected to insert.
Embedding piece %d with center of geometry: %f %f %f
Trying to remove more lipid molecules than there are in the membrane
Iterating NPT constraints: %6i %20.12f%14.6g%20.12f
Iterating NPT constraints: CONVERGED
Exiting from an NPT iterating cycle of length %d
Slight numerical convergence deviation with NPT at step %d, relative error only %10.5g, likely not a problem, continuing
Could not converge NPT constraints, too many exceptions (%d%%
Could not converge NPT constraints
Old tpr file with twin-range settings: modifying energy calculation and/or T/P-coupling frequencies
With twin-range cut-off's and SHAKE the virial and pressure are incorrect
Can not do pressure coupling with twin-range cut-off's and SHAKE
WARNING: nstglobalcomm is larger than nstlist, but not a multiple, setting it to %d
WARNING: Changing nstcomm from %d to %d
To reduce the energy communication with nstlist = -1
the neighbor list validity should not be checked at every step,
this means that exact integration is not guaranteed.
The neighbor list validity is checked after:
  <n.list life time> - 2*std.dev.(n.list life time)  steps.
In most cases this will result in exact integration.
This reduces the energy communication by a factor of 2 to 3.
If you want less energy communication, set nstlist > 3.
RMS relative constraint deviation after constraining: %.2e
starting md rerun '%s', reading coordinates from input trajectory '%s'
Calculated time to finish depends on nsteps from run input file,
which may not correspond to the time needed to process input trajectory.
%s steps, %s ps (continuing from step %s, %8.1f ps).
Number of atoms in trajectory (%d) does not match the run input file (%d)
Rerun trajectory frame step %d time %f does not contain a box, while pbc is used
Rerun trajectory frame step %d time %f has too small box dimensions
Can not find an appropriate interval for inter-simulation communication, since nstlist, nstcalcenergy and -replex are all <= 0
Syncing simulations for checkpointing and termination every %d steps
WARNING: Some frames do not contain velocities.
         Ekin, temperature and pressure are incorrect,
         the virial will be incorrect when constraints are present.
Vsite recalculation with -rerun is not implemented for domain decomposition, use particle decomposition
%d atoms beyond ns buffer, updating neighbor list after %s steps
nlist life time %s run av. %4.1f sig %3.1f check %s check with -gcom %d
  %-30s V %12.5e  dVdl %12.5e
Received the %s signal, stopping at the next %sstep
Step %s: Run time exceeded %.3f hours, will terminate the run
Cannot flush logfile - maybe you are out of quota?
Step %s: resetting all time and cycle counters
Average neighborlist lifetime: %.1f steps, std.dev.: %.1f steps
Average number of atoms that crossed the half buffer length: %.1f
Fraction of iterations that converged:           %.2f %%
Average number of force evaluations per MD step: %.2f
Version of *.tpr file to old (%d). Rerun grompp with gromacs VERSION 4.0.3 or newer.
Change integrator to md in mdp file.
Sorry, parallel g_membed is not yet fully functrional.
Select a group to embed in the membrane:
Select a group to embed %s into (e.g. the membrane):
Warning %d:
A probe radius (-rad) smaller than 0.2 can result in overlap between waters and the group to embed, which will result in Lincs errors etc.
If you are sure, you can increase maxwarn.
Warning %d:
The initial size of %s is probably too smal.
If you are sure, you can increase maxwarn.
Warning %d;
The number of steps used to grow the xy-coordinates of %s (%d) is probably too small.
Increase -nxy or, if you are sure, you can increase maxwarn.
Warning %d;
The number of steps used to grow the z-coordinate of %s (%d) is probably too small.
Increase -nz or, if you are sure, you can increase maxwarn.
Warning %d:
The number of growth steps (-nxy + -nz) is larger than the number of steps in the tpr.
If you are sure, you can increase maxwarn.
You did not specify "%s" as a freezegroup.
"%s" not as freezegroup defined in the mdp-file.
freeze dimensions for %s are not Y Y Y
No energy groups defined. This is necessary for energy exclusion in the freeze group
Energy exclusions "%s" and  "%s" do not match the group to embed "%s"
No energy exclusion groups defined. This is necessary for energy exclusion in the freeze group
Warning %d:
The xy-area is very small compared to the area of the protein.
This might cause pressure problems during the growth phase. Just try with
current setup (-maxwarn + 1), but if pressure problems occur, lower the
compressibility in the mdp-file or use no pressure coupling at all.
The estimated area of the protein in the membrane is %.3f nm^2
There are %d lipids in the membrane part that overlaps the protein.
The area per lipid is %.4f nm^2.
Maximum number of lipids that will be removed is %d.
Will resize the protein by a factor of %.3f in the xy plane and %.3f in the z direction.
This resizing will be done with respect to the geometrical center of all protein atoms
that span the membrane region, i.e. z between %.3f and %.3f
Warning %d:
Trying to remove a larger lipid area than the estimated protein area
Try making the -xyinit resize factor smaller. If you are sure about this increase maxwarn.
Warning: The number of atoms for which the bonded interactions are removed is %d, while %d atoms are embedded. Make sure that the atoms to be embedded are not in the samemolecule type as atoms that are not to be embedded.
Too many warnings.
If you are sure these warnings are harmless, you can increase -maxwarn
Orientation restraints do not work (yet) with domain decomposition, use particle decomposition (mdrun option -pd)
pbc=%s is only implemented with domain decomposition
Free energy with %s is not implemented
Resize factor for the protein in the xy dimension before starting embedding
Final resize factor in the xy dimension
Resize factor for the protein in the z dimension before starting embedding
Final resize faction in the z dimension
Number of iteration for the xy dimension
Number of iterations for the z dimension
Probe radius to check for overlap between the group to embed and the membrane
Perform piecewise resize. Select parts of the group to insert and resize these with respect to their own geometrical center.
Allow asymmetric insertion, i.e. the number of lipids removed from the upper and lower leaflet will not be checked.
Number of lipids that will additionally be removed from the lower (negative number) or upper (positive number) membrane leaflet.
Maximum number of warning allowed
HIDDENUse particle decompostion
HIDDENDomain decomposition grid, 0 is optimize
HIDDENNumber of threads to start (0 is guess)
HIDDENNumber of separate nodes to be used for PME, -1 is guess
HIDDENCheck for all bonded interactions with DD
HIDDENThe maximum distance for bonded interactions with DD (nm), 0 is determine from initial coordinates
HIDDENMaximum distance for P-LINCS (nm), 0 is estimate
HIDDENDynamic load balancing (with DD)
HIDDENMinimum allowed dlb scaling of the DD cell size
HIDDENGlobal communication frequency
HIDDENWrite separate V and dVdl terms for each interaction type and node to the log file(s)
HIDDENPrint all forces larger than this (kJ/mol nm)
HIDDENTry to avoid optimizations that affect binary reproducibility
HIDDENDo multiple simulations in parallel
HIDDENAttempt replica exchange every # steps
HIDDENSeed for replica exchange, -1 is generate a seed
HIDDENDo a simulation including the effect of an X-Ray bombardment on your system
HIDDENReset cycle counters after these many time steps
HIDDENReset the cycle counters after half the number of steps or halfway -maxh
HIDDENTerminate after 0.99 times this time (hours)
HIDDENCheckpoint interval (minutes)
HIDDENAppend to previous output files when continuing from checkpoint
HIDDENAdd the simulation part number to all output files when continuing from checkpoint
Need at least two replicas for replica exchange (option -multi)
mdrun -multi is not supported with the thread library.Please compile GROMACS with MPI support
No previous checkpoint file present, assuming this is a new run.
Checkpoint file is from part %d, new output files will be suffixed '%s'.
Please cite:
Wolf et al, J Comp Chem 31 (2010) 2169-2174.
g_membed embeds a membrane protein into an equilibrated lipid bilayer at the position
and orientation specified by the user.
The user should merge the structure files of the protein and membrane (+solvent), creating a
single structure file with the protein overlapping the membrane at the desired position and
orientation. Box size should be taken from the membrane structure file. The corresponding topology
files should also be merged. Consecutively, create a tpr file (input for g_membed) from these files,with the following options included in the mdp file.
 - energygrp       = Protein (or other group that you want to insert)
 - energygrp_excl  = Protein Protein
The output is a structure file containing the protein embedded in the membrane. If a topology
file is provided, the number of lipid and 
solvent molecules will be updated to match the new structure file.
For a more extensive manual see Wolf et al, J Comp Chem 31 (2010) 2169-2174, Appendix.
1. The protein is resized around its center of mass by a factor -xy in the xy-plane
(the membrane plane) and a factor -z in the z-direction (if the size of the
protein in the z-direction is the same or smaller than the width of the membrane, a
-z value larger than 1 can prevent that the protein will be enveloped by the lipids).
2. All lipid and solvent molecules overlapping with the resized protein are removed. All
intraprotein interactions are turned off to prevent numerical issues for small values of -xy
4. The resize factor (-xy or -z) is incremented by a small amount ((1-xy)/nxy or (1-z)/nz) and the
protein is resized again around its center of mass. The resize factor for the xy-plane
is incremented first. The resize factor for the z-direction is not changed until the -xy factor
is 1 (thus after -nxy iteration).
5. Repeat step 3 and 4 until the protein reaches its original size (-nxy + -nz iterations).
For a more extensive method descrition see Wolf et al, J Comp Chem, 31 (2010) 2169-2174.
 - Protein can be any molecule you want to insert in the membrane.
 - It is recommended to perform a short equilibration run after the embedding
(see Wolf et al, J Comp Chem 31 (2010) 2169-2174, to re-equilibrate the membrane. Clearly
protein equilibration might require longer.
stateb->x
stateb->v
single
VERSION
precision
fver
tlist->index
ins_mtype
rest_mtype
ins_mtype->index
rest_mtype->index
rest_at->index
mol_id
pos_ins->geom_cent
rm_p->mol
rm_p->block
new_mols
mtop->mols.index
x_tmp
v_tmp
new_egrp[i]
state->x
state->v
groups->grpnr[i]
nmol_rm
NOTE: %s changes %s to %d
nstcalcenergy
nstlist
nstenergy
nstlog
nstdhdl
cbuf
enerd
ekind
ekind_save
f_global
xcopy
vcopy
Initial temperature: %g K
starting mdrun '%s'
%8.1f
infinite
%s steps, %s ps.
Started mdrun
GMX_FORCE_UPDATE
Constraint
Writing final coordinates.
Restarted time
inputrec
Getting Loaded...
ins_at
pos_ins
mem_p
pos_ins->nidx
pos_ins->subindex
piecename
Select pieces to embed:
rest_at
Too many warnings.
r_ins
rm_p
rm mol %d
Will remove %d %s molecules
Loaded with Money
nrnb
GMXGHAT
Error %d initializing PPPM
pmedata
Error %d initializing PME
Finished mdrun
into_mem
membedded
-xyinit
-xyend
-zinit
-zend
-pieces
-asymmetry
-ndiff
-maxwarn
HIDDENDD node order
-addpart
.part
%s%04d
Hess2008b
Spoel2005a
Lindahl2001a
Berendsen95a
SHORT MANUAL
------------
 - integrator      = md
 - freezegrps      = Protein
 - freezedim       = Y Y Y
SHORT METHOD DESCRIPTION
------------------------
 or -z
3. One md step is performed.
NOTE
----
?Calculating reciprocal error part 1 ...
Calculating reciprocal error part 1 ... %3.0f%%
Calculating reciprocal error part 2 ... %3.0f%%
g_pme_error estimates the error of the electrostatic forces
if using the SPME algorithm. The flag [TT]-tune[tt] will determine
the splitting parameter such that the error is equally
distributed over the real and reciprocal space part.
As a part of the error stems from self interaction of the particles and is computationally very demanding a good a approximation is possible
if just a fraction of the particles is used to calculate the average
of this error by using the flag [TT]-self[tt].[PAR]
If positive, overwrite ewald_beta from tpr file with this value
If flag is set the splitting parameter will be tuned to distribute the error equally in real and rec. space
If positive, determine selfinteraction error just over this fraction (default=1.0)
/builddir/build/BUILD/gromacs-4.5.1/src/tools/gmx_pme_error.c
PME requires rcoulomb (%f) to be equal to rlist (%f).
Box volume              : %g nm^3
Number of charged atoms : %d (total atoms %d)
Coulomb radius          : %g nm
Fourier grid (nx,ny,nz) : %d x %d x %d
Direct space error est. : %10.3e kJ/(mol*nm)
Reciprocal sp. err. est.: %10.3e kJ/(mol*nm)
difference between real and rec. space error (step %d): %g
=========  After tuning ========
Can only do optimizations for simulations with PME
-beta
-tune
-self
info->fac
info->fourier_sp
info->ewald_rtol
info->ewald_beta
info->pme_order
info->fn_out
info->e_dir
info->e_rec
--- PME ERROR ESTIMATE ---
(*x)
(*q)
Ewald_rtol              : %g
Ewald parameter beta    : %g
Interpolation order     : %d
Starting tuning ...
old beta: %f
new beta: %f
Wang2010
B@^8U)zj?
^8U)zj?@
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()-_=+{}|;:',<.>/?
libgmxana.so.6.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rel.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rel.plt
.got.plt
.got
.text
