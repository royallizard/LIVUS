__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
_Py_NoneStruct
PyInt_FromLong
PyString_FromString
PyList_New
PyMem_Malloc
PyString_FromStringAndSize
PyMem_Free
PyString_FromFormat
PyString_ConcatAndDel
PyErr_Occurred
PyNumber_Power
PyTuple_Type
PyType_IsSubtype
PyString_Type
PyExc_ValueError
PyErr_Format
PyDict_GetItem
PyCObject_AsVoidPtr
PyExc_TypeError
PyErr_SetString
PyErr_NoMemory
free
__sprintf_chk
__stack_chk_fail
PyGILState_Ensure
Py_BuildValue
PyObject_CallObject
PyGILState_Release
__snprintf_chk
PyExc_RuntimeWarning
PyErr_WarnEx
PyObject_CallMethod
PyExc_FloatingPointError
stderr
__fprintf_chk
PyExc_NameError
fetestexcept
feclearexcept
PyList_Type
PyInt_AsLong
PyCallable_Check
PyObject_GetAttrString
PyThreadState_GetDict
PyEval_GetBuiltins
PyString_InternFromString
PyExc_RuntimeError
memcpy
__memcpy_chk
malloc
memset
PyEval_SaveThread
memmove
PyEval_RestoreThread
PyArg_ParseTupleAndKeywords
PyExc_IndexError
PyErr_Clear
PyTuple_New
PyEval_CallObjectWithKeywords
PyTuple_Size
PyDict_Next
PyObject_HasAttrString
PyInt_Type
PyFloat_Type
PyComplex_Type
PyLong_Type
PyBool_Type
PyUnicode_Type
PyObject_CallFunction
PyErr_ExceptionMatches
PyObject_CallFunctionObjArgs
_Py_NotImplementedStruct
PySequence_Size
PySequence_GetItem
PyLong_FromLongLong
PyNumber_Add
PyCObject_FromVoidPtr
PyDict_SetItem
PyDict_New
PyObject_Init
PyArg_ParseTuple
PyImport_ImportModule
PyCObject_Type
initumath
Py_InitModule4_64
PyType_Ready
PyModule_GetDict
PyUFunc_API
PyExc_ImportError
PyDict_SetItemString
PyNumber_Absolute
PyNumber_And
PyNumber_Or
PyNumber_Xor
PyNumber_Divide
PyNumber_FloorDivide
PyNumber_Invert
PyNumber_Lshift
PyNumber_Multiply
PyNumber_Negative
PyNumber_Remainder
PyNumber_Rshift
PyNumber_Subtract
PyNumber_TrueDivide
PyFloat_FromDouble
PyModule_AddIntConstant
PyModule_AddStringConstant
PyModule_AddObject
PyDict_GetItemString
floorf
floor
floorl
fmodf
fmod
fmodl
hypotf
atan2f
logf
hypot
atan2
hypotl
atan2l
logl
rintf
rint
rintl
sqrtf
sqrt
sqrtl
PyObject_Compare
PyObject_RichCompareBool
modfl
modff
__isnanl
__isnan
__isnanf
__isinfl
__isinf
__isinff
__finite
feraiseexcept
PyObject_Cmp
ldexpl
ldexp
ldexpf
frexpl
frexp
frexpf
PyString_AsStringAndSize
powf
powl
acosf
acos
acosl
acoshf
acosh
acoshl
asinf
asin
asinl
asinhf
asinh
asinhl
atanf
atan
atanl
atanhf
atanh
atanhl
ceilf
ceil
ceill
expm1f
expm1
expm1l
fabsf
fabs
fabsl
log10f
log10
log10l
log1pf
log1p
log1pl
libm.so.6
libpython2.5.so.1.0
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
GLIBC_2.2.5
GLIBC_2.4
GLIBC_2.3.4
%zD"
%rD"
%jD"
%bD"
%ZD"
%RD"
%JD"
%BD"
%:D"
%2D"
%*D"
%"D"
%zC"
%rC"
%jC"
%bC"
%ZC"
%RC"
%JC"
%BC"
%:C"
%2C"
%*C"
%"C"
%zB"
%rB"
%jB"
%bB"
%ZB"
%RB"
%JB"
%BB"
%:B"
%2B"
%*B"
%"B"
%zA"
%rA"
%jA"
%bA"
%ZA"
%RA"
%JA"
%BA"
%:A"
%2A"
%*A"
%"A"
=b9"
~+E1
~(E1
~(E1
~(E1
~*E1
~*E1
~)E1
~)E1
~*E1
~*E1
~*E1
~*E1
~+E1
~+E1
~-E1
~-E1
~,E1
~,E1
~-E1
~-E1
~-E1
~-E1
~9E1
~;E1
~=E1
~<E1
~>E1
~@E1
t@fA
t0fA
CzGA
u=z;A
u-z+A
BzGfA
u>z<fA
u.z,fA
CzGA
u=z;
8t3L
8tML
5z>f
z6u4H
ATUSH
[]A\
ATUSH
[]A\
ATUSH
[]A\
~#E1
~#E1
~#E1
~#E1
~#E1
~#E1
AWAVAUATUSH
~2E1
L;l$
[]A\A]A^A_
AWAVAUATUSH
~.E1
L;l$
[]A\A]A^A_
AWAVAUATUSH
~.E1
L;l$
[]A\A]A^A_
AWAVAUATUSH
L$(L
D$0H
D$8~BE1
T$(L
d$0H
H[]A\A]A^A_
AWAVAUATUSH
D$ H
D$0E1
D$@H
D$PH
ZD$0L
ZD$8H
h[]A\A]A^A_
AWAVAUATUSH
D$ H
D$0E1
D$@H
D$PH
D$PI
D$XH
D$@H
D$0L
d$ H
l$(H
D$8H
h[]A\A]A^A_
AWAVAUATUSH
D$ H
D$(~yH
D$0E1
D$@H
D$PH
D$PA
D$0L
d$ H
h[]A\A]A^A_
AWAVAUATUSH
D$ H
D$0E1
D$PH
D$pH
T$xI
T$XH
T$hH
T$8L
d$ H
l$(H
T$HH
[]A\A]A^A_
l$ L
t$(L
|$0H
l$ L
t$(L
|$0H
l$ L
t$(L
|$0H
AVAUATUSH
([]A\A]A^A_
AVAUATUSH
D$ L
D$0H
ZD$ I
ZD$(
H[]A\A]A^A_
AUATUSH
D$ L
D$0H
D$ I
H[]A\A]A^A_
AUATUSH
D$ L
D$0H
D$0H
D$ I
D$(H
H[]A\A]A^A_
AUATUSH
D$ L
D$@H
T$HH
l$ I
h[]A\A]A^A_
o0SH
w@E1
t9Ic
[]A\A]A^
AWAVAUI
ATUSH
\$$H
D$(E
~1Lcd$ H
l$(1
\$ H
D$(E
>~;A
\$(Hcl$ E1
t$ H
L$0H
D$$9D$
8[]A\A]A^A_
l$ L
d$(L
l$0H
AUATUSH
<$E1
L9)~FI
[]A\A]A^A_
t$ H
L;=s
L;t$ M
,$t:H
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
AWAVM
HcD$$L9
\$$E1
;t$$u
|$$H
;L$$u
;D$$
[]A\A]A^A_
t$01
|$0H
t$0L
|$0H
@:48
t$$E
;|$$u
E Ic
d$$H
}@Ic
;L$$u
;D$$
T$$D
D$$E9
E9e0
E9e0
T$$H
G8dH
D$h1
T$hdH3
k H;-
\$ L
k H;-
\$ L
l$ H
t$ H
t$ H
l$ H
l$ H
AWAVAUATI
L$<D
HcT$<H
D$HH
|$HE1
T$(H
T$PI
L$PH
L$0H
t$0L
T$(H
D$\t1H
t$0E1
T$\;P
[]A\A]A^A_
L$\9H
|$81
;L$<t
U Hc
;L$Xu
L$@H
|$\H
H9D$@t
}@Hc
L$\E1
HcT$XI
D$(H
L$\H
D$(H
T$8H
L$\Hc
E89H
D$(H
L$(H
T$PH
AVAUATUSH
t$ H
t$ H
8[]A\A]A^A_
E8H9E0}
U(Hc
H9E8H
@8Hc@ H
E0H9E8
U(Hc
H9E8H
@8Hc@ H
[]A\A]A^A_
F0H;
F0H;
U(Hc
D$0H
D$0H9E8
E0H9E8
|$0L
D$ 1
HcU(H
T$0H
T$0H
HcE(H
H9E8H
@8Hc@ H
F0H;
D$ H
pPH9
U8H9U0
U(Hc
H9E8H
@8Hc@ H
F0H;
M8H9M0
H9E8H
HcU(H
@8Hc@ H
@8Hc@ H
A0H;
F0H;
U(Hc
H9E8
]8H9]0
D$0H
T$(H
HcU(H
t$0H
H9E8H
@8Hc@ H
@8Hc@ H
U8H9U0
\$8H
t$xH
D$pH
T$h1
~SHc
T$xH
t$pH
|$hH
HcU(H
H9\$8
H9E8H
@8Hc@ H
@8Hc@ H
M8H9M0
L$`H
\$XH
t$PH
D$HH
T$@D
HcU(H
T$XH
t$HH
|$PH
H9E8H
B0H;
A0H;
F0H;
A0H;
@8Hc@ H
@8Hc@ H
B0H;
A0H;
AWAVAUATUSH
L99H
[]A\A]A^A_
[]A\A]A^A_A
t$0H
D$ H
T$(H
l$ H
D$0H9D$
l$ H
\$8H
l$@L
d$HL
l$PL
t$XL
|$`H
\$8H
l$@L
d$HL
l$PL
t$XL
|$`H
AWAVAUATUSH
t$ H
L$(H
D$0H
|$(1
D$ H9D$
[]A\A]A^A_
[]A\A]A^A_A
AWAVAUATUH
t$8H
D$@H
A:A$u9
L$XH
D$@H
[]A\A]A^A_
L$@H
T$@H
t$@H
|$XH
t$@H
|$8H
d$0E1
t$8L
rPH9
\$@H
L$@H
T$@H
t$XH
|$PL
T$8H
t$@H
L$@H
T$@L
L$HH
t$(H
t$@L
L$@Hc
\$0J
D$(B
T$0H
L$0J
t$0J
L$0J
\$0I
t$(J
X89{
T$(B
D$0H
T$@H
T$0H
p(H9
L$8H
D$@L
L$0Lc
X89S
t$@Hc
T$@H
T$@H
\$@E1
T$8L
A8A:
D$@L
\$@H
\$0H
D$@H
T$@L
D$@H
\$@H
\$0H
t$@H
T$@1
x Hc
\$@H
~sE1
D$@N
L$@I
\$0H
@8Hc@ H
L$0H
D$(A
B8;x
t$@H
T$0H
L$(H
L$@H
L$@H
\$0H
t$0H
T$@H
T$0H
L$@H
D$dC
t$@H
D$@D
T$@H
HcT$h1
t$@D
t$0E1
D$@H
D$@H
t$@H
t$@H
T$@D
t$@D
D$@H
t$0H
T$@H
t$0H
L$@H
AWAVAUATUSH
|$pH
[]A\A]A^A_
D$pH
T$hH
\$`H
t$XH
D$PH
T$HH
\$8H
t$0H
D$ H
D$(H
t$pH
t$`H
\$PA
F H9F
t$pD
t$p1
t$pD
D$pA
@8Hc@ H
B0H;
t$ E1
D$@A
\$pA
t$xH
t$HH
T$pH
T$hH
D$pD
D$xH
D$pD
L$pA
\$ A
T$hNc
\$pH
\$8A
T$pD
L$pA
@8Hc@ H
B0H;
AWAVI
AUATUSH
t$0H
t$0H
T$0A
l$0E1
pPH9
H;=Q8!
5D8!
txH;=
H;=A8!
588!
HcD$D
|$PA
D$8H
L$ H
D$(H
\$8L
D;d$Dt]H
T$ H
.D$8
T$(H
P0D;d$Du
D;l$Lt>9l$HM
L$0Hc
D$0H
~/Hc
P0A9^
[]A\A]A^A_
T$0A
P0E1
l$ L
t$(L
|$0H
$Hcx
$u\I
t$ H
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
D$ H
D$@L
ED$HH
ED$PH
l$ L
t$(L
|$0H
5}_!
T$$H
t$ H
T$$E
H9P u
@[]A\
=q:!
5fP!
5,I!
=KP!
5~H!
5DH!
=cO!
=	O!
5n8!
54E!
=sM!
5@M!
=9*!
5XC!
=qL!
5*B!
=#(!
=i4!
56U!
5<A!
=uJ!
5"J!
5hT!
5.T!
=M3!
=3%!
5@S!
5fS!
5R=!
=KG!
5~1!
=)#!
=O#!
=u#!
52O!
=!#!
=G#!
5>K!
5TK!
=--!
5P4!
=IB!
=;!!
=!B!
=m !
5*G!
T$8f
T$0f
D$8f
D$0f
[]A\H
@[]A\
AWAVAUATUSH
[]A\A]A^A_
AWAVAUATUSH
~9E1
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
AWAVAUATUSH
~9E1
[]A\A]A^A_
AWAVAUATUSH
~=E1
[]A\A]A^A_
AWAVAUATUSH
~6E1
[]A\A]A^A_
AWAVAUATUSH
~=E1
[]A\A]A^A_
AWAVAUATUSH
~=E1
[]A\A]A^A_
AWAVAUATUSH
~<E1
[]A\A]A^A_
AWAVAUATUSH
~<E1
[]A\A]A^A_
AWAVAUATUSH
~4E1
[]A\A]A^A_
AWAVAUATUSH
~aE1
[]A\A]A^A_
AWAVAUATUSH
~4E1
[]A\A]A^A_
AWAVAUATUSH
~dE1
[]A\A]A^A_
AWAVAUATUSH
~3E1
([]A\A]A^A_
AWAVAUATUSH
~ZE1
([]A\A]A^A_
AWAVAUATUSH
T$ ~cE1
l$ A
([]A\A]A^A_
AWAVAUATUSH
T$ ~iE1
l$ I
([]A\A]A^A_
AWAVAUATUSH
D$ H
D$(~rE1
;tGL
d$ H
l$(L
H[]A\A]A^A_
l$ H
l$ H
l$ H
l$ H
l$ H
l$ H
l$ H
l$ H
|$ H
d$ D
\$8L
d$@L
l$HL
t$PH
|$ H
d$ D
l$(H
\$8L
d$@L
l$HL
t$PH
\$ L
d$(L
l$0H
\$ L
d$(L
l$0H
d$ H
d$ H
d$ H
u7z5
u0z.
\$0H
l$8L
d$@L
l$HL
t$PH
u{zyH
BcH=
L$ H
T$$L
l$ H1
d$ H
d$ H
u:z8f
u2z0H
\$0H
l$8L
d$@L
l$HL
t$PH
u#z!f
BcH=
L$ H
T$(L
l$ H1
\$(L
d$0L
t$@H
\$(L
d$0L
t$@H
uYzW
\$`H
l$hL
d$pL
l$xL
BcH=
t$ H
l$@I
|$@I
D$ H
D$(H
|$PH
D$0H
D$8u(H
uMzK
T$8H
l$0H
l$0H
l$ H
l$ H
l$ H
l$ H
l$0H
d$(f
W-KD
l$0H
\$ L
l$0H
\$ L
l$0H
\$ L
l$0H
\$ L
l$0H
|$ L
|$0L
l$ L
d$HL
l$PL
t$XL
\$@H
|$ L
|$0L
d$HL
l$PL
t$XL
\$@H
|$ L
l$ L
d$8L
l$@L
t$HL
\$0H
|$ L
l$ L
d$8L
l$@L
t$HL
\$0H
|$ L
l$ L
d$8L
l$@L
t$HL
\$0H
|$ L
d$8L
l$@L
t$HL
\$0H
zEuC
l$ H
zPuNf
l$ H
u4z2
u.z,
\$ L
d$(L
l$0H
AWAVAUATUSH
~*E1
[]A\A]A^A_
[]A\A]A^A_A
AWAVAUATUSH
~4E1
[]A\A]A^A_
AWAVAUATUSH
~4E1
[]A\A]A^A_
AWAVAUATUSH
~4E1
[]A\A]A^A_
AWAVAUATUSH
~1E1
[]A\A]A^A_
AWAVAUATUSH
~4E1
[]A\A]A^A_
AWAVAUATUSH
~4E1
[]A\A]A^A_
AWAVAUATUSH
D$ H
D$(~PH
D$0E1
d$ H
l$(H
T$8H
H[]A\A]A^A_
AWAVAUATUSH
D$ E1
D$ L
([]A\A]A^A_
AWAVAUATUSH
D$$E1
D$$L
([]A\A]A^A_
AWAVAUATUSH
~_E1
[]A\A]A^A_
AWAVAUATUSH
~+E1
[]A\A]A^A_
AWAVAUATUSH
~LE1
[]A\A]A^A_
AWAVAUATUSH
~!E1
[]A\A]A^A_
AWAVAUATUSH
~LE1
[]A\A]A^A_
AWAVAUATUSH
~!E1
[]A\A]A^A_
AWAVAUATUSH
([]A\A]A^A_
AWAVAUATUSH
~_E1
[]A\A]A^A_
AWAVAUATUSH
~TE1
([]A\A]A^A_
AWAVAUATUSH
~+E1
[]A\A]A^A_
AWAVAUATUSH
~LE1
[]A\A]A^A_
AWAVAUATUSH
~!E1
[]A\A]A^A_
AWAVAUATUSH
$t[H
[]A\A]A^A_
AWAVAUATUSH
~LE1
[]A\A]A^A_
AWAVAUATUSH
~WE1
[]A\A]A^A_
AWAVAUATUSH
~!E1
[]A\A]A^A_
AWAVAUATUSH
~LE1
[]A\A]A^A_
AWAVAUATUSH
~!E1
[]A\A]A^A_
AWAVAUATUSH
~RE1
[]A\A]A^A_
AWAVAUATUSH
~ZE1
[]A\A]A^A_
AWAVAUATUSH
~RE1
[]A\A]A^A_
AWAVAUATUSH
~ZE1
[]A\A]A^A_
AWAVAUATUSH
~LE1
[]A\A]A^A_
AWAVAUATUSH
~OE1
[]A\A]A^A_
AWAVAUATUSH
~PE1
[]A\A]A^A_
AWAVAUATUSH
~ZE1
[]A\A]A^A_
AWAVAUATUSH
~RE1
[]A\A]A^A_
AWAVAUATUSH
~ZE1
[]A\A]A^A_
AWAVAUATUSH
t$ H
~PE1
L;|$ I
$t4L
([]A\A]A^A_
AWAVAUATUSH
t$ H
~PE1
L;|$ I
$t4L
([]A\A]A^A_
AWAVAUATUSH
t$ H
~HE1
L;|$ A
$t.L
([]A\A]A^A_
AWAVAUATUSH
t$ H
~PE1
L;|$ fA
$t4L
([]A\A]A^A_
AWAVAUATUSH
t$ H
~PE1
L;|$ t/L
([]A\A]A^A_
AWAVAUATUSH
~nE1
[]A\A]A^A_
AWAVAUATUSH
~nE1
[]A\A]A^A_
AWAVAUATUSH
~`E1
[]A\A]A^A_
AWAVAUATUSH
~mE1
[]A\A]A^A_
AWAVAUATUSH
~jE1
[]A\A]A^A_
AWAVAUATUSH
~jE1
[]A\A]A^A_
AWAVAUATUSH
~RE1
[]A\A]A^A_
AWAVAUATUSH
~ZE1
[]A\A]A^A_
AWAVAUATUSH
~ZE1
[]A\A]A^A_
AWAVAUATUSH
~jE1
[]A\A]A^A_
AWAVAUATUSH
~RE1
[]A\A]A^A_
AWAVAUATUSH
~ZE1
[]A\A]A^A_
AWAVAUATUSH
~ZE1
[]A\A]A^A_
AWAVAUATUSH
~ZE1
[]A\A]A^A_
AWAVAUATUSH
~LE1
[]A\A]A^A_
AWAVAUATUSH
~ZE1
[]A\A]A^A_
AWAVAUATUSH
~OE1
[]A\A]A^A_
AWAVAUATUSH
~^E1
[]A\A]A^A_
AWAVAUATUSH
~NE1
[]A\A]A^A_
AWAVAUATUSH
~^E1
[]A\A]A^A_
AWAVAUATUSH
~ZE1
[]A\A]A^A_
AWAVAUATUSH
~]E1
[]A\A]A^A_
AWAVAUATUSH
~JE1
[]A\A]A^A_
AWAVAUATUSH
~]E1
[]A\A]A^A_
AWAVAUATUSH
~QE1
[]A\A]A^A_
l$ H
l$ H
AWAVAUATUSH
~;E1
([]A\A]A^A_
AWAVAUATUSH
~2E1
[]A\A]A^A_
AWAVAUATUSH
~2E1
[]A\A]A^A_
AWAVAUATUSH
D$ H
D$(~GH
D$<E1
D$<L
H[]A\A]A^A_
AWAVAUATUSH
D$$E1
([]A\A]A^A_
AWAVAUATUSH
D$$E1
([]A\A]A^A_
AWAVAUATUSH
~iE1
[]A\A]A^A_
AWAVAUATUSH
~lE1
[]A\A]A^A_
AWAVAUATUSH
~_E1
[]A\A]A^A_
AWAVAUATUSH
~iE1
[]A\A]A^A_
AWAVAUATUSH
~lE1
[]A\A]A^A_
AWAVAUATUSH
~]E1
[]A\A]A^A_
[]A\
[]A\
 (vectorH
izedf
[]A\
!	@iW
?%s1,%s2
,%s%d
%s = %s(%s) %s
(unknown)
<ufunc '%.50s'>
%s encountered in %s
write
divide by zero
overflow
underflow
invalid value
UFUNC_PYVALS
%s must be a length 3 list.
invalid error mask (%d)
wrong shape for output
reduce
function not supported
OO|iO&O&
O(O)i
cannot %s on a scalar
axis not in array
multiply
accumulate
index out-of-bounds (0, %d)
reduceat
__array_wrap__
invalid keyword
extobj
invalid number of arguments
__array_priority__
__radd__
subtract
__rsub__
__rmul__
__rdiv__
true_divide
__rtruediv__
floor_divide
__rfloordiv__
remainder
__rmod__
power
__rpow__
left_shift
__rrlshift__
right_shift
__rrshift__
bitwise_and
__rand__
bitwise_xor
__rxor__
bitwise_or
__ror__
__array__
invalid return array shape
return array is not writeable
O(OOi)
(OO)
unknown user-defined type
NULL
test
numpy.core.multiarray
_ARRAY_API
umath
_UFUNC_API
0.4.0
__version__
takes |x| elementwise.
absolute
inverse cosine elementwise.
arccos
arccosh
inverse sine elementwise.
arcsin
arcsinh
inverse tangent elementwise.
arctan
arctan2
arctanh
computes x1 & x2 elementwise.
computes x1 | x2 elementwise.
computes x1 ^ x2 elementwise.
ceil
conjugate
e**x elementwise.
e**x-1 elementwise.
expm1
absolute values.
fabs
floor
fmod
greater
greater_equal
hypot
invert
isfinite
isinf
isnan
less
less_equal
logarithm base e elementwise.
log10
log1p
logical_and
returns not x elementwise.
logical_not
returns x1 or x2 elementwise.
logical_or
logical_xor
maximum
minimum
modf
determines -x elementwise
negative
returns elementwise x1 |= x2
not_equal
ones_like
computes x1**x2 elementwise.
compute 1/x
reciprocal
rint
sign
signbit
hyperbolic sine elementwise.
sqrt
compute x**2.
square
frexp
Compute y = x1 * 2**x2.
ldexp
ERR_IGNORE
ERR_WARN
ERR_CALL
ERR_RAISE
ERR_PRINT
ERR_LOG
ERR_DEFAULT
ERR_DEFAULT2
SHIFT_DIVIDEBYZERO
SHIFT_OVERFLOW
SHIFT_UNDERFLOW
SHIFT_INVALID
FPE_DIVIDEBYZERO
FPE_OVERFLOW
FPE_UNDERFLOW
FPE_INVALID
FLOATING_POINT_SUPPORT
UFUNC_PYVALS_NAME
UFUNC_BUFSIZE_DEFAULT
PINF
NINF
PZERO
NZERO
conj
cannot load umath module.
function must be callable
__name__
numpy.ufunc
indices
axis
dtype
frompyfunc
seterrobj
geterrobj
outer
__doc__
documentation string
number of inputs
nout
number of outputs
nargs
ntypes
number of types
function name
identity
identity value
a type-tuple must be specified of length 1 or %d for %s
a type-string for %s, requires %d typecode(s) before and %d after the -> sign
user-defined type used in ufunc with no registered loops
python callback specified for %s (in  %s) but no function found.
Warning: %s encountered in %s
log specified for %s (in %s) but no object with write method found.
buffer size (%d) is not in range (%ld - %ld) or not a multiple of 16
python object must be callable or have a callable write method
zero-size array to ufunc.%s without identity
UFUNC_MAXIDENTITY (%d) is too small (needs to be at least %d)
%s only supported for binary functions
%s only supported for functions returning a single value
cannot perform %s with flexible type
'%s' is an invalid keyword to %s
return arrays must be of ArrayType
outer product only supported for binary functions
exactly two arguments expected
module compiled against version %x of C-API but this version of numpy is %x
umath failed: Could not import array core.
adds the arguments elementwise.
inverse hyperbolic cosine elementwise.
inverse hyperbolic sine elementwise.
a safe and correct arctan(x1/x2)
inverse hyperbolic tangent elementwise.
elementwise smallest integer >= x.
takes the conjugate of x elementwise.
divides the arguments elementwise.
returns elementwise x1 == x2 in a bool array
elementwise largest integer <= x
floor divides the arguments elementwise.
computes (C-like) x1 % x2 elementwise.
returns elementwise x1 > x2 in a bool array.
returns elementwise x1 >= x2 in a bool array.
sqrt(x1**2 + x2**2) elementwise
computes ~x (bit inversion) elementwise.
returns True where x is finite
returns True where x is +inf or -inf
returns True where x is Not-A-Number
computes x1 << x2 (x1 shifted to left by x2 bits) elementwise.
returns elementwise x1 < x2 in a bool array.
returns elementwise x1 <= x2 in a bool array
logarithm base 10 elementwise.
log(1+x) to base e elementwise.
returns x1 and x2 elementwise.
returns x1 xor x2 elementwise.
returns maximum (if x1 > x2: x1;  else: x2) elementwise.
returns minimum (if x1 < x2: x1;  else: x2) elementwise
breaks x into fractional (y1) and integral (y2) parts.
    Each output has the same sign as the input.
multiplies the arguments elementwise.
returns an array of ones of the shape and typecode of x.
computes x1-n*x2 where n is floor(x1 / x2)
computes x1 >> x2 (x1 shifted to right by x2 bits) elementwise.
round x elementwise to the nearest integer, round halfway cases away from zero
returns -1 if x < 0 and 0 if x==0 and 1 if x > 0
returns True where signbit of x is set (x<0).
square-root elementwise. For real x, the domain is restricted to x>=0.
subtracts the arguments elementwise.
true divides the arguments elementwise.
Split the number, x, into a normalized fraction (y1) and exponent (y2)
dynamic ufunc based on a python function
function not supported for these types, and can't coerce safely to supported types
Error object must be a list of length 3
return a list with types grouped input->output
loop written to specified type(s) not found
Optimized functions make it possible to implement arithmetic with arrays efficiently
frompyfunc(func, nin, nout) take an arbitrary python function that takes nin objects as input and returns nout objects and return a universal function (ufunc).  This ufunc always returns PyObject arrays
umath.so.debug
.shstrtab
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
