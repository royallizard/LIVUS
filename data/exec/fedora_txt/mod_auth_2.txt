__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
mod_auth_plugin_init
buffer_init_string
buffer_free
array_free
ldap_unbind_s
config_check_cond
buffer_is_equal_string
strncasecmp
strncmp
array_get_element
buffer_copy_string
buffer_append_string_buffer
buffer_append_string
response_header_insert
http_auth_digest_generate_nonce
strchr
log_error_write
http_auth_digest_check
__stack_chk_fail
http_auth_basic_check
buffer_copy_string_buffer
calloc
buffer_init
auth_ldap_init
ldap_set_option
ldap_simple_bind_s
ldap_err2string
buffer_copy_string_len
__errno_location
strerror
buffer_is_empty
ldap_start_tls_s
config_insert_values_global
data_array_init
data_string_init
array_insert_unique
CvtHex
int2hex
MD5_Init
MD5_Update
LI_ltostr
rand
MD5_Final
stream_open
memchr
stream_close
strlen
strcasecmp
get_http_method_name
hex2int
strcmp
inet_ntop_cache_get_ip
stderr
__fprintf_chk
abort
__ctype_b_loc
__strncpy_chk
crypt
ldap_search_s
ldap_first_entry
ldap_get_dn
ldap_msgfree
__strncat_chk
__strcat_chk
strncpy
buffer_prepare_copy
libcrypt.so.1
libldap-2.4.so.2
liblber-2.4.so.2
libc.so.6
_edata
__bss_start
_end
mod_auth.so
GLIBC_2.2.5
GLIBC_2.4
GLIBC_2.3
GLIBC_2.3.4
52R 
%4R 
%2R 
%*R 
%"R 
%zQ 
%rQ 
%jQ 
%bQ 
%ZQ 
%RQ 
%JQ 
%BQ 
%:Q 
%2Q 
%*Q 
%"Q 
%zP 
%rP 
%jP 
%bP 
%ZP 
%RP 
%JP 
%BP 
%:P 
%2P 
%*P 
%"P 
ATSubH
|$ H
|$ I
[]A\A]
AWAVAUI
ATUSH
D$81
PdfA
P`fA
PbfA
D$hA
t$8dH34%(
H[]A\A]A^A_
D$ I
D$dfA
D$0I
D$pI
D$xI
D$8I
D$PI
D$XI
D$`fA
D$bfA
ffff.
D$0H
l$ L
d$(L
l$0H
L$@H
D$HI
|$pH
|$xH
|$p1
D$X1
|$p1
AVAUATI
t$XH
5c< 
D$8H
T$XH
L$XH
t$`H
T$8H
|$`H9x
L;T$(vjH
T$(I
t$ H
L;T$(H
D$xH
T$xH
L$xH
t$xH
t$hH9p
|$hH
t$ H
[]A\A]A^A_
[]A\
\$`H
\$PH
|$PL
t$PH
l$hH
H+D$hH9D$@
T$xL
t$xL
L$PL
l$pH
l$(I
H+D$pH;D$0
T$XL
T$XH
D$8H
D$`H
D$XH+D$`H
|$`H
D$(H+D$`H
DD$HM)
D$HH
L+t$8L
t$8I
T$HH
t$`L
L$PH
AWAVI
ATUSH
D$ H
HcL$
[]A\A]A^A_
D$ L
([]A\A]A^A_
L$ L
T$ L
AVAUATUSH
\$@H
|$0H
t$(H
5Y, 
T$ M
D$PH
D$hH
t$@H
|$0L
dH3<%(
[]A\A]A^A_
t\Ic\$
|$ f
|$0L
|$0L
|$0L
|$0L
|$0L
|$0L
|$0L
|$0L
|$0L
t$ H
|$0M
|$ f
t$(H
|$0H
|$0L
|$0L
|$0L
t$ E1
D$ H
|$0L
|$0L
|$0L
AUATI
[]A\A]A^A_
t$`H
t$(L
t$`H
T$ A
d$0L
T$(H
t$ L
T$(H
t$ L
T$(H
$aprf
VUUUUUUUH
T$(H
t$ L
H+T$ H
ATUL
t$(H
D$0L
T$0I
D$ I
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
t$(L
T$(L
[]A\A]A^A_
[]A\A]A^A_
auth
auth.backend
auth.backend.plain.groupfile
auth.backend.plain.userfile
auth.require
auth.debug
auth.backend.ldap.hostname
auth.backend.ldap.base-dn
auth.backend.ldap.filter
auth.backend.ldap.ca-file
auth.backend.ldap.starttls
Authorization
method
Basic
basic
Digest
mod_auth.c
realm
Basic realm="
WWW-Authenticate
Digest realm="
", nonce="
", qop="auth"
ldap ...
ldap:
ldap startTLS failed:
htpasswd
htdigest
plain
ldap
auth.backend not supported:
the field is unknown in:
ssbs
" <- => "..." ) )
a string was expected for:
auth.backend.ldap.bind-dn
auth.backend.ldap.bind-pw
auth.backend.htdigest.userfile
auth.backend.htpasswd.userfile
auth.backend.ldap.allow-empty-pw
unknown authentification type:
ldap: auth.backend.ldap.filter is missing a replace-operator '$'
Loading CA certificate failed:
auth.require = ( "..." => ( ..., ...) )
auth.require should contain an array as in:
auth.require = ( "..." => ( ..., -> "
auth.require = ( "..." => ( ..., "method" => "..." ) )
the require field is missing in:
auth.require = ( "..." => ( ..., "method" => "...") )
method has to be either "basic" or "digest" in
auth.require = ( "..." => ( ..., "realm" => "..." ) )
auth.require = ( "..." => ( ..., "require" => "..." ) )
opening digest-userfile
sbss
http_auth.c
parsed error in
opening plain-userfile
valid-user
host
host ... (not implemented)
unknown key
group
group ... (not implemented)
unknown  key
nothing matched
username
algorigthm
cnonce
response
digest: missing field
md5-sess
%s.%d: aborted
auth-int
digest: digest mismatch
digest: auth failed for 
: wrong password, IP:
digest: rules did match
digest: auth ok
$apr1$
%s.%d
sssb
filter:
: is missing in
get_password failed
password doesn't match for 
sbbss
rules didn't match
username=
realm=
uri=
algorithm=
qop=
cnonce=
response=
expected 'username:realm:hashed password'
expected 'username:hashed password'
parsing the 'require' section in 'auth.require' failed: valid-user cannot be combined with other require rules
parsing the 'require' section in 'auth.require' failed: a = is missing
parsing the 'require' section in 'auth.require' failed: = out of range
digest: unsupported backend (only htdigest or plain)
digest: (md5-sess: missing field
ldap: invalid character (a-zA-Z0-9 allowed) in username:
decodeing base64-string failed
./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
mod_auth.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.bss
.gnu_debuglink
