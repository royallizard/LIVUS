CVE ID,Published,Description,Base Score
CVE-2009-3720,2009-11-03T16:30:12.563,"The updatePosition function in lib/xmltok_impl.c in libexpat in Expat 2.0.1, as used in Python, PyXML, w3c-libwww, and other software, allows context-dependent attackers to cause a denial of service (application crash) via an XML document with crafted UTF-8 sequences that trigger a buffer over-read, a different vulnerability than CVE-2009-2625.",V2: 5.0
CVE-2009-3560,2009-12-04T21:30:00.500,"The big2_toUtf8 function in lib/xmltok.c in libexpat in Expat 2.0.1, as used in the XML-Twig module for Perl, allows context-dependent attackers to cause a denial of service (application crash) via an XML document with malformed UTF-8 sequences that trigger a buffer over-read, related to the doProlog function in lib/xmlparse.c, a different vulnerability than CVE-2009-2625 and CVE-2009-3720.",V2: 5.0
CVE-2012-0876,2012-07-03T19:55:02.210,"The XML parser (xmlparse.c) in expat before 2.1.0 computes hash values without restricting the ability to trigger hash collisions predictably, which allows context-dependent attackers to cause a denial of service (CPU consumption) via an XML file with many identifiers with the same value.",V2: 4.3
CVE-2017-9233,2017-07-25T20:29:00.220,XML External Entity vulnerability in libexpat 2.2.0 and earlier (Expat XML Parser Library) allows attackers to put the parser in an infinite loop using a malformed external entity definition from an external DTD.,V3.1: 7.5
CVE-2017-11742,2017-07-30T14:29:00.207,"The writeRandomBytes_RtlGenRandom function in xmlparse.c in libexpat in Expat 2.2.1 and 2.2.2 on Windows allows local users to gain privileges via a Trojan horse ADVAPI32.DLL in the current working directory because of an untrusted search path, aka DLL hijacking.",V3.0: 7.8
CVE-2018-20843,2019-06-24T17:15:09.980,"In libexpat in Expat before 2.2.7, XML input including XML names that contain a large number of colons could make the XML parser consume a high amount of RAM and CPU resources while processing (enough to be usable for denial-of-service attacks).",V3.1: 7.5
CVE-2019-15903,2019-09-04T06:15:10.877,"In libexpat before 2.2.8, crafted XML input could fool the parser into changing from DTD parsing to document parsing too early; a consecutive call to XML_GetCurrentLineNumber (or XML_GetCurrentColumnNumber) then resulted in a heap-based buffer over-read.",V3.1: 7.5
CVE-2021-45960,2022-01-01T19:15:08.030,"In Expat (aka libexpat) before 2.4.3, a left shift by 29 (or more) places in the storeAtts function in xmlparse.c can lead to realloc misbehavior (e.g., allocating too few bytes, or only freeing memory).",V3.1: 8.8
CVE-2021-46143,2022-01-06T04:15:07.017,"In doProlog in xmlparse.c in Expat (aka libexpat) before 2.4.3, an integer overflow exists for m_groupSize.",V3.1: 7.8
CVE-2022-22822,2022-01-10T14:12:56.047,addBinding in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.,V3.1: 9.8
CVE-2022-22823,2022-01-10T14:12:56.270,build_model in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.,V3.1: 9.8
CVE-2022-22824,2022-01-10T14:12:56.567,defineAttribute in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.,V3.1: 9.8
CVE-2022-22825,2022-01-10T14:12:56.847,lookup in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.,V3.1: 8.8
CVE-2022-22826,2022-01-10T14:12:57.113,nextScaffoldPart in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.,V3.1: 8.8
CVE-2022-22827,2022-01-10T14:12:57.363,storeAtts in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.,V3.1: 8.8
CVE-2022-23852,2022-01-24T02:15:06.733,"Expat (aka libexpat) before 2.4.4 has a signed integer overflow in XML_GetBuffer, for configurations with a nonzero XML_CONTEXT_BYTES.",V3.1: 9.8
CVE-2022-23990,2022-01-26T19:15:08.517,Expat (aka libexpat) before 2.4.4 has an integer overflow in the doProlog function.,V3.1: 7.5
CVE-2022-25235,2022-02-16T01:15:07.607,"xmltok_impl.c in Expat (aka libexpat) before 2.4.5 lacks certain validation of encoding, such as checks for whether a UTF-8 character is valid in a certain context.",V3.1: 9.8
CVE-2022-25236,2022-02-16T01:15:07.650,xmlparse.c in Expat (aka libexpat) before 2.4.5 allows attackers to insert namespace-separator characters into namespace URIs.,V3.1: 9.8
CVE-2022-25313,2022-02-18T05:15:08.130,"In Expat (aka libexpat) before 2.4.5, an attacker can trigger stack exhaustion in build_model via a large nesting depth in the DTD element.",V3.1: 6.5
CVE-2022-25314,2022-02-18T05:15:08.187,"In Expat (aka libexpat) before 2.4.5, there is an integer overflow in copyString.",V3.1: 7.5
CVE-2022-25315,2022-02-18T05:15:08.237,"In Expat (aka libexpat) before 2.4.5, there is an integer overflow in storeRawNames.",V3.1: 9.8
CVE-2022-0217,2022-08-26T18:15:08.833,"It was discovered that an internal Prosody library to load XML based on libexpat does not properly restrict the XML features allowed in parsed XML data. Given suitable attacker input, this results in expansion of recursive entity references from DTDs (CWE-776). In addition, depending on the libexpat version used, it may also allow injections using XML External Entity References (CWE-611).",V3.1: 7.5
CVE-2022-40674,2022-09-14T11:15:54.020,libexpat before 2.4.9 has a use-after-free in the doContent function in xmlparse.c.,V3.1: 8.1
CVE-2022-43680,2022-10-24T14:15:53.323,"In libexpat through 2.4.9, there is a use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate in out-of-memory situations.",V3.1: 7.5
