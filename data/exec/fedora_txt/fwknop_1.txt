/lib64/ld-linux-x86-64.so.2
|fUa
libfko.so.2
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
fko_set_gpg_signer
fko_set_timestamp
fko_new
fko_set_spa_hmac_type
fko_set_spa_message
fko_get_rand_value
fko_spa_data_final
fko_key_gen
fko_destroy
fko_get_spa_data
fko_set_spa_encryption_mode
fko_get_spa_encryption_mode
fko_set_spa_encryption_type
fko_set_username
fko_set_gpg_exe
fko_set_spa_digest_type
fko_gpg_errstr
fko_set_spa_client_timeout
fko_base64_decode
fko_set_rand_value
fko_set_gpg_recipient
fko_new_with_data
fko_decrypt_spa_data
fko_get_version
fko_set_spa_nat_access
fko_errstr
fko_set_gpg_home_dir
fko_set_spa_message_type
fko_get_username
fko_get_timestamp
fko_get_spa_message_type
fko_get_spa_message
fko_get_spa_nat_access
fko_get_spa_server_auth
fko_get_spa_client_timeout
fko_get_spa_digest_type
fko_get_spa_hmac_type
fko_get_spa_encryption_type
fko_get_encoded_data
fko_get_spa_hmac
fko_get_spa_digest
libc.so.6
socket
exit
fopen
gai_strerror
inet_aton
optind
strrchr
perror
connect
inet_ntop
sigprocmask
__stack_chk_fail
unlink
stdin
popen
strtol
fgets
calloc
strlen
send
sigemptyset
getaddrinfo
memset
strstr
__errno_location
tcsetattr
memcmp
unsetenv
__fprintf_chk
sigaddset
stdout
fputc
recv
inet_addr
fputs
memcpy
fclose
__vsnprintf_chk
setsockopt
malloc
strcasecmp
remove
__ctype_b_loc
getenv
sscanf
optarg
stderr
__snprintf_chk
getuid
getopt_long
strncasecmp
fileno
pclose
fwrite
rename
__memcpy_chk
strchr
sendto
__vfprintf_chk
fdopen
tcgetattr
sleep
__cxa_finalize
freeaddrinfo
__xstat
memmove
ctermid
_IO_getc
setbuf
strcmp
__libc_start_main
random
snprintf
free
_edata
__bss_start
_end
GLIBC_2.3
GLIBC_2.14
GLIBC_2.4
GLIBC_2.3.4
GLIBC_2.2.5
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
AWAV
AUATA
|$pu,
L$Tj
Pj/1
L$Tj
L$dL
|$ E1
T$ H
l$(M
T$pH
]A\H
D$pH
D$01
t$ L
l$(F
|$ H
L$Tj
|$pH
L$Tj
L$Tj
l$(L
|$ 1
|$pI
|$pI
|$pI
\$TH
d$LPj
|$ 1
|$ L
D$X1
L$Tj
L$Tj
L$Tj
|$pI
L$Tj
l$(L
AQPM
|$(L
AZA[
D$tH
L$hH
T$dH
L$xL
|$(L
T$Pu	
D$TH
|$pL
|$pH
L$Xj
\$TH
D$TD
d$TA
D;d$Lu
L$Tj
<$Hc
|$pI
L$Tj
|$x1
D$\PL
AYAZ
L$Xj
L$Tj
d$LH
\$TL
L$Xj
|$pL
L$Tj
L$Xj
|$pH
L$Xj
T$LH
|$xI
\$TL
fffff.
fffff.
fffff.
pt	H
fff.
AVAUI
ATUI
pt3L
ATUH
D$(1
<Mt|<Ht
\$(dH3
0[]A\
AUATI
[]A\A]
AWAV
AUATI
l$PH
D$LH
D$0I
[]A\A]A^A_
T$ H
\$ H
|$ H
xLfA
T$ H
D$0H
L$LE
D$0H
D$LE
D$01
T$ H
D$0H
D$0H
T$ H
H+D$
H+D$
AUAT
[]A\A]
[]A\A]A^
AWAVI
AUAT
|$pL
d$XH
~9=	
tz~`=
L$`@
L$ L
L$` 
L$d@
[]A\A]A^A_
D$(H
D$`H
\$0L
\$0A
T$OL
L$0L
T$Ou
T$`L
t$(H
T$(H
T$8H
<;vZ1
AVAU1
ATUSH
D$H1
t$@D
L$HdH3
P[]A\A]A^
x+A9
fff.
AWAVI
AUATD
[]A\A]A^A_
AWAVI
AUATI
{(Ic
D$0Pf
D$ A
|$6f
D$$A
D$(9
[]A\A]A^A_
AWAVI
AUATI
D$ A
D$$A
[]A\A]A^A_
AWAVI
AUATI
D$ E
D$$A
D$,A
L$*f
D$0A
D$4A
D$5f
L$6H
T$"M
[]A\A]A^A_
AWAVH
AUAT
D$x1
T$DI
L$xdH3
[]A\A]A^A_
T$@L
T$@L
fff.
AWAVAUATI
[]A\A]A^A_
ATUH
ATUSI
[]A\A]
[]A\A]
AUAT
8/t|
[]A\A]
fff.
AWAVAUATL
[A\A]A^A_]
AVAU
ATUH
\$0L
[]A\A]A^
ATUI
[]A\
AWAVA
AUATUSH
twL9
[]A\A]A^A_
AWAVI
AUAT
\$0H
t$ H
D$0<=
dH34%(
[]A\A]A^A_
L$(I
T$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
AVAUE1
ATUI
]A\A]A^
[]A\A]A^
ffff.
fff.
ATUH
fff.
ATUH
ATUSI
[]A\A]
[]A\A]
ATUH
t,9X
[]A\
AWAVI
AUATA
thD9
[]A\A]A^A_
t_US
AWAV
AUATI
[]A\A]A^A_
t$ H
t$hH
t$(H
t$0H
t$8H
t$@H
t$HH
t$PH
t$XH
t$`H
L$ A
L$hH
L$(A
L$0A
L$8A
L$@A
L$`H
AWAVA
AUATL
[]A\A]A^A_
fwknop
%s: %s: Error %i - %s
HOME
%s%c%s
.fwknop.run
Could not open args file: %s
Executing: %s
fko_new
2.6.3
fko_set_spa_client_timeout
fko_set_spa_message_type
fko_set_timestamp
%s%s%s
none/0
fko_set_spa_message
%s,%d
%u.%u.%u.%u,%u
fko_set_nat_access_str
fko_set_username
GPG_AGENT_INFO
fko_set_spa_encryption_type
fko_set_gpg_exe
fko_set_gpg_home_dir
fko_set_gpg_recipient
GPG ERR: %s
fko_set_gpg_signer
fko_set_spa_encryption_mode
fko_set_spa_digest_type
[*] getpasswd() key error.
Enter encryption key: 
Enter HMAC key: 
fko_set_spa_hmac_type
fwknopd is recommended.
fko_spa_data_final
fko_get_spa_data
fko_get_spa_encryption_mode
fko_new_with_data
fko_decrypt_spa_data
GPG ERR: %s
Dump of the Decoded Data
get_rand_port(), fko_get_rand_value
[*] get_rand_port(), could not convert rand_val str '%s', to integer
[*] Could not zero out sensitive data buffer.
[*] calloc failure for cmd line arg.
[*] max command line args exceeded.
Last fwknop client command line: %s
Could not read line from file: %s
argument string too long, exiting.
warning, did not write expected number of bytes to args save file
fwknop client %s, FKO protocol version %s
[*] Expecting <proto>/<port> for -A arg.
[*] NAT for multiple ports/protocols not yet supported.
[*] Invalid port value '%d' for -A arg.
[*] Unable to resolve %s as an ip address
[+] Randomly assigned port '%d' on: '%s' will grant access to: '%s'
[*] Invalid key length: '%d', must be in [1,%d]
[+] GPG mode set, signing passphrase acquired via gpg-agent
[+] GPG mode set, signing passphrase not required
Enter passphrase for signing: 
[*] Invalid decoded key length: '%d', must be in [0,%d]
[*] Invalid HMAC key length: '%d', must be in [0,%d]
[*] The encryption passphrase and HMAC key should not be identical, no SPA packet sent. Exiting.
WARNING: Encryption key in '-M legacy' mode must be <= 16 bytes
long - truncating before sending SPA packet. Upgrading remote
Unable to dump FKO context: %s
send_spa_packet: packet not sent.
send_spa_packet: bytes sent: %i
No access to recipient private key?
Unable to determine args save file
.fwknoprc
%s %[^ ;	
*Invalid entry in '%s'
0.0.0.0
resolve
%-24s    %s
www.cipherdyne.org
default
Unrecognized protocol: %s
Invalid time offset: '%s'
Invalid spoof IP
Fwknop/
.updated
[%s]
allow-ip
save-packet-append
save-packet
save-rc-stanza
force-stanza
stanza-list
no-save-args
server-cmd
destination
save-args-file
encryption-mode
fw-timeout
fault-injection-tag
gpg-encryption
gpg-recipient-key
gpg-signer-key
gpg-home-dir
gpg-exe
gpg-agent
gpg-no-signing-pw
get-key
get-hmac-key
help
http-proxy
key-gen
key-gen-file
key-rijndael
key-base64-rijndael
key-base64-hmac
key-hmac
hmac-key-len
hmac-digest-type
icmp-type
icmp-code
last-cmd
nat-access
named-config
nat-local
nat-port
nat-rand-port
server-port
server-proto
spoof-source
spoof-src
rc-file
resolve-ip-http
resolve-ip-https
resolve-http-only
show-last
source-ip
source-port
stdin
test
time-offset-plus
time-offset-minus
user-agent
use-hmac
spoof-user
verbose
version
wget-cmd
Warning: Unable to determine HOME directory.
 No .fwknoprc file processed.
Warning: Path to .fwknoprc file is too long.
 No .fwknoprc file processed.
[*] Creating initial rc file: %s.
Unable to create initial rc file: %s: %s
Unable to write default setup to rcfile: %s: %s
# .fwknoprc
##############################################################################
# Firewall Knock Operator (fwknop) client rc file.
# This file contains user-specific fwknop client configuration default
# and named parameter sets for specific invocations of the fwknop client.
# Each section (or stanza) is identified and started by a line in this
# file that contains a single identifier surrounded by square brackets.
# It is this identifier (or name) that is used from the fwknop command line
# via the '-n <name>' argument to reference the corresponding stanza.
# The parameters within the stanza typically match corresponding client 
# command-line parameters.
# The first one should always be `[default]' as it defines the global
# default settings for the user. These override the program defaults
# for these parameters.  If a named stanza is used, its entries will
# override any of the default values.  Command-line options will trump them
# all.
# Subsequent stanzas will have only the overriding and destination
# specific parameters.
# Lines starting with `#' and empty lines are ignored.
# See the fwknop.8 man page for a complete list of valid parameters
# and their values.
##############################################################################
# We start with the 'default' stanza.  Uncomment and edit for your
# preferences.  The client will use its built-in default for those items
# that are commented out.
[default]
#DIGEST_TYPE         sha256
#FW_TIMEOUT          30
#SPA_SERVER_PORT     62201
#SPA_SERVER_PROTO    udp
#ALLOW_IP            <ip addr>
#SPOOF_USER          <username>
#SPOOF_SOURCE_IP     <IPaddr>
#TIME_OFFSET         0
#USE_GPG             N
#GPG_HOMEDIR         /path/to/.gnupg
#GPG_EXE             /path/to/gpg
#GPG_SIGNER          <signer ID>
#GPG_RECIPIENT       <recipient ID>
# User-provided named stanzas:
# Example for a destination server of 192.168.1.20 to open access to
# SSH for an IP that is resolved externally, and one with a NAT request
# for a specific source IP that maps port 8088 on the server
# to port 88 on 192.168.1.55 with timeout.
#[myssh]
#SPA_SERVER          192.168.1.20
#ACCESS              tcp/22
#ALLOW_IP            resolve
#[mynatreq]
#SPA_SERVER          192.168.1.20
#ACCESS              tcp/8088
#ALLOW_IP            10.21.2.6
#NAT_ACCESS          192.168.1.55,88
#CLIENT_TIMEOUT      60
Unable to open rc file: %s: %s
process_rc_section() : Parsing section '%s' ...
parse_rc_param() : Parsing variable %s...
KEY_BASE64 argument '%s' doesn't look like base64-encoded data.
GPG_SIGNING_KEY_BASE64 argument '%s' doesn't look like base64-encoded data.
HMAC_DIGEST_TYPE argument '%s' must be one of {md5,sha1,sha256,sha384,sha512}
HMAC_KEY_BASE64 argument '%s' doesn't look like base64-encoded data.
Memory allocation error for resolve URL.
Memory allocation error for wget command path.
Parameter error in %s, line %i: var=%s, val=%s
TIME_OFFSET argument '%s' invalid.
Warning from add_single_var_to_rc() : Bad variable position %u
add_single_var_to_rc() : Updating param (%u) %s to %s
bitmask_has_var_ndx() : Bad variable position %u
Single Packet Authorization client
%s client version %s
%s - http://%s/fwknop/
Usage: fwknop -A <port list> [-s|-R|-a] -D <spa_server> [options]
 -n, --named-config          Specify a named configuration stanza in the
                             '$HOME/.fwknoprc' file to provide some of all
                             of the configuration parameters.
                             If more arguments are set through the command
                             line, the configuration is updated accordingly
 -A, --access                Provide a list of ports/protocols to open
                             on the server (e.g. 'tcp/22').
 -a, --allow-ip              Specify IP address to allow within the SPA
                             packet (e.g. '123.2.3.4').  If 
 -D, --destination           Specify the hostname or IP address of the
                             fwknop server.
 --use-hmac                  Add an HMAC to the outbound SPA packet for
                             authenticated encryption.
 -h, --help                  Print this usage message and exit.
 -B, --save-packet           Save the generated packet data to the
                             specified file.
 -b, --save-packet-append    Append the generated packet data to the
                             file specified with the -B option.
 -C, --server-cmd            Specify a command that the fwknop server will
                             execute on behalf of the fwknop client..
 -N, --nat-access            Gain NAT access to an internal service.
 -p, --server-port           Set the destination port for outgoing SPA
                             packet.
 -P, --server-proto          Set the protocol (udp, tcp, http, tcpraw,
                             icmp) for the outgoing SPA packet.
                             Note: The 'tcpraw' and 'icmp' modes use raw
                             sockets and thus require root access to use.
 -s, --source-ip             Tell the fwknopd server to accept whatever
                             source IP the SPA packet has as the IP that
                             needs access (not recommended, and the
                             fwknopd server can ignore such requests).
 -S, --source-port           Set the source port for outgoing SPA packet.
 -Q, --spoof-source          Set the source IP for outgoing SPA packet.
 -R, --resolve-ip-https      Resolve the external network IP by
                             connecting to a URL such as the default of:
                             https://www.cipherdyne.org/cgi-bin/myip
                             with wget in --secure-protocol mode (SSL).
                             The URL can be overridden with the
                             --resolve-url option.
     --resolve-http-only     Force external IP resolution via HTTP instead
                             HTTPS (via the URL mentioned above). This is
                             not recommended since it would open fwknop
                             to potential MITM attacks if the IP resolution
                             HTTP connection is altered en-route by a third
                             party.
     --resolve-url           Override the default URL used for resolving
                             the source IP address.
 -u, --user-agent            Set the HTTP User-Agent for resolving the
                             external IP via -R, or for sending SPA
                             packets over HTTP.
 -H, --http-proxy            Specify an HTTP proxy host through which the
                             SPA packet will be sent.  The port can also be
                             specified here by following the host/ip with
                             ":<port>".
 -U, --spoof-user            Set the username within outgoing SPA packet.
 -l, --last-cmd              Run the fwknop client with the same command
                             line args as the last time it was executed
                             (args are read from the ~/.fwknop.run file).
 -G, --get-key               Load an encryption key/password from a file.
     --stdin                 Read the encryption key/password from stdin
     --fd                    Specify the file descriptor to read the
                             encryption key/password from.
 -k, --key-gen               Generate SPA Rijndael + HMAC keys.
 -K, --key-gen-file          Write generated Rijndael + HMAC keys to a
                             file
     --key-rijndael          Specify the Rijndael key. Since the password is
                             visible to utilities (like 'ps' under Unix) this
                             form should only be used where security is not
                             important.
     --key-base64-rijndael   Specify the base64 encoded Rijndael key. Since
                             the password is visible to utilities (like 'ps'
                             under Unix) this form should only be used where
                             security is not important.
     --key-base64-hmac       Specify the base64 encoded HMAC key. Since the
                             password is visible to utilities (like 'ps'
                             under Unix) this form should only be used where
                             security is not important.
 -r, --rand-port             Send the SPA packet over a randomly assigned
                             port (requires a broader pcap filter on the
                             server side than the default of udp 62201).
 -T, --test                  Build the SPA packet but do not send it over
                             the network.
 -v, --verbose               Set verbose mode (may specify multiple times).
 -V, --version               Print version number.
 -m, --digest-type           Specify the message digest algorithm to use.
                             (md5, sha1, sha256, sha384, or sha512). The
                             default is sha256.
 -M, --encryption-mode       Specify the encryption mode when AES is used
                             for encrypting SPA packets.The default is CBC
                             mode, but others can be chosen such as CFB or
                             OFB as long as this is also specified in the
                             access.conf file on the server side. Note that
                             the string ``legacy'' can be specified in order
                             to generate SPA packets with the old initialization
                             vector strategy used by versions of *fwknop*
                             before 2.5.
 -f, --fw-timeout            Specify SPA server firewall timeout from the
                             client side.
     --hmac-digest-type      Set the HMAC digest algorithm (default is
                             sha256). Options are md5, sha1, sha256,
                             sha384, or sha512.
     --icmp-type             Set the ICMP type (used with '-P icmp')
     --icmp-code             Set the ICMP code (used with '-P icmp')
     --gpg-encryption        Use GPG encryption (default is Rijndael).
     --gpg-recipient-key     Specify the recipient GPG key name or ID.
     --gpg-signer-key        Specify the signer's GPG key name or ID.
     --gpg-home-dir          Specify the GPG home directory.
     --gpg-agent             Use GPG agent if available.
     --gpg-exe               Set path to GPG binary.
     --no-save-args          Do not save fwknop command line args to the
                             $HOME/fwknop.run file
     --rc-file               Specify path to the fwknop rc file (default
                             is $HOME/.fwknoprc)
     --save-rc-stanza        Save command line arguments to the
                             $HOME/.fwknoprc stanza specified with the
                             -n option.
     --force-stanza          Used with --save-rc-stanza to overwrite all of
                             the variables for the specified stanza
     --stanza-list           Dump a list of the stanzas found in
                             $HOME/.fwknoprc
     --nat-local             Access a local service via a forwarded port
                             on the fwknopd server system.
     --nat-port              Specify the port to forward to access a
                             service via NAT.
     --nat-rand-port         Have the fwknop client assign a random port
                             for NAT access.
     --show-last             Show the last fwknop command line arguments.
     --time-offset-plus      Add time to outgoing SPA packet timestamp.
     --time-offset-minus     Subtract time from outgoing SPA packet
                             timestamp.
a:A:bB:C:D:E:f:gG:hH:kK:lm:M:n:N:p:P:Q:rRsS:Tu:U:vVw:
The following stanzas are configured in %s :
--fw-timeout must be within [%d-%d]
fwknop not compiled with fault injection support.
Base64 encoded Rijndael argument '%s' doesn't look like base64-encoded data.
Base64 encoded HMAC argument '%s' doesn't look like base64-encoded data.
Invalid key length '%s', must be in [%d-%d]
* Invalid hmac digest type: %s, use {md5,sha1,sha256,sha384,sha512}
Invalid hmac key length '%s', must be in [%d-%d]
Invalid icmp type '%s', must be in [%d-%d]
Invalid icmp code '%s', must be in [%d-%d]
* Invalid digest type: %s, use {md5,sha1,sha256,sha384,sha512}
* Invalid encryption mode: %s, use {CBC,CTR,legacy,Asymmetric}
Named configuration stanza: [%s] was not found.
Must use --destination unless --test mode is used
Must use one of [-s|-R|-a] to specify IP for SPA access.
[-] WARNING: Should use -a or -R to harden SPA against potential MITM attacks
Invalid allow IP specified for SPA access
Must set -P <udpraw|tcpraw|icmp> with a spoofed source IP
Cannot set --http-proxy with a non-HTTP protocol.
Must specify --gpg-recipient-key when GPG is used.
Must specify GPG recipient/signing keys when Asymmetric encryption mode is used.
Legacy encryption mode is incompatible with HMAC usage.
%s: fko_key_gen: Error %i - %s
update_rc() : Unable to create temporary rc file: %s: %s
update_rc() : Unable to open rc file: %s: %s
update_rc() : Updating %s stanza
remove_from_bitmask() : Bad variable position %u
update_rc() : Inserting new %s stanza
update_rc() : Unable to remove %s to %s : %s
update_rc() : Unable to rename %s to %s
Unable to create key gen file: %s: %s
KEY_BASE64: %s
HMAC_KEY_BASE64: %s
[+] Wrote Rijndael and HMAC keys to: %s
[+] Wrote Rijndael and HMAC keys to rc file: %s
KEY_BASE64: %s
HMAC_KEY_BASE64: %s
Variable '%s' found in stanza '%s'. Overwrite [N/y] ? 
test mode enabled, SPA packet not actually sent.
send_spa_packet_tcp_or_udp: Could not create socket: 
send_spa_packet_tcp_or_udp: write error: 
[#] Warning: bytes sent (%i) not spa data length (%i).
[*] Fatal, could not allocate memory.
GET /%s HTTP/1.0
User-Agent: %s
Accept: */*
Host: %s
Connection: close
[-] proxy port value is invalid, must be in [%d-%d]
GET http://%s/%s HTTP/1.0
User-Agent: %s
Accept: */*
Host: %s
Connection: close
Test mode enabled, SPA packet not actually sent.
send_spa_packet_tcp_raw: create socket: 
send_spa_packet_tcp_raw: setsockopt HDRINCL: 
send_spa_packet_tcp_raw: sendto error: 
send_spa_packet_udp_raw: create socket: 
send_spa_packet_udp_raw: setsockopt HDRINCL: 
send_spa_packet_udp_raw: sendto error: 
send_spa_packet_icmp: create socket: 
send_spa_packet_icmp: setsockopt HDRINCL: 
send_spa_packet_icmp: sendto error: 
send_spa_packet: Error #%i from fko_get_spa_data: %s
         source port: <OS assigned>
%i is not a valid or supported protocol.
write_spa_packet_data: Error #%i from fko_get_spa_data: %s
error in getaddrinfo: %s
http://
Generating SPA packet:
            protocol: %s
         source port: %d
    destination port: %d
             IP/host: %s
Could not set source IP.
<NULL>
write_spa_packet_data: 
[-] file: %s is not a regular file or symbolic link.
[-] file: %s permissions should only be user read/write (0600, -rw-------)
[-] file: %s not owned by current effective user id
[-] stat() against file: %s returned: %s
resolve_dest_adr() : inet_ntop (%d) - %s
resolve_dest_adr() : %s
https://
HTTP request: %s
HTTP response: %s
%u.%u.%u.%u
Error parsing resolve-url
[*] Could not run cmd: %s
/cgi-bin/myip
www.cipherdyne.com
[*] resolve-url port value is invalid, must be in [%d-%d]
resolve-url hostname portion is too large.
resolve-url path portion is too large.
GET %s HTTP/1.0
User-Agent: %s
Accept: */*
Host: %s
Connection: close
resolve_ip_http: Could not create socket: 
resolve_ip_http: write error: 
Did not find the end of HTTP header.
[+] Resolved external IP (via http://%s%s) as: %s
[-] From http://%s%s
    Invalid IP (%s) in HTTP response:
 --secure-protocol=auto --quiet -O - 
[*] Use --wget-cmd <path> to specify path to the wget command.
[-] Warning: IP resolution URL '%s' should begin with 'https://' in -R mode.
https://www.cipherdyne.org/cgi-bin/myip
[+] Resolved external IP (via '%s') as: %s
[-] Could not resolve IP via: '%s'
[*] https is not supported for --resolve-http-only.
getpasswd() - Unable to create a stream from the file descriptor : %s
Could not open config file: %s
Could not get key for IP: %s from: %s
sha1
sha256
sha384
sha512
SHA1
SHA256
SHA384
SHA512
Unknown
Unknown encryption type
Rijndael
Command msg
Access msg
Client timeout access msg
Client timeout NAT access msg
Local NAT access msg
Unknown message type
strtol
None
   Random Value: %s
       Username: %s
      Timestamp: %u
    FKO Version: %s
   Message Type: %i (%s)
 Message String: %s
     Nat Access: %s
    Server Auth: %s
 Client Timeout: %u
    Digest Type: %u (%s)
      HMAC Type: %u (%s)
Encryption Type: %d (%s)
Encryption Mode: %d (%s)
   Encoded Data: %s
SPA Data Digest: %s
           HMAC: %s
 Final SPA Data: %s
Client timeout local NAT access msg
[*] Value %d out of range [(%d)-(%d)]
SPA Field Values:
=================
;*3$"
DIGEST_TYPE
SPA_SERVER_PROTO
SPA_SERVER_PORT
SPA_SOURCE_PORT
FW_TIMEOUT
ALLOW_IP
TIME_OFFSET
ENCRYPTION_MODE
USE_GPG
USE_GPG_AGENT
GPG_RECIPIENT
GPG_SIGNER
GPG_HOMEDIR
GPG_EXE
GPG_SIGNING_PW
GPG_SIGNING_PW_BASE64
GPG_NO_SIGNING_PW
SPOOF_USER
SPOOF_SOURCE_IP
ACCESS
SPA_SERVER
RAND_PORT
KEY_BASE64
HMAC_DIGEST_TYPE
HMAC_KEY_BASE64
HMAC_KEY
USE_HMAC
KEY_FILE
HMAC_KEY_FILE
NAT_ACCESS
HTTP_USER_AGENT
RESOLVE_URL
NAT_LOCAL
NAT_RAND_PORT
NAT_PORT
VERBOSE
RESOLVE_IP_HTTP
RESOLVE_IP_HTTPS
RESOLVE_HTTP_ONLY
WGET_CMD
udpraw
tcpraw
icmp
http
PCBC
Asymmetric
legacy
fwknop.debug
7zXZ
=}d1
@ZB_
)v7>
x6}v_
BPOX3
Ihn_0'7D
"{6O~I
Z5:+
G[u+
36&(
IDqXgI"
"X?!
nrAz
5GQ[
z|\:n
E"S 
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
