/lib64/ld-linux-x86-64.so.2
libm.so.6
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
sqrtf
sqrt
libpthread.so.0
write
open64
read
__errno_location
accept
fcntl
sigaction
fork
libc.so.6
setuid
chroot
socket
__printf_chk
fopen
optind
strrchr
__strdup
perror
getpwuid
__fdelt_chk
initgroups
getgrgid
signal
strncpy
puts
__stack_chk_fail
unlink
putchar
listen
select
realloc
_exit
getpid
kill
chmod
__assert_fail
flock
strtol
cfsetispeed
fgetc
fgets
getpwnam
calloc
strlen
setlogmask
sigemptyset
openlog
memset
tcsetattr
bind
chdir
__syslog_chk
getopt
__fprintf_chk
fclose
__vsnprintf_chk
malloc
umask
strcasecmp
__xstat64
__ctype_b_loc
getenv
sscanf
optarg
stderr
ioctl
__snprintf_chk
seteuid
getuid
strncasecmp
usleep
gettimeofday
geteuid
tcflush
difftime
strchr
tcgetattr
__cxa_finalize
setsid
cfsetospeed
setgid
strcmp
strerror
__libc_start_main
snprintf
free
__cxa_atexit
_edata
__bss_start
_end
GLIBC_2.2.5
GLIBC_2.3
GLIBC_2.15
GLIBC_2.4
GLIBC_2.3.4
AWAVAUATA
D+ E
d$ L
fffff.
fffff.
fffff.
D$H1
D$HdH3
ffff.
ffffff.
D$ V
D$$Q
D$(L
D$4q
D$8j
D$<d
D$@j
D$Dj
D$Hj
D$Lm
D$Pm
D$Tg
D$Xa
D$ds
D$hk
D$lg
D$pk
D$tk
D$xk
D$|n
fffff.
AUAT
[]A\A]
[]A\A]
[]A\A]
AUATH
D3(H
T3 H
t30H
AYAZ
L3PH
T3LL
L3XL
D3TH
|3lL
D3dH
L3`H
T3\L
L3hH
L3tH
T3pL
L3|L
D3xH
P0RD
ZK|H
[]A\A]
[]A\A]
[]A\A]
fff.
fff.
[]A\
[]A\
ffffff.
ffffff.
AVAUA
ATUI
k([]A\A]A^
ATUI
[]A\
\$ L
dH3<%(
ATUSH
\$ L
[]A\
ATUH
[]A\
AUATI
l$pL
SATI
[]A\A]
l$xAT
AWAV
AUATUS
|$0H
t$8dH
t+Hc
|$P1
T$8H
L$XH
D$0H9
T$8H
T$PH9
D$01
Ic?I
L;d$
H)L$8
t/Hc
[]A\A]A^A_
|$ H
|$ H
t$(H
|$ H
M;w(r
L;d$
t$`H
D$Ln
|$(H
ATUI
\$ L
[]A\
ATUI
\$ L
[]A\
AUAT
[]A\A]
[]A\A]
fff.
ATUH
[]A\
t19X4t
fffff.
[]A\
[]A\
AUAT
[]A\A]
[]A\A]
fff.
ffffff.
ATUS
[]A\H
L$ H
AUATA
D$H1
L$HdH3
X[]A\A]
ffffff.
ffffff.
fff.
fff.
fff.
AWAVAUATUSH
4>L)
[]A\A]A^A_
[]A\A]A^A_
ATUI
dH34%(
[]A\
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
ffff.
AUATA
[]A\A]
AWAVI
AUATM
tOE1
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
|$,H
L$+H
D$x1
D$01
D$ L
t$0@:t$+
tPH9
@:t$+tkH
L$xdH3
[]A\A]A^A_
AWAVI
AUATA
USE1
([]A\A]A^A_
l$ L
?/t`H
ffffff.
AUATI
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
L$ H)
[]A\A]
ATUI
<$H9
[]A\
fff.
ffff.
ffff.
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
ATUSH
[]A\
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
ffff.
AUATA
[]A\A]
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
AWAVL
AUATI
D$p1
ZY~kA
D$hdH3
x[]A\A]A^A_
AUATA
98}*H
[]A\A]
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
ffff.
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
ffff.
ffff.
ffff.
t!@8
fff.
AWAVM
AUATI
dH34%(
[]A\A]A^A_
ffff.
AWAVM
AUATI
[]A\A]A^A_
t#SH
fffff.
[]A\
fffff.
AUATI
[]A\A]
[]A\A]
AUATI
[]A\A]
[]A\A]
fff.
ATUI
[]A\
t#SH
t#SH
ATUI
fffff.
AUATI
\$8H
[]A\A]
fff.
tQ;.t
t:;(t	H
[]A\
ATUI
9C4t
[]A\
fff.
fff.
fff.
fff.
AUATI
[]A\A]
[]A\A]
ATUH
[]A\
fffff.
AWAVAUATUSH
L$HH
[]A\A]A^A_
l$ L
?[tE
=Ys 
=!s 
L$PH
Invalid H
ctx buff
ATUSL
_wOH
[]A\
[]A\
[]A\H
AVAUATUSH
H;w(H
[]A\A]A^
[]A\A]A^
fffff.
ATUS
[]A\
[]A\
[]A\
[]A\
[]A\
#tVA
UnbalancH
nescaped
GxotesH
ed word H
due to u
 # in qu
ffffff.
C0t!H
fffff.
tSUSH
ffff.
H;C(H
C0H9C8t
ffff.
ATUH
[]A\
E0H9E8t
ffff.
AWAVI
AUATI
[]A\A]A^A_
/\L9
AWAVA
AUATL
[]A\A]A^A_
Flow control disable
DTR => 0, RTS => 1
OPTI
Shutdown (return) initiated.
writing error
Raw data from UPS:
%2d 0x%02x (%c)
test.battery.start
shutdown.return
shutdown.stayoff
Shutdown (stayoff) initiated.
instcmd: unknown command [%s]
%02.2f
input.frequency
input.frequency: %s
output.frequency
output.frequency: %s
%03.1f
ups.load
ups.load: %s
battery.charge
battery.charge: %s
input.voltage
input.voltage: %s
output.voltage
output.voltage: %s
BOOST
TRIM
OVER
TEST
ups.status
STATUS: %s
manufacturer
modelname
serialnumber
linevoltage
numOfBytesFromUPS
methodOfFlowControl
validationSequence
{{%u,%x},{%u,%x},{%u,%x}}
shutdownArguments
{{%u,%u},%c}
{%f,%f}
loadPercentage
{%f,%f,%f,%f}
batteryPercentage
{%f,%f,%f,%f,%f}
%s-%d
%s-%dAP
Unknown
Detected: %s , %dV
Values of arguments:
                 'y' or 'n'.
                 {A,B,C,D,E}
[BNT1500AP]
    driver = powercom
    port = /dev/ttyS0
    manufacturer = PowerCom
    modelname = BNT1500AP
    type = BNT-other
#   linevoltage = 120
#   numOfBytesFromUPS = 16
ups.mfr
ups.model
ups.serial
ups.model.type
input.voltage.nominal
Trust
dtr0rts1
Egys
no_flow_control
KP625AP
PowerCom protocol UPS driver
0.14
Num of bytes requested for reading from UPS: %d
data receiving error (%d instead of %d bytes)
Num of bytes received from UPS: %d
data receiving error (validation check)
input.frequency   (raw data): [raw: %u]
output.frequency   (raw data): [raw: %u]
ups.load  (raw data): [raw: %u]
battery.charge (raw data): [raw: %u]
input.voltage (raw data): [raw: %u]
output.voltage (raw data): [raw: %u]
Forced UPS shutdown (and wait for power)...
Given line voltage '%d' is out of range (100-120 or 200-240 V)
Given numOfBytesFromUPS '%d' is out of range (1 to %d)
Given validationSequence '%s' isn't valid!
Given shutdownArguments '%s' isn't valid!
Given frequency '%s' isn't valid!
Given loadPercentage '%s' isn't valid!
Given batteryPercentage '%s' isn't valid!
Given voltage '%s' isn't valid!
 manufacturer            : '%s'
 model name              : '%s'
 serial number           : '%s'
 line voltage            : '%u'
 type                    : '%s'
 number of bytes from UPS: '%u'
 method of flow control  : '%s'
 validation sequence: '{{%u,%#x},{%u,%#x},{%u,%#x}}'
 shutdown arguments: '{{%u,%u},%c}'
 frequency calculation coefficients: '{%f,%f}'
 load percentage calculation coefficients: '{%f,%f,%f,%f}'
 battery percentage calculation coefficients: '{%f,%f,%f,%f,%f}'
 voltage calculation coefficients: '{%f,%f}'
Given UPS type '%s' isn't valid!
Given methodOfFlowControl '%s' isn't valid!
Specify UPS information in the ups.conf file.
 type:          Type of UPS: 'Trust','Egys','KP625AP','IMP','KIN','BNT',
                 'BNT-other', 'OPTI' (default: 'Trust')
                'BNT-other' is a special type intended for BNT 100-120V models,
                 but can be used to override ALL models.
You can additional specify these variables:
 manufacturer:  Manufacturer name (default: 'PowerCom')
 modelname:     Model name (default: 'Unknown' or autodetected)
 serialnumber:  Serial number (default: Unknown)
 shutdownArguments: 3 delay arguments for the shutdown operation:
                 {{Minutes,Seconds},UseMinutes?}
                where Minutes and Seconds are integer, UseMinutes? is either
You can specify these variables if not automagically detected for types
                'IMP','KIN','BNT'
 linevoltage:   Line voltage: 110-120 or 220-240 (default: 230)
 numOfBytesFromUPS: Number of bytes in a UPS frame: 16 is common, 11 for 'Trust'
 methodOfFlowControl: Flow control method for UPS:
                'dtr0rts1', 'dtr1' or 'no_flow_control'
 validationSequence: 3 pairs of validation values: {{I,V},{I,V},{I,V}}
                where I is the index into BytesFromUPS (see numOfBytesFromUPS)
                  and V is the value for the ByteIndex to match.
 frequency:     Input & Output Frequency conversion values: {A, B}
                 used in function: 1/(A*x+B)
                If the raw value x IS the frequency, then A=1/(x^2), B=0
 loadPercentage: Load conversion values for Battery and Line load: {BA,BB,LA,LB}
                 used in function: A*x+B
                If the raw value x IS the Load Percent, then A=1, B=0
 batteryPercentage: Battery conversion values for Battery and Line power:
                 used in functions: (Battery) A*x+B*y+C, (Line) D*x+E
                If the raw value x IS the Battery Percent, then
                 A=1, B=0, C=0, D=1, E=0
 voltage:       Voltage conversion values for 240 and 120 voltage:
                 {240A,240B,120A,120B}
                If the raw value x IS HALF the Voltage, then A=2, B=0
Example for BNT1500AP in ups.conf:
    desc = "PowerCom BNT 1500 AP"
    serialnumber = 13245678900
#   methodOfFlowControl = no_flow_control
#   validationSequence = {{8,0},{8,0},{8,0}}
#   shutdownArguments = {{1,30},y}
#   frequency = {0.00027778,0.0000}
#   loadPercentage = {1.0000,0.0,1.0000,0.0}
#   batteryPercentage = {1.0000,0.0000,0.0000,1.0000,0.0000}
#   voltage = {2.0000,0.0000,2.0000,0.0000}
Type of UPS: 'Trust','Egys','KP625AP','IMP','KIN','BNT','BNT-other','OPTI'
 (default: 'Trust')
Model name [cannot be detected] (default: Unknown)
Serial number [cannot be detected] (default: Unknown)
Delay values for shutdown: Minutes, Seconds, UseMinutes?'y'or'n'
Line voltage 110-120 or 220-240 V (default: 230)
The number of bytes in a UPS frame
Flow control method for UPS: 'dtr0rts1' or 'no_flow_control'
Validation values: ByteIndex, ByteValue x 3
Frequency conversion values: FreqFactor, FreqConst
Load conversion values: OffFactor, OffConst, OnFactor, OnConst
Battery conversion values: OffFactor, LoadFactor, OffConst, OnFactor, OnConst
Voltage conversion values: 240VFactor, 240VConst, 120VFactor, 120VConst
Simon Rozman <simon@rozman.net>
Peter Bieringer <pb@bieringer.de>
Alexey Sidorov <alexsid@altlinux.org>
Florian Bruhin <nut@the-compiler.org>
?fff?fff?
(\?333?
?fff?fff?fff?
?ffffff
@driver.parameter.%s
driver.flag.%s
enabled
driver.flag.nolock
driver.flag.ignorelb
driver.parameter.port
sddelay
sdorder
desc
variable name
flag
override.
default.
%s %s
chroot
user
VALUE
FLAG
UNKNOWN
usage: %s -a <id> [OPTIONS]
%40s : -x %s=<value>
%40s : -x %s
+a:kDhx:Lqr:u:Vi:
debug level is '%d'
Can't chdir to %s
%s/%s-%s.pid
Initiating UPS shutdown
device.type
driver.version
driver.version.internal
driver.name
battery.charge.low
battery.runtime
driver.parameter.pollinterval
device.mfr
device.model
device.serial
Signal %d: exiting
battery.runtime.low
Obsolete value sddelay found in ups.conf
Fatal error: '%s' is not a valid %s for this driver.
Look in the man page or call this driver with -h for a list of
valid variable names and flags.
Network UPS Tools - %s %s (%s)
Error: UPS [%s] is for driver %s, but I'm %s!
Warning: This is an experimental driver.
Some features may not function correctly.
Error: Section %s not found in ups.conf
  -a <id>        - autoconfig using ups.conf section <id>
                 - note: -x after -a overrides ups.conf settings
  -V             - print version, then exit
  -L             - print parseable list of driver variables
  -D             - raise debugging level
  -q             - raise log level threshold
  -h             - display this help
  -k             - force shutdown
  -i <int>       - poll interval
  -r <dir>       - chroot to <dir>
  -u <user>      - switch to <user> (if started as root)
  -x <var>=<val> - set driver variable <var> to <val>
                 - example: -x cable=940-0095B
Acceptable values for -x or ups.conf in this driver:
Error: unknown option -%c. Try -h for help.
Error: too many non-option arguments. Try -h for help.
Error: specifying '-a id' is now mandatory. Try -h for help.
Error: you must specify a port name in ups.conf. Try -h for help.
Duplicate driver instance detected! Terminating other driver!
Fatal error: broken driver. It probably needs to be converted.
using 'battery.charge' to set battery low state
using 'battery.runtime' to set battery low state
The 'ignorelb' flag is set, but there is no way to determine the
battery state of charge.
Only set this flag if both 'battery.charge' and 'battery.charge.low'
and/or 'battery.runtime' and 'battery.runtime.low' are available.
%s: nothing to write
%s: %.*s
SETINFO %s "%s"
ADDENUM %s "%s"
ADDRANGE %s %i %i
SETAUX %s %d
 STRING
SETFLAGS %s
%s/%s-%s
%s/%s
bind %s failed: %s
getpwuid
Current user: %s (UID %d)
Things to try:
 - mkdir %s
 - rm %s
Exiting.
chmod(%s, 0660) failed
listen(%d, %d) failed
select unix sockets failed
accept on unix fd failed
fcntl get on unix fd failed
new connection on fd %d
DUMPALL
DATASTALE
ADDCMD %s
DATAOK
DUMPDONE
PING
PONG
INSTCMD
Unknown command on socket: 
arg %d: %s
Parse error on sock: %s
ADDRANGE %s  %i %i
DELINFO %s
DELENUM %s "%s"
DELRANGE %s "%i %i"
DELCMD %s
ALARM %s
ups.alarm
write %d bytes to socket %d failed
Can't create a unix domain socket
Fatal error: unable to create listener socket
 - set different owners or permissions on %s
 - run this as some other user (try -u <username>)
dstate_init: sock %s open on fd %d
fcntl set O_NDELAY on unix fd failed
Got INSTCMD, but driver lacks a handler
Got SET, but driver lacks a handler
%s: base variable (%s) does not exist
%s: base variable (%s) is immutable
dstate_setaux: base variable (%s) does not exist
%s: ignoring LB flag from device
%s: appending LB flag [charge '%s' below '%s']
%s: appending LB flag [runtime '%s' below '%s']
status_commit
status_set
dstate_setflags
send_to_all
send_to_one
%s is locked by another process
 - Check owner/permissions of all parts of path
Fatal error: unusable configuration
 - Use another port (with the right permissions)
 - Fix the port owner/group or permissions on this port
 - Run this driver as another user (upsdrvctl -u or 'user=...' in ups.conf).
   See upsdrvctl(8) and ups.conf(5).
ser_close: programming error: fd=%d port=%s
vsnprintf needed more than %d bytes
ser_flush_in: read char 0x%02x
Warning: excessive comm failures, limiting error reporting
ser_comm_fail: vsnprintf needed more than %d bytes
Communications with UPS lost: %s
Communications with UPS re-established
Unable to open %s: %s
 - Check 'port=' in ups.conf
  Current user id: %s (%d)
Serial port owner: %s (%d)
Serial port group: %s (%d)
     Mode of port: %04o
tcgetattr(%s)
ser_flush_in: read char %c
/var/run/nut
%s/%s.pid
common.c
len <= size
%4.0f.%06ld	
/etc/ups
NUT_CONFPATH
NUT_STATEPATH
writepid: fopen %s
Failed to read pid from %s
kill
 %02x
%s: (%d bytes) =>
%3s 
%02Xh 
'%c' 
Unable to enter background
open /dev/null
Startup successful
initgroups
setgid
setuid
chdir(%s)
chroot(%s)
chdir(/)
chrooted into %s
Invalid log level threshold
user %s not found
getpwnam(%s)
Out of memory
2.7.2
vupslog: vsnprintf needed more than %d bytes
Ignoring invalid pid number %d
getuid gave 0, but seteuid(0) failed
snprintfcat
Unrecognized flag [%s]
%s: duplicate value (shouldn't happen)
state_addenum: base variable (%s) does not exist
state_addrange: min is superior to max! (%i, %i)
state_addrange: base variable (%s) does not exist
state_setflags: base variable (%s) does not exist
st_tree_node_add
Fatal error in parseconf(ups.conf): %s
%s/ups.conf
Can't open %s: %s
Parse error: %s:%d: %s
parseconf: fatal error: %s
realloc wordbuf failed
realloc arglist failed
realloc argsize failed
realloc arglist member failed
malloc wordbuf failed
addchar: discarding invalid character (0x%02x)!
;*3$"
e+\9,r[90L
@Gr9>
e+\9,r[90L
e+\9,r[90L
@Gr9>
e+\9,r[90L
@Gr9>
e+\9
?Gr9>
powercom.debug
7zXZ
IQ-8
s5UU
$KgS
r57Tt8
B3sb
Lmi7D
=T!Y\
GZso
p\y16`Cq
H'Pz[
REw!i
[[aj
jati
-O:w
@O}>
%ZQ!d
o=mN>'I
^yJ>
oH"a
T~2's
}#E^
>)p^
{xjL
N;f_,
9GXU
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
