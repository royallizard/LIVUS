Z`(D
"4'6.
__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
iptc_first_chain
iptc_next_chain
iptc_next_rule
malloc
memset
__errno_location
strncpy
dump_entries
__printf_chk
putchar
stderr
__fprintf_chk
abort
iptc_free
close
iptc_commit
__strcpy_chk
memcpy
setsockopt
strcmp
iptc_set_policy
iptc_delete_num_entry
iptc_is_chain
iptc_get_references
iptc_set_counter
iptc_zero_counter
iptc_read_counter
iptc_zero_entries
iptc_flush_entries
iptc_builtin
iptc_delete_chain
iptc_rename_chain
strlen
iptc_delete_entry
iptc_append_entry
iptc_replace_entry
iptc_insert_entry
iptc_first_rule
iptc_init
socket
fcntl
getsockopt
__stack_chk_fail
iptc_get_policy
iptc_get_target
iptc_create_chain
iptc_strerror
libc.so.6
_edata
__bss_start
_end
libip4tc.so.0
GLIBC_2.4
GLIBC_2.3.4
GLIBC_2.2.5
%zF 
%rF 
%jF 
%bF 
%ZF 
%RF 
%JF 
%BF 
%:F 
%2F 
%*F 
%"F 
ATSubH
=gB 
[A\]
ffff.
ffff.
C0t2L
l$ H
AVAUATUH
kXfA
pv<A
([]A\A]A^A_
AWAVAUATUSH
e`L9
[]A\A]A^A_
AWAVAUATI
N`H9
T$ H
D$`I9
~`M9
D$ H
8[]A\A]A^A_
[]A\A]A^A_
@rERROf
ERROf
t$(H
N`H9
GrERROf
H+V@H
H+FHH
;S8s
A+Gt
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
fffff.
AVAUI
t5I9
[]A\A]A^
[]A\A]A^
[]A\A]A^
fff.
@XA9
p`H9
H9} 
H`H9
d$ H
l$ L
d$(L
l$0L
t$8L
|$@H
~oM9
fffff.
t$ H
[]A\
[]A\
[]A\
fffff.
fff.
AUATUSH
``L9
[]A\
[]A\A]
fffff.
d$ H
uYL;c
l$ H
fff.
l$ H
l$ H
AWAVI
ATUSH
T$(H
T$`I
L$`H
L$ H9
d$8H
l$@M9_@M
wHH9rH
0A:L
@A:L
t$(H
?L;|$ 
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
|$0D
t$0A
F A2E 
F u]E1
 A2t
D;d$LH
|$0s=E
pfA;.
?L;|$ 
t$0I
J(A;O(
l$JA
L$ 9M 
l$@H
d$8L
M9} u
[]A\A]A^A_
fE;,$
A2D$ 
G0H9B0
l$ H
pXD9
p`H9
[]A\A]
H`H9
[]A\A]
[]A\A]
[]A\A]
[]A\A]
@XD9
M`I9
t$ H
U`I9
fff.
AWAVAUATUSH
D$$T
D$$H
L$01
|$@H
D$ 1
D$0A
D$@H
D$8I
D$HH
D$@I
D$PH
D$HI
D$XH
D$PI
D$`H
D$XI
D$hH
D$`I
D$pH
D$hI
D$xH
D$pI
D$xI
|$`1
D$(D
D$8E
A;T$8s
D$0H
o`L9
T$8L
;Xtr
;X|vVH
[]A\A]A^A_
L$(D
T$,A
t$(H
L$(H
ffffff.
fff.
fff.
NF_ACCEPT
UNKNOWN
NF_DROP
NF_QUEUE
RETURN
libxtables.so.5
libiptc v%s. %u bytes.
Table `%s'
Entry %u (%lu):
Interface: `%s'/
to `%s'/
Protocol: %u
Flags: %02X
Invflags: %02X
Cache: %08X
Match name: `%s'
Target name: `%s' [%u]
verdict=%s
verdict=%u
ERROR
error=`%s'
ERROR: bad type %i
Module is wrong version
Chain is not empty
Can't delete built-in chain
Chain already exists
Index of insertion too big
Index of replacement too big
Index of deletion too big
Index of counter too big
Loop found in table
Target problem
Bad built-in chain name
Bad policy name
Incompatible with this kernel
Memory allocation problem
PREROUTING
INPUT
FORWARD
OUTPUT
POSTROUTING
Hooks: pre/in/fwd/out/post = %x/%x/%x/%x/%x
Underflows: pre/in/fwd/out/post = %x/%x/%x/%x/%x
ERROR: offset %u not an entry!
SRC IP: %u.%u.%u.%u/%u.%u.%u.%u
DST IP: %u.%u.%u.%u/%u.%u.%u.%u
Counters: %llu packets, %llu bytes
ERROR: NULL pointer chain_index[%d]
ERROR: %d not a valid bsearch type
Could not set close on exec: %s
ERROR: %d not a valid target)
Permission denied (you must be root)
Table does not exist (do you need to insmod?)
Can't delete chain with references left
Bad rule (does a matching rule exist in that chain?)
iptables who? (do you need to insmod?)
Will be implemented real soon.  I promise ;)
No chain/target/match by that name
libip4tc.so.0.0.0.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rela.plt
.got.plt
.got
.text
