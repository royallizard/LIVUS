/lib64/ld-linux-x86-64.so.2
Hg0K+
libfko.so.1
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
fko_get_encoded_data
fko_set_gpg_recipient
fko_set_spa_message
fko_set_spa_nat_access
fko_get_timestamp
fko_get_spa_data
fko_set_spa_message_type
fko_get_username
fko_set_gpg_signer
fko_decrypt_spa_data
fko_get_spa_message
fko_set_spa_client_timeout
fko_spa_data_final
fko_set_rand_value
fko_destroy
fko_new
fko_get_spa_client_timeout
fko_get_spa_digest_type
fko_set_spa_encryption_type
fko_get_spa_digest
fko_get_version
fko_get_spa_nat_access
fko_gpg_errstr
fko_set_username
fko_set_spa_digest_type
fko_new_with_data
fko_errstr
fko_get_spa_server_auth
fko_set_gpg_home_dir
fko_get_spa_message_type
fko_get_rand_value
fko_set_timestamp
libc.so.6
socket
__printf_chk
exit
_IO_putc
fopen
gai_strerror
optind
strrchr
perror
connect
sigprocmask
__stack_chk_fail
unlink
putchar
strtol
fgets
strlen
send
sigemptyset
getaddrinfo
memset
strstr
__errno_location
tcsetattr
unsetenv
__fprintf_chk
sigaddset
stdout
recv
inet_addr
fputs
memcpy
fclose
setsockopt
malloc
strcasecmp
__ctype_b_loc
getenv
sscanf
optarg
stderr
__snprintf_chk
getuid
getopt_long
strncasecmp
fileno
fwrite
__memcpy_chk
strchr
sendto
tcgetattr
sleep
__cxa_finalize
freeaddrinfo
__sprintf_chk
__xstat
memmove
ctermid
_IO_getc
setbuf
strcmp
__libc_start_main
random
snprintf
free
_edata
__bss_start
_end
GLIBC_2.3
GLIBC_2.14
GLIBC_2.4
GLIBC_2.3.4
GLIBC_2.2.5
AVAUATU
|$0u,
|$0H
\$0H
|$0I
[]A\A]A^A_
H;\$
|$0I
|$0I
|$0A
T$@D
|$0L
|$0H
t$@H
|$81
|$8H
|$8H
|$0I
D$@M
L$(H
T$$L
L$8L
D$,H
|$0L
|$0A
|$8I
|$8H
fffff.
t$XH
t$ H
t$(H
t$0H
t$8H
t$@H
t$HH
t$PH
T$XH
T$ H
T$(H
T$0H
T$8H
T$@H
T$HH
T$PH
fff.
[]A\
[]A\
AVAUATUS1
[]A\A]A^A_
\$01
t$(H
AWAVAUATI
t$ H
L$(H
t$ H
L$ H
H[]A\A]A^A_
AVAUATUSH
D$H1
t$@D
L$HdH3
P[]A\A]A^
x2D9
ATMc
l$ L
[]A\A]A^
l$ L
AVAUI
ATUSH
{(Ic
|$4H
D$ A
D$0P
D$$A
D$(9
dH34%(
[]A\A]A^A_
AVAUI
ATUSH
D$ A
D$$A
dH34%(
[]A\A]A^A_
AVAUI
D$ E
D$$1
D$&1
D$*A
D$,A
D$0A
D$4A
D$51
t$"H
T$"1
[]A\A]A^A_
d$:f
D$81
T$8dH3
AWAVAUATUSH
D$(1
H;\$
H;\$
D$(dH3
8[]A\A]A^A_
ATUH
[]A\A]
[]A\A]
[]A\A]
AVAUATUSH
D$ H
L$(I
|$ H
|$HM
[]A\A]A^A_
L$<H
T$8L
L$DL
D$@H
L$(H
T$ H
AVAUI
ATUSH
[]A\A]A^
AVAUATI
[]A\A]A^
AVAUATUSH
\$ H
[]A\A]A^A_
l$ L
t$(L
|$0H
HOME
%s%c%s
.fwknop.run
fwknop
%s: %s: Error %i - %s
<NULL>
   Random Value: %s
       Username: %s
      Timestamp: %u
    FKO Version: %s
   Message Type: %i
 Message String: %s
     Nat Access: %s
    Server Auth: %s
 Client Timeout: %u
    Digest Type: %u
   Encoded Data: %s
SPA Data Digest: %s
Could not open args file: %s
Executing: %s
2.0.4
fko_new
fko_set_spa_client_timeout
fko_set_spa_message_type
fko_set_timestamp
%s%s%s
none/0
fko_set_spa_message
%s,%d
%u.%u.%u.%u,%u
fko_set_nat_access_str
fko_set_username
GPG_AGENT_INFO
fko_set_spa_encryption_type
fko_set_gpg_home_dir
fko_set_gpg_recipient
GPG ERR: %s
fko_set_gpg_signer
Enter encryption password: 
fko_spa_data_final
fko_get_spa_data
fko_new_with_data
Enter decryption password: 
fko_decrypt_spa_data
GPG ERR: %s
Dump of the Decoded Data
get_rand_port(), fko_get_rand_value
FKO Field Values:
=================
Final Packed/Encrypted/Encoded Data:
[*] malloc failure for cmd line arg.
[*] max command line args exceeded.
Last fwknop client command line: %s
Could not read line from file: %s
argument string too long, exiting.
warning, did not write expected number of bytes to args save file
fwknop client %s, FKO protocol version %s
Enter passphrase for signing: 
Received no password data, exiting.
send_spa_packet: packet not sent.
send_spa_packet: bytes sent: %i
Enter passphrase for secret key: 
No access to recipient private key?
Invalid time offset: %s
sha1
sha256
sha384
sha512
udpraw
tcpraw
icmp
DIGEST_TYPE
SPA_SERVER_PROTO
SPA_SERVER_PORT
SPA_SOURCE_PORT
FW_TIMEOUT
ALLOW_IP
source
0.0.0.0
resolve
TIME_OFFSET
USE_GPG
USE_GPG_AGENT
GPG_RECIPIENT
GPG_SIGNER
GPG_HOMEDIR
SPOOF_USER
SPOOF_SOURCE_IP
SPA_SERVER
KEY_FILE
NAT_ACCESS
HTTP_USER_AGENT
RESOLVE_URL
NAT_LOCAL
NAT_RAND_PORT
NAT_PORT
.fwknoprc
%s %[^ ;	
default
%s client version %s
--fw-timeout must be >= 0
Unrecognized port: %s
Unrecognized protocol: %s
Fwknop/
allow-ip
save-packet-append
save-packet
no-save-args
server-cmd
digest-type
destination
fw-timeout
gpg-encryption
gpg-recipient-key
gpg-signer-key
gpg-home-dir
gpg-agent
get-key
help
http-proxy
icmp-type
icmp-code
last-cmd
nat-access
named-config
nat-local
nat-port
nat-rand-port
server-port
server-proto
spoof-src
resolve-ip-http
resolve-url
show-last
source-ip
source-port
test
time-offset-plus
time-offset-minus
user-agent
spoof-user
verbose
version
Memory allocation error for resolve URL.
Warning: Unable to determine HOME directory.
 No .fwknoprc file processed.
Warning: Path to .fwknoprc file is too long.
 No .fwknoprc file processed.
[*] Creating initial rc file: %s.
Unable to create initial rc file: %s: %s
Unable to write default setup to rcfile: %s: %s
# .fwknoprc
##############################################################################
# Firewall Knock Operator (fwknop) client rc file.
# This file contains user-specific fwknop client configuration default
# and named parameter sets for specific invocations of the fwknop client.
# Each section (or stanza) is identified and started by a line in this
# file that contains a single identifier surrounded by square brackets.
# The parameters within the stanza typicaly match corresponding client 
# command-line parameters.
# The first one should always be `[default]' as it defines the global
# default settings for the user. These override the program defaults
# for these parameter.  If a named stanza is used, its entries will
# override any of the default.  Command-line options will trump them
# all.
# Subsequent stanzas will have only the overriding and destination
# specific parameters.
# Lines starting with `#' and empty lines are ignored.
# See the fwknop.8 man page for a complete list of valid parameters
# and their values.
##############################################################################
# We start with the 'default' stanza.  Uncomment and edit for your
# preferences.  The client will use its build-in default for those items
# that are commented out.
[default]
#DIGEST_TYPE         sha256
#FW_TIMEOUT          30
#SPA_SERVER_PORT     62201
#SPA_SERVER_PROTO    udp
#ALLOW_IP            <ip addr>
#SPOOF_USER          <username>
#SPOOF_SOURCE_IP     <IPaddr>
#TIME_OFFSET         0
#USE_GPG             N
#GPG_HOMEDIR         /path/to/.gnupg
#GPG_SIGNER          <signer ID>
#GPG_RECIPIENT       <recipient ID>
# User-provided named stanzas:
# Example for a destination server of 192.168.1.20 to open access to 
# SSH for an IP that is resolved externally, and one with a NAT request
# for a specific source IP that maps port 8088 on the server
# to port 88 on 192.168.1.55 with timeout.
#[myssh]
#SPA_SERVER          192.168.1.20
#ACCESS              tcp/22
#ALLOW_IP            resolve
#[mynatreq]
#SPA_SERVER          192.168.1.20
#ACCESS              tcp/8088
#ALLOW_IP            10.21.2.6
#NAT_ACCESS          192.168.1.55,88
#CLIENT_TIMEOUT      60
###EOF###
Unable to open rc file: %s: %s
Unterminated stanza line: '%s'.  Skipping.
RC FILE: %s, LINE: %s	STANZA: %s:
*Invalid entry in %s at line %i.
 - '%s'
RC FILE: %s, LINE: %s	Var: %s, Val: '%s'
Parameter error in %s, line %i: var=%s, val=%s
Parameter error in %s, stanza: %s, line %i: var=%s, val=%s
Single Packet Authorization client
Usage: fwknop -A <port list> [-s|-R|-a] -D <spa_server> [options]
 -h, --help                  Print this usage message and exit.
 -A, --access                Provide a list of ports/protocols to open
                             on the server.
 -B, --save-packet           Save the generated packet data to the
                             specified file.
 -a, --allow-ip              Specify IP address to allow within the SPA
                             packet.
 -C, --server-cmd            Specify a command that the fwknop server will
                             execute on behalf of the fwknop client..
 -D, --destination           Specify the IP address of the fwknop server.
 -n, --named-config          Specify an named configuration stanza in the
                             '$HOME/.fwknoprc' file to provide some of all
                             of the configuration parameters.
 -N, --nat-access            Gain NAT access to an internal service
                             protected by the fwknop server.
 -p, --server-port           Set the destination port for outgoing SPA
                             packet.
 -P, --server-proto          Set the protocol (udp, tcp, http, tcpraw,
                             icmp) for the outgoing SPA packet.
                             Note: The 'tcpraw' and 'icmp' modes use raw
                             sockets and thus require root access to use.
 -s, --source-ip             Tell the fwknopd server to accept whatever
                             source IP the SPA packet has as the IP that
                             needs access (not recommended, and the
                             fwknopd server can ignore such requests).
 -S, --source-port           Set the source port for outgoing SPA packet.
 -Q, --spoof-source          Set the source IP for outgoing SPA packet.
 -R, --resolve-ip-http       Resolve the external network IP by
                             connecting to a URL such as the default of:
                             http://www.cipherdyne.org/cgi-bin/myip
                             This can be overridden with the --resolve-url
                             option.
     --resolve-url           Override the default URL used for resolving
                             the source IP address.
 -u, --user-agent            Set the HTTP User-Agent for resolving the
                             external IP via -R, or for sending SPA
                             packets over HTTP.
 -H, --http-proxy            Specify an HTTP proxy host through which the
                             SPA packet will be sent.  The port can also be
                             specified here by following the host/ip with
                             ":<port>".
 -U, --spoof-user            Set the username within outgoing SPA packet.
 -l, --last-cmd              Run the fwknop client with the same command
                             line args as the last time it was executed
                             (args are read from the ~/.fwknop.run file).
 -G, --get-key               Load an encryption key/password from a file.
 -r, --rand-port             Send the SPA packet over a randomly assigned
                             port (requires a broader pcap filter on the
                             server side than the default of udp 62201).
 -T, --test                  Build the SPA packet but do not send it over
                             the network.
 -v, --verbose               Set verbose mode.
 -V, --version               Print version number.
 -m, --digest-type           Specify the message digest algorithm to use.
                             (md5, sha1, or sha256 (default)).
 -f, --fw-timeout            Specify SPA server firewall timeout from the
                             client side.
     --icmp-type             Set the ICMP type (used with '-P icmp')
     --icmp-code             Set the ICMP code (used with '-P icmp')
     --gpg-encryption        Use GPG encryption (default is Rijndael).
     --gpg-recipient-key     Specify the recipient GPG key name or ID.
     --gpg-signer-key        Specify the signer's GPG key name or ID.
     --gpg-home-dir          Specify the GPG home directory.
     --gpg-agent             Use GPG agent if available.
     --no-save-args          Do not save fwknop command line args to the
                             $HOME/fwknop.run file
     --nat-local             Access a local service via a forwarded port
                             on the fwknopd server system.
     --nat-port              Specify the port to forward to access a
                             service via NAT.
     --nat-rand-port         Have the fwknop client assign a random port
                             for NAT access.
     --show-last             Show the last fwknop command line arguments.
     --time-offset-plus      Add time to outgoing SPA packet timestamp.
     --time-offset-minus     Subtract time from outgoing SPA packet
                             timestamp.
a:A:bB:C:D:f:gG:hH:lm:n:N:p:P:Q:rRsS:Tu:U:vV
Unrecognized icmp type value: %s
Unrecognized icmp code value: %s
Named configuration stanza: [%s] was not found.
Must use --destination unless --test mode is used
Must use one of [-s|-R|-a] to specify IP for SPA access.
Cannot set --http-proxy with a non-HTTP protocol.
Must specify --gpg-recipient-key when GPG is used.
test mode enabled, SPA packet not actually sent.
send_spa_packet_tcp_or_udp: write error: 
[#] Warning: bytes sent (%i) not spa data length (%i).
send_spa_packet_tcp_or_udp: Could not create socket: 
GET /%s HTTP/1.0
User-Agent: %s
Accept: */*
Host: %s
Connection: close
GET http://%s/%s HTTP/1.0
User-Agent: %s
Accept: */*
Host: %s
Connection: close
Test mode enabled, SPA packet not actually sent.
send_spa_packet_tcp_raw: create socket: 
send_spa_packet_tcp_raw: setsockopt HDRINCL: 
send_spa_packet_tcp_raw: sendto error: 
send_spa_packet_udp_raw: create socket: 
send_spa_packet_udp_raw: setsockopt HDRINCL: 
send_spa_packet_udp_raw: sendto error: 
send_spa_packet_icmp: create socket: 
send_spa_packet_icmp: setsockopt HDRINCL: 
send_spa_packet_icmp: sendto error: 
send_spa_packet: Error #%i from fko_get_spa_data: %s
Generating SPA packet:
    protocol: 
Could not set destination IP.
%i is not a valid or supported protocol.
write_spa_packet_data: Error #%i from fko_get_spa_data: %s
error in getaddrinfo: %s
http://
        port: %d
     IP/host: %s
Could not set source IP.
write_spa_packet_data: 
  0x%.4x:  
%.2x 
[-] stat() against file: %s returned: %s
[-] file: %s is not a regular file or symbolic link.
[-] file: %s permissions should only be user read/write (0600, -rw-------)
[-] file: %s not owned by current effective user id.
GET %s HTTP/1.0
User-Agent: %s
Accept: */*
Host: %s
Connection: close
resolve_ip_http: write error: 
Did not find the end of HTTP header.
[+] Resolved external IP (via http://%s%s) as: %s
Invalid IP (%s) in HTTP response:
resolve_ip_http: Could not create socket: 
https is not yet supported for http-resolve-ip.
resolve-url port value is invalid.
resolve-url hostname portion is too large.
resolve-url path portion is too large.
HTTP request: %s
HTTP response: %s
%u.%u.%u.%u
https
www.cipherdyne.org
/cgi-bin/myip
www.cipherdyne.com
Error parsing resolve-url
Could not open config file: %s
Could not get password for IP: %s from: %s
;*3$"
fwknop.debug
7zXZ
zuN_
M&rqZ
,V.P
~}@m
^Jh0
:]?Z
gsrgl
X"<'
0dp'
Dd?Nj
M4yM
#lHsU"
Vu"s
!0O&
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
