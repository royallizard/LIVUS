R4H"!
r+<.
8]J'
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
gvplugin_dot_layout_LTX_library
gvlayout_dot_layout
dotgen_engine
dotgen_features
dot_cleanup
reverse_edge
delete_fast_edge
find_fast_edge
acyclic
nonconstraint_edge
E_constr
agxget
mapbool
class1
mark_clusters
agfstnode
agfstout
agnxtout
agnxtnode
UF_find
virtual_node
make_aux_edge
virtual_weight
__assert_fail
merge_chain
mergeable
ports_eq
class2
build_skeleton
grealloc
gmalloc
agfindedge
Concentrate
interclexp
agfstedge
agnxtedge
agcontains
safe_other_edge
find_flat_edge
expand_cluster
allocate_ranks
build_ranks
delete_fast_node
UF_singleton
agerr
agdelete
UF_setname
zmalloc
install_cluster
install_in_rank
enqueue_neighbors
mark_lowclusters
agfindsubg
Bezier
__sprintf_chk
agget
free
arrowStartClip
arrowEndClip
dot_compoundEdges
dot_scan_ranks
abort
dot_concentrate
portcmp
decompose
zapinlist
new_virtual_edge
fast_nodeapp
delete_flat_edge
unmerge_oneway
flat_edges
rec_save_vlists
rec_reset_vlists
dot_init_node_edge
common_init_node
gv_nodesize
N_group
common_init_edge
E_weight
late_double
late_string
E_showboxes
late_int
E_minlen
gv_cleanup_edge
free_label
setEdgeType
__isoc99_sscanf
Verbose
dot_mincross
dot_position
dot_rank
dot_sameports
dot_splines
dotneato_postprocess
stderr
__fprintf_chk
qsort
G_ordering
N_ordering
agusergraph
is_cluster
save_vlist
flat_rev
enqueue
new_queue
dequeue
free_queue
MaxIter
start_timer
agnedges
strtod
elapsed_sec
agnnodes
agfstin
agnxtin
fwrite
countDummyNodes
exit
selfRightSpace
rank1
CL_type
UF_union
maptoken
init_UF_size
initEdgeTypes
rank3
aginsert
zrealloc
do_graph_label
strcmp
arrow_flags
arrow_length
agfindattr
E_samehead
E_sametail
hypot
shape_clip
clip_and_install
beginpath
endpath
agnode
agcopyattr
shapeOf
strlen
agset
getsplinepoints
add_box
routesplines
routepolylines
routesplinesinit
E_taillabel
routesplinesterm
updateBB
State
E_headlabel
place_portlabel
makeSelfEdge
simpleSplineRoute
orthoEdges
agopen
agraphattr
agnodeattr
agedgeattr
agsubg
agedge
agxset
agclose
new_spline
update_bb_bz
libgvc.so.6
libxdot.so.4
libexpat.so.1
libz.so.1
libgraph.so.5
libcdt.so.5
libpathplan.so.4
libm.so.6
libltdl.so.7
libdl.so.2
libc.so.6
__stack_chk_fail
_edata
__bss_start
_end
libgvplugin_dot_layout.so.6
GLIBC_2.0
GLIBC_2.3.4
GLIBC_2.7
GLIBC_2.1.3
GLIBC_2.4
[^_]
UWVS
d$l[^_]
L$4+
D$<f
\$Xf
L$(t
UWVS
d$l[^_]
UWVS
\$,f
d$l[^_]
L$ t
rl9qlu
9v t,
d$,[^_]
t	;G
+T$ 
UWVS
|$ ;~
|$$kD$,,
d$L[^_]
T$ ;V
d$L[^_]
UWVS
d$,[^_]
UWVS
t$0~
9D$4
;D$4~
kD$4,
9D$,
9D$,
d$L[^_]
UWVS
|$@u#
d$,[^_]
d$,[^_]
UWVS
[^_]
[^_]
D$H9
[^_]
D$H9
UWVS
[^_]
\$Hf
[^_]
[^_]
T$@1
;t$@
+D$@
T$H1
[^_]
;l$@
|$D1
UWVS
[^_]
,WVS
T$T9
T$ 9T$T
t$T+t$P
d$<[^_]
l$(k
L$,k
d$<[^_]
UWVS
L$`9t$\
D$`}K
9t$\
D$`|
kL$h,
L$`9t$\
D$`}S
9t$\
D$`|
l$X,
d$|[^_]
+D$d
+D$d
d$L[^_]
d$,[^_]
l$ ~]
~[;1tO1
D$$9
d$([
UWVS
\$(f
d$L[^_]
UWVS
d$,[^_]
9D$D
d$,[^_]
}~9T$D
;D$D
d$,[^_]
d$,[^_]
d$,[^_]
;D$D
;D$D
l$41
kT$,,
D$hf
[^_]
kD$(,
D$Pf
UWVS
[^_]
T$`f
d$L1
UWVS
T$pf
d$\[^_]
UWVS
T$@;
T$@;R t5
d$,[^_]
d$,[^_]
UWVS
D$TtV
d$l[^_]
L$T9
d$<[^_]
d$L[^_]
UWVS
d$<[^_]
[^_]
<otR<it
d$ ^_]
d$ 1
d$ ^_]
d$ 1
UWVS
;D$,
;L$ 
;L$ ti
D$ )
;T$,}
;T$,
d$\[^_]
UWVS
[^_]
[^_]
d$,[^_]
d$<[^_]
UWVS
,;T$
d$,[^_]
L$ 	
;D$,
|$(1
l$(f
L$$9
;D$<
d$\[^_]
UWVS
L$ 9
d$<[^_]
UWVS
t$4tU
[^_]
UWVS
9D$8
kL$8,
L$L;D$8
89|$(
l$0~J
d$\[^_]
UWVS
L$(kL$$,
D$ ,
;D$$
D$P9@ t
d$<[^_]
UWVS
T$d~G
	9t$`
D$p9D$P
kt$p,k|$P,
t$P+t$p
t$P9t$8
9D$4
L$4	
;l$Lv9
L$|9L$P
;D$`
FD$x
L$l9L$hti
;t$`~	
;t$D
9T$\
;t$4
;t$4r
l$89
T$89
L$49
LT$P
T$D1
;t$Dt
;t$Du
9T$<
T$Xt
T$X9
9D$D
9T$Du
9t$Pu
D$T9
9D$D
T$8)
9l$Du	
;T$<u
D$X;
9T$Dt
9T$Du
9l$T
9T$D
T$T1
9L$Du	
;T$Tu
L$X)
T$P+T$8
l$@,
9D$L
L$l9L$d
[^_]
t$l;@ u
;D$`
[^_]
UWVS
9D$$~
|$4~yf
|$4~K
D$0kT$0,
9D$0
D$(1
D$(,
9D$0
d$|[^_]
d$ [
$;t$
T$ +T$
9T$ |akD$ 
$+l$
<$+l$
d$P^_]
\$0f
d$P^_]
UWVS
,9|$
[^_]
\$Xf
\$(f
d$D[^
[^_]
\$Pf
,;l$
D$@f
d$\[^_]
d$\[^_]
[^_]
D$@f
D$pf
D$Hf
UWVS
kD$D,
l$J~j
|$<9}
D$8,
;D$D
[^_]
[^_]
9@ tC
d$0[^_
UWVS
L$4k
9T$4
,;T$4
d$l[^_]
90~J
L$,u-
;T$4
d$\[^_]
9D$<
f9L$*~	
L$*f9
L$,9
9D$<
d$L[^_]
UWVS
9D$8
\$xf
+L$8
|$4t}
\$hf
|$D9
;|$8
L$4;t$D
D$@,9t$D
|$D9
[^_]
:O`t
zNuL
z0u.
t$ f
\$(f
d$L[^_]
UWVS
d$<[^_]
UWVS
d$,[^_]
8dug
d$,[^_]
;*}1
8dt:
d$,[^_]
UWVS
DD$$
d$<[^_]
d$<[^_]
UWVS
0t^9n
[^_]
t);h
d$d^_
d$d1
UWVS
D$+1
[^_]
d$D[^
d$@^_]
[^_]
D$0f
[^_]
l$0k
[^_]
T$$9
D$hf
T$$9
D$pf
\$hf
[^_]
\$hf
[^_]
;~4|
T$D9T$P
L$P+D$P
\$xf
D$0 
;D$@
D$0 
l$X;D$@
t$P1
9D$H
9D$D
9T$H
9D$D~
[^_]
UWVS
l$`1
t$41
D$,;
T$,1
D$,;
D$,1
z|u~1
z1u7
;D$8
D$,;
[^_]
)L$,
L$,3L$$+L$$
9t$(
[^_]
D$,;
D$\t}
D$hf
UWVS
[^_]
9L$|
9D$x
T$PuN
9D$x
l$x9
l$x9
9T$|
FluC
T$Pu
T$Pu
T$Pu
D$|;G
D$P;G
UWVS
[^_]
T$p+
T$T3T$h+T$h9
D$d 
T$`+B
d$|[^_]
\$89
\$@u
UWV1
[^_]
UWV1
[^_]
UWVS
D$@9D$8
l$L1
L$41
L$0|
t$4;u
l$P9l$T
$;|$4t\
l$89/~
$;|$4u
[^_]
T$09
dot_layout
 Aclass2.c
(e)->u.to_virt == ((void *)0)
(orig)->u.to_virt == ((void *)0)
(orig)->u.to_virt != ((void *)0)
merge_chain
make_chain
cluster.c
(from)->u.rank < (to)->u.rank
(e)->u.to_virt != ((void *)0)
%s was already in a rankset, deleted from cluster %s
interclexp
map_path
cluster named %s not found
(%.5g,%.5g)
compound.c
lhead
ltail
bez->sflag
bez->eflag
segment [%s,%s] does not intersect box ll=%s,ur=%s
%s -> %s: spline size > 1 not supported
%s -> %s: head not inside head cluster %s
%s -> %s: tail is inside head cluster %s
%s -> %s: tail not inside tail cluster %s
%s -> %s: head is inside tail cluster %s
makeCompoundEdge
boxIntersectf
@conc.c
(right)->u.in.size + (right)->u.out.size == 0
degenerate concentrated rank %s,%d
mergevirtual
fastgr.c
e != ((void *)0)
n != (n)->u.next
u != v
(v)->u.next == ((void *)0)
find_fast_node(g, n)
virtual
merge_oneway glitch
delete_fast_edge
fast_node
fast_nodeapp
delete_fast_node
delete_flat_edge
merge_oneway
flat.c
(v)->u.out.size == 2
(g)->u.minrank == 0
abomination
setbounds
aspect
%lf,%d
Target AR = %g
compound
dot does not support the aspect attribute for disconnected graphs or graphs with clusters
Amincross.c
(v)->u.rank == r
(v)->u.order < (w)->u.order
surprise
mclimit
remincross
ordering '%s' not recognized.
ordering '%s' not recognized for node '%s'.
(((e)->head))->u.low < M->nrows
(((e)->tail))->u.low < M->ncols
install_in_rank %s %s rank %d i = %d an = 0
(g)->u.rank[r].n <= (g)->u.rank[r].an
mincross: pass %d iter %d trying %d cur_cross %d best_cross %d
merge2: graph %s, rank %d has only %d < %d nodes
mincross %s: %d crossings, %.2f secs.
flat_search
postorder
balance
transpose_step
install_in_rank
?nslimit
AR=%0.4lf	 Area= %0.4lf	
Dummy=%d
next#iter=%d
position.c
rank(g, 2, nsiter2(g)) == 0
Going to apply another expansion.
Edge length %f larger than maximum %u allowed.
Check for overwide node(s).
contain_nodes clust %s rank %d missing node
dot_position
connectGraph
MbP?
?nslimit1
cluster
rank.c
leader != ((void *)0)
same
source
sink
((e)->head) == UF_find(((e)->head))
((e)->tail) == UF_find(((e)->tail))
((n)->u.UF_size <= 1) || (n == leader)
cluster_leader
minmax_edges
too many same{head,tail} groups for node %s
samehead
sametail
C{%s}
dotsplines.c
(l = (fe)->u.label)
(fe)->u.label
auxg
headport
tailport
weight
10000
_dot_splines
setEdgeLabelPos
combiAR = %lf
;*2$"$
libgvplugin_dot_layout.so.6.0.0.debug
7zXZ
v:^Z
m	z!
1|Tiqe#
X.PS
9:1rwc|
HeGH
	&/P
+s#^
MkmU
:\^|
KM"w
AC]#8X
&?GA
,\%h
PV\7	
TXil
:!4=
h8t)
zL>)
=L>4*
LRX5
:fnz
!82-%A/
fX@	
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
