 p	y
vDQQ
K	0"
4j%A
9G~WU
TsYe
X8^\X
$	."}
\PK3
4443
,"N}
O~4&H
Oa0eP@
wu)S
{W^8T
%i9*
7`/1
g7rT
c';g7]
Sd=X
3e"f7c
Rdw$
,dy)
W$D*k3;
cIc1gJ
a((p
f83(s
PJE}GW
j3]q
 {BE
2k3%
$!>{K
|\	9M
|/3=
)ygZ
__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
_Z17icvAdd_8u32f_C1IRPKhiPfi6CvSize
icvAdd_8u32f_C1IR_p
icv8x32fTab_cv
_Z15icvAdd_32f_C1IRPKfiPfi6CvSize
icvAdd_32f_C1IR_p
_Z23icvAddSquare_8u32f_C1IRPKhiPfi6CvSize
icvAddSquare_8u32f_C1IR_p
icv8x32fSqrTab
_Z21icvAddSquare_32f_C1IRPKfiPfi6CvSize
icvAddSquare_32f_C1IR_p
_Z24icvAddProduct_8u32f_C1IRPKhiS0_iPfi6CvSize
icvAddProduct_8u32f_C1IR_p
_Z22icvAddProduct_32f_C1IRPKfiS0_iPfi6CvSize
icvAddProduct_32f_C1IR_p
_Z25icvAddWeighted_8u32f_C1IRPKhiPfi6CvSizef
icvAddWeighted_8u32f_C1IR_p
_Z23icvAddWeighted_32f_C1IRPKfiPfi6CvSizef
icvAddWeighted_32f_C1IR_p
_Z18icvAdd_8u32f_C1IMRPKhiS0_iPfi6CvSize
icvAdd_8u32f_C1IMR_p
_Z16icvAdd_32f_C1IMRPKfiPKhiPfi6CvSize
icvAdd_32f_C1IMR_p
_Z24icvAddSquare_8u32f_C1IMRPKhiS0_iPfi6CvSize
icvAddSquare_8u32f_C1IMR_p
_Z22icvAddSquare_32f_C1IMRPKfiPKhiPfi6CvSize
icvAddSquare_32f_C1IMR_p
_Z25icvAddProduct_8u32f_C1IMRPKhiS0_iS0_iPfi6CvSize
icvAddProduct_8u32f_C1IMR_p
_Z23icvAddProduct_32f_C1IMRPKfiS0_iPKhiPfi6CvSize
icvAddProduct_32f_C1IMR_p
_Z26icvAddWeighted_8u32f_C1IMRPKhiS0_iPfi6CvSizef
icvAddWeighted_8u32f_C1IMR_p
_Z24icvAddWeighted_32f_C1IMRPKfiPKhiPfi6CvSizef
icvAddWeighted_32f_C1IMR_p
_Z18icvAdd_8u32f_C3IMRPKhiS0_iPfi6CvSize
icvAdd_8u32f_C3IMR_p
_Z16icvAdd_32f_C3IMRPKfiPKhiPfi6CvSize
icvAdd_32f_C3IMR_p
_Z24icvAddSquare_8u32f_C3IMRPKhiS0_iPfi6CvSize
icvAddSquare_8u32f_C3IMR_p
_Z22icvAddSquare_32f_C3IMRPKfiPKhiPfi6CvSize
icvAddSquare_32f_C3IMR_p
_Z25icvAddProduct_8u32f_C3IMRPKhiS0_iS0_iPfi6CvSize
icvAddProduct_8u32f_C3IMR_p
_Z23icvAddProduct_32f_C3IMRPKfiS0_iPKhiPfi6CvSize
icvAddProduct_32f_C3IMR_p
_Z26icvAddWeighted_8u32f_C3IMRPKhiS0_iPfi6CvSizef
icvAddWeighted_8u32f_C3IMR_p
_Z24icvAddWeighted_32f_C3IMRPKfiPKhiPfi6CvSizef
icvAddWeighted_32f_C3IMR_p
cvRunningAvg
cvGetMat
cvGetErrStatus
cvError
cvErrorFromIppStatus
cvMultiplyAcc
cvSquareAcc
cvAcc
__gxx_personality_v0
cvReleaseMat
cvSmooth
cvSetZero
cvCreateMat
cvAdaptiveThreshold
cvApproxPoly
cvPointSeqFromMat
cvStartWriteSeq
cvCreateChildMemStorage
cvCreateSeq
cvStartReadSeq
cvSetSeqReaderPos
cvSeqPop
cvSeqPush
cvEndWriteSeq
cvReleaseMemStorage
cvBoundingRect
cvSeqPopMulti
cvChangeSeqBlock
cvCreateSeqBlock
cvGetSeqElem
cvGetSeqReaderPos
_Z23icvApproximateChainTC89P7CvChainiP12CvMemStoragePP5CvSeqi
cvStartReadChainPoints
cvFree_
cvAlloc
cvApproxChains
cvCalcImageHomography
cvNorm
cvConvertScale
cvCrossProduct
cvDotProduct
cvSetIdentity
cvSub
cvGEMM
cvScaleAdd
cvInvert
cvDrawChessboardCorners
cvLine
cvCircle
cvStartFindContours
cvFindNextContour
cvEndFindContours
cvCheckContourConvexity
cvArcLength
cvContourArea
cvCreateMemStorage
cvConvexHull2
cvClearMemStorage
memcpy
cvFindChessboardCorners
cvDilate
cvRectangle
cvEqualizeHist
cvCvtColor
cvAvg
cvThreshold
_Z5cvMatiiiPv
cvMulTransposed
cvSVD
cvSVBkSb
cvFindHomography
cvConvertPointsHomogenious
cvGetCols
sqrt
cvRodrigues2
cvTranspose
cvCopy
cvCheckArr
acos
sincos
cvProjectPoints2
cvFindExtrinsicCameraParams2
cvReshape
cvDet
cvAdd
cvCalibrateCamera2
__sprintf_chk
cvAvgSdv
cvGetSubRect
cvGetRows
cvMeanShift
cvCheckTermCriteria
cvMoments
cvCamShift
atan2
cvCanny
cvSobel
icvCannyGetSize_p
icvCanny_16s8u_C1R_p
memset
icvFilterSobelVert_8u16s_C1R_p
cvPow
icvXYZ2RGB_32f_C3R_p
icvHLS2RGB_32f_C3R_p
icvXYZ2RGB_16u_C3R_p
icvXYZ2RGB_8u_C3R_p
icvLab2BGR_8u_C3R_p
icvLuv2RGB_8u_C3R_p
icvHSV2RGB_8u_C3R_p
icvHLS2RGB_8u_C3R_p
icvRGB2XYZ_32f_C3R_p
icvRGB2HLS_32f_C3R_p
icvRGB2XYZ_16u_C3R_p
icvRGB2XYZ_8u_C3R_p
icvRGB2HSV_8u_C3R_p
icvSaturate8u_cv
icvRGB2Luv_8u_C3R_p
icvRGB2HLS_8u_C3R_p
cvCbrt
icvBGR2Lab_8u_C3R_p
_Z10cvRandInitP11CvRandStateddii
cvConDensInitSampleSet
cvRandArr
cvReleaseConDensation
cvCreateConDensation
cvConDensUpdateByTime
cvSubstituteContour
cvReadChainPoint
cvInsertNodeIntoTree
cvSaveMemStoragePos
cvRestoreMemStoragePos
cvCreateSet
cvStartAppendToSeq
cvFlushSeqWriter
cvSetAdd
cvFindContours
cvCvtSeqToArray
cvCreateContourTree
cvContourFromContourTree
cvConvexityDefects
cvMakeSeqHeaderForArray
cvSeqElemIdx
cvClearSeq
_Unwind_Resume
cvPreCornerDetect
_ZN11CvSepFilterC1Ev
_ZN11CvSepFilterD1Ev
icvFilterSobelHoriz_8u16s_C1R_p
icvFilterSobelVertSecond_8u16s_C1R_p
icvFilterSobelHorizSecond_8u16s_C1R_p
icvFilterSobelCross_8u16s_C1R_p
_Z16icvIPPFilterInitPK5CvMati6CvSize
_ZN17CvBaseImageFilter7processEPK5CvMatPS0_6CvRect7CvPointi
_Z22icvIPPFilterNextStripePK5CvMatPS_i6CvSize7CvPoint
_ZN11CvSepFilter10init_derivEiiiiiii
icvFilterSobelVert_32f_C1R_p
icvFilterSobelHoriz_32f_C1R_p
icvFilterSobelVertSecond_32f_C1R_p
icvFilterSobelHorizSecond_32f_C1R_p
icvFilterSobelCross_32f_C1R_p
_ZN11CvBoxFilterC1Ev
_ZN11CvBoxFilterD1Ev
icvFilterScharrVert_8u16s_C1R_p
icvFilterScharrHoriz_8u16s_C1R_p
_ZN11CvBoxFilter4initEiiib6CvSize7CvPointi8CvScalar
icvFilterScharrVert_32f_C1R_p
icvFilterScharrHoriz_32f_C1R_p
cvCornerEigenValsAndVecs
cvCornerHarris
cvCornerMinEigenVal
cvFindCornerSubPix
_Z26icvGetRectSubPix_8u32f_C1RPKhi6CvSizePfiS1_12CvPoint2D32f
_Z20icvSepConvSmall3_32fPfiS_i6CvSizePKfS2_S_
cvInitMatHeader
_ZN15CvLaplaceFilter15get_work_paramsEv
_ZN15CvLaplaceFilter4initEiiiPK5CvMatS2_7CvPointi8CvScalar
_ZN11CvSepFilter4initEiiiPK5CvMatS2_7CvPointi8CvScalar
_ZN15CvLaplaceFilter4initEiiib6CvSize7CvPointi8CvScalar
_ZN11CvSepFilter4initEiiib6CvSize7CvPointi8CvScalar
_ZN15CvLaplaceFilter4initEiiibii8CvScalar
_ZN11CvSepFilter17init_sobel_kernelEP5CvMatS1_iii
_ZN15CvLaplaceFilterD1Ev
_ZTV15CvLaplaceFilter
_ZN11CvSepFilter5clearEv
_ZN11CvSepFilterD2Ev
_ZN15CvLaplaceFilterD2Ev
_ZN15CvLaplaceFilterD0Ev
_ZdlPv
_ZN15CvLaplaceFilterC1Eiiibii8CvScalar
_ZN11CvSepFilterC2Ev
_ZN15CvLaplaceFilterC2Eiiibii8CvScalar
_ZN15CvLaplaceFilterC1Ev
cvLaplace
icvFilterLaplacianBorder_32f_C1R_p
icvFilterLaplacianGetBufSize_32f_C1R_p
icvFilterLaplacianBorder_8u16s_C1R_p
icvFilterLaplacianGetBufSize_8u16s_C1R_p
_ZN15CvLaplaceFilterC2Ev
icvFilterSobelNegVertBorder_8u16s_C1R_p
icvFilterSobelNegVertGetBufSize_8u16s_C1R_p
cvSubRS
icvFilterSobelHorizBorder_8u16s_C1R_p
icvFilterSobelHorizGetBufSize_8u16s_C1R_p
icvFilterSobelCrossBorder_8u16s_C1R_p
icvFilterSobelCrossGetBufSize_8u16s_C1R_p
icvFilterSobelNegVertBorder_32f_C1R_p
icvFilterSobelNegVertGetBufSize_32f_C1R_p
icvFilterScharrVertBorder_8u16s_C1R_p
icvFilterScharrVertGetBufSize_8u16s_C1R_p
icvFilterSobelHorizBorder_32f_C1R_p
icvFilterSobelHorizGetBufSize_32f_C1R_p
icvFilterSobelVertSecondBorder_8u16s_C1R_p
icvFilterSobelVertSecondGetBufSize_8u16s_C1R_p
icvFilterScharrHorizBorder_8u16s_C1R_p
icvFilterScharrHorizGetBufSize_8u16s_C1R_p
icvFilterScharrVertBorder_32f_C1R_p
icvFilterScharrVertGetBufSize_32f_C1R_p
icvFilterScharrHorizBorder_32f_C1R_p
icvFilterScharrHorizGetBufSize_32f_C1R_p
icvFilterSobelVertSecondBorder_32f_C1R_p
icvFilterSobelVertSecondGetBufSize_32f_C1R_p
icvFilterSobelHorizSecondBorder_8u16s_C1R_p
icvFilterSobelHorizSecondGetBufSize_8u16s_C1R_p
icvFilterSobelHorizSecondBorder_32f_C1R_p
icvFilterSobelHorizSecondGetBufSize_32f_C1R_p
icvFilterSobelCrossBorder_32f_C1R_p
icvFilterSobelCrossGetBufSize_32f_C1R_p
_ZTI15CvLaplaceFilter
_ZN17CvBaseImageFilter13start_processE7CvSlicei
_ZN17CvBaseImageFilter13make_y_borderEiii
_ZN17CvBaseImageFilter18fill_cyclic_bufferEPKhiiii
_ZN11CvSepFilter13init_gaussianEiiiid
_ZTS15CvLaplaceFilter
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTI11CvSepFilter
cvGetNumThreads
cvGetThreadNum
cvDistTransform
cvCmpS
cvDrawContours
icvDistanceTransform_5x5_8u32f_C1R_p
__memcpy_chk
icvDistanceTransform_3x3_8u32f_C1R_p
cvFindDominantPoints
sqrtf
cvCalcEMD2
cvGoodFeaturesToTrack
cvMinMaxLoc
_ZN17CvBaseImageFilterC2Ev
_ZTV17CvBaseImageFilter
_ZN17CvBaseImageFilterC1Ev
_ZN17CvBaseImageFilter15get_work_paramsEv
_ZTV11CvSepFilter
_ZN14CvLinearFilterC2Ev
_ZTV14CvLinearFilter
_ZN14CvLinearFilterC1Ev
_ZN11CvSepFilter18init_scharr_kernelEP5CvMatS1_iii
_Z15icvIPPSepFilterPK5CvMatPS_S1_S1_7CvPoint
icvFilterRow_8u_C1R_p
icvFilterColumn_8u_C1R_p
_Z25icvCopyReplicateBorder_8uPKhi6CvSizePhiS1_iiiS0_
icvFilterRow_32f_C4R_p
icvFilterColumn_32f_C4R_p
icvFilterRow_8u_C3R_p
icvFilterColumn_8u_C3R_p
icvFilterRow_32f_C1R_p
icvFilterColumn_32f_C1R_p
icvFilterRow_16s_C4R_p
icvFilterColumn_16s_C4R_p
icvFilterRow_32f_C3R_p
icvFilterColumn_32f_C3R_p
icvFilterRow_8u_C4R_p
icvFilterColumn_8u_C4R_p
icvFilterRow_16s_C3R_p
icvFilterColumn_16s_C3R_p
icvFilterRow_16s_C1R_p
icvFilterColumn_16s_C1R_p
_ZN17CvBaseImageFilter5clearEv
_ZN17CvBaseImageFilterD1Ev
_ZN17CvBaseImageFilterD2Ev
_ZN14CvLinearFilter5clearEv
_ZN14CvLinearFilterD1Ev
_ZN14CvLinearFilterD2Ev
_ZN17CvBaseImageFilterD0Ev
_ZN14CvLinearFilterD0Ev
_ZN11CvSepFilterD0Ev
_ZN11CvSepFilter20init_gaussian_kernelEP5CvMatd
_ZN17CvBaseImageFilter4initEiiib6CvSize7CvPointi8CvScalar
cvScalarToRawData
_ZN14CvLinearFilter4initEiiib6CvSize7CvPointi8CvScalar
_ZN14CvLinearFilter4initEiiiPK5CvMat7CvPointi8CvScalar
cvFilter2D
_Z12icvCrossCorrPKvS0_Pv7CvPoint
icvFilter_8u_C1R_p
icvFilter_8u_C3R_p
icvFilter_8u_C4R_p
icvFilter_16s_C1R_p
icvFilter_16s_C3R_p
icvFilter_16s_C4R_p
cvCloneMat
icvFilter_32f_C1R_p
icvFilter_32f_C4R_p
icvFilter_32f_C3R_p
_ZN14CvLinearFilterC1EiiiPK5CvMat7CvPointi8CvScalar
_ZN14CvLinearFilterC2EiiiPK5CvMat7CvPointi8CvScalar
_ZN11CvSepFilterC1EiiiPK5CvMatS2_7CvPointi8CvScalar
_ZN11CvSepFilterC2EiiiPK5CvMatS2_7CvPointi8CvScalar
_ZN17CvBaseImageFilterC1Eiiib6CvSize7CvPointi8CvScalar
_ZN17CvBaseImageFilterC2Eiiib6CvSize7CvPointi8CvScalar
_ZTI14CvLinearFilter
_ZTI17CvBaseImageFilter
_ZTS14CvLinearFilter
_ZTS11CvSepFilter
_ZTS17CvBaseImageFilter
_ZTVN10__cxxabiv117__class_type_infoE
cvFloodFill
cvSet
cvDiv
cvComputeCorrespondEpilines
cvSolveCubic
cvFindFundamentalMat
memmove
cvMaxRect
_Z17icvIntersectLinesddddddddPd
_Z25icvCreateCenterNormalLinejPdS_S_
_Z18icvIntersectLines3PdS_S_S_S_S_P12CvPoint2D32f
cvBoxPoints
cvPointPolygonTest
_Z24icvEvalHidHaarClassifierP19CvHidHaarClassifierdj
haar_type
cvReleaseHaarClassifierCascade
_ZN6CvTypeC1EPKcPFiPKvEPFvPPvEPFS6_P13CvFileStorageP10CvFileNodeEPFvSB_S1_S3_10CvAttrListEPFS6_S3_E
_ZN6CvTypeD1Ev
__cxa_atexit
cvStartWriteStruct
cvWriteInt
cvEndWriteStruct
cvWriteComment
cvWriteReal
icvHaarClassifierFree_32f_p
cvGetFileNodeByName
cvLoadHaarClassifierCascade
strlen
fseek
ftell
fclose
fopen
cvLoad
fread
sscanf
icvHaarClassifierInitAlloc_32f_p
icvApplyHaarClassifier_32s32f_C1R_p
icvRectStdDev_32s32f_C1R_p
cvSetImagesForHaarClassifierCascade
cvRunHaarClassifierCascade
cvHaarDetectObjects
cvResize
cvIntegral
cvSeqPartition
hist_type
cvReleaseHist
cvWrite
cvGetDims
cvWriteRawData
cvSetHistBinRanges
cvMakeHistHeaderForArray
cvInitMatNDHeader
cvRead
cvStartReadRawData
cvReadRawDataSlice
cvCalcProbDensity
cvInitNArrayIterator
cvNextNArraySlice
cvClearHist
cvCalcBayesianProb
cvMul
cvPtrND
cvCalcArrBackProject
cvCompareHist
cvGetRawData
cvInitSparseMatIterator
cvGetMinMaxHistValue
cvNormalizeHist
cvSum
cvThreshHist
cvReleaseData
cvRelease
cvCreateHist
cvCreateData
cvCreateSparseMat
cvCopyHist
cvCalcArrHist
cvGetElemType
cvGetSize
cvPtr1D
cvLUT
cvCalcArrBackProjectPatch
cvGetImage
_Z15h_is_pos__index4_pos
_Z17h_add_head__indexP5_listP7__index
cvSeqPushMulti
cvHoughCircles
cvFastArctan
cvHoughLines2
_Z21icvInitLinearCoeffTabv
icvLinearCoeffs
_Z20icvInitCubicCoeffTabv
icvCubicCoeffs
cvRemap
icvRemap_8u_C1R_p
icvRemap_8u_C3R_p
icvRemap_32f_C1R_p
icvRemap_8u_C4R_p
icvRemap_32f_C4R_p
icvRemap_32f_C3R_p
cvLogPolar
cvCartToPolar
cvLog
icvResize_8u_C1R_p
icvResize_32f_C4R_p
icvResize_8u_C3R_p
icvResize_8u_C4R_p
icvResize_16u_C1R_p
icvResize_16u_C3R_p
icvResize_16u_C4R_p
icvResize_32f_C1R_p
icvResize_32f_C3R_p
cv2DRotationMatrix
cvWarpPerspective
icvWarpPerspectiveBack_8u_C1R_p
icvWarpPerspectiveBack_32f_C4R_p
icvWarpPerspectiveBack_8u_C4R_p
icvWarpPerspectiveBack_8u_C3R_p
icvWarpPerspectiveBack_32f_C3R_p
icvWarpPerspectiveBack_32f_C1R_p
icvWarpPerspective_32f_C4R_p
icvWarpPerspective_32f_C3R_p
icvWarpPerspective_32f_C1R_p
icvWarpPerspective_8u_C4R_p
icvWarpPerspective_8u_C3R_p
icvWarpPerspective_8u_C1R_p
cvWarpAffine
icvWarpAffineBack_8u_C1R_p
icvWarpAffineBack_32f_C4R_p
icvWarpAffineBack_8u_C3R_p
icvWarpAffineBack_8u_C4R_p
icvWarpAffineBack_32f_C3R_p
icvWarpAffineBack_32f_C1R_p
cvGetPerspectiveTransform
cvSolve
cvGetAffineTransform
_ZN20CvPriorityQueueFloat3AddEPK5CvMat
_ZN20CvPriorityQueueFloat4InitEPK5CvMat
_Z18FastMarching_solveiiiiPK5CvMatS1_
cvInpaint
cvReleaseStructuringElement
cvCreateStructuringElementEx
_Znwj
cvKalmanPredict
cvKalmanCorrect
cvReleaseKalman
cvCreateKalman
sincosf
expf
cvEigenVV
cvFitLine
cvSetData
cvPyrDown
cvCalcOpticalFlowPyrLK
icvOpticalFlowPyrLKInitAlloc_8u_C1R_p
icvOpticalFlowPyrLKFree_8u_C1R_p
icvOpticalFlowPyrLK_8u_C1R_p
cvMatchShapes
cvGetHuMoments
log10
cvMatchContourTrees
cvGetCentralMoment
cvGetNormalizedCentralMoment
cvGetSpatialMoment
icvMomentFree_64f_p
icvMoments_8u_C1R_p
icvMomentInitAlloc_64f_p
icvGetSpatialMoment_64f_p
icvMoments_32f_C1R_p
_ZN12CvMorphology19init_binary_elementEP5CvMati7CvPoint
_ZN12CvMorphology18fill_cyclic_bufferEPKhiiii
_ZN12CvMorphology13start_processE7CvSlicei
_ZN12CvMorphology4initEiiib6CvSize7CvPointi8CvScalar
_ZN12CvMorphology4initEiiiiP5CvMat6CvSize7CvPointi8CvScalar
cvCountNonZero
_ZN12CvMorphology5clearEv
_ZN12CvMorphologyD0Ev
_ZTV12CvMorphology
_ZN12CvMorphologyD1Ev
_ZN12CvMorphologyD2Ev
_ZN12CvMorphologyC1EiiiiP5CvMat6CvSize7CvPointi8CvScalar
_ZN12CvMorphologyC2EiiiiP5CvMat6CvSize7CvPointi8CvScalar
_ZN12CvMorphologyC1Ev
icvMorphFree_p
icvErodeRect_GetBufSize_8u_C1R_p
icvErodeRect_8u_C1R_p
icvDilateRect_GetBufSize_8u_C1R_p
icvDilateRect_8u_C1R_p
icvMorphInitAlloc_8u_C1R_p
icvErode_8u_C1R_p
icvDilateRect_GetBufSize_32f_C4R_p
icvDilateRect_32f_C4R_p
icvErodeRect_GetBufSize_32f_C4R_p
icvErodeRect_32f_C4R_p
icvErodeRect_GetBufSize_8u_C3R_p
icvErodeRect_8u_C3R_p
icvDilateRect_GetBufSize_8u_C3R_p
icvDilateRect_8u_C3R_p
icvDilate_8u_C1R_p
icvErodeRect_GetBufSize_8u_C4R_p
icvErodeRect_8u_C4R_p
icvDilateRect_GetBufSize_8u_C4R_p
icvDilateRect_8u_C4R_p
icvMorphInitAlloc_8u_C3R_p
icvErode_8u_C3R_p
icvErodeRect_GetBufSize_32f_C1R_p
icvErodeRect_32f_C1R_p
icvDilateRect_GetBufSize_32f_C1R_p
icvDilateRect_32f_C1R_p
icvMorphInitAlloc_8u_C4R_p
icvErode_8u_C4R_p
icvDilateRect_GetBufSize_32f_C3R_p
icvDilateRect_32f_C3R_p
icvErodeRect_GetBufSize_32f_C3R_p
icvErodeRect_32f_C3R_p
icvDilate_8u_C3R_p
icvMorphInitAlloc_32f_C1R_p
icvErode_32f_C1R_p
icvDilate_8u_C4R_p
icvMorphInitAlloc_32f_C3R_p
icvErode_32f_C3R_p
icvDilate_32f_C1R_p
icvMorphInitAlloc_32f_C4R_p
icvErode_32f_C4R_p
icvDilate_32f_C3R_p
icvDilate_32f_C4R_p
cvErode
cvMorphologyEx
_ZN12CvMorphologyC2Ev
_ZTI12CvMorphology
_ZTS12CvMorphology
_Z33icvUpdateMotionHistory_8u32f_C1IRPKhiPfi6CvSizeff
icvUpdateMotionHistory_8u32f_C1IR_p
cvSegmentMotion
cvGetRow
cvCalcGlobalOrientation
cvCalcMotionGradient
cvUpdateMotionHistory
cvCalcOpticalFlowBM
cvCalcOpticalFlowHS
cvCalcOpticalFlowLK
cvCalcPGH
cvReleasePOSITObject
cvPOSIT
cvCreatePOSITObject
icvPyrDownGetBufSize_Gauss5x5_p
icvPyrDown_Gauss5x5_8u_C1R_p
icvPyrDown_Gauss5x5_8u_C3R_p
icvPyrDown_Gauss5x5_32f_C1R_p
icvPyrDown_Gauss5x5_32f_C3R_p
cvPyrUp
icvPyrUpGetBufSize_Gauss5x5_p
icvPyrUp_Gauss5x5_8u_C1R_p
icvPyrUp_Gauss5x5_8u_C3R_p
icvPyrUp_Gauss5x5_32f_C1R_p
icvPyrUp_Gauss5x5_32f_C3R_p
cvPyrSegmentation
cvMinAreaRect2
_Z23icvGetRectSubPix_8u_C1RPKhi6CvSizePhiS1_12CvPoint2D32f
icvCopySubpix_8u_C1R_p
_Z24icvGetRectSubPix_32f_C1RPKfi6CvSizePfiS1_12CvPoint2D32f
icvCopySubpix_32f_C1R_p
cvGetQuadrangleSubPix
cvGetRectSubPix
cvSampleLine
cvInitLineIterator
icvCopySubpix_8u32f_C1R_p
cvMemStorageAlloc
cvPyrMeanShiftFiltering
cvWatershed
cvSliceLength
cvMinEnclosingCircle
cvFitEllipse2
__memset_chk
_ZN11CvBoxFilter13start_processE7CvSlicei
_ZTV11CvBoxFilter
_ZN11CvBoxFilterD2Ev
_ZN11CvBoxFilterD0Ev
_ZN11CvBoxFilterC1Eiiib6CvSize7CvPointi8CvScalar
_ZN11CvBoxFilterC2Eiiib6CvSize7CvPointi8CvScalar
icvFilterMedian_8u_C1R_p
icvFilterBox_32f_C4R_p
icvFilterBox_8u_C1R_p
icvFilterMedian_8u_C4R_p
icvFilterMedian_8u_C3R_p
icvFilterBox_32f_C1R_p
icvFilterBox_8u_C4R_p
icvFilterBox_32f_C3R_p
icvFilterBox_8u_C3R_p
_ZN11CvBoxFilterC2Ev
_ZTI11CvBoxFilter
_ZTS11CvBoxFilter
cvSnakeImage
cvClearSubdivVoronoi2D
cvCalcSubdivVoronoi2D
cvInitSubdivDelaunay2D
cvClearSet
cvSubdiv2DLocate
cvFindNearestPoint2D
cvSubdivDelaunay2DInsert
cvCreateSubdiv2D
cvCreateGraph
icvSqrIntegral_8u32s64f_C1R_p
icvIntegral_8u32s_C1R_p
cv_module
_ZN8CvModuleC1EP12CvModuleInfo
_ZN8CvModuleD1Ev
icvCopyReplicateBorder_8u_C1R_p
icvCopyReplicateBorder_8u_C1IR_p
icvCopyReplicateBorder_16s_C1R_p
icvCopyReplicateBorder_16s_C1IR_p
icvCopyReplicateBorder_8u_C3R_p
icvCopyReplicateBorder_8u_C3IR_p
icvCopyReplicateBorder_32s_C1R_p
icvCopyReplicateBorder_32s_C1IR_p
icvCopyReplicateBorder_16s_C3R_p
icvCopyReplicateBorder_16s_C3IR_p
icvCopyReplicateBorder_16s_C4R_p
icvCopyReplicateBorder_16s_C4IR_p
icvCopyReplicateBorder_32s_C3R_p
icvCopyReplicateBorder_32s_C3IR_p
icvCopyReplicateBorder_32s_C4R_p
icvCopyReplicateBorder_32s_C4IR_p
icvCrossCorrValid_Norm_8u32f_C1R_p
icvCrossCorrValid_NormLevel_8u32f_C1R_p
icvSqrDistanceValid_Norm_8u32f_C1R_p
icvCrossCorrValid_Norm_32f_C1R_p
icvCrossCorrValid_NormLevel_32f_C1R_p
icvSqrDistanceValid_Norm_32f_C1R_p
icvCompareC_8u_C1R_cv_p
icvAndC_8u_C1R_p
icvThreshold_GTVal_8u_C1R_p
icvThreshold_GTVal_32f_C1R_p
icvThreshold_LTVal_8u_C1R_p
icvThreshold_LTVal_32f_C1R_p
icvUndistortGetSize_p
icvCreateMapCameraUndistort_32f_C1R_p
icvUndistortRadial_8u_C1R_p
icvUndistortRadial_8u_C3R_p
cvGetOptimalDFTSize
cvSplit
cvDFT
cvCopyMakeBorder
cvMulSpectrums
cvMerge
cvMatchTemplate
cvAndS
cvInitUndistortMap
cvUndistort2
libcxcore.so.1
libpthread.so.0
libdl.so.2
libstdc++.so.6
libm.so.6
libc.so.6
__stack_chk_fail
libgcc_s.so.1
_edata
__bss_start
_end
libcv.so.1
GCC_3.0
CXXABI_1.3
GLIBCXX_3.4
GLIBC_2.4
GLIBC_2.1
GLIBC_2.3.4
GLIBC_2.0
GLIBC_2.1.3
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
;FX~
l[^_]
[^_]
[^_]
<[^_]
<[^_]
BBtE
BBtN
BBt]
[^_]
[^_]
BBtH
BBt&
E 9E
U$9U
M(9M
E,9E
U09U
[^_]
BBt7
BBtR
BBtR
BBtR
BBtN
;E t
;E$t
;E(t
;E,t
[^_]
BBtW
[^_]
BBtT
BBtv
[^_]
[^_]
[^_]
gfff
} 9u
M 9u
M 9u
M 9u
M 9u
[^_]
[^_]
[^_]
[^_]
u9z?
[^_]
[^_]
40iE
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
L[^_]
[^_]
H[^_]
[^_]
[^_]
} ;u
} ;u
[^_]
} ;u
} ;u
[^_]
<[^_]
[^_]
|[^_]
uBz@
u!z#
X[^_]
[^_]
P[^_]
[^_]
l[^_]
[^_]
<[^_]
M ;u
M ;u
[^_]
[^_]
[^_]
[^_]
[^_]
,[^_]
,[^_]
[^_]
[^_]
 [^]
 [^]
;F t
;F$u
[^_]
[^_]
[^_]
B<)A
[^_]
[^_]
[^_]
U +U
u<z:
[^_]
,^_]
,^_]
 [^_]
 [^_
[^_]
[^_]
[^_]
[^_]
BBtA
[^_]
<[^_]
Btm=
[^_]
[^_]
\[^_]
[^_]
[^_]
,^_]
`^_]
`^_]
`^_]
L[^_]
L[^_]
L[^_]
8[^_]
8[^_]
8[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
 ^_]
yX9}
p^_]
G`+E
p^_]
BL;BP|
AH;A8
0^_]
$[^_]
(^_]
,^_]
(^_]
d[^_]
d[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
\[^_]
\[^_]
\[^_]
[^_]
[^_]
[^_]
,^_]
x[^_]
\[^_]
\[^_]
\[^_]
4[^_]
BBtC
BBtG
zh9}
HH;H8r
Rd)U
A<9E
BH;B8
A<9E
BBtU
[^_]
[^_]
[^_]
[^_]
l[^_]
[^_]
_p~e
~a9G`s\9Od
l[^_]
BBt@
\[^_]
@X;B
A\;B
[^_]
BBtF
L[^_]
L[^_]
[^_]
[^_]
;:t#
[^_]
[^_]
[^_]
[^_]
[^_]
BBt[
BBt>
BBtA
BBt"
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
BBtd
BBt>
BBtj
u6z4
`[^]
[^_]
[^_]
[^_]
[^_]
 [^]
\[^_]
[^_]
root
 nodf
[^_]
[^_]
[^_]
[^_]
[^_]
PBtU
[^_]
PBtE
[^_]
[^_]
 [^]
[^_]
[^_]
EBt@
[^_]
[^_]
[^_]
[^_]
[^_]
EBt;
[^_]
[^_]
[^_]
[^_]
EBtk
[^_]
EBtP
;B<~
EBt>
[^_]
[^_]
EBtU
[^_]
[^_]
EBtU
EBt@
 [^]
DBtx
 [^]
EBt@
[^_]
EBtC
[^_]
DBt'
[^_]
EBtY
[^_]
[^_]
~L;T
~F;T
BBtm
[^_]
~\W1
}$9~
u$z,
[^_]
;U ~,;T
~&;T
U$;r
M(9J
[^_]
[^_]
[^_]
M$;J
M$;J
E$;A
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
u,!E
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
M ;}
[^_]
[^_]
+E(;E
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
,[^_]
,[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
u?z=
\[^_]
uIzG
[^_]
[^_]
BBtx
[^_]
A4;@
;u8u
9}8|.
VUUU
VUUU
[^_]
[^_]
[^_]
,[^_]
,[^_]
[^_]
[^_]
[^_]
[^_]
T[^_]
T[^_]
X[^_]
X[^_]
P^_]
P^_]
48t0
|[^_]
|[^_]
|^_]
<^_]
<^_]
T^_]
T^_]
BBtK
[^_]
<[^_]
<[^_]
AL;AP|
BH;B8
<[^_]
<[^_]
FH)F8
|[^_]
L[^_]
L[^_]
[^_]
vP;u
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
u{zy
EBt?
\[^_]
\[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
9M$|2
9M$}
9M$|2
9U$u
9U$~I
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
BBt@
[^_]
[^_]
[^_]
[^_]
[^_]
|[^_]
|[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
(^_]
[^_]
d[^_]
X^_]
@^_]
<^_]
[^_]
FH)F8
[^_]
L[^_]
L[^_]
L[^_]
L[^_]
L[^_]
L[^_]
[^_]
D$D1
[^_]
$^_]
L[^_]
L[^_]
[^_]
[^_]
L[^_]
L[^_]
[^_]
<[^_]
<[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
EBtS
[^_]
[^_]
BBtt
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
BBtI
cvaccum.cpp
Inner function failed.
OpenCV function failed
Unsupported type combination
cvadapthresh.cpp
Neighborhood size must be >=3 and odd (3, 5, 7, ...)
Only CV_TRESH_BINARY and CV_THRESH_BINARY_INV threshold types are acceptable
Ycvapprox.cpp
Unsupported sequence type
NULL storage pointer 
Input curves have uknown type
Unknown approximation method
Accuracy must be non-negative
header_size is negative. Pass 0 to make the destination header_size == input header_size
Input curves are not polygonal. Use cvApproxChains first
New header size must be non-less than sizeof(CvContour)
?cvcalcimagehomography.cpp
cvcalibinit.cpp
Null pointer to corners
Number of channels must be 1, 3 or 4
Only 8-bit, 16-bit or floating-point 32-bit images are supported
Assertion: out_corners && out_quads failed
Only 8-bit grayscale or color images are supported
pattern should have at least 2x2 size
?333333
?cvcalibration.cpp
JtJ is not a valid matrix
JtErr is not a valid matrix
JtJW is not a valid matrix
JtJV is not a valid matrix
Homography matrix must be 3x3
Jacobian must be 3x9 or 9x3
Some of required arguments is not a valid matrix
one of arguments is not a valid matrix
Homography matrix must have 32fC1 or 64fC1 type
Numbers of image and object points do not match
Both object points and image points must be 2D
object points and image points must be a single-row matrices
Input argument is not a valid matrix
The first output argument is not a valid matrix
The matrices must have 32f or 64f data type
All the matrices must have the same data type
Jacobian is not a valid matrix
Jacobian must have 32fC1 or 64fC1 datatype
Input matrix must be 1x3, 3x1 or 3x3
Output matrix must be 3x3, single-channel floating point matrix
Output matrix must be 1x3 or 3x1
One of required arguments is not a valid matrix
Rotation must be represented by 1x3 or 3x1 floating-point rotation vector, or 3x3 rotation matrix
Translation vector must be 1x3 or 3x1 floating-point vector
Instrinsic parameters must be 3x3 floating-point matrix
Distortion coefficients must be 1x4 or 4x1 floating-point vector
dp/drot must be 2Nx3 floating-point matrix
dp/dT must be 2Nx3 floating-point matrix
dp/df must be 2Nx2 floating-point matrix
dp/dc must be 2Nx2 floating-point matrix
dp/df must be 2Nx4 or 2Nx2 floating-point matrix
dist_coeffs is NULL while dpdk is not
Rotation vector must be 1x3 or 3x1 floating-point vector
One of required vector arguments is not a valid matrix
image width and height must be positive
the array of point counters must be 1-dimensional integer vector
the output array of rotation vectors must be 3-channel 1xn or nx1 array or 1-channel nx3 or nx9 array, where n is the number of views
the output array of translation vectors must be 3-channel 1xn or nx1 array or 1-channel nx3 array, where n is the number of views
Intrinsic parameters must be 3x3 floating-point matrix
Distortion coefficients must be 4x1 or 1x4 floating-point matrix
The number of points in the view #%d is <4
Object points must be 1xn or nx1, 2- or 3-channel matrix, or nx3 or nx2 single-channel matrix
Image points must be 1xn or nx1, 2-channel matrix, or nx2 single-channel matrix
Focal length (fx and fy) must be positive
Principal point must be within the image
Non-zero skew is not supported by the function
The intrinsic matrix must have [fx 0 cx; 0 fy cy; 0 0 1] shape
For non-planar calibration rigs the initial intrinsic matrix must be specified
The specified aspect ratio (=a(0,0)/a(1,1)) is incorrect
MbP?
q=333333
?cvcamshift.cpp
Unsupported format
Input window has non-positive sizes
Initial window is not inside the image ROI
!	@cvcanny.cpp
cvcolor.cpp
Incorrect number of channels for this conversion code
Conversion to/from 16-bit packed RGB format is only possible for 8-bit images (8-bit grayscale, 888 BGR/RGB or 8888 BGRA/RGBA)
Conversion to/from 16-bit packed BGR format is only possible for 8-bit images (8-bit grayscale, 888 BGR/BGR or 8888 BGRA/BGRA)
Conversion to/from 16-bit packed BGR format is only possible for 8-bit images (888 BGR/BGR or 8888 BGRA/BGRA)
Bayer pattern can be converted only to 8-bit 3-channel BGR/RGB image
Unknown/unsupported color conversion code
The image format is not supported
!"#%&()+,-/0234679:<=>@ACDEGHJKMNOQRTUVXY[\^_`bcefgijlmopqstvwxz{}~
  !"##$%%&'(()**+,,-.//01123445667889:;;<==>?@@ABBCDDEFGGHIIJKLLMNNOPPQRSSTUUVWXXYZZ[\\]^__`aabcddeffghhijkklmmnoppqrrsttuvwwxyyz{||}~~
33#@
#h8?
6?Nb
?)!x
Bs?Vb
;EbB>
m_?z5
Acvcompat.h
Null pointer to RNG state
cvRandInit
Unknown distribution type
cvcondens.cpp
cvRand
source  has not appropriate format
source  has not appropriate size
@cvcontours.cpp
NULL storage pointer
NULL double CvSeq pointer
[Start]FindContours support only 8uC1 images
Contour header size must be >= sizeof(CvContour)
Input array must be 8uC1 or 8sC1
Nonzero offset is not supported in CV_LINK_RUNS yet
cvcontourtree.cpp
Acvconvhull.cpp
Internal error
Input sequence must be polygon (closed 2d curve)
Input sequence is not a sequence of points
Floating-point coordinates are not supported here
Convex hull must represented as a sequence of indices or sequence of pointers
Convex hull is neither sequence nor matrix
The matrix should be 1-dimensional and continuous array of int's
Convex hull is larger than the point sequence
Destination must be valid memory storage or matrix
The hull matrix should be continuous and have a single row or a single column
The hull matrix size might be not enough to fit the hull
The hull matrix must have the same type as input or 32sC1 (integers)
Point sequence can not be empty if the output is matrix
cvcorner.cpp
Input must be 8uC1 or 32fC1, output must be 32fC1
CV_SCHARR is not supported by this function
Derivative filter aperture size must be 3, 5 or 7
averaging window size must be an odd number >= 3
Derivative filter aperture size must be a positive odd number >=3 or CV_SCHARR
Output array should be 6 times wider than the input array and they should have the same height
<cvcornersubpix.cpp
?cvderiv.cpp
Laplacian can either transform 8u->16s, or 8u->32f, or 32f->32f.
The channel number must be the same.
kernel size must be within 1..7 and odd
src and dst have different sizes
Scharr filter can only be used to compute 1st image derivatives
15CvLaplaceFilter
cvdistransform.cpp
The input image must have 8uC1 type and the output one must have 32fC1 type
source image must be 8uC1 and the distance map must be 32fC1
the source and the destination images must be of the same size
Mask size should be 3 or 5 or 0 (presize)
the output array of labels must be 32sC1
the array of labels has a different size
3x3 mask can not be used for "labeled" distance transform. Use 5x5 mask
7cvdominants.cpp
!	@cvemd.cpp
The signatures must be 32fC1
The flow matrix must be 32fC1
The cost matrix must be 32fC1
The arrays must have equal number of columns (which is number of dimensions but 1)
The array must have equal types
The flow matrix size does not match to the signatures' sizes
Only one of cost matrix or distance function should be non-NULL in case of user-defined distance
The lower boundary can not be calculated if the cost matrix is used
The cost matrix size does not match to the signatures' sizes
In case of user-defined distance Distance function is undefined
Number of dimensions can be 0 only if a user-defined metric is used
Bad or unsupported metric type
`cvfeatureselect.cpp
maximal corners number is non positive
quality level or min distance are non positive
cvfilter.cpp
Too large kernel size
Incorrect aperture_size
kernel is not a valid matrix
kernel is not valid matrix
Unsupported image type
anchor point is out of kernel
One of the kernel matrices is not valid
Scharr kernel can only be used for 1st order derivatives
Both kernels must be 1D floating-point or integer vectors containing 3 elements each.
Integer kernel can not be normalized
Too large source image or its ROI
Incorrect destination ROI origin
In a middle or at the end the horizontal placement of the stripe can not be changed
The destination image can not fit the result
Both derivative orders (dx and dy) must be non-negative and at least one of them must be positive.
Both kernels must be 1D floating-point or integer vectors of odd (2*k+1) size.
Derivative order must be smaller than the corresponding kernel size
Internal Error: incorrect parameters
kernel should be 1D floating-point vector of odd (2*k+1) size
Incorrect size of gaussian kernel
invalid kernel size and/or anchor position
Invalid/unsupported border mode
The source and destination image types must be the same
Both kernels must be valid 1d single-channel vectors of the same types
Input and output must have the same number of channels
8u->64f separable filtering is not supported
16u->64f separable filtering is not supported
16s->64f separable filtering is not supported
When the input has 32f data type, the output must also have 32f type
Unknown or unsupported input data type
14CvLinearFilter
11CvSepFilter
17CvBaseImageFilter
H7333333
?cvfloodfill.cpp
Connectivity must be 4, 0(=4) or 8
lo_diff and up_diff must be non-negative
Seed point is outside of image
mask must be 2 pixel wider and 2 pixel taller than filled image
cvfundam.cpp
Invalid inplace operation
fmatrix is not a valid matrix
points0 is not a valid matrix
points1 is not a valid matrix
The input parameter is not a valid matrix
The output parameter is not a valid matrix
Either the number of channels or columns or rows must be =1
Either the number of channels or columns or rows in the input matrix must be =1
Either the number of channels or columns or rows in the output matrix must be =1
Both matrices must have the same number of points
Both matrices must be floating-point (single or double precision)
Both input and output point dimensionality must be 2, 3 or 4
The dimensionalities of input and output point sets differ too much
points parameter is not a valid matrix
The format of point matrix is unsupported
The point matrix does not have a proper layout (2xn, 3xn, nx2 or nx3)
The dimensionality of points must be 2 or 3
fundamental matrix must have 32fC1 or 64fC1 type
fundamental matrix must be 3x3
lines parameter is not a valid matrix
The format of the matrix of lines is unsupported
The lines matrix does not have a proper layout (3xn or nx3)
The numbers of points and lines are different
The matrices of points should have the same data type
The matrices of points should have the same size
The format of point matrices is unsupported
The point matrices do not have a proper layout (2xn, 3xn, nx2 or nx3)
The number of points must be 7 for 7-point algorithm, >=8 for 8-point algorithm and >=7 for other algorithms
fundamental matrix must be 3x3 or 3x9 (for 7-point method only)
The output status is not a valid matrix
The status matrix must have the same size as the point matrices
param1 (threshold) must be > 0
param2 (confidence level) must be between 0 and 1
?cvgeometry.cpp
NULL vertex array pointer
Chains are not supported. Convert them to polygonal representation using cvApproxChains()
Input contour is neither a valid sequence nor a matrix
opencv-haar-classifier
cvhaar.cpp
stages
trees
tree %d
node %d
feature
rects
tilted
left_node
left_val
right_node
right_val
stage_threshold
parent
next
Invalid stages node
Invalid stage %d
Null path is passed
Invalid path
%d%d%d%d%d%f%n
%s%n
%f%d%d%n
Invalid classifier pointer
Scale must be positive
COI is not supported
Invalid cascade pointer
Invalid classifier cascade
Null storage pointer
Number of stages should be positive
size node is not a valid sequence.
Invalid size node: width must be positive integer
Invalid size node: height must be positive integer
Trees node is not a valid sequence. (stage %d)
Tree node is not a valid sequence. (stage %d, tree %d)
Tree node %d is not a valid map. (stage %d, tree %d)
Feature node is not a valid map. (stage %d, tree %d, node %d)
Rects node is not a valid sequence. (stage %d, tree %d, node %d)
Rect %d is not a valid sequence. (stage %d, tree %d, node %d)
x coordinate must be non-negative integer. (stage %d, tree %d, node %d, rect %d)
y coordinate must be non-negative integer. (stage %d, tree %d, node %d, rect %d)
width must be positive integer and (x + width) must not exceed window width. (stage %d, tree %d, node %d, rect %d)
height must be positive integer and (y + height) must not exceed window height. (stage %d, tree %d, node %d, rect %d)
weight must be real number. (stage %d, tree %d, node %d, rect %d)
tilted must be 0 or 1. (stage %d, tree %d, node %d)
threshold must be real number. (stage %d, tree %d, node %d)
left node must be valid node number. (stage %d, tree %d, node %d)
left node or left value must be specified. (stage %d, tree %d, node %d)
left value must be real number. (stage %d, tree %d, node %d)
Tree structure is broken: too many values. (stage %d, tree %d, node %d)
right node must be valid node number. (stage %d, tree %d, node %d)
right node or right value must be specified. (stage %d, tree %d, node %d)
right value must be real number. (stage %d, tree %d, node %d)
Tree structure is broken: too few values. (stage %d, tree %d)
stage threshold must be real number. (stage %d)
parent must be integer number. (stage %d)
next must be integer number. (stage %d)
%s%s%d/AdaBoostCARTHaarClassifier.txt
%s/%d/AdaBoostCARTHaarClassifier.txt
hid_cascade has been already created
Negative number of cascade stages
header of the stage classifier #%d is invalid (has null pointers or non-positive classfier count)
rectangle #%d of the classifier #%d of the stage classifier #%d is not inside the reference (original) cascade window
All integral images must have the same size
Only (32s, 64f, 32s) combination of (sum,sqsum,tilted_sum) formats is allowed
Sum and tilted_sum must have the same stride (step, widthStep)
Hidden cascade has not been created.
Use cvSetImagesForHaarClassifierCascade
Only 8-bit images are supported
333333
?ffffff
HBopencv-hist
is_uniform
have_ranges
bins
cvhistogram.cpp
Unknown Histogram Type
thresh
NULL ranges pointer
Invalid histogram header
Null histogram header pointer
Null data pointer
Expected CvMatND
Unknown Histogram type
'thresh' node is missing
scale must be positive
Invalid histogram pointer[s]
NULL histogram array pointer
Bad histogram pointer
Null double array pointer
Unsupported array type
Invalid histogram header[s]
Unknown comparison method
Null <sizes> pointer
Invalid histogram type
Bad mask array
One of <ranges> elements is NULL
Bin ranges should go in ascenting order
Only uniform bin ranges can be used here (to avoid memory allocation)
All histograms must have 32fC1 type
Too small number of histograms
The function supports dense histograms only
Only 1-channel arrays are allowed here
Not all the planes have equal sizes
Not all the planes have equal steps
Not all the planes have equal types
histogram ranges must be set (via cvSetHistBinRanges) before calling the function
One of histograms is sparse and other is not
The histograms have different numbers of dimensions
The histograms have different sizes
Number of dimensions is out of range
Destination double pointer is NULL
Mask size does not match to other arrays' size
Only 8uC1 images are supported
Bad normalization factor (set it to 1.0 if unsure)
The patch width and height must be positive
Resultant image must have 32fC1 type
The output map must be (W-w+1 x H-h+1), where the input images are (W x H) each and the patch is (w x h)
cvhough.cpp
NULL destination
Unrecognized method id
Assertion: CV_IS_MAT(img) && CV_MAT_TYPE(img->type) == CV_8UC1 failed
Assertion: CV_IS_MAT(image) && CV_MAT_TYPE(image->type) == CV_8UC1 failed
The source image must be 8-bit, single-channel
dp, min_dist, canny_threshold and acc_threshold must be all positive numbers
The destination matrix should be continuous and have a single row or a single column
Destination is not CvMemStorage* nor CvMat*
Assertion: linesMax > 0 && rho > 0 && theta > 0 failed
rho, theta and threshold must be positive
The destination matrix data type is inappropriate, see the manual
?cvimgwarp.cpp
M should be >0
Both map arrays must have 32fC1 type
Both map arrays and the destination array must have the same size
Unknown/unsupported interpolation method
Transformation matrix should be 3x3 floating-point single-channel matrix
Transformation matrix should be 2x3 floating-point single-channel matrix
?cvinpaint.cpp
All the input and output images must have the same size
Only 8-bit 1-channel and 3-channel input/output images are supported
The mask must be 8-bit 1-channel image
$tIcvkalman.cpp
state and measurement vectors must have positive number of dimensions
cvlinefit.cpp
The sequence has no points
NULL pointer to line parameters
Input sequence must consist of 2d points or 3d points
Input array is not a sequence nor matrix
Input array must be 1d continuous array of 2d or 3d points
Both reps and aeps must be non-negative
User-defined distance is not allowed
#<cvlkpyramid.cpp
imgA and imgB must have equal steps
pyramid A has insufficient size
pyramid B has insufficient size
>cvmatchcontours.cpp
Unknown/unsupported comparison method
The first argument is not a valid contour tree
The second argument is not a valid contour tree
cvmoments.cpp
Invalid image type
The passed sequence is not a valid contour
UUUUUU
UUUUUU
UUUUUU
?UUUUUU
?UUUUUU
?UUUUUU
@cvmorph.cpp
element must be valid matrix
anchor is outside of element
temp image required
Unknown/unsupported element shape
Null pointer to the custom element mask
Unknown/unsupported morphological operation
structuring element should be valid matrix if CUSTOM element shape is specified
the structuring element must have 8uC1 or 32sC1 type
temp image is equal to src or dst
unknown morphological operation
12CvMorphology
cvmotempl.cpp
NULL memory storage
MHI duration must be positive
both delta's must be positive
Both MHI and the destination mask
MHI and orientation must be single-channel floating-point images
orientation image must be different from MHI
aperture_size must be 3, 5 or 7
?cvoptflowbm.cpp
Source images have different formats
Destination images have different formats
Source images must have 8uC1 type and destination images must have 32fC1 type
two source or two destination images have different steps
cvoptflowhs.cpp
source and destination images have different step
>cvoptflowlk.cpp
cvpgh.cpp
The histogram header is invalid 
Sparse histogram are not supported
The histogram must be two-dimensional
The contour is not valid or the point type is not supported
I@:gC@
=@cd<@
;6@~c5@
P2@j
+@Dg+@R
M*@h
)@4=)@
4(@^
&@_9&@
%@2E%@D
V$@r
#@um#@
 @ha @
{?7ez?
u?mQt?%
#n? 
_j?O
f?JJe?
b?pla?
U?k*T?C
R?bpQ?
D?`^C?
A?2u@?1
/?W,.?
?vh	?
p>H#^>u
?cvposit.cpp
cvpyramids.cpp
this filter type not supported
The images must have 1 or 3 channel
<cvpyrsegmentation.cpp
src and dst have different formats
src and dst have different ROIs
*>$I
.:=C
=cvrotcalipers.cpp
Input sequence must consist of 2d points or pointers to 2d points
Convex hull must have valid pointer to point sequence stored in v_prev
cvsamplers.cpp
map matrix is not valid
Transformation matrix must be 2x3
The transformation matrix should have 32fC1 or 64fC1 type
destination ROI must be smaller than source ROI
@cvsegmentation.cpp
Only 8-bit, 3-channel images are supported
The input and output images must have the same type
The input and output images must have the same size
The number of pyramid levels is too large or negative
Only 8-bit, 3-channel input images are supported
Only 32-bit, 1-channel output images are supported
cvshapedescr.cpp
The image/matrix format is not supported by the function
Only curves with integer coordinates are supported in case of contour slice
Null center or radius pointers
Number of points should be >= 6
cvsmooth.cpp
In case of normalized box filter input and output must have the same type.
In case of unnormalized box filter the number of input and output channels must be the same
Unknown/unsupported input image format
Only normalized box filter can be used for 8u->8u transformation
Only 8u->16s unnormalized box filter is supported in case of 16s output
Only 8u->32s unnormalized box filter is supported in case of 32s output
Only 32f->32f box filter (normalized or not) is supported in case of 32f output
Unknown/unsupported destination image format
The specified smoothing algorithm requires input and ouput arrays be of the same type
Both mask width and height must be >=1 and odd
Median filter only supports 8uC1, 8uC3 and 8uC4 images
Thresholds in bilaral filtering should not bee negative
Bilateral filter only supports 8uC1 and 8uC3 images
11CvBoxFilter
Kcvsnakes.cpp
input image has more than one channel
cvsubdivision2d.cpp
>cvsumpixels.cpp
Sum array must have 64f type (or 32s type in case of 8u source array) and the same number of channels as the source array
Squares sum array must be 64f and the same number of channels as the source array
Squared sum array must be passed if tilted sum array is passed
Sum and tilted sum must have the same types
Tilted sum can not be computed for multi-channel arrays
COI is not supported by the function
This source image format is unsupported
1.0.0
ippiMoments64f_8u_C1R
ippiMoments64f_32f_C1R
ippiMomentInitAlloc_64f
ippiMomentFree_64f
ippiGetSpatialMoment_64f
ippiAdd_8u32f_C1IR
ippiAddSquare_8u32f_C1IR
ippiAddProduct_8u32f_C1IR
ippiAddWeighted_8u32f_C1IR
ippiAdd_8u32f_C1IMR
ippiAddSquare_8u32f_C1IMR
ippiAddProduct_8u32f_C1IMR
ippiAddWeighted_8u32f_C1IMR
ippiAdd_8u32f_C3IMR
ippiAddSquare_8u32f_C3IMR
ippiAddProduct_8u32f_C3IMR
ippiAddWeighted_8u32f_C3IMR
ippiAdd_32f_C1IR
ippiAddSquare_32f_C1IR
ippiAddProduct_32f_C1IR
ippiAddWeighted_32f_C1IR
ippiAdd_32f_C1IMR
ippiAddSquare_32f_C1IMR
ippiAddProduct_32f_C1IMR
ippiAddWeighted_32f_C1IMR
ippiAdd_32f_C3IMR
ippiAddSquare_32f_C3IMR
ippiAddProduct_32f_C3IMR
ippiAddWeighted_32f_C3IMR
ippiPyrUpGetBufSize_Gauss5x5
ippiPyrDown_Gauss5x5_8u_C1R
ippiPyrDown_Gauss5x5_8u_C3R
ippiPyrDown_Gauss5x5_32f_C1R
ippiPyrDown_Gauss5x5_32f_C3R
ippiPyrUp_Gauss5x5_8u_C1R
ippiPyrUp_Gauss5x5_8u_C3R
ippiPyrUp_Gauss5x5_32f_C1R
ippiPyrUp_Gauss5x5_32f_C3R
ippiResize_8u_C1R
ippiResize_8u_C3R
ippiResize_8u_C4R
ippiResize_16u_C1R
ippiResize_16u_C3R
ippiResize_16u_C4R
ippiResize_32f_C1R
ippiResize_32f_C3R
ippiResize_32f_C4R
ippiWarpAffineBack_8u_C1R
ippiWarpAffineBack_8u_C3R
ippiWarpAffineBack_8u_C4R
ippiWarpAffineBack_32f_C1R
ippiWarpAffineBack_32f_C3R
ippiWarpAffineBack_32f_C4R
ippiWarpPerspective_8u_C1R
ippiWarpPerspective_8u_C3R
ippiWarpPerspective_8u_C4R
ippiWarpPerspective_32f_C1R
ippiWarpPerspective_32f_C3R
ippiWarpPerspective_32f_C4R
ippiRemap_8u_C1R
ippiRemap_8u_C3R
ippiRemap_8u_C4R
ippiRemap_32f_C1R
ippiRemap_32f_C3R
ippiRemap_32f_C4R
ippiMorphologyFree
ippiFilterMedian_8u_C1R
ippiFilterMedian_8u_C3R
ippiFilterMedian_8u_C4R
ippiFilterBox_8u_C1R
ippiFilterBox_8u_C3R
ippiFilterBox_8u_C4R
ippiFilterBox_32f_C1R
ippiFilterBox_32f_C3R
ippiFilterBox_32f_C4R
ippiFilterSobelVert_8u16s_C1R
ippiFilterSobelCross_32f_C1R
ippiFilterScharrVert_32f_C1R
ippiFilterScharrHoriz_32f_C1R
ippiFilter32f_8u_C1R
ippiFilter32f_8u_C3R
ippiFilter32f_8u_C4R
ippiFilter32f_16s_C1R
ippiFilter32f_16s_C3R
ippiFilter32f_16s_C4R
ippiFilter_32f_C1R
ippiFilter_32f_C3R
ippiFilter_32f_C4R
ippiFilterColumn32f_8u_C1R
ippiFilterColumn32f_8u_C3R
ippiFilterColumn32f_8u_C4R
ippiFilterColumn32f_16s_C1R
ippiFilterColumn32f_16s_C3R
ippiFilterColumn32f_16s_C4R
ippiFilterColumn_32f_C1R
ippiFilterColumn_32f_C3R
ippiFilterColumn_32f_C4R
ippiFilterRow32f_8u_C1R
ippiFilterRow32f_8u_C3R
ippiFilterRow32f_8u_C4R
ippiFilterRow32f_16s_C1R
ippiFilterRow32f_16s_C3R
ippiFilterRow32f_16s_C4R
ippiFilterRow_32f_C1R
ippiFilterRow_32f_C3R
ippiFilterRow_32f_C4R
ippiCompareC_8u_C1R
ippiAndC_8u_C1R
ippiThreshold_GTVal_8u_C1R
ippiThreshold_GTVal_32f_C1R
ippiThreshold_LTVal_8u_C1R
ippiThreshold_LTVal_32f_C1R
ippiCannyGetSize
ippiCanny_16s8u_C1R
ippiUndistortGetSize
ippiUndistortRadial_8u_C1R
ippiUndistortRadial_8u_C3R
ippiCopySubpix_8u_C1R
ippiCopySubpix_8u32f_C1R
ippiCopySubpix_32f_C1R
ippiOpticalFlowPyrLK_8u_C1R
ippiIntegral_8u32s_C1R
ippiSqrIntegral_8u32s64f_C1R
ippiRectStdDev_32s32f_C1R
ippiHaarClassifierFree_32f
ippiCopyReplicateBorder_8u_C1R
ippiCopyReplicateBorder_8u_C1IR
ippiCopyReplicateBorder_16s_C1R
ippiCopyReplicateBorder_16s_C1IR
ippiCopyReplicateBorder_8u_C3R
ippiCopyReplicateBorder_8u_C3IR
ippiCopyReplicateBorder_32s_C1R
ippiCopyReplicateBorder_32s_C1IR
ippiCopyReplicateBorder_16s_C3R
ippiCopyReplicateBorder_16s_C3IR
ippiCopyReplicateBorder_16s_C4R
ippiCopyReplicateBorder_16s_C4IR
ippiCopyReplicateBorder_32s_C3R
ippiCopyReplicateBorder_32s_C3IR
ippiCopyReplicateBorder_32s_C4R
ippiCopyReplicateBorder_32s_C4IR
ippiPyrDownGetBufSize_Gauss5x5
ippiWarpPerspectiveBack_8u_C1R
ippiWarpPerspectiveBack_8u_C3R
ippiWarpPerspectiveBack_8u_C4R
ippiWarpPerspectiveBack_32f_C1R
ippiWarpPerspectiveBack_32f_C3R
ippiWarpPerspectiveBack_32f_C4R
ippiFilterMinBorderReplicate_8u_C1R
ippiFilterMinGetBufferSize_8u_C1R
ippiErodeBorderReplicate_8u_C1R
ippiFilterMinBorderReplicate_8u_C3R
ippiFilterMinGetBufferSize_8u_C3R
ippiErodeBorderReplicate_8u_C3R
ippiFilterMinBorderReplicate_8u_C4R
ippiFilterMinGetBufferSize_8u_C4R
ippiErodeBorderReplicate_8u_C4R
ippiFilterMinBorderReplicate_32f_C1R
ippiFilterMinGetBufferSize_32f_C1R
ippiErodeBorderReplicate_32f_C1R
ippiFilterMinBorderReplicate_32f_C3R
ippiFilterMinGetBufferSize_32f_C3R
ippiErodeBorderReplicate_32f_C3R
ippiFilterMinBorderReplicate_32f_C4R
ippiFilterMinGetBufferSize_32f_C4R
ippiErodeBorderReplicate_32f_C4R
ippiFilterMaxBorderReplicate_8u_C1R
ippiFilterMaxGetBufferSize_8u_C1R
ippiDilateBorderReplicate_8u_C1R
ippiFilterMaxBorderReplicate_8u_C3R
ippiFilterMaxGetBufferSize_8u_C3R
ippiDilateBorderReplicate_8u_C3R
ippiFilterMaxBorderReplicate_8u_C4R
ippiFilterMaxGetBufferSize_8u_C4R
ippiDilateBorderReplicate_8u_C4R
ippiFilterMaxBorderReplicate_32f_C1R
ippiFilterMaxGetBufferSize_32f_C1R
ippiDilateBorderReplicate_32f_C1R
ippiFilterMaxBorderReplicate_32f_C3R
ippiFilterMaxGetBufferSize_32f_C3R
ippiDilateBorderReplicate_32f_C3R
ippiFilterMaxBorderReplicate_32f_C4R
ippiFilterMaxGetBufferSize_32f_C4R
ippiDilateBorderReplicate_32f_C4R
ippiMorphologyInitAlloc_8u_C1R
ippiMorphologyInitAlloc_8u_C3R
ippiMorphologyInitAlloc_8u_C4R
ippiMorphologyInitAlloc_32f_C1R
ippiMorphologyInitAlloc_32f_C3R
ippiMorphologyInitAlloc_32f_C4R
ippiFilterSobelNegVertGetBufferSize_8u16s_C1R
ippiFilterSobelNegVertBorder_8u16s_C1R
ippiFilterSobelHorizGetBufferSize_8u16s_C1R
ippiFilterSobelHorizBorder_8u16s_C1R
ippiFilterSobelVertSecondGetBufferSize_8u16s_C1R
ippiFilterSobelVertSecondBorder_8u16s_C1R
ippiFilterSobelHorizSecondGetBufferSize_8u16s_C1R
ippiFilterSobelHorizSecondBorder_8u16s_C1R
ippiFilterSobelCrossGetBufferSize_8u16s_C1R
ippiFilterSobelCrossBorder_8u16s_C1R
ippiFilterSobelNegVertGetBufferSize_32f_C1R
ippiFilterSobelNegVertBorder_32f_C1R
ippiFilterSobelHorizGetBufferSize_32f_C1R
ippiFilterSobelHorizBorder_32f_C1R
ippiFilterSobelVertSecondGetBufferSize_32f_C1R
ippiFilterSobelVertSecondBorder_32f_C1R
ippiFilterSobelHorizSecondGetBufferSize_32f_C1R
ippiFilterSobelHorizSecondBorder_32f_C1R
ippiFilterSobelCrossGetBufferSize_32f_C1R
ippiFilterSobelCrossBorder_32f_C1R
ippiFilterScharrVertGetBufferSize_8u16s_C1R
ippiFilterScharrVertBorder_8u16s_C1R
ippiFilterScharrHorizGetBufferSize_8u16s_C1R
ippiFilterScharrHorizBorder_8u16s_C1R
ippiFilterScharrVertGetBufferSize_32f_C1R
ippiFilterScharrVertBorder_32f_C1R
ippiFilterScharrHorizGetBufferSize_32f_C1R
ippiFilterScharrHorizBorder_32f_C1R
ippiFilterLaplacianGetBufferSize_8u16s_C1R
ippiFilterLaplacianBorder_8u16s_C1R
ippiFilterLaplacianGetBufferSize_32f_C1R
ippiFilterLaplacianBorder_32f_C1R
ippiFilterSobelHoriz_8u16s_C1R
ippiFilterSobelVertSecond_8u16s_C1R
ippiFilterSobelHorizSecond_8u16s_C1R
ippiFilterSobelCross_8u16s_C1R
ippiFilterSobelVertMask_32f_C1R
ippiFilterSobelHorizMask_32f_C1R
ippiFilterSobelVertSecond_32f_C1R
ippiFilterSobelHorizSecond_32f_C1R
ippiFilterScharrVert_8u16s_C1R
ippiFilterScharrHoriz_8u16s_C1R
ippiRGBToXYZ_8u_C3R,ippiRGBToXYZ_8u_C3R
ippiRGBToXYZ_16u_C3R,ippiRGBToXYZ_16u_C3R
ippiRGBToXYZ_32f_C3R,ippiRGBToXYZ_32f_C3R
ippiXYZToRGB_8u_C3R,ippiXYZToRGB_8u_C3R
ippiXYZToRGB_16u_C3R,ippiXYZToRGB_16u_C3R
ippiXYZToRGB_32f_C3R,ippiXYZToRGB_32f_C3R
ippiRGBToHSV_8u_C3R,ippiRGBToHSV_8u_C3R
ippiHSVToRGB_8u_C3R,ippiHSVToRGB_8u_C3R
ippiRGBToHLS_8u_C3R,ippiRGBToHLS_8u_C3R
ippiRGBToHLS_32f_C3R,ippiRGBToHLS_32f_C3R
ippiHLSToRGB_8u_C3R,ippiHLSToRGB_8u_C3R
ippiHLSToRGB_32f_C3R,ippiHLSToRGB_32f_C3R
ippiBGRToLab_8u_C3R,ippiBGRToLab_8u_C3R
ippiLabToBGR_8u_C3R,ippiLabToBGR_8u_C3R
ippiRGBToLUV_8u_C3R,ippiRGBToLUV_8u_C3R
ippiLUVToRGB_8u_C3R,ippiLUVToRGB_8u_C3R
ippiUpdateMotionHistory_8u32f_C1IR
ippiCrossCorrValid_Norm_8u32f_C1R
ippiCrossCorrValid_NormLevel_8u32f_C1R
ippiSqrDistanceValid_Norm_8u32f_C1R
ippiCrossCorrValid_Norm_32f_C1R
ippiCrossCorrValid_NormLevel_32f_C1R
ippiSqrDistanceValid_Norm_32f_C1R
ippiDistanceTransform_3x3_8u32f_C1R
ippiDistanceTransform_5x5_8u32f_C1R
ippiCreateMapCameraUndistort_32f_C1R
ippiOpticalFlowPyrLKInitAlloc_8u_C1R
ippiOpticalFlowPyrLKFree_8u_C1R
ippiHaarClassifierInitAlloc_32f
ippiApplyHaarClassifier_32s32f_C1R
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
cvtemplmatch.cpp
the input arrays are too big
unknown comparison method
The function supports only 8u, 16u and 32f data types
Template (kernel) must be of the same depth as the input image, or be 32f
The output image must have the same depth as the input image, or be 32f/64f
The output must have the same number of channels as the input (when the template has 1 channel), or the output must have 1 channel when the input and the template have the same number of channels
Such a combination of image and template/filter size is not supported
output image should not be greater than (W + w - 1)x(H + h - 1)
The function supports only 8u and 32f data types
image and template should have the same type
output image should have 32f type
output image should be (W - w + 1)x(H - h + 1)
@cvthresh.cpp
The histogram in Otsu method must be a valid dense 1D histogram
Both arrays must have equal number of channels
Otsu method can only be used with 8uC1 images
In case of different types destination should be 8uC1
In case of different types only CV_THRESH_BINARY and CV_THRESH_BINARY_INV thresholding types are supported
?cvundistort.cpp
The function does not support COI
Both maps must have 32fC1 type
Intrinsic matrix must be a valid 3x3 floating-point matrix
In-place undistortion is not implemented
cvutils.cpp
Offset (left/top border width) is negative
Source array is too big or destination array is too small
Unknown/unsupported border type
Input array is not a valid matrix
The matrix can not be converted to point sequence because of inappropriate element type
The matrix converted to point sequence must be 1-dimensional and continuous
zPLR
cvRunningAvg
cvMultiplyAcc
cvSquareAcc
cvAcc
cvAdaptiveThreshold
icvAdaptiveThreshold_MeanC
cvApproxPoly
cvApproxChains
cvCalcImageHomography
cvDrawChessboardCorners
cvFindChessBoardCornerGuesses2
icvGenerateQuads
icvCleanFoundConnectedQuads
icvCheckQuadGroup
cvCalibrateCamera2
icvInitIntrinsicParams2D
icvGaussNewton
cvFindExtrinsicCameraParams2
cvProjectPoints2
cvRogrigues2
cvFindHomography
cvCamShift
cvMeanShift
cvCanny
cvCvtColor
cvConDensInitSampleSet
cvConDensUpdateByTime
cvCreateConDensation
cvFindContours
icvFindContoursInInterval
cvFindNextContour
cvFindNextContour
cvSubstituteContour
cvStartFindContours
cvReadChainPoint
cvStartReadChainPoints
cvContourFromContourTree
cvCreateContourTree
cvCheckContourConvexity
cvConvexityDefects
cvConvexHull2
icvCalcAndWritePtIndices
cvPreCornerDetect
cvCornerEigenValsAndVecs
icvCornerEigenValsVecs
cvCornerHarris
cvCornerMinEigenVal
cvFindCornerSubPix
cvLaplace
CvLaplaceFilter::init
cvSobel
cvDistTransform
cvDistTransform2
cvFindDominantPoints
cvCalcEMD2
cvGoodFeaturesToTrack
cvFilter2D
icvIPPSepFilter
CvLinearFilter::init
CvSepFilter::init_gaussian
CvSepFilter::init_deriv
CvSepFilter::init_scharr_kernel
CvSepFilter::init_sobel_kernel
CvSepFilter::init_gaussian_kernel
CvSepFilter::init
CvBaseImageFilter::process
CvBaseImageFilter::init
cvFloodFill
cvConvertPointsHomogenious
cvComputeCorrespondEpilines
cvFindFundamentalMat
icvFMatrix_8Point
icvFMatrix_LMedS
icvFMatrix_RANSAC
cvCheckPointPolygon
cvBoxPoints
cvCloneHaarClassifier
icvCreateHaarClassifierCascade
cvWriteHaarClassifier
cvReadHaarClassifier
cvLoadHaarClassifierCascade
cvHaarDetectObjects
icvCreateHidHaarClassifierCascade
cvRunHaarClassifierCascade
cvSetImagesForHaarClassifierCascade
icvWriteHist
icvReadHist
cvEqualizeHist
cvCalcProbDensity
cvCalcBayesianProb
cvCalcArrBackProjectPatch
cvCalcArrBackProject
cvCalcHist
cvSetHistBinRanges
cvCopyHist
cvCompareHist
cvGetMinMaxHistValue
cvNormalizeHist
cvThreshHist
cvClearHist
cvReleaseHist
cvMakeHistHeaderForArray
cvCreateHist
cvHoughCircles
icvHoughCirclesGradient
cvHoughLines
icvHoughLinesStandard
icvHoughLinesSDiv
icvHoughLinesProbalistic
cvLogPolar
cvRemap
cvGetAffineTransform
cvGetPerspectiveTransform
cvWarpPerspective
cvGetRotationMatrix
cvWarpAffine
cvResize
cvInpaint
cvKalmanCorrect
cvKalmanPredict
cvReleaseKalman
cvCreateKalman
cvFitLine
cvCalcOpticalFlowPyrLK
cvMatchContourTrees
cvMatchShapes
cvGetCentralNormalizedMoment
cvGetCentralMoment
cvGetSpatialMoment
cvGetHuMoments
cvMoments
cvMorhologyEx
icvMorphOp
cvReleaseStructuringElement
cvCreateStructuringElementEx
CvMorphology::init_binary_element
CvMorphology::init
cvSegmentMotion
cvCalcGlobalOrientation
cvCalcMotionGradient
cvUpdateMHIByTime
cvCalcOpticalFlowBM
cvCalcOpticalFlowHS
cvCalcOpticalFlowLK
cvCalcPGH
cvPOSIT
cvCreatePOSITObject
cvPyrDown
cvPyrUp
cvPyrSegmentation
cvMinAreaRect2
cvGetQuadrangleSubPix
cvGetRectSubPix
cvSampleLine
cvPyrMeanShiftFiltering
cvWatershed
icvAllocWSNodes
cvBoundingRect
cvFitEllipse2
icvFitEllipse_F
cvContourArea
cvMinEnclosingCircle
cvArcLength
cvSmooth
CvBoxFilter::init
cvSnakeImage
cvFindNearestPoint2D
cvCalcSubdivVoronoi2D
cvClearVoronoi2D
cvSubdivDelaunay2DInit
cvSubdiv2DMakeEdge
cvSubdiv2DSetEdgePoints
cvSubdivDelaunay2DInsert
cvSubdiv2DDeleteEdge
cvSubdiv2DConnectPoints
cvSubdiv2DLocate
cvCleateSubdiv2D
cvIntegralImage
cvMatchTemplate
icvCrossCorr
cvThreshold
icvGetThreshVal_Otsu
cvInitUndistortMap
cvUndistort2
cvCopyMakeBorder
cvPointSeqFromMat
libcv.so.1.0.0.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
