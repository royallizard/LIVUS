__gmon_start__
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
g_type_class_peek_parent
g_type_class_adjust_private_offset
gimp_controller_get_type
g_type_check_class_cast
dcgettext
g_strconcat
g_param_spec_string
g_object_class_install_property
g_free
g_param_spec_int
g_strdup_printf
g_source_remove
g_io_channel_unref
g_strdup
g_object_set
snd_seq_close
g_ascii_strcasecmp
snd_seq_open
snd_strerror
g_io_channel_unix_new
g_io_channel_set_close_on_unref
g_io_channel_set_encoding
g_io_add_watch
snd_seq_set_client_name
snd_seq_create_simple_port
snd_seq_client_id
g_source_new
g_source_attach
g_source_unref
__errno_location
g_strerror
g_type_check_instance_cast
g_value_init
g_value_set_double
gimp_controller_event
g_value_unset
__stack_chk_fail
controller_midi_get_type
g_type_name
g_log
g_value_get_int
g_value_get_string
g_io_channel_read_chars
g_clear_error
g_print
snd_seq_event_input_pending
snd_seq_event_input
snd_seq_client_info_sizeof
memset
snd_seq_port_info_sizeof
snd_seq_get_any_client_info
snd_seq_get_any_port_info
g_value_set_int
g_value_set_string
gimp_module_query
gimp_module_register
g_type_module_register_type
libgimpmodule-2.0.so.0
libgimpwidgets-2.0.so.0
libgtk-x11-2.0.so.0
libgdk-x11-2.0.so.0
libpangocairo-1.0.so.0
libatk-1.0.so.0
libcairo.so.2
libgdk_pixbuf-2.0.so.0
libgio-2.0.so.0
libpangoft2-1.0.so.0
libpango-1.0.so.0
libgobject-2.0.so.0
libfontconfig.so.1
libfreetype.so.6
libgthread-2.0.so.0
libglib-2.0.so.0
libasound.so.2
libm.so.6
libdl.so.2
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
libcontroller-midi.so
/usr/lib64
GLIBC_2.4
GLIBC_2.2.5
ALSA_0.9
5R' 
%T' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%R' 
%Z' 
%Z' 
%Z' 
%Z' 
%j' 
%j' 
%j' 
=Y' 
5R' 
='% 
=b! 
ATUH
5n> 
5\> 
[]A\
ATUH
Glt 
[]A\
AUATUI
D$H1
L$$H
\$ H
D$HdH3
X[]A\A]
AVAUI
ATUH
 []A\A]A^
E0[]A\A]A^
]A\A]A^
AUATI
D$(1
t$(dH34%(
8[]A\A]
KdIc
KdIc
KhIc
C`Ic
ClIc
AUATSH
[A\A]]
AUATI
[]A\A]
([]A\A]
[]A\A]
D$H1
D$0p
D$ H
T$HdH3
Enter 'alsa' to use the ALSA sequencer.
The name of the device to read MIDI events from.
The MIDI channel to read events from. Set to -1 for reading from all MIDI channels.
%s:%d: invalid %s id %u for "%s" of type '%s' in '%s'
MIDI: undefined system message
MIDI (ch %02d): note off (%02x vel %02x)
MIDI (ch %02d): polyphonic aftertouch (%02x pressure %02x)
MIDI (ch %02d): controller %d (value %d)
MIDI (ch %02d): program change (%d)
MIDI (ch %02d): channel aftertouch (%d)
MIDI (ch %02d): note on  (%02x vel %02x)
Michael Natterer <mitch@gimp.org>
(c) 2004-2007, released under the GPL
gimp20-libgimp
Device:
device
Channel:
channel
MIDI
gimp-controller-midi
Note %02x on
Note %02x off
Controller %03d
note-on-%02x
note-off-%02x
controller-%03d
MIDI Events
name
alsa
default
GIMP
GIMP MIDI Input Controller
Device not available: %s
state
ALSA (%d:%d)
Reading from %s
No device configured
property
controller-midi.c
End of file
MIDI: sysex start
MIDI: time code
MIDI: song position
MIDI: song select
MIDI: tune request
MIDI: sysex end
MIDI (ch %02d): pitch (%d)
ControllerMidi
MIDI event controller
v0.2
2004-2007
;*3$"
libcontroller-midi.so.debug
7zXZ
_FIu<
7/9+C
2F(v
>b4p
[Us'
]?w~
hqEUWAT
_C?F1n
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.init
.plt
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.data.rel.ro
.dynamic
.data
.bss
.gnu_debuglink
.gnu_debugdata
