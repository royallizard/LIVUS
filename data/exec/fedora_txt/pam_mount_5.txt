P`^B
__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
stderr
__vfprintf_chk
__vsyslog_chk
__assert_fail
malloc
HX_basename
realloc
HXmc_meminit
HXmc_strcat
HXmc_length
strcmp
HXformat_aprintf
HXdeque_push
__errno_location
HXmc_free
HXdeque_init
getpwnam
__xstat64
getegid
getgid
geteuid
getuid
strlen
memcpy
strchr
HXformat_add
perror
__snprintf_chk
readlink
strncpy
__stack_chk_fail
strncmp
kill
__lxstat64
HXdir_open
HXdir_read
strtoul
fopen64
HX_getl
HX_chomp
__ctype_b_loc
fclose
HXdir_close
strcasecmp
fgets
strncasecmp
fdopen
setvbuf
HXmc_strinit
HXproc_wait
rmdir
HX_dirname
mkdir
chown
seteuid
HXformat_init
__realpath_chk
HXformat_free
usleep
write
HXproc_run_sync
strpbrk
strcspn
HXmc_memcat
fcntl
memmove
fileno
ftello64
pwrite64
pread64
ftruncate64
pam_sm_setcred
pam_sm_acct_mgmt
unsetenv
pthread_mutex_lock
pthread_mutex_unlock
sigemptyset
sigaddset
sigtimedwait
sigprocmask
sigismember
pam_get_user
memset
munlock
pam_get_item
pam_strerror
pam_get_data
pam_sm_authenticate
pam_set_data
mlock
pam_set_item
pam_sm_chauthtok
__isoc99_fscanf
pam_sm_open_session
pam_getenv
pam_sm_close_session
chdir
getgrgid
getgrnam
setmntent
getmntent
endmntent
HX_strsep
xmlGetProp
HXmap_add
HXdeque_del
HXdeque_free
HXmap_init
HXmap_free
xmlParseFile
xmlDocGetRootElement
xmlFreeDoc
strtol
calloc
HXmap_travinit
HXmap_traverse
HXmap_travfree
HXmap_find
sigaction
setsid
setgid
setuid
HXdeque_to_vec
HXproc_run_async
libpam.so.0
libHX.so.22
libcrypto.so.10
libdl.so.2
libz.so.1
libxml2.so.2
libc.so.6
_edata
__bss_start
_end
pam_mount.so
LIBPAM_1.0
LIBXML2_2.4.30
GLIBC_2.4
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.7
GLIBC_2.2.5
ATSubH
T$`H
t$XH
L$hH)
D$pL
D$40
L$0H
D$8H
D$PH
D$@H
D$0H
D$PH
D$ 1
T$`H
t$XH
L$hH)
D$pL
D$40
L$0H
D$8H
D$PH
D$@H
D$0H
D$PH
D$ 1
[]A\
ffffff.
[]A\
[]A\
ffff.
fffff.
ffffff.
[]A\
\$ H
l$(L
d$0L
l$8L
t$@H
fffff.
AUATI
,</t
 []A\A]A^
ffffff.
AVAUATUSH
l$0H
T$ H
D$H%
[]A\A]A^A_
|$ L
t$ L
D$H%
L$ H
|$(L
t$(L
D$H%
t$(H
ATUSH
D$X1
T$XdH3
`[]A\
AVAUATUH
[]A\A]A^
[]A\A]A^
fffff.
tkve
AUATI
[]A\A]
ffff.
fffff.
l$ H
ffff.
AWAVE1
ATUSH
[]A\A]A^A_
L$xL
t$hL
D$pH
L$`H
T$XL
T$PL
L$xL
D$pH
t$hH
L$`H
T$XL
T$PL
D$HH
L$8L
D$0H
L$ H
D$@H
t$(L
AVAUATI
[]A\A]A^
t!f.
\$@L
T$@H
|$TH
|$\H
|$pH
|$pH
D$ 1
|$(1
|$,1
t$8H
l$ H
AVAUI
$\000
[]A\A]A^
\$ H
l$(L
d$0H
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
fffff.
l$0H
\$(L
d$8L
l$@L
t$HL
|$PH
AWAVAUATI
L9t$
([]A\A]A^A_
([]A\A]A^A_
AVAUATUH
|$HH
[]A\A]A^A_
AWAVA
AUATUH
T$hH
|$ptuH
[]A\A]A^A_
ffffff.
ffffff.
AWAVAUATM
|$ H
D$@H
T$`L
D$8H
D$0H
t$`1
t$h1
t$p1
T$x:
T$0H
t$x1
T$0H
D$0H
T$0H
D$,H
[]A\A]A^A_
ffff.
AWAVI
AUATUH
D$(1
T$(dH3
8[]A\A]A^A_
\$ L
AVE1
AUATI
[]A\A]D
d$(H
t$(H
D$ H
[]A\
D$ H
[]A\
l$ H
l$ H
ffffff.
\$8H
l$@L
d$HL
l$PH
T$,H
ffff.
d$ L
l$(L
t$0H
=2~ 
=>| 
ATUH
5!| 
[]A\
t[s)H
d$ H
l$ H
ffffff.
ATUH
[]A\A]
[]A\A]
AUATUS
[]A\A]A^
tsrK
[]A\A]A^
[]A\A]A^
AWAVAUATUH
[]A\A]A^A_
[]A\A]A^A_
[]A\
ATUSH
[]A\A]
[]A\A]
'txA
\tRA
"tlH
\tZH
AVAUATUH
nosuid,nSH
nosuid,nH
D$(1
odev
odev
-Ib 
D$(dH3
8[]A\A]A^A_
ffff.
ATU1
[]A\
;~t(
d$ L
l$(L
t$0H
AWAVAUI
ATUSH
[]A\A]A^A_
~`I9
[]A\A]A^A_
AWAVAUI
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
|$ L
l$ H
AUATI
[]A\A]
[]A\A]
AUATI
[]A\A]A^
[]A\A]A^
[]A\A]A^
[]A\A]A^
[]A\A]A^
fff.
[]A\
AWAVAUATUH
|$ 1
l$`I
l$`A
|$yH
|$ L
|$zH
t$(H
t$0H
t$8H
[]A\A]A^A_
D$ H
l$@H
l$HH
l$PH
\$XI
8[]A\A]A^A_
AUATUH
[]A\A]
l$ L
t$(L
|$0H
C`I9
=YI 
-MD 
t$ H
log.c
format != ((void *)0)
misc_warn
misc_log
misc.c
malloc: %s
command: %s
user != ((void *)0)
file != ((void *)0)
DOMAIN_NAME
DOMAIN_USER
HX_strdup
ptr != ((void *)0)
%s(%s:%u): %s: Could not allocate %lu bytes
%s(%s:%u): %s: Could not reallocate to %lu bytes
%s(%s:%u): user %s could not be translated to UID
%s(%s:%u): file %s could not be stat'ed
%s(%s:%u): %s: (uid=%u, euid=%u, gid=%u, egid=%u)
xstrdup
xrealloc
xmalloc
misc_add_ntdom
pmt_fileop_owns
pmt_fileop_exists
/proc/%u/exe
%u(%s): %s -> %s
/proc
/proc/%s
/proc/%s/maps
/proc/%s/root
/proc/%s/cwd
/proc/%s/exe
/proc/%s/task
%s/%s/fd
%s/%s
cifs
smbfs
ncpfs
/proc/filesystems
nodev
%s(%s:%u): %s
%s(%s:%u): %s
vinfo != ((void *)0)
password == ((void *)0)
%(MNTPT)
umount messages:
d != ((void *)0)
%s(%s:%u): getpwuid: %s
MNTPT
FSTYPE
VOLUME
SERVER
FSKEYCIPHER
FSKEYHASH
FSKEYPATH
USERUID
USERGID
OPTIONS
(null)
luserconf
globalconf
%s(%s:%u): going to unmount
bind
FSCKTARGET
PASSWD_FD
FSCK
%s(%s:%u): error opening file: %s
%s(%s:%u): The "server" attribute is ignored for this filesystem (%s).
%s(%s:%u): {smb,ncp}umount not defined in pam_count.conf.xml
%s(%s:%u): could not remove %s
%s(%s:%u): could not determine uid from %s to make %s
%s(%s:%u): could not chown %s to %s
%s(%s:%u): creating mount point %s
%s(%s:%u): tried to create %s but failed
%s(%s:%u): Could not get realpath of %s: %s
%s(%s:%u): getpwnam("%s") failed: %s
%s(%s:%u): Mount info: %s, user=%s <volume fstype="%s" server="%s" path="%s" mountpoint="%s" cipher="%s" fskeypath="%s" fskeycipher="%s" fskeyhash="%s" options="%s" /> fstab=%u
%s(%s:%u): unmount of %s failed
%s(%s:%u): could not determine if %s is already mounted, failing
%s(%s:%u): %s already seems to be mounted at %s, skipping
%s(%s:%u): mount point %s does not exist (pam_mount not configured to make it)
%s(%s:%u): proper mount command not defined in pam_mount.conf.xml
%s(%s:%u): fsck not defined in pam_mount.conf.xml
%s(%s:%u): waiting for filesystem check
%s(%s:%u): error waiting for child: %s
%s(%s:%u): error checking filesystem but will continue
%s(%s:%u): error sending password to mount
Errors from underlying mount program:
do_mount
mkmountpoint_real
do_unmount
mount-sysv.c
%s(%s:%u): pmt::vol_to_dev: %s
 0 0
mtab.c
%s(%s:%u): %s: pwrite: %s
%s(%s:%u): %s: ftruncate: %s
/etc/cmtab
/etc/mtab
/proc/mounts
pmt_mtab_remove
pam_mount
pam_mount.c
argc >= 0
argv[i] != ((void *)0)
enable_pam_password
disable_pam_password
enable_interactive
disable_interactive
enable_propagate_password
disable_propagate_password
debug
%s(%s:%u): could not get user
_PMT_DEBUG_LEVEL
pamh != ((void *)0)
pass != ((void *)0)
Password: 
%s(%s:%u): pam_get_item: %s
pam_mount_system_authtok
%s(%s:%u): mlock authtok: %s
operation != ((void *)0)
OPERATION
KRB5CCNAME
pam_mount_config
Session open
Session close
%s(%s:%u): could not chdir
%s(%s:%u): unknown pam_mount option "%s"
/etc/security/pam_mount.conf.xml
%s(%s:%u): Clean global config (%d)
%s(%s:%u): clean system authtok=%p (%d)
%s(%s:%u): mount of %s failed
%s(%s:%u): No converse function available
%s(%s:%u): conv->conv(...): %s
retval != 0 || (pass != ((void *)0) && *pass != ((void *)0))
%s(%s:%u): warning: could not obtain password interactively either
%s(%s:%u): pam_mount 1.32: entering auth stage
%s(%s:%u): warning: failure to export password (%s)
%s(%s:%u): error trying to save authtok for session code
%s(%s:%u): error executing pmvarrun: %s
%s(%s:%u): error reading login count from pmvarrun
%s(%s:%u): pmvarrun says login count is %d
%s(%s:%u): pam_mount 1.32: entering session stage
%s(%s:%u): KRB5CCNAME setenv failed
%s(%s:%u): error trying to save config structure
%s(%s:%u): error expanding configuration
%s(%s:%u): going to readconfig %s
%s(%s:%u): %s does not exist or is not owned by user
%s(%s:%u): no volumes to mount
%s(%s:%u): done opening session (ret=%d)
%s(%s:%u): received order to close things
%s(%s:%u): No volumes to umount
%s(%s:%u): could not get user
%s(%s:%u): %s seems to have other remaining open sessions
%s(%s:%u): pam_mount execution complete
pam_sm_close_session
modify_pm_count
pam_sm_open_session
parse_pam_args
read_password
pam_sm_authenticate
rdconf1.c
/etc/fstab
pam_mount password:
malloc
%s%s
GROUP
enable
Could not get password entry
name
allow
Error parsing allowed options
deny
Error parsing denied options
require
icase
true
pgrp
remove
sgrp
%s(%s:%u): getpwnam: %s
invert
fstype
auto
noroot
encfs13
server
could not determine options
error parsing mount options
fskeycipher
fskeyhash
fskeypath
none
wait
term
kill
cifsmount
cryptmount
cryptumount
fd0ssh
fsck
fusemount
fuseumount
lclmount
logout
mkmountpoint
mntoptions
msg-authpw
msg-sessionpw
nfsmount
ncpmount
ncpumount
pmvarrun
smbmount
smbumount
volume
//%(SERVER)/%(VOLUME)
%(SERVER)/%(USER)
mount.fuse
%(ifnempty="-o" OPTIONS)
%(OPTIONS)
fusermount
%(FSTYPE)
%(SERVER):%(VOLUME)
nfs4
umount.crypt
%(FSCKTARGET)
%(OPERATION)
%s(%s:%u): getgrgid(%u) failed: %s
%s(%s:%u): getgrnam("%s") failed: %s
%s(%s:%u): could not open fstab
%s(%s:%u): field of %d invalid
%s(%s:%u): could not get %dth fstab field for %s
Tried to set command from user config
reenter password for pam_mount:
/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin
%s(%s:%u): Could not lookup account info for %s
%s(%s:%u): You do not exist? %s? %s.
%s(%s:%u): libxml detected a syntax error in %s
Tried to set <luserconf> from user config
<luserconf> is missing name= attribute
%s(%s:%u): path to luserconf set to %s
Tried to set <mntoptions allow=...> from user config
Error parsing required options
%s(%s:%u): config: empty or invalid content for <%s>
%s(%s:%u): config: <and> does not have any child elements
%s(%s:%u): config: <xor> must have exactly two child elements
%s(%s:%u): config: <not> may only have one child element
%s(%s:%u): getgrgid(%ld) failed: %s
%s(%s:%u): config: unknown element <%s>
%s(%s:%u): The "invert" attribute is deprecated, support will be removed in next version.
%s(%s:%u): You cannot have both simple and extended user control
could not determine mountpoint
username=%(USER),uid=%(USERUID),gid=%(USERGID)%(before="," OPTIONS)
user=%(USER),uid=%(USERUID),gid=%(USERGID)%(before="," OPTIONS)
pass-fd=0,volume=%(VOLUME)%(before="," OPTIONS)
%(ifnempty="-ocipher=" CIPHER)%(CIPHER)
%(ifnempty="-ofsk_cipher=" FSKEYCIPHER)%(FSKEYCIPHER)
%(ifnempty="-ofsk_hash=" FSKEYHASH)%(FSKEYHASH)
%(ifnempty="-okeyfile=" FSKEYPATH)%(FSKEYPATH)
%(ifnempty="-o" OPTIONS)%(OPTIONS)
rdconf2.c
tmpfs
%s(%s:%u): Illegal volume type %u (max is %u)
%s(%s:%u): mount command not defined for this type
%s(%s:%u): remote mount type specified without server
%s(%s:%u): volume source is not defined
%s(%s:%u): umount command not defined
%s(%s:%u): fs_key_cipher defined without fs_key_path
%s(%s:%u): fs_key_path defined without fs_key_cipher
%s(%s:%u): checking sanity of luserconf volume record (%s)
%s(%s:%u): user-defined volume (%s), volume not owned by user
%s(%s:%u): user-defined volume (%s), mountpoint not owned by user
%s(%s:%u): option "%s" required
Luser volume for %s is missing options that are required by global <mntoptions>
%s(%s:%u): option "%s" not allowed
Luser volume for %s has options that are not allowed per global <mntoptions>
%s(%s:%u): all mount options denied, user tried to specify one
%s(%s:%u): option "%s" denied
Luser volume for %s has options that are denied by global <mntoptions>
set_myuid<pre>
spawn.c
HOME
set_myuid<post>
%s(%s:%u): error setting uid to 0
%s(%s:%u): setting uid to user %s
%s(%s:%u): could not get passwd entry for user %s
%s(%s:%u): could not set gid to %ld
%s(%s:%u): could not set uid to %ld
pam_mount.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
