/lib64/ld-linux-x86-64.so.2
a*BE
 y<-
libm.so.6
__gmon_start__
_Jv_RegisterClasses
libc.so.6
socket
fflush
strcpy
fchmod
__printf_chk
readdir
_IO_putc
srand
fopen
strncmp
strrchr
wait
regexec
pipe
__strdup
__isoc99_sscanf
connect
closedir
inet_ntop
strncpy
fork
regfree
__stack_chk_fail
unlink
select
mkdir
realloc
rewinddir
fsync
abort
_exit
strpbrk
getpid
strspn
strftime
__assert_fail
rewind
gmtime
strtol
mmap
feof
truncate
fgetc
fgets
strlen
openlog
getaddrinfo
memset
strstr
strcspn
__errno_location
bind
fseek
chdir
getnameinfo
__syslog_chk
dup2
clearerr
__fprintf_chk
ctime
stdout
fputc
fputs
lseek
memcpy
fclose
__vsnprintf_chk
strtoul
setsockopt
malloc
strcat
remove
__strncpy_chk
opendir
getenv
__ctype_b_loc
__open_2
recvfrom
regcomp
stderr
system
munmap
__snprintf_chk
settimeofday
freopen
__fxstat
fileno
utimes
getcwd
fwrite
fread
gettimeofday
adjtime
rename
__memcpy_chk
localtime
strchr
getsockname
sendto
__vfprintf_chk
fdopen
canonicalize_file_name
__ctype_toupper_loc
__strcpy_chk
__ctype_tolower_loc
__cxa_finalize
freeaddrinfo
__sprintf_chk
__xstat
memmove
access
strcmp
strerror
__libc_start_main
ferror
sysconf
__cxa_atexit
_edata
__bss_start
_end
isc_categories
__libc_csu_fini
adr_buf
ipv6_works
sntpOptions
ustotsmid
ipv4_works
lib_nextbuf
log_file
isc_msgcat
debug
key_ptr
lib_stringbuf
isc_modules
isc_assertion_failed
__libc_csu_init
isc_lctx
kod_db_file
kod_db
progname
ustotslo
ustotshi
lib_inited
months
GLIBC_2.2.5
GLIBC_2.4
GLIBC_2.3
GLIBC_2.7
GLIBC_2.3.4
%z)"
%r)"
%j)"
%b)"
%Z)"
%R)"
%J)"
%B)"
%:)"
%2)"
%*)"
%")"
%z("
%r("
%j("
%b("
%Z("
%R("
%J("
%B("
%:("
%2("
%*("
%"("
%z'"
%r'"
%j'"
%b'"
%Z'"
%R'"
%J'"
%B'"
%:'"
%2'"
%*'"
%"'"
%z&"
%r&"
%j&"
%b&"
%Z&"
%R&"
%J&"
%B&"
%:&"
%2&"
%*&"
%"&"
=HJ"
ATSubH
AWAVAUATUSH
D$x1
T$xdH3
[]A\A]A^A_
ffff.
ATUH
D$x1
T$xdH3
[]A\A]
l$`L
:E4u
AWAVAUATUH
[]A\A]A^A_
u(Ic
ffff.
AWAVI
AUATUSH
l$@L
t$@@
Hc=EC"
D$8H
T$ H
T$(N
T$8J
[]A\A]A^A_
ATUSH
D$X1
9-t?"
D$XdH3
h[]A\A]
AWAVI
AUATUS1
-n>"
([]A\A]A^A_
([]A\A]A^A_
AWAVAUATI
D;l$
[]A\A]A^A_
[]A\A]A^A_
ffff.
D$X1
D$XdH3
\$hH
l$pH
 u_H
l$ H
fff.
AWE1
AVE1
AUATUSH
T$HH
t$PH
|$XH
D$`H
T$hH
t$pL
t$XA
T$0L
\$(H
+T$HH
D$Hf
D$HH
T$Pf
[]A\A]A^A_
t$XH
T$xI
t$`H
D$XH
|$hL
+T$XH
T$0D
L$PH
\$(D
|$`H
D$hH
T$pH
t$XD
AWAVAUATA
([]A\A]A^A_
AWE1
AVAUATI
A;D$(
A;D$,
[]A\A]A^A_
 uKf
 t+H
l$ L
d$(L
l$0L
t$8L
|$@H
l$ L
d$(L
t$8L
|$@1
AVAUA
[]A\A]A^
AUATUSH
[]A\A]A^A_
l$ E1
[]A\A]A^A_
X[]A\A]A^A_
|$8H
l$ H
l$ H
ffffff.
[]A\A]
[]A\A]
[]A\A]
AVAUI
[]A\A]A^A_
ffff.
fffff.
fff.
l$ H
L$ A
L$ 1
AWAVAUI
[]A\A]A^A_
[]A\A]A^A_
tBf.
fff.
|!Hc
fffff.
fffff.
ATUSH
[]A\A]
fffff.
ATUSH
[]A\
AVAUATI
I+D$xI
I+D$xI
M+t$xH
[]A\A]A^
ffffff.
[]A\
[]A\
[]A\
[]A\
ffff.
fff.
AVAUA
ATUH
D$81
D$8dH3
H[]A\A]A^A_
D$ H
H;D$
6u!H
l$(H
\$ L
d$0L
l$8L
t$@H
d$ H
\$ H
l$(L
d$0H
Gu+H
@ueH
NtC~)
l$ H
AVAUATUSH
<'t,
[]A\A]A^A_
t"<\
D$0H
ffffff.
}0Hc
l$ H
=D;|$
\$XH
l$`L
d$hL
l$pL
t$xL
AUATU
|$ H
[]A\A]
T$(H
D$H%
D$H%
 t)H
d$ H
d$ H
D$8%
D$8%
D$8I
D$8L
[]A\
fff.
<'u?H
[]A\
<'u*
[]A\H
fffff.
AVAUA
[]A\A]A^
[]A\A]A^
x*f.
D;-r%
D;-n%
D;-j%
D;-f%
T$8I
[]A\A]A^
AWAVAUATUSH
T$0dH
T$ H
D$@H
D$8H
D9\$
D$8A
\$,A
D9\$
T$0H
[]A\A]A^A_
\$,HcD$,H
D$ H
T$LE
T$0H
L$0H
l$@+l$
l$PH
T$ E
J u:H
~w'H
~w0H
l$ L
t$(L
|$0H
=u[H
\$(H
l$0H
ATUH
[]A\
[]A\
 t(H
ffffff.
ATUSH
*u|H
 []A\
AVE1
AUE1
T$xJ
T$0L
T$01
t$ D
l$,E
T$01
t$ D
A;D$
8[]A\A]A^A_
T$0H
E9l$
E9l$
E9l$
[]A\A]A^A_
T$0H
d$ I
T$HH
d$ H
T$0H
T$0L
T$0H
T$0H
T$0H
@t	H
F8H9
ffffff.
AVAUA
ATUH
[]A\A]A^
L9s8
T$0H
L$0H
A\A]A^
T$0H
 t%H
L$0H
[]A\A]H
D$HE
\$ H
t$H~mA
l$0L
D$8D9
l$0L
D$8L
\$XH
l$`L
d$hL
l$pL
t$xL
\$ A
xtDH
t$(L
L$HL
L$HD)
D$8H
l$0I
fffff.
AWAVAUATE
L9$$H
8[]A\A]A^A_
t$(1
8[]A\A]A^A_
[]A\A]A^A_
l$ H
ffffff.
l$ H
fffff.
AVAUATUH
~vWI
~w<H
[]A\A]A^A_
"t)L
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
</t_E1
ffffff.
AWAVAUATI
t$`I
T$@L
L$ H
l$ M
[]A\A]A^A_
t1<\u
L$(H
$<>tB</
D$ H
D$`<
D$a/
D$@H
~vXH
D$8H
L$8H
$t?H
|$8L
\$0H
l$8L
d$@L
l$HL
t$PH
l$ H
AVAUATUSH
t+f;
8[]A\A]A^A_
fffff.
AUATUSH
[]A\A]A^
[]A\A]A^
[]A\A]A^
[]A\A]
@u9H
AWAVAUATI
|$(M
\$xH
H9K8t'
hH9H8u
\$xA
T$0L
T$0H
T$0H
@x u
T$0H
[]A\A]A^A_
D$(%
|$@H
\$@I
T$0H
T$0H
T$0H
AWAVAUA
|$`H
T$(H
|$0H
T$HL
D$8L
~vM<<
dH3<%(
[]A\A]A^A_
~w-H
r+<:
t$0A
T$0H
t$ H
]u6J
D$ H
|$(H
t$(H
L$8H
T$@L
|$(H
t$(H
D$PH
t$0D
5	w!
|$(L
|$HL
t$ L
l$\L
|$PL
l$ A
V(~a
40A:4
D$ M
l$\L
|$PH
|$ L
L;T$(H
%t	A
|$(H
ffffff.
d$@L
D$ 1
44M)
D$ A
T$ H
T$ tjA
T$ H
T$ u
D$ H
AVAUATUS
L$8H
|$ H
D$@H
T$8I9
[]A\A]A^A_
L#f t6L
none
,$I#o 
H#n 
fffff.
AWAVAUATUH
DT$ 
DT$ H
T$ u/E1
[]A\A]A^A_
D$@1
D$(H
D$8H
T$(H
t <:
H;T$8t
t$ H
D$'.1
\$0f
</t3I
;/u;I
<.t]
\$0A
T$'A
H+l$(
t$(H
/t8H
:/Hc
\$0H
$<$tQH
l$ L
t$(L
|$0H
AWAVI
ATUH
5P|!
[]A\A]A^A_
AWAVAUATUH
[]A\A]A^A_
D$(%
ffffff.
AWAVAUATI
8[]A\A]A^A_
8[]A\A]A^A_
l$(M
L$PH
L$PH
t,fA;
$t%A
fE9D$
L$PE
ffffff.
ATUSH
([]A\A]
tJ<H
~wAH
 t1H
t4[H
=5n!
=!n!
AVAUE1
T$(H
T$0dH
D$(1
[]A\A]A^A_
5hk!
=9S!
T$xH
=Bk!
=wS!
=CR!
T$xH
T$$E
D$(H
=Yi!
D5_N!
=Rh!
T$xH
=1h!
5Yg!
=,g!
='M!
l$ H
5xd!
=Qd!
=>d!
5^c!
5Ic!
5)c!
=2J!
5	c!
=rH!
5fb!
ATUSH
=xa!
=Da!
AWAVAUATUSH
D$(1
|$(dH3<%(
8[]A\A]A^A_
l$ A
T$ L
T$ L
@u	L
ffff.
AWHc
ATUH
t'L9
<mt6
[]A\A]A^A_
ffff.
t)fE
(null)
AUATUSD
7QZ^&
ogE1
.D")
[]A\A]A^
fffff.
AWAVI
ATUH
t0@D
[]A\A]A^A_
ffff.
[]A\A]
ffffff.
ffffff.
fffff.
fffff.
ffff.
fff.
fff.
fffff.
|$(H
ATUSH
4xUH
[]A\A]
ffff.
ATUH
[]A\
[]A\
fffff.
ffff.
L$8H
D$@L
L$HH)
D$ H
L$8H
D$@L
L$HH)
D$ H
t$ H
?xtcLt
?xtcLt
?xtcLt
?xtcLt
fff.
?gfcLt
?xtcLt
fff.
?gfcLt
t"9r0
fff.
?xtcLt
?xtcLt
C0u;H
AUATI
;gfcLt"H
H9X8uS
K(E1
C H9(t(H
A\A]A^
xtcLt"H
[]A\
?gfcLt
?xtcLt
?xtcLt
?gfcLt
l$ L
d$(L
l$0L
t$8L
|$@H
ATUH
xtcLt
D$8H
D$8H
D$8H
D$8H
gfcLH
|$8H
|$8H
|$8H
T$8H
@[]A\
T$8H
@[]A\
AWAVAUI
ATUSH
M;} 
T$ H
T$HH
D$(A
D$(H
T$0H
D$8f
uDD;
T$ H
|$(L
\$PL
[]A\A]A^A_
t$0H
AWAVI
AUATI
t$pdH
L$lD
?xtcLt
l$lE
A;D$
A;D$(
D$8H
T$lD;P0
T$pM
l$8I
L$@A
T$,E
L$lA;L$,
[]A\A]A^A_
9T$l
E;T$,
L$lE
T$lH
\$xH
D$xH
t$ H
T$0L
L$pH
L$xH
t$ H
T$0L
E0H9
L$XD
T$PD
\$HD
T$PD
L$XD
T$PD
\$HH
D$`D
L$XD
T$PD
\$Ht&H
\$HD
T$PD
L$XH
L$XH
T$PD
\$H1
\$HD
T$PD
L$XH
L$XD
T$PD
L$XD
T$PD
L$XD
T$PD
\$HD
T$PD
T$pH
\$xH
L$lH
L$XD
T$PD
L$XD
T$PD
\$Ht
L$XD
T$PD
U0H9
L$XD
T$PD
L$XD
T$PD
L$XD
T$PD
ffff.
D$@D
D$8H
D$@D
D$8H
fff.
D$ H
\$@D
D$ 0
D$$0
T$(H
D$ H
\$@D
D$ 0
D$$0
T$(H
L$hE1
D$ L
D$ (
D$$0
\$(H
\$@H
L$hE1
D$ L
D$ (
D$$0
\$(H
\$@H
?gfcLt
D9k(t<A
l$ H
?gfcLt
A;F(
t$ H
9C0}
AVAUI
?gfcLt
A;F(
A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
ATUH
?xtcLt
gfcLt
C0uQH
[]A\
xtcLH
 []A\
 []A\
?taCMt
ffff.
;taCMt
taCMH
l$ L
t$(L
|$0H
ffff.
ffff.
l$ H
d$(L
l$0H
t$ H
ffffff.
t$ H
r9vo
ffff.
rpt|)
ffff.
;v!H
;v!H
d$ H
ffffff.
d$ H
ffffff.
l$ L
d$(L
l$0L
t$8L
|$@H
ffff.
H=?B
H-@B
H=?B
H=?B
H-@B
H=?B
*RID[
AUATUSH
9Xu>H9
gfff
9Xu&
zt)A
t@[]A\A]1
[]A\A]A
ffff.
?*RIDt/H
?*RIDt?H
?*RIDtzH
ffffff.
?*RIDt
/t	H
l$ H
ffff.
ffff.
ffff.
ffff.
AWAVAUATI
Xu6I
[]A\A]A^A_
fff.
AWAVAUATUH
Xu8I
[]A\A]A^A_
t$ H
ffff.
fffff.
ffff.
t$h1
fffff.
l$ L
t$(L
|$0H
%i %c %16s
sntp auth_init: Couldn't open key file %s for reading!
sntp auth_init: Key file %s is empty!
Initializing KOD DB...
/dev/null
KoD DB %s empty.
%llx %4s %254s
%16.16llx %s %s
kod_init_kod_db(): Cannot open KoD db file %s
Starting to read KoD file %s...
Syntax error in KoD db file %s in line %i (missing space)
KoD DB %s contains %d entries, reading...
An error occured while parsing the KoD db file %s
KoD entry %d: %s at %llx type %s
Can't open KOD db file %s for writing!
%s: %s
init_log(): Cannot open logfile %s
set_time: settimeofday(): Time not set: %s
set_time: adjtime(): Time not set: %s
set_li_vn_mode: leap > 3 using max. 3
set_li_vn_mode: mode > 7, using client mode 3
sntp on_wire: Received KOD packet with code: %c%c%c%c from %s, demobilizing all connections
Received a KOD packet with code %c%c%c%c from %s, demobilizing all connections
sntp on_wire: Received %i bytes from %s
sntp on_wire:	t21: %.6f		 t34: %.6f
		delta: %.6f	 offset: %.6f
Received no useable packet from %s!
sntp on_wire: Received no useable packet from %s!
Unable to resolve hostname(s)
on_wire failed for server %s!
%d prior KoD%s for %s, skipping.
%.*f
 +/- %f secs
Started sntp
/var/lib/ntp/sntp-kod
Failed to create UDP socket with family %d
sntp recvpkt: Funny packet length: %i. Discarding package.
sntp recvpkt: Received packet is too big (%i bytes), trying again to get a useable packet
sntp recvpkt: Broadcast packet received from %s is not authentic. Will discard this packet.
sntp recvpkt: Broadcast packet received from %s is not authentic. Authentication not enforced.
sntp recvpkt: Broadcast packet received from %s successfully authenticated using key id %i.
sntp recvpkt: Packet got wrong version (%i)
sntp recvpkt: mode %d stratum %i
sntp recvpkt: Stratum unspecified, going to check for KOD (stratum: %i)
sntp recvpkt: Packet refid: %c%c%c%c
sntp recvpkt: Server not in sync, skipping this server
sntp recvpkt: pkt.org and peer.xmt differ
sntp sendpkt: Sending packet to %s... 
sntp recv_bcst_data: Couldn't bind() address.
sntp recv_bcst_data: %s is not a broad-/multicast address, aborting...
sntp recv_bcst_data: Couldn't add IP membership for %s
sntp recv_bcst_data: Couldn't join group for %s
sntp recv_bcst_data: select() returned -1, an error occured, aborting.
sntp recv_bcst_data: select() reached timeout (%u sec), aborting.
sntp recv_bcst_data: Failed to receive from broad-/multicast
sntp recv_bcst_pkt: Funny packet length: %i. Discarding package.
sntp recv_bcst_pkt: Received packet is too big (%i bytes), trying again to get a useFable packet
sntp recv_bcst_pkt: Broadcast packet received from %s is not authentic. Will discard this packet.
sntp recv_bcst_pkt: Broadcast packet received from %s is not authentic. Authentication not enforced.
sntp recv_bcst_pkt: Broadcast packet received from %s successfully authenticated using key id %i.
sntp recv_bcst_pkt: Packet shows wrong version (%i)
sntp recv_bcst_pkt: mode %d stratum %i
sntp recv_bcst_pkt: Stratum unspecified, going to check for KOD (stratum: %i)
recv_bcst_pkt: Server not in sync, skipping this server
DENY
RSTR
RATE
Packet sent.
Error looking up %s
SNTP
.ntprc
sntp copyright (c) 1970-2010 David L. Mills and/or others, all rights reserved
see html/copyright.html
sntp - standard SNTP program - Ver. 4.2.6p1
sntp - standard SNTP program - Ver. 4.2.6p1
USAGE:  %s [ -<flag> [<val>] | --<name>[{=| }<val>] ]... hostname-or-IP ...
.I sntp
implements the Simple Network Time Protocol, and is used
to query an NTP or SNTP server and either
display the time
set the local system's time (given suitable privilege).
It can be
run interactively from the command line or as a
.I cron
job.
NTP and SNTP are defined by draft-ietf-ntp-ntpv4-proto-13, which
obsoletes RFC 4330 and RFC 1305.
http://bugs.ntp.org, bugs@ntp.org
Force IPv4 DNS name resolution
IPV4
ipv4
Force IPv6 DNS name resolution
IPV6
ipv6
Normal verbose
NORMALVERBOSE
normalverbose
KoD history filename
Logging with syslog
SYSLOG
syslog
Log to specified logfile
FILELOG
filelog
Set (step) the time with settimeofday()
SETTOD
settod
Set (slew) the time with adjtime()
ADJTIME
adjtime
Use broadcasts to the address specified for synchronisation
BROADCAST
broadcast
Specify the number of seconds to wait for broadcasts
TIMEOUT
timeout
Enable authentication with the key auth-keynumber
AUTHENTICATION
authentication
Specify a keyfile. SNTP will look in this file for the key specified with -a
KEYFILE
keyfile
Output version information and exit
version
Display extended usage information and exit
help
Extended usage information passed thru pager
more-help
Save the option state to a config file
save-opts
Load options from a config file
LOAD_OPTS
no-load-opts
$HOME
%i %s %.2d %.2d:%.2d:%.2d.%.3d
--------------------------------------------------------------------------------
%i: %i 	
%i: %x 	
%d: %x 	
%i: 
@ [arg]
 -- %s
The %s option:
AUTOOPTS_USAGE
autoopts
%%-%ds
malloc of %d bytes failed
%s/%s
%-18s
  %d
#x%02X;
set-membership
keyword
false
true
<%s/>
<%s type=nested>
</%s>
autoopts.c
pOD->pz_Name != ((void *)0)
reset.c
0 == 1
typeset -x -i %s_
=%1$lu # 0x%1$lX
set --
 '%s'
'\''
OPTION_CT=0
VERSION
OPT_ARG_NEEDED=YES
OPT_ARG_NEEDED=OK
LONGUSAGE
OPT_ARG_NEEDED=NO
option
flag
/tmp/use.%lu
PAGER
INVALID-%d
%s_%s_TEXT='
SHELL
/bin/sh
%A %B %e, %Y at %r %Z
#! %s
env | grep '^%s_'
</%s>
[%s]
PATH
POSIXLY_CORRECT
   -%c
YMWD
Invalid time duration:  %s
type
words
members
uncooked
keep
invalid
nested
integer
bool
string
boolean
hierarchy
strdup of %d byte string failed
realloc of %d bytes at 0x%p failed
echo 'Warning:  Cannot load options files' >&2
echo 'Warning:  Cannot save options files' >&2
echo 'Warning:  Cannot suppress the loading of options files' >&2
AO_CURRENT.AO_REVISION
%s WARNING:  cannot save options - 
</%s>
<%s/>
<%s type=%s>
<%1$s type=integer>0x%2$lX</%1$s>
<%1$s type=boolean>%2$s</%1$s>
<%s>
amp;
quot;
apos;
optionResetOpt
longOptionFind
export %s_%s_%d
%s_%s_%d=
%1$s_%2$s_CT=%3$d
export %1$s_%2$s_CT
%1$s_%2$s_MODE='%3$s'
export %1$s_%2$s_MODE
%1$s_%2$s='%3$s'
export %1$s_%2$s
export %s_%s
%s_%s=
%1$s_%2$s=%3$s
export %1$s_%2$s
%1$s_%2$s=%3$d # 0x%3$X
export %1$s_%2$s
OPTION_CT=%d
export OPTION_CT
%1$s /tmp/use.%2$lu ; rm -f /tmp/use.%2$lu
				  
				- 
OPT_PROCESS=true
OPT_ARG="$1"
while ${OPT_PROCESS} && [ $# -gt 0 ]
    OPT_ELEMENT=''
    OPT_ARG_VAL=''
    case "${OPT_ARG}" in
    -- )
        OPT_PROCESS=false
        shift
        ;;
    --* )
        OPT_CODE=`echo "X${OPT_ARG}"|sed 's/^X-*//'`
        shift
        OPT_ARG="$1"
        case "${OPT_CODE}" in *=* )
            OPT_ARG_VAL=`echo "${OPT_CODE}"|sed 's/^[^=]*=//'`
            OPT_CODE=`echo "${OPT_CODE}"|sed 's/=.*$//'` ;; esac
        case "${OPT_ARG_NEEDED}" in
        NO )
            OPT_ARG_VAL=''
            ;;
        YES )
            if [ -z "${OPT_ARG_VAL}" ]
            then
                if [ $# -eq 0 ]
                then
                    echo No argument provided for ${OPT_NAME} option >&2
                    echo "$%s_USAGE_TEXT"
                    exit 1
                fi
                OPT_ARG_VAL="${OPT_ARG}"
                shift
                OPT_ARG="$1"
            fi
            ;;
        OK )
            if [ -z "${OPT_ARG_VAL}" ] && [ $# -gt 0 ]
            then
                case "${OPT_ARG}" in -* ) ;; * )
                    OPT_ARG_VAL="${OPT_ARG}"
                    shift
                    OPT_ARG="$1" ;; esac
            fi
            ;;
        esac
        ;;
    * )
         OPT_PROCESS=false
         ;;
    esac
OPT_ARG="$1"
while [ $# -gt 0 ]
    OPT_ELEMENT=''
    OPT_ARG_VAL=''
    OPT_ARG="${1}"
    -* )
        OPT_CODE=`echo "X${OPT_ARG}" | sed 's/X-\(.\).*/\1/'`
        OPT_ARG=` echo "X${OPT_ARG}" | sed 's/X-.//'`
        case "${OPT_ARG_NEEDED}" in
        NO )
            if [ -n "${OPT_ARG}" ]
            then
                OPT_ARG=-"${OPT_ARG}"
            else
                shift
                OPT_ARG="$1"
            fi
            ;;
        YES )
            if [ -n "${OPT_ARG}" ]
            then
                OPT_ARG_VAL="${OPT_ARG}"
            else
                if [ $# -eq 0 ]
                then
                    echo No argument provided for ${OPT_NAME} option >&2
                    echo "$%s_USAGE_TEXT"
                    exit 1
                fi
                shift
                OPT_ARG_VAL="$1"
            fi
            shift
            OPT_ARG="$1"
            ;;
        OK )
            if [ -n "${OPT_ARG}" ]
            then
                OPT_ARG_VAL="${OPT_ARG}"
                shift
                OPT_ARG="$1"
            else
                shift
                if [ $# -gt 0 ]
                then
                    case "$1" in -* ) ;; * )
                        OPT_ARG_VAL="$1"
                        shift ;; esac
                    OPT_ARG="$1"
                fi
            fi
            ;;
        esac
    if [ -n "${OPT_ARG_VAL}" ]
    then
        eval %1$s_${OPT_NAME}${OPT_ELEMENT}="'${OPT_ARG_VAL}'"
        export %1$s_${OPT_NAME}${OPT_ELEMENT}
    fi
done
unset OPT_PROCESS || :
unset OPT_ELEMENT || :
unset OPT_ARG || :
unset OPT_ARG_NEEDED || :
unset OPT_NAME || :
unset OPT_CODE || :
unset OPT_ARG_VAL || :
%2$s
# # # # # # # # # #
#  END OF AUTOMATED OPTION PROCESSING
# # # # # # # # # # -- do not modify this marker --
# # # # # # # # # # -- do not modify this marker --
#  DO NOT EDIT THIS SECTION
%s OF %s
#  From here to the next `-- do not modify this marker --',
#  the text has been generated %s
#  From the %s option definitions
stdout
if test -z "${%1$s_%2$s}"
then
  %1$s_%2$s_CT=0
else
  %1$s_%2$s_CT=1
  %1$s_%2$s_1="${%1$s_%2$s}"
export %1$s_%2$s_CT
%1$s_%2$s="${%1$s_%2$s-'%3$s'}"
%1$s_%2$s_set=false
export %1$s_%2$s
%1$s_%2$s="${%1$s_%2$s}"
%1$s_%2$s_set=false
export %1$s_%2$s
        case "${OPT_CODE}" in
        * )
            echo Unknown %s: "${OPT_CODE}" >&2
            echo "$%s_USAGE_TEXT"
            exit 1
            ;;
        esac
            echo "$%s_%s_TEXT"
            exit 0
            echo "$%s_LONGUSAGE_TEXT" | ${PAGER-more}
            exit 0
            %s
            if [ -n "${%1$s_%2$s}" ] && ${%1$s_%2$s_set} ; then
                echo Error:  duplicate %2$s option >&2
                echo "$%1$s_USAGE_TEXT"
                exit 1 ; fi
            %1$s_%2$s_set=true
            OPT_NAME='%2$s'
            if [ $%1$s_%2$s_CT -ge %3$d ] ; then
                echo Error:  more than %3$d %2$s options >&2
                echo "$%1$s_USAGE_TEXT"
                exit 1 ; fi
            %1$s_%2$s_CT=`expr ${%1$s_%2$s_CT} + 1`
            OPT_ELEMENT="_${%1$s_%2$s_CT}"
            OPT_NAME='%2$s'
            eval %1$s_%2$s${OPT_ELEMENT}=true
            export %1$s_%2$s${OPT_ELEMENT}
            OPT_ARG_NEEDED=NO
            eval %1$s_%2$s${OPT_ELEMENT}=true
            export %1$s_%2$s${OPT_ELEMENT}
            OPT_ARG_NEEDED=OK
            OPT_ARG_NEEDED=YES
            ;;
        '%s' )
        '%s' | \
            if [ -n "${%1$s_%2$s}" ] && ${%1$s_%2$s_set} ; then
                echo Error:  duplicate %2$s option >&2
                echo "$%1$s_USAGE_TEXT"
                exit 1 ; fi
            %1$s_%2$s_set=true
            %1$s_%2$s='%3$s'
            export %1$s_%2$s
            OPT_NAME='%2$s'
            %1$s_%2$s_CT=0
            OPT_ELEMENT=''
            %1$s_%2$s='%3$s'
            export %1$s_%2$s
            OPT_NAME='%2$s'
        '%c' )
 ,|+	
*INVALID*
AutoOpts function called without option descriptor
	This exceeds the compiled library version:  
Automated Options Processing Error!
	%s called AutoOpts function with structure version %d:%d:%d.
	This is less than the minimum library version:  
Automated Options version %s
	copyright (c) 1999-2009 by Bruce Korb - all rights reserved
AutoOpts lib error: defaulted to option with optional arg
(AutoOpts bug):  Aliasing option is out of range.
				- an alternate for %s
%s error:  the keyword `%s' is ambiguous for %s
%s: ambiguous option -- %s
%s: Command line arguments required
%d %s%s options allowed
version and help options:
Error %d (%s) from the pipe(2) syscall
ERROR: version option argument '%c' invalid.  Use:
	'v' - version only
	'c' - version and copyright
	'n' - version and copyright notice
ERROR:  %s option conflicts with the %s option
%s(optionSaveState): error: cannot allocate %d bytes
				- default option for unnamed options
				- disabled as --%s
%s: The ``%s'' option has been disabled
 --- %-14s %s
This option has been disabled
				- enabled by default
-equivalence
ERROR:  only 
 - examining environment variables named %s_*
     
Options are specified by doubled hyphens and their name
or by a single hyphen and the flag character.
%%-%ds %%s
fs error %d (%s) on fork - cannot obtain %s usage
File error %d (%s) opening %s for loading options
fs error %d (%s) reading file %s
fs error %d (%s) on %s %s for option %s
stat-ing for directory
stat-ing for regular file
stat-ing for non-existant file
open-ing file
fopen-ing file
				- file must not pre-exist
				- file must pre-exist
= = = = = = = =
This incarnation of genshell will produce
a shell script to parse the options for %s:
=Cplx
[=arg]
--%2$s%1$s
%s: illegal option -- %c
%s: illegal option -- %s
illegal
  or an integer from %d through %d
AutoOpts ERROR:  invalid option descriptor for %s
  or an integer mask with any of the lower %d bits set
				- is a set membership option
%s: option `%s' requires an argument
Equivalenced option '%s' was equivalenced to both
	'%s' and '%s'
				- must appear between %d and %d times
ERROR:  The %s option is required
%s: option `%s' cannot have an argument
%s: Command line arguments not allowed
error %d (%s) creating %s
Options are specified by single or double hyphens and their name.
%s error:  `%s' does not match any %s keywords
				- may appear multiple times
				- may not be preset
The 'reset-option' option requires an argument
   Arg Option-Name    Description
  Flg Arg Option-Name    Description
error %d (%s) stat-ing %s
%s(optionRestore): error: no saved option state
none
'%s' not defined
'%s' is not a command line option
ERROR:  The %s option must appear %d times
error:  cannot load options from non-regular file %s
%s error:  `%s' is not a recognizable number
 %3s %s
The '-#<number>' option may omit the hash char
one %s%s option allowed
All arguments are named options.
 - reading file %s
please send bug reports to:  %s
				- may NOT appear - preset only
#  preset/initialization file
#  %s#
The following option preset mechanisms are supported:
program
prohibits these options:
Operands and options may be intermixed.  They will be reordered.
%s%ld to %ld
%sgreater than or equal to %ld
%sIt must lie in one of the ranges:
%sThis option must lie in one of the ranges:
%sit must be:  
, or
%s error:  %s option value ``%s'' is out of range.
%s%ld exactly
%sis scalable with a suffix: k/K/m/M/g/G/t/T
%sless than or equal to %ld
The --reset-option has not been configured.
ERROR:  %s option requires the %s option
 %3s %-14s %s
requires these options:
   Arg Option-Name   Req?  Description
  Flg Arg Option-Name   Req?  Description
or you may use a numeric representation.  Preceding these with a '!' will
clear the bits, specifying 'none' will clear all bits, and 'all' will set them
all.  Multiple entries may be passed as an option argument list.
      
				- 
				-- and 
				%s
				- may appear up to %d times
The valid "%s" option keywords are:
GENSHELLOPT
genshellopt copyright (c) 1999-2009 Bruce Korb, all rights reserved
genshellopt is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any later
version.
genshellopt is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with
this program.  If not, see <http://www.gnu.org/licenses/>.
genshellopt - Generate Shell Option Processing Script - Ver. 1
genshellopt - Generate Shell Option Processing Script - Ver. 1
USAGE:  %s [ -<flag> [<val>] | --<name>[{=| }<val>] ]...
Note that `shell' is only useful if the output file does not already
exist.  If it does, then the shell name and optional first argument
will be extracted from the script file.
If the script file already exists and contains Automated Option Processing
text, the second line of the file through the ending tag will be replaced
by the newly generated text.  The first `#!' line will be regenerated.
autogen-users@lists.sourceforge.net
LONGUSAGE
USAGE
VERSION
Output Script File
SCRIPT
script
Shell name (follows "#!" magic)
SHELL
no-shell
Output version information and exit
version
Display extended usage information and exit
help
Extended usage information passed thru pager
more-help
fatal out of memory duplicating %u bytes
%s: fatal out of memory duplicating %u bytes
fatal out of memory (%u bytes)
%s: fatal out of memory (%u bytes)
%s[%d]: %s
addto_syslog: %s
(socktoa unknown family %d)
low != ((void *)0) && high != ((void *)0)
retrieving the address of an IPv6 socket from the kernel failed.
IPv6 structures in kernel and user space do not match.
./../lib/isc/unix/net.c
socket() %s: %s
IPv6 is not supported.
buf != ((void *)0)
./../lib/isc/unix/strerror.c
Unknown error: %u
((*((&isc_strerror_lock)))++ == 0 ? 0 : 34) == 0
(--(*((&isc_strerror_lock))) == 0 ? 0 : 34) == 0
-- --- --:--:--
%2d %s %02d:%02d:%02d
%08lx.%08lx  --- --- -- ---- --:--:--
%08lx.%08lx  %s, %s %2d %4d %2d:%02d:%02d.%03lu
ENSURE
REQUIRE
INSIST
INVARIANT
%s:%d: %s(%s) %s.
RUNTIME_CHECK(%s) %s
fatal error
%s:%d: %s: 
%s:%d: 
libisc.cat
(((lctx) != ((void *)0)) && (((const isc__magic_t *)(lctx))->magic == ((('L') << 24 | ('c') << 16 | ('t') << 8 | ('x')))))
lctx->logconfig != ((void *)0)
categories != ((void *)0) && categories[0].name != ((void *)0)
modules != ((void *)0) && modules[0].name != ((void *)0)
(((lcfg) != ((void *)0)) && (((const isc__magic_t *)(lcfg))->magic == ((('L') << 24 | ('c') << 16 | ('f') << 8 | ('g')))))
(((lcfg) != ((void *)0)) && (((const isc__magic_t *)(lcfg))->magic == ((('L') << 24 | ('c') << 16 | ('t') << 8 | ('x')))))
((*((&lctx->lock)))++ == 0 ? 0 : 34) == 0
(--(*((&lctx->lock))) == 0 ? 0 : 34) == 0
lcfgp != ((void *)0) && (((*lcfgp) != ((void *)0)) && (((const isc__magic_t *)(*lcfgp))->magic == ((('L') << 24 | ('c') << 16 | ('f') << 8 | ('g')))))
lcfg->lctx != ((void *)0) && lcfg->lctx->logconfig != lcfg
(lcfg->channels).tail == (channel)
(lcfg->channels).head == (channel)
(lcfg->channellists[i]).tail == (item)
(lcfg->channellists[i]).head == (item)
lctxp != ((void *)0) && (((*lctxp) != ((void *)0)) && (((const isc__magic_t *)(*lctxp))->magic == ((('L') << 24 | ('c') << 16 | ('t') << 8 | ('x')))))
(*((&lctx->lock)) == 0 ? (*((&lctx->lock)) = -1, 0) : 34) == 0
(lctx->messages).tail == (message)
(lctx->messages).head == (message)
type == 2 || type == 3 || type == 4 || type == 1
destination != ((void *)0) || type == 1
(flags & (unsigned int)~(0x001F | 0x1000)) == 0
lcfgp != ((void *)0) && *lcfgp == ((void *)0)
unable to remove log file '%s.%d': %s
unable to rename log file '%s.%d' to '%s.%d': %s
unable to rename log file '%s' to '%s.0': %s
unable to remove log file '%s': %s
lctx == ((void *)0) || (((lctx) != ((void *)0)) && (((const isc__magic_t *)(lctx))->magic == ((('L') << 24 | ('c') << 16 | ('t') << 8 | ('x')))))
category->id < lctx->category_count
module->id < lctx->module_count
isc_time_now((&new->time)) == 0
(channel->destination.file.stream) == ((void *)0)
path != ((void *)0) && *path != '\0'
isc_log_open: roll_log '%s' failed: %s
category_id < lctx->category_count
module == ((void *)0) || module->id < lctx->module_count
category == ((void *)0) || category->id < lctx->category_count
lctxp != ((void *)0) && *lctxp == ((void *)0)
lcfgp == ((void *)0) || *lcfgp == ((void *)0)
./../lib/isc/log.c
level >= (-5)
default_stderr
default_syslog
default_debug
channel->type == 3
%s.%d
%s.0
category != ((void *)0)
module != ((void *)0)
level != 0
format != ((void *)0)
isc_time_now((&isctime)) == 0
level %d: 
%s %d: 
isc_time_now((&oldest)) == 0
isc_log_open '%s' failed: %s
%s%s%s%s%s%s%s%s%s%s
%s%s%s%s%s%s%s%s%s%s
lctx->category_count != 0
channel != ((void *)0)
lcfg->lctx == lctx
mctx != ((void *)0)
default
general
socket
time
interface
timer
info
notice
warning
critical
(((msgcat) != ((void *)0)) && (((const isc__magic_t *)(msgcat))->magic == ((('M') << 24 | ('C') << 16 | ('a') << 8 | ('t'))))) || msgcat == ((void *)0)
msgcatp != ((void *)0) && *msgcatp == ((void *)0)
./../lib/isc/nls/msgcat.c
set > 0
message > 0
default_text != ((void *)0)
msgcatp != ((void *)0)
base % 65536 == 0
./../lib/isc/result.c
nresults <= 65536
register_table() %s: %u
success
out of memory
timed out
no available threads
address not available
address in use
permission denied
no pending connections
network unreachable
host unreachable
network down
host down
connection refused
not enough free resources
end of file
socket already bound
reload
lock busy
ran out of space
operation canceled
socket is not bound
shutting down
unexpected end of input
failure
I/O error
not implemented
unbalanced parentheses
no more
invalid file
bad base64 encoding
unexpected token
unexpected error
already running
ignore
address mask not contiguous
file not found
file already exists
socket is not connected
out of range
out of entropy
not a file
not a directory
queue is full
address family mismatch
address family not supported
bad hex encoding
too many open files
not blocking
unbalanced quotes
operation in progress
connection reset
soft quota reached
not a valid number
disabled
max size
invalid address format
bad base32 encoding
((*((&lock)))++ == 0 ? 0 : 34) == 0
(--(*((&lock))) == 0 ? 0 : 34) == 0
(result code text not available)
invalid use of multicast address
i != ((void *)0)
./../lib/isc/unix/time.c
i->nanoseconds < 1000000000
t->nanoseconds < 1000000000
len > 0
%Y-%m-%dT%H:%M:%SZ
flen < len
%a, %d %b %Y %H:%M:%S GMT
%d-%b-%Y %X
.%03u
99-Bad-9999 99:99:99.999
t1 != ((void *)0) && t2 != ((void *)0)
t1->nanoseconds < 1000000000 && t2->nanoseconds < 1000000000
t != ((void *)0) && i != ((void *)0) && result != ((void *)0)
t->nanoseconds < 1000000000 && i->nanoseconds < 1000000000
gettimeofday returned bad tv_usec: corrected
dir != ((void *)0)
./../lib/isc/unix/dir.c
dirname != ((void *)0)
templet != ((void *)0)
(((dir) != ((void *)0)) && (((const isc__magic_t *)(dir))->magic == ((('D') << 24 | ('I') << 16 | ('R') << 8 | ('*'))))) && dir->handle != ((void *)0)
(((dir) != ((void *)0)) && (((const isc__magic_t *)(dir))->magic == ((('D') << 24 | ('I') << 16 | ('R') << 8 | ('*')))))
unable to convert errno to isc_result: %d: %s
./../lib/isc/unix/errno2result.c
filename != ((void *)0)
./../lib/isc/unix/file.c
length > 0U
file != ((void *)0)
stats != ((void *)0)
pathname != ((void *)0)
oldname != ((void *)0)
newname != ((void *)0)
remove '%s': failed
path != ((void *)0)
tmp-XXXXXXXXXX
time != ((void *)0)
fp != ((void *)0) && *fp == ((void *)0)
file != ((void *)0) && time != ((void *)0)
jitter < max
./../lib/isc/random.c
val != ((void *)0)
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
=T/F
=KWd
=file
=Mbr
=Tim
=num
=str
X]N	
O$_	
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
sntp.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.note.ABI-tag
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.interp
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rela.plt
.got.plt
.got
.text
