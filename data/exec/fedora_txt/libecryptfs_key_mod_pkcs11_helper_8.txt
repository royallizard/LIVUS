__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
pkcs11h_key_transition
__asprintf_chk
strlen
memcpy
__syslog_chk
pkcs11h_certificate_deserializeCertificateId
pkcs11h_certificate_create
pkcs11h_certificate_freeCertificate
pkcs11h_certificate_freeCertificateId
memset
X509_free
fclose
fopen
PEM_read_X509
i2d_X509
malloc
ecryptfs_add_key_module_key_to_keyring
pkcs11h_certificate_getCertificateBlob
pkcs11h_getMessage
__errno_location
stack_push
exit
pkcs11h_terminate
pkcs11h_certificate_setCertificateIdCertificateBlob
pkcs11h_certificate_decryptAny
X509_new
d2i_X509
X509_get_pubkey
EVP_PKEY_get1_RSA
EVP_PKEY_free
RSA_free
RSA_size
RSA_public_encrypt
ERR_get_error
BN_num_bits
BN_bn2bin
SHA1
to_hex
pkcs11h_addProvider
sscanf
strtol
pkcs11h_setPINCachePeriod
pkcs11h_setLogLevel
cryptfs_get_ctx_opts
strncpy
__vsyslog_chk
getuid
getpwuid
parse_options_file
ecryptfs_verbosity
ecryptfs_eval_decision_graph
pkcs11h_initialize
pkcs11h_setLogHook
pkcs11h_setTokenPromptHook
pkcs11h_setPINPromptHook
pkcs11h_setProtectedAuthentication
pkcs11h_certificate_enumCertificateIds
pkcs11h_certificate_serializeCertificateId
BIO_free_all
pkcs11h_certificate_freeCertificateIdList
X509_get_subject_name
X509_NAME_oneline
BIO_s_mem
BIO_new
X509_get_serialNumber
i2a_ASN1_INTEGER
BIO_read
ecryptfs_find_key_mod
get_key_mod_ops
libpthread.so.0
libpkcs11-helper.so.1
libcrypto.so.10
libz.so.1
libdl.so.2
libc.so.6
__stack_chk_fail
_edata
__bss_start
_end
libecryptfs_key_mod_pkcs11_helper.so
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.1
GLIBC_2.8
GLIBC_2.0
d$,[^_]
d$|[^_]
[^_]
[^_]
d$ [^]
[^_]
PKCS#11: Out of memory
PKCS#11: %s: Internal error
ecryptfs_sig=%s
PKCS#11: Cannot get RSA key
password
%s/.ecryptfsrc.pkcs11
pkcs11-helper
PKCS#11: Cannot create BIO
%s%s (%s) [%s]
keyformat
Key format
default
PKCS#11 ID
PKCS#11 Serialized ID
passwd
passenv
Passphrase ENV
passstdin
Passphrase STDIN
defaultpass
x509file
pkcs11-log-level
PKCS#11 Log Level
pkcs11-pin-cache-timeout
pkcs11-provider
PKCS#11 Provider
name
PKCS#11 Provider Alias
library
PKCS#11 Library
allow-protected-auth
cert-private
Certificate is private object
private-mask
Private Key Mask
dummy
PKCS#11: pkcs11h_data internal structure not properly filled in
PKCS#11: Cannot open file '%s'
PKCS#11: Cannot read PEM from file '%s'
PKCS#11: Cannot allocate memory
PKCS#11: Cannot deserialize id rv=[%ld-'%s']
PKCS#11: Cannot get certificate rv=[%ld-'%s']
PKCS#11: Cannot load certificate rv=[%ld-'%s']
PKCS#11: Error serializing pkcs11; rc=[%d]
PKCS#11: Error serializing pkcs11
PKCS#11: Error attempting to add key to keyring for key module [%s]; rc=[%d]
PKCS#11: Error processing PKCS#11 key; rc=[%d]
PKCS#11: Cannot set certificate blob rv=[%ld-'%s']
PKCS#11: Cannot create certificate handle rv=[%ld-'%s']
PKCS#11: Cannot decrypt rv=[%ld-'%s']
PKCS#11: Unable to allocate certificate object
PKCS#11: Unable to parse X.509 certificate
PKCS#11: Cannot get public key
PKCS#11: Invalid public key algorithm
PKCS#11: Error attempting to read RSA key from token; rc=[%d]
PKCS#11: Error attempting to perform RSA public key encryption; rc=[%d]
PKCS#11: Error attempting to generate key signature; rc=[%d]
PKCS#11: Cannot initialize provider '%s' rv=[%ld-'%s']
Please enter PIN for token '%s'
PKCS#11: name = [%s]; value = [%s]
PKCS#11: Cannot initialize rv=[%ld-'%s']
PKCS#11: Cannot set hooks rv=[%ld-'%s']
PKCS#11: Cannot set protected authentication mode rv=[%ld-'%s']
PKCS#11: Cannot enumerate certificates rv=[%ld-'%s']
PKCS#11: Cannot serialize certificate id certificates rv=[%ld-'%s']
PKCS#11: Cannot create certificate rv=[%ld-'%s']
PKCS#11: Cannot find key_mod for param_node with val = [%s]
PKCS#11 module using pkcs11-helper
Passphrase (empty for interactive)
Optional X.509 Certificate PEM file
Allow Protected Authentication
ecryptfs_pkcs11h_process_key
libecryptfs_key_mod_pkcs11_helper.so.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rel.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rel.plt
.got.plt
.got
.text
