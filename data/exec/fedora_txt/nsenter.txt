td`\
/lib/ld-linux.so.2
libselinux.so.1
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
_init
is_selinux_enabled
freecon
getpidcon
setexeccon
_fini
libc.so.6
_IO_stdin_used
setuid
chroot
strcpy
__printf_chk
execl
setlocale
strncmp
optind
__strdup
dcgettext
fchdir
fork
warnx
_exit
getpid
kill
strspn
__assert_fail
strtod
strtol
fgetc
calloc
strlen
localeconv
warn
strcspn
__errno_location
open64
setgroups
setns
__fprintf_chk
stdout
fputc
__strtoll_internal
fputs
fclose
strtoul
malloc
__strndup
__ctype_b_loc
getenv
optarg
stderr
__snprintf_chk
getopt_long
execvp
waitpid
__fpending
strchr
program_invocation_short_name
__cxa_finalize
errx
bindtextdomain
setgid
strcmp
__strtoull_internal
__libc_start_main
ferror
basename
__progname
__cxa_atexit
__stack_chk_fail
_edata
__bss_start
_end
GLIBC_2.3
GLIBC_2.1.3
GLIBC_2.2
GLIBC_2.14
GLIBC_2.4
GLIBC_2.1
GLIBC_2.0
GLIBC_2.3.4
D$\1
t$\e35
[^_]
|$Du
D$Xt
UWVS
8 tH
[^_]
UWVS
d$,[^_]
[^_]
UWVS
|$,e
|$L1
|$ <i
VUUU
D$ d
T$$wFr
D$01
;\$ t
;l$$
\$Le3
d$\[^_]
;|$,
D$41
9t$$t(
L$89
D$,1
UWVS
[^_]
UWVS
|$De
d$,[^_]
UWVS
[^_]
UWVS
|$De
d$,[^_]
UWVS
|$De
d$,[^_]
UWVS
|$De
d$,[^_]
UWVS
|$De
d$,[^_]
|$4e
d$ [^_
d$$[^
UWVS
[^_]
UWVS
D$|1
D$W 
t$|e35
[^_]
gfff
D$<1
L$@!
L$D!
UWVS
[^_]
[^_]
[^_]
UWVS
t$<te
wT<+t@
[^_]
UWVS
[^_]
[^_]
UWVS
[^_]
[^_]
UWVS
l$Te
L$,1
-t"1
|$,e3=
d$<[^_]
UWVS
d$,[^_]
d$,1
[^_]
UWVS
9D$Hwd
[^_]
D$Xe
T$,1
L$,e3
d$<[^_]
UWVS
UWVS
[^_]
[^_]
[^_]
[^_]
UWVS
t$,U
[^_]
Usage:
Options:
For more details see %s.
nsenter(1)
/proc/%u/%s
cannot open %s
sys-utils/nsenter.c
nsfile->nstype
write error
/usr/share/locale
util-linux
%s from %s
util-linux 2.27
failed to parse pid
failed to parse uid
failed to parse gid
root
chroot failed
fork failed
setgroups failed
setgid failed
setuid failed
failed to execute %s
help
version
target
mount
setuid
setgid
no-fork
preserve-credentials
follow-context
ns/user
ns/ipc
ns/uts
ns/net
ns/pid
ns/mnt
 %s [options] <program> [<argument>...]
Run a program with namespaces of other processes.
 -t, --target <pid>     target process to get namespaces from
 -m, --mount[=<file>]   enter mount namespace
 -u, --uts[=<file>]     enter UTS namespace (hostname etc)
 -i, --ipc[=<file>]     enter System V IPC namespace
 -n, --net[=<file>]     enter network namespace
 -p, --pid[=<file>]     enter pid namespace
 -U, --user[=<file>]    enter user namespace
 -S, --setuid <uid>     set uid in entered namespace
 -G, --setgid <gid>     set gid in entered namespace
     --preserve-credentials do not touch uids or gids
 -r, --root[=<dir>]     set the root directory
 -w, --wd[=<dir>]       set the working directory
 -F, --no-fork          do not fork before exec'ing <program>
 -Z, --follow-context   set SELinux context according to --target PID
 -h, --help     display this help and exit
 -V, --version  output version information and exit
neither filename nor target pid supplied for %s
+hVt:m::u::i::n::p::U::S:G:r::w::FZ
no target PID specified for --follow-context
failed to get %d SELinux context
failed to set exec context to '%s'
reassociate to namespace '%s' failed
cannot open current working directory
change directory by root file descriptor failed
change directory by working directory file descriptor failed
open_namespace_fd
KMGTPEYZ
kmgtpeyz
%s: '%s'
BKMGTPE
%d%s%jd%s
%d%s
$tI/bin/sh
SHELL
cannot allocate %zu bytes
;*2$"$
nsenter.debug
7zXZ
,Xf/
MnJbD
^9 s
t)/f
M>'0
U!*R
F;ZcFRc
LUa:p
-Xzh
g~4h
3)J<
23~dmZ
94fK
X6@8
L@J2
ff|!
.c=6
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
