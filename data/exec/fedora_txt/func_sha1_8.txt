__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
ast_module_unregister
ast_custom_function_unregister
ast_log
ast_sha1_hash
__ast_custom_function_register
ast_module_register
ast_unregister_file_version
ast_register_file_version
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
GLIBC_2.2.5
ATSubH
=X	 
=)	 
(w9E
ffff.
Syntax: SHA1(<data>) - missing argument!
Insufficient space to produce SHA1 hash result (%d < 41)
SHA-1 computation dialplan function
This paragraph is copyright (c) 2006 by Digium, Inc. In order for your module to load, it must return this key via a function called "key".  Any code which includes this paragraph must be licensed under the GNU General Public License version 2 or later (at your option).  In addition to Digium's general reservations of rights, Digium expressly reserves the right to allow other parties to license this paragraph under different terms. Any use of Digium, Inc. trademarks or logos (including "Asterisk" or "Digium") without express written permission of Digium, Inc. is prohibited.
Generate a SHA1 digest via the SHA1 algorythm.
 Example:  Set(sha1hash=${SHA1(junky)})
 Sets the asterisk variable sha1hash to the string '60fa5675b9303eb62f99a9cd47f9f5837d18f9a0'
 which is known as his hash
func_sha1.c
$Revision: 89521 $
func_sha1
SHA1
Computes a SHA1 digest
SHA1(<data>)
sha1
a9c98e5d177805051735cb5b0b16b0a0
func_sha1.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
