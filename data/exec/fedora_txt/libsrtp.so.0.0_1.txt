xx^X
# J`
[D7kw
t)<@Fwd
nmd%/
,@wd
k)+lw
RP9BE
FjW9}&
]M)$
F\jx+
;= qdX
__gmon_start__
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
libm.so.6
srtp_event_reporter
err_report
srtp_stream_alloc
crypto_alloc
crypto_kernel_alloc_cipher
crypto_kernel_alloc_auth
ekt_alloc
crypto_free
srtp_stream_dealloc
rdbx_dealloc
srtp_stream_clone
mod_srtp
key_limit_clone
rdbx_get_window_size
rdbx_init
rdb_init
srtp_kdf_init
srtp_kdf_generate
octet_string_set_to_zero
__stack_chk_fail
srtp_kdf_clear
base_key_length
srtp_stream_init_keys
cipher_get_key_length
octet_string_hex_string
auth_get_key_length
srtp_stream_init
key_limit_set
ekt_stream_init_from_policy
srtp_install_event_handler
srtp_init
crypto_kernel_init
crypto_kernel_load_debug_module
srtp_shutdown
crypto_kernel_shutdown
srtp_get_stream
srtp_protect
key_limit_update
auth_get_tag_length
rdbx_estimate_index
rdbx_check
rdbx_add_index
auth_get_prefix_length
cipher_output
srtp_unprotect
octet_string_is_eq
srtp_dealloc
srtp_add_stream
srtp_create
srtp_remove_stream
crypto_policy_set_rtp_default
crypto_policy_set_rtcp_default
crypto_policy_set_aes_cm_128_hmac_sha1_32
crypto_policy_set_aes_cm_128_null_auth
crypto_policy_set_null_cipher_hmac_sha1_80
crypto_policy_set_aes_cm_256_hmac_sha1_80
crypto_policy_set_aes_cm_256_hmac_sha1_32
srtp_protect_rtcp
rdbx_get_packet_index
ekt_write_data
rdb_increment
rdb_get_value
srtp_unprotect_rtcp
ekt_octets_after_base_tag
__memcpy_chk
rdb_check
srtp_stream_init_from_ekt
rdb_add_index
crypto_policy_set_from_profile_for_rtp
crypto_policy_set_from_profile_for_rtcp
append_salt_to_key
memcpy
srtp_profile_get_master_key_length
srtp_profile_get_master_salt_length
srtcp_packet_get_ekt_spi
srtcp_packet_get_ekt_roc
srtcp_packet_get_emk_location
aes_decrypt_with_raw_key
aes_expand_decryption_key
aes_decrypt
rdbx_set_roc
srtcp_ekt_trailer
cipher_type_test
mod_cipher
rand_source_init
rand
rand_source_get_octet_string
cipher_type_self_test
cipher_bits_per_second
clock
null_cipher_set_iv
null_cipher_encrypt
null_cipher_alloc
null_cipher
null_cipher_dealloc
null_cipher_init
null_cipher_description
null_cipher_test_0
aes_expand_encryption_key
v128_copy_octet_string
srtp_aes_encrypt
aes_icm_dealloc
aes_icm_set_iv
mod_aes_icm
v128_hex_string
aes_icm_context_init
aes_icm_alloc_ismacryp
aes_icm_alloc
aes_icm_set_octet
aes_icm_advance_ismacryp
aes_icm_advance
aes_icm_encrypt_ismacryp
aes_icm_encrypt
aes_icm_output
aes_icm_description
aes_icm_test_case_1
aes_icm_test_case_1_key
aes_icm_test_case_1_nonce
aes_icm_test_case_1_plaintext
aes_icm_test_case_1_ciphertext
aes_icm_test_case_0
aes_icm_test_case_0_key
aes_icm_test_case_0_nonce
aes_icm_test_case_0_plaintext
aes_icm_test_case_0_ciphertext
aes_cbc_dealloc
aes_cbc_alloc
mod_aes_cbc
aes_cbc_context_init
aes_cbc_set_iv
aes_cbc_encrypt
aes_cbc_nist_encrypt
aes_cbc_decrypt
aes_cbc_nist_decrypt
aes_cbc_description
aes_cbc_test_case_3
aes_cbc_test_case_3_key
aes_cbc_test_case_3_iv
aes_cbc_test_case_3_plaintext
aes_cbc_test_case_3_ciphertext
aes_cbc_test_case_2
aes_cbc_test_case_2_key
aes_cbc_test_case_2_iv
aes_cbc_test_case_2_plaintext
aes_cbc_test_case_2_ciphertext
aes_cbc_test_case_1
aes_cbc_test_case_1_key
aes_cbc_test_case_1_iv
aes_cbc_test_case_1_plaintext
aes_cbc_test_case_1_ciphertext
aes_cbc_test_case_0
aes_cbc_test_case_0_key
aes_cbc_test_case_0_iv
aes_cbc_test_case_0_plaintext
aes_cbc_test_case_0_ciphertext
null_auth_init
null_auth_compute
null_auth_update
null_auth_start
null_auth_alloc
mod_auth
null_auth_dealloc
null_auth_description
null_auth_test_case_0
crypto_sha1_core
SHA_K0
SHA_K1
SHA_K2
SHA_K3
crypto_sha1_init
crypto_sha1_update
mod_sha1
crypto_sha1_final
crypto_sha1
hmac_dealloc
hmac_update
mod_hmac
hmac_start
hmac_alloc
hmac_init
hmac_compute
hmac_description
hmac_test_case_0
hmac_test_case_0_key
hmac_test_case_0_data
hmac_test_case_0_tag
auth_type_get_ref_count
auth_type_test
auth_type_self_test
octet_get_weight
octet_weight
nibble_to_hex_char
hex_char_to_nibble
is_hex_string
hex_string_to_octet_string
v128_bit_string
v128_right_shift
v128_left_shift
bitvector_dealloc
bitvector_set_to_zero
memset
bitvector_alloc
bitvector_bit_string
bitvector_left_shift
base64_char_to_sextet
base64_string_to_octet_string
stat_test_monobit
mod_stat
stat_test_poker
stat_test_runs
stat_test_rand_source
stat_test_rand_source_with_repetition
crypto_kernel_status
__printf_chk
puts
exit
crypto_kernel_list_debug_modules
mod_crypto_kernel
rand_source_deinit
crypto_kernel_get_cipher_type
crypto_kernel_get_auth_type
strncmp
crypto_kernel_do_load_cipher_type
crypto_kernel_do_load_auth_type
crypto_kernel_load_auth_type
crypto_kernel_replace_auth_type
crypto_kernel_load_cipher_type
err_reporting_init
mod_alloc
ctr_prng_init
ctr_prng_get_octet_string
crypto_kernel_replace_cipher_type
crypto_kernel_set_debug_module
crypto_get_random
malloc
key_limit_check
open
read
close
x917_prng_init
x917_prng
x917_prng_get_octet_string
time
x917_prng_deinit
ctr_prng
ctr_prng_deinit
stdout
err_level
__vfprintf_chk
err_reporting_set_level
index_init
index_advance
index_guess
ut_compar
ut_init
qsort
ut_next_index
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
libsrtp.so.0
GLIBC_2.2.5
GLIBC_2.14
GLIBC_2.4
GLIBC_2.3.4
fffff.
fffff.
fffff.
tkrQ
u/[H
fff.
AUATI
{xE1
[]A\A]
[]A\A]
{hH;xh
{8H;x8tcH
{@H;x@t
ATUSH
]A\A]A^
ATUH
[]A\
[]A\
D$(1
T$(dH3
fffff.
AWAVI
AUATUSH
[]A\A]A^A_
t$ 1
t$ 1
u/Hc
fffff.
AVAUATI
[]A\A]A^
|$hH
[]A\A]A^
D$tL
AWAVI
AUATI
D$X1
\$XdH3
h[]A\A]A^A_
l$@H
|$@L
d$@I
D$@H
t$0H
D$8H
d$@L
l$@L
d$@L
l$@L
|$@I
D$@H
T$,L
L$@H
T$,L
L$@H
D$4H
D$@H
AWAVI
AUATUSH
[]A\A]A^A_
L$8H
t$@H
L$HH
D$8H
D$8A
l$PL
|$XH
L$8H
L$DH
L$8H
L$pI
HcD$
t$8I
|$ D
l$PL
|$XH
T$4H
E).1
l$PL
|$XH
T$PL
|$PH
ffff.
ATUI
 []A\
AUATI
[]A\A]
[]A\A]
AWAVAUATI
D$X1
d$@L
t$HH
|$,M
L$XdH3
h[]A\A]A^A_
t$0D
T$<H
t$@I
L$4D
L$8H
T$,L
AWAVI
AUATI
D$<Hc
L$LH
[]A\A]A^A_
t$ I
|$ D
D$,E
|$ D
T$<H
t$PL
|$XH
T$PL
D$PI
fffff.
ffff.
ffff.
ATUH
D$h1
f91t H
|$hdH3<%(
p[]A\
AWAVAUATI
[]A\A]A^A_
[]A\A]A^A_1
fff.
fff.
AWAVAUATUSH
D$8L
D$0I
D$81
|$8H
D$0H
D$8H
O(;L$0
D$8I
A9W(
|$8H
D$0H
D$8H
;D$0
O E1
|$8H
D$ H
D$4H
L$4E
D$81
|$8H
D$8D
|$4L
t$4L
|$8H
D$8H
t$4L
D$,D;|$4
|$8H
[]A\A]A^A_
|$8H
|$8H
t$4L
|$8A
AWAVAUATI
USHc
D$81
|$ ~2
\$,u
L$8dH3
H[]A\A]A^A_
ffff.
ffff.
ATUSH
l+$L
42A3
$"A3
$"C34
$"C34
[]A\
G	AWAVAUATUSA
D3T$
_	D3T$
D3N F3
3^$A1
D3^(E1
D3V,D3T$
D3T$
D3N0F3
3^4A1
D3^8E1
D3V<D3T$
_	D3T$
D3N@F3
3^DA1
D3^HE1
D3VLD3T$
_	D3T$
D3NPF3
3^TA1
D3^XE1
D3V\D3T$
_	D3T$
D3N`F3
3^dA1
D3^hE1
D3VlD3T$
_	D3T$
D3NpD
3^tA1
D3^xE1
D3V|D3T$
_	D3T$
D3T$
_	D3T$
D3T$
D3T$
[]A\A]A^A_
D3T$
_	D3T$
D3T$
_	D3T$
D3L$
A\A]
A^A_
D3L$
AWAVAUATUSA
O	F3
D3N D3
D3f$E1
3n(A1
D3l$
^,D1
D3N0D3
D3n4E1
D3f8E1
D3t$
3n<3l$
D3N@D3
D3fDE1
3^HA1
D3l$
^LD1
D3NPD3
D3nTE1
D3fXD
D3t$
3n\3l$
D3N`D3
D3fdE1
3^hA1
D3l$
^lD1
D3NpD3
D3ntE1
D3fxE1
D3t$
3n|3l$
D3l$
D3|$
[]A\A]A^A_
O	F3
D3l$
D3|$
D3L$
A\A]
0A^A_
O	B3
w	3\$
D3L$
[]A\
AVAUATU
[]A\A]A^
[]A\A]A^
[]A\A]A^
[]A\
[]A\
AUATUS
[]A\A]
[]A\A]
AUATL
g USA
[]A\A]
[]A\A]
ATUL
[]A\
AWAVI
AUATI
([]A\A]A^A_
([]A\A]A^A_
E A0G
E!A0G
E"A0G
E#A0G
E$A0G
E%A0G
E&A0G
E'A0G
E(A0G
E)A0G
E*A0G
E+A0G
E,A0G
E-A0G
E.A0G
E/A0G
E A1G
E$A1G
E(A1G
E,A1G
[]A\A]A^A_
ffffff.
AVAUA
[]A\A]A^
]A\A]A^
[]A\A]A^
AWAV
AUATUSH
[]A\A]A^A_
k f.
[]A\A]A^A_
AWAVAUATUSH
D$81
t$8dH34%(
H[]A\A]A^A_
|$ H
fff.
ffff.
ffff.
ffff.
ffff.
AUATA
[]A\A]
AWAVAUATUSH
l$8D
\$D1
o8D3T$(D
D3T$
L$,A
L$LA
d$`E1
|$\A
|$tE1
\$$D
\$,1
\$(E1
D$XD1
t$dD
d$lD
D$|1
T$pE1
D3L$$3D$
D3d$$A1
\$0D
[]A\A]A^A_
ffffff.
ffffff.
AUATUI
IcL$TB
~PIcL$TB
},Hc
T$TI
T$T[]A\A]A^
D$TB
AWAVI
AUATUSH
GTdH
t$0D
\$`H
D$PH
|$(A
D$,H
D$XH
|$HH
D$8H
D$@I
|$,H
|$,D
\$,D
t$$D
d$HH
L$XD
d$PA
L$@D
L$,H
\$0H
[]A\A]A^A_
tL~.A
AUATA
D$h1
D$hdH3
x[]A\A]
AUATA
[]A\A]
fffff.
ffffff.
AUATA
[]A\A]
ATUSH
D$H1
|$HdH3<%(
P[]A\
AVAUATUS
D$H1
L$HdH3
P[]A\A]A^
l$0L
fff.
fff.
fff.
fff.
AWAVI
AUATUSH
D$H1
d$ E1
;U |
t$HdH34%(
X[]A\A]A^A_
D$	9
fff.
AUATD
$6USH
[]A\A]
ffff.
AUATI
[]A\A]
ATUS
[]A\
fffff.
AVUE1
Z Lc
ATUSA
[]A\
[]A\
@87t
AWAVAUATUSH
H;,$
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
fffff.
D$81
t$8dH34%(
AUATE1
USE1
D$H1
D$8L
L$"fD
D$&fD
L$(f
T$ 1
t$$fD
\$*A
\$0f
l$2A
d$4fD
l$6f
\$HdH3
X[]A\A]
AWAVE1
AUATE1
USE1
l$pf
D$$1
D$&1
D$(1
e2fD
|$"H
t$ f
D$2f
T$4f
L$6f
t$8f
|$:fD
D$@fD
L$BfD
T$Df
\$Hf
T$Pf
r"f9
dH34%(
[]A\A]A^A_
AUATUSH
[]A\A]
[]A\A]
AVAUH
tzf.
]A\A]A^
[]A\A]A^
ffffff.
ffffff.
ATUH
-Am 
%)m 
[]A\
ffff.
ATUA
[]A\H
[]A\
ffffff.
AVAUATUSt	D
gPA9
]A\A]A^
tAE;&u
AVAUATUSt	D
gPA9
]A\A]A^
tAE;&u
;wPt
=1h 
AUATUSH
;wPt
[]A\A]
tAA;m
{HE1
AUATA
[]A\A]
[]A\A]
ffffff.
fffff.
ffff.
ATUH
=Nw 
AWAV
AUAT
D$81
\$ M
t$,H
D$$A
T$ I
T$ L
T$!A
T$"A
T$#A
T$$A
T$%A
T$&A
T$'A
T$(A
T$)A
T$*A
T$+A
T$,A
T$-A
T$.A
T$/A
1l$ 
L;<$
T$ D
t$,A
L$8dH3
H[]A\A]A^A_
\$ A
1D$ H
L$(1
T$(dH3
[]A\
[]A\
fff.
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
fff.
fff.
fff.
ffff.
fffff.
srtp: in stream 0x%x: 
	SSRC collision
	packet index limit reached
%s: cipher key: %s
%s: auth key:   %s
%s: rtcp cipher key: %s
%s: rtcp auth key:   %s
%s: function srtp_protect
%s: keystream prefix: %s
%s: srtp auth tag:    %s
%s: function srtp_unprotect
%s: computed auth tag:    %s
%s: packet auth tag:      %s
%s: srtcp index: %x
%s: srtcp auth tag:    %s
srtp
	key usage soft limit reached
	key usage hard limit reached
	unknown event reported to handler
%s: cloning stream (SSRC: 0x%08x)
%s: found rtp_salt_len > 0, generating salt
%s: found rtcp_salt_len > 0, generating rtcp salt
%s: initializing stream (SSRC: 0x%08x)
%s: estimated packet index: %016llx
%s: using provisional stream (SSRC: 0x%08x)
%s: estimated u_packet index: %016llx
%s: srtcp using provisional stream (SSRC: 0x%08x)
%s: srtcp computed tag:       %s
%s: srtcp tag from packet:    %s
%s: EKT not in use
%s: writing EKT EMK: %s,
%s: writing EKT ROC: %s,
%s: writing EKT ISN: %s,
%s: writing EKT SPI: %s,
%s: running self-test for cipher %s
%s: random plaintext length %d
%s: random test case %d failed
%s: testing encryption
%s: plaintext:    %s
%s: ciphertext:   %s
%s: test case %d failed
%s: (failure at byte %d)
%s: c computed: %s
%s: c expected: %s
%s: testing decryption
%s: ciphertext:    %s
%s: plaintext:   %s
%s: p computed: %s
%s: p expected: %s
%s: plaintext[2]: %s
cipher
%s: allocating cipher with key length %d
%s: initializing null cipher
lpHP
}c|w{
9JLX
~=d]
PQAeS~
U vm
Ebdw
HhXpE
ZrNl
=-9'6
!h[T
6.:$
awKiZ
~4[C)v
j~FbT
1?#1*
[_=o
$4,8
l\tH
eS~A
U 0m
Xti)I
EbSw
hXpH
*fU(
H2+p
rNlZ
9'6-
!h\T
[.:$6g
KiZw
Df~4[
Bc"@
j_FbT~
#1*?
h4,8$@_
2\tHlWB
S~Ae
Xt!)I
Q3EbS
+XpHh
@Cwg
pNlZr
'6-9d
[T:$6.
 iZwK
*C<"
Df;4[
bT~F
1*?#0
f7tN
,8$4_
(<IA
tHl\B
P~AeS
-Xt!
X>k'
Q3`bS
pHhX
lZrN
6-9'
$6.:
ZwKi
T~Fb
&x	nY
*?#1
>8$4,
pHl\t
WBcc
00P`
++}V
=&&jL66Zl??A~
44\h
11Sb
##eF
''iN
,,tX
-6nn
;;Mv
})){R
//q^
  `@
g99KrJJ
33Uf
<<Dx
!88Hp
!!cB
==Gzdd
+2ss
""fD**~T
22Vd::Nt
$$lH\\
77Ynmm
%%oJ..r\
!>KK
>>B|
55_jWW
3"ii
((xP
)--wZ
0P`0
g+}V+
&jL&6Zl6?A~?
4\h4
1Sb1
#eF#
'iN'
,tX,
R;Mv;
){R)
/q^/
 `@ 
9Kr9J
M3Uf3
P<Dx<
8Hp8
!cB!
~=Gz=d
"fD"*~T*
2Vd2:Nt:
$lH$\
7Yn7m
x%oJ%.r\.
p>B|>
a5_j5W
U(xP(
-wZ-
P`00
gg}V++
jL&&Zl66A~??
\h44
Sb11?*
eF##^
iN''
tX,,.4
RRMv;;a
{R))>
q^//
`@  
Kr99
MMUf33
PPDx<<
Hp88
cB!!0 
DD9.
~~Gz==
]]+2
fD""~T**
Vd22Nt::
lH$$
Yn77
xxoJ%%r\..$8
tt!>
ppB|>>
aa_j55
UUxP((z
wZ--
T`00P
V++}
L&&jl66Z~??A
Oh44\Q
sb11S*
RF##e
&N''i
X,,t4
v;;M
R)){
>^//q
,@  `
r99K
f33U
x<<D%
p88H
uB!!c 
z==G
D""fT**~;
;d22Vt::N
H$$l
Cn77Y
J%%o\..r8
|>>Bq
j55_
P((x
Z--w
:%s: setting iv: %s
%s: set_counter: %s
%s: key:  %s
%s: offset: %s
%s: set_octet: %s
%s: counter:    %s
%s: ciphertext: %s
%s: block index: %d
aes icm
%s: iv: %s
%s: inblock:  %s
%s: outblock: %s
aes cbc
%s: allocating auth func with key length %d
%s:                           tag length %d
%s: (update) running sha1_core()
%s: (update) not running sha1_core()
%s: (final) running sha1_core()
%s: (final) running sha1_core() again
%s: input: %s
%s: ipad: %s
%s: intermediate state: %s
%s: output: %s
hmac sha-1
%s: running self-test for auth function %s
%s: key: %s
%s: data: %s
%s: tag computed: %s
%s: tag expected: %s
%s:   (mismatch at octet %d)
auth func
?456789:;<=
 !"#$%&'()*+,-./0123
%s: bit count: %d
%s: poker test: %f
%s: >25 runs: %d
%s: >25 gaps: %d
%s: >25 runs (2): %d
%s: >25 gaps (2): %d
%s: runs test
%s:   runs[]: %d
%s:   gaps[]: %d
%s: >25 runs (3): %d
%s: >25 gaps (3): %d
%s: >25 runs (4): %d
%s: >25 gaps (4): %d
%s: stat: bit count: %d
%s: stat: poker test: %f
%s: stat: failed poker test
%s: passed random stat test
stat test
%s: couldn't get rand bytes: %d
%s: stat: failed monobit test %d
%s: stat: failed run/gap test
%s: failed stat test (try number %d)
G@testing rand_source...
failed
passed
cipher: %s
  instance count: %d
  self-test: 
failed with error code %d
debug modules loaded:
auth func: %s
  %s 
(on)
(off)
crypto
crypto kernel
%s: freeing memory for cipher %s
%s: freeing memory for authentication %s
%s: freeing memory for debug module %s
%s: (location: %p) allocated
%s: (location: %p) freed
alloc
%s: allocation failed (asked for %d bytes)
/dev/urandom
;*3$"
null cipher
pPum
aes integer counter mode
p,}9
"3DUfw
.#D8p
"3DUfw
aes cipher block chaining (cbc) mode
null authentication function
hmac sha-1 authentication function
Hi There
libsrtp.so.0.0.0.debug
7zXZ
QHXXwY
1t.[e5
Z,2)
/y`7
v ?e
xW~i
KVlJB
QD@Wr
?	hV
]e.Y
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
