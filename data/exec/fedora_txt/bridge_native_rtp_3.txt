__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
ast_bridge_technology_unregister
ast_channel_tech
ast_rtp_instance_get_glue
__ao2_lock
__ao2_unlock
sched_yield
__ao2_trylock
option_debug
ast_channel_name
ast_log
ast_rtp_instance_get_engine
ast_rtp_instance_set_bridged
ast_verb_sys_level
ast_options
ast_debug_get_by_module
__ast_format_cap_alloc
__ao2_cleanup_debug
__ast_verbose
ast_bridge_queue_everyone_else
ast_channel_has_hook_requiring_audio
ast_channel_state
__stack_chk_fail
free
ao2_container_count
ast_rtp_instance_dtmf_mode_get
ast_format_cap_count
ast_channel_rawreadformat
ast_format_cap_get_format_framing
ast_channel_rawwriteformat
ast_format_cap_iscompatible
ast_format_cap_get_names
__gcc_personality_v0
_Unwind_Resume
ast_framehook_detach
ast_channel_get_bridge
__ao2_ref
calloc
__ao2_cleanup
__ao2_alloc
ast_framehook_attach
ast_module_register
ast_module_unregister
__ast_bridge_technology_register
libgcc_s.so.1
libpthread.so.0
libc.so.6
GCC_3.0
GCC_3.3.1
GLIBC_2.4
GLIBC_2.2.5
a_&	
%zL 
%rL 
%jL 
%bL 
%ZL 
%RL 
%JL 
%BL 
%:L 
%2L 
%*L 
%"L 
%zK 
%rK 
=UJ 
=EJ 
=IK 
u+UH
AUATUH
E 9S
[]A\A]A^A_
AWAVAUATUSH
o8H9
D$ L
{8E1
}8E1
A\A]A^A_
[]A\A]A^A_
L9{8
U(E1
AXAY
A\A_
AZA[
V(E1
AWAVAUATUSH
4$dH
D$x1
AWPM
D$xdH3
[]A\A]A^A_
}8H9<$
}8E1
{8E1
$H9C8
}8E1
AYAZ
|$@H
D$8L
{8E1
ATSH
A\A]H
[A\A]A^A_]
ZYE1
AUATI
]A\A]
[]A\A]
[]A\A]
ATUSH
[]A\A]
AUATUSH
[]A\A]
AVAUATI
D$H1
T$HdH3
P[]A\A]A^
D$ H
_AXM
none
bc0->chan
bridge_native_rtp.c
bc1->chan
bridge_native_rtp
ast_format_cap_alloc
bridge_channel->chan
bridge
Native RTP bridging module
Bridge '%s'.  Tech starting '%s' and '%s' with target '%s'
Locally RTP bridged '%s' and '%s' in stack
Remotely bridged '%s' and '%s' - media will flow directly between them
Bridge '%s'.  Sending '%s' back to remote
Bridge '%s'.  Bringing back '%s' to us
Bridge '%s'.  Tech stopping '%s' and '%s' with target '%s'
Bridge '%s'.  Bringing back '%s' and '%s' to us
Bridge '%s'.  Skip bringing back '%s' and '%s' to us
Discontinued RTP bridging of '%s' and '%s' - media will flow through Asterisk core
Destroying channel tech_pvt data %p
Bridge '%s'.  Checking compatability for channels '%s' and '%s'
Bridge '%s' can not use native RTP bridge as channel '%s' has features which prevent it
Bridge '%s' can not use native RTP bridge as could not get details
Bridge '%s' can not use native RTP bridge as it was forbidden while getting details
Bridge '%s' can not use native RTP bridge as channel '%s' has DTMF hooks
Bridge '%s' can not use local native RTP bridge as local bridge or DTMF is not compatible
Bridge '%s': Channel codec0 = %s is not codec1 = %s, cannot native bridge in RTP.
Bridge '%s': Packetization differs between RTP streams (%d != %d or %d != %d). Cannot native bridge in RTP
Bridge '%s' can not use native RTP bridge as two channels are required
Bridge '%s'.  Channel '%s' is leaving bridge tech
Bridge '%s'.  Detaching hook data %p from '%s'
Bridge '%s'.  Channel '%s' is suspending from bridge tech
Bridge '%s'.  Channel '%s' is joining bridge tech
Memory Allocation Failure in function %s at line %d of %s
/builddir/build/BUILD/asterisk-15.3.0/include/asterisk/utils.h
Bridge '%s'.  Attaching hook data %p to '%s'
Bridge '%s'.  Channel '%s' is unsuspended back to bridge tech
This paragraph is copyright (c) 2006 by Digium, Inc. In order for your module to load, it must return this key via a function called "key".  Any code which includes this paragraph must be licensed under the GNU General Public License version 2 or later (at your option).  In addition to Digium's general reservations of rights, Digium expressly reserves the right to allow other parties to license this paragraph under different terms. Any use of Digium, Inc. trademarks or logos (including "Asterisk" or "Digium") without express written permission of Digium, Inc. is prohibited.
native_rtp_bridge_start
native_rtp_framehook
native_rtp_bridge_framehook_attach
__ast_calloc
native_rtp_bridge_channel_data_alloc
native_rtp_bridge_join
native_rtp_bridge_channel_data_free
native_rtp_bridge_stop
native_rtp_bridge_framehook_detach
native_rtp_bridge_leave
native_rtp_bridge_suspend
native_rtp_bridge_unsuspend
_dtor_cap0
_dtor_cap1
rtp_glue_data_destroy
native_rtp_bridge_compatible_check
native_rtp_bridge_compatible
;*3$"
zPLR
. X.
zPLR
68b329da9893e34099c7d8ad5cb9c940
gcc 8.0.1 20180312
GA*GOW
GA!stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
bridge_native_rtp.so-15.3.0-1.fc28.x86_64.debug
7zXZ
(J0'
$awGr5
u+>\	m
YI?p0APH
nd\3
]C,!
Z.zv
henM&
xySc[
hh7.
Zq?h?
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.note.gnu.property
.init_array
.fini_array
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu.build.attributes
.gnu_debuglink
.gnu_debugdata
