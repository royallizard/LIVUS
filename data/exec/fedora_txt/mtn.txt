/lib64/ld-linux-x86-64.so.2
\+4x
 5Btu
k&|f
y8[t
#O@Nz
libpcre.so.1
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
pcre_study
pcre_version
_fini
pcre_free
pcre_malloc
pcre_exec
pcre_compile2
pcre_fullinfo
_init
libbotan-1.10.so.0
deflate
deflateEnd
inflate
inflateEnd
_ZN5Botan4Pipe8read_allEm
_ZTv0_n64_NK5Botan19IF_Scheme_PublicKey14max_input_bitsEv
_ZN5Botan4Pipe12LAST_MESSAGEE
_ZN5Botan14Decoding_ErrorD1Ev
_ZN5Botan10MAC_FilterC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_11OctetStringEm
_ZN5Botan17Memory_ExhaustionD0Ev
_ZN5Botan4Pipe5writeERKNS_12MemoryRegionIhEE
_ZN5Botan14AutoSeeded_RNG5clearEv
_ZN5Botan13version_majorEv
_ZN5Botan9Allocator3getEb
_ZN5Botan14RSA_PrivateKeyD1Ev
_ZTVN5Botan14AutoSeeded_RNGE
_ZN5Botan7SHA_160D0Ev
_ZN5Botan4Pipe18read_all_as_stringB5cxx11Em
_ZN5Botan6FilterD0Ev
_ZNK5Botan19IF_Scheme_PublicKey9check_keyERNS_21RandomNumberGeneratorEb
_ZTVN5Botan10Public_KeyE
_ZTVN5Botan14User_InterfaceE
_ZTIN5Botan6FilterE
_ZN5Botan9PK_SignerC1ERKNS_11Private_KeyERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_16Signature_FormatENS_16Fault_ProtectionE
_ZTIN5Botan17Memory_ExhaustionE
_ZN5BotanlsERSoRKNS_6BigIntE
_ZN5Botan21RandomNumberGenerator8make_rngEv
_ZN5Botan4Pipe11process_msgERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNK5Botan14AutoSeeded_RNG4nameB5cxx11Ev
_ZTIN5Botan14RSA_PrivateKeyE
_ZN5Botan18LibraryInitializer12deinitializeEv
_ZNK5Botan6BigInt5bytesEv
_ZN5Botan17DataSource_MemoryC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZTv0_n88_N5Botan14RSA_PrivateKeyD1Ev
_ZNK5Botan10Public_Key10load_checkERNS_21RandomNumberGeneratorE
_ZN5Botan13Invalid_StateD0Ev
_ZN5Botan16PK_Encryptor_EMED1Ev
_ZTSN5Botan14Decoding_ErrorE
_ZNSt6vectorIhSaIhEEaSERKS1_
_ZN5Botan5PKCS810BER_encodeERKNS_11Private_KeyERNS_21RandomNumberGeneratorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESD_
_ZN5Botan6Filter4sendEPKhm
_ZN5Botan6BigInt6encodeERKS0_NS0_4BaseE
_ZNK5Botan6BigInt4bitsEv
_ZN5Botan6Filter10attachableEv
_ZN5Botan14RSA_PrivateKeyC1ERNS_21RandomNumberGeneratorEmm
_ZNK5Botan10Public_Key7get_oidEv
_ZNK5Botan12HashFunction15hash_block_sizeEv
_ZN5Botan13RSA_PublicKeyD1Ev
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
_ZNSt6vectorImSaImEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPmS1_EERKm
_ZTv0_n80_NK5Botan19IF_Scheme_PublicKey23x509_subject_public_keyEv
_ZN5Botan14User_InterfaceC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNK5Botan19IF_Scheme_PublicKey14max_input_bitsEv
_ZN5Botan10get_cipherERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_11OctetStringENS_10Cipher_DirE
_ZNK5Botan16PK_Decryptor_EME3decEPKhm
_ZTSN5Botan6FilterE
_ZThn8_N5Botan7SHA_160D0Ev
_ZNK5Botan6BigInt3cmpERKS0_b
_ZN5Botan4Pipe5resetEv
_ZN5Botan14AutoSeeded_RNGD0Ev
_ZTVN5Botan14RSA_PrivateKeyE
_ZTTN5Botan14RSA_PrivateKeyE
_ZN5Botan14Decoding_ErrorD2Ev
_ZN5Botan4Pipe7end_msgEv
_ZTSN5Botan13RSA_PublicKeyE
_ZTIN5Botan13RSA_PublicKeyE
_ZTVN5Botan16MDx_HashFunctionE
_ZN5Botan14Base64_DecoderC1ENS_16Decoder_CheckingE
_ZN5Botan17Memory_ExhaustionD1Ev
_ZTIN5Botan14Decoding_ErrorE
_ZNK5Botan4Pipe13message_countEv
_ZN5Botan9PK_Signer12sign_messageEPKhmRNS_21RandomNumberGeneratorE
_ZTv0_n72_NK5Botan19IF_Scheme_PublicKey20algorithm_identifierEv
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4findERS7_
_ZN5Botan16MDx_HashFunction12final_resultEPh
_ZN5Botan7SHA_160D1Ev
_ZTVN5Botan17DataSource_MemoryE
_ZN5Botan6FilterD1Ev
_ZTSN5Botan14AutoSeeded_RNGE
_ZN5Botan17DataSource_StreamD1Ev
_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_EET0_T_SA_S9_
_ZN5Botan8PEM_Code6encodeERKNS_12MemoryRegionIhEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm
_ZN5Botan14AutoSeeded_RNG6reseedEm
_ZNK5Botan21RandomNumberGenerator9is_seededEv
_ZN5Botan4Pipe4readEPhmm
_ZN5Botan14Base64_EncoderC1Ebmb
_ZN5BotanrsERSiRNS_4PipeE
_ZN5Botan11OctetString6changeEPKhm
_ZTSN5Botan17Integrity_FailureE
_ZTVN5Botan16PK_Decryptor_EMEE
_ZN5Botan4Pipe11process_msgERNS_10DataSourceE
_ZNK5Botan16PK_Encryptor_EME3encEPKhmRNS_21RandomNumberGeneratorE
_ZThn8_N5Botan14RSA_PrivateKeyD1Ev
_ZN5Botan13Invalid_StateD1Ev
_ZNK5Botan10Public_Key17message_part_sizeEv
_ZTIN5Botan19IF_Scheme_PublicKeyE
_ZN5Botan16PK_Encryptor_EMED2Ev
_ZNK5Botan10Public_Key13message_partsEv
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_
_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPiS1_EERKi
_ZTIN5Botan10Public_KeyE
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
_ZTSN5Botan17Memory_ExhaustionE
_ZN5Botan14Decoding_ErrorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
_ZNKSt5ctypeIcE8do_widenEc
_ZNK5Botan14AutoSeeded_RNG9is_seededEv
_ZN5Botan5PKCS810PEM_encodeB5cxx11ERKNS_11Private_KeyE
_ZN5Botan13Library_State10global_rngEv
_ZN5Botan7SHA_1605clearEv
_ZTSN5Botan21RandomNumberGeneratorE
_ZNK5Botan19IF_Scheme_PublicKey20algorithm_identifierEv
_ZThn8_N5Botan7SHA_160D1Ev
_ZN5Botan4Pipe15DEFAULT_MESSAGEE
_ZN5Botan14AutoSeeded_RNGD1Ev
_ZN5Botan6BigIntC1ERKS0_
_ZTSN5Botan15Stream_IO_ErrorE
_ZN5Botan4PipeC1EPNS_6FilterES2_S2_S2_
_ZN5Botan16MDx_HashFunctionC2Embbm
_ZN5Botan17Memory_ExhaustionD2Ev
_ZTVN5Botan6FilterE
_ZNK5Botan13Library_State17algorithm_factoryEv
_ZN5Botan19algorithm_benchmarkERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_17Algorithm_FactoryERNS_21RandomNumberGeneratorEjm
_ZN5Botan16MDx_HashFunction8add_dataEPKhm
_ZN5Botan14AutoSeeded_RNG9randomizeEPhm
_ZTVN5Botan16PK_Encryptor_EMEE
_ZN5Botan14Decoding_ErrorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZTVN5Botan13RSA_PublicKeyE
_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4findERS7_
_ZTv0_n88_N5Botan13RSA_PublicKeyD0Ev
_ZN5Botan7SHA_160D2Ev
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED1Ev
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_
_ZN5Botan6FilterD2Ev
_ZTVN5Botan17Memory_ExhaustionE
_ZN5Botan16PK_Encryptor_EMEC1ERKNS_10Public_KeyERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZN5Botan11PK_Verifier14verify_messageEPKhmS2_m
_ZN5Botan11PK_VerifierC1ERKNS_10Public_KeyERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_16Signature_FormatE
_ZTSN5Botan13Invalid_StateE
_ZNK5Botan13RSA_PublicKey9algo_nameB5cxx11Ev
_ZN5Botan4Pipe5writeEPKhm
_ZTSN5Botan14Encoding_ErrorE
_ZTIN5Botan13Invalid_StateE
_ZN5Botan11Hash_FilterC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm
_ZN5Botan23Global_State_Management12global_stateEv
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
_ZN5Botan13Invalid_StateD2Ev
_ZN5Botan13version_minorEv
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_dESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E
_ZN5Botan4Pipe9start_msgEv
_ZTIN5Botan21RandomNumberGeneratorE
_ZN5Botan18LibraryInitializer10initializeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS5_S7_EERKS5_
_ZN5Botan14Decoding_ErrorD0Ev
_ZTVN5Botan7SHA_160E
_ZN5Botan15DataSink_StreamC1ERSoRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZN5Botan5PKCS810PEM_encodeERKNS_11Private_KeyERNS_21RandomNumberGeneratorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESD_
_ZN5Botan6Filter7end_msgEv
_ZN5Botan5PKCS88load_keyERNS_10DataSourceERNS_21RandomNumberGeneratorERKNS_14User_InterfaceE
_ZN5Botan16PK_Decryptor_EMEC1ERKNS_11Private_KeyERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZTIN5Botan11Private_KeyE
_ZN5Botan4Pipe6appendEPNS_6FilterE
_ZN5Botan4X50910BER_encodeERKNS_10Public_KeyE
_ZNK5Botan19IF_Scheme_PublicKey23x509_subject_public_keyEv
_ZN5Botan14AutoSeeded_RNGD2Ev
_ZN5Botan4PipeD1Ev
_ZN5Botan17DataSource_StreamC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEb
_ZNK5Botan17Memory_Exhaustion4whatEv
_ZTv0_n24_NK5Botan13RSA_PublicKey9algo_nameEv
_ZN5Botan6FilterC2Ev
_ZN5Botan4Pipe5writeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZN5Botan4X5098load_keyERKNS_12MemoryRegionIhEE
_ZTTN5Botan13RSA_PublicKeyE
_ZN5Botan14AutoSeeded_RNG18add_entropy_sourceEPNS_13EntropySourceE
_ZN5Botan6Filter9start_msgEv
_ZTv0_n88_N5Botan13RSA_PublicKeyD1Ev
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_
_ZNSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_ED2Ev
_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_M_copyINSE_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS8_EPKSI_SJ_RT_
_ZTVN5Botan14Decoding_ErrorE
_ZN5Botan16PK_Encryptor_EMED0Ev
_ZTv0_n40_NK5Botan19IF_Scheme_PublicKey9check_keyERNS_21RandomNumberGeneratorEb
_ZN5Botan13version_patchEv
_ZTIN5Botan14AutoSeeded_RNGE
_ZN5Botan19IF_Scheme_PublicKeyD2Ev
_ZN5Botan5PKCS88load_keyERNS_10DataSourceERNS_21RandomNumberGeneratorERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZN5Botan11inverse_modERKNS_6BigIntES2_
_ZNK5Botan10DataSource2idB5cxx11Ev
_ZTIN5Botan14User_InterfaceE
_ZN5Botan6BigInt6decodeEPKhmNS0_4BaseE
_ZN5Botan14AutoSeeded_RNG11add_entropyEPKhm
_ZN5Botan13RSA_PublicKeyD0Ev
_ZTVN5Botan13Invalid_StateE
liblua-5.3.so
lua_getfield
lua_setfield
lua_newuserdata
lua_gettable
lua_settop
lua_pushstring
lua_setglobal
lua_error
lua_settable
luaL_loadfilex
lua_isnumber
lua_next
luaL_checklstring
lua_callk
lua_createtable
lua_rawlen
lua_type
lua_pushcclosure
luaL_checkudata
luaL_newstate
lua_pushnil
lua_rawseti
lua_close
luaL_loadbufferx
luaL_checknumber
lua_pcallk
lua_gettop
lua_pushvalue
lua_tonumberx
lua_pushnumber
lua_isstring
lua_tolstring
lua_checkstack
lua_pushlstring
lua_toboolean
lua_tointegerx
lua_typename
luaL_error
lua_pushboolean
luaL_openlibs
lua_getglobal
lua_setmetatable
lua_pushinteger
lua_atpanic
libdl.so.2
libsqlite3.so.0
sqlite3_close
sqlite3_result_error
sqlite3_step
sqlite3_value_text
sqlite3_column_blob
sqlite3_exec
sqlite3_create_function
sqlite3_bind_blob
sqlite3_open
sqlite3_db_handle
sqlite3_bind_int64
sqlite3_reset
sqlite3_errmsg
sqlite3_bind_parameter_count
sqlite3_value_bytes
sqlite3_libversion_number
sqlite3_column_count
sqlite3_errcode
sqlite3_prepare
sqlite3_complete
sqlite3_finalize
sqlite3_value_blob
sqlite3_column_int
sqlite3_column_text
sqlite3_libversion
sqlite3_bind_text
sqlite3_data_count
sqlite3_column_bytes
sqlite3_result_blob
sqlite3_column_type
libidn.so.11
stringprep_convert
idna_to_unicode_8z8z
idna_to_ascii_8z
stringprep_locale_charset
libz.so.1
inflateInit2_
deflateInit2_
inflateReset
deflateReset
libstdc++.so.6
_ZNSt15basic_streambufIcSt11char_traitsIcEE7seekoffElSt12_Ios_SeekdirSt13_Ios_Openmode
_ZNSo9_M_insertIdEERSoT_
_ZTVN10__cxxabiv129__pointer_to_member_type_infoE
_ZTVN10__cxxabiv117__class_type_infoE
_ZNSt16invalid_argumentD2Ev
_ZSt9terminatev
_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev
_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev
_ZTISo
__cxa_call_unexpected
_ZTIb
_ZTId
_ZTIi
_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
_ZTIl
_ZTIm
_ZTIt
_ZTIv
_ZNSt6localeC1ERKS_
_ZNSt8ios_base4InitD1Ev
_ZNSt8__detail15_List_node_base4swapERS0_S1_
_ZNSt11logic_errorC2ERKS_
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm
_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base
_ZTVN10__cxxabiv120__function_type_infoE
_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv
_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode
_ZTISt11range_error
_ZTVSt14basic_ifstreamIcSt11char_traitsIcEE
_ZTVSt15basic_streambufIcSt11char_traitsIcEE
__gxx_personality_v0
_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode
_ZNSi10_M_extractImEERSiRT_
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_
_ZNSo3putEc
_ZTVSt13basic_filebufIcSt11char_traitsIcEE
_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl
_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_
_ZNSt14overflow_errorD1Ev
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZNKSt5ctypeIcE13_M_widen_initEv
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
_ZTISt8bad_cast
_ZNSo9_M_insertIlEERSoT_
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc
_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc
_ZNSo5writeEPKcl
__cxa_guard_abort
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc
_ZNSt13runtime_errorC2ERKS_
_ZNSt16invalid_argumentC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNSt6locale7classicEv
_ZNSt9basic_iosIcSt11char_traitsIcEE5imbueERKSt6locale
_ZNSt15basic_streambufIcSt11char_traitsIcEE9underflowEv
_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
__cxa_pure_virtual
_ZSt4clog
_ZNSo9_M_insertIbEERSoT_
_ZTVSt9exception
_ZdlPv
_ZNSt11range_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNSt15basic_streambufIcSt11char_traitsIcEE8overflowEi
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm
__cxa_begin_catch
_ZSt20__throw_length_errorPKc
_ZNSi10_M_extractIdEERSiRT_
_ZTVSt8bad_cast
_ZTVNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
_ZTISt10bad_typeid
_ZTVSt9basic_iosIcSt11char_traitsIcEE
_ZNSirsERi
_Znam
__cxa_allocate_exception
_ZNSt13runtime_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
_ZNSt6localeD1Ev
_ZNSt13runtime_errorD2Ev
_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm
_ZNSt15basic_streambufIcSt11char_traitsIcEE5imbueERKSt6locale
_ZNSt8bad_castD2Ev
__cxa_end_catch
_ZNSi4readEPcl
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmm
_ZSt9use_facetINSt7__cxx118numpunctIcEEERKT_RKSt6locale
_ZSt9use_facetISt5ctypeIcEERKT_RKSt6locale
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc
_ZNKSt13runtime_error4whatEv
_ZSt24__throw_out_of_range_fmtPKcz
_ZNSt8ios_baseD2Ev
_ZTISt14overflow_error
_ZdaPv
_ZNSt15basic_streambufIcSt11char_traitsIcEE7seekposESt4fposI11__mbstate_tESt13_Ios_Openmode
_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED1Ev
_ZNSt9bad_allocD2Ev
_ZNSt10bad_typeidD1Ev
_ZNKSt5ctypeIcE9do_narrowEcc
_ZTISt9exception
_ZNSt11logic_errorD1Ev
_ZNSt15underflow_errorD1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEmc
_ZSt16__throw_bad_castv
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
_ZnwmRKSt9nothrow_t
_ZTISt15underflow_error
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcmm
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm
_ZSt17__throw_bad_allocv
_ZNSt8ios_base4InitC1Ev
_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev
_ZNSt12length_errorD1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_
_ZTISt13runtime_error
_ZNSt16invalid_argumentD1Ev
_ZNSt11logic_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNSt9exceptionD2Ev
_ZTTSt14basic_ofstreamIcSt11char_traitsIcEE
_ZNSt12domain_errorD1Ev
_ZNSo9_M_insertIPKvEERSoT_
_ZNSi4peekEv
_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm
_ZTVNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEE
_ZNSt12domain_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNSt15basic_streambufIcSt11char_traitsIcEE6setbufEPcl
_ZNKSt6localeeqERKS_
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcmm
_ZTVN10__cxxabiv116__enum_type_infoE
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm
_ZNSt15basic_streambufIcSt11char_traitsIcEE9showmanycEv
_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsgetnEPcl
__cxa_guard_release
_ZSt4cerr
_ZTISt11logic_error
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcmm
_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv
_ZNSo9_M_insertImEERSoT_
_ZNKSt3tr14hashINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclES6_
_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
_ZNSi7getlineEPclc
_ZTTNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEE
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
_ZTISt12out_of_range
_ZTVSt12out_of_range
_ZTINSt8ios_base7failureB5cxx11E
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
_ZTISt13bad_exception
_Znwm
_ZNSt15underflow_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZSt3cin
__cxa_rethrow
_ZNSt12__basic_fileIcED1Ev
_ZTVSt9bad_alloc
_ZNSt8__detail15_List_node_base9_M_unhookEv
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcmm
_ZNSt11range_errorD1Ev
_ZNSt8ios_base15sync_with_stdioEb
__cxa_throw
_ZNSt15basic_streambufIcSt11char_traitsIcEE9pbackfailEi
__cxa_current_exception_type
_ZNSt6localeC1Ev
_ZTVSt13bad_exception
_ZNSt12length_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNSt3tr18__detail12__prime_listE
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc
_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNSt6localeaSERKS_
_ZTVSt14basic_ofstreamIcSt11char_traitsIcEE
_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base
_ZNKSt12__basic_fileIcE7is_openEv
_ZNSt8ios_baseC2Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm
_ZSt19__throw_logic_errorPKc
_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE
_ZNSt13runtime_errorD1Ev
_ZSt7nothrow
_ZNSt8bad_castD1Ev
__cxa_guard_acquire
_ZTTNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEE
_ZSt13set_terminatePFvvE
__dynamic_cast
_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE
_ZNSt11logic_errorC1ERKS_
_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE
_ZNSt9basic_iosIcSt11char_traitsIcEE5rdbufEPSt15basic_streambufIcS1_E
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
__cxa_demangle
_ZNSt12out_of_rangeD1Ev
_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZTISt9bad_alloc
_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev
_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_
_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED0Ev
_ZNSt9bad_allocD1Ev
__cxa_free_exception
_ZNSt14overflow_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNSi3getEv
_ZTISt15basic_streambufIcSt11char_traitsIcEE
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
_ZNSi3getERc
_ZTVSt16invalid_argument
_ZNSt12out_of_rangeC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNSt8__detail15_List_node_base7_M_hookEPS0_
_ZNSt15basic_streambufIcSt11char_traitsIcEE5uflowEv
_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
__cxa_get_exception_ptr
_ZSt4cout
_ZTISt16invalid_argument
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_mm
_ZTISt12domain_error
_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEmmRKS4_
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
_ZNSo5flushEv
_ZNSt13bad_exceptionD1Ev
_ZTVSt10bad_typeid
_ZNSt11logic_errorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
__cxa_bad_cast
_ZNSt11logic_errorD2Ev
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcm
_ZNKSt11logic_error4whatEv
_ZNSt9exceptionD1Ev
_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode
_ZNSt6localeC1EPKc
_ZNSt13runtime_errorC1ERKS_
_ZTVSi
_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev
_ZdlPvRKSt9nothrow_t
_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_
_ZNSolsEi
_ZTISt12length_error
_ZNSolsEs
_ZNSt15basic_streambufIcSt11char_traitsIcEE4syncEv
_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE
libm.so.6
ceilf
libgcc_s.so.1
_Unwind_Resume
libc.so.6
socket
fchmod
setlocale
gai_strerror
strsignal
strncmp
pipe
perror
connect
ngettext
in6addr_any
getpwuid
__fxstatat64
__fdelt_chk
closedir
inet_ntop
strncpy
__stack_chk_fail
unlink
listen
select
mkdir
tolower
popen
getpid
kill
strdup
strftime
__assert_fail
isspace
gmtime
strtol
isatty
mmap
getpwnam
strlen
__cxa_atexit
send
sigemptyset
getaddrinfo
memset
__errno_location
tcsetattr
bind
chdir
open64
read
memcmp
toupper
getsockopt
dup2
__fxstat64
strptime
sigaddset
ctime
recv
fputs
memcpy
fclose
rand
setsockopt
umask
raise
remove
__lxstat64
opendir
__xstat64
getenv
sscanf
isgraph
ioctl
munmap
getuid
execvp
backtrace_symbols_fd
__recv_chk
__fxstat
pclose
usleep
getcwd
gettimeofday
rename
sigaction
waitpid
backtrace
localtime
difftime
getsockname
vfork
mktime
fdopen
readdir64
accept
tcgetattr
__cxa_finalize
freeaddrinfo
fcntl
__xstat
memmove
uname
bindtextdomain
strcmp
__libc_start_main
dirfd
write
ispunct
_edata
__bss_start
_end
GCC_3.0
GLIBC_2.2.5
LIBIDN_1.0
GLIBC_2.15
GLIBC_2.4
GLIBC_2.14
CXXABI_1.3.1
GLIBCXX_3.4.10
GLIBCXX_3.4.11
GLIBCXX_3.4.9
GLIBCXX_3.4.15
CXXABI_1.3
GLIBCXX_3.4.20
GLIBCXX_3.4
GLIBCXX_3.4.21
ATUH
t	[]A\
[]A\
ATUSH
D$(1
L$(dH3
0[]A\
AWAVAUATI
\$0H
\$@H
T$ H
T$ H
\$`H
T$(H
D$ H
T$(I
[]A\A]A^A_
AWAVAUATUSH
t$XL
d$`H
D$PH
D$0L
=;W5
t$01
D$hH
D$pH
D$xH
D$`H
|$PH
t$@H
t$ H
l$PH
euCH
D$@L
t$@1
D$hH
D$pH
D$xH
D$`H
|$PH
t$0H
t$ H
l$PH
euCH
[]A\A]A^A_
ATUI
=Xb3
[]A\
AVAUATUSH
L$h1
t$ H
l$@H
t$ L
|$@I
|$ I
|$@I
|$ I
ATUSH
[]A\
ATUSH
=0^3
[]A\
ATUSH
=z]3
[]A\
=2qd
ATUH
[]A\
5'Z3
=Zdd
:memory:
5=X3
=rbd
5jw4
:memory:
="_d
:memory:H
5QT3
=:^d
:memory:H
=9[d
="Wd
5'k6
5D76
5^*6
5q06
5!A3
=WKd
=5Jd
5pw6
=2V	
=|U	
=TT	
=RS	
=PR	
5s;3
5Ap3
5Bo3
5373
=lAd
5f23
=|;d
5&13
=_;d
5WP4
=[	e
5H	e
5)a4
=9 e
:memory:H
=X&e
57&e
5A&3
=w0d
=k#e
5X#e
=%"e
=)%e
5d$e
=2.d
5d%e
:memory:H
5m#3
57X3
=a&e
5N&e
=z%e
5g%e
=-%e
58W3
5]x4
=F$e
53$e
=_#e
5L#e
ATUI
[]A\
5w 3
5' 3
=Z*d
5:#e
=B)d
=j(d
=*(d
=:'d
=z&d
5l"e
=b&d
:memory:H
5z!e
=j#d
=	!e
=9#d
=(#d
:memory:H
=r"d
5t e
=H e
=<"d
5. e
=""d
5d e
:memory:H
5d e
=@ e
5& e
=8 e
=%!d
=	 e
:memory:H
=9 d
5*34
5'w6
5q36
5Q36
ATUI
[]A\
5*04
5't6
5uG6
5/Q4
5+F6
57B3
58A3
5}t6
50t6
:memory:H
=bIe
5DIe
5W?3
5'B6
=wHe
5dHe
=*He
5}Ge
5X>3
=CGe
50Ge
=WBe
5DBe
=-s&
5r>e
=+r&
=?=e
5,=e
=)q&
=m9e
5Z9e
='8e
=}p&
='p&
=U4e
5B4e
={o&
=nDe
5[De
=!De
5tCe
=:Ce
5'Ce
=z1e
5g1e
=40e
5!0e
=:m&
=b,e
5O,e
=8l&
5	+e
5cm6
=oAe
5\Ae
5Cm6
="Ae
5j93
5u@e
=")e
=,j&
=P%e
5=%e
=*i&
=~!e
5k!e
=8 e
5% e
=~h&
=q>e
5^>e
=$>e
5w=e
=nf&
=le&
=jd&
5W43
5'76
=d?e
5Q?e
=}>e
5j>e
=0>e
5X33
=I=e
56=e
=">e
5n>e
=->e
9	w#
ATUI
[]A\
:memory:H
="Ae
5W.3
5'16
5q@e
=7@e
5$@e
=P?e
5=?e
5X-3
=i>e
5V>e
5	>e
5o=e
=5=e
5"=e
=N<e
5;<e
5=64
=g;e
5T;e
5m:e
=3:e
5 :e
=L9e
599e
=e8e
5R8e
=~7e
5k7e
=17e
=J6e
576e
=c5e
5P5e
=|4e
5i4e
=/4e
=H3e
553e
5G%3
=T:e
5A:e
=m9e
5Z9e
= 9e
5H$3
5s8e
=98e
5&8e
5Y&6
=R7e
5?7e
=k6e
5X6e
5q5e
5|97
=75e
5$5e
5g!3
=a9e
5N9e
57$6
=z8e
5g8e
=-8e
5g}7
5h 3
=F7e
537e
=_6e
5L6e
5q@7
5Q@7
=x5e
5e5e
51@7
=+5e
5~4e
5K{7
=D4e
514e
5P7e
:memory:
=(8e
5z7e
='6e
:memory:H
AWAVI
AUATUSH
[]A\A]A^A_
=Ike
5+ke
fffff.
fffff.
fffff.
ATUI
[]A\
@0H9
5AN3
fff.
ChH9
CHH9
H9C t
fffff.
fffff.
ATUSH
D$(1
L$(dH3
0[]A\
fffff.
fff.
ffff.
ffff.
D$(1
D$(dH3
ATUSH
E`H9
C8H9
[]A\
D$(1
L$(dH3
AWAVAUATUSH
d$0H
l$pL
l$ dH
D$0H
T$8L
|$0I
[]A\A]A^A_
D$PL
D$XH
|$PH
|$PA
L9L$
|$PH
|$0I
AWAVAUATUSH
d$0H
l$pL
l$ dH
D$0H
T$8L
|$0I
[]A\A]A^A_
D$PL
D$XH
|$PH
|$PA
M(E1
L9L$
|$PH
|$0I
fff.
AWAVI
AUATUSH
d$ H
l$`L
D$ H
T$(L
|$ I
[]A\A]A^A_
D$@L
D$HH
|$@H
|$@A
})E1
|$@H
|$ I
fffff.
AVAUI
ATUS
E`H9
]A\A]A^
C8H9
AWAVAUATI
[]A\A]A^A_
ATUI
l$ H
D$ H
\$@H
|$@H
|$ H
\$`H
|$`H
[]A\
\$`H
T$`H
|$`H
|$ H
|$@H
|$`H
|$`H
AWAVAUATI
t$ H
|$ H
T$(H
t$@H
t$@H
T$HH
t$`H
l$`H
T$hH
C8H9
[]A\A]A^A_
AWAVAUATI
t$ H
d$ H
D$(H
t$@H
L$HH
T$@H
t$`H
l$`H
L$hH
C8H9
[]A\A]A^A_
AWAVAUATI
D$(1
D$(dH3
8[]A\A]A^A_
{PI9
fffff.
AVAUATUH
D$h1
L$hdH3
p[]A\A]A^
t$ H
D$ H
D$(H
\$@H
|$@H
|$@H
D$(1
D$(dH3
fff.
D$(1
D$(dH3
ATUA
D$H1
D$HdH3
P[]A\
d$ H
H+D$(H
T$(H
t$ H
|$ I
P t[H
|$ I
AWAVAUATUSH
\$`H
D$pH
|$`H
\$@L
|$@L
|$pH
D$PI
D$`H
E`H9
[]A\A]A^A_
L$(H
D$ H
L$ H
AWAVAUATUSH
|$0H
T$ L
|$ H
T$8H
D$0H
T$ H
t$ H
l$PA
=o68
|$pD
|$pI
|$PH
AWAVAUATUSH
T$0H
[]A\A]A^A_
T$0H
T$PH
D$XH
I9] u
\$@H
D$@I
t$@L
T$PH
t$@H
|$HI
T$PL
|$Xv
\$PH
D$PI
T$`I
t$XH
t$PL
D$PH
D$ H
\$`H
t$ H
|$`H
|$`H
AWAVAUATUSH
[]A\A]A^A_
T$0H
D$8H
I9] u
\$`H
t$@1
|$`H
\$@H
|$HH9
|$HH
l$@H9
|$@H
|$(L
T$0L
t$0H
t$ H
D$@H
d$HH
l$@I9
|$@H
|$`H
AUATUSH
[]A\A]
AWAVI
AUATA
T$(H
L$8dH
D$0H
\$PH
D$PH
D$NL
l$(1
D$OH
D$O'
D$N'
F`H9
L$8H
\$pH
L$pH
D$(H
D$ L
D$ H
D$0H
[]A\A]A^A_
\$`H
D$`H
D$0H
fff.
AWAVAUATUSH
t$ H
D$ H
D$(H
t$@H
d$@H
D$HH
t$`H
D$`H
D$hH
t$ H
D$ H
D$(H
t$@H
d$@H
D$HH
t$`H
D$`H
D$hH
fff.
AWAVI
AUAT1
\$0H
D$,H
D$0M
D$0M
D$0M
D$,H
|$0H
D$@H
D$HH
D$PH
D$@H
l$`H
t$0H
|$`H
D$0M
D$0M
D$0M
t$ H
|$0H
D$@H
D$HH
t$0H
|$`H
[]A\A]A^A_
|$`H
|$`H
AWAVAUATI
[]A\A]A^A_
{PI9
H9G@s
H;W@w~Hc
tqI)
r0H;W@w*Hc
O H)
tFH9W
G(dH
L9G@
W@I)
|QL)
t?L)
O@H)
=[z2
ffff.
tAAWAVAUATI
w0L9
[]A\A]A^A_
L$ I
T$(L
D$@I
D$0H
L$ I
T$(M
|$@M
|$(M
|$ I
D$0M
ffff.
ffffff.
ffffff.
ffffff.
ffffff.
ATUI
D$ H
[]A\
ATUH
[]A\
ATUH
[]A\
ATUH
[]A\
ATUH
[]A\
ATUH
E`H9
C8H9
t'[L
[]A\
AUATUSH
D$H1
ATUSH
C8H9
[]A\
AWAVI
AUATUSH
[]A\A]A^A_
uiH)
C8H9
AUATUSH
D$H1
AWAVI
AUATUSH
D$X1
Ic~DIcvH9
l$0H
t$0I
vXt@H
H8H9
t$8H9
CXH)
t$0H
T$8H
|$0I
L$XdH3
h[]A\A]A^A_
56P2
=gP2
t$ H
|$0I
AUATUSH
D$H1
AWAVI
AUATA
D$0C
([]A\A]A^A_
AWAVH
AUATI
W0I+G
G H)
l$8H
T$(A
\$0I
|$PA
D$@A
D$DA
D$HA
D$LI
D$`I
D$PI
D$pH
D$xA
[]A\A]A^A_
H9\$
ATUH
[]A\
@0H9
t}AWAVL
AUATI
0I9]
[]A\A]A^A_
J@L9
AWAVI
AUATUSH
CiA8
6I94$u
H+4$
8[]A\A]A^A_
6I94$
6I94$
6I94$
6I94$
M\ H
6I94$
6I94$
B@I9
CcA8
,$L9
D:kg
@0L9
8[]A\A]A^A_
[]A\A]A^A_
L$ A
[]A\A]A^A_
M9,$C
.M;,$
J@M9
CcA8
D$(H
L$ 1
6H+4$H
6t/I;4$
[]A\A]A^A_
L+,$H
T$ 8
AWAVAUATUSH
t	9WH
<"H)
[]A\A]A^A_
5^:2
AWAVI
AUATI
C8H9
([]A\A]A^A_
C8H9
[]A\A]A^A_
AUATUSH
D$H1
AWAVAUATUSH
t$0H
\$8L
L$ L
t?I	
t$(L
\$ I
H[]A\A]A^A_
D$ H
t$ H
L$(A
L$(A
\$(M
H+T$
D$(H
D$ I
H[]A\A]A^A_
u	A9
AUATUSH
[]A\A]
@0H9
AWAVI
AUATE
d$`D
([]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
G(H9G t
AWAVAUATI
l$ I
NxH)
AVQL
[A\A]A^A_]
T$(I
D$ H
D$(H)
l$ I
D$(L9
I9FxI
FFxL9
C8D5
:Gdt
M9~x
T$(I
l$ I
AWAVI
AUATUSH
(HcWHdH
HcGD9
([]A\A]A^A_
CDL)
KDH9
~1Hc
AWAVI
AUATUSH
[]A\A]A^A_
AUATUS
[]A\A]A^
AWAVAUATUSH
r	H9
C8H9
[]A\A]A^A_
D$8H
D$XI
D$`A
D$hA
D$lA
D$pA
D$tt
D$`H
FxM9
$;L9
D$`H
4$L9
AWAVI
AUATH
U(E1
[]A\A]A^A_
T$8L
|$8H
C8H9
D$8H
|$8H
C8H9
@0H9
AWAVAUATI
D$@H
t$ L
D$0L
t$ L
L$0H
T$0I+
\$(9
D9l$$M
T$$H
\$$H
D$(A
d$`H
T$hI
T$8H
HcT$$H
F8H9
D$8H9
|$hI
U@uZ
EHuQ
[]A\A]A^A_
D$ %
@0H9
D$@HcD$(H
AUATL
o`USH
D$(1
D$(dH3
8[]A\A]
{PL9
AUATI
D$(1
D$(dH3
8[]A\A]
ATUI
[]A\
ATUSI
[]A\
fff.
ATUSI
[]A\
fff.
ATUH
[]A\
ffff.
ATUH
[]A\
AUATL
D$(1
L$(dH3
8[]A\A]
[]A\
[]A\
AUATL
D$(1
|$(dH3<%(
8[]A\A]
ffffff.
AWAVI
AUATI
l$`dH
t$`H
D$`H
D$hH
$$H)
d$ H
|$ I
D$`H
D$hH
E`H9
[]A\A]A^A_
d$@H
T$@H
|$@I
|$@I
|$ I
AWAVAUATI
|$ dH
L$`1
|$pL
t$PH
L$@H
t$@H
I;|$
t$@H
|$@L9
|$`H
I;|$
t$`H
|$`L9
|$ H
[]A\A]A^A_
I;|$
\$`H
T$`H
H+D$hH9
H+D$hH
I;|$
t$`H
|$`H
|$ H
|$`H
|$`H
|$@H
ffffff.
AUATA
D$(1
D$(dH3
8[]A\A]
AWAVI
AUAT1
|$@H
 H9\$
\$0H
D$0H
l$PH
|$PH
|$0H
D$`H9
|$@H
|$pH
[]A\A]A^A_
l$pH
T$pH
|$pH
t$PH
|$pH
|$0H
|$pH
|$PH
CXH9
CXH9
AWAVAUATI
D$81
I;|$
D$8dH3
H[]A\A]A^A_
t7f.
,$L9
tJL94$L
ATUI
[]A\
tjAVAUI
ATUI
k H9
[]A\A]A^
fffff.
fff.
AUATI
[]A\A]
ATUI
D$(1
L$(dH3
0[]A\
ATUH
D$(1
D$(dH3
0[]A\
5,!4
5\ 4
AWAVAUATI
t$ dH
D$H1
|$ I
tOM9}
L$HdH3
X[]A\A]A^A_
|$ I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
fffff.
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ffffff.
ATUSH
D$X1
l$01
|$0H
L$XdH3
`[]A\
|$0H
fff.
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUSH
 []A\
fffff.
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUSH
 []A\
fffff.
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
fffff.
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
fffff.
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
ATUH
D$h1
d$@L
\$ H
T$ H
|$ H
|$@H
D$PH9
D$hdH3
p[]A\
\$ E1
|$ H
d$@H
|$@I
AUATI
[]A\A]
ATUH
[]A\
[]A\
[]A\
AUATI
[]A\A]
AUATUSH
D$81
0<	w,H
D$8dH3
H[]A\A]
AUATL
[]A\A]
AUATI
[]A\A]
AUATUSH
D$81
0<	w,H
D$8dH3
H[]A\A]
AUATL
[]A\A]
AUATUSH
D$81
0<	w,H
D$8dH3
H[]A\A]
AUATL
[]A\A]
AUATI
[]A\A]
AUATUSH
D$81
0<	w,H
D$8dH3
H[]A\A]
AUATL
[]A\A]
AUATI
[]A\A]
D$(1
D$(dH3
AUATI
[]A\A]
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
AUATI
[]A\A]
D$(1
D$(dH3
AUATI
[]A\A]
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
5ryb
5Ryb
52yb
ATUH
0<	w
5>f1
5^n1
[]A\
5qe1
5De1
D$(1
D$(dH3
ATUH
D$H1
D$HdH3
P[]A\
l$ L
|$ H
|$ H
ATUH
D$H1
D$HdH3
P[]A\
l$ L
|$ H
|$ H
ATUH
[]A\
[]A\
H;1v
H;1wQH
H1E(
AWAVAUATUSH
D$X1
l$0H
D$/H
tsf.
t$0H
|$0L9
D$XdH3
h[]A\A]A^A_
|$0I
AWAVAUATI
H;W(
-TZb
H1C(
]A\A]A^A_
H1C(
ATUI
[]A\
ffff.
5e\1
5IZ1
50\1
5+[1
56Y1
AWAVI
AUATI
D$H1
l$ H
|$ H
D$HdH3
X[]A\A]A^A_
l$ H
H+D$(H
t$ I
|$ H
=]va
=s21
|$ H
AVAUATUI
l$@D
\$`H
|$`H
|$@I
[]A\A]A^
=1bb
=iab
\$ H
|$ H
\$`H
l$@H
|$`H
5/E1
|$@I
=~`b
56a1
=1`b
\$`H
l$@H
|$`H
5sD1
|$@I
5!T1
|$ H
=s^b
=d^b
|$@I
|$`H
|$`H
|$`H
|$@I
|$@I
AVAUATUI
=:]b
l$@D
\$`H
|$`H
|$@I
[]A\A]A^
=Q\b
5=Ub
\$ H
|$ H
\$`H
l$@H
|$`H
5O?1
|$@I
5V[1
=QZb
\$`H
l$@H
|$`H
|$@I
5	>1
5AN1
5+N1
|$ H
|$@I
|$`H
|$`H
|$`H
|$@I
|$@I
AUATI
\$ H
D$H1
|$ H
D$HdH3
X[]A\A]
|$ H
AUATI
\$ H
D$H1
|$ H
D$HdH3
X[]A\A]
|$ H
AWAVAUATI
-#Sb
\$0H
[]A\A]A^A_
t$`H
D$`H
\$0H
|$`I
5~Ib
l$ H
=^Ob
-HOb
=AOb
t$`L
d$@L
|$`I
5t31
|$@I
=&Nb
5u21
=y_a
5MB1
|$`I
5N11
5pA1
5*M1
=	Lb
|$`I
|$@I
=#Kb
AWAVI
AUATI
5r\a
D$X1
\$0H
D$0t
l$ H
|$0H
D$XdH3
h[]A\A]A^A_
5#<1
T$8H
t$0H
5	<1
|$0H
AVAUI
ATUH
D$H1
5h;1
-N@b
\$ H
D$ t
|$ H
D$HdH3
P[]A\A]A^
T$(H
t$ H
|$ H
ATUI
[]A\
AWAVH
AUATI
D$0H
D$@H
D$0t
D$8H
|$0H
:tXH
\$PM
D$Pt
D$XH
|$PH
[]A\A]A^A_
L$8H
t$0H)
|$01
5?X3
L$8H9
t$0H
l$pH)
|$pH
|$0H
\$ H
=qRa
51?1
H9|$
5"$1
|$0H
|$pH
AWAVI
AUATUSH
D$x1
:tZH
t/H9
5^=1
=aPa
l$0H
|$0H
:_u;H
Mu)H
\$ H
5<31
=qOa
5d<1
l$P1
4$H)
t$PH
|$PH
|$PI
D$xdH3
[]A\A]A^A_
H9|$
5	 1
|$PH
|$0H
AUATI
D$(1
L$(dH3
8[]A\A]
AUATI
D$(1
L$(dH3
8[]A\A]
AUATI
D$81
L$8dH3
H[]A\A]
5O+1
=CGa
5R41
AWAVI
AUATI
D$X1
\$0L
D$8I
D$0H
|$8H
D$8H
D$0I
|$8H
D$XdH3
h[]A\A]A^A_
\$0I
|$8H
D$8H
D$0I
=kDa
|$8H
fffff.
AWAVAUATUSH
D$x1
L$xdH3
[]A\A]A^A_
t$ H
d$PL
-MCa
T$0H;U
D$PH
|$XI
T$0H
t$(H
T$0H;U
L$(H
L$(1
|$(I
|$XI
ATUH
L$81
\$0H
L$8dH3
@[]A\
fffff.
AWAVI
AUATUSH
\$pdH
d$pL
D$pH
D$xH
l$0H
|$0I
D$pH
D$xH
C`H9
[]A\A]A^A_
l$PH
T$PH
|$PI
D$xH
C`H9
|$0I
|$PI
AUATI
\$0dH
D$X1
D$0t
D$8H
|$0H
:uoH
H9D$
D$0H
H+L$8H9
|$0H
L$XdH3
h[]A\A]
=c9a
|$0H
fff.
AWAVI
AUATA
l$PH
\$0H
\$0H
l$`H
D$8H
l$ H
\$@H
[]A\A]A^A_
\$0I
52B5
t$pD
\$0L
\$0L
-U5a
\$0H
\$0H
ATUSH
D$H1
=;!b
=-!b
=2!b
|$ H
|$ H
D$HdH3
P[]A\
5g63
=a1a
5L53
|$ H
5,43
ffff.
5T33
=K.a
AWAVAUATUSH
D$x1
H9D$
l$0L
t$0L
d$PL
T$8L
|$PI
|$0I
L$xdH3
[]A\A]A^A_
|$PI
|$0I
AWAVAUATUSH
D$x1
H9D$
5	65
l$0L
t$0L
d$PL
T$8L
|$PI
|$0I
L$xdH3
[]A\A]A^A_
5L.3
=C)a
|$0I
|$PI
AWAVAUATUSH
D$x1
H9D$
5935
l$0L
t$0L
d$PL
T$8L
|$PI
|$0I
L$xdH3
[]A\A]A^A_
5|+3
=s&a
|$0I
|$PI
AWAVAUATUSH
D$x1
H9D$
5i05
l$0L
t$0L
d$PL
T$8L
|$PI
|$0I
L$xdH3
[]A\A]A^A_
5L(3
|$0I
|$PI
AWAVAUATUSH
D$x1
H9D$
l$0L
t$0L
d$PL
T$8L
|$PI
|$0I
L$xdH3
[]A\A]A^A_
=3!a
5|%3
|$0I
|$PI
AWAVI
AUATUSH
D$ I
D$`H
D$`H
D$hH
D$pH
D$xH
D$`H
L$8H
L$@H
\$@H
|$HH9
%H9\$@t
|$HH
l$@H9
|$@H
[]A\A]A^A_
l$8H
|$Hu$H;|$@t
|$HH;|$PH
|$HH
|$HH
T$8H
T$HH
D$HH
|$(L
l$0H
?H9|$ t
5u$5
d$HH
l$@I9
d$@M
fffff.
AWAVAUATUSH
5_.1
d$PH
|$PI
:tZH
t/H9
d$ H
d$ H
|$0I
[]A\A]A^A_
t$0L
d$pI
T$8H
H9D$x
5- 5
|$pI
d$ H
|$0I
|$pI
|$PI
AWAVA
AUATA
D$pH
D$pH
d$P1
D$xH
:tTH
t)H9
\$@H
8_u2H
Mu H
[]A\A]A^A_
Mt.L
\$0H
=;	a
\$ H
H9|$
AWAVAUATA
D$PH
D$PH
\$xH
D$XH
D$`H
D$hH
:tWH
t,H9
\$@H
8_u*H
[]A\A]A^A_
Mt.L
\$0H
\$ H
H9|$
ATUH
\$ H
D$H1
D$ H
|$ H
t$HdH34%(
P[]A\
|$ H
AWAVL
AUATL
d$pI
H9D$x
l$PL
|$0L
|$0I
|$PI
|$pI
[]A\A]A^A_
d$ H
|$pI
|$PI
|$0I
AWAVL
AUATH
l$pH
D$pt
D$01
D$8H
D$8L
d$PH
|$PI
d$@M
|$pH
[]A\A]A^A_
d$PL
T$0H
|$pH
d$ H
|$PI
AWAVL
AUATUSH
t$0H
D$8H
d$pL
D$8H
l$PH
|$pI
|$PH
l$@H
[]A\A]A^A_
l$PL
T$0H
|$pI
l$ H
|$PH
AWAVL
AUATUSH
t$0H
D$8H
d$pL
D$8H
l$PH
|$pI
|$PH
l$@H
[]A\A]A^A_
l$PL
T$0H
|$pI
l$ H
|$PH
AUATUSH
\$0H
l$PdH
D$x1
D$PH
|$XH
|$0H
D$xdH3
[]A\A]
|$XH
|$0H
d$ H
AVAUATUSH
D$X1
\$0H
D$0t
H9D$
D$0H
H+L$8H9
|$0H
L$XdH3
`[]A\A]A^
|$0H
ffff.
AWAVAUATUSH
D$ I
D$(H
D$(H
[]A\A]A^A_
l$`H
\$PH
D$8H
|$0I
l$pH
l$@H
T$8H
AVAUA
\$ H
D$H1
D$ H
D$(H
|$ H
t$HdH34%(
P[]A\A]A^
|$ H
AWAVAUATUSH
D$x1
H9D$
l$0H
t$0H
l$PL
T$8H
|$PH
|$0I
L$xdH3
[]A\A]A^A_
MtdL
D$PH
|$PH
|$PH
|$0I
|$PH
fff.
AWAVAUATUSH
B0L9
L$(H
t$0H9
t*M9
D$HH
t$PH
[]A\A]A^A_
t$pL
|$xI
|$HI
|$HI
|$xI
AWAVL
AUATUSH
D$h1
t$0H
D$0L
l$XH
D$8H
D$@H
D$HH
l$ H
D$hdH3
x[]A\A]A^A_
5uz1
5]z1
l$ H
AWAVL
AUATH
D$h1
D$0L
l$XH
D$8H
D$@H
D$HH
\t.H
l$ H
D$hdH3
x[]A\A]A^A_
l$ H
AWAVAUATUSH
t$0H
t$@H
[]A\A]A^A_
t$ H
d$pH
d$`H
d$PH
AWAVH
AUATL
D$H1
l$8H
D$ H
D$(H
D$HdH3
X[]A\A]A^A_
AWAVAUATUSH
D$PH
|$@H
D$(H
D$XH
D$hH
D$pH
D$0H
D$ I
t$(A
D$ H
D$HI
T$XH
D$0H
D$ H
\$`H
{0I9
H9\$h
x0I9
t*L9
E@H9
G@H9
H;|$ t
H;|$
H9D$8I
T$HH
t$(H
t$`H
[]A\A]A^A_
D8	t
D$(H
{0I9
t/H9
D$(A
D$(H
H9\$ht
|$(H
}(H9|$
G@H9
D$0H
E@H9
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
[]A\
ATUH
[]A\
[]A\
tSATI
C8H9
[]A\
ATUH
\$ H
D$H1
mkst
D$ H
|$ H
D$HdH3
P[]A\
|$ H
AVAU1
ATUI
D$81
T$ H
L$8dH3
@[]A\A]A^
=Ac0
ATUI
[]A\
ATUH
\$ H
D$H1
|$ H
D$HdH3
P[]A\
|$ H
AWAVAUATUSH
L$(H
D$0H
D$@H
D$8H
<$I)
t$hL;t$pH
D$ H
t?f.
t$hH
t$hL9
<0H9
<0I9
l$`L;l$h
m I;m(A
I9m(u
L9l$h
D$(H
l$hL
d$`M9
l$(I
\$ H9
l$ H
l$`M
[]A\A]A^A_
|$`L
l$hH9l$`tGH
l$PH
D$(H
l$hH
l$`I9
e M9
l$`M
t$8L
|$HH
|$0H
H;|$@
D$0H
>H9|$ t
D$8H
ATUI
_ H9
l$ H
[]A\
[]A\
AWAVAUATI
[]A\A]A^A_
AWAVI
AUATUSH
L$x1
|$ I
\$0M
|$(L
\$(L
d$@I
l$`L
l$hH
\$hH
H+D$
t$ H
l$hH
\$`H9
l$`H
|$@I
D$xdH3
[]A\A]A^A_
D$8H
D$ H
\$ I
D$0L
`(t5f
D$0H
l$ L
0L9t$
^(I+^ E1
n I9
8L9t$
D$(H
H9D$
l$(f
n E1
8L9t$
(H;l$
] I9
|$ H
D$8H
D$8H)
H;|$
D$ L9
H;|$
D$(I9
D$0H
D$0H
|$`H
|$@I
|$ H
<$H9|$
D$ H9D$(H
H9\$(u
ATUI
l$0H
D$X1
D$0H
guess_biH
e_contenL
T$ H
nary_filH
|$0H
D$XdH3
`[]A\
|$0H
fff.
AWAVI
AUAT
\$0dH
l$0L
D$0H
D$8I
D$0H
[]A\A]A^A_
="ra
fffff.
fff.
ATUH
get_ostySH
\$ H
D$H1
D$ H
|$ H
D$HdH3
P[]A\
|$ H
D$(1
T$(dH3
ATUH
existsonSH
\$ H
D$H1
pathH
D$ H
|$ H
D$HdH3
P[]A\
|$ H
fffff.
ATUH
is_execuSH
\$ H
D$H1
tablH
D$ H
|$ H
D$HdH3
P[]A\
|$ H
ATUH
set_execSH
\$ H
D$H1
utabH
D$ H
|$ H
D$HdH3
P[]A\
|$ H
fff.
fffff.
=^ja
ATUI
l$0H
D$X1
D$0H
clear_exH
T$ H
ecutableH
|$0H
D$XdH3
`[]A\
|$0H
fffff.
ATUH
\$ H
D$H1
spaw
D$ H
|$ H
D$HdH3
P[]A\
|$ H
AWAVH
AUATI
[]A\A]A^A_
[]A\A]A^A_
=lfa
ATUI
l$0H
D$X1
D$0H
spawn_reH
T$ H
directedH
|$0H
D$XdH3
`[]A\
|$0H
AWAVH
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
ATUH
spawn_piSH
\$ H
D$H1
D$ H
|$ H
D$HdH3
P[]A\
|$ H
AVAUH
ATUI
]A\A]A^
]A\A]A^
=Zaa
ATUH
\$ H
D$H1
waitH
D$ H
|$ H
D$HdH3
P[]A\
|$ H
Hct$
fff.
ATUH
\$ H
D$H1
killH
D$ H
|$ H
D$HdH3
P[]A\
|$ H
ATUH
ATUH
\$ H
D$H1
slee
D$ H
|$ H
D$HdH3
P[]A\
|$ H
ffffff.
=w\a
ATUH
\$ H
D$H1
get_
D$ H
|$ H
D$HdH3
P[]A\
|$ H
ATUH
\$ H
D$H1
mkdi
D$ H
|$ H
D$HdH3
P[]A\
|$ H
AVAUI
ATU1
D$81
T$ H
L$8dH3
@[]A\A]A^
ATUH
\$ H
D$H1
exisH
D$ H
|$ H
D$HdH3
P[]A\
|$ H
AVAUI
ATU1
D$81
T$ H
L$8dH3
@[]A\A]A^
fffff.
ATUH
\$ H
D$H1
isdi
D$ H
|$ H
D$HdH3
P[]A\
|$ H
AVAUI
ATU1
D$81
T$ H
terS
L$8dH3
@[]A\A]A^
ATUH
read_dirSH
\$ H
D$H1
ectoH
D$ H
|$ H
D$HdH3
P[]A\
|$ H
fff.
AWAVH
AUATI
D$H1
l$ H
T$0H
|$ H
L$HdH3
X[]A\A]A^A_
D$ H
|$ H
fffff.
ATUH
D$0globH
D$H1
matcH
|$ H
D$HdH3
P[]A\
|$ H
AWAVI
AUAT1
d$@dH
D$h1
l$ M
T$0H
D$(H
|$ H
|$HI
L$hdH3
x[]A\A]A^A_
D$ H
|$HI
|$ H
55P0
fffff.
fffff.
C@H9
ATUI
[]A\
C@H9
AWAVAUATI
D$pH
D$ H
D$@H
D$PH
l$0H
5aM0
D$8L
t$8L
T$hH
t$`H
|$`H;|$ t
H9D$
|$(H
T$HH
t$@H
|$@L9
H9D$
[]A\A]A^A_
;H9|$
|$`H
|$@H
AVAUI
ATUH
%7U`
D$81
D$8dH3
@[]A\A]A^
5$J0
fffff.
ATUSH
[]A\
AVAUI
D$h1
T$ H
5\W2
T$(H
t$ H
t$@I
T$HH
t$@H
|$@I
|$ H
D$hdH3
p[]A\A]A^
|$@I
|$ H
ATUH
[]A\
fffff.
ATUSH
D$H1
L$HdH3
P[]A\
5:F0
l$ L
|$ H
|$ H
AUATUSH
D$(1
L$(dH3
8[]A\A]
fff.
AUATUSH
[]A\A]
5VD0
ATUSH
[]A\
5yB0
AUATUSH
D$81
L$8dH3
H[]A\A]
fff.
AUATUSH
D$81
L$8dH3
H[]A\A]
5vA0
fff.
AUATUSH
D$81
L$8dH3
H[]A\A]
%$J`
5t@0
D$(1
L$(dH3
fff.
fff.
D$(1
L$(dH3
D$(1
L$(dH3
5T;0
D$(1
L$(dH3
5m:0
D$(1
L$(dH3
D$(1
L$(dH3
D$(1
L$(dH3
5p80
D$(1
L$(dH3
ATUSH
D$(1
L$(dH3
0[]A\
fff.
fff.
AVAUATUSL
5eU0
nHL9
[]A\A]A^
AVAU1
ATUI
\$0dH
D$X1
D$0t
|$0H
L$XdH3
`[]A\A]A^
|$0H
fffff.
=r,a
5L?2
5$P1
5L>2
5$O1
5=00
=6)a
AWAVAUATI
dH34%(
([]A\A]A^A_
%|(a
\$(I
t$ H
5:.0
="'a
AUATH
D$(1
|$(H
D$(dH3
8[]A\A]
H+L$
l$PH
fffff.
AWAVAUATI
L$ H
L$ L
[]A\A]A^A_
D$PJ
D$ H
D$XH
D$hH
D$pH
t$`I
L$0H
D$xH
u H)
S`tUH
L$@H
t$`H
t$`H
{ H9|$(H
ATUH
\$ H
D$H1
|$ H
D$HdH3
P[]A\
|$ H
ATUH
\$ H
D$H1
5q$0
|$ H
D$HdH3
P[]A\
|$ H
ATUH
\$ H
D$H1
|$ H
D$HdH3
P[]A\
|$ H
ATUH
\$ H
D$H1
|$ H
D$HdH3
P[]A\
|$ H
fffff.
ATUH
\$ H
D$H1
|$ H
D$HdH3
P[]A\
|$ H
AWAVAUATI
Y^L9
[A\A]A^A_]
AWAVL
AUATSI
5D.4
D$@H9
=R!`
[A\A]A^A_]
fffff.
AWAVH
AUATH
[]A\A]A^A_
H9\$
[]A\A]A^A_
AWAVH
AUATH
[]A\A]A^A_
H9\$
[]A\A]A^A_
tAATI
[]A\
tAATI
[]A\
AVAUATUSH
D$(1
k L9
D$(dH3
0[]A\A]A^
AWAVAUATUSH
D$81
D$ H
4$L9
m L)
H;|$
D$8dH3
H[]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AVAUATI
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
I9] tjH
[]A\A]A^A_
AWAVH
AUATI
L$(H
L$X1
T$ L
H;l$
|$0H
D$0H
D$(H
H;l$
l$8H
t$0H
|$0I
D$XdH3
h[]A\A]A^A_
|$ I
L9|$
|$0H
D$0H
D$(H
|$0I
AWAVAUATSH
XZL9
[A\A]A^A_]
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
fffff.
ATUI
[]A\
ATUH
\$0dH
D$X1
D$0H
|$0H
D$XdH3
`[]A\
|$0H
fff.
ATUH
\$0dH
D$X1
D$0H
|$0H
D$XdH3
`[]A\
|$0H
fff.
ATUH
\$0dH
D$X1
D$0H
|$0H
D$XdH3
`[]A\
|$0H
fff.
AUATI
\$ H
D$H1
D$ H
|$ H
D$HdH3
X[]A\A]
|$ H
AVAUI
ATUH
\$ H
D$H1
D$ H
|$ H
D$HdH3
P[]A\A]A^
|$ H
AVAUI
ATUH
\$ H
D$H1
D$ H
|$ H
D$HdH3
P[]A\A]A^
|$ H
ATUH
\$ H
D$H1
D$ H
|$ H
L$HdH3
P[]A\
|$ H
ATUH
\$ H
D$H1
D$ H
|$ H
L$HdH3
P[]A\
|$ H
ATUH
\$ H
D$H1
D$ H
|$ H
L$HdH3
P[]A\
|$ H
ATUH
D$81
L$8dH3
@[]A\
AVAUH
ATUI
l$0H
\$PdH
D$x1
T$8H
D$PH
|$PA
|$0H
H;T$8L
|$XH
D$xdH3
[]A\A]A^
t$0H
|$0H
|$XH
|$PH
D$(1
D$(dH3
AWAVI
AUATH
l$ H
\$@dH
D$h1
T$(H
D$@H
|$@A
|$ H
|$ H
|$@H
D$hdH3
x[]A\A]A^A_
t$ H
|$ H
|$@H
|$ H
|$@H
ATUH
D$H1
|$ H
D$HdH3
P[]A\
|$ H
ATUH
D$H1
|$ H
D$HdH3
P[]A\
|$ H
AUATH
\$0dH
D$X1
D$0H
|$0A
|$0H
D$XdH3
h[]A\A]
|$0H
|$0H
ATUH
D$H1
|$ H
D$HdH3
P[]A\
|$ H
AWAVI
AUATH
D$h1
d$ L
T$(H
l$@H
|$@A
|$ I
|$ I
|$@H
D$hdH3
x[]A\A]A^A_
t$ H
|$ I
|$ I
|$@H
|$@H
AWAVI
AUATH
D$h1
d$ L
T$(H
l$@H
|$@A
|$ I
|$ I
|$@H
D$hdH3
x[]A\A]A^A_
t$ H
|$ I
|$ I
|$@H
|$@H
AWAVI
AUATI
\$0dH
D$X1
D$0H
|$0A
D$0H
|$0A
|$0H
D$XdH3
h[]A\A]A^A_
|$0H
|$0H
|$0H
AWAVI
AUATUSH
l$ H
d$@H
D$@H
|$`H
L$`H
|$@I
l$0H
|$@I
D$`H
[]A\A]A^A_
|$@I
|$@L9
ATUSH
D$H1
\$ H
5f%b
=S%b
5@%b
|$ H
D$HdH3
P[]A\
|$ H
ATUH
D$(1
D$(dH3
0[]A\
ATUI
D$(1
D$(dH3
0[]A\
ATUI
D$(1
D$(dH3
0[]A\
fffff.
AVAUATUH
l$0H
|$XH
|$xH
D$PH
D$pH
T$pH
t$PH
H;\$
(H9\$
\$0H
|$8L
(H9\$8t*H
(H9\$8u
l$0H9
|$0H
[]A\A]A^
ffff.
AVAUI
ATUH
D$X1
\$0L
D$0H
|$0H
D$XdH3
`[]A\A]A^
|$0H
ffff.
AVAUI
ATUH
d$`u
\$@H
|$@H
l$ 1
l$0H
|$@H
[]A\A]A^
|$`I
l$ H
|$`I
|$@H
|$@H
ATUSH
[]A\
fff.
AVAUI
ATUH
\$ H
D$H1
D$ H
|$ H
L$HdH3
P[]A\A]A^
|$ H
ATUSH
[]A\
ATUSH
[]A\
AWAVI
AUATI
D$81
D$8dH3
H[]A\A]A^A_
,$L9
fffffff
L94$L
fffffff
AWAVA
AUATI
\$ dH
D$x1
l$PH
D$PH
|$XH
|$(H
L$xdH3
[]A\A]A^A_
|$XH
|$(H
D$(1
D$(dH3
AWAVA
AUATI
\$ dH
D$x1
l$PH
D$PH
|$XH
|$(H
L$xdH3
[]A\A]A^A_
|$XH
|$(H
ATU1
D$81
D$8dH3
@[]A\
ATUI
=I{/
[]A\
ATUI
[]A\
fffff.
AWAVL
AUATUSH
$tQH
[]A\A]A^A_
$wQB
AVAUATUA
D$81
uzH9
t$8dH34%(
@[]A\A]A^
fffff.
AWAVI
AUATI
|$0H
l$0L
|$0L
|$0H
dH34%(
[]A\A]A^A_
D$@H
D$@H
D;|$
l$0u
\$pL
l$PH
l$0H
D$@H
T$XH
t$PH
T$xH
t$pH
|$PH
|$pH
|$0H
D$0H
D$0s
|$0L
\$pH
D$@H
T$xH
t$pH
|$pH
D$@H
D$@H
D$@H
D$@H
D$@H
|$pH
|$PH
D$(1
D$(dH3
D$(1
L$(dH3
AWAVAUATUSH
D$81
L$8dH3
H[]A\A]A^A_
AVAUATI)
[]A\A]A^A_
AWAVAUATUSH
D$ B
[]A\A]A^A_
|$0H
\$PH
|$ @
AXAYt<
D$0I
|$ I
L;t$8@
D$ H
D$(H
H9D$0
H9T$(v
\$pH
\$`H
t$0H
t$8H
D$ H
|$ @
l$@H
AWAVH
AUATH
L$X1
D$@H
L$ H
D$0H
D$ H
M;&H
\$ H
t$0H
T$8H
|$0H
D$XdH3
h[]A\A]A^A_
|$0H
ATUSH
[]A\
AUATA
D$81
D$8dH3
H[]A\A]
AWAVH
AUATH
L$X1
D$@H
L$ H
D$0H
D$ H
\$ I
t$0H
T$8H
|$0H
D$XdH3
h[]A\A]A^A_
|$0H
txAVAUATUH
[]A\A]A^
AUATUS
,$D8
~;L9
[]A\A]
ATUI
=YF/
[]A\
AWAVH
AUATI
"t@@
\t:H
H9D$
H9D$
[]A\A]A^A_
;H9|$
fff.
AWAVAUATUSH
L9;w
=\~`
=<~`
[]A\A]A^A_
L;;H
AWAVAUATI
AWAVI
AUATUSH
D$PH
D$pH
t$pL
T$xH
|$0H
t$(L
D$(I
\$@H
D$ H
|$pH
|$PH
[]A\A]A^A_
|$pH
|$PH
=qA/
T$ H
=(A/
|$(H
AWAVAUATI
|$ H
D$x1
l$@H
\$8H
D$XH
I;\$
t$XH
|$XH
\$PH
\$0H
D$xdH3
[]A\A]A^A_
AWAVI
AUATH
l$ I
D$x1
l$@H
t$ H
D$XH
I;\$
t$XH
|$XH
\$PH
|$ I
D$xdH3
[]A\A]A^A_
|$ I
fff.
AWAVI
AUATI
D$x1
l$ H
T$ H
l$@H
t$ H
D$XH
I;\$
t$XH
|$XH
\$PH
|$ I
D$xdH3
[]A\A]A^A_
|$ I
fff.
AWAVI
AUATUSH
t$0H
d$PH
l$HI
D$(H
D$hH
t$hH
|$hI
l$`H
l$@H
l$ H
[]A\A]A^A_
AVAUI
ATUH
5o]`
D$H1
\$ H
|$ H
D$HdH3
P[]A\A]A^
|$ H
AWAVAUATI
l$0I;\$
l$PI
T$XH
t$PH
|$PL9
 I9\$
t)L9|$8
t$0H
T$8L
l$pI
t$pI
D$(I
\$ H
|$pI
|$0H
[]A\A]A^A_
|$0H
|$pI
|$PI
AWAVI
AUATH
D$@H
t$@H
l$`H
T$HH
H9D$h
\$ L
D$(I
\$0H
|$`H
|$@H
[]A\A]A^A_
=)*/
|$`H
|$@H
AWAVAUATI
l$0H
T$0H
$I;\$
L9l$8
t$PM
L9l$8
T$XH
t$PH
|$PL9
 I9\$
t$0L
l$pI
T$8H
t$pI
D$(I
\$ H
|$pI
|$0H
[]A\A]A^A_
|$0H
|$pI
|$PI
AWAVAUATI
D$H1
D$(H
|$(I
\$ H
D$HdH3
X[]A\A]A^A_
tCf.
,$L9
,$M9
U(H9
H9,$t
L94$
=6U`
=)U`
AUATUSH
D$81
D$8dH3
H[]A\A]
fffff.
AVAUATUH
l$0H
[]A\A]A^
t$0L
d$@L
|$@I
l$ L
d$`L
|$`I
|$@I
|$`I
ffffff.
fffff.
ATUI
[]A\
[]A\A]A^
@0H9
ATUH
_XI9
]@I9
E0H9
[]A\
[]A\
fff.
fffff.
5\[1
5Pf/
fff.
fff.
5|Z1
fff.
D$81
= K`
=CI`
5XH`
D$8dH3
=YJ`
=9J`
=DI`
fff.
ATUH
\$ H
D$H1
|$ H
D$HdH3
P[]A\
|$ H
AVAUATI
^HI+^@E1
n@I9
^`E1
I+^XI
vXL9
[]A\A]A^A_
H9<$t
} H;|$
AWAVAUATUSH
D$0I
|$ I
D$ I
]HI+]@E1
|$@M
|$HI
\$PM
m@I9
\$HI
]`E1
I+]XI
|$XM
|$`I
\$hM
mXI9
\$`I
pL9,$
[]A\A]A^A_
L9d$
|$XH
|$ H;|$
<$H;|$
|$@H
fff.
AWAVAUATL
5,\/
[]A\A]A^A_
l$ H
5~[/
l$@H
t$`H
5Yk2
|$`I
|$@I
|$ H
|$`I
|$@I
|$ H
5eY/
=0I_
5{X/
=0H_
=8G_
5RV/
5LI1
5EU/
AWAVAUATI
\$0H
D$x1
|$0H
|$PH
D$PH
l$XB
H9\$
D$PL
d$XH
T$`L9
D$PH
l$XH
T$`L9
D$PH
H9\$
T$XH
t$PH
|$PI
D$xdH3
[]A\A]A^A_
@0H9
|$PI
|$0H
fff.
AUATI
5(L/
-"(`
D$81
D$8dH3
H[]A\A]
AUATI
5pL/
D$81
=e?_
D$8dH3
H[]A\A]
AUATI
D$81
L$8dH3
H[]A\A]
u\E1
AVAUATUH
D$81
L$8dH3
@[]A\A]A^
fffff.
t7v%
AWAVAUATI
d$ I
t$ L
l$pI
T$(H
t$pH
l$@H
T$xH
D$`H
|$@H
|$pI
|$ I
[]A\A]A^A_
5\H/
=f7_
5:I/
{hI9
{HL9
{(H9<$t
|$@H
|$pI
|$ I
5|:1
5,F/
5<91
fffff.
ATUSH
=''`
[]A\
=x3_
5LE/
=(3_
5Z@/
fffff.
fffff.
fffff.
AWAVL
AUATI
l$0H
D$X1
d$0H
L9|$8
T$8H
t$0L
|$0L9
D$XdH3
h[]A\A]A^A_
|$0H
ffffff.
AWAVAUATUSH
L$x1
H9\$
D$xdH3
[]A\A]A^A_
\$0H
l$PH
|$PH
|$0H
\$ H
=6._
|$0H
|$PH
ATUSH
CxH9
CXH9
[]A\
=Y `
5\11
5O>/
CxH9
CXH9
AWAVAUATSH
E@H9
E@H9
5\6/
=n$_
=X#_
@ I9
[A\A]A^A_]
=2!_
AWAVAUATUSH
|$HH
t$XH
t$@H
D$HH
D$ H
D$(H
D$Pf
D$@H
l$@H
H9x@
D$(L
D$PH
|$ 1
D$@H
T$ H
H;|$(t
D$@H
D$8H
t$0H
t$HL
L9,$
|$0I
l$8H
D$@H
D$@H
D$XH
[]A\A]A^A_
D$8I
})E1
L9D$0v
D$8H
D$8L
p(f.
D$@H
D$@H
l$pH
D$@H
D$@H
l$@H
D$8H
])E1
L9D$0v
D$8H
T$@H
l$`H
T$XH
5f!/
5X!/
D$@H
D$XH
D$8H
D$ H
D$8H
AWAVAUATUSH
\$8I
L$HH
T$pH
|$8L
|$HH
D$ H
D$0H
D$@f
H+D$xH
|$8H
L$0L
D$@H
|$ 1
5=)2
T$ L
D$(H
H;|$0t
|$HH
\$PH
D$@H
T$xH
t$pH
D$HH
D$8H
|$pH
[]A\A]A^A_
D$(I
D$(H
D$XH
d$`H
D$ H
D$HH
D$8H
|$pH
|$(H
|$(H
ffffff.
AWAVAUATI
D$pI
D$pH
|$0H
\$0H;\$8
H9\$0tUK
wLI;}
t$pH
D$pH
D$xH
5E\/
(H9\$8
l$`I
D$ H
D$xH
t$pH
l$8H
\$0H9
l$0H
|$pH
[]A\A]A^A_
|$PH
|$pH
AWAVAUATUSH
t$@I
t$0H
D$@H
D$HL
L$ H
D$ H
D$`L
\$`H
|$hH9
|$hH
H9\$`t~L9
D$`H9
|$`L9
|$`H
H;|$ t
H9D$H
D$H1
[]A\A]A^A_
D$`H
8H9|$8t
|$(H
fff.
AVAUE
ATUI
D$(1
T$(dH3
0[]A\A]A^
AWAVAUATUSH
|$hH
D$8H
D$ H
D$ I
|$(H
D$0M
|$8M
D$@L
D$HH
D$PH
|$XM
D$`L
D$hH
D$pH
D$xH
EXH9
E8H9
D$8H
D$hH
D$@H
T$0H
D$8H
L$PH9L$
D$PH
D$PpL9
t-f.
H;|$
D$PH
L;d$0
l$PH
D$ H
|$8H
D$PH
H;|$ t
D$PH
D$PH
58E/
l$PI
D$PH
D$PE1
D$PH
 H9h
D$PH
 H9h
D$(L9
D$(H
D$0H
|$`1
|$@1
|$ H
t$ H
D$@D
\$PH
D$PH
D$@H+D$(H
D$xH
H9D$P
D$pH
D$@H
D$XH
D$HH
D$`f
T$xH
\$pI
D$XI
D$`H
\$8H
\$HH
t$(I+t$
l$8H
D$ H
H;|$
H;|$
L9t$0tUM
d$HH
\$HI
H;|$`t
H;|$Xt
H9D$PI
T$8H
t$PH
|$PH
H9D$PH
H9\$Pu
l$PH
L$hH
D$hL
d$PH
H9D$PH
]XI9
]@I9
E0H9
[]A\A]A^A_
t$hA
|$ H
D$8H
D$HH
D$@H
eXM9
e@M9
E0H9
pH;l$P
D$hH
D$PH
H9L$P
}hH9|$0t
}HH9|$(t
}(I9
EXH9
E8H9
|$pH
D$8H
D$PH
AWAVH
AUATI
|$@H
\$@L
l$HH
D$HH
D$HH9
\$`L
D$hH
t$HH
l$@I9
t$@M
\$ H
\$0H
[]A\A]A^A_
|$@H
fffff.
fffff.
fffff.
[]A\
D$ H
E []A\
[]A\
D$ H
+[]A\
ATUH
[]A\
fffff.
D$(1
D$(dH3
[]A\
ATUSH
[]A\
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATI
D$(1
\$ H
D$ H
L$(dH3
8[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
AVAUI
ATUI
[]A\A]A^
=sl.
ATUSH
[]A\
ATUH
[]A\
[]A\
CXH9
C8H9
CXH9
C8H9
tAATI
[]A\
AWAVH
AUATUSH
L;d$
t$ L
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATUSH
[]A\A]A^A_
uiH)
tAATI
[]A\
AWAVH
AUATUSH
L;d$
t$ L
[]A\A]A^A_
[]A\A]A^A_
t8ATI
[]A\
t}ATI
[]A\
AWAVAUATI
[]A\A]A^A_
AWAVH
AUATUSH
|$(I
|$ H
[]A\A]A^A_
AWAVAUATUSH
D$(1
D$(dH3
8[]A\A]A^A_
\$ H
AUATI
[]A\A]
AUATUI
[]A\A]A^
[]A\A]A^
]A\A]A^
F H9
[]A\A]A^
AWAVAUATI
L$81
H9,$t7H
L$8dH3
E@ufH
H[]A\A]A^A_
AUATI
[]A\A]
AWAVAUATI
D$81
D$ H
D$0H
D$0I
D$8dH3
H[]A\A]A^A_
D$ A
fffffff
fffffff
t4M9
H;|$
AWAV
AUATI
t$ L
|$`H
D$PH
t$PH
|$PL9
I;\$
4$H)
|$PH
l$0I
T$0H
t$0L
T$8H
|$0H
[]A\A]A^A_
=nU.
|$PH
|$0H
AUATI
D$81
D$ L
D$(H
AVAUATUSH
D$X1
l$ H
\$0H
|$0H
D$XdH3
`[]A\A]A^
|$0H
AWAVAUATI
[]A\A]A^A_
D$HH9
D$(H9
[]A\
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AVAUI
ATUI
|$XI
D$hM
|$8I
D$HH9
l$(I
\$ H9
l$ H
[]A\A]A^
AWAVAUATUSH
t+f.
[]A\A]A^A_
[]A\A]A^A_
ATUI
=92.
[]A\
=?|^
AVAUATUSH
D$H1
\$ K
|$ H
L$HdH3
P[]A\A]A^
|$ H
fff.
AVAUATUSH
t$ H
l$@H
d$`H
|$`I
|$@H
|$ I
[]A\A]A^
<ou 
|$`I
5]f.
|$`I
|$@H
|$ I
fffff.
AWAVI
AUATI
C0H9
D$@H
D$PH
D$@H
D$`H
D$(H
D$pH
D$`H
D$(H
|$`H
|$@H
I;|$
[]A\A]A^A_
t$(L
t$`H
T$hH
t$@H
D$ H
E0H9
H;<$
\$0H
\$0H
D$(H
|$`H
|$@H
;H9|$ I
C0H9
AWAVI
AUATI
D$h1
l$ I
D$@H
?~6H
|$@I
E0H9
|$ I
D$hdH3
x[]A\A]A^A_
,$L9
t;f.
E0H9
|$ I
H9D$
H9\$
AWAVAUATUSH
([]A\A]A^A_
-K9_
|$@I
5y7_
|$@I
|$@I
|$pH
|$@I
|$pH
AWAVAUATUSH
5~}.
5|}.
5J}.
58}.
5 }.
[]A\A]A^A_
@0H9
[]A\A]A^A_
fff.
AWAVAUATUSH
5%|.
5>G0
[]A\A]A^A_
@0H9
[]A\A]A^A_
fff.
AWAVAUATUSH
5~z.
5Jz.
58z.
5 z.
[]A\A]A^A_
@0H9
[]A\A]A^A_
fff.
AVAUATUSH
5Iy.
57y.
5pD0
[]A\A]A^H
@0H9
[]A\A]A^
ATUI
[]A\
AWAVH
AUATH)
([]A\A]A^A_
H9l$
H9l$
L9l$
[]A\A]A^A_
fffff.
AVAUH
ATUSH
D$X1
l$0L
D$0H
H+D$8H
5>w.
t$0L
|$0H
L$XdH3
`[]A\A]A^
l$0L
t$0L
|$0H
|$0H
|$0H
AWAVI
AUATI
[]A\A]A^A_
AWAVI
AUATUSH
[]A\A]A^A_
fffff.
AWAVAUATI
{ H9
rUH9
[]A\A]A^A_
I9\$
x H9
tCE1
H;k A
[]A\A]A^A_
fffff.
fff.
H;x v
H;z r	H
5'm.
=CT^
fff.
=1J_
AVAUATUSH
S H9
w-H9
[]A\A]A^
P H9
t<E1
C H9E A
fff.
AWAVI
AUATH
u5H)
[]A\A]A^A_
u L)
ATUSH
t~[]A\
[]A\
[]A\
fffff.
 []A\
AWAVAUATUSH
D$81
qPH9
\$ H
d$(H
l$ I9
d$ M
t$8dH34%(
H[]A\A]A^A_
\$ H
5wd.
=kK^
5Rd.
|$ H
AVAUH
ATUSH
 []A\A]A^
=6I^
AWAVI
AUATI
D$X1
D$ H
t$@H
l$PL
H+L$@H
l$HH
\$@L
d$HH
l$@H
d$@M
\$0H
L$XdH3
h[]A\A]A^A_
\$@H
5j_.
|$@H
AWAVI
AUATI
D$X1
D$ H
t$@H
l$PL
H+L$@H
l$HH
\$@L
d$HH
l$@H
d$@M
\$0H
L$XdH3
h[]A\A]A^A_
\$@H
|$@H
fffff.
AWAVL
AUATI
w txL
D$ D8xYw,H
h(H9
H;D$
[]A\A]A^A_
AWAVAUATI
L$(H
D$$dH
T$x1
L$ H
L$(D
D$$I
L$ H
L$0H
D$(I
%R4_
L;j v
L;n 
\$`H
|$@H
\$pH
d$HH
\$@I9
d$HH
l$@I9
d$@M
D$xdH3
[]A\A]A^A_
T$@L
l$@H
G H9D$@
|$HH
t$@L
|$@H
AWAVI
AUATI
([]A\A]A^A_
H9l$
AWAVAUATUSH
|$8dH
t$PH
D$gH
L$@H
L$XH
L$pH
L$hH
L$ H
L$0H
D$PH
H9D$X
D$XH
D$(I9
t$pL
t$xL
l$xI
D$xH
D$xH
d$xH
l$pI9
d$pM
H;D$(I
D$8H
d$xH
\$pE1
D$8H
L$@H
d$xH
\$pI
t$@H
|$8H
d$xH
l$pL
d$pM
[]A\A]A^A_
L$0H
|$ I
t$ H
|$H1
H;|$0
D$8H
\$pH
l$xL
d$@L
L9d$@t
L$(I
T$ H
l$xH
\$pI
|$8L
|$hH
\$pH
D$8H
T$ H
|$HH
|$pH
|$pH
AWAVE
AUATI
T$0H
D$0H
\$0H
|$`H
|$XH
T$XL
L$@H
D$PH
L$Hf
=9 _
D$ M
l$8H
L$0H)
L$ I
T$(H
D$HH
L$@A
t$ H
D$(H
\$pH
[]A\A]A^A_
T$PH
5b(0
5P>.
5f=.
=0#^
5B=.
5v'0
5<=.
L$8H
|$(H
|$XH
L$8H
|$@H
AWAVAUATUSH
t$ H
|$8dH
D$ H
|$8H
[]A\A]A^A_
D$ H
D$ H
|$0H
D$ H
D$(H
T$0H
L$(H
D$ H
D2 H
|$(H
s H)
l$@H
5H5.
5`x.
t$0H
l$`L
D$(H
H;D$
5'w.
D$ H
|$0H
L$8I)
D$8I
l$pH
5"s.
t$0H
d$PH
5@/.
D$8H
|$(H
D$8H
50,.
AWAVAUATI
4$M9
[]A\A]A^A_
AWAVI
AUAT1
D$81
L$8dH3
H[]A\A]A^A_
ATUH
[]A\
[]A\
AWAVL
AUATI
[]A\A]A^A_
t/ATI
[]A\
AWAVAUATI
D$(1
\$ H
D$(dH3
8[]A\A]A^A_
<?L9
AWAVH
AUATL
D$`1
t$pH
D$ H
|$`L9
I;\$
5xc.
t$`I
4$H)
\$0H
\$@D
\$PH
[]A\A]A^A_
|$`H
AWAVH
AUATUSH
L;$$tYI
D$(H
u/H)
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
AWAVAUATUSH
uEL)
[]A\A]A^A_
([]A\A]A^A_
AWAVI
AUATL
tZM9w
[]A\A]A^A_
AVAUATI
[]A\A]A^A_
[]A\A]A^A_
I9^ 
[]A\A]A^A_
[]A\A]A^A_
AVAUATI
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
tXAVL
[]A\A]A^
AWAVI
AUATI
[]A\A]A^A_
K L9
ATUSH
"L;f H
L;` H
[]A\A]
L;` H
[]A\A]
H9C r,L
[]A\A]
[]A\A]
[]A\A]
AWAVI
AUATL
tZM9w
[]A\A]A^A_
AVAUATI
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
fffff.
ATUI
[]A\
AWAV
AUATI
D$X1
t$ I
4$H)
<$H9
\$0H
T$8H
t$0L
|$0H
|$XdH3<%(
h[]A\A]A^A_
H9|$
|$0H
AWAVH
AUATH)
([]A\A]A^A_
 H9\$
H9\$
L9l$
[]A\A]A^A_
ffffff.
AWAVAUATI
[]A\A]A^A_
ffff.
AWAVAUATUSH
H9\$
H9\$
[]A\A]A^A_
fff.
ATUH
\$ H
D$H1
|$ H
D$HdH3
P[]A\
|$ H
ATUH
\$ H
D$H1
|$ H
D$HdH3
P[]A\
|$ H
ATUH
5m!^
5*!^
fff.
AUATH
D$(1
L$(dH3
8[]A\A]
AVAUATUSH
d$ H
D$H1
t$ L
|$ I
L$HdH3
P[]A\A]A^
|$ I
AVAUATSI
[A\A]A^]
5L/2
AWAVI
AUATI
T$(H
D$PH
D$PH
D$pl
|$xH
D$XH
D$`H
D$hH
D$PH
D$(H
t$ H
[]A\A]A^A_
I+4$H)
t$(H
\$@H
t$ H
l$0H
AWAVI
AUATI
[]A\A]A^A_
l$pH
|$pI
\$PH
|$pI
AWAVAUATSH
AUAT
[A\A]A^A_]
fff.
AWAVA
AUATI
\$@H
L$ H
T$@H
l$`H
|$`H
|$@H
l$0H
5%'.
h I;o
H;|$
 I9o
[]A\A]A^A_
D$(H
L9L$
D$(H
8H9|$ t
|$`H
|$@H
=p~-
=Z~-
D$(H
AWAV1
AUATI
H;|$
l$@L
\$`L
[]A\A]A^A_
\$`H
dH3<%(
AWAVAUATI
D$@H
|$`H
D$@L
|$`H
L$<A
\$@H;\$HI
D$(I
l$`tEH
D$ H
 H9\$Hu
l$`H
\$hH9
\$`H
l$HH
\$@H9
l$@H
[]A\A]A^A_
H;|$ 
<$H9|$(t
AWAVAUATSH
5Rq-
5{-.
[A\A]A^A_]
AWAVI
AUATUSH
|$(H
d$>L
5e$.
D$> 
t$ L
D$ H
D$(H
[]A\A]A^A_
l$`H
t$ H
t$(E1
l$PH
L9d$
|$(H
|$ H
AWAVAUATI
D$(H
-[~^
L$(I
T$ L
=jH-
[A\A]A^A_]
fff.
AWAVAUATSH
[A\A]A^A_]
= /-
=x.-
AVAUATSI
=,f]
53j/
=>e]
502^
5r5^
AVhL
5#/^
AUhM
5l1^
AThN
AShP
ARhQ
5<H^
5IH^
AQhR
5OG^
APhS
5BD^
=6`]
5rd/
AWAVAUATSH
_AXH
[A\A]A^A_]
=iZ]
AWAVAUATSH
=bc^
[A\A]A^A_]
=6<^
=gT]
59|-
5MX/
=	S]
5:{-
=DR]
AWAVAUATUSH
t$ H
D$h1
D$ H
|$@1
l$@H
T$HH
t$@L
|$@L9
|$ I
D$hdH3
x[]A\A]A^A_
|$@I
|$ I
=lN]
=HN]
AUATI
D$(1
D$(dH3
8[]A\A]
AVAUH
ATUE1
]A\A]A^
AWAVAUATI
[]A\A]A^A_
AWAVI
AUATL
D$81
L$8dH3
H[]A\A]A^A_
ATUH
[]A\
[]A\
AWAVI
AUATUSH
D$81
l$ H
$I9\$
I9\$
D$8dH3
H[]A\A]A^A_
l$ H
l$ H
5fE/
5w]-
l$ H
5l]-
5Aj-
5S]-
=!@]
AWAVL
AUATSH
5<U-
[A\A]A^A_]
AWAVL
AUATSH
5pg-
[A\A]A^A_]
AWAVL
AUATSH
5OX-
5zP-
5dP-
[A\A]A^A_]
AWAVL
AUATSH
[A\A]A^A_]
50L-
AWAVL
AUATSH
51`-
[A\A]A^A_]
AWAVL
AUATSH
5wQ-
5*I-
[A\A]A^A_]
5PG-
AWAVL
AUATSH
57O-
[A\A]A^A_]
AWAVL
AUATSH
5JD-
54D-
[A\A]A^A_]
5pB-
AWAVL
AUATSH
[A\A]A^A_]
AWAVL
AUATSH
5qT-
5j?-
5T?-
5ET-
[A\A]A^A_]
AWAVL
AUATSH
[A\A]A^A_]
5 ;-
AWAVL
AUATSH
5t:-
[A\A]A^A_]
AWAVL
AUATSH
5MA-
[A\A]A^A_]
AWAVL
AUATSH
5hJ-
5-5-
5,J-
[A\A]A^A_]
AWAVAUATL
AWE1
[A\A]A^A_]
AWAVAUATL
5EE-
AWE1
[A\A]A^A_]
AWAVAUATL
5Q--
5[B-
[A\A]A^A_]
AWAVAUATL
5N4-
5Y4-
5K*-
[A\A]A^A_]
AWAVL
AUATSL
5~'-
5h'-
AWE1
[A\A]A^A_]
AWAVAUATUSH
D$ H
D$ I
|$(H
D$0M
|$8M
D$@L
D$HH
D$PH
D$@H
D$@H
D$HH
D$hH
D$PH
D$pH
D$XH
D$xH
D$HH
D$PH
D$XH
D$`H
D$hH
D$pH
D$xH
D$@H
|$XM
D$`L
D$hH
D$pH
D$xH
EXH9
E8H9
\$8L
[]A\A]A^A_
D$(H
D$0H
|$`1
|$@1
|$ H
l$HI
t$ H
t$hH
D$`H
t$HH
l$HH
l$HI
}hH9|$0t
}HH9|$(t
}(I9
D$`H
D$@H
EXH9
E8H9
AWAVI
AUATUSH
[]A\A]A^A_
uiH)
AWAVI
AUATI
S H9
[]A\A]A^A_
P H9
tOE1
C I9
]A\A]A^A_
AVAUI
ATUI
l$(I
\$ M
l$ H
[]A\A]A^
AWAVH
AUATUSH
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AUATI
[]A\A]
AWAVAUATI
([]A\A]A^A_
4?L9
AWAVI
AUAT
[]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
AWAVH
AUATH
T$0H
t$8H
L$(H
L;d$ I
L;d$ I
D$0H
t L;d$8
D$(I
H[]A\A]A^A_
L;d$8K
\$8I
|$(O
D$8L
AVAUATH)
T$0H
D$8M)
D$(L
D$8H
D$(H
L;|$
D$(I
|$(H
T$@H
t$8L
D$(M
D$(L
t$(I
t$ H
AXAYu
\$ H
H[]A\A]A^A_
AWAVAUATUSH
L$,H
L$HH
D$PH9
D$,H
T$XH
t$XL
\$PI9
L$@L
T$HA
D$Du	=
\$@H
D$@H
D$HH
D$,=
[]A\A]A^A_
D$,=
D$`L
t$hH
|$`M
|$`A
D$XH9
|$@E1
L$`D
D$XH
t$XL
\$PL9
L$@L
T$HA
D$Du	=
L$@E
H;D$PL
t$@s!
D$XH
H9D$PH
D$Xw
|$`A
|$`E1
|$`I
K L9
u0L9
H L9
AVAUATI
L9n(H
vSH9]
@ L;j(
[]A\A]A^
H9] 
@ L;j(
[]A\A]A^
K(I9L$
C ts
[]A\A]A^
[]A\A]A^
[]A\A]A^
AWAVI
AUATI
E(H9C(H
H;T$
u(H9s(H
H;T$
u(H9u(H
[]A\A]A^A_
N(H9K(H
q(H9u(H
I(H9K(H
S tz
AWAVH
AUATUSH
D$81
D$8dH3
H[]A\A]A^A_
AUATI
D$(1
D$(dH3
8[]A\A]
ATUI
[]A\
AUATA
D$(1
D$(dH3
8[]A\A]
AWAVI
AUATUS
|$ H
L$@H
L$(L
T$HH
\$@H
t$H9
H9\$Hu
T$ H
\$8I;\$@t
I9\$@u
H;D$
L$`H
L$ L
T$hH
\$`H
t'H9
H9\$hu
T$ H
\$8I;\$@t 
I9\$@u
H;D$
[]A\A]A^A_
AWAVAUATSH
ATE1
[A\A]A^A_]
fff.
AVAUATUI
[]A\A]A^
AWAVAUATUS
t$@H
T$PH
L$hH
D$@H
|$HH
D$@H
|$HH
D$@H
|$HH
D$@H
|$HH
D$@H
|$HH
D$@H
|$HH
D$@H
D$XH
D$0H
D$ H
D$(H
D$ H
L$0H
T$8H
t$PH
H;D$ H
D$(H
|$(H
|$ H
D$@H
\$8H9
D$ H
D$(H
D$8H
|$0H
D$ L
|$0H
|$HH
H;|$
\$HL
|$`H
[]A\A]A^A_
L9T$
H;|$8
|$HH
D$@H
|$HH
|$(H
D$(H
ffffff.
AWAVAUATUSH
t$8H
D$8L
D$8H
=7}]
t$8I
D$PH
D$HH
D$(H
D$pH
D$ H
L$(H
T$0H
t$@H
\$XH
H;D$
D$(H
|$ H
D$8H
\$0H9
|$(H
[]A\A]A^A_
=1x]
|$(H
|$(H
|$(H
|$(H
|$ H
|$(H
fffff.
AWAVAUATI
[A\A]A^A_]
AWAVAUATI
ATAW
[A\A]A^A_]
AWAVL
AUATSL
=/J^
[A\A]A^A_]
fff.
AWAVL
AUATSL
[A\A]A^A_]
AWAVL
AUATSL
[A\A]A^A_]
AWAVL
AUATSL
AUATA
[A\A]A^A_]
AWAVL
AUATSL
AUATA
[A\A]A^A_]
AWAVL
AUATSL
[A\A]A^A_]
AWAVAUATSH
=	t\
=[i\
[A\A]A^A_]
5I7,
<$H9
AWAVAUATSH
AVAUM
[A\A]A^A_]
AVAUI
ATUI
|$PH
[]A\A]A^
ffff.
ATUH
D$(1
@0H9
S0H9
L$(dH3
0[]A\
S0H9
AWAVI
AUATH
\$ dH
D$X1
D$0H
D$@H
|$0H;|$
@I9^
T$8H
@0H9
D$XdH3
h[]A\A]A^A_
|$0H
D$(1
W(H)
L$(dH3
D$(1
D$(dH3
ATUSH
u9H)
[]A\
[]A\
D$(1
D$(dH3
CpH9
CPH9
C0H9
AUATUSH
[]A\A]
d$0H
AVAUH
ATUE1
]A\A]A^
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
C(H9
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVL
AUATI
[]A\A]A^A_
AWAVL
AUATSL
5[Z,
AWS1
XZL9
[A\A]A^A_]
AWAVL
AUATSL
5HW,
5%t,
AWS1
XZL9
[A\A]A^A_]
AWAVL
AUATSL
5/q,
5:q,
5lS,
AWE1
[A\A]A^A_]
AWAVL
AUATSL
5RO,
AWS1
XZL9
[A\A]A^A_]
AWAVL
AUATSL
5Zi,
5,K,
AWE1
[A\A]A^A_]
AWAVL
AUATSL
55G,
5ze,
AWS1
XZL9
[A\A]A^A_]
AWAVL
AUATSL
5Db,
AWE1
[A\A]A^A_]
AWAVL
AUATSL
5j\,
AWS1
XZL9
[A\A]A^A_]
AWAVL
AUATSL
5pZ,
5@[,
AWE1
[A\A]A^A_]
AWAVL
AUATSL
5h7,
5R7,
5$.-
AWE1
[A\A]A^A_]
AWAVL
AUATI
[]A\A]A^A_
AWAVL
AUATI
[]A\A]A^A_
AWAVAUATUSH
([]A\A]A^A_
AWAVL
AUATI
[]A\A]A^A_
AWAVL
AUATI
[]A\A]A^A_
tAATI
[]A\
tAATI
[]A\
AWAVL
AUATI
C8H9
[]A\A]A^A_
AWAVL
AUATI
C8H9
[]A\A]A^A_
AWAVL
AUATI
C8H9
[]A\A]A^A_
AWAVL
AUATI
C8H9
[]A\A]A^A_
AWAVL
AUATUSH
d$@L
D$pI
D$)H
L$(H
D$)H
|$pL
D$xM)
dH3<%(
[]A\A]A^A_
D$ L
D$(H
|$ H
|$ A
|$)E1
L$(H
|$ H
AUATI
[]A\A]
AUATUStUH
[]A\A]A^
AWAVAUATI
D$H1
D$HdH3
X[]A\A]A^A_
>H9|$
AWAVAUATI
uFL)
[]A\A]A^A_
[]A\A]A^A_
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
AWAVI
AUATI)
H+T$
([]A\A]A^A_
([]A\A]A^A_
w&H9
w!E1
([]A\A]A^A_
H9\$
AWAVAUATUSH
l$P@
d$0H
d$pH
|$pI
T$XH
|$PH
[]A\A]A^A_
@0H9
d$ H
l$@H
5!8,
5/&,
|$pI
|$PH
AWAVI
AUATI
o@dH
D$X1
D$0@
|$@L
D$,H
D$-H
|$0H
D$,:
D$.:
D$/:
T$8H
t$0H
|$0L9
D$XdH3
h[]A\A]A^A_
|$0H
ATUSH
D$81
o(H)
D$8dH3
@[]A\
AWAVA
AUATI
d$0H
l$pL
|$ H
D$0H
T$8L
|$0I
[]A\A]A^A_
D$PL
D$XH
|$PH
|$PA
L9L$
|$PH
|$0I
@0H9
C(H;C0s
C(H;C0r
ATUI
[]A\
5^=,
AWAVAUATI
D$x1
|$8L
5X+0
t$0H
l$PH
T$8H
T$XH
t$PH
|$PH
|$0I
5X;,
L$xdH3
[]A\A]A^A_
;H9|$
|$PH
|$0I
fff.
ATUH
[]A\
fff.
AWAVAUATUSH
T$(H
D$ H
H;|$
H;|$ t
|$P1
=b7,
t$pH
597,
D$(H
D$0H
[]A\A]A^A_
5Q2,
t$0H
l$`H
D$(H
D$0H
AWAVAUATUSH
D$(H
D$HH
D$0H
D$HH
D$PH
D$XH
D$ H
L$@H
D$HI
D$0H9
D$PH
D$0H
H;|$Xt
D$8H
H;|$
|$ H
|$8H
H;|$
T$(1
5g.,
t$0H
t$(H
l$pH
5Z-,
D$0H
D$@(H
D$@H9
[]A\A]A^A_
D$8H
T$ H
T$0H
D$HH
D$HH
D$HH
D$HH
|$8H
|$`L
t$`H
H;|$
|$`H
T$8H
|$`H
D$HH
ATUL
l$ dH
[]A\
fffff.
AWAV1
AUATI
L$ H
/M9o
L$pH
L$^H
D$(H
L$0H
L$_H
D$@H
L$8f
|$@I
T$8H
|$(H
D$^ 
H;|$@t
D$ I
[]A\A]A^A_
\$`H
5,$,
l$\L
t$]H
D$\ 
H;D$
T$(H
AWAVAUATUSH
L$@H
D$@H
D$ H
D$(H
D$>H
D$?H
D$> 
[]A\A]A^A_
D$@E1
D$@H
D$@H
|$(H
 tlAUATUSH
[]A\A]
fff.
AWAVI
AUATL
[]A\A]A^A_
AWAVI
AUATM
D$0H
D$0H
D$(H
\$(H
l$0H;l$8
\$PH
|$PH
|$PH
H;|$
xhH;xpI
|$hH
|$hH
H;|$ t
H9l$8
xPH;xXI
[]A\A]A^A_
t$0H
l$0H;l$8
\$PH
|$PH
|$PH
H;|$ t
H9l$8
5P[,
xPH;xXI
AWAVAUATL
tCf.
t$ H
[A\A]A^A_]
fffff.
AWAVAUATI
t$ L
t$ H
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AUATH
d$0H
D$h1
D$ I
D$HH
\$HI
t$@L
D$hdH3
x[]A\A]
t$@L
AUATH
l$0H
D$h1
D$ I
D$HH
t$@L
D$hdH3
x[]A\A]
t$@L
AWAVAUATSH
_@I;_Ht{I
(I9_Ht H
[A\A]A^A_]
AWAVAUATI
D$0I
|$ H
D$0H9
E0H9
D$0I
|$ H
D$0H9
[A\A]A^A_]
=!q\
fffff.
AWAVI
AUATH
D$`H
D$0H
D$8L
D$HH
\$HM
t$@H
[]A\A]A^A_
t$@H
AWAVAUATUSH
t$8H
t$81
D$(H
D$pH
D$HH
D$(H
t$PL
|$8H
l$0L
\$ H
l$@H
|$ H
\$PH
|$HH
t$8H
=Hf\
D$m 
D$@H
D$nH
=ze\
D$n 
='e\
|$@H
D$ H
[]A\A]A^A_
D$ H
D$ H
|$@H
D$HH
AWAVAUATUSH
D$PH
D$OH
L$pL
\$xI9
C(H9
d$xM
H;D$
[]A\A]A^A_
|$xH
AWAVAUATSH
T$ L
|$8H
t$PH
L$hH
[A\A]A^A_]
fffff.
AWAVAUATI
=$I\
=IH\
[A\A]A^A_]
=^y/
AWAVAUATSH
C(H9
[A\A]A^A_]
AWAVAUATUSH
D$h1
t$XH
t$ H
t$0H
t$@H
t$8H
t$HH
|$ H
|$ H
l$0M
t)H9
u	I9
t$I9
D$@H
|$HL9
T$(H
t$ L
_AXH
D$hdH3
x[]A\A]A^A_
D$8H
|$HH
AWAVAUATI
AYAZH
_AXt
=T*\
=>*\
[A\A]A^A_]
u^I9
tSH9
D8	u
C0H9
AVAUH
ATUE1
fffffff
[]A\A]A^
AUATH
\$ H
D$H1
|$ H
D$HdH3
X[]A\A]
|$ H
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATH
8USH
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
ATUSH
[]A\
tSATI
C0H9
[]A\
t/ATI
[]A\
tAATI
[]A\
AWAVL
AUATSH
[A\A]A^A_]
AWAVAUATL
5Aa+
AWE1
[A\A]A^A_]
AWAVAUATL
5Q^+
5;^+
AWE1
[A\A]A^A_]
AWAVAUATL
5{[+
AWE1
[A\A]A^A_]
AWAVAUATL
AWE1
[A\A]A^A_]
AWAVAUATL
5AV+
AWE1
[A\A]A^A_]
AWAVAUATL
5;S+
AWE1
[A\A]A^A_]
AWAVAUATL
5{P+
AWE1
[A\A]A^A_]
AWAVAUATL
5F|+
AWE1
[A\A]A^A_]
AWAVAUATL
5AK+
AWE1
[A\A]A^A_]
AWAVL
AUATSL
5^H+
5.H+
AWE1
[A\A]A^A_]
AWAVL
AUATSL
5+E+
AWE1
[A\A]A^A_]
AWAVL
AUATSL
5Au+
5uA+
5Q~/
AWE1
[A\A]A^A_]
AWAVL
AUATSL
5n>+
5>>+
5(>+
5y>+
AWE1
[A\A]A^A_]
AWAVL
AUATSL
5^;+
AWE1
[A\A]A^A_]
AWAVAUATL
5q8+
5fh+
5A8+
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
5!6+
56f+
AWS1
XZL9
[A\A]A^A_]
t8ATI
[]A\
AWAVL
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVH
AUATI
t8I9]
[]A\A]A^A_
H9\$
]A\A]A^A_
AWAVL
AUATI
[]A\A]A^A_
AWAVH
AUATI
t8I9^
[]A\A]A^A_
H9\$
]A\A]A^A_
AWAVI
AUATL
[]A\A]A^A_
AWAVH
AUATI
[]A\A]A^A_
H;\$
t$ H
]A\A]A^A_
} I9
tMATI
[]A\
AWAVL
AUATI
[]A\A]A^A_
AWAVL
AUATI
[]A\A]A^A_
AWAVL
AUATI
[]A\A]A^A_
t/ATI
[]A\
AWAVL
AUATI
[]A\A]A^A_
AWAVI
AUATUSH
D$H1
t$0H
T$@H
D$8H
L$0H
L$ H
D$(t
|$(I
T$ I
D$@H
|$8A
D$HdH3
X[]A\A]A^A_
D$@H
AVAUATUSH
D$H1
l$(L
#s(H
L$ 	
D$(t
L$0H
D$8H
D$0H
D$8H
t$0H
L$0H
D$8t
|$8H
T$0H
|$HdH3<%(
P[]A\A]A^
t$0H
ATUSH
D$(1
D$(dH3
0[]A\
AVAUE1
ATUI
[]A\A]A^
AUATI
[]A\A]
AWAVAUATL
n USH
|$(I
|$(I
D$(M
l$`H
\$HH
D$0H
D$8I
D$8I
D$(H
8[]A\A]A^A_
t$(H
|$(H
AWAVAUATUSH
t$ I
D$ H
L;<$L
[]A\A]A^A_
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
AWAVL
AUATI
t$0H
t$HH
t$`H
E8u/H
[]A\A]A^A_
AWAVI
AUATI
D$(1
D$(dH3
8[]A\A]A^A_
AWAVAUATUSH
D$H1
D$ L
|$8H
D$(H
|$(H
D$ H
|$(L9
D$HdH3
X[]A\A]A^A_
|$(H
AUATI
[]A\A]
AWAVAUATUSH
D$X1
|$0I
5g5+
D$0H
t$8H
|$8H;|$
L$XdH3
h[]A\A]A^A_
d$ H
5`1+
|$8I
AUATI
[]A\A]
AWAVAUATI
[]A\A]A^A_
,?L9
AWAVH
AUATI
4$dH
H;\$
t$ H
[]A\A]A^A_
L9,$
t$ H
AWAVH
AUATI
L$(H
L$X1
T$ L
L;|$
L$(L
d$0L
D$0I
L;|$
D$0I
|$8I
D$XdH3
h[]A\A]A^A_
L9l$
|$8I
AWAVI
AUATL
XZL9
[A\A]A^A_]
AVAUATSI
XZH9
[A\A]A^]
ATUI
[]A\
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
[]A\A]
AWAVI
AUATUSH
D$81
D$8dH3
H[]A\A]A^A_
fffffff
fffffff
t5M9
H;|$
AWAVA
AUATI
\$ dH
D$x1
l$PH
D$PH
|$XH
|$(H
L$xdH3
[]A\A]A^A_
|$XH
|$(H
D$(1
D$(dH3
fffff.
fffff.
AUATI
D$81
D$8dH3
H[]A\A]
AUATI
D$81
D$8dH3
H[]A\A]
ATUH
D$81
D$8dH3
@[]A\
fff.
AUATI
D$81
D$8dH3
H[]A\A]
AVAUI
ATUH
D$81
D$8dH3
@[]A\A]A^
AUATI
D$81
D$8dH3
H[]A\A]
ATUI
[]A\
AWAVAUATSH
ChH9
[A\A]A^A_]
ChH9
AWAV1
AUATI
D$ H
L$pL
|$XH
\$`H
D$PL
D$xH
t$PH
D$HH
ChH9
D$pH
L$HH
t$HL
[]A\A]A^A_
\$@H
L+ I
t$PH
l$0H
ChH9
fffff.
AWAVAUATSH
ChH9
[A\A]A^A_]
ChH9
AWAVI
AUATI
l$`dH
|$ H
t$0M
|$@L
|$PM
[]A\A]A^A_
AWAVAUL
ATSL
[A\A]A^A_]
|$(I
AWAVAUATUSH
,$I9
([]A\A]A^A_
AWAVAUATUSH
D$(1
\$ H
D$(dH3
8[]A\A]A^A_
ATUH
tq[]A\
[]A\
[]A\
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
ATUI
=)H*
[]A\
AVAUI
ATUI
\$`H
l$@dH
52y[
d$0M
[]A\A]A^
fffff.
AWAVAUATSH
5:}[
C(H9
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATI
[A\A]A^A_]
=%{Z
|$(I
AWAVL
AUATSL
[A\A]A^A_]
=-vZ
fffff.
AWAVL
AUATSL
[A\A]A^A_]
fffff.
AWAVAUL
ATSL
[A\A]A^A_]
=smZ
AWAVAUL
ATSL
[A\A]A^A_]
=5iZ
AWAVL
AUATSL
C`H9
[A\A]A^A_]
|$8H
AWAVAUATL
=jC[
[A\A]A^A_]
=ZXZ
=mWZ
ffffff.
AWAVAUATL
5x;[
[A\A]A^A_]
=?OZ
=CNZ
=HMZ
=>LZ
AWAVAUATUSH
,$I9
([]A\A]A^A_
=`IZ
AWAVAUATUSH
D$(1
\$ H
D$(dH3
8[]A\A]A^A_
AWAVAUATL
5a+[
[A\A]A^A_]
55)[
=D?Z
AWAVAUATI
|$@H
D$`H9
|$@H
|$pH
[A\A]A^A_]
=Q0Z
t$PL
|$pH
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
5m{*
5Px*
[A\A]A^A_]
AWAVAUATL
5Gu*
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
5c1+
[A\A]A^A_]
AWAVAUATL
5"x*
[A\A]A^A_]
AWAVAUATL
55p*
[A\A]A^A_]
AWAVAUATL
5cm*
5(r*
[A\A]A^A_]
AWAVAUATL
5	k*
[A\A]A^A_]
AWAVAUATL
5mh*
5(l*
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATSH
[A\A]A^A_]
AWAVAUATSH
5z_*
5!{*
5Xb*
[A\A]A^A_]
AWAVAUATL
5]\*
5p_*
[A\A]A^A_]
ATUI
[]A\
AWAVAUATUSH
t$ H
|$XdH
D$ H
t$PH
t$(H
t$0H
t$8f
L9d$
D$(H
D$ H
d$pH
|$0H
t$(H
t$0H
t$8H
D$ H
H9hP
L$HH
l$`H
5mo*
H;l$
D$HH
L$HL
D$0H
D$0H
|$@H
D$PH
D$XH
[]A\A]A^A_
D$0H
|$@H
|$PH
|$0H
|$0H
|$0H
AVAUI
StbA
[]A\A]A^
AWAVAUATI
5Vj*
5Y0*
I;T$
C`H9
[A\A]A^A_]
AWAVAUATI
5ub*
XZH9
[A\A]A^A_]
5-:.
5BK*
5SK*
fff.
AWAVAUATUSH
D$xH
d$`H
5SI*
D$/H
H;|$
[]A\A]A^A_
d$@H
58"*
d$PH
l$0H
5>!Z
AWAVAUATL
[A\A]A^A_]
59D*
ATAV
AWAVAUATI
=WP*
=h`*
=1Q*
5iO*
[A\A]A^A_]
AWAVAUATUSH
|$HH
t$ H
D$8H
D$(I
D$0f
H;D$
|$(L
D$pH
t$(I
t$0I
l$8L
\$`H
H;D$
D$8H
D$8H
\$8H
|$HH
D$HH
[]A\A]A^A_
\$HL
|$@H
|$8H
|$HH
|$(H
|$(H
|$HH
l$PH
D$8H
ffff.
AWAVI
AUATM
[]A\A]A^A_
D$8H
\$PH
t$0L
5$)*
5 5*
t$0L
fff.
AWAVAUATI
5<2*
57.*
[A\A]A^A_]
AWAVAUATI
5U**
5~v,
_AXH
[A\A]A^A_]
5e	*
fffff.
AWAVAUATI
AYAZH
_AXI
[A\A]A^A_]
=e}Y
=V|Y
AWAVAUATI
AYAZL
5F}-
[A\A]A^A_]
=%cY
=S`Y
AWAVAUATSH
WAUH
[A\A]A^A_]
=UTY
=USY
5:h)
=_h)
AWAVAUATI
[A\A]A^A_]
=BKY
=~JY
=9JY
=aEY
=KCY
A[XH
AYAZL
=-=Y
=w<Y
=l;Y
=e9Y
=u8Y
=-8Y
=W7Y
=g6Y
5RsY
AWAVAUATUSH
H;\$ H
l$0H
l$pH
\$PL
d$XH
l$PI9
d$PM
|$pI
[]A\A]A^A_
l$0L
|$PH
|$pI
AWAVAUATL
[A\A]A^A_]
=q-Y
=6-Y
AXAYL
xXHc
x[Hc
AWAVL
AUATSI
C`H9
[A\A]A^A_]
fff.
AWAVAUATL
[A\A]A^A_]
fff.
AWAVL
AUATSL
[A\A]A^A_]
5{WY
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
ATUSH
[]A\
C0H9
ATUSH
C(H9
[]A\
ATUSH
C(H9
[]A\
AVAUATUSL
C(H9
ChH9
]A\A]A^
[]A\A]A^
ATUSH
CXH9
C(H9
[]A\
AVAUATUSL
CpH9
]A\A]A^
[]A\A]A^
AVAUATUSL
ChH9
C(H9
t7[L
]A\A]A^
[]A\A]A^
AVAUATUSL
t?[L
]A\A]A^
[]A\A]A^
AVAUATUSL
]A\A]A^
[]A\A]A^
AWAVH
AUATH
L$ H
L$81
D$,H
\$0H
L$,L
D$ H
H9\$
L$8dH3
H[]A\A]A^A_
ATUH
[]A\
[]A\
ATUSH
[]A\A]A^
ATUSH
[]A\A]A^
ATUSH
[]A\A]A^
AVAUATI
l$XI
\$PH9
CXH9
C(H9
l$PH
l$@I
\$8I9
C(H9
ChH9
l$8M
l$(I
\$ H9
C(H9
l$ H
C(H9
t#[H
]A\A]A^
[]A\A]A^
|$8H
AWAVH
AUATUSH
L;$$tQI
u/H)
[]A\A]A^A_
[]A\A]A^A_
AWAVL
AUATSL
AWE1
[A\A]A^A_]
AWAVL
AUATSL
5Xg)
AWS1
XZL9
[A\A]A^A_]
AWAVL
AUATSL
5/Q)
AWE1
[A\A]A^A_]
AWAVL
AUATSL
5=M)
AWE1
[A\A]A^A_]
AWAVL
AUATSL
5/\)
AWE1
[A\A]A^A_]
AWAVAUATL
5yF)
AWE1
[A\A]A^A_]
AWAVL
AUATSL
5~U)
AWE1
[A\A]A^A_]
AWAVAUATL
5&B)
5LR)
5!R)
AWE1
[A\A]A^A_]
AWAVL
AUATSL
5[O)
AWS1
XZL9
[A\A]A^A_]
AWAVL
AUATSL
5)M)
[A\A]A^A_]
AWAVAUATL
5	;)
55I)
AWS1
XZL9
[A\A]A^A_]
AWAVL
AUATSL
5jF)
AWE1
[A\A]A^A_]
AWAVAUATL
5~7)
5)C)
AWE1
[A\A]A^A_]
AWAVAUATL
5w@)
AWE1
[A\A]A^A_]
ATUSH
[]A\A]A^
AWAVH
AUATI
t>I9]
[]A\A]A^A_
H9\$
]A\A]A^A_
AUATI
[]A\A]
AWAVI
AUATI
[]A\A]A^A_
AVAUM
ATUI
l$@H
[]A\A]A^
AWAVAUATI
[]A\A]A^A_
AWAVI
AUAT
[]A\A]A^A_
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
ATUI
=If(
[]A\
5D<)
fff.
AWAVAUATI
l$ dH
\$@H
l$p1
|$HH
[]A\A]A^A_
t$@L
t$HI
D$pH
T$xH
t$pH
|$pI
|$pI
|$HH
ATSH
[A\]
AVATSH
[A\A^]
AVAUATSI
[A\A]A^]
AWAVAUATI
[A\A]A^A_]
AWAVAUATI
[A\A]A^A_]
5r0)
fff.
ATUSH
\$ L
d$PH
D$PI
|$XI
|$(H
[]A\
|$XI
|$(H
ATUSH
\$ L
d$PH
D$PI
|$XI
|$(H
[]A\
=k[Z
5e')
5u+)
|$XI
|$(H
AVAUI
ATUI
\$ H
[]A\A]A^
AVAUATUSH
\$pH
l$0I
|$pH
d$PH
l$ H
|$PI
[]A\A]A^
|$pH
|$PI
AWAV1
AUATUSH
l$`H
\$ dH
5s")
t$@H
\$ L
l$HH
D$(H+D$ H
[]A\A]A^A_
fffff.
AVAU1
ATUI
l$0H
[]A\A]A^
AWAV1
AUATUSH
D$@L
D$HH
D$XH
D$`H
D$ H
T$ H
l$pH
L$(H
l$ H
l$pI
H9l$(
H9l$(
d$(H
l$ I9
d$ M
t$PH
[]A\A]A^A_
t$PH
|$ H
AWAVAUATI
=mLZ
v(M9
-LrY
5V*)
[A\A]A^A_]
5B')
fff.
AWAVAUATI
[A\A]A^A_]
50!)
-agY
AVAU1
ATUH
l$PH
l$ L
D$8H
t$0H
[]A\A]A^
l$ H
t$0I
AWAV1
AUATUSH
D$0L
D$8H
D$HH
|$`H
D$XH
l$HL
\$ H
t$@H
[]A\A]A^A_
t$@H
|$`H
AWAVAUATI
5rU+
=_CY
5gR)
=yAY
[A\A]A^A_]
tAf.
=E@Y
=*qX
=UpX
=&pX
=VoX
AWAV1
AUATUSH
D$@L
D$HH
D$XH
D$`H
D$ H
T$ H
d$pH
L$(H
l$ H
d$pL
D$@H
\$xH
H9l$(
H9l$(
d$(H
l$ I9
d$ M
t$PH
[]A\A]A^A_
t$PH
|$ H
AWAVAUATUSH
L$pH
L$8H
D$(H
D$pH
D$8H
\$@H
\$pH;\$xH
(H9\$x
5'V(
H;|$
H;|$
|$@1
t$(L
t$(H
t$`H
t$ H
D$ H
d$PH
t$0H
l$xH
\$pH9
l$pH
[]A\A]A^A_
|$0H
T$ H
ATUH
tq[]A\
[]A\
[]A\
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVL
AUATSH
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
5V{(
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVL
AUATSH
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
AWAVL
AUATI
[]A\A]A^A_
AWAVH
AUATH
[]A\A]A^A_
H9\$
uIL)
[]A\A]A^A_
AWAVL
AUATI
[]A\A]A^A_
AWAVL
AUATI
[]A\A]A^A_
ATUI
[]A\
AWAVAUATUSH
D$x1
l$0H
D$(H
D$PH
5nT(
D$xdH3
[]A\A]A^A_
|$ L
T$XH
t$PH
D$ H
|$PH
T$ H
|$PH
fff.
[]A\A]A^
AVAUI
ATUH
D$hH
D$pI
D$hH
[]A\A]A^
t$01
l$8H
\$0H9
l$0H
\$0H;\$8L
 H9\$8u
t$8H
l$0H
t$0M
AWAVAUATI
AUAV
[A\A]A^A_]
fff.
AWAVAUATI
t$ L
[A\A]A^A_]
AWAVAUATL
[A\A]A^A_]
5=r(
_AXH
55n(
5km(
AWAVAUL
ATSL
[A\A]A^A_]
AWAVAUATSH
[A\A]A^A_]
55g(
AWAVAUATI
=;d(
=Zb(
_AXH
|$ H
[A\A]A^A_]
|$ L
|$ L
|$ H
5-K(
|$ H
5jD(
5A?(
ATAV
A[XH
AYAZH
5[2(
fffff.
ATUM
 []A\
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
ATUSH
[]A\
C@H9
C@H9
AUATUSH
[]A\A]
{0L9
ATUH
[]A\
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
[]A\
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATH
8USH
[]A\A]A^A_
[]A\A]A^A_
tJATI
C8H9
[]A\
AWAVAUATI
D$(1
T$(dH3
8[]A\A]A^A_
G@umH
5Lv)
AWAVH
AUATUSH
L;$$tQI
u/H)
[]A\A]A^A_
[]A\A]A^A_
[]A\
AWAVL
AUATI
{0I9
uRL9
uME1
|$(H
D$ I
D$8I
D$(H
[]A\A]A^A_
|$(H9|$
AWAVL
AUATSL
AWE1
[A\A]A^A_]
AWAVL
AUATSL
AWS1
XZL9
[A\A]A^A_]
AWAVL
AUATSL
[A\A]A^A_]
AWAVL
AUATSL
AWS1
XZL9
[A\A]A^A_]
AWAVH
AUATUSH
L;$$tQI
u/H)
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATI
h8L9
{8L9
t`H;X
[]A\A]A^A_
dH3<%(
AWAVI
AUATI
t`H;X
[]A\A]A^A_
dH34%(
1H92u
ATUH
[]A\
[]A\
AWAVAUATI
uFL)
[]A\A]A^A_
[]A\A]A^A_
AWAVH
AUATI
T$(1
t$ H
D$(dH3
8[]A\A]A^A_
} H)
L;t$
\$ H
=aLW
5Sv'
uAM)
AWAVAUATI
D$(1
D$ H
D$ I
D$(dH3
8[]A\A]A^A_
AWAVAUATUSH
t$PH
[]A\A]A^A_
l$PL
D$pH
T$hH
D$xH
D$pH
T$hH
D$xH
l$PH
=,DW
d$PH
d$PH
l$PH
5GG)
l$PH
=VBW
l$PH
AWAVH
AUATI
t$(H
T$0dH
L$8L
H;l$
D$ M9
t$ L
D$ M9
\$@H
=!?W
\$PH
t$8H
T$(E
[]A\A]A^A_
t$ H
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
tDAUATL
[]A\A]
AWAVI
AUATI
H;\$
[]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
AUATUStUH
[]A\A]A^
AWAVAUATI
D$81
D$8dH3
H[]A\A]A^A_
$?L9
t#L9
ATUI
L$(L
D$0H
|$PH
D$pH
C`H9
[]A\
ATUI
D$X1
\$0H
|$0H
5.F+
D$XdH3
`[]A\
|$0H
AUATI
D$(1
D$(dH3
8[]A\A]
ATUI
[]A\
fff.
fff.
ATUI
[]A\
[]A\A]A^
[]A\A]A^
AWAVAUATSH
[A\A]A^A_]
5|y+
D$H1
wgu/H
l$ H
|$(H
D$HdH3
|$(H
AWAVH
AUATUSH
|$PH
L$HH9
D$@H
D$`H
D$8H
D$XH
D$ H
D$(H
\$@H
D$0L
D$8H
t$PH
|$XH
D$`H
|$hH
|$ H
$H9D$h
\$`H9
H9\$(A
u!M)
t$ H
L$(A
|$`H
L$HH
D$0H9
[]A\A]A^A_
|$`H
|$ H
|$@H
5Z%)
=B W
54J'
AWAVAUATUSH
t$8H
T$PH
L$@L
D$`H
D$(H
D$(H
|$0H
t$pH
t$xH
L$`H
D$(H
t$hH
E`H9
|$PE1
D$@L
X(I9
5Q.+
E`H9
D$@H
L$HI
L$ I
L$0H
D$PH
T$PH
t$XH
t$PL
T$@L
t$@L
D$@H
D$PH
D$XH
|$@L
D$ H
|$8L
5Du'
|$XA
D$ L
D$HH
T$(H
t$hH
5kr'
D$pL
5{q'
D$xL
|$`L
D$`H
D$hL
D$(H
t$(L
|$8H
D$XH
|$@H
|$0H
|$hH
|$xH
|$pH
|$ H
|$HH
[]A\A]A^A_
t$(H
5p!+
5] +
D$HH
|$8L
=V	W
|$@H
|$0H
|$hH
|$xH
|$pH
|$ H
|$HH
D$XH
D$PH
D$XH
t$@H
D$XH
AWAVAUATSH
5O=W
[A\A]A^A_]
E@H9
E@H9
AWAVAUATSH
C(H9
[A\A]A^A_]
5AR'
5z<'
51;'
5Lh'
fff.
AWAVAUATI
|$ L
t$PM
D$hH
\$0H
H;|$
\$@H
\$hI
t$`L
[]A\A]A^A_
t$`L
AWAVAUATI
[A\A]A^A_]
5S#W
AWAVAUATL
 H9A
[A\A]A^A_]
fff.
AWAVAUATUSH
\$`H
D$hH
d$0H
d$@H
d$PH
[]A\A]A^A_
\$ H
5DB'
fffff.
AWAVAUATL
[A\A]A^A_]
AWAVAUATUSH
l$ H
|$0L
D$@L
t$pH
L$PH
[]A\A]A^A_
AWAVAUATI
[A\A]A^A_]
5!-'
5a}'
AWAVAUATSH
[A\A]A^A_]
5>x'
AWAVAUATI
AXAYL
=+iW
X(I9
t$ L
=chW
=>hW
[A\A]A^A_]
=5U'
=rr'
=]dW
5mj'
5 t'
fff.
AWAVAUATI
[A\A]A^A_]
AWAVI
AUATUSH
|$`L
D$ H
d$(H
l$ H
fffffff
d$(H
l$ I
l$@H
\$PL
l$HL
\$HH
\$@L
[]A\A]A^A_
|$@H
AWAVAUATL
[A\A]A^A_]
fff.
AVAUI
ATUSH
l$@L
d$ L
[]A\A]A^
AWAVAUATI
_AXH
-ihW
5FY'
5yT'
5H\'
=bzV
[A\A]A^A_]
5^J'
=-tV
=9sV
D$ H
t$(H
t$HL
l$`H
=YrV
=IrV
5~H'
=BpV
5}Q'
5pP'
=#oV
D$ H
t$(H
t$HH
=emV
=QmV
5@B'
==lV
5KM'
5{L'
=2kV
5XA'
=djV
5Z?'
5e?'
=BdV
fff.
AWAVAUATI
5SaV
5!8'
5	8'
[A\A]A^A_]
5Z1'
=FWV
fff.
AWAVI
AUATI
l$@H
d$ H
[]A\A]A^A_
AWAVAUATSH
PAVH
c tMH
5|2'
=mJV
=&JV
=oHV
5T*'
=IHV
[A\A]A^A_]
=WGV
5b)'
%"FV
5P('
5(''
=nCV
%Y@V
5k"'
fffff.
AVAUATUI
[]A\A]A^
ffffff.
AWAVAUATI
5dP&
D$(L
[A\A]A^A_]
=:7V
=,5V
5p9(
v=US
=w2V
fffff.
AWAVAUATI
D$(L
[A\A]A^A_]
=M,V
5d{*
5,{*
5bgV
fffff.
fffff.
AWAVAUATI
5F$V
[A\A]A^A_]
=?1&
fffff.
fffff.
fffff.
u<H)
ATUH
\$ dH
D$H1
|$ H
L$HdH3
P[]A\
D$ H
|$ H
AUATI
D$H1
D$ L
4$H9
D$ B
d$ H
|$ I
\$HdH3
X[]A\A]
I;D$
5Q%&
|$ I
AVAUATUSL
]A\A]A^
[]A\A]A^
AWAVH
AUATUSH
L;$$tYI
D$(H
u/H)
[]A\A]A^A_
[]A\A]A^A_
AWAVL
AUATSL
AWE1
[A\A]A^A_]
AWAVAUATL
AWE1
[A\A]A^A_]
AWAVL
AUATSL
AWE1
[A\A]A^A_]
AWAVAUATL
AWE1
[A\A]A^A_]
AWAVL
AUATSL
AWE1
[A\A]A^A_]
AWAVL
AUATSL
AWE1
[A\A]A^A_]
AWAVAUATL
AWE1
[A\A]A^A_]
AWAVL
AUATSL
AWE1
[A\A]A^A_]
AWAVL
AUATSL
AWE1
[A\A]A^A_]
AWAVL
AUATSL
AWE1
[A\A]A^A_]
AWAVL
AUATSL
AWS1
XZL9
[A\A]A^A_]
AWAVL
AUATSH
[A\A]A^A_]
AWAVAUATL
AWE1
[A\A]A^A_]
AWAVAUATL
AWE1
[A\A]A^A_]
AWAVAUATL
AWE1
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVL
AUATSL
AWE1
[A\A]A^A_]
AWAVAUATL
AWE1
[A\A]A^A_]
AWAVL
AUATSL
AWE1
[A\A]A^A_]
AWAVAUATL
AWE1
[A\A]A^A_]
AWAVAUATL
AWE1
[A\A]A^A_]
AWAVL
AUATSH
[A\A]A^A_]
AWAVAUATL
AWE1
[A\A]A^A_]
AWAVAUATL
AWE1
[A\A]A^A_]
AWAVAUATL
AWE1
[A\A]A^A_]
AWAVL
AUATSL
AWE1
[A\A]A^A_]
AWAVL
AUATSL
AWE1
[A\A]A^A_]
AWAVL
AUATSL
5V|&
AWE1
[A\A]A^A_]
AWAVH
AUATH
$H9X
[]A\A]A^A_
H9\$
[]A\A]A^A_
AWAVH
AUATUSH
L;$$tYI
D$(H
u/H)
[]A\A]A^A_
[]A\A]A^A_
ATUSH
[]A\A]A^
AWAVH
AUATH
[]A\A]A^A_
H9\$
uIL)
[]A\A]A^A_
AVUSH
K0L9
[]A^
AWAVH
AUATUSH
[]A\A]A^A_
AWAVAUATUSH
C(ttL
[]A\A]A^A_
[]A\A]A^A_
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
AWAVI
AUATUSH
D$(L
L$ L;|$
t|H;\$
L;|$
D$(H
T$ H
8[]A\A]A^A_
t$ H
|$(I
AWAVL
AUATM
H;\$
H;l$
D$(I
L$ M9
L$ L
D$(u
H;\$
H;l$
H;D$
[]A\A]A^A_
H;D$
AWAVAUATUSH
uEL)
[]A\A]A^A_
([]A\A]A^A_
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
AWAVH
AUATUSH
|$x1
H9l$
\$@H
d$ H
D$ L
d$ H
t$xdH34%(
[]A\A]A^A_
AUATI
[]A\A]
AWAVAUATI
D$(1
D$(dH3
8[]A\A]A^A_
,?L9
t$M9
ATUI
[]A\
AVAUATUI
D$81
I9\$
D$8dH3
@[]A\A]A^
AWAVAUATI
|$@H
d$`L
l$0H
t$ H
t$xI
[]A\A]A^A_
|$8H
t$xI
AWAVAUATI
u	I9
toH9
AXAY
FHH9
5bw&
tRH9
FHH9
thH9
FHH9
5.n&
[A\A]A^A_]
%%|U
5mk&
5-j&
=!zU
5ki&
=_yU
5Lj&
FHH9
FHH9
FHH9
FHH9
FHH9
5.b&
FHH9
AWAVAUATL
5n_&
[A\A]A^A_]
AWAVAUATL
5-[&
5u\&
[A\A]A^A_]
AWAVAUATSH
5XW&
[A\A]A^A_]
AWAVL
AUATI
[]A\A]A^A_
AWAVAUATUSH
CPH9
mPH9
E@H9
m8H9
[]A\A]A^A_
]PI9
C@H9
]8I9
AVAUI
H9k(tBH9kHtdH9kht~H
[]A\A]A^
C []A\A]A^
 H9k
5S	W
=w^U
fffff.
ATUI
[]A\
AWAVI
AUATI
D$X1
D$0L
|$@H
D$/L
D$.H
|$0H
D$/:
D$-:
D$,:
T$8H
t$0H
|$0L9
D$XdH3
h[]A\A]A^A_
|$0H
fff.
fff.
AVAUH
ATUSH
l$PH
T$PH
T$XH
t$PH
5}K&
|$PH
[]A\A]A^
d$ H
5lN&
\$pH
5GN&
|$pH
\$@H
=%WU
|$PH
d$0H
d$@H
|$pH
AWAVAUATA
AUAQD
[A\A]A^A_]
AUATI
[]A\A]
ATUH
\$ H
D$H1
5wI&
|$ H
D$HdH3
P[]A\
|$ H
AWAV1
AUATI
\$@dH
D$@t
l$`H
|$@H
5ID&
l$ H
|$HL
t$ L
|$ I
|$@H
|$hH
[]A\A]A^A_
|$hH
|$@H
T$HH
t$@L
|$@H
|$@H
|$ I
|$@H
fffff.
ATUH
\$ H
D$H1
5HE&
|$ H
D$HdH3
P[]A\
|$ H
AWAVAUATUSH
-;LU
l$PM
5[A&
D$ L
t$(L
D$ H
D$ H
\$ H
[]A\A]A^A_
5p9&
\$0H
=JEU
5B;&
\$@H
5y7&
d$pH
=uDU
5~:&
l$`H
56:&
D$ H
D$ H
t$ I
L$ H
D$ H
D$ H
|$ H
AWAVI
AUATUSH
l$ H
D$ I
\$ H
l$PH
D$Pt
t$(H
D$pH
t$PH
t$pH
|$pH
E0H9
|$PH
|$(I
[]A\A]A^A_
|$PH
|$(I
AWAVAUATSH
=A0U
[A\A]A^A_]
=n#&
ATUSH
C0H9
[]A\
AWAVL
AUATSH
5^ &
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
XZL9
[A\A]A^A_]
AWAVAUATL
5cq)
AWS1
XZL9
[A\A]A^A_]
AWAVI
AUATUSH
l$@H
d$ L
d$ L
t$`H
\$`H
\$PH
\$0H
[]A\A]A^A_
AUATH
D$x1
l$ L
D$(H
d$@H
l$`L
\$pH
\$PH
\$0H
D$xdH3
[]A\A]
\$`H
5cX%
AWAVI
AUATH
D$(1
\$ H
D$(dH3
8[]A\A]A^A_
fffff.
AVATSH
[A\A^]
5(e)
AVAUATSI
[A\A]A^]
AWAVAUATI
[A\A]A^A_]
AWAVAUATSH
[A\A]A^A_]
AWAVAUATI
|$pL
D$PH
D$PH
t$XM
|$PH
5@EU
T$XH
D$`H
T$ht
d$hM
d$XM
[]A\A]A^A_
d$@H
5[X%
5YB%
d$0H
d$ H
|$hI
AWAVAUATSH
[A\A]A^A_]
5Q:%
5|=)
fff.
AWAVAUATI
[A\A]A^A_]
5|7)
5j`%
AWAVAUATSH
[A\A]A^A_]
5A-%
5l0)
5zM%
5JY%
AWAVAUATI
[A\A]A^A_]
5[5%
ATUA
D$(1
L$(dH3
0[]A\
AWAVAUATL
Loads a H
@(eL
file's cH
ontents H
into theH
 databasH
floaA
SATH
[A\A]A^A_]
AWAVAUATL
Merges 3H
@ esul
@$tH
 files aH
nd outpuH
ts the rH
ILEID LE
@ FILEL
PARENT_FH
FT_FILEIH
D RIGHT_H
fmerfA
[A\A]A^A_]
AWAVAUATL
DifferenH
ces 2 fiH
the resuH
les and H
outputs 
SRCNAME H
ESTI
DESTNAMEH
 SRCID DH
fdifA
[A\A]A^A_]
AWAVAUATSH
CalculatH
he speci
@PISIOH
es and pH
rints anH
of the gH
 annotatH
ed copy H
e from tH
iven filH
fied REVH
n annotaL
Prints aH
ted copyH
 of a fiH
annotateAWj
PATHH
[A\A]A^A_]
AWAVAUATL
If any PH
 otherwiH
 the staH
ATH is gH
iven, caH
 their iH
lculatesH
dentity;H
se, the H
one fromH
alculateH
ndard inH
put is c
es the iL
CalculatH
dentity H
of a filH
e or stdH
identifyf
[PATH
[A\A]A^A_]
AWAVAUATL
Prints tH
@ fileL
he file H
er of a H
identifiH
identifyH
PATHH
XZL9
5*3U
[A\A]A^A_]
AWAVAUATL
Fetches H
e and pr
@Poutp
@V.H
tandard H
the giveH
n file FH
from theH
ILENAME H
 databasH
ints it H
to the s
 file fr
atab
Prints aH
om the dH
FILENAMEH
[A\A]A^A_]
AWAVAUATL
Prints tH
identifi
@2)L
he conteH
nts of aH
 file (gH
iven an H
get_file
FILEfA
XZL9
[A\A]A^A_]
AWAVAUATL
Prints tH
@(tifi
@.)L
he size H
of a filH
e (givenH
 an idenH
FILEfA
get_fileH
_sizA
XZL9
[A\A]A^A_]
AWAVAUATL
Prints tH
@(ame)L
FILENAMEI
he conteH
nts of aH
 file (gH
iven a nH
get_fileH
XZL9
[A\A]A^A_]
D$(1
D$(dH3
ATUI
=iY$
[]A\
AVAUI
ATUSH
D$81
D$8dH3
@[]A\A]A^
5T~%
AVAUATUSH
[]A\A]A^
D$PH
D$XH
D$`t
d$PI
|$ H
D$hI
D$0H
l$0L
T$8H
t$0H
|$0I
|$pI
\$`H
|$0I
fffff.
AWAVAUL
ATSI
5#u(
[A\A]A^A_]
5u}$
5=i(
=5~T
5L{%
=R|T
=UzT
5Nx%
=syT
5lv%
=rwT
5mu%
=3wT
=AvT
=auT
5(s%
5ws%
5Uv%
=jpT
=hoT
=9oT
={nT
5DQ%
=amT
5(l%
5]k%
=#mT
AWAVAUL
ATSI
5"W$
=hOU
[A\A]A^A_]
5'd%
5jk%
=seT
5rj%
=#eT
AWAVAUL
ATSI
5ZM$
[A\A]A^A_]
5WZ%
=S[T
AWAVAUATA
H;^@H
=WXT
xH9X@
5Wn$
=|n$
@pH9
5nW%
=yVT
=|UT
xKHc
ATAUH
=ART
5SQ%
5 Q%
5xX%
[A\A]A^A_]
=CPT
D$0H
5NO%
D$0H
=}NT
5}M%
=ENT
="NT
5JM%
=jMT
5mL%
=iLT
5{K%
=CLT
=YKT
5kJ%
=3KT
=uJT
=OJT
=,JT
5tI%
=\IT
=<IT
5,I%
=EHT
5bH%
51H%
54O%
=HGT
="GT
=sFT
=PFT
=*FT
5:F%
=yET
=VET
=,ET
5bD%
5MD%
=iCT
=CCT
= CT
5MK%
=_BT
=<BT
5gB%
AUAT1
[]A\A]
AUAT1
[]A\A]
5$7%
ATUH
[]A\
[]A\
AWAVL
AUATSH
[A\A]A^A_]
AWAVAUATL
5	/%
[A\A]A^A_]
AWAVAUATL
5E1%
[A\A]A^A_]
AWAVAUATL
5H)%
[A\A]A^A_]
AWAVAUATL
5<&%
[A\A]A^A_]
AWAVAUATL
5%)%
5,#%
[A\A]A^A_]
AWAVAUATL
5]&%
[A\A]A^A_]
AWAVAUATI
[A\A]A^A_]
CpH9
ChH9
AWAVE1
AUATI
tIf.
mI+] E1
|$ M
|$(I
\$0M
m I9
\$(I
I+]8I
"""""""
D$8I
D$@I
\$HM
m8I9
\$@I
NI+]PI
vb'vb'v
D$PI
D$XI
\$`M
mPI9
\$XI
I+]hE1
UUUUUUU
|$hM
|$pI
\$xM
mhI9
\$pI
[]A\A]A^A_
|$hH
G(H9
H9\$
|$8H
H;\$
H9\$
G(H9
|$PH
|$ H
ATUI
[]A\
tjAVAUI
ATUI
k(H9
[]A\A]A^
ffffff.
AWAVI
AUATI
!tDI
H;T$
H;L$
H9|$
[]A\A]A^A_
H9D$
AVAUI
ATUSH
mXL9*
t$ H
\$PH
l$0H
d$pH
|$pI
|$0H
|$PH
[]A\A]A^
\$ H
\$ H
\$ H
|$PH
|$0H
|$pI
fff.
AWAVAUATUSH
GpH9GhH
D$`L
l$@H
OhE1
D$pM
L$ H
5GU$
|$@L
{pH;{x
t$`H
|$`H;|$
|$@L9
D$=,
D$>,
D$`t+H
8 u#H
T$hH
t$`H
|$`L
chM9
CPH+C@H
L$(H
[]A\A]A^A_
L$`H
|$@I
|$`H
|$`H
fff.
AWAVAUATUSH
GpH9Gh
t$ H
D$ H
|$`L
l$@H
H;|$
|$`H;|$
|$@I
CpI9
H;|$
H;|$
L9cp
5pN$
|$ H
[]A\A]A^A_
t$ H
|$ I
|$`I
|$@I
fff.
AWAVAUATUSH
l$`L
l$@E1
D$ I
|$@H
t$`H
|$`H;|$
|$@L9
H9D$
t%f.
CPH+C@H
L$(L
[]A\A]A^A_
|$`tEL
T$hH
t$`H
|$`I
D$>,
D$?,
l$@E1
D$ I
t$`H
|$`H;|$
|$@L9
CHv)H
|$ L
|$ L
l$`H
|$@H
|$`I
|$`I
AWAVAUATI
o0dH
D$h1
GpH9Gh
|$@L
d$ H9
t$@H
|$@H;|$
|$ L9
k0I9
{pH;{x
D$@I
D$PI
t$@H
|$@H;|$
|$ L9
|$ H
{pH;{x
D$hdH3
x[]A\A]A^A_
|$ I
|$@I
|$@H
|$ I
AUATH
D$H1
d$ H
{pH;{xtqH
t$ H
|$ I
D$HdH3
X[]A\A]
|$ I
AUATH
D$H1
d$ H
{pH;{xtqH
t$ H
|$ I
D$HdH3
X[]A\A]
|$ I
AWAVI
AUATUSH
D$h1
d$ L
t$@H
t$@H
|$@L9
|$ L9
t$@H
|$@L9
|$ L9
k0H9l$
D$hdH3
x[]A\A]A^A_
D$@L
l$ I
D$PM
H9l$
t$@H
|$@H;|$
|$ L9
5(W$
t$@H
|$@H;|$
|$ L9
|$ I
|$@I
|$ I
|$@H
|$@H
wpH;wxt)H
AWAVAUATUSH
|$XH
t$0H
T$`H
L$hH
D$8H
D$@dH
|$0H
\$8H
D$0H
[]A\A]A^A_
\$8H
L$pH
D$PH
D$(H
|$(H
T$ H
H;l$
H;|$
D$HH
D$(H
|$(H
T$ H
H;l$
H;|$
|$8H
D$XL
t$`H
D$0L
t$hH
|$@H
D$xH
D$pH
T$HH
t$PH
T$ H
T$ H
|$PL
|$HL
|$8H
D$XL
t$`H
D$0L
t$hH
|$@H
D$xH
D$pH
T$HH
t$PH
t$@1
t$@1
D$(H
D$(H
ATUH
ATUH
l$hH
\$(H
[]A\
[]A\
ATUH
l$hH
\$(H
ATUH
[]A\
[]A\
AWAVH
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATUSH
[]A\A]A^A_
uiH)
AWAVAUATUSH
D$X1
l$0H
D$/H
tsf.
t$0H
|$0L9
D$XdH3
h[]A\A]A^A_
|$0I
AWAVAUATI
H;W(
H1C(
E u9I
]A\A]A^A_
H1C(
ATUI
[]A\
D$(1
ATUSH
D$H1
H9X s
H9Z v2H
L$HdH3
P[]A\
l$ H
T$ H
T$(H
|$(H
|$(H
AWAVAUATUSH
D$x1
L9t$
H+T$
L$xdH3
[]A\A]A^A_
l$0H
\$PH
D$Pt
|$PH
T$8H
t$0H
|$0H
=pq#
|$0H
|$PH
ffffff.
ATUH
D$(1
D$(dH3
0[]A\
5#Y'
H9x s
H9z v
H9x s
t8H9{ w2H
5AoU
-IoU
fff.
ATUH
D$(1
D$(dH3
0[]A\
AVAUATUSH
l$0H
l$0H
D$8H
d$ H
\$@H
[]A\A]A^
l$pH
|$xA
\$PH
t$PI
|$PH
|$xH
l$0H
|$PH
|$xH
AUATUSH
D$81
D$8dH3
H[]A\A]
AUATI
D$X1
|$8H
D$XdH3
h[]A\A]
|$8H
|$8H
|$8H
ATUH
D$H1
|$ H
L$HdH3
P[]A\
|$ H
AVAUI
ATUH
D$81
L$8dH3
@[]A\A]A^
fff.
AVAUI
ATUH
D$81
L$8dH3
@[]A\A]A^
AWAVI
AUATL
l$0I
[]A\A]A^A_
\$ H
\$pH
\$XH
\$@H
fffff.
AWAVL
AUATI
l$0H
\$PH
D$x1
D$0H
|$PH
\$ H
|$0H
L$xdH3
[]A\A]A^A_
|$0H
|$PH
AUATI
l$@H
D$h1
|$ H
|$@H
L$hdH3
x[]A\A]
|$ H
|$@H
AUATH
D$H1
\$ H
|$ H
L$HdH3
X[]A\A]
|$ H
AWAVI
AUATI
l$ H
\$PH
|$PH
5C~T
\$pH
l$0D
|$pH
D$8H
\$@D
[]A\A]A^A_
|$pH
|$PH
AVAUI
ATUI
l$ dH
D$H1
|$ H
L$HdH3
P[]A\A]A^
|$ H
AWAVI
AUATI
\$`L
|$ H
D$(dH
D$`H
|$ L
|$0H
|$(H
l$PH
|$`H
[]A\A]A^A_
|$`H
fff.
AWAVE
AUATI
\$ L
d$PH
D$x1
l$0H
|$0H
|$PI
L$xdH3
[]A\A]A^A_
|$0H
|$PI
AVAUI
ATUI
l$0H
D$X1
|$0H
L$XdH3
`[]A\A]A^
|$0H
AVAUATUSH
\$ H
D$h1
l$@H
|$@H
|$ H
L$hdH3
p[]A\A]A^
|$ H
|$@H
AUATH
D$81
L$8dH3
H[]A\A]
AVAUH
ATUI
l$0H
D$x1
|$0H
D$PH
|$XH
L$xdH3
[]A\A]A^
|$XH
|$0H
AVAUI
ATUI
D$81
L$8dH3
@[]A\A]A^
AUATH
D$81
L$8dH3
H[]A\A]
ATUH
D$H1
|$ H
L$HdH3
P[]A\
|$ H
AWAVI
AUATI
t$@I
[]A\A]A^A_
\$0H
\$hH
\$PH
fff.
AWAVI
AUATUSH
l$0H
L$ H
D$(H
=-dT
d$@H
\$`L
\$`H
|$ L
d$PM
|$(H
\$pH
[]A\A]A^A_
ATUI
D$H1
|$ H
L$HdH3
P[]A\
|$ H
AUATH
D$H1
|$ H
L$HdH3
X[]A\A]
|$ H
AWAVI
AUATI
l$0H
D$X1
|$0H
L$XdH3
h[]A\A]A^A_
|$0H
fff.
AVAUI
ATUI
l$0H
D$X1
|$0H
L$XdH3
`[]A\A]A^
|$0H
AWAVI
AUATI
D$H1
\$ H
|$ H
L$HdH3
X[]A\A]A^A_
|$ H
AWAVI
AUATM
\$ H
D$H1
|$ H
T$HdH3
X[]A\A]A^A_
|$ H
AVAUI
ATUI
D$X1
|$0I
%>WT
L$XdH3
`[]A\A]A^
|$0I
AWAVI
AUATI
D$H1
|$ H
L$HdH3
X[]A\A]A^A_
|$ H
AUATI
D$81
-ZTT
L$8dH3
H[]A\A]
AVAUI
ATUH
D$81
L$8dH3
@[]A\A]A^
fff.
AUATH
D$H1
|$ H
L$HdH3
X[]A\A]
|$ H
AWAVI
AUATI
\$pH
D$8H
l$PH
D$ H
d$0H
|$0I
|$PH
|$pH
\$ H
[]A\A]A^A_
|$0I
|$PH
|$pH
fffff.
AWAVM
AUATI
l$ H
\$PH
|$PH
\$pH
l$0D
|$pH
5}MT
D$8H
\$@D
[]A\A]A^A_
|$pH
|$PH
AWAVM
AUATI
d$@dH
D$h1
l$ H
|$ H
|$@I
5#KT
L$hdH3
x[]A\A]A^A_
|$ H
|$@I
AWAVM
AUATI
d$@dH
D$h1
l$ H
5Sw$
|$ H
|$@I
L$hdH3
x[]A\A]A^A_
|$ H
|$@I
AUATI
D$81
L$8dH3
H[]A\A]
AUATI
D$81
L$8dH3
H[]A\A]
AWAVAUATI
\$ L
5nFT
l$0H
|$0H
|$PI
D$pL
t$ H
l$pH
|$pL9
D$pH
55ET
H;D$
[]A\A]A^A_
|$pH
|$0H
|$PI
AWAVAUATI
\$ L
l$0H
|$0H
|$PI
D$pL
t$ H
l$pH
|$pL9
D$pH
5bAT
H;D$
[]A\A]A^A_
|$pH
|$0H
|$PI
AWAVI
AUATM
\$0H
d$ H
l$PH
|$PH
l$pH
|$pI
|$0H
[]A\A]A^A_
|$0H
|$PH
|$pI
AWAVAUATI
\$ H
l$0H
|$0H
(H;h
D$pL
l$PA
|$PL9
|$pL9
[]A\A]A^A_
|$pH
|$PI
|$0H
ATUI
D$H1
|$ H
L$HdH3
P[]A\
|$ H
AUATI
D$H1
|$ H
L$HdH3
X[]A\A]
|$ H
AVAUI
ATUI
D$81
L$8dH3
@[]A\A]A^
AVAUI
ATUSH
d$0H
D$x1
\$PH
|$PH
l$ M
|$0I
L$xdH3
[]A\A]A^
|$0I
|$PH
AUATI
D$81
L$8dH3
H[]A\A]
AWAVE
AUATI
d$ H
|$ I
d$@L
|$@I
D$HL9
d$`H
|$`I
[]A\A]A^A_
|$`I
|$ I
fffff.
ATUH
D$81
5T]$
D$8dH3
@[]A\
5x\$
5d\$
50*T
AWAVAUATUSH
t$@H
D$h1
5V[$
|$@I
0H9A
l$@H
d$0M
|$@L9
L$hdH3
x[]A\A]A^A_
|$@I
AWAVAUATUSH
D$X1
5iS$
t$0M
D$0H
t$8H
|$8L9
L$XdH3
h[]A\A]A^A_
|$8I
AWAVAUATUSH
|$(H
T$8H
=p@S
\$PH
=/@S
D$ H
D$@H
\$`H
=x?S
\$ H
H;|$
D$0H
t$@H
D$8L
t$(I
|$ L
H9\$
|$8H
H9T$
D$8H
F0H9
H;|$
H;|$0
\$pH
5/Q$
[]A\A]A^A_
D$@H
F0H9
D$ H
D$ H
 H9|$HH
AWAVI
AUATI
S H9
[]A\A]A^A_
P H9
tWE1
C I9
]A\A]A^A_
t/ATI
[]A\
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AVAUATI
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
I9] tjH
[]A\A]A^A_
ATUI
[]A\
AVAUI
D$X1
d$0I
|$0M)
5%L$
D$0H
T$@L
T$0L
|$0I
=l0S
|$0I
AWAVL
AUATI
[]A\A]A^A_
fffff.
AWAVAUATI
$H9D$
t$ L
|$@I
T$(H
t$HE
t$@L
l$`I
T$HH
H9D$h
|$`I
|$@I
|$ H
dH3<%(
[]A\A]A^A_
<$H9|$
|$`I
|$@I
|$ H
AWAVAUATL
D$x1
l$PL
|$PH
L$xdH3
[]A\A]A^A_
l$ H
5o,%
5]&#
5m'#
=k'S
l$0H
=	'S
l$@H
5O+%
5=%#
5M&#
=y%S
|$PH
AWAVAUATL
D$x1
l$PL
|$PH
L$xdH3
[]A\A]A^A_
l$ H
5w'%
5e!#
5u"#
5';$
=s"S
l$0H
l$@H
5W&%
5E #
5U!#
5'%%
|$PH
fff.
AWAVAUATL
D$x1
l$PL
|$PH
L$xdH3
[]A\A]A^A_
l$ H
57"%
5/6$
l$0H
5w!%
l$@H
|$PH
fff.
AWAVAUATL
D$x1
l$PL
|$PH
L$xdH3
[]A\A]A^A_
l$ H
5w1$
l$0H
l$@H
|$PH
fff.
AVAUATUI
\$@H
l$ D
l$0H
|$@H
[]A\A]A^
\$`H
|$`H9
|$`H
l$ H
|$`H
|$`H
|$@H
ATUI
D$81
\$ H
\$0H
D$8dH3
@[]A\
ffffff.
ATUI
D$81
\$ H
\$0H
D$8dH3
@[]A\
ffffff.
ATUI
D$81
\$ H
\$0H
D$8dH3
@[]A\
ATUH
D$(1
H+D$
D$(dH3
0[]A\
=$ #
AWAVH
AUATI
\$PH
D$PH
l$pH
|$pI
d$@M
|$PH
[]A\A]A^A_
d$ H
|$PH
|$pI
AWAVH
AUATI
\$PH
D$PH
l$pH
|$pI
d$@M
|$PH
[]A\A]A^A_
d$ H
|$PH
|$pI
AVAUATUI
D$h1
\$@H
l$ D
l$0H
|$@H
D$hdH3
p[]A\A]A^
l$ H
|$@H
AVAUATUI
D$h1
\$@H
l$ D
l$0H
|$@H
D$hdH3
p[]A\A]A^
l$ H
|$@H
AWAVAUATUSH
5;S#
L$pH
D$0H
L$pH
L$@I
t$pH
|$xI9
L$8H
D$PH
|$0H
|$HH
|$8H
D$ H
|$xH
l$pH9
H9\$ A
u L)
t$(H
L$ A
|$pH
[]A\A]A^A_
|$pH
|$0H
|$HH
\$`H
t$0H
|$0H
|$(H
fffff.
AWAVI
AUATI
D$X1
\$ H
L$XdH3
h[]A\A]A^A_
\$ H
D$8H
t$0H
t$0H
\$ H
t$0H
fffff.
AWAVAUATUSH
T$PH
|$0H
t$ L
D$(D
L$\H
D$(H
l$ H
D$8H
|$PI
T$(I
|$@I
l$pH
D$HH
D$ H
|$xH
|$xH
l$xH
D$HH
H9l$pH
D$xH
T$xH
D$(H
l$xH9l$p
D$ H
\$PH
l$pH
H;\$@
H9D$@H
T$(H
|$ H
l$`H
l$pH
L$8H
T$(I
t$ H
|$0H
|$PH
D$ H
T$HH
l$pH
H;\$
|$xH;
|$xH
|$xH
H;D$
l$pH
l$pH
l$pH
l$pH
l$pH
l$pH
l$pH
t$PH
\$PH
|$@H
t$PH
t$PH
d$xH
l$pI9
d$pM
[]A\A]A^A_
l$pH
d$xH
l$pI9
|$pH
|$8H
l$pL
AWAVL
AUATI
[]A\A]A^A_
AWAVL
v AUATI
([]A\A]A^A_
AWAVAUATI
D$(1
\$ H
D$(dH3
8[]A\A]A^A_
<?L9
fffff.
fffff.
fff.
fff.
fff.
ATUI
[]A\
AVAUI
ATUSH
l$`H
d$0H
|$8I
|$hH
[]A\A]A^
|$8I
|$hH
ATUSH
g dH
D$81
T$8dH3
@[]A\
ATUH
l$@dH
D$h1
D$@H
|$HH
D$hdH3
p[]A\
|$HH
ATUH
l$@dH
D$h1
D$@H
|$HH
D$hdH3
p[]A\
|$HH
ATUH
l$@dH
D$h1
D$@H
|$HH
D$hdH3
p[]A\
|$HH
ATUH
l$@dH
D$h1
D$@H
|$HH
D$hdH3
p[]A\
|$HH
ATUH
l$@dH
D$h1
D$@H
|$HH
D$hdH3
p[]A\
|$HH
ATUH
l$@dH
D$h1
D$@H
|$HH
D$hdH3
p[]A\
|$HH
ATUH
l$@dH
D$h1
D$@H
|$HH
D$hdH3
p[]A\
|$HH
ATUH
 []A\
fff.
AVAUI
ATUI
g dH
D$X1
\$0H
|$8H
L$XdH3
`[]A\A]A^
|$8H
AVATUSH
y0H9
[]A\A^
[]A\A^
fff.
AVAUI
ATUI
[]A\A]A^
AWAVI
AUATI
[]A\A]A^A_
fffff.
ATUH
l$0H
D$X1
|$8H
L$XdH3
`[]A\
|$8H
fffff.
ATUSH
D$81
D$8dH3
@[]A\
fffff.
AVAUI
ATUSH
l$ H
l$ H
l$@1
|$`I
[]A\A]A^
|$`I
ATUH
\$ H
D$H1
|$ H
|$(H
D$HdH3
P[]A\
|$(H
|$ H
AVAUATUH
j(SH
Z8dH
[]A\A]A^
AVAUI
ATUSH
D$h1
|$HH
D$hdH3
p[]A\A]A^
|$HH
fffff.
AUATI
D$h1
|$HH
D$hdH3
x[]A\A]
|$HH
fff.
ATUSH
D$H1
|$(H
D$HdH3
P[]A\
|$(H
AVAUI
ATUSH
D$h1
|$HH
D$hdH3
p[]A\A]A^
|$HH
fffff.
AUATI
D$h1
|$HH
D$hdH3
x[]A\A]
|$HH
fff.
D$(1
D$(dH3
D$(1
D$(dH3
ATUSH
D$h1
=skT
l$@H
D$@H
|$HH
D$hdH3
p[]A\
|$HH
D$(1
T$(dH3
ATUSH
D$H1
|$(H
D$HdH3
P[]A\
|$(H
AWAVI
AUATI
D$ H
5B2#
l$PH
t$`H
t$(H
t$8H
t$ I
|$0H
[]A\A]A^A_
|$0H
\$pH
t$(H
t$(H
AUATI
d$0H
l$`dH
|$hH
|$8I
[]A\A]
|$hH
|$8I
fffff.
AWAVI
AUATUSH
l$0H
D$0L
D$8H
\$XH
D$@H
D$HH
|$hH
[]A\A]A^A_
|$hH
fff.
AVAUATUI
D$x1
l$0L
$I;\$
 I9D$
|$XI
D$xdH3
[]A\A]A^
5y[T
5y[T
|$XI
AWAVI
AUATI
\$@dH
D$X1
l$ H
D$XdH3
h[]A\A]A^A_
fffff.
AWAVAUATUSH
|$0H
D$@H
D$@H9
E@H9
D$pH
D$0L
\$xH
\$(H
L$ H
t$pL
\$0H;\$8L
(H9\$8u
\$PH
|$XL
|$XH
d$PH
|$PH
d$8H
\$0I9
d$0M
[]A\A]A^A_
E@H9
D$@H9
fffff.
fffff.
AVAUATUSH
l$0dH
\$XH
D$8H
D$@H
D$HH
|$hH
[]A\A]A^
|$hH
D$81
D$8dH3
fff.
D$81
D$8dH3
fff.
AWAVI
AUATI
l$0H
[]A\A]A^A_
AWAVI
AUATUSH
t$@H
D$8H
L$0I
O H9
D$PH
D$(H
t$lH
t$ H
|$@H
T$PH
|$@H
H9\$0A
|$XI
t$(H
L$0H
D$8H
\$8H
[]A\A]A^A_
d$pH
|$HH
|$(H
D$(H
|$ H
D$ H
|$8H
fffff.
AWAVI
AUATI
l$0L
D$HH
|$ L
l$pL
+L;k
t$`H
t$hH
l$xL
t$`H
(L9k
t$@H
[]A\A]A^A_
t$@H
AVAUATUSH
[]A\A]A^
d$@H
=ctR
=LsR
AWAVAUATUSH
D$@H
[]A\A]A^A_
\$`H
575%
D$?H
|$pH
=GjR
D$PH
t$ H
T$(H
D$ H
|$ I
AWAVAUATUSH
5RV"
d$@L
D$HH
t$ H
|$ I
|$xI
|$HI
[]A\A]A^A_
=OdR
|$ I
|$xI
|$HI
fffff.
AVAUATUSH
\$ I
l$PH
|$(H
[]A\A]A^
=m`R
|$(H
5eN"
fffff.
AWAVI
AUATI
D$XH
D$hH
l$hH
l$0L
\$@H
\$ H
t$`H
[]A\A]A^A_
AUATI
D$h1
d$ H
D$ H
D$hdH3
x[]A\A]
d$@H
|$HI
d$ H
d$ H
d$ H
5g_$
|$HI
ATUH
%%ZR
[]A\
fff.
AVAUI
ATUI
\$PdH
D$x1
t$(L
l$0H
D$ H
l$8H
l$ H
|$XH
D$xdH3
[]A\A]A^
|$XH
AWAVAUATUSH
[]A\A]A^A_
|$@L
D$pH
D$pH
D$xH
D$PL
T$ 1
D$ H
5/C"
t$(H
=MTR
t$(H
=	SR
\$0H
5OW$
5yq#
T$ H
AVAUATUH
D$H1
d$ L
U H9
-}QR
|$(I
D$HdH3
P[]A\A]A^
|$(I
AWAVAUATI
|$@dH
D$HH
T$@H
T$PH
D$Xt
[]A\A]A^A_
|$@H
T$HH
D$PH
T$Xt
9X s
A9] 
5dNR
\$ H
D$PA
l$`I
|$hL9
D$PH
l$0H
5mr#
=FMR
5_Q$
5=v#
|$hH
ATUH
u	[]A\
[]A\
[]A\
fffff.
fffff.
AVAUI
ATUSH
d$0H
t$0H
D$8I
D$ H
D$0H
t$@H
\$`H
D$8H
D$hH
|$pH
|$@I
[]A\A]A^
|$pH
|$@I
AWAVAUATI
D$0D
D$dD
D$(H
T$0H
D$PH9
D$ H
D$@H
D$HH
D$hH
|$ H
T$ L
H;|$@t
|$HL
t$hH
D$HH
U0I;U
5vp#
H9D$PH
5|o#
H;U0
D$(H
D$ H
|$ L
D$0H
D$(H
t$8H
|$8I
t$0H
t$XH
[]A\A]A^A_
5Wi#
5b^#
D$8I
|$(H
t$0M
D$8H
l$pH
5Ig#
5{\#
5lh#
5Q\#
|$(H
t$XH
59e#
-*"S
5BZ#
5	e#
5)e#
t$8H
5>e#
D$8H
|$8H
D$HH
D$ H
fff.
AWAVAUATI
D$(H
D$ H
|$ L
t$PH
5LU#
H;|$
O0H9
t)H9
t$ L
H;|$
[]A\A]A^A_
t$@H
5YR#
t$pH
5$R#
=J2R
|$(L
T$0H
I;T$
t$`H
5=P#
=u0R
t$xH
|$(H
D$ H
D$HH
D$PH
D$pH
t$xH
t$@H
fff.
AWAVI
AUATI
D$(H
t$ H
[]A\A]A^A_
l$@L
D$(H
t$ H
fffff.
AWAVI
AUATUSH
d$PL
D$x1
l$8H
|$XH
|$XL9
D$xdH3
[]A\A]A^A_
|$XI
AWAVAUATUSH
|$(H
D$Gu2H
[]A\A]A^A_
D$HH
l$(L
D$ H
D$PH
D$0H
D$ H
|$0D
54pR
|$xH
|$PH
\$pH
=^%R
\$`H
l$HH
|$(H
|$HH
|$ H
|$PH
|$HH
5r9"
D$ H
D$HH
D$PH
D$pH
t$xH
t$@H
fff.
AWAVAUATUSH
T$0H
L$XL
D$pH
L$|D
D$PH
l$PH
D$HH
|$HD
D$ H
D$ H
|$XL
D$HH
D$hH
D$ H
D$8H
5qJ#
H;|$(t
l$ tXH
|$ L
H;|$8t
t$XH
D$pL
t$0H
G@H9
G@H9
=?/"
|$`H
D$@H
[]A\A]A^A_
5O6#
|$`H
D$@H
5aC#
t$@H
5oC#
5YC#
D$ H
5:4#
D$ H
AWAVAUATI
54$"
E@H9
G@H9
=:	R
[A\A]A^A_]
50)#
5m7#
5b7#
5|7#
fff.
vXdH
dH3<%(
AWAVI
AUATUSI
L$@H
L$(H
L$`H
L$ H
L$0H
L$0H
\$@H;\$HL
H;|$
(H9\$Hu
\$`H;\$hL
(H9\$hu
l$hH
\$`H
l$`H
l$HH
\$@H9
l$@H
[]A\A]A^A_
AVAUATUH
\$ dH
D$H1
|$(H
D$HdH3
P[]A\A]A^
|$(H
AWAVAUATUSH
L$?H
|$ dH
D$>u2H
[]A\A]A^A_
t$ L
D$HH
\$(H
5X*#
D$HH
\$`H
5\&#
D$@H+
L$@H
t$PH
5*##
5E##
t$HL
|$ H
t$PH
l$pH
59!#
AWAVAUATI
[]A\A]A^A_
D$PH
D$0H
\$pH
D$xH
D$ H
\$@H
H;|$
I;t$
D$0H
D$8H
|$(H
T$ L
D$0H
D$8H
|$(H
|$ H
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATUSH
D$(1
_tcH
t$(dH34%(
8[]A\A]
@H<"H
@H<"H
<$L9
@H<]H
@H<]H
<$L9
<$L9
GH<"t
GH<"
GH<"
<$L9
<$L9
H"t2H
C@H9
C@H9
AWAVAUATUSH
l$@H
D$@H
D$(H
H+D$HH
T$(H
t$ H
t$@L
d$`I
T$HH
H+D$hH
|$`I
|$@H
|$ H
[]A\A]A^A_
|$`I
|$@H
|$ H
AWAVAUATI
D$(1
\$ H
M9t$
L$(dH3
8[]A\A]A^A_
~(I9
ATUSH
[]A\
AWAVI
AUATUSH
L9l$
H9t$
H;l$
(H9l$
L9$$t#
(L9$$u
([]A\A]A^A_
H;,$t
(H9,$u
([]A\A]A^A_
ATUH
[]A\
[]A\
ATUSH
[]A\
AWAVE
AUATI
s0H9
I9\$
([]A\A]A^A_
~(I9
ATUSH
C8H9
[]A\A]A^
AWAVL
AUATI
{0H9
tqI9]
[]A\A]A^A_
t$(H
]A\A]A^A_
}(I9
AVATUSH
P0M9
[]A\A^
[]A\A^
tSATI
C8H9
[]A\
tAATI
[]A\
AWAVL
AUATUSH
\$0I
t$(L
uHI)
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATL
[]A\A]A^A_
E A9
[]A\A]A^A_
tSATI
C8H9
[]A\
ATUH
[]A\
AWAVH
AUATH
{0H9
[]A\A]A^A_
H9\$
l$8I
|$(H
D$ M
|$PH
D$HI
D$`I
[]A\A]A^A_
|$(I9
AWAVH
AUATUSH
|$0I
|$(H
[]A\A]A^A_
AWAVAUATUSH
D$(1
W8H9
D$(dH3
8[]A\A]A^A_
\$ H
AWAVA
AUATI
vQH)
[]A\A]A^A_
ATUI
S@[]A\
AUATI
[]A\A]
AWAVI
AUATUSH
D$81
D$8dH3
H[]A\A]A^A_
fffffff
fffffff
t5M9
H;|$
AWAVA
AUATI
\$ dH
D$x1
l$PH
D$PH
|$XH
|$(H
L$xdH3
[]A\A]A^A_
|$XH
|$(H
D$(1
D$(dH3
AUATH
\$pH
l$@dH
|$xH
d$ H
t$ H
D$pH
H9D$x
|$pH
|$ I
|$HH
[]A\A]
=4s!
|$pH
|$ I
|$HH
|$xH
AVAUH
ATUSH
\$`dH
|$hH
[]A\A]A^
l$ H
D$(H
l$@H
|$@H
l$0H
l$ H
|$hH
|$@H
ffff.
AWAVH
AUATUSH
D$pH
D$xH
l$`H
t$(H
t$ H
[]A\A]A^A_
T$0H
T$0H
t$(H
t$ H
D$0I
L$PH
D$0H
t$0H
|$8I
AUATI
D$(1
D$(dH3
8[]A\A]
ATUI
[]A\
AWAVH
AUATI
uTL)
[]A\A]A^A_
t$(L
D$@H
D$XH
L$pH
u%L)
L$@H
D$@H
L$XH
AUATUSH
[]A\A]
D$(H
D$@H
D$XH
D$pH
AWAVAUATUSH
D$h1
D$ L
d$@H
D$HH
D$(H
T$HH
D$(H
|$@I
\$0H
D$hdH3
x[]A\A]A^A_
|$@I
AWAVI
AUATH
ghdH
|$ D
D$@H
5LyR
D$HH
D$(H
D$HH
D$(H
l$`1
l$pH
\$PH
\$0H
[]A\A]A^A_
AWAVI
AUATUSH
T$ H
D$81
D$(H
\$0H
D$8dH3
H[]A\A]A^A_
fff.
AWAVI
AUATUSH
T$0H
t$ dH
D$H1
D$8H
H;D$
H;D$
H;D$
H;D$
D$ H
H9D$
H;D$
H9D$
H9D$
\$@H
D$HdH3
X[]A\A]A^A_
|$(H
fff.
AWAVI
AUATI
T$XH
D$PH
4$H)
4$H)
D$(H
D$0H
D$@H
D$8H
|$(H
|$0H
|$@H
|$8H
I9D$
\$pH
5Ey#
T$PL
t$PL
5@ZR
t$`H
|$PH
t$hL
D$ H
D$ H
D$8H
D$@H
D$0H
D$(H
dH34%(
[]A\A]A^A_
\$XI
5Di#
u	L9
=0dQ
u	I9
5fh#
=ScQ
u	L9
D$8H
D$@H
D$0H
D$(H
|$HH
|$`H
|$hH
5m)!
ATUSH
 []A\
ATUH
D$(1
L$(dH3
0[]A\
fffff.
fffff.
ATUI
[]A\
AWAVH
AUATI
uTL)
[]A\A]A^A_
L$8L
u"M)
L$ H
u+L)
fff.
[]A\
dH3<%(
dH3<%(
ATUM
dH34%(
[]A\
AVAUH
ATUI
d$ I
L$81
\$0H
L$8dH3
@[]A\A]A^
ATUI
[]A\
ffffff.
AWAVH
AUATI
uTL)
[]A\A]A^A_
u"M)
L$8H
u%L)
AWAVI
AUATI
[]A\A]A^A_
5$L#
=~GQ
AVAUI
ATUI
D$81
l$ I
\$0H
D$8dH3
@[]A\A]A^
AVAUI
ATUI
D$81
l$ I
\$0H
D$8dH3
@[]A\A]A^
AVAUI
ATUI
l$ H
D$81
\$0H
D$8dH3
@[]A\A]A^
fffff.
AWAVAUATUSH
D$x1
\$0H
5	'R
|$PI
5jT"
D$xdH3
[]A\A]A^A_
\$0H
5GC#
5,Z"
\$0H
=A>Q
\$0H
\$0H
5'B#
|$PI
AVAUI
ATUI
5[#R
D$81
l$ I
\$0H
D$8dH3
@[]A\A]A^
AVAUI
ATUI
D$81
l$(H
D$8dH3
@[]A\A]A^
=X9Q
AWAVAUATUSH
d$0H
l$`H
D$PT
l$XH
D$8H
D$@H
D$HH
D$0H
D$hH
D$pH
D$xH
D$`H
[]A\A]A^A_
l$ H
AWAVAUATL
XZH9
[A\A]A^A_]
fff.
AWAVAUATI
D$x1
l$@H
t$ H
|$`I
l$hH
l$0H
l$PH
L$xdH3
[]A\A]A^A_
AWAVAUATI
D$x1
l$@H
t$ H
|$`I
l$hH
l$0H
l$PH
L$xdH3
[]A\A]A^A_
AWAVAUATI
\$@H
|$`H
\$@L
\$@I
l$pH
D$HH+D$@H
D$HH+D$@H
l$0H
5ts"
t$,H
D$@H9D$HH
[]A\A]A^A_
AWAVAUATI
\$@H
|$`H
\$@L
\$@I
l$pH
D$HH+D$@H
D$HH+D$@H
l$0H
t$,H
D$@H9D$HH
[]A\A]A^A_
AWAVI
AUATI
|$8H
|$`dH
L$HH
L$ H
D$(H
5x'#
5K6"
\$8H
D$ H
\$pH
[]A\A]A^A_
|$ H
5e~!
|$(H
H;|$0
D$ H
D$8H
8H9|$Ht
|$XH
|$PH
D$(H
AWAVI
AUATI
\$@H
D$x1
D$ H
\$PH
d$`L
D$ H;D$(H
L9l$(
\$pH
L9l$(
L$xdH3
[]A\A]A^A_
D$ H
AUATI
l$PH
\$0L
D$hH
D$xH
t$hI
t$`L
[]A\A]
\$PH
5,b"
t$`L
5$_"
\$ H
5ia"
AWAVI
AUATUSH
|$0H
D$@H
D$HH
D$(H
t$`H
\$`H
|$hH9
|$ L
|$hH
|$(H
D$8H
D$8H
|$hH
d$`L9
|$`H
D$0H
|$PH
[]A\A]A^A_
D$8H
D$8H
D$8H
D$8H
|$@H
D$0H
t$`H
t$XH
l$`H
\$hH9
\$hH
D$0H
\$hH
d$`L9
\$`H
\$`H
5~S"
|$HH
|$PH
|$PH
5"N"
5eP"
|$XH
|$@H
|$`H
|$(H
AWAVI
AUATH
\$`H
l$ L
l$0H
l$PH
|$`H
[]A\A]A^A_
|$`H
d$@A
fff.
AWAVI
AUATI
l$`H
|$8H
L$@H
\$pH
T$0I
l$@L;l$HI
D$ I
D$0H
D$(f.
L9|$H
[]A\A]A^A_
H9\$
t$ H
t$(H
|$8H
|$(H
D$@H
|$8H
AWAVI
AUATI
l$PH
<$dH
|$PH
T$qA
L$xH
D$rH
l$01
d$ M
l$@H
[]A\A]A^A_
|$PH
D$pL
5 A"
|$pH
|$PH
D$pL
5y@"
|$pH
|$PH
5az$
l$0H
|$pH
|$PH
AWAVA
AUATA
L$lH
t$ H
T$`H
D$xH
L$(H
|$(M
D$(H9D$
D$PH
\$PH
t$(H
H9T$
t$PH
SxtOH
\$(H
\$PH
L$l8H8
D$(H
t$ H
D$PH
t$(H
t$PH
D$ H9
T$HH
L$0H
L$8H
|$0H
t$8H
|$@L
L;l$
L$HH
D$(H
5U/"
t$ H
t$XH
[]A\A]A^A_
L;l$
D$ H
D$XH
t$(H
L$xH
t$XH
D$(H
D$0H
D$8H
D$@f
D$ L
|$0H
t$8H
|$@M
L;l$
D$(L
t$PH
|$pH
|$PH
D$PH
|$8H
|$0H
t$PH
|$8H
|$0H
AWAVA
AUATUSH
t$ dH
T$0H
T$(H
@H;l$8H
D$pH
D$xH
d$PM
 H9l$8
\$`H
 H9l$8
l$8H
\$0H9
l$0H
L$ H
4$H9
L$ H
t$ H
t$ H
[]A\A]A^A_
AWAVA
AUATUSH
|$ dH
L$0L
H;l$8H
D$pH
D$xH
d$PM
 H9l$8
\$`H
 H9l$8
l$8H
\$0H9
l$0H
[]A\A]A^A_
|$ 1
AWAV
AUATE1
D$(H
d$@H
D$`t
|$`H
|$@I
t$ L
[]A\A]A^A_
|$`H
|$@I
t$ L
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
ATUH
tm[]A\
[]A\
[]A\
AWAVL
AUATI
[]A\A]A^A_
ATUH
tt[]A\
[]A\
[]A\
AWAVH
AUATH
[]A\A]A^A_
H9\$
uNL)
[]A\A]A^A_
AWAVL
v AUATI
([]A\A]A^A_
AWAVH
AUATI
A8D$
[]A\A]A^A_
[]A\A]A^A_
dH3<%(
AWAVAUATL
A8E8
K88H
[]A\A]A^A_
[]A\A]A^A_
AVAUATI
G8A8D$
v=f.
[]A\A]A^A_
[]A\A]A^A_
H9] trH
[]A\A]A^A_
[]A\A]A^A_
fff.
fffff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
ATUI
[]A\
D$81
L$8dH3
AWAVAUATUSH
D$h1
D$hdH3
x[]A\A]A^A_
d$ H
|$@I
|$ I
|$ I
|$@I
fffff.
fffff.
[]A\A]A^
AUATI
[]A\A]
tUATI
C0H9
[]A\
AWAVI
AUATI
D$81
D$(H
D$(H
D$(I
D$8dH3
H[]A\A]A^A_
UUUUUUU
D$(H
UUUUUUU
ATUI
D$(H
[]A\
[]A\
D$(H9
[]A\
AWAVAUATUSH
k8H9
L9d$
[]A\A]A^A_
AWAVH
AUATUSH
L;d$
t$ L
[]A\A]A^A_
[]A\A]A^A_
fff.
AWAVAUATUSH
L9l$
[]A\A]A^A_
AWAVH
G AUATUSH
H9D$
D$,H
L$ H
8[]A\A]A^A_
AWAVH
G AUATUSH
H9D$
D$,H
L$ H
8[]A\A]A^A_
[]A\A]A^
[]A\A]A^
AUATUSH
D$81
L$8dH3
H[]A\A]
T$ H;P
fffff.
fff.
5s("
5i("
AUATH
5B("
D$X1
|$8H
D$XdH3
h[]A\A]
|$8H
AUATI
D$h1
D$hdH3
x[]A\A]
l$@L
T$@Hc
|$@H
|$@H
AVAUI
ATUI
\$0H
T$0H
l$PI
|$XH
|$0H
[]A\A]A^
5M$"
d$ H
|$0H
|$XH
AUATUSH
D$H1
D$HdH3
X[]A\A]
l$ H
|$ H
|$ H
fffff.
AWAVI
AUATI
<	w(H
l$ H
5Xb 
l$ H
[]A\A]A^A_
l$0I
t$8H
D$P1
t$pI
t$xH
t$PH
T$XH
|$pI
|$PH
|$0I
l$ H
|$pI
|$PH
|$0I
AUATH
\$0dH
5?4!
|$0A
D$0H
[]A\A]
5$t 
|$0H
AWAVAUATUSH
L9d$
[]A\A]A^A_
AWAVL
AUATI
D$PH
L$8M9
D$@L
L$HH
D$0H
D$hH
D$ H
D$(f
t$ H
\$`H
H9\$h
t$0L
D$HL
L$@H
T$8L
t$`L
[]A\A]A^A_
H;\$
t$ I
t$(I
H9D$ht
|$0H
5EAR
=.AR
AWAVAUATI
D$H1
D$ txH
L$ H
|$(L
D$ t9L
L$ H
<$M9
T$0H
D$8t
\$0I
L$0H
T$0H
D$8t
L$0H
T$HdH3
X[]A\A]A^A_
fff.
ATUSH
[]A\
=H{P
fff.
ATUSH
[]A\
=(zP
fff.
AWAVH
AUATA
t$H1
t$ H
|$ I
9	w$
9	w!
9	w!
D$HdH3
X[]A\A]A^A_
|$ I
AUATUSH
D$x1
d$PH
l$0H
|$0I
|$XI
D$xdH3
[]A\A]
5\u"
=xpP
5OAQ
|$XI
|$0I
AWAVAUATUSH
D$h1
t$ H
l$@L
d$@H
t$HA
T$HH
t$@L
|$@L9
|$ I
D$hdH3
x[]A\A]A^A_
t$ E1
D$ H
|$@H
|$ I
AUATUSH
D$81
D$8dH3
H[]A\A]
fff.
AUATUSH
[]A\A]
AWAVI
AUATUSH
%XjP
D$81
n@L9
D$8dH3
H[]A\A]A^A_
l$ H
t$0H
fff.
AWAVAUATI
H;?H
d$pL
l$PL
t$HH
t$HH
t$@H
t$(H
t$ D
d$@H
\$8H
D$(L
L9l$(H
\$8t{H
|$0H
H;D$ I
t$ L
5/g"
=VbP
t$HH
[]A\A]A^A_
|$ H
fffff.
5|c"
AUATI
D$H1
l$8H
D$ H
D$(H
5hb"
|$HdH3<%(
X[]A\A]
AWAVAUATUSH
D$ H
t$ H
L$pE1
D$`H
D$0H
D$NH
dtxH
D$ H
D$8H
D$(H
[]A\A]A^A_
\$0H
D$ H
t$pH
t$(H
D$N'
t#<'u
5?I 
D$M'
D;d$
D$K,
5u`"
H;|$
D$L'
D;d$
l$PH
5F]"
\$pH
=mXP
\$pH
=%XP
\$pH
5n\"
\$pH
5&\"
\$pH
=MWP
\$pH
\$pH
5N["
\$pH
=uVP
D$8H
D$(H
|$0H
AUATUSH
D$81
L$8dH3
H[]A\A]
5|X"
5,X"
=HSP
5<W"
=XRP
=8QP
5uU"
5\T"
=xOP
=(OP
5lS"
ATUSH
[]A\A]A^
AVAUL
ATUH
rNH)
[]A\A]A^
=hKP
AUATI
tDI9]
[]A\A]
fff.
AWAVI
AUATUSL
T$\M9
t$M9
D$(L
F@H9
D$lH
D$@H
=2HP
H;|$
H;|$
t$pH)
9D$l
D$hH
|$ L
9\$h
|$ L
\$ H
5?J"
t$pL
=ZEP
}HE1
|$ L
D$0H
D$8H
|$ H
L$(H
D$8H
|$01
t$0L
D$0H
t$ H
t$lL
t$(L
={CP
\$ H
t$\H
t$hH
t$(H
|$@H
D$pL
D$HH
D$8H
t$8L
t$(H
D$ I
5n@P
t$(L
D$HI
D$8E1
L9D$Pv
D$8H
D$HH
\$ H
=r>P
L9`Pt
t$8H
|$8I
|$ H
|$ H
|$ H
t$(L
l$pH
t$(H
\$ H
=6<P
|$ H
5d@"
D$dt
[]A\A]A^A_
\$ H
t$XH
t$dH
t$(H
D$HH
D$0H
D$@H
|$ H
T$ H
|$ H
AVAUH
ATUH
\$ H
l$@H
d$`H
|$@H9
|$ H
$H9D$
[]A\A]A^
|$@H
|$ H
D$81
D$8dH3
AVAUH
ATUH
\$0dH
D$X1
|$0A
D$XdH3
`[]A\A]A^
|$0A
|$0H
5Q# 
=o4P
5z8"
|$0H
|$0H
AVAUH
ATUH
\$0dH
D$X1
|$0A
5,#!
|$0A
=?2P
|$0H
D$XdH3
`[]A\A]A^
|$0A
|$0H
|$0H
ATUSH
D$81
T$8dH3
@[]A\
fff.
AUATI
D$h1
\$ L
l$@H
T$HH
t$@L
|$@H
|$ H
D$hdH3
x[]A\A]
|$@H
|$ H
fff.
AUATI
D$X1
l$0H
D$0H
|$8H
D$XdH3
h[]A\A]
|$8H
AUATI
D$(1
D$(dH3
8[]A\A]
^_uT1
ZYumH
=H+P
fffff.
AWAVAUATI
l$@dH
D$x1
D$ H
D$(H+D$ H
T$ H
D$(I
D$ H
D$ H
T$ H
D$(I
D$xdH3
[]A\A]A^A_
AUATA
D$h1
l$0H
D$hdH3
x[]A\A]
5Q+"
l$0H
=8&P
5\*"
5|)"
fff.
ATUSH
D$X1
D$XdH3
`[]A\
<$H9
AWAVI
AUATUSH
l$0H
\$PL
=9"P
D$pH
D$pH
D$xH
D$pH
[]A\A]A^A_
l$ H
ATUL
[]A\
AWAVAUATL
[]A\A]A^A_
D$0L
t$PH
fffff.
AWAVI
AUATH
|$ H
\$@L
l$@H
l$`H
l$`L
5!|!
[]A\A]A^A_
fffff.
AWAVI
AUATUSH
H;?H
D$PI
D$Xt
D$`I
D$ht
d$0H
l$pL
D$PH
D$XH
D$`H
D$hH
l$PI
D$hL
T$ H
KHHi
L$(H
H;D$ tHH
|$(H
D$(H
5Rg!
5rg!
l$pH
5wf!
5zf!
[]A\A]A^A_
5,  
|$0H
AVAUATUSH
D$X1
D$XdH3
`[]A\A]A^
tMf.
<$H9
fff.
fffff.
ATUH
D$H1
D$HdH3
P[]A\
fffff.
=`	P
5om!
AWAVAUATL
|$PH
D$XH
|$0H
5(l!
|$0L9
|$XI
[]A\A]A^A_
|$XI
|$0I
fffff.
AVAUI
ATUH
\$@L
|$@H
t$hH
|$HH
[]A\A]A^
|$HH
|$@H
AWAVI
AUATI
l$0H
l$0H
d$pH
|$pI
[]A\A]A^A_
|$pI
AUATI
\$PI
|$PH
|$ H
D$(H
|$(H9
[]A\A]
|$(H
|$PH
ATUH
D$(1
D$(dH3
0[]A\
ATUH
<$H9
l$ H
|$ H
l$@H
|$@H
l$`H
|$`H
[]A\
|$@H
|$`H
|$ H
ATUH
l$@H
<$H9
l$ H
|$ H
[]A\
|$ H
ATUH
l$`H
<$H9
l$ H
|$ H
l$@H
|$@H
[]A\
|$@H
|$ H
fff.
ATUH
l$ H
D$X1
<$H9
D$XdH3
`[]A\
ATUH
l$ H
D$X1
<$H9
D$XdH3
`[]A\
ATUH
l$ H
D$X1
<$H9
D$XdH3
`[]A\
AVAUI
ATUH
l$PdH
|$ H
D$(H
5QZ!
<$H9
|$(H
|$XI
[]A\A]A^
|$XI
|$(H
AWAVI
AUATH
|$ H
D$(H
5xX!
<$L9
|$(H
|$XI
[]A\A]A^A_
|$(H
|$XI
AWAVI
AUATUSH
D$ Y
\$PH
|$PH
D$XH
l$0H
|$0H9
|$XH
[]A\A]A^A_
|$XH
|$0H
AWAVAUATUSH
t$ H
|$`H
D$hH
|$@H
|$@L9
|$hI
[]A\A]A^A_
5=S!
5pS!
|$@I
|$hI
AUATI
|$ H
\$ 1
D$(H
d$PH
<$H9
|$(H
[]A\A]
|$(H
AWAVI
AUATH
|$PH
D$XH
<$L9
|$(I
|$XH
[]A\A]A^A_
|$(I
|$XH
AWAVAUATUSH
|$ H
|$(H
(H9E
|$(t1H
|$(H
D$0H9
(H9E
l$`1
5*s 
l$@1
[]A\A]A^A_
AVAUI
ATUH
~ SH
|$PH
\$P1
D$XH
<$L9
|$(H
|$XH
[]A\A]A^
|$XH
|$(H
fff.
AWAVI
AUATH
\$0H
l$PH
d$pL
|$pI
|$PH
|$0H
H9D$
[]A\A]A^A_
|$pI
|$PH
|$0H
AVAUI
ATUH
D$H1
L$HdH3
P[]A\A]A^
t$ H
|$ I
|$ I
fff.
AVAUI
ATUH
D$H1
l$ H
|$ H
L$HdH3
P[]A\A]A^
|$ H
AUATUSH
D$X1
T$XdH3
h[]A\A]
d$0H
5yu!
|$0I
|$0I
AUATI
D$(1
L$(dH3
8[]A\A]
fff.
AVAUI
ATUH
5vt!
D$H1
L$HdH3
P[]A\A]A^
t$ H
|$ I
|$ I
ATUI
[]A\
ATUI
D$81
L$8dH3
@[]A\
fffff.
AUATI
5wq!
\$ H
D$H1
5gh 
|$ H
T$HdH3
X[]A\A]
|$ H
AWAVI
AUATI
5?n!
l$ H
\$@H
|$@H
|$ H
|$`H
D$hH
|$hH
$H9D$
[]A\A]A^A_
|$hH
|$@H
|$ H
ATUH
59n!
\$ H
D$x1
l$@H
|$ H
T$xdH3
[]A\
|$ H
ATUH
5:m!
\$ H
D$x1
l$@H
|$ H
T$xdH3
[]A\
|$ H
AWAVI
AUATI
\$PdH
t$0H
[]A\A]A^A_
D$pH
5Rk!
|$pH
|$pH
fff.
AWAVI
ATUSI
\$PH
l$pH
|$pH
|$PH
[]A\A]A^A_
\$0H
5]6!
5Pf!
\$0H
5=6!
|$PH
|$pH
AWAVH
AUATUSH
t$(H
D$XH
D$0H
D$`H
D$pH
D$hH
D$0H
t$ M
|$ I9
D$TH
t$@H
t$TH
H9\$ 
\$pH
t$`H
D$XH
L$(H
D$(H
D$8H9
|$(L
|$(H
[]A\A]A^A_
H94$I
D$ @
L9<$
D$0H
t$8H
\$@trH
\$0H
L$@H
|$ H
5R*!
|$(H
|$(H
D$`H
|$hH
|$(H
fff.
AWAVI
AUATH
d$@H
|$@I
|$`H
l$ H
[]A\A]A^A_
|$@I
|$`H
AWAVH
N(AUATUSH
D$X1
l$ L
t$@H
xhL9
d$0M
d$PM
D$XdH3
h[]A\A]A^A_
AWAVI
AUATH
d$@H
|$@I
|$`H
l$ H
[]A\A]A^A_
|$@I
|$`H
AWAVI
AUATL
gpUSH
d$0M
D$0H
D$0H
l$pH
l$pH
[]A\A]A^A_
5	M!
\$ H
5mO!
5kO!
5%L!
fffff.
AWAVI
AUATI
l$ M
D$ L
D$ H
\$`H
\$`L
[]A\A]A^A_
AUATI
\$0H
|$0H
\$PL
|$PH
D$XH
|$XH
H+\$
[]A\A]
|$XH
|$0H
AVAUI
\$`H
|$`L
l$0H
|$0H
D$8H
|$8H
|$hH
[]A\A]A^
5cE!
5#E!
|$hH
|$8H
AWAVI
AUATI
d$0M
L$0H
D$8H
|$PH
l$pL
[]A\A]A^A_
56A!
5"A!
l$ H
fffff.
fffff.
D$X1
D$(H
D$8H
t$0H
D$XdH3
AWAVI
AUATUSH
[]A\A]A^A_
D$(H
\$pH
T$xH
|$PH
D$xH
|$`H
l$pH
D$0L
t$pH
|$pH
|$pH
D$xH
T$pH
|$ H
l$@H
|$ H
fffff.
AVAUI
ATUH
D$x1
D$xdH3
[]A\A]A^
fffff.
AUATI
D$81
D$8dH3
H[]A\A]
AWAVAUATUSH
t$pH
D$xH
D$pH
D$xH
|$pL
t$pL
E(H9
D$HH
t$PH
D$xH
t$ M
\$(I
|$ H
\$(M9
D$lH
XpL9
l$(L
d$0M
l$8H
l$(H
d$0H
l$8D
D$`D
t$lH
L9l$ t H
|$PH
50+!
T$PH
L$HH
T$pH
|$XI
H;D$@H
[]A\A]A^A_
d$0H
5t+!
54+!
D$PH
|$HH
|$XH
|$XH
AWAVAUATI
\$@H
T$HL
D$HH
\$@H
\$PH
T$XH
|$0H
D$XH
\$PH
D$PH
L$@H
|$@H
D$@H
D$`H
D$HH
D$ht
D$PH
D$pH
D$XH
D$xt
D$pH
L$`L
[]A\A]A^A_
D$ H
fffff.
AWAVL
AUATI
[]A\A]A^A_
D$pH
t$0M
|$pH
L$0H
D$8H
D$PH
G(H9
D$PH
l$ H
G(H9
|$pH
AVAUI
\$PH
|$PH
D$XH
l$0H
|$0H9
|$XH
[]A\A]A^
|$0H
|$XH
AWAVAUATUSH
t$(dH
D$pH
D$ H
D$pH
D$@H
D$` 
l$hH
D$HH
D$PH
D$XH
|$xH
t$pH
|$ H
H;D$
D$`*
t$h1
D$HH
D$PH
D$XH
D$@H
\$0H
t$(H
D$ H
|$pH
[]A\A]A^A_
D$@H
D$ H
|$pH
AWAVI
AUATUSH
t$0L
D$8H
D$@H
D$HH
l$`H
|$`H9
[]A\A]A^A_
=xyO
==yO
|$`H
AWAVAUATI
t$`H
D$hH
D$pH
D$xH
D$`H
\$@L
[]A\A]A^A_
D$0H
l$ H
AWAVI
AUATUSH
=BsO
t$0L
\$XH
D$8H
D$@H
D$HH
l$`H
|$`H9
[]A\A]A^A_
=`qO
=%qO
|$`H
AWAVI
AUATUSH
t$pH
D$xH
[]A\A]A^A_
AWAVAUATUSH
L$XH
t$PH
|$(H
D$HH
D$`H9
D$8H
L$ H
L$pH
L$ H
D$xH
L$0H
t$HL
D$hH
L$`H
T$XH
|$PL
[]A\A]A^A_
H;\$8
|$@I
L$8A
D$8H9
D$xH
\$8A
|$HH
|$ H
AWAVI
AUATUSH
t$PH
D$p5
D$XH
D$`H
D$hH
=^gO
[]A\A]A^A_
AWAVAUATI
=_fO
d$PH
D$0H
T$8H
|$ H
D$8H
D$@H
L$0H
t$@H
|$pH
[]A\A]A^A_
fff.
AWAVI
AUATI
[]A\A]A^A_
D$ H
d$PH
|$pH
D$0H
D$8H
T$ H
t$81
D$ H
D$ H
D$@I
T$HM
|$ H
|$0H
|$(H
d$`H
|$0H
|$(H
|$8H
L$@H
T$HH
|$ H
D$ H
|$ H
ATUH
D$(1
T$(dH3
0[]A\
AWAVAUATUSH
|$8H
D$0H
D$(H
|$pH
|$ H
UUUUUUU
D$ H
|$pH
D$(H
D$0H
d$PH
|$8I
D$XH
T$P1
[]A\A]A^A_
l$@H
T$ H
|$pH
T$(H
T$0H
ATUI
D$(1
L$(dH3
0[]A\
AWAVAUATL
fXUSH
|$ L
|$0H
|$ M
D$(H
D$0L
D$pL
|$ H
|$(H
[]A\A]A^A_
|$(H
D$ H
AWAVI
AUATI
D$OH
|$0H
t$8H
D$PH
D$PI
D$XH+D$PH
l$PH;l$X
H9l$X
|$pH
I;\$
H9l$X
D$8H
\$0H
[]A\A]A^A_
D$PH
AVAUI
ATUH
\$pH
|$pH
D$xH
l$PH
|$PH9
|$xH
[]A\A]A^
=B:O
|$PH
|$xH
AVAUI
ATUH
\$PH
|$PH
D$XH
l$0H
|$0H9
|$XH
[]A\A]A^
5|<!
|$0H
|$XH
AWAVAUATI
[A\A]A^A_]
5M9!
=l4O
==4O
AUATH
\$@H
d$`H
l$ M
|$@H9
L$ H
D$(H
5 3#
[]A\A]
5,6!
=F1O
|$@H
fffff.
AWAVI
AUATH
~ USH
d$`H
t$ M
|$`L9
L$ H
D$(H
\$@H
[]A\A]A^A_
5'3!
t$ I
|$`I
AWAVI
AUATH
~ USH
\$pH
|$pH
D$xH
d$ H
|$ L9
|$HH
|$xH
$H9D$
[]A\A]A^A_
|$ I
|$HH
|$xH
AWAVI
AUATUSH
l$`1
l$@1
\$ L
\$ L
\$ L
\$ H
ZYH9
[]A\A]A^A_
AWAVI
AUATUSH
[]A\A]A^A_
L$pH
|$0H
L$PH
|$0H
T$(H
t$ H
|$0H
|$ H
|$(H
Z^H9
X H9
|$0H
|$0H
|$(H
|$ H
AWAVI
AUATI
D$`H
t$0H
t$(L
T$(H
L$ H
t$ H
l$PH
[]A\A]A^A_
D$ H
5)	 
|$ H
\$@H
L$(L
D$ H
D$ H
|$0H
|$0H
AWAVAUATI
D$@H
L$ H
l$pH
D$8H
t$(L
D$0H
|$ H
T$ H
H;|$0t
D$@H
t$PH
t$XH
[]A\A]A^A_
t$XH
t$PH
|$8H
|$(H
D$ H
AWAVI
AUATI
=?	O
D$ I9
JhH9
PhH9
l$pH
5,} 
[]A\A]A^A_
H9D$ I
5&| 
g8L9d$ 
D$0I
D$8H
D$(H
D$@H
|$0H
D$8I
D$(H
t$(H
H;|$@t
H;|$8t
H9D$ I
|$XH
|$PH
5bw 
l$`H
|$XH
|$PH
T$(H
ATUI
D$X1
D$(H
D$8H
t$0H
L$XdH3
`[]A\
AWAVI
AUATH
l$@H
|$@H
D$`H
t$ M
t$(H
L$ I
L$ H
t$(H
L$ H
|$`H
[]A\A]A^A_
D$ H
|$`H
D$ H
|$@H
AWAVI
AUATI
\$@H
5`p 
|$@H
D$`H
|$ H
|$ L
T$ H
D$(I
T$ H
D$(H
D$ L
|$`H
[]A\A]A^A_
|$ H
|$`H
|$@H
AWAVI
AUATH
\$PH
D$pH
|$PH
l$0H)
\$@H
[]A\A]A^A_
|$PH
AWAVI
AUATI
|$xdH
D$pH
D$0H
t$(H
T$0L
L$8H
\$0H
l$PL
H9\$8
D9l$
\$(H
[]A\A]A^A_
D$0H
D$0H
|$(H
D$0H
AUATI
([]A\A]
fffff.
AWAVAUATI
D$?H
L$@H
D$@H
D$@I
L$@H
D$HH
\$pH
L$@H
D$HH
D$@L
[]A\A]A^A_
D$@H
AWAVAUATI
D$?H
L$@H
5x` 
D$@H
D$@I
L$@H
D$HH
\$pH
L$@H
D$HH
D$@L
[]A\A]A^A_
D$@H
AWAVI
AUATI
\$pI
|$pH
D$xH
l$PH
|$PH9
|$xH
l$0H)
\$@H
[]A\A]A^A_
|$PH
|$xH
AWAVI
AUATI
\$PH
l$pH
|$PH9
l$0H)
\$@H
[]A\A]A^A_
|$PH
fffff.
AWAVAUATM
\$`H
|$`H
|$ L
|$ L
l$ H;l$(L
d$@L
H9l$(t]H
\$PH
H9l$(u
[]A\A]A^A_
|$ H
|$`H
AWAVI
AUATI
|$`H
\$`1
D$hH
|$@H9
|$hH
l$ H
[]A\A]A^A_
|$hH
|$@H
AWAVI
AUATI
|$(H
|$`H9
\$0H
|$(L
\$ H
D$HH
l$HH
5iP 
D$(H
H;|$
H;|$
D$ H
t$@H
[]A\A]A^A_
|$`H
|$ H
AWAVI
AUATI
D$pH
|$pH
5/L 
5wK 
|$0I
\$0H;\$8H
l$PL
H9\$8u
5`J 
[]A\A]A^A_
|$0H
5ag 
l$ H
51g 
AWAVAUATI
\$`H
5(E 
|$`H
|$ L
l$ H;l$(L
d$@L
H9l$(t]H
\$PH
H9l$(u
[]A\A]A^A_
|$ H
|$`H
AWAVI
AUATI
\$PH
5lB 
|$PH
\$pH
|$pH
l$0H)
\$@H
[]A\A]A^A_
|$pH
|$PH
AWAVI
AUATI
\$PH
|$PH
\$pH
|$pH
l$0H)
\$@H
[]A\A]A^A_
|$pH
|$PH
AWAVI
AUATI
\$pI
l$PH
|$PH9
|$xH
l$0H)
\$@H
[]A\A]A^A_
|$PH
|$xH
AWAVI
AUATI
l$pL
d$PH
|$PL9
|$xH
l$0H)
\$@H
[]A\A]A^A_
|$PI
|$xH
AWAVI
AUATUSH
|$8H
D$0H
D$@H
D$@H
D$@H
d$`H
D$@H
t$(H
D$@H
D$@H
t$ H
D$@H
D$@L
D$8H
t$@I
D$(H
D$ H
T$@H
D$HI
T$@H
D$HH
D$0H
[]A\A]A^A_
D$@H
T$0H
T$(H
T$ H
D$@H
D$@H
D$@H
D$@H
D$@H
AWAVI
AUATI
5DK 
l$0H
|$xI
l$PH)
\$`H
[]A\A]A^A_
|$xI
AWAVI
AUATI
\$pI
|$pH
D$xH
l$PH
|$PH9
|$xH
l$0H)
\$@H
[]A\A]A^A_
|$PH
|$xH
AWAVI
AUATI
[]A\A]A^A_
D$ L
D$ H
50, 
D$ H
t$ I
T$ H
D$(H
d$@1
T$ H
D$(H
d$`L
5.D 
D$ H
D$ H
AWAVAUATI
t$ H
5EE 
D$0H
t$ H
T$8H
\$0I
t$PH
T$8H
\$0H
\$`H
5`& 
\$8H
D$(H
D$(H
t$(L
t$ H
T$0H
D$8I
t$pH)
T$0H
D$8H
D$ I
[]A\A]A^A_
UUUUUUU
t$(L
D$0H
D$0H
D$0H
fffff.
AWAVAUATI
T$ H
5y  
D$pH
T$hL
D$hH
L$pH
D$xH
D$@H
|$8H
D$HH
D$0H
D$Xf
\$(L
\$HH
|$0H
|$8L
D$ H
D$ H9h
tmH9l$PA
|$0H
t$0H
t$8H
L$PA
D$ H
L$pH
D$xH
[]A\A]A^A_
t$0H
|$XH
D$pH
D$`H
|$0H
|$HH
|$@H
t$0I
D$pH
|$0H
|$0H
AWAVAUATI
[A\A]A^A_]
AWAVAUATI
|$0H
[A\A]A^A_]
|$@H
AWAVI
AUATI
d$PH
\$0H
d$PM
D$PH9D$X
\$0H
\$0H
t$pH
[]A\A]A^A_
\$0H
|$ H
D$ H
|$(H
l$(H
D$ H
D$PH9D$X
\$0H
\$0H
D$ H
|$ L
D$ H
\$0H
\$0H
\$0H
d$PH
D$ H
\$0H
|$ H
T$ H
AWAVI
AUATI
\$pH
|$pH
\$0H
D$0H
D$PH9
L$XtzD
l$PH
t$(H
D$(f
D$ H
t$ H
[]A\A]A^A_
D$PH
D$XH
|$pH
AWAVAUATI
[]A\A]A^A_
|$PL
t$XH9t$P
T$pH
D$(H
L$8H
T$@H
D$HH
l$@H
|$XH
T$8L
H;D$
D$'usH
H;D$(u
|$XH;|$`
|$XH
|$@H
\$'H
t$XH;t$P
|$0L
|$8H
|$@H
AWAVI
AUATI
D$`H
t$(H
T$0H
D$ H
D$hH
D$xH
\$@L
t$pH
[]A\A]A^A_
D$ L
d$xH
L$(H
H;|$
H;|$
D$ H
t$ L
T$0H
D$(H
H;|$
H;|$
t$0H
|$0H
|$(H
|$ H
AWAVAUATI
D$h1
L$hdH3
x[]A\A]A^A_
\$ L
t$@H
t$@H
T$@H
=cnN
|$@I
|$@I
\$ H
|$@I
AWAVL
AUATUSH
\$PH
d$pH
|$PH9
t$0H)
\$@H
[]A\A]A^A_
|$PH
fffff.
AWAVL
AUATUSH
\$`H
D$ H
t$ M
|$`H9
T$ H
D$(I
t$@H)
T$ H
D$(I
\$PH
[]A\A]A^A_
|$`H
D$ H
ATUI
D$(1
D$(dH3
0[]A\
AWAVI
AUATI
D$pH
t$@M
t$`M
4$H)
D$PH
D$(H
|$ L
t$(H
t$ H
[]A\A]A^A_
|$(H
AUATI
\$ H
D$x1
l$@H
|$ H
D$xdH3
[]A\A]
|$ H
AUATI
D$(1
L$(dH3
8[]A\A]
AWAVI
AUATI
t$0H
\$`dH
D$Pr
l$XH
D$8H
D$@H
D$HH
|$`H
[]A\A]A^A_
|$`H
fff.
AVAUI
ATUH
D$(1
T$(dH3
0[]A\A]A^
fffff.
AWAVI
AUATI
=?YN
t$0H
\$`dH
l$XH
D$8H
D$@H
D$HH
|$`H
[]A\A]A^A_
=MWN
|$`H
fff.
AVAUI
ATUH
D$(1
T$(dH3
0[]A\A]A^
fffff.
AWAVI
AUATI
\$0H
l$PH
|$PH
|$0H
|$pH
D$xH
|$xI
[]A\A]A^A_
|$xI
|$PH
|$0H
fffff.
AWAVM
AUATI
D$(1
T$(dH3
8[]A\A]A^A_
AWAVI
AUATI
\$0H
l$PH
|$PH
|$0H
d$pH
|$pH
D$xH
|$xI
[]A\A]A^A_
|$xI
|$PH
|$0H
AWAVM
AUATI
D$81
T$8dH3
H[]A\A]A^A_
AWAVI
AUATH
\$pH
|$pH
D$xH
l$PH
|$PH9
|$xH
l$0L
t$0H
D$8H)
[]A\A]A^A_
|$PH
|$xH
fffff.
AWAVAUATUSH
|$8H
D$`E1
D$ H
D$0H
t$ H
t$(H
\$pH
D$(H
D$HH
|$0H
D$@H
H;|$
|$8M
|$HH
|$(H
|$ H
[]A\A]A^A_
l$PH
t$HH
|$HH
|$(H
|$ H
D$0H
AWAVI
AUATI
t$0H
\$`dH
D$Pd
l$XH
D$8H
D$@H
D$HH
|$`H
[]A\A]A^A_
|$`H
fff.
AWAVI
AUATH
\$ H
l$@H
|$@H
|$ H
l$`H
|$hH
[]A\A]A^A_
|$hH
|$@H
|$ H
AWAVI
AUATUSH
D$ I
l$pH
|$(H
D$0H
t$(H
D$8H
L$0H
l$@H
|$ H
|$ L
t$0I
t$8I
t$ H
t$ H
t$8H
t$PH
t$hH
l$PH
[]A\A]A^A_
|$0H
|$0H
|$8H
|$`I
AWAVAUATI
t$D@
t$CH
l$pH
D$HH
=v3N
t$dH
t$hH
=<+N
[]A\A]A^A_
\$HH
t$dH
t$hH
t$lH
|$HH
D$HH
fff.
AWAVI
AUATI
\$0H
l$PH
|$PH
|$0H
|$xI
[]A\A]A^A_
|$xI
|$PH
|$0H
AWAVM
AUATI
D$(1
T$(dH3
8[]A\A]A^A_
AWAVI
AUATUSH
D$ H
d$`H
D$ H
t$ M
|$`L9
T$ H
D$(I
t$@H)
T$ H
D$(I
\$PH
[]A\A]A^A_
|$`I
D$ H
D$ H
ffff.
AWAVAUATUSH
|$@H
t$`H
D$(H
D$ H
D$PH
D$hH
D$ L
D$(H
D$XH
D$(H
D$hH
L$PH
|$xH
D$(H
D$(H
t$xH
D$(A
D$PH
\$PH
t$HH
t$ H
D$ H
D$ H
D$@H9X
D$@L
D$@L
D$(H
D$ H
D$0H
D$8H
|$0L
t$8H
H;|$
D$(H
[]A\A]A^A_
D$pI
L$pH
\$@H
D$@H
t$ H
t$ H
D$(H
D$(1
|$(H
|$PH
D$PH
D$PH
|$ H
D$8H
AUATI
D$H1
d$0H
\$8H
D$(H
D$ H
\$ H
D$ H
D$HdH3
X[]A\A]
T$ H
AUATI
\$@dH
D$h1
|$@H
l$0H
\$8H
D$(H
D$ H
\$ H
D$ H
D$hdH3
x[]A\A]
T$ H
|$@H
AUATI
\$@dH
D$h1
|$@H
l$0H
\$8H
D$(H
D$ H
\$ H
D$ H
D$hdH3
x[]A\A]
T$ H
|$@H
AWAVAUATUSH
D$(H
H;|$
\$`H
t$ H
[]A\A]A^A_
l$0H
|$(I
\$PH
t$ H
\$@H
t$ H
AWAVH
AUATI
d$pH
H;l$
H;l$
T$`H
D$ht
|$hI
L$`H
|$xI
[]A\A]A^A_
D$pH
D$PH
D$XH
\$@H
T$HH
|$0H
D$HH
D$pH
D$@H
D$HH
\$ H
|$xI
fff.
AUATL
[]A\A]
AUATI
[]A\A]
fff.
AWAVAUATUSH
l$`1
[]A\A]A^A_
D$ 1
D$@H
L$ 1
D$ L
T$ L
D$ H
D$ H
AWAVI
AUATI
\$PI
D$PH9D$X
L$HH
	vd1
T$HE
D$HH
[]A\A]A^A_
D$HH
D$@H
|$ps-
T$HA
d$0H
D$ I
T$pH
H;D$
|$(@
|$ps'
D$ H
D$ H
AWAVI
AUATUSH
L$hH
D$(H
D$(H
D$PH
\$(H
D$XH
D$ H
|$XH
H;|$ t
H;\$`
|$XH
D$ L
T$XH
D$8H
D$xH
\$HH
J(H9
L$xH
t$8H
t$@H
D$0H
L$0H
L$0H
D$XH
H;l$`
H9\$hA
|$(H
t$(H
L$hA
D$(H
|$(H
D$XH
|$(H
|$pH
|$@H
|$8H
[]A\A]A^A_
|$(H
\$PH
|$(H
AWAVI
AUATUSH
D$pH
|$pH
l$PH
l$PI
D$XH
T$PH9
d$@H
[]A\A]A^A_
D$ I
\$(H
L9L$
D$ H
\$0H
l$PH
D$ H
fff.
AWAVAUATI
l$PI
D$PH
L$HH
T$HE
D$HL
l$0H
t$pL
[]A\A]A^A_
D$HH
D$@H
|$pv-
T$HA
D$ I
T$pH
H;D$
|$(@
|$pv'
D$ H
D$ H
ffff.
AUATH=
|8H9
|&H9
[]A\A]A^
AWAVAUATUSH
|$ L
|$ L
|$ L
|$ L
|$ L
|$ L
|$ L
|$ H
L$|H
t$|L
|$|NTM_t
t.f.
D$HH
D$PH
D$8H
H;P8}
[]A\A]A^A_
L$8H
D$PH
|$8H
t$8L
|$XL
|$8L
t$8H
H;|$@t
H;|$Pt
t$|L
l$8L
|$ H
T$HH
|$ H
t$hH
t$lH
t$pH
t$tH
t$xH
Y^t5H
|$HH
t$8H
t$@H
t$HH
t$PH
t$XH
|$0H
|$8H
|$8H
|$HI
|$PH
l$PL
|$PH
|$XH
D$8H
|$XH
D$8H
AUATI
D$x1
l$0I
|$0H
l$PH
|$PH
D$xdH3
[]A\A]
|$PH
|$0H
fff.
AWAVH
AUATUSH
D$(H9
D$PH
L$8H
|$pL
D$(H
|$XH;|$`
|$XH
t$XH;t$P
D$XH
T$XH
D$xH
|$XH;|$`
|$XH
|$XH
t$XH9t$P
L$8H
D$(H9
|$@L
[]A\A]A^A_
d$0H
D$ L9
tDH;l$ t=H
T$Ht
t$0H
AUATI
D$X1
l$0I
|$0H
D$XdH3
h[]A\A]
|$0H
AUATI
D$x1
d$0H
|$0I
d$PH
|$PI
D$xdH3
[]A\A]
|$PI
|$0I
tPrf
dH34%(
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AWAVAUATUSH
t$ H
D$h1
D$ H
|$@1
l$@H
T$HH
t$@L
|$@L9
|$ I
D$hdH3
x[]A\A]A^A_
|$@I
|$ I
D$(1
D$(dH3
C(H9
ATUH
r-H9w
[]A\
[]A\
ATUH
[]A\
AVAUATUSL
]A\A]A^
[]A\A]A^
AUATH
\$ H
D$H1
|$ H
D$HdH3
X[]A\A]
|$ H
AVAUATUSL
]A\A]A^
[]A\A]A^
AWAVAUATI
D$81
L$ D
D$,H
tfI9]
\$0H
L$,L
D$ H
H9\$
L$8dH3
H[]A\A]A^A_
AUATH
\$ H
D$H1
|$ H
D$HdH3
X[]A\A]
|$ H
AUATH
\$ H
D$H1
|$ H
D$HdH3
X[]A\A]
|$ H
AUATH
\$ H
D$H1
|$ H
D$HdH3
X[]A\A]
|$ H
AVAUATUSL
]A\A]A^
[]A\A]A^
AVAUATUSL
]A\A]A^
[]A\A]A^
AWAVAUATI
C(H9
[]A\A]A^A_
G(H9
AWAVAUATUSH
L$h1
D$@L
d$ H
t$PH
t$@H
l$ H
|$ A
|$@L9
 H;\$
L$hdH3
x[]A\A]A^A_
|$ I
|$@H
ATUSH
[]A\A]A^
AWAVH
AUATUSH
L;$$t)H
[]A\A]A^A_
[]A\A]A^A_
AWAVH
AUATH
-wNN
$H9X
[]A\A]A^A_
H9\$
[]A\A]A^A_
AWAVH
AUATUSH
L;$$t)H
[]A\A]A^A_
[]A\A]A^A_
AUATI
[]A\A]
AWAVH
AUATI
-*KN
t>I9]
[]A\A]A^A_
H9\$
]A\A]A^A_
AWAVH
AUATH
L$ H
L$81
D$,H
-wIN
\$0H
L$,L
D$ H
H9\$
L$8dH3
H[]A\A]A^A_
ATUSH
[]A\A]A^
AWAVH
AUATH
L$ H
L$81
D$,H
\$0H
L$,L
D$ H
H9\$
L$8dH3
H[]A\A]A^A_
AWAVH
AUATI
[]A\A]A^A_
ATUSH
[]A\A]A^
AVAUATUSH
[]A\A]A^
ATUSH
[]A\A]A^
AVAUATUSH
[]A\A]A^
ATUSH
[]A\A]A^
ATUSH
C8H9
[]A\A]A^
AWAVAUATI
[]A\A]A^A_
AWAVH
AUATUSH
L;$$t)H
[]A\A]A^A_
[]A\A]A^A_
AUATI
[]A\A]
=)TM
AWAVH
AUATUSH
L;$$t)H
[]A\A]A^A_
[]A\A]A^A_
ATUH
[]A\
[]A\
="RM
ATUH
D$81
D$ H
T$(t
l$ H
D$8dH3
@[]A\
ATUSH
[]A\A]A^
AWAVAUATI
[]A\A]A^A_
AWAVI
AUAT
[]A\A]A^A_
x8I9
{8I9
AWAVI
AUATI
[]A\A]A^A_
AWAVAUATUSH
eXL+eP
D$hH
D$pH
D$xH
D$@H
[]A\A]A^A_
H9|$@t
H9|$
H;|$xt
H;|$pt
H9|$
H9<$t
H;|$ht
tkAVAUATUH
[]A\A]A^
AWAVAUATL
[]A\A]A^A_
AWAVAUATI
D$(1
I;D$
L$(I
D$(H
t$ I
$t=H
D$(dH3
8[]A\A]A^A_
\$ H
AWAVAUATUSH
D$X1
l$0H
D$/H
t$0L
|$0L9
D$XdH3
h[]A\A]A^A_
|$0I
AWAVAUATI
S8tPH
dH34%(
([]A\A]A^A_
AWAVAUATUSH
D$X1
l$0H
D$/H
t$0L
|$0L9
D$XdH3
h[]A\A]A^A_
|$0I
AWAVAUATI
]A\A]A^A_
AWAVAUATUSH
D$X1
l$0H
D$/H
t$0L
|$0L9
D$XdH3
h[]A\A]A^A_
|$0I
AWAVAUATI
[]A\A]A^A_
AVAUATUI
[]A\A]A^
AUATUSH
[]A\A]
]A\A]
AWAVH
AUATH
|$ H
D$(H
D$ H9X
[]A\A]A^A_
H9\$(A
L$(H
[]A\A]A^A_
AVAUATI
[]A\A]A^A_
D$ H9
AUATI
[]A\A]
AWAVH
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATI
D$H1
t$0H
D$HdH3
X[]A\A]A^A_
t$0H
AUATI
[]A\A]
AUATI
[]A\A]
AWAVAUATUSH
D$(1
D$(dH3
8[]A\A]A^A_
~"f.
,;H9
AWAVAUATI
([]A\A]A^A_
L+;H
tGI9
AWAVI
AUATI
\$pH
|$pH
|$PI
H;l$
d$0L
H9l$
\$@H
H9l$
[]A\A]A^A_
|$pH
|$PI
AWAVAUATI
|$PH
\$pL
|$pH
D$xH
|$xH
H;l$
d$0L
H9l$
\$@H
H9l$
[]A\A]A^A_
|$PH
|$xH
AUATI
|$8H
\$@H
D$@H
D$PH
t$pH
tkE1
D$@H
[]A\A]
D$@H
AUATI
[]A\A]
AWAVAUATI
([]A\A]A^A_
L+;H
tMI9
AUATI
[]A\A]
AUATI
[]A\A]
AWAVAUATI
([]A\A]A^A_
L+;H
tMI9
AUATI
[]A\A]
AWAVAUATI
([]A\A]A^A_
L+;H
tMI9
AUATI
[]A\A]
AWAVI
AUATI
[]A\A]A^A_
t&M9
AUATI
[]A\A]
AWAVAUATI
([]A\A]A^A_
L+;H
tMI9
AWAVI
AUAT
[]A\A]A^A_
AWAVAUATUSH
L$(H
L$@H
D$HH9
L$Pr
	vI1
D$(@
[]A\A]A^A_
T$PL
L$PL
L$HL9
|$0L
D$@I
D$8u
|$0H
-u81
D$(H
D$`L
l$hM
|$`A
D$PH9
|$01
|$`D
D$PH
D$HH9D$PL
l$0s
D$PH
H9D$HH
D$PwCL
|$`L
H;L$Pw
D$PH
H9D$HH
D$Pw
|$`I
ATUSI
teI9
~:L9
[]A\
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
AWAVL
AUATUSH
([]A\A]A^A_
AWAVAUATL
([]A\A]A^A_
fffff.
fff.
fff.
fff.
fff.
fff.
ATUI
[]A\
ATUH
StbA
[]A\A]A^
AVAUATUH
D$x1
l$ 1
t$PL
D$PI
|$XI
|$(I
D$xdH3
[]A\A]A^
|$(I
|$XI
AWAVAUATUSH
[]A\A]A^A_
D$@H
d$@H
|$HH
l$8H
D$0L9
D$0L
t$`L
|$HI
D$hH
l$ H
ChH9
l$pH
|$HI
\$@I9
|$@H
d$HH
l$@I9
|$@H
ChH9
AVAUATUSH
]A\A]A^
]A\A]A^
fffff.
AWAVAUATI
|$(H
D$pH
\$0H
d$`H
\$@H
t$(L
|$ H
[]A\A]A^A_
\$PH
|$ H
AWAVI
AUATUSH
|$ H
t$0H
D$PH
\$`I
D$PH;D$
d$XM
T$`I9
D$PL
l$XB
9v`H
D$PH;D$
\$XL
T$`I9
D$PL
l$pH
t$PI
D$pH
H9D$x
t$pH
T$xH
t$ L
|$pH
|$PH
[]A\A]A^A_
|$pH
|$PH
AWAVI
AUATI
l$ H
l$PE
D$PH
d$pH
|$pI
d$0D
|$PH
C`H9
[]A\A]A^A_
|$PH
|$pI
AWAVAUATI
[]A\A]A^A_
D$PH
t$PH
D$0H
D$@H
T$XH
H+D$8H
|$PH
D$pH
|$0H
d$ H
{(I9
|$0H
|$0H
|$PH
C8H9
C8H9
AWAVAUATI
D$`H9
[]A\A]A^A_
AUATI
[]A\A]
AWAVI
AUATI
D$H1
D$06
l$8H
D$ H
D$(H
D$HdH3
X[]A\A]A^A_
AUATI
[]A\A]
D$(1
\$ H
L$(dH3
AVAUI
ATUH
D$H1
l$8H
D$ H
D$(H
D$HdH3
P[]A\A]A^
AWAVAUATI
[]A\A]A^A_
|$ L
D$ H
D$ H
|$ H
l$`H
|$ H
L$ H
D$ H
D$ H
D$ L
l$ L
D$(H
|$PH
T$(H
t$(H
D$HH
D$0H
D$PH
D$ H
T$@H
D$(H
|$ H
D$(H
|$ H
D$@I
T$XH
D$@H
T$XH
|$0H
L$@H
|$ E1
|$8H
t$PH
t$@H
|$ H
AWAVAUATI
l$ dH
D$X1
D$XdH3
h[]A\A]A^A_
fff.
AWAVAUATUSH
t$pH
l$ 1
t$ H
\$0H
|$PH
\$PL
D$XI
|$8H
D$0H
|$@H
[]A\A]A^A_
|$8H
D$0H
|$@H
AVAUATUSH
D$h1
\$0L
D$hdH3
p[]A\A]A^
\$0H
AVAUATUI
D$h1
|$XH
L$hdH3
p[]A\A]A^
AWAVI
AUATI
d$ L
l$@L
[]A\A]A^A_
AVAUI
ATUH
\$ L
l$pH
[]A\A]A^
fff.
AWAVAUATI
G`H9
l$PH
D$PI
|$(H
D$8H
D$0H
ChH9
D$8H9
|$XH
[]A\A]A^A_
l$ H
|$XH
ChH9
AWAVAUATI
\$0H
F`I9
\$0I
l$PE1
t$ H
t$pH
[]A\A]A^A_
t$ H
\$0H
fffff.
AWAVAUATI
L$ L
D$0H
D$@L
L$8M
\$HI
t$8H
\$HI9
L9l$8
\$pH
t$(H
D$0H
|$ H
[]A\A]A^A_
t$ H
\$`H
l$PH
|$@L
t$@H
|$@L
D$0H
|$ H
D$ H
|$8H
fff.
AWAVAUATUSH
|$8dH
t$0H
L$(H
D$8L
|$8H
|$0H
|$0H
|$(L
[]A\A]A^A_
l$pH
D$8L
l$PH
l$`H
t$0L
l$@H
=q|L
t$0L
|$ I
AWAVAUATUSH
t$ H
\$pL
l$0H
d$PE1
t$ H
[]A\A]A^A_
t$ H
=QuL
fffff.
AWAVAUATUSH
T$HH
D$XH
D$8H
D$ I
D$(I
D$ H
H;|$ t
D$HH
D$(H
H;|$(t
t$0H
D$@H
t$0H
|$8H
D$XH
t$PI
[]A\A]A^A_
t$@H
=ViL
D$XH
|$0H
T$`H
T$`H
H;|$ H
|$(H
T$hH
T$hH
D$`H
T$`H
T$`H
H;|$(t
|$0H
|$PH
D$PH
t$|H
AVAUI
ATUI
%dcL
D$(1
D$(dH3
0[]A\A]A^
=q`L
=!_L
ATUI
[]A\
C8H9
C8H9
AVAUI
ATUI
D$(1
D$(dH3
0[]A\A]A^
t	H;7
57bL
5V6M
AWAVAUATI
D$81
L$ D
D$,H
tvI9]
\$0H
L$,L
D$ H
H9\$
L$8dH3
H[]A\A]A^A_
ATUSH
[]A\A]A^
ATUSH
[]A\A]A^
ATUSH
[]A\A]A^
C8H9
C8H9
AWAVH
AUATUSH
L;$$t)H
[]A\A]A^A_
[]A\A]A^A_
AWAVH
AUATH
$H9X
[]A\A]A^A_
H9\$
[]A\A]A^A_
AWAVH
AUATUSH
[]A\A]A^A_
AWAVAUATI
I;D$
T$(H
D$(H
[]A\A]A^A_
t$ I
[]A\A]A^A_
AWAVH
AUATUSH
5$(M
([]A\A]A^A_
AWAVAUATI
I;D$
T$(H
D$(H
[]A\A]A^A_
t$ I
[]A\A]A^A_
AWAVAUATI
[]A\A]A^A_
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
ffff.
AUATUSH
([]A\A]
=%8L
ATUI
[]A\
AWAVI
AUATI
D$H1
\$ H)
t$ H
|$ H
D$HdH3
X[]A\A]A^A_
|$ H
ATUI
D$H1
l$ H
t$0H
I+D$
D$HdH3
P[]A\
D$CH
l$0H
t$ H
l$ H
t$0H
AUATUSH
D$(1
D$ H
t$ H
D$(dH3
8[]A\A]
t$ H
AVAUI
\$0H
D$X1
|$0H
D$XdH3
`[]A\A]A^
d$ H
=e/L
|$0H
D$(1
D$(dH3
fff.
fff.
ATUSL
[]A\
AVAUI
ATUI
-7-L
D$h1
d$ H
t$ H
D$@H
T$(H9
|$@H
|$8H
T$0H
t$ H
D$hdH3
p[]A\A]A^
t$ H+D$H
|$@H
fff.
AWAVAUATUSH
[]A\A]A^A_
L$ H
t$(H
t$ H
t$`H
\$PH
D$<L
|$@H
t$pH
D$HH
D$DH
T$ H
t$ L
|$LH
T$DH
T$<H
t$(L
AWAVAUATUSH
t$@H
D$PI
t$PL
l$PL
t$0H
t$@L
|$hH
T$`H
t$PH
[]A\A]A^A_
t$@H
\$PH
D$PL
d$ H
D$PL
fffff.
AWAVAUATUSH
|$hH
t$PH
D$PH
D$PH
D$tH
D$xH
D$ H
D$0H
D$(H
|$ H
D$HH
|$ H
|$8L
D$PH
L$XH
t$XH
D$@H
D$@H
D$HH
H;|$8t
H;|$0t
9D$x
t$|H
t$ H
D$0H
D$8H
L$(L
|$(H
D$PH
L$hE1
D$hL
t$0H
D$hH
[]A\A]A^A_
|$@L
t$xL
T$tH
D$PH
L$hE1
D$hL
t$0H
D$hH
T$HH
T$(H
T$ H
D$hH
|$`H
D$hH
AVAUH
ATUI
l$`H
l$`1
D$xH
H9\$hH
|$`H
FT$hL
%>	L
D$hH
t$@H
D$ H
\$(H
D$(H
|$ H
D$0H
D$(H
D$8t
|$@L
\$@L
l$HL9
l$HH
|$0H
|$0H
l$HH
\$@A
l$@M
\$8H
\$(H
|$xH
T$pH
t$`H
[]A\A]A^
\$@E1
l$HH
l$HL
d$@M9
l$@M
|$@H
|$@H
ffff.
ffff.
ATUH
r5H9w
[]A\
[]A\
AWAVAUATI
t$ H
D$(H
D$ H
D$(I
C0H9
U8H9S8H
FS8H
CPM9
D$ H
C0H9
U8H9S8H
FS8H
|$pH
T$hH
D$(H
D$ t
|$HH
T$@H
t$0H
[]A\A]A^A_
t$0H
P@L9
$H9D$
`H9\$
D$ H
ATUI
[]A\
ATUH
[]A\
ATUI
[]A\
fff.
AUATI
[]A\A]
AWAVI
AUATUSH
l$@D
D$HH
l$`H
T$`H
H9D$h
t$`H
|$`H
\$PH
l$ L
\$PH
\$0H
[]A\A]A^A_
|$`H
AUATI
D$81
\$ L
T$(H
\$0H
L$8dH3
H[]A\A]
ffffff.
AWAVI
AUATI
l$PH
l$PH
|$0H
t$@M
\$xH
\$`H
\$ H
[]A\A]A^A_
AWAVAUATA
\$0H
D$H1
t$0L
d$0M
L$HdH3
X[]A\A]A^A_
d$8H
d$ H
|$0H
AWAVI
AUATH
D$X1
d$PM
d$8M
d$ M
D$XdH3
h[]A\A]A^A_
AVSH
[A^]
AWAVAUATI
[A\A]A^A_]
5Y, 
ATUI
[]A\
fffff.
ATUI
[]A\
D$(1
AVAUI
ATUI
D$x1
\$0H
l$PH
T$XH
t$PL
|$PH
|$0H
\$ H
D$xdH3
[]A\A]A^
|$0H
|$PH
AWAVI
AUATI
D$x1
\$0H
l$PH
T$XH
t$PL
|$PH
|$0H
\$ H
D$xdH3
[]A\A]A^A_
|$0H
|$PH
AVAUI
ATUI
D$x1
\$0H
l$PH
T$XH
t$PL
|$PH
|$0H
\$ H
D$xdH3
[]A\A]A^
|$0H
|$PH
AWAVI
AUATH
D$PD
D$XH
D$0D
D$8H
|$pM
T$xH
t$pH
|$pI
d$@M
l$`H
[]A\A]A^A_
|$pI
AWAVI
AUATH
\$0dH
l$pH
|$pH
t$PH
T$XH
t$PH
|$PI
l$ H
|$0H
[]A\A]A^A_
|$PI
|$0H
|$pH
AVAUI
ATUI
\$0L
D$x1
d$PH
T$XH
t$PH
|$PI
l$ H
|$0H
D$xdH3
[]A\A]A^
|$0H
|$PI
AWAVI
AUATH
D$@D
D$HH
l$`H
D$ L
D$(H
d$0M
|$`H
l$PH
[]A\A]A^A_
|$`H
fffff.
AWAVA
AUATI
\$PL
d$0L
d$0H
\$`H
\$@H
\$ H
[]A\A]A^A_
\$pL
ffffff.
AWAVAUATUSH
t$`H
D$@H
D$PH
D$XH
D$8H
D$hH
D$ f
=pxM
5qxM
t$0L
l$(M
|$0H
T$ H
XZI9
t$0H
D$XH
|$PH
D$pI
D$`H
D$HH
H9D$p
H;|$X
l$(H
D$@H
dH3<%(
[]A\A]A^A_
=5uM
T$(L
t$0H
D$@H
]tLI
D$hH
|$8L
T$8H
H;|$ht
T$pH
T$8H
|$HH
D$hH
D$ H
|$8H
t$ H
t$xH
t$0H
L$(H
D$ H
D$hH9
|$HH
|$xH
D$(H
|$xH
|$0H
D$ H
D$8H
D$PH
|$(H
D$(H
|$xH
D$hH9
|$HH
|$HH
D$hH
D$xH
D$(H
|$(H
D$0H
|$0H
D$ H
|$8H
t$8L
T$8H
|$8H
t$8H
|$ H
t$xH
|$8H
t$8H
t$0H
t$ H
t$(H
D$ H
D$0H
D$(H
D$xH
D$hH9
|$HH
=0uL
|$xH
D$ H
D$0H
D$(H
D$xH
|$xH
D$hH9
|$HH
ATUH
D$(1
L$(dH3
0[]A\
ATUA
D$(1
L$(dH3
0[]A\
ATUA
D$(1
L$(dH3
0[]A\
9A8y
9A8y
@89t^I
@89t6M
9A8x
9A8z
A88u
ATUI
[]A\
fffff.
ATUI
[]A\
AWAVI
AUATH
\$0dH
5`lL
l$pH
|$pH
t$PH
T$XH
t$PH
|$PI
l$ H
|$0H
[]A\A]A^A_
|$PI
|$0H
|$pH
AVAUI
ATUI
\$0L
D$x1
d$PH
T$XH
t$PH
|$PI
l$ H
|$0H
D$xdH3
[]A\A]A^
|$0H
|$PI
AWAVI
AUATH
D$@D
D$HH
56gL
l$`H
D$ L
D$(H
d$0M
|$`H
l$PH
[]A\A]A^A_
|$`H
ffffff.
AWAVAUATUSH
=j@M
t$HH
D$8H
D$XH
D$`H
D$@H
D$hH
D$ f
|$0L
t$(M
|$0H
T$ H
XZI9
|$0H
D$`H
|$XH
D$0I
|$xM
|$ H
|$PH
H9D$0
H;|$`
t$(H
D$8H
dH3<%(
[]A\A]A^A_
=|;M
=-@L
5O;M
T$(L
t$0H
D$8H
]tJI
D$hH
|$@L
D$xH
D$(H
==tK
|$@H
D$HL
D$(H
H;|$xt
H;|$ht
T$0H
|$(H
|$@1
D$pH
t$pL
D$pH
D$HH
t$pL
|$HH
|$(H
|$@H
D$HL
|$HA
D$(H
D$@H
D$XH
|$pH
D$pH
D$pH
=vbK
=7bK
=&`K
ATUI
[]A\
AWAVAUATI
([]A\A]A^A_
I;D$
t$ H9
@uhH
[]A\A]A^A_
I;D$
[]A\A]A^A_
AWAVAUATI
D$HH
D$@H
t$HE1
D$hH
t$pH
l$`H
t$pH
[]A\A]A^A_
T$@H
5c8L
T$`H
|$ H
|$0H
T$@H
T$@H
T$`H
5D4L
CPH9
C0H9
ATUSH
]`I9
EPH9
E0H9
[]A\
ATUH
]`I9
EPH9
E0H9
[]A\
[]A\
CPH9
C0H9
AUATUSH
D$H1
D$HdH3
X[]A\A]
|$ H
5++L
|$ H
AUATUSH
D$H1
D$HdH3
X[]A\A]
|$ H
|$ H
AWAVAUATI
9w0uBH
D$0H
[]A\A]A^A_
T$0L
l$ D
D$8M
|$@L
|$`H
|$`I
|$ H9
|$@H
|$`I
|$ H
|$@H
AWAVH
AUATH
D$hH
t$hL
57&L
D$hH
D$ H
|$hH
t$hL
t$ H
53$L
D$hH
t$hL
t$ H
D$hH
L$0H
L$XH
L$@H
L$`H
L$Hf
L$0H
|$(L
|$XH
D$@H
D$HH
|$`H
\$ H
D$PH
D$8H
H;\$8
L$8A
D$PH
D$ H
D$ H
H;|$Ht
H;|$@t
D$0H
D$(H
t$hL
t$ H
|$(L
\$8A
D$hH
D$ H
D$ L
D$ H
D$ E1
D$ H
D$ H
[]A\A]A^A_
t$hH
t$ H
D$hH
t$ H
t$hH
D$hH
t$hH
t$ H
D$hH
t$hH
t$ H
D$hH
t$ H
D$hH
D$0H
D$(H
l$pH
t$ H
t$hH
D$hH
} I9
D$hH
D$hH
t$ H
D$`H
D$XH
D$ H
t$ H
t$hH
D$hH
t$ H
AWAVH
AUATH
[]A\A]A^A_
H9\$
[]A\A]A^A_
AWAVH
AUATH
[]A\A]A^A_
H9\$
[]A\A]A^A_
AWAVAUATUSH
D$ H
D$(H
D$0H
|$ H
t$ H
H;|$
H;<$t
|$ H
|$@H
D$PH9
D$0H9
[]A\A]A^A_
\$0H
D$(H
D$ H
|$PH
\$`H
} I9
AWAVAUATUSH
D$(H
D$HH
|$(H
t$(H
H;|$
H;|$
C0L9
C0L9
C0L9
C0L9
D$0H
D$8H
D$@H
|$ L
[]A\A]A^A_
\$PH
D$HH
D$(H
\$pH
@H9|$@t
 H9|$8t
?H9|$0t
L;d$
o`I9
ATUI
[]A\
ATUH
[]A\
AWAVAUATI
D$H1
l$ L
l$ L
|$ L9
D$HdH3
X[]A\A]A^A_
D$ H
|$ H
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
\$ H
D$H1
D$ H
|$ H
D$HdH3
X[]A\A]
|$ H
AUATI
D$(1
D$(dH3
8[]A\A]
AWAVI
AUATI
l$`H
l$`L
D$`H
D$hH
$I;\$
0I9\$
d$ H
|$ I
D$`H
D$hH
E`H9
[]A\A]A^A_
d$@H
T$@H
|$@I
|$@I
|$ I
AWAVI
AUATUSH
l$pH
o@I9
A92L
E H9
E`H9
C H9
[]A\A]A^A_
D$ H
4(ts
H;<$
T$ H
D$(@
D$8H
D$@H
D$PH
T$ H9D$ 
T$0H
T$ H
E@I;G
t$(H
T$ I
L$hH
D$0H
L$`L
T$0L
D$XL
L$hH
L$`J
8@8:
\$0H
H;|$Ht
|$0@I
D$0H
T$0A
\$ H
B:t*
\$0H
D$@H
D$8H
H;D$@H
H;|$@
A8:t
U@H9
\$ H
l$0H
D$0H
T$0I
B8D.
L$0I
T$PH
D$ H
T$8H
D$8A
\$ H
D$8H
D$PH
D$ H
AUATI
\$ H
D$H1
D$ H
|$ H
D$HdH3
X[]A\A]
|$ H
AUATUSH
[]A\A]
C8H9
C8H9
C8H9
AUATUSH
[]A\A]
AWAVAUATUSH
K H9
wXtFM
([]A\A]A^A_
L;{0v
L;x0s
H;k r
I9](t
H H9
L;{0
AVAUI
ATUSL
]A\A]A^
ATUSH
C H9
[]A\
ATUH
\$(H
t|[H
[]A\
ATUH
\$(H
ATUSL
\$8H
\$(H
[]A\
AWAVAUATI
D$H1
|$ I
D$HdH3
X[]A\A]A^A_
UUUUUUU
,$L9
C H9
C H9
$t7H
C H9
UUUUUUU
|$ I
C H9
AWAVI
AUATUS1
L$0H
D$`H
D$ H
D$HH
D$8H
D$ H
@ H9
\$hH;\$`tP
H;D$
t$hH;t$p
t$hH
t$hH
H;|$
\$PH
\$hH
T$ H
t$hH
Q(H;t$pH
t$hH
t$hH;|$8t
X0H)
L$0H
\$hH;\$`tz
@0H9
H;D$
t$hH;t$p
t$hH
t$hH
H;|$
\$hH
t$@H
l$hH
\$`H9
t*f.
C H9
l$`H
[]A\A]A^A_
T$HH
D$HH
D$ H
AWAVAUATUSH
~;f.
[]A\A]A^A_
t$ H)
AVAUI
ATUI
D$(1
M;l$
I+D$
T$ H
|$ I
D$0H
D$(dH3
0[]A\A]A^
AWAVAUATUSH
o0dH
D$X1
|$0H)
D$0H
t$HH
l$0H
D$8H
D$8H
D$@H
D$HH
\$0H
Z H)
\$0H
\$0H
\$0H
\$0H
\$0H
\$0H
\$0H
D$(H
L$ L
D$(H
L$ L
D$XdH3
h[]A\A]A^A_
\$0H
\$0H
ATUSH
o0dH
D$(1
$tOH
D$(dH3
0[]A\
t/ATI
[]A\
AWAVI
AUATI
H;G(
H1E(
[]A\A]A^A_
H1E(
ATUI
[]A\
ATUH
[]A\
%?hK
AWAVAUATUSH
D$h1
D$hdH3
x[]A\A]A^A_
l$ I
D$ t
|$@I
|$ H
|$ H
|$@I
ATUSH
D$81
D$8dH3
@[]A\
AWAVAUATUSH
D$h1
D$hdH3
x[]A\A]A^A_
l$ I
D$ t
|$@I
|$ H
|$ H
|$@I
fffff.
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAV
AUATUSH
t$ H
|$(dH
D$pH
D$pH;D$
l$xH
D$pH
t$xB
9D$ 
H+T$xH9
t$xH
9D$ 
\$PH
l$0H
l$0H
\$`H
D$8H
|$(H
\$@H
|$pH
[]A\A]A^A_
|$pH
AVAUATUSH
D$H1
D$HdH3
P[]A\A]A^
D$ 1
|$ H
|$ H
AWAVAUATI
D$@H
|$HL
t$PH
D$8H
d$8L
D$pz
D$XH
D$`H
D$hH
D$PH
D$xH
|$@H
l$@H
[]A\A]A^A_
d$0H
d$ H
AWAVAUATI
t$(H
d$(L
t$@L
|$0L
D$pz
D$XH
D$`H
D$hH
D$PH
D$(H
D$xH
|$0H
l$0H
[]A\A]A^A_
l$ H
AWAVAUATUSH
|$`H
D$8H
L$xH
\$`H
=ieJ
t$8H
=9eJ
t$8H
=:dJ
D$0H
t$hH
D$PH
|$PH
D$pH
D$HH
D$@H
D$XH
|$`H
\$8H
t$hH
=qaJ
=#aJ
D$PH
D$PH
D$0H
[]A\A]A^A_
|$01
D$HH
|$pH
\$@H
D$XH
D$0I
|$ H
D$0H9
F0H9
ExH9
E0H9
H;<$t
D$0I
|$ H
|$hH
D$xH
D$xD
D$0H9
H;|$
|$ 1
|$ 1
D$ H
|$ 1
T$ L
D$@H
H;|$Xt
H;|$H
\$8H
t$8H
t$hH
|$hH
|$PH
D$0H
|$8H
|$@H
D$pH
|$8H
D$PH
D$PH
|$0L
|$xH
|$xH
|$xH
D$@H
ATUSH
D$(1
%1\J
T$(dH3
0[]A\
fffff.
St"H
=NTM_
ffffff.
ATUSH
\$`H
l$0H
T$hH
t$`H
|$`H
[]A\
l$@H
T$hH
t$`H
T$hH
t$`H
T$hH
t$`H
l$ H
T$hH
t$`H
l$PH
=QDJ
l$PH
|$`H
ATUSH
[]A\
%/)K
AWAVH
AUATH
t$PL
l$xH
D$xH
[]A\A]A^A_
l$`H
l$ H
l$@H
l$0H
l$pH
AWAVAUATUSH
|$(H
t$ H
d$hL
L$PH
D$hH
D$0H
D$8H
l$PL
d$(H
[]A\A]A^A_
|$0L
H;|$
|$8L
H;|$
|$HL
l$`H
|$ H
D$XH
D$pH
l$`H
|$@I
D$pH
l$`H
t$HH
|$HH
|$HH
|$@H
|$PH
D$0H
D$8H
|$@H
AWAVAUATUSH
t$(H
T$ H
_AXL
AYAZL
-R<J
l$0H
A[[L
D$ H
D$(H
D$ H
l$`H
[]A\A]A^A_
|$(H
t$(H
l$pH
t$PH
t$ H
t$(L
l$@H
|$(H
fffff.
AWAVAUATSH
5CKJ
AYAZL
A[[L
_AXL
[A\A]A^A_]
tqATI
C0H9
[]A\
AWAVAUATI
D$X1
M9} D
T$(H
T$(H
L9d$ 
t$(I
t$ H
U`tOH
L$0L
L$@L
L$PH
L$ H
\$XdH3
h[]A\A]A^A_
t$(I
|$ H
} H9|$
AWAVAUATL
D$ H
D$XH
D$0H
D$8H
D$@H
D$ H
D$(H
D$0H
D$8H
D$@H
D$HH
|$HI
|$ 1
L$0H
|$XHc
L$@H
|$8Hc
l$HI
t$PH
t$(I
|$ L
t$PH
l$HH
|$(M9
t$8L
l$HL
t$PH
D$(I
t$PH
l$HH
|$(M9
D$(A
L$@H9L$(t
H;|$0
D$(H
L$0H
|$(Hc
|$ 1
L$@H
|$8Hc
l$HL
l$HH
t$(I
H;|$@t
H;|$0
|$ H
|$PH
|$ I
|$PH
D$8H
D$(H
D$ H
|$ L
D$ H
D$PH
D$0H
|$PH
D$HH
@0H9
t$0J
D$0H
D$0H
t$XH9
D$hH
D$pH
D$@H
D$xM
D$8L
D$ H
D$XM
l$(M
t$ L9
D$(H
L$XL
|$ L9
L$(H
L$(L
D$8H9
L$`H9
D$(H
D$XH
D$hH
D$pL
D$@L
D$8H
t$ M
t$8L9
L$ L
|$8M9
L;d$
D$ L
t$ L
H;D$
D$ M9
t$ L
L$`H
D$@H9
D$@H
|$HH
D$ H
D$@H
D$(H
L$pH
D$(H
L$hH
t$ H
H;|$Xt
t$P1
D$8L
t$hH
D$pH
D$xH
|$@H
t$@H
D$ H
|$ H
D$`H
H;|$xt
D$(H
H;|$pt
D$(H
D$`H
t$(H
t$`L
t$(H
D$ H
D$PH
D$ H
D$`H
t$@H
D$(H
D$hH
|$(H
D$8H
D$XH
|$ L
D$0H
D$0H
D$0H
|$0H
[]A\A]A^A_
|$(H
D$(H
D$(H
D$(H
D$ H
AUATI
D$(1
D$(dH3
8[]A\A]
AVAUI
ATUH
D$X1
D$XdH3
`[]A\A]A^
l$0H
|$0I
|$0I
AUATI
D$(1
D$(dH3
8[]A\A]
AWAVL
AUATI
l$0H
l$PI
\$ H
t$(H
T$XH
t$PH
|$PI
|$0H
[]A\A]A^A_
t$(L
\$pL
|$pH
T$8H
|$PI
|$0H
|$pH
C0H9
CxH9
C0H9
ATUH
[]A\
[]A\
ATUI
[]A\
AWAVAUATUSH
C(E1
l$0H
|$0I
l$pH
t$PH
|$PI
|$pI
[]A\A]A^A_
|$PI
|$pI
|$0I
fff.
AWAVI
AUATL
[]A\A]A^A_
B H9
AVAUI
ATUH
D$81
D$8dH3
@[]A\A]A^
ATUH
StRA
[]A\A]A^
ATUH
StRA
[]A\A]A^
AWAVAUATUSH
D$ I9
D$@L
|$pH
D$PH
D$`H
|$`H
T$hH
t$`L
|$`L9
|$@H;|$
H;D$ I
|$(L
D$`H9
|$@H
|$pH
[]A\A]A^A_
|$`H
|$@H
AWAVAUATUSH
D$X1
H9C r
D$XdH3
h[]A\A]A^A_
H9A w
H9B 
l$0H
L$ M
$H9C u
t$0H
H9D$8
T$8H
t$0L
|$0L9
H;|$
t$0H
H+D$8H
T$8H
t$0L
|$0L9
H;|$
|$0I
|$0I
AVAUI
ATUH
d$0H
D$8H
T$0H
T$PH
D$Xt
|$0H
D$@H
D$8H
D$Ht
d$`H
|$hI
[]A\A]A^
\$ H
|$hI
D$81
D$8dH3
AWAVAUATI
d$pH
D$@L
l$@H
t$ L
L$(H
l$ H
d$pI
D$ M
t$(H
H9l$(
H9l$(
d$pH
[]A\A]A^A_
AWAVAUATI
d$pH
D$@L
l$@H
t$ L
L$(H
l$ H
d$pI
D$ M
t$(H
H9l$(
H9l$(
d$pH
[]A\A]A^A_
AWAVAUATI
d$pH
D$@L
l$@H
t$ L
L$(H
l$ H
d$pI
D$ M
t$(H
H9l$(
H9l$(
d$pH
[]A\A]A^A_
ATUH
D$(1
D$(dH3
0[]A\
AWAVAUATUSH
\$@H
D$ H
l$`H
L$ H
\$ H;\$(
L9l$(tSH
[]A\A]A^A_
{([]
fffff.
AWAVAUATUSH
4$dH
D$(H
D$0H
t$@H
D$`H
|$hH
L$PH
D$pH
D$pH
D$PH9
t$`H
D$PH
D$ H
H;P v
H;Q sFH
D$pL
D$pL
D$PH9D$p
t$ H
dH34%(
[]A\A]A^A_
D$hH
T$hH
D$XH
D$PH
T$`H;
t$ H
ffff.
AWAVI
AUATI
t$ H
T$HH
t$PH
t$@H
D$hH
D$(H
t@I9
D$HH
t$0H
T$ H
D$(H
H9D$ H
t$`H
[]A\A]A^A_
D$(H
|$(I
t$(H
|$0H
t$(H
t$ H
|$@H
|$0H
|$0H
l$(H9
H9,$u
|$8H
AWAVAUATUSH
D$8I
t$8L
=w~I
d$8H
D$8H
D$@I
l$@L9l$H
L$`I
L$pH
D$ H
t$0H
t$8L
D$8H
H9D$H
[]A\A]A^A_
=czI
fffff.
AVAUI
ATUI
SHtGH
dH34%(
[]A\A]A^
B H9
AWAVAUATUSH
[]A\A]A^A_
D$HI
D$ H
D$PH
=nuI
l$@H
t$HH
l$HL
D$HL
D$HL
t$ L
D$HL
D$pH
l$pH;l$x
H9D$x
\$0H
t$HH
D$HH
H9D$x
=CoI
AWAVAUATUSH
|$0H
D$hH
D$XH
D$ H
D$(H
D$8H9
t$8H
|$hH
|$ H
D$0H
|$(H
D$ H
D$(L
E H9C 
D$(L9
D$0H
L$XH
H9P s
D$XH
H9Q 
D$0H
K H;
D$0H
H9p s
H9r 
\$(H
D$0H
H;H v
H;J 
L$0H
=geI
D$@H
H9E u
L$@H
H;P v
D$@H
H;Q s
D$0H
L$0L
|$@L
|$(L
|$(H
c0L;
t$XH
H;P v
D$XH
H;V 
t$(H
|$(H
D$0H
|$ H
D$HL
D$pH
L$xH
D$HH
|$(H
D$HL
t$ H
H9l$
H;D$
D$HH
D$ H
|$ H
|$8H
D$0H
H9P s
H9P 
D$0H
D$@H
D$PH
D$pI
|$PH
D$8H
|$8H
L$8H
|$0H
;X v
t	;Z 
t$@1
|$pH
|$x1
t$PH
|$(H
t$PH
=>SI
H;J(
|$ H
|$8H
|$ I
=wQI
|$XH
|$hH
D$HH
D$ H
t$HH
=mPI
D$ H
D$@H
D$0L
L$8H
=	OI
D$ H
=\MI
D$@H
=YKI
t$HH
=xHI
D$ H
t$8H
|$0L
=6EI
D$0H
T$ H
H9C 
t$HH
=<DI
t$XH
H9H s
D$XH
H9J 
=#BI
\$0H
t$ H
t$8H
=|AI
|$ H
|$8H
|$xH
D$pH
|$ H
D$@H
D$8I
D$pH
L$xH
D$8I
D$8H
D$@L
|$ 1
H;P v
H;Q 
t$pH
t$pH
H9K I
=f;I
|$ I
D$@H
T$`H
D$0H
H;H v
H;J 
D$0H
|$ H
t$ I
|$ I
t$8L
d$`H
D$ H
D$`H
D$@H
|$ H
t$`H
T$`H
t$(H
D$ H
D$`H
|$ H
D$ H
D$`H
|$ H
=x3I
D$`H
=	1I
|$(H
[]A\A]A^A_
|$(H
AWAVAUATI
D$ L
t$ H
H;D$
D$ I
H;l$
D$`L
D$PH
@ I9
H;D$
D$ H
D$PH
D$0H
D$`H
D$@H
D$(f
t$`I
L;p v
L;s u'H;k(H
H;h(
L;p t
\$0H
=r,I
D$ H
\$ H
t$ H
|$ H
t$8L
H9D$
H;|$
\$PH
t$(H
=:(I
|$0H
t$(H
D$PH
D$PL
|$ H
H;D$
D$`L
L$(H9
D$`L
H9C r
\$pH
L$(H
[]A\A]A^A_
H9A w
H9B 
|$ H
|$(H
|$ H
|$ H
|$0H
ffff.
AWAVI
AUATH
t$@H
l$`H
D$ H
T$ L
\$ H;\$(
t$@H
l$pH
l$PH
L9|$(
L9|$(
[]A\A]A^A_
AWAVI
AUATH
d$ H
D$0L
|$`H
D$8L
D$HH
D$PI
D$xH
\$HM
\$xI
t$pL
t$@H
[]A\A]A^A_
t$@H
t$pL
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
ATUD
H9q s
t(H9p w"H
 []A\
AWAVAUATI
D$81
L$ D
D$,H
tfI9]
\$0H
L$,L
D$ H
H9\$
L$8dH3
H[]A\A]A^A_
ATUH
[]A\
[]A\
ATUSH
[]A\A]A^
ATUSH
[]A\A]A^
ATUSH
[]A\A]A^
ATUSH
[]A\A]A^
t/ATI
[]A\
L9B w
AWAVI
AUATL
S H9
r"H9
[]A\A]A^A_
E I9
[]A\A]A^A_
AWAVAUATL
S H9
tkH9
[]A\A]A^A_
AWAVH
AUATUSH
L;$$t)H
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATL
S H9
r"H9
[]A\A]A^A_
E I9
[]A\A]A^A_
D$HI
\$(H
<$[]A\
[]A\
t/ATI
[]A\
AWAVAUATI
[]A\A]A^A_
s(L)
AWAVI
AUATI
S H9
[]A\A]A^A_
P H9
tOE1
C I9
]A\A]A^A_
H9H r
I9H w
H9N s
t/ATI
[]A\
H9H r
I9H w
H9N s
ATUSH
[]A\A]A^
AVUSL
B0L9
;@8>
x0H9
t"M9
[]A^
tNATI
C8H9
[]A\
ATUSH
[]A\A]A^
t<ATI
[]A\
D$HI
\$(H
<$[]A\
[]A\
AWAVAUATUSH
|$ L
D$(L9
L9l$
H9t$(
L;t$
L9t$
L9t$
L9|$
L9|$
L9|$
|$ H
8[]A\A]A^A_
L;t$
L9t$
AWAVH
AUATUSH
[]A\A]A^A_
ATUI
S H9
AUATI
[]A\A]
AWAVAUATI
[]A\A]A^A_
AWAVAUATI
[]A\A]A^A_
K L9
AVAU
t$([H
D$ H
D$HH
D$8H
L$@I
D$0A\A]A^
AWAVI
AUATI
[]A\A]A^A_
tVE1
C A9
]A\A]A^A_
AWAVAUATI
K H9
[]A\A]A^A_
G I9
D$ H
[]A\A]A^A_
AUATI
t$(H
L$8I
T$ H
T$HH
T$@H
D$0A\A]A^
AWAVAUATI
[]A\A]A^A_
s(L)
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
ATUSH
"L;f H
L;` H
[]A\A]
L;` H
[]A\A]
H9C r,L
[]A\A]
[]A\A]
[]A\A]
AWAVI
AUAT
[]A\A]A^A_
x(H9
{(I9
AWAVI
AUATI
WXtSH
dH3<%(
([]A\A]A^A_
fff.
fff.
ATUI
[]A\
AVAUI
ATUL
[]A\A]A^
]A\A]A^
AVAUI
ATUH
D$81
L$8dH3
@[]A\A]A^
AWAVI
AUATI
[]A\A]A^A_
AWAVAUATUSH
L9l$
[]A\A]A^A_
D$81
|$ H
\$0H
D$8dH3
AWAVAUATI
t$ H
D$H1
\$0I
D$(I
T$ H
D$HdH3
X[]A\A]A^A_
AUATI
\$ H
D$H1
\$0I
L$HdH3
X[]A\A]
fffff.
AUATI
D$(1
\$ H
D$(dH3
8[]A\A]
fff.
ATUI
 []A\
AVAUH
ATUSH
l$ H
l$0H
l$@H
l$`L
T$HH
t$@H
T$hH
t$`H
|$`I
|$@H
[]A\A]A^
|$`I
|$@H
fff.
AWAVAUATI
|$0H
|$0H
l$PL
D$HH
D$pH
T$pH
|$XH
D$`H
t$hH)
T$HH
|$0H
D$8H
t$@H)
\$ H
[]A\A]A^A_
D$8H9
D$`H9
fff.
AWAVAUATL
d$ H
d$(H
D$(M
D$ H
D$0H
D$(H
D$8t
t$@H
|$`L
D$0H
D$8H
l$pH
l$PH
l$8H
l$(H
[]A\A]A^A_
D$(1
D$(dH3
AWAVAUATI
D$X1
l$0L
T$8H
t$0H
|$0I
D$XdH3
h[]A\A]A^A_
|$0I
AWAVA
AUATI
D$8H
D$0H
L$PH
D$HH
D$ H
|$PH
|$PH
|$PH
|$PH
t$PH
T$PH
\$XH
D$0H
\$pH
[]A\A]A^A_
|$PH
|$PH
|$ H
t$PH
|$PH
t$PH
l$XH
T$PH
\$XM
\$PH
D$PH
l$XH
T$PH
D$0H
|$(H
|$8H
AVAUI
ATUSL
oPI9
u@H)
[]A\A]A^
E8H9
[]A\A]A^
AVAUATUSL
mPI9
u@H)
]A\A]A^
E8H9
[]A\A]A^
AUATUSH
[]A\A]
AWAVAUATUSH
uEL)
[]A\A]A^A_
([]A\A]A^A_
AWAVAUATUSH
D$X1
l$0H
D$/H
t$0L
|$0L9
D$XdH3
h[]A\A]A^A_
|$0I
AWAVAUATI
H;W(
H1C(
]A\A]A^A_
H1C(
AVAUATI
[]A\A]A^A_
[]A\A]A^A_
I9^ 
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATL
L$(L
H;\$
H;l$(
|$ L
H;\$
D$ H
[]A\A]A^A_
|$ H
H9D$
v-ATI
[]A\
AWAVAUATUSH
D$`H
D$@H
D$0H
D$ H
|$ H
D$(H
H9\$
L$(H
\$PH
\$pH
[]A\A]A^A_
|$ H
|$0H
|$8H
|$ H
|$0H
AWAVAUATL
v8tTH
([]A\A]A^A_
fff.
AWAVAUATI
[]A\A]A^A_
[]A\A]A^A_
fff.
AWAVAUATL
D$81
D$8dH3
H[]A\A]A^A_
|$ H
\$(H
AWAVAUATI
([]A\A]A^A_
AWAVAUATUSH
D$HH
D$0H
D$xH
D$pL
\$pH
D$ H
D$XH
\$8H
t$PH
D$`I
\$xM
l$hL9
|$HH
|$ H
\$@H9
D$(H
t$(H
L$(I9
L$(I)
|$8L
|$PL
T$8H
L$(H
D$(L9
D$(E1
t$8H
t$PH
\$@H
H;D$XH
D$0H
D$0H
|$`H
|$0H
L$(H
t$`H
D$0H
t$XH
D$pH
D$xH
D$XH
D$pL
D$(H
D$(H
D$0H
D$hH
D$hH
D$XH
D$0H
D$(H
D$8H
D$@H
D$PH
t$(H
$H;X8
D$`M
t$ H
t$ H
|$8H
\$@H
t$8H
D$hH
t$`L
D$ H
D$hH9X
D$ H
|$ H
H9\$
L$ H
L$ H
t$PI
D$hH
t$(H
D$0H
D$xH
[]A\A]A^A_
|$`H
D$pI9
D$pL
D$ H
D$HL
t$ H
D$HH
D$(H
t$ H
|$HH
|$8H
|$`H
|$8H
t$(H
|$@H
|$8H
|$0H
|$xH
AWAVAUATUSH
L$ H
d$pL
%y|H
u0H9
[]A\A]A^A_
D$xH
-SxH
T$ L
D$(H
D$(H
H;D$
D$xH
l$PI
\$`H
d$pI
l$0H
l$@H
ATUH
tq[]A\
[]A\
[]A\
ATUH
tq[]A\
[]A\
[]A\
ATUH
tq[]A\
[]A\
[]A\
ATUH
tq[]A\
[]A\
[]A\
ATUH
tq[]A\
[]A\
[]A\
D$HI
\$(H
<$[]A\
[]A\
AWAVAUATL
|$0L
D$8H
L$(H
H9D$ 
t$ H9t$8
L;t$(H
8L9t$(
8L9t$(
L9|$
8L9|$
8L9|$
|$0H
H[]A\A]A^A_
L;t$
8L9t$
AWAVL
AUATI
[]A\A]A^A_
AWAVH
AUATUSH
5\;I
[]A\A]A^A_
AWAVL
AUATI
[]A\A]A^A_
AWAVH
AUATUSH
-b8I
527I
[]A\A]A^A_
AWAVL
AUATI
[]A\A]A^A_
AWAVAUATI
t$ H
[]A\A]A^A_
s(L)
AWAVA
AUATI
vQH)
[]A\A]A^A_
ATUH
[]A\
H;C H
AWAVAUATUSH
uEL)
[]A\A]A^A_
([]A\A]A^A_
AVAUATI
[]A\A]A^A_
[]A\A]A^A_
I9^ 
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
uEL)
[]A\A]A^A_
([]A\A]A^A_
AVAUATI
[]A\A]A^A_
[]A\A]A^A_
I9^ 
[]A\A]A^A_
[]A\A]A^A_
ATUI
[]A\
ATUH
\$ H
D$H1
|$ H
D$HdH3
P[]A\
|$ H
AVAUATUI
t$0H
D$0H9D$8
l$pH
T$pH
l$0H
T$8I
] H9
T$8H
D$8H
|$pH
l$8H
\$0H9
l$0H
\$(H
[]A\A]A^
l$pH
l$PI
EpH9
EPH9
E0H9
|$pH
|$PI
t$0H
=!9H
d$8H
l$0I9
|$PI
|$pH
|$0H
ATUH
\$ H
D$H1
|$ H
D$HdH3
P[]A\
|$ H
AWAV1
AUATUSH
\$ M
D$ t
|$ H
\$@M
D$@t
|$@H
d$`M
D$`t
|$`I
EPH9
E0H9
[]A\A]A^A_
|$`I
|$@H
|$ H
AWAVAUATI
PATH
=u*H
CPH9
C0H9
=.(H
[A\A]A^A_]
C0H9
AWAVAUATE
[A\A]A^A_]
AVAT
AWAVI
AUATUSH
VPH9
V0H9
L9l$
H9t$
H;\$
CPH9
C0H9
hH9\$
H9,$tJf.
EPH9
E0H9
hH9,$u
([]A\A]A^A_
CPH9
C0H9
([]A\A]A^A_
CPH9
C0H9
AWAVAUATI
t$ H
t$@H
[]A\A]A^A_
s(L)
} I9
ATUSH
[]A\A]A^
ATUSH
[]A\A]A^
{@[]
fff.
ATUSH
[]A\
fffff.
D$(1
D$(dH3
{h[]
ATUI
[]A\
AUATI
[]A\A]
AUATI
D$(1
t$(@
D$(dH3
8[]A\A]
AUATUSH
D$x1
d$0L
l$8H
\$0H9
l$0H
C0H9
D$xdH3
[]A\A]
|$XH
d$0H
|$XH
AWAVAUATSH
C0H9
[A\A]A^A_]
@ H9
C0H9
F`H9
C0H9
	w1E
_0H)
F`H9
[]A\
+[]A\
ATUH
[]A\
AWAVAUATI
[]A\A]A^A_
D$@H
d$`L
D$PH
D$`I
T$HH
t$@L
\$ L
|$`I
\$0H
|$@H
|$`I
|$@H
ATUH
[]A\
ATUI
[]A\
fff.
fff.
fff.
AWAVI
AUATI
l$0f
D$@L
D$@H
\$pL
d$0H
|$xH
|$HH
[]A\A]A^A_
|$HH
|$xH
AVAUATUSH
[]A\A]A^A_
;H9<$t
{`I9
{@I9
{ H9|$
AVAUE1
ATUI
[]A\A]A^
fff.
D$81
D$8dH3
ffff.
AWAVAUATUSH
T$XH
|$@dH
t$PH
D$8H
D$ H
D$0H
D$Hf
\$8H
|$ H
d$hH
\$`E1
d$hH
\$`I
t$ H
|$0H
\$(H
l$(H
\$(M
d$hH
\$`L
d$`M
L$@H
L$PH
D$ H
D$8H
|$8H
D$0H
H9\$
L$0H
L$0I9
L$0I)
H9\$
c@L;cH
t$(I
t$ I
L$PH
[]A\A]A^A_
L9d$H
L$(H
u!H)
t$0H
L$HL
H9\$
|$XI
t$(H
t$ H
D$XH
|$XH
|$ H
|$8H
|$0H
|$0H
|$`H
|$ H
|$`H
AWAVAUATUSH
t$ L
|$ H
t$ H
D$ H
D$0H
CxH9
CXH9
C8H9
[]A\A]A^A_
D$pH
D$ H
D$`H
D$ H
D$PH
=2~G
=	~G
D$@H
D$(H
T$ H
|$ H
D$ H
D$ H
T$ H
T$ H
AWAVI
AUATI
4$L9
l$pH
D$ H
4$H)
I;\$
l$PH
l$`M
|$pH
\$ I
l$(H
l$0H
l$@M
[]A\A]A^A_
|$pH
D$ H
AWAV
AUATI
D$0H
t$@M
t$`M
D$XH
T$PH
H;|$ 
D$XL
T$PH
|$8H;|$@
|$8H
|$8H
[]A\A]A^A_
AWAVAUATUSH
D$ H
l$pH
5XLH
=2eG
[]A\A]A^A_
D$@H
T$0H
L$0H
t$(H
|$(H
T$8H
D$0H
T$8H
|$(H
D$0H
L$PH
L$(H
|$8H
t$0H
t$(H
=JaG
H9|$ t
H9|$
|$(I
L$`H
D$(H
t$(H
D$(H
D$(H
AWAVI
AUATI
D$x1
l$`H
l$hH
D$hM
|$`H
l$hH
T$`t
t$ H
t$ H
D$xdH3
[]A\A]A^A_
|$@H
t$ L
H;|$
|$`H
t$ L
|$(H;|$0
|$(H
|$(I
\$`H
t$ H
fff.
AWAVI
AUATI
([]A\A]A^A_
AVAUI
ATUH
 []A\A]A^
AWAVI
AUATI
=?SG
D$81
l$ H
l$ H
l$(H
D$(H
|$ H
l$(H
T$ t
5 9H
D$8dH3
H[]A\A]A^A_
\$ H
fffff.
AWAVI
AUAT
D$X1
t$@H
t$HH
D$HM
|$@H
t$HH
T$@t
l$@L
t$ H
D$(H+D$ H
-XNG
d$HH
l$@I9
d$@M
d$(H
l$ L
d$ M
D$XdH3
h[]A\A]A^A_
|$@H
|$ H
AVAUI
ATUSL
[]A\A]A^
[]A\A]A^
[]A\A]A^
AVAUI
ATUSL
[]A\A]A^
[]A\A]A^
[]A\A]A^
AVAUL
ATUH
d$ H
|$ I
[]A\A]A^
H9D$
t$@H
H9D$H
T$HH
t$@L
|$@I
t$`H
T$hH
t$`L
|$`I
|$@I
|$ I
|$`I
AVAUATUSH
]A\A]A^
[]A\A]A^
ATUH
D$(1
L$(dH3
0[]A\
AVAUATUSL
]A\A]A^
[]A\A]A^
AVAUATUH
]A\A]A^
[]A\A]A^
AVAUI
]A\A]A^
[]A\A]A^
fff.
fff.
-Y/G
fff.
ATUSH
[]A\
ATUSH
[]A\
AWAVAUATI
C@`T
[A\A]A^A_]
fffff.
AWAVAUATI
=C'G
gfffM
C`H9
[A\A]A^A_]
gfffI
gfff
gfffH
gfff
gfffI
C`H9
ATUI
[]A\
AWAVH
AUATSI
~hfA
gffff
[A\A]A^A_]
gfffH
gfff
AWAVAUATI
[]A\A]A^A_
ATUI
[]A\
AWAVAUATI
wXdH
XZL9
[A\A]A^A_]
fff.
AWAVAUATUSH
D$(1
L9d$
t$(dH34%(
8[]A\A]A^A_
ATUSH
[]A\
AUATUSH
([]A\A]
fffff.
ATUSH
[]A\
ffffff.
ATUSH
D$81
D$8dH3
@[]A\
twvU
uE[H
AWAVAUATA
\$ H
D$h1
|$HH
|$ H
D$hdH3
x[]A\A]A^A_
|$ H
|$HH
|$ H
fff.
AWAVAUATI
\$ H
D$H1
|$ H
L$HdH3
X[]A\A]A^A_
|$ H
AWAVA
AUATI
d$PL
l$0H
t$pH
[]A\A]A^A_
l$ H
AWAVA
AUATI
\$`H
l$@H
|$hH
l$0L
t$,H
|$`H
[]A\A]A^A_
|$`H
ATUSH
D$81
L$8dH3
@[]A\
AUATH
l$0dH
D$X1
|$0H
|$0H
|$0H
|$0H
|$0H
|$0H9
D$XdH3
h[]A\A]
|$0H
|$0H
|$0H
ATUSH
D$(1
L$(dH3
0[]A\
ChH9
C@H9
ChH9
C@H9
ffffff.
fffff.
AWAVAUATUSH
|$8H
D$hH9
H;D$hH
\$XH
T$PE1
D$PH
|$XE1
|$PE1
D$0H
D$@H
H;D$hH
D$pH
D$xH
L$pH
D$8H
D$HH
D$`H
\$HH
D$8L
D$(H
D$0H
D$ H
|$0H
H;D$
|$(H
T$ H
H;\$
H;\$
D$8H
\$`H
t$HH
|$@H
D$HH
D$`H9
L$hH
D$xH9
D$8H
L;t$h
D$8H
H;D$hI
D$HH
D$8H
\$HL
D$8H
D$@H
L$0L
|$0H
H;D$
|$@L
D$8H
|$@H
L$@H
D$8H
D$@H
D$8H
D$8L
D$8H
\$8H
[]A\A]A^A_
|$@H
|$ H
|$HH
|$HH
t$HH
|$pH
D$8H
T$HL
|$pH
|$@L
D$8H
D$8L
D$8L
|$@H
D$XH
D$PH
fffff.
AWAVI
AUAT1
D$8H
D$@H
D$PH
D$XH
D$hH
l$8H
t$`H
t$0H
[]A\A]A^A_
t$`H
AWAVI
AUATUSH
T$KH
D$(I
D$0A
D$8H
D$ H
k t7H
d$`H
t$0H
t$(H
H;|$8t
d$PH
|$ L
T$ H
H;|$@u
t$0H
t$(H
[]A\A]A^A_
t$0H
t$(H
l$pH
t$0H
t$(H
t$0H
t$(H
t$0H
t$(H
D$ H
twvM
u;[H
AWAVA
AUATI
\$PH
l$0H
|$xI
|$PH
[]A\A]A^A_
t$ L
|$PH
|$xI
ATUSH
 []A\
AWAVI
AUATUSH
t$,H
l$pH
l$pL
t$ H
t$,L
t$,L
[]A\A]A^A_
d$PH
l$pL
l$pL
l$pH
AUATUSH
([]A\A]
AWAVI
AUATI
D$ I
|$ H
[]A\A]A^A_
l$`H
D$ I
D$ I
l$PH
D$ H
D$8L
H;D$0H
D$8H
D$8L
H;D$0H
D$8H
|$ H
|$ H
|$ H
|$ H
|$ H
AWAVAUATA
D$`H
D$pH
D$0H
T$HH
L$ H
D$@H
D$PH
D$XH
t$@H
|$`H
[]A\A]A^A_
|$`H
t$@H
AWAVAUATI
\$0H
D$X1
l$ H
|$0H
L$XdH3
h[]A\A]A^A_
|$0H
AWAVI
AUATM
D$$dH
D$(H
D$XH
D$0H
L$0H
L$8H
L$@H
L$HH
t$`H
[]A\A]A^A_
t$`H
{XH;|$Xt
{0H9|$(t
H9|$0H
AVAUATUI
[]A\A]A^
AWAVAUATUSH
t$@dH
HpH9Hh
L$HH
T$@H
HhH9HpH
D$(H
D$PH
t$8H
L$PH
0L;p
t$0I
|$(H
|$ H
L$0L
|$(H
\$8L
D$@L
D$8H
L$8H;Hp
L$@M
T$`H
L$ H
T$@H
D$0H
D$ H
D$ L
t$(H
|$8I
t$8L
t$(H
|$ L
D$0H
D$(L
p8L;p@
t$0I
|$0H
D$(I
L9p@
t$0H
\$8L
D$@L
D$8H
L$8H9
d$`L;d$h
L$@M
H9D$h
t$pL
[]A\A]A^A_
DD$\
H@H9H8
|$ H
L;l$
AWAVAUATUSH
D$(1
L$(dH3
8[]A\A]A^A_
|$ M
|$ M
AUATUSH
D$x1
l$ H
D$XH
D$`H
t$PH
D$xdH3
[]A\A]
AWAVA
AUATI
D$(H
T$ H
t$(I
|$(L
I+D$
[]A\A]A^A_
d$@H
|$`H
D$8H
|$@I
t$(L
|$pI;|$xA
|$pH
|$pI+|$hH
D$ H
|$@I;|$HA
|$@H
|$@I+|$8A
|$PH
|$ H
d$pH
d$PH
=7yF
D$hH
D$8H
T$(H
|$ H
AVAUI
ATUI
D$ 1
l$PL
t$0H
[]A\A]A^
D$ 1
l$PH
t$0H
t$0H
l$PH
t$0H
t$0H
T$PH
t$0L
t$0L
AWAVAUATI
[]A\A]A^A_
-InF
\$ I
|$ H
|$ H
-dmF
\$`H
|$@I
|$`H
|$@I
|$`H
|$`H
\$`I
fff.
ffffff.
AWAVAUATUSH
l$@H
t$ I
[]A\A]A^A_
ffffff.
AWAVAUATUSH
L9t$
[]A\A]A^A_
C@H9
ATUSL
+[]A\
AUATI
D$H1
D$@	
t$@H
L9D$
T$(L
D$0H9
D$ H
D$HdH3
X[]A\A]
d$@H
t$@H
H+D$(H
t$0H
t$(H
t$@H
t$ L
AUATH
\$ H
D$H1
|$ H
D$HdH3
X[]A\A]
|$ H
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVL
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
{([]
AWAVL
AUATI
[]A\A]A^A_
AWAVH
AUATUSH
L;l$
[]A\A]A^A_
[]A\A]A^A_
AWAVH
AUATI
-z>G
tNI9^
[]A\A]A^A_
H9\$
]A\A]A^A_
AVAUE1
ATUI
]A\A]A^
AWAVL
AUATUSH
[]A\A]A^A_
AWAVI
AUATUSH
tjI9
G(I9
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUAT
[]A\A]A^A_
AVAUATUI
[]A\A]A^
AWAVH
AUATI
D$ H
[]A\A]A^A_
|$(I
H9\$ A
t$0H
t$HH
t$`H
L$ H
]A\A]A^A_
AWAVAUATI
[]A\A]A^A_
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
AVAUL
ATUI
D$X1
t$ H
\$ H
L$XdH3
D$8u
`[]A\A]A^
H9P(s
tyH9Q(wsAVAUATUI
[]A\A]A^
fff.
AWAVAUATUSH
D$@H
T$HH
D$<L
t$@L
|$PH
D$(H
D$`H
D$pH
D$<H
t$@H
|$HH
;J ~
H9P(s
H9Q(
D$PH
D$Xt
D$XH
dH34%(
[]A\A]A^A_
t$(L
=YEF
=)EF
T$hH
t$`H
|$`H;|$ 
D$@H
l$PH
='DF
D$@H
|$`H
AWAVAUATI
l$@H;l$H
T$ H
T$hH
D$pH
|$`D
S D9
\$pH
\$(H
H9l$H
|$@H
[]A\A]A^A_
D9x 
H;\$
T$hH
|$`D
D$0I
D$8t
t$0L
\$8H
|$@H
=!>F
D$@I
D$Ht
\$@L
5u<F
D$@I
D$Ht
\$@L
fff.
ATUSH
 []A\
=S9F
AWAVAUATUSH
d$PdH
T$hH
D$@L
d$@H
D$`H
D$pH
D$xI
l$0H
H;|$ t
D$@H
D$Ht
l$HH
D$(H
t$`L
[]A\A]A^A_
t$`L
fffff.
AWAVI
AUATI
D$X1
t$XH
T$(I
D$ H
T$8H
D$0H
D$@I
D$pH
D$HH
t$0H
D$XdH3
h[]A\A]A^A_
AWAVI
AUATI
S(H9
[]A\A]A^A_
P(H9
tbE1
C(I9F
]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
t!SH
t!SH
ATUI
[]A\
AUATUSH
[]A\A]
=Y.F
AWAVH
AUATUSH
D$X1
\$ H
|$ H
L$XdH3
h[]A\A]A^A_
|$ H
ATU1
 []A\
AWAVI
AUATUSH
%r)F
D$ t
t$0H
l$XH
l$`H
D$8H
D$Pw
D$@H
D$HH
D$0H
|$`H
[]A\A]A^A_
|$`H
fff.
ATUI
D$81
=%'F
D$8dH3
@[]A\
=7&F
fffff.
AUATA
D$81
D$8dH3
H[]A\A]
AUAT1
\$@H
l$ dH
D$h1
|$ H
|$HH
D$hdH3
x[]A\A]
|$HH
|$ H
AWAVAUATL
[A\A]A^A_]
|$(H
AWAVAUATUSH
t$pdH
D$xH
D$pH
|$0L
\$`H
\$@H
\$ H
[]A\A]A^A_
|$0H
l$PL
l$PH
|$(H
ATUSH
D$H1
L$HdH3
P[]A\
d$ H
|$ I
l$ H
|$ H
l$ H
l$ H
AWAVAUL
ATSL
[A\A]A^A_]
ATAUL
AWAVI
AUATUSH
[]A\A]A^A_
\$pH
l$@H
l$PH
D$ H
D$ H
T$ M
d$`H
D$ H
|$ H
t$(H
t$(H
D$ =
D$0H
|$0H
l$8E1
T$0t$
;D$ 
T$ D
T$ sH
l$8D
L$ D
D$ H
T$ M
T$ I
T$(I
|$ H
T$ I
T$ I
|$ H
|$ H
AWAVI
AUATM
L$X1
T$@H
D$Ht
d$@L
|$HM
|$ H
|$0M
d$PM
D$XdH3
h[]A\A]A^A_
AUATI
D$(1
D$(dH3
8[]A\A]
AWAVAUATUSH
d$PL
l$ H
D$x1
D$hI
D$pD
|$hL
D$pM)
|$xdH3<%(
[]A\A]A^A_
D$0L
D$8H
|$0H
|$0A
L9L$
|$0H
H;|$
fff.
ATUI
[]A\
ATUI
[]A\
fff.
GXH9Gx
ATUSH
GxH9GX
[]A\
fffff.
AWAVAUATUSH
Lc|$
@`H9
[]A\A]A^A_
ATUSH
D$H1
GXH;Gx
|$ 1
d$0H+h 
D$ `T
D$ H9D$0
@hH9
L$HdH3
P[]A\
KXH9Kxu
\$0H
AUATA
D$X1
L$XdH3
h[]A\A]
\$@H
d$PA
\$ H
\$0H
AUATUH
[]A\A]A^
AWAVI
AUATUSH
D$(1
L9l$
H9t$
H;l$
(H9l$
L9$$t"
(L9$$u
F8H9
D$(dH3
8[]A\A]A^A_
H9,$
(H9,$u
\$ H
fffff.
ATUSH
D$81
L$8dH3
@[]A\
D$ H
T$(t
l$(H
D$ H
fff.
AWAVI
AUATUSH
D$x1
t$ H
D$ H
t$ L
T$(H
HcD$@H
D$pH
t$PH
D$pH
|$PI
|$ I
D$xdH3
[]A\A]A^A_
|$ I
|$PI
AWAVI
AUATUSH
L9l$
H9t$
H;l$
(H9l$
L9$$t"
(L9$$u
([]A\A]A^A_
H;,$t
(H9,$u
([]A\A]A^A_
AWAVI
AUATUSH
[]A\A]A^A_
ukH)
AWAVAUATI
D$ H
[]A\A]A^A_
s(L)
fffff.
fffff.
fffff.
fff.
fff.
fff.
fff.
AUATA
D$(1
D$(dH3
8[]A\A]
AUATI
t$HH)
|$ J
[]A\A]
|$01
|$@H
[]A\
AWAV1
AUATA
[]A\A]A^A_
X[]A\A]A^A_
AWAVAUATI
[]A\A]A^A_
ATUI
[]A\
AWAVA
AUATE1
D$81
D$ H
T$ I9
T$ H9
t$8dH34%(
H[]A\A]A^A_
AWAVL
AUATI
D$X1
l$0H
T$8H
t$0H
|$0H
D$XdH3
h[]A\A]A^A_
\$ H
|$0H
fffff.
AWAVA
AUATL
([]A\A]A^A_
fff.
AWAVAUATUSH
D$81
T$(L
D$(L
D$ H
D$8dH3
H[]A\A]A^A_
\$0H
AUATH
[]A\A]
AWAVA
AUATI
D$X1
L$ H
D$(L
|$0L
H9D$
H9D$
T$8H
t$0H
|$0H
t$ H
H9D$
H9D$
T$8H
t$0H
|$0H
D$(L
H9D$
H9D$
D$XdH3
h[]A\A]A^A_
|$0H
|$0H
AWAVAUATA
L$ H
D$(L
L$0dH
L$x1
t$8H
4$H9
D$PH
T$XH
t$PH
|$PH
t$ H
T$XH
t$PH
|$PH
D$(H
-EoF
D$0H
D$8H
D$xdH3
[]A\A]A^A_
\$@H
\$@H
|$PH
|$PH
AWAVI
AUATH
[]A\A]A^A_
AWAVL
AUATA
[]A\A]A^A_
fffff.
AWAVA
AUATL
H+.H
(L;h
([]A\A]A^A_
AWAVA
AUATL
H+.L
t$(M
D$(L
0L;p
D$(L9p
D$ A
H+(H
D$ L
0L;p
D$ L9p
8[]A\A]A^A_
AWAVL
AUATL
USLc
([]A\A]A^A_
fff.
AWAVH
AUATL
-M\F
([]A\A]A^A_
AWAVL
AUATL
([]A\A]A^A_
AUATH
\$ dH
D$H1
|$ H9
D$HdH3
X[]A\A]
|$ H
AUATH
\$ dH
D$H1
|$ H9
D$HdH3
X[]A\A]
|$ H
AWAVAUATI
D$X1
l$@H
D$ 1
t$ H
l$PH
D$(H
D$XdH3
h[]A\A]A^A_
\$0H
l$@H
AWAVAUATI
D$h1
%wOF
D$@H
D$PH
D$@H
H9D$
l$HA
H9D$
H9D$
D$(H
H9D$
T$HH
t$@H
|$@H
D$hdH3
x[]A\A]A^A_
d$ H
=!eE
d$ H
d$ H
=AdE
|$@H
fff.
AWAVAUATI
D$X1
5-JF
T$8H
t$0L
|$0I
D$XdH3
h[]A\A]A^A_
\$ H
\$ H
|$0I
AUATI
\$ dH
D$H1
|$ L9
D$HdH3
X[]A\A]
=&^E
|$ H
AWAVI
AUATI
\$@H
D$h1
|$@L9
D$hdH3
x[]A\A]A^A_
l$0H
|$@H
t$ H
t$0H
H+D$
t$0H
ATUSH
D$(1
\$(dH3
0[]A\
l$ H
l$ H
H+D$
t$ H
AVAUI
ATUH
\$ L
D$H1
|$ A
t$ H
|$ H
|$ L9
D$HdH3
P[]A\A]A^
T$(H
t$ H
|$ H
fff.
AUATH
\$ H
D$H1
|$ H
|$ L9
D$HdH3
X[]A\A]
|$ H
AWAVI
AUATI
\$0L
D$X1
|$0A
|$0A
|$0H
D$ u2H
|$0H9
D$XdH3
h[]A\A]A^A_
t$ H
t$(H
|$0H
fff.
AWAVH
AUATI
l$@H
\$`H
D$@H
|$`H
\$0H
I9D$
|$@H
[]A\A]A^A_
|$@H
|$`H
AWAVAUATI
l$PL
l$pH
D$PI
|$ I
|$pI
\$@H
D$ I9D$
|$PH
[]A\A]A^A_
t$(H
|$PH
|$pI
AWAVI
AUATI
L$0H
D$0H
D$0H
L$0L9
D$0H;E
[]A\A]A^A_
l$`L
l$`H
=FFE
t$`H
H+D$8H
l$PH
t$@H
t$8H
H+D$HH
t$PL
t$HH
AWAVAUATI
t$PI
D$PI
D$PI9E
[]A\A]A^A_
\$0H
l$@H
t$hH
H+D$XL
l$ H
t$`L
t$XH
AWAVI
AUATH
T$0I
T$0I
D$0I
D$0I;E
[]A\A]A^A_
\$`H
\$`H
l$ H
t$`H
H+D$8H
t$@L
t$8H
t$pH
H+D$HL
l$ H
t$PL
t$HH
AWAVAUATI
D$(I
L$(L9
\$pL
D$pI
t$(I
t$`M
D$(I9D$
|$pH
[]A\A]A^A_
l$PH
t$@L
d$ H
t$@H
|$pH
H+D$0L
d$@H
t$8L
t$0H
t$PH
fff.
AWAVI
AUATH
D$0H
D$0I
T$0I
D$0I
L$0H
D$0I9D$
[]A\A]A^A_
d$pH
d$pH
=K#E
d$ H
t$pH
H+D$XL
d$pH
t$`L
t$XH
H+D$8L
d$`H
t$@L
t$8H
H+D$HL
d$`H
t$PL
t$HH
AWAVAUATUSH
[]A\A]A^A_
r	E8
t$0H
l$@H
l$pH
l$`H
l$PH
l$ H
AWAVI
AUATH
D$ H
D$(dH
|$ L
|$(L
[]A\A]A^A_
\$@H
\$`H
\$pH
AWAVH
AUATI
D$0H
t7f.
E0H9
D$8H
D$(H
t$HH
|$(H
D$ H
t$(H
t$HH
|$8H
H;|$ t
D$@H
E0H9
H;|$
H9D$0
[]A\A]A^A_
u	L9
5.~E
D$(H
D$8H
t$(L
5[{E
;H9|$@I
AWAVI
AUATI
\$HH
t$HH
H;|$
I;|$
H;|$
L9l$
t$HH
|$ L
D$0I
|$ I
D$0H9
D$8H
D$(H
D$ f.
t$HH
|$(H
D$ H
t$(H
t$HH
|$8H
H;|$ t
t$@H
F0H9
H;|$
H9D$0
[]A\A]A^A_
u	I9
5xmE
D$(H
D$8H
t$(L
5bjE
5SiE
;H9|$@I
AUATUSH
51gE
([]A\A]
ATUH
[]A\
[]A\
ATUH
D$(1
D$(dH3
0[]A\
\$ H
H+D$
t$ H
5zdE
fff.
ATUI
[]A\
AVAUI
ATUL
[]A\A]A^
]A\A]A^
AVAUI
ATUH
D$81
L$8dH3
@[]A\A]A^
ATUH
H+7H
\$ dH
D$H1
|$ H)
|$ H
D$HdH3
P[]A\
|$ H
ffff.
AWAVAUATE1
[]A\A]A^A_
G H9F u
E(H9C(u
EHH9CHu
E8H)
UXE1
Eh9ChA
fff.
H;W uYH
GXH+GPH
fff.
ATUI
[]A\H
ATUI
 []A\
AUATA
L;cH
[]A\A]
H;kH
ATUI
[]A\
AUATI
[]A\A]
fff.
D$(1
D$(dH3
fff.
AWAVI
AUATUSH
D$PH
|$ H
D$pL
l$`H
D$ H
D$(I
|$ H
D$HH
|$@L
D$8H
|$@H
\$(H
T$0H
|$@H
|$@H
D$xH
$H9X
D$xH
H;\$8A
D$xH
L$8A
\$`H
\$HH
[]A\A]A^A_
|$(H
|$(H
ffff.
AVAUL
ATUH
]A\A]A^
AWAVH
AUATI
L$(H
4$dH
D$pL
D$0H
D$PH
t$ I
\$`H
|$ I
|$ I
\$@H
|$pH
D$xH
l$@H
[]A\A]A^A_
D$xH9
D$(I
T$ H
L$(H
AWAV1
AUATI
D$(1
\$ I
D$(dH3
8[]A\A]A^A_
ffffff.
AWAVAUATI
T$8H
D$pL
D$(I
|$@H
D$HH
t$8H
|$@H
t$8H
\$HH
[]A\A]A^A_
|$@H
|$@H
t$8H
t$8H
t$8H
|$@H
t$8H
t$PH
t$XH
D$XM
T$PH
t$HH
T$@H
l$HM
l$@H
t$ H
|$@H
t$8H
|$@H
t$8H
D$@H
D$`H
D$HH
D$ht
D$`H
D$hH
\$hH
l$XH
T$PH
t$HH
T$@H
|$XH
|$(H
AUATA
T$`H
D$hH
FD$XH)
|$xP
FD$xH)
D$xP
t$pH
|$hH
T$`H
t$PH
|$(H
T$ H
[]A\A]
L$pH
L$PH
D$XH
t$PL
|$hH
T$`H
t$PH
l$PH
D$xH
t$pL
t$pH
l$pH
D$xP
ffffff.
AWAVAUATUSH
H;E 
D$pH
D$pH
D$pL
l$xB
t$xH
D$pA
H;D$
D$pF
D$pH
T$xH
t$pL
D$pH
D$pL
D$pH;D$
\$xL
D$pH
\$xH
D$pD
D$pL
T$xH
t$pL
D$pH
EXH+EPH
D$XH
d$`M
|$pH
G`H9
[]A\A]A^A_
\$@H
\$0H
d$PH
|$pH
G`H9
AWAVI
AUATH
t$@L
l$`H
\$pI
\$PH
D$(I
|$ H
d$ H
D$(H
l$pH
l$PH
l$0H
[]A\A]A^A_
ffff.
AWAVI
AUATI
D$(H
D$ H
D$ H
D$ht
D$(H9
|$01
H;<$t
H;|$
D$ H
D$ H
|$@H
D$(H
[]A\A]A^A_
d$`H
u	H9
D$(H
AUATI
5PkE
D$H1
\$ H
|$ H
D$HdH3
X[]A\A]
|$ H
SH9w
ATUH
[]A\
[]A\
AWAVI
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
uWE1
AWAVA
AUATE1
([]A\A]A^A_
ATU1
[]A\
fffff.
AUATH=
|8H9
|&H9
[]A\A]A^
AWAVI
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
rSH9
[]A\A]A^A_
AWAVM
AUATI)
t$x1
t$HH
t$PH
|$@H
|$XH
D$0H
D$ H
t$0H
D$(I
\$`H
=IrD
D$ J
t$XH
D$PH
|$HH
|$ H
~NI9
|$@I9
8D$?r&H
D$ H
H9D$(
\$xdH3
[]A\A]A^A_
\$`H
=XoD
=h7F
=27F
L$pH)
\$`H
\$`H
\$`H
=1mD
\$`H
AWAVAUATUSH
[]A\A]A^A_
AWAVAUATSH
L;u(L
Ou(H9
4#L9
4#L9
=(eD
=HdD
U M9
=H^D
=p\D
U H9
=yVD
H+u H;
=zSD
E L)
H+E L9
U H9
=%RD
U H9
[A\A]A^A_]
=}ND
=	ND
=)MD
U L9
L+E H9
=[KD
=yJD
M I9
L+E I9
=eID
H+E L9
U H9
=tFD
=3ED
=YDD
=DBD
AWAVAUATUSH
D$xL
|$pH
D$(1
H9l$
\$(dH3
8[]A\A]A^A_
\$ H
H+D$
\$ H
\$ H
\$ H
=1;D
\$ H
\$ H
=q:D
\$ H
\$ H
=Q9D
\$ H
\$ H
=z8D
AWAVAUATM
$$M9e
M9,$
=R(D
[A\A]A^A_]
=9%D
=Y$D
=?#D
Y^I9
A[XM9
AYAZ
AWAVAUATM
6M94$
6M97
I;t$
[A\A]A^A_]
4/L9
Y^tNL
xfH9
4/I9
A[XtML
xfH9
~vL9
AYAZ
fff.
fff.
fff.
ATUI
[]A\
v-ATI
[]A\
AWAVI
AUATI
[]A\A]A^A_
fff.
tjAVAUI
ATUI
k(H9
[]A\A]A^
fffff.
AUATUSH
I9\$
t&I9
[]A\A]
AUATI
H+3H
#L;c
<$L)
<$L)
[]A\A]
AWAVI
AUATI
_8dH
D$(1
t$ H
D$(dH3
8[]A\A]A^A_
AWAVI
AUATI
D$x1
t$0H
|$0I
D$xdH3
[]A\A]A^A_
D$PH
|$PA
|$0I
|$PH
|$0I
fff.
AUATI
EPH9
[]A\A]
fff.
AVAUATUSH
H+3H
@HL9
t=L)
 []A\A]A^
AWAVAUATSH
L;vHH
H9H s
H9J 
@(H9B(
L9pH
Iiv(
[A\A]A^A_]
I;O w
u<L9
H;O r
H;H v
fff.
fff.
AWAV
AUATUSH
9	w!
9	w%
l$ H
t$PH+t$XH
D$hH+D$HH
t$@H+t$0H
t$PH
T$0H
|$@L
T$HL
l$p1
[]A\A]A^A_
H1C(
H1Cp
AVAUATUI
\$PH
l$0L
D$PH
D$pH
|$0H
l$ H
[]A\A]A^
|$0H
AWAVI
AUATUSH
|$pH
D$`H
D$xH
D$hH
D$xH
D$`H
L$`H
|$hH
L$hH
D$8H
t$8H
D$hH
C0H9
D$0H
\$0H
D$XH
CxH9
C0H9
D$ H
\$ H
D$HH
CxH9
C0H9
D$(H
\$(H
D$PH
CxH9
C0H9
D$@H
CxH9
C0H9
D$0I
|$ H
|$hH
D$xH
l$hH
t$Pf
D$xH9
D$0H9
D$@H
D$@H
D$@H
D$PH
D$PH
D$PH
D$(H
D$(H
D$(H
D$HH
D$HH
D$HH
D$ H
D$ H
D$ H
D$XH
D$XH
D$XH
D$0H
D$0H
D$0H
D$8H
D$8H
D$8H
D$`H
H;|$xt
G0H9
D$ H
|$ H
D$0H
D$@H
D$8H
D$pL
|$HH
D$(I
t$(H
D$8H
D$@H
D$8H
D$(H
D$pL
E0H9
t$(H
l$8H
D$0H
[]A\A]A^A_
D$pL;
h M9
L$(I
D$ H
D$ H
D$ H
|$ H
|$`H
D$0H
D$@H
|$8H
l$8H
t$(H
D$`H
D$hH
|$hH
D$8H
D$0H
|$0H
D$XH
|$XH
D$ H
|$ H
D$HH
|$HH
D$(H
|$(H
D$PH
|$PH
D$@H
|$@H
AWAVI
AUATM
T$<H
T$=I
5qxD
T$>I
|$?L
S(H;U
v@I;vHH
[]A\A]A^A_
D$PH
L$ H
\$pH
T$;I
F H9
`(M9
\$ L
ZYt8H
1@82u
\$ H
l$`H
l$@H
\$ H
\$ L
AWAVI
AUATI
D$x1
l$PH
l$0I
T$XE1
H;T$8H
|$PH
D$PH
|$XH
D$xdH3
[]A\A]A^A_
t$PH
D$0H
|$0I
|$PH
|$XH
|$0I
fffff.
AVAUI
ATUA
\$PH
T$XH
|$ H
D$XH
D$XH
T$PH
L$@H
T$@H
T$HH
D$HH
|$XH
T$@H
T$HH
\$@H
[]A\A]A^
L$@H
T$@H
T$HH
\$@H
D$HH
T$@H
T$HH
\$@H
\$`H
T$hH
|$0H
D$hH
D$hH
T$`H
L$@H
T$@H
T$HH
D$HH
|$hH
D$@H
D$pH
D$HH
D$xt
D$pH
D$xH
|$xH
\$@H
\$@H
\$@H
|$xH
|$hH
|$hH
|$XH
|$XH
fff.
AVAUATUI
[]A\A]A^
B I9
AWAVAUATUSH
f`dH
T$(L9
D$0H
T$ L
T$0H
H;|$0t
H9P s
H;L$
H9Q 
Q(I;T$0
t$8H
=PzC
t$8H
D$@H
D$XH
l$@I
D$(H
D$PH
}0H9
D$(H9
H9P s
H9L$
H9Q 
-iwC
|$(H
D$ H
I9G r
H9l$
H9kpu1
H9D$ I
[]A\A]A^A_
H9G w
H9A ruI
L9{pu
H9l$
d$8I
H;l$P
D$xH
D$HI
D$HI
|$wH
L$PH
D$(I
D$XH
t$@I
|$`H
|$hH
L$ H
H;J v
H9D$
H;H s(H
T$0H
|$8H
T$(L
D$@H
D$(H
D$@H
|$8H
L$ H
H9J s
H9D$
H9H v(H
T$0H
|$8H
|$hH
|$`H
|$@H
t$@I
D$XH
|$@H
|$8H
D$@H
D$HH
x(H9|$xt
D$HH
|$@H
AWAVAUATUSH
l$ H
T$(H
D$(H
l$0H
T$8H
D$8H
T$0H
|$0H
l$`H
|$ H
D$0H
D$@H
D$8H
D$Ht
D$@H
D$HH
|$ H
|$ L
D$ H
D$PH
D$(H
D$Xt
l$PH
l$PH
[]A\A]A^A_
=kgC
|$ H
fffff.
AWAVI
AUATI
[]A\A]A^A_
T$NI
T$OI
L$ H
D$0H
|$ I
l$`H
H;|$(t
H;|$0t
H;D$
=1`C
d$PH
l$pH
T$ H
AWAVAUATSH
_AXH
53(D
t$8L
D$ I
D$(I
D$0I
\$PH9
PHH9PPL
H9P s
H9Q 
H9A8
H98|
H;P v
H;Q 
S H9
PH;PP
[A\A]A^A_]
H9X0t
P H9
C I9
ffffff.
AWAVAUATUSH
t$ H
T$_H
|$HH
\$HH
|$pH
D$(H
D$0f.
D$(H
BPH+BHH
t$HL
= EC
L$8L
D$@H
t$ H
|$0H
E0H9
H;|$(t
|$HH
BPH+BHH
L$8H
t$ H
\$HH
|$HH
=`4D
t$ H
[]A\A]A^A_
l$`H
=K?C
t$HH
|$HH
|$HH
|$HH
|$@H
|$HH
AVAUATUSL
]A\A]A^
[]A\A]A^
AWAVH
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
AVAUATUSL
t/[L
]A\A]A^
[]A\A]A^
AWAVE
AUATI
([]A\A]A^A_
AWAVE
AUATI
tdI9]
t$(H
([]A\A]A^A_
}(I9
ATUH
[]A\
[]A\
AWAVI
AUATI
l$PH
D$x1
\$01
|$PH
D$xdH3
[]A\A]A^A_
|$PH
N8dH
F0H)
dH3<%(
=H1C
ATUSL
l$PI
\$HH9
l$HH
t$(I
[]A\
AWAVH
AUATUSH
L;d$
t$ L
[]A\A]A^A_
[]A\A]A^A_
AWAVH
AUATUSH
L;d$
t$ L
[]A\A]A^A_
[]A\A]A^A_
AWAVH
AUATUSH
[]A\A]A^A_
AWAVI
AUATUSH
D$81
T$ H
D$(t
|$(I
L$ H
D$8dH3
H[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
AWAVH
AUATUSH
[]A\A]A^A_
ATUSH
C0H9
[]A\A]A^
ATUSH
C0H9
[]A\A]A^
C0H9
C0H9
AWAVH
AUATUSH
L;d$
t$ L
[]A\A]A^A_
[]A\A]A^A_
ATUSH
C0H9
[]A\A]A^
D$HI
\$(H
<$[]A\
[]A\
AWAVAUATL
|$ L
D$(H
wHL9
L9t$
H9t$(
L;|$
L9|$
L9|$
4$H9t$
$H9D$
$H9D$
|$ H
8[]A\A]A^A_
L;|$
L9|$
ATUSH
[]A\A]A^
ATUSH
[]A\
AWAVAUATI
[]A\A]A^A_
AWAVH
AUATI
[]A\A]A^A_
H;\$
D$ H
D$(H
]A\A]A^A_
t/ATI
[]A\
ATUSH
[]A\A]A^
{([]
AWAVI
AUATI
~II9]
[]A\A]A^A_
toE1
D$ I
D$(t
]A\A]A^A_
AWAVI
AUATI
S H9
[]A\A]A^A_
P H9
tiE1
C I9E
]A\A]A^A_
AWAVI
AUATL
S H9
r"H9
[]A\A]A^A_
E I9
[]A\A]A^A_
ATU1
H+.I
[]A\
AWAVAUATI
t$pdH
T$xH9
T$pH
D$xt
L$`L
L$<M
L$7H
D$7<a
D$<Hct$8I
D$8H)
D$<Hct$8
L$8H
Hct$8
L$<I
D$8H)
Hct$8
L$<9
D$`M
d$@H
HcT$8I
D$8H
HcT$8
|$ H
[]A\A]A^A_
d$PH
l$`H
t$8H
\$(H
D$(H
D$(H
|$ H
AUAT
[]A\A]
AWAVAUATI
[]A\A]A^A_
s(L)
AWAVH
AUATUSH
[]A\A]A^A_
tB8H
tE8H
tH8H
tcATUI
_HH9
l$HH
t$(I
AWAVI
AUATI
unH9
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATI
D$X1
D$ H
D$(H
|$8H
D$ I
D$(I
D$0I
|$8H
D$XdH3
h[]A\A]A^A_
|$8H
AWAVAUATUSH
D$h1
D$HM
|$8H
I;D$
D$ H
D$(H
D$0H
D$8H
D$@H
L$HH
L$PH
\$Xt
T$PH
D$ A
D$(I
D$0I
D$ H
D$8I
D$(H
D$@I
|$HH
D$hdH3
x[]A\A]A^A_
|$HH
AVAUH)
ATUI
]A\A]A^
AWAVI
AUATUSH
L+e8
e@I)
[]A\A]A^A_
AWAVAUATI
D$X1
t$8H
D$ H
D$ I
D$(H
D$(I
D$0H
t$8H
D$ H
D$(H
D$0H
|$8H
D$XdH3
h[]A\A]A^A_
4?L9
3333333
t$8I
D$ I
D$(I
D$0I
3333333
|$8H
AWAVAUATUSH
D$X1
l$0H
D$/H
tsf.
t$0H
|$0L9
D$XdH3
h[]A\A]A^A_
|$0I
AWAVAUATI
H;W(
H1C(
E u9I
]A\A]A^A_
H1C(
AWAVAUATUSH
o8H+o0dH
D$@H
t$ H
D$PH
D$@H
t$@I
t$`L
|$?L
|$`I
T$(M
|$@I
[]A\A]A^A_
{8H;{@t`H
D$ H
T$(H
T$ H
|$`I
|$@I
K L9
ATUSH
"L;f H
L;` H
[]A\A]
L;` H
[]A\A]
H9C r,L
[]A\A]
[]A\A]
[]A\A]
AWAVAUATI
sPH;sX
H;P(
b`L9bh
s I9
L9`h
H;J v
H;H s(H
[A\A]A^A_]
AWAVAUL
ATSL
[A\A]A^A_]
AWAVI
AUATUSH
L+e@H
eHI)
[]A\A]A^A_
AWAVI
AUATUSH
D$h1
D$0H
T$(H
D$8I
D$@I
D$HI
D$hdH3
x[]A\A]A^A_
,?L9
AUATL
o8USH
D$X1
D$ H
D$(H
|$8H
t$8H
D$ H
D$(H
D$0H
|$8H
D$XdH3
h[]A\A]
|$8H
AWAVAUATUSH
D$ H
t$(H)
D$hH
D$ H)
s8E1
D$0H
D$@H
D$HH
D$PH
D$XH
D$`L
D$hL
D$pL
|$xt
D$0H
D$8H
D$HH
D$PH
D$XH
D$`H
|$hH
PL9d$
D$ H
D$ L
U@E1
L+}8
u8H)
PL;,$
D$ H
D$(H
[]A\A]A^A_
|$hH
AWAVAUATUSH
L$(M
L$ H
8[]A\A]A^A_
AVAUH)
XZ[]A\A]A^
Y^[]A\A]A^
ATUH
d78I
]A\A]A^
St}H9
X8ttf
t$8H
]A\A]A^
t$8H
tbM9
[]A\A]A^
AVAUATH)
AXAY
H9,$
\$ I
XYH9
\$ H9
A[A]H9
l$ H
t$(M)
AYAZH9
l$ L
t$(H9
L$(H
Y^H9
8[]A\A]A^A_
L$(H
8[]A\A]A^A_
AWAVI
AUATM
\$ H
T$(H
8[]A\A]A^A_
m8tkI
]A\A]A^A_
\$(L
T$ H
T$ L
t$8H
\$ L
\$ L
\$(L
T$ H
T$ L
[]A\A]A^A_
AWAVH)
AUATH
[]A\A]A^A_
ATUI
[]A\
AWAVAUATUSH
L$0H
D$0I
L$(H
D$8H
{0I9
x0L9
t*I9
H;|$
D$ I
PL;p
D$`H
D$0H
t$ H
D$hH
L$XH
L$(H
t$HH
t$pH
PH9\$(
L9d$ 
D$(H
t$0H
D$HH
H9\$(H
D$HM
D$@H
L9d$ H
D$@H
L$@H
D$ H
L$HH
D$(vhL
t$(H
l$XI
\$hf
C@H9
l$XH
\$hH
L$HH9L$(
H;\$@L
d$@t1
C@H9
L9l$ H
\$ t4
E@H9
H;|$
D8	t
{0H9
t/H9
L$@H
D$ H
L$HH
D$(L9
t$(H
C@H9
\$PH
L$HH9L$(
H;\$@H
l$@t.
C@H9
L9d$ H
\$ t8
|$0I
D$@H9
D$0H
D$0H
|$8H
\$8H
D$xH
|$`H
\$`H
H;|$
D$0H
H;|$xt
H9\$ H
C@H9
H9\$ L
C@H9
T$0H
|$8H
}(H9|$
D$0H
D$0H
l$hL
d$pH9
E@H9
PH9l$Xu
[]A\A]A^A_
D$`H
fff.
AWAVAUATUSH
L$0H
t$@H
L$(H
[]A\A]A^A_
l$pH
D$HH
D$XH
D$PH
d$0H
|$0H
D$ L
` L;`(
t$`I
|$0A
D$(I
D$@I
D$0H
D$ L
D$ I
D$0H
D$0H
D$PH
D$XH
D$XH
L$`H
L$8H
t$PI
|$@H
D$ L
`8L;`@
t$hI
t$(I
|$(H
D$PI
|$@I
D$@H
D$ L
D$ I
D$`H
|$PH
D$XH
D$HH
|$ I
D$ H
H;|$8
|$0I
D$@H
D$ L
`8L;`@
t$PI
D$PI
|$@I
D$@H
D$ L
D$ I
EPH9
|$HH
H;|$8t
H;|$@t
=AMD
D$PH
D$HH
|$0H
D$HH
|$HH
D$(H
D$0H
D$ L
D$HH
D$(H
T$(H
D$ H
T$(L
D$(H
D$(H
D$`H
|$PH
D$XH
D$ H
T$0L
D$0H
D$PH
D$XH
H9|$ht
|$(I
|$8H
|$HH
H9|$`t
|$0I
|$8H
H9|$Pt
ATUSH
CPH9
tj[]A\
[]A\
AWAVI
AUATI
l$ I
D$ I
D$`H
D$ I
|$`I
EPH9
\$XH
|$(I
[]A\A]A^A_
EPH9
|$(I
H9\$
H9D$
`H9\$
H9\$
AWAVI
AUATI
D$x1
l$ I
D$ I
D$HI
D$ I
D$HI
|$PI
E@H9
|$(I
D$xdH3
[]A\A]A^A_
3333333
,$L9
E@H9
3333333
L9l$
H9\$
|$(I
AVUSL
B0L9
;@8>
x0H9
t"M9
[]A^
D$HI
\$(H
<$[]A\
[]A\
AWAVAUATUSH
W@H9
L9t$
H;\$
C@H9
PH9\$
L9$$t5
|$0I
D$@H9
PL9$$u
([]A\A]A^A_
C@H9
C8H9
AUATI
t$(H
L$8I
T$ H
T$HH
T$@H
D$0A\A]A^
AWAVAUATI
D$(H
t$0H
[]A\A]A^A_
s(L)
ATUI
[]A\
AWAVAUATUSH
D$81
"t=H
L$8dH3
H[]A\A]A^A_
AWAVI
AUATA
[]A\A]A^A_
ATUH
=3UB
[]A\
ffffff.
AWAVI
AUATUSH
|$@H
twf.
\$0H
D$0H
l$PH
|$PH
|$0H
\$ H
D$`H9
|$@H
|$pH
[]A\A]A^A_
l$pH
T$pH
|$pH
t$PH
|$pH
|$0H
|$PH
|$pH
AWAVAUATUSH
D$pH
D$xH
D$HH
t$HL
|$PL
H;|$
D$ H
T$ H
D$ H
D$@L
L$0M
\$8H
L9d$0L
\$8I
l$(I
t$ H
|$(M9
D$ L
D$(J
|$@L
E0H9
D$ H
H;|$
[]A\A]A^A_
d$`H
|$XH
D$ H
D$HH
D$ H
fffff.
AWAVAUATI
[]A\A]A^A_
u'L)
fff.
AWAVAUATUSH
D$`H
D$8H
D$hH
D$xH
D$xH
\$ H
D$(H
\$@H
\$0f.
t$ H
L9d$
D$(H
\$0H
|$ H
\$PI
|$(H
t$pH
[]A\A]A^A_
|$0H
|$8H
ffffff.
AWAVAUATUSH
t$(H
D$@H
\$(H
D$0H
\$pH
t$(H
D$ H
L9d$
D$(H
t$ H
\$8H
|$(H
|$0H
\$`H
[]A\A]A^A_
|$@H
|$8H
|$HH
fff.
AWAVAUATUSH
\$X1
|$ H
D$0H
D$(f.
L;d$
D$(H
|$(H
l$@I
|$ L
$H9G
D$XdH3
h[]A\A]A^A_
|$(H
AWAVAUATUSH
D$oH
t$ H
D$8H
D$@H
D$HH
|$o:
t$8H
|$o 
\$@H
H;|$Ht
D$0L
t$(M
D$PH
L9l$(
t$PH
EhH9
|$XH
[]A\A]A^A_
t$ H
|$0H
d$pH
=E4B
|$XH
|$ H
D$@H
EhH9
ffff.
AWAVAUATUSH
t$XH
T$8dH
|$`H
D$(H
L$pH
D$HH
T$(L
d$hH
t$HL
D$8L
D$@H
L9d$
D$(H
L$@H
fffffff
3333333
T$@H
|$8L
H9L$
t$@H
fffffff
t$8I
\$HM
t$@L
\$@E1
3333333
|$PI
\$`M
|$XL
\$XE1
|$hI
\$xM
|$pL
D$8H
CPH9
E@H9
t$pI
|$hH
CPH9
E@H9
D$ H
D$(H
D$XH
L$0H9
[]A\A]A^A_
E@H9
CPH9
|$hH
D$@H
D$@H
|$@H
|$8H
|$PH
|$hH
\$@H
|$(H
D$HH
|$HH
D$ H
|$ H
AWAVAUATI
[]A\A]A^A_
u'L)
fff.
AWAVAUATSL
phL;pp
D$(H
H9Cp
X8H;X@
(H9X@u
hhL;hp
D$8H
`L9hp
D$(H
D$8H
D$(H
l$8H
t$ L
\$8H
C0H9
C0H9
[A\A]A^A_]
ATUSH
C@H9
[]A\
AWAVAUATI
_0I9
CPH9
C@H9
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATI
_HI9
CPH9
]0H9
C@H9
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATI
[]A\A]A^A_
fffffff
AWAVL
AUATUSH
\$(I
t$ L
uHI)
[]A\A]A^A_
[]A\A]A^A_
AWAVL
AUATUSH
\$(I
t$ L
uHI)
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATL
USH)
D$ H
t$ H
t$8H
t$PH
t$hH
D$ I
t$0H
t$HH
t$`H
D$ L
t$0H
t$HH
t$`H
8[]A\A]A^A_
L+t$(I
t$ H
t$8H
t$PH
t$hH
t$0H
t$HH
t$`H
8[]A\A]A^A_
H9D$
w/I9
8[]A\A]A^A_
AWAVI
AUAT
[]A\A]A^A_
x H9
{ I9
AWAVAUATI
|$(I
W@H9
[]A\A]A^A_
|$(H
3333333
C@H9
AWAVAUATI
|$8I
,$L9
EPH9
t$ H
t$8H
[]A\A]A^A_
CPH9
AWAVH
AUATUSH
|$H1
H9,$t^H
\$ H
\$0H
t$HdH34%(
X[]A\A]A^A_
AWAVAUATUSH
uEL)
[]A\A]A^A_
([]A\A]A^A_
AVAUATI
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
tHI9^ t
[]A\A]A^A_
ATUI
[]A\
ATUI
o(H9
 []A\
AUATI
D$(1
5.tC
C(H9
D$(dH3
8[]A\A]
AVAUATUI
\$@H
D$h1
|$@H
t$ L
5WrC
d$0H
\$(L
C(H9
d$(M
C(H9
D$hdH3
p[]A\A]A^
|$(H
|$@H
ffffff.
ATUI
D$(1
\$ H
D$(dH3
0[]A\
fffff.
ATUI
D$81
\$ H
\$0H
D$8dH3
@[]A\
ffffff.
AUATI
D$X1
l$ H
l$ H
\$@H
\$PH
\$0H
D$XdH3
h[]A\A]
ATUH
CP[]A\
fff.
AWAVAUATUSH
D$ H
L9d$
D$(H
t$ H
ufH)
\$PH
t$8H
\$pH
|$(M
D$0L
L$(L
L9t$(tYI
t$0H
ucH)
\$`H
[]A\A]A^A_
d$@H
|$8H
ffffff.
AWAVAUATUSH
|$0H
T$ H
L$8H
|$`L
D$@H
L$ H
T$@H
D$@H
D$PH
D$HH
D$Xt
D$PH
D$XH
l$pH
l$XH
l$HH
H;D$
l$@H
l$HH
D$HH
T$8H
[]A\A]A^A_
ffffff.
AWAVAUATUSH
t$@L
d$`L
T$ H
D$ H
D$0H
D$(H
D$8t
D$0H
D$xH
D$8H
D$xH
\$pH
\$PH
\$8H
\$(H
H;D$
\$ H
\$(H
D$(H
[]A\A]A^A_
d$ H
AWAVAUATUSH
t$0L
T$pH
\$pH
D$pH
D$ H
D$xH
D$(t
D$ H
D$(H
\$@H
\$(H
\$xH
H;D$
\$pH
\$xH
D$xH
l$PH
\$pH
\$`H
[]A\A]A^A_
fffff.
AWAVAUATUSH
|$8H
T$ H
L$@L
D$pL
D$(H
D$@H
L$ L
T$PH
D$PH
D$`H
D$XH
D$ht
l$(H
D$`H
D$hH
l$hH
l$XH
H;D$
l$PH
l$XH
D$XH
D$8H
T$@H
[]A\A]A^A_
t$HH
=wzA
|$(H
AWAVI
AUATI
D$ H
D$(t
d$0L
l$PL
D$ H
D$hH
D$(H
D$pt
D$hH
D$pH
\$pH
\$`H
\$@H
\$(H
[]A\A]A^A_
AWAVAUATUSH
l$@H
l$HH
D$HH
l$@H
=SqA
D$(H
D$8H
D$0H
t$@H
D$@H
D$PH
D$HH
D$Xt
D$PH
D$XH
\$XH
\$pH
t$ H
\$HH
[]A\A]A^A_
T$8H
T$0H
t$ H
T$(H
AWAVI
AUATUSH
D$pH
D$pH
D$xH
D$ H
t$ L
D$ H
D$0H
D$0H
t$ L
D$ H
D$0H
d$PD
l$`H
-V?B
t$(H
[]A\A]A^A_
l$@H
=[UA
t$(H
T$ H
D$0H
T$0H
T$0H
t$ H
t$ H
ffff.
AWAVI
AUATI
-RPA
t$0H
\$`dH
d$XH
D$8H
D$@H
D$HH
D$0H
t$`H
T$hH
|$`H
D$ H
[]A\A]A^A_
|$`H
fffff.
AWAVI
AUATI
L$@H
D$ H
SPtKH
L$PH
D$(H
L$`H
D$0H
L$pH
D$8H
|$ H
D$(I
D$8I
D$@H
[]A\A]A^A_
fff.
AWAVI
AUATI
-\?A
t$ dH
d$HH
D$(H
D$0H
D$8H
D$ H
D$PH
D$PH
t$xH
D$XH
D$`H
D$hH
D$PH
[]A\A]A^A_
ffff.
AWAVI
AUATUSH
<$dH
P tPH
L$@H
UPtRH
L$PH
L$`H
L$pH
D$ I
D$(I
=f<A
=D4A
[]A\A]A^A_
=y/A
D$0H
=*/A
|$(H
AUATI
D$(1
D$(dH3
8[]A\A]
AWAVI
AUATI
[]A\A]A^A_
dH3<%(
AWAVI
AUAT
[]A\A]A^A_
x(H9
{(I9
AWAVI
AUAT
[]A\A]A^A_
x(H9
{(I9
AWAVI
AUAT
[]A\A]A^A_
x(H9
{(I9
AWAVI
AUAT
[]A\A]A^A_
{(I9
x(H9
fff.
fffff.
fffff.
tjAVAUI
ATUI
k(H9
[]A\A]A^
fffff.
fff.
AWAVH
AUATUSH
|$HH
D$XH
L$@H
D$8H
D$ H
|$HH
D$`H
D$PH
D$ H
|$8H
D$(H
H;|$(t
H;|$ t
\$pH
L$@H
D$0H
D$0H
D$XH
D$0H
D$0H
|$0H
u@I9
[]A\A]A^A_
D$XH
D$XH
u L)
D$XA
|$XH
|$PH
T$8H
AWAVAUATH
D$HH
D$8H
T$(H
[A\A]A^A_]
D$8H
AWAVAUATUSH
t$HH
T$XH
D$`H
D$PH
D$HH
D$HH
H;D$
D$HL
L;d$
t$ H
H9D$
D$0H
D$hH
D$(H
t$0H
|$0H
D$XH
T$0H
|$h1
D$8f
t$8H
T$(L
L$ H
L$ L)
ytL;t$
|$hL
D$`H
D$@H
t$@H
|$`1
[]A\A]A^A_
t$0H
|$XL
|$HL
|$HH
D$PH
t$xL
D$PH
|$`H
|$0H
|$8H
D$(H
ffff.
AWAVAUATUSH
t$PH
T$XH
D$`H
D$@H
D$PH
D$PH
H;D$
D$PL
L;d$
t$ H
H9D$
D$0H
D$hH
D$(H
t$0H
|$0H
D$XH
T$0H
|$h1
D$8f
t$8H
T$(L
L$ H
L$ L)
L;t$
D$`H
D$HH
t$HH
|$`1
[]A\A]A^A_
t$0H
|$XL
|$PL
|$hL
|$PH
D$@H
t$xL
D$@H
|$`H
|$0H
|$8H
D$(H
fff.
ffff.
thH9H
AWAVAUATI
[A\A]A^A_]
AWAVI
AUATUSH
L$0L
D$(H
|$(L
I+_0H
|$(H
T$ H
L$pH
L$hH
L$`H9
D$xI
G8H)
D$xH
|$pH
t$p1
T$8H
D$PH
D$@H
D$ f
I+_0H
|$PH
D$ H
|$@H
|$(H
T$HH
L;d$ t
H;|$
D$0H
H9P s
H9Q 
H9D$8I
L$8H9
D$XL
I+_0H
D$`H
|$hH
|$(H
T$ H
H;l$
H;|$`t
D$0H
H9X s
H9Y 
H9Z s
H9X 
H9D$8H
t$xH
t$(H
T$HL
T$ L
G8I;G@
T$ H
t$(H
t$(H
[]A\A]A^A_
D$pH
|$(H
D$xH
|$(H
D$PH
D$@H
D$hH
fff.
AWAVI
AUATUSH
t$hH
D$@H
D$8H
D$pH
l$xH
D$xH
D$XI9
D$pH
D$0H
D$ H
D$HH
D$PH
D$0H
L$8I
T$@H
|$HH
|$PH
T$(H
H;|$
H;|$
|$pH
|$pH
H;D$XI
L$8H
T$@H
t$hH
|$ I
D$hH
T$(H
D$pH
|$pH
L$pH
|$`L
T$(L
D$ H
\$xH
[]A\A]A^A_
L$pH
D$pH
|$0H
D$pH
D$0H
|$0H
t$ I
|$@H
T$(L
L$ H
D$pH
L$pH
D$HH
D$PH
ffff.
AWAVAUATI
|$(H
T$0dH
L$HH
>	w#
D$ H
T$8H
D$ H
t$@L
D$0L
D$ H
|$@H
T$0H
D$ H
t$@L
L$ H
t$(H
D$0H
l$ H
H;h v
H;j 
t$0H
|$8H
H;|$
t$(H
|$ H
t$ 1
|$0H
H;|$(t
d$PH
d$`H
tUM;e
T$8H
T$0H
t$@1
|$HL
[]A\A]A^A_
D$ H
D$ H
D$ H
|$0H
d$pH
|$@H
AWAVAUATI
|$(H
T$0dH
L$ H9
D$pH
L$@L
t$HH
t$XL
t$`L
|$(L
T$0H
\$XI
\$xH
t$PH
L$ H
[]A\A]A^A_
B 9C A
?unH
ATUH
[]A\
[]A\
ATUSH
[]A\A]A^
AWAVI
AUATI
S H9
[]A\A]A^A_
P H9
tiE1
C I9
]A\A]A^A_
ATUSH
C0H9
[]A\A]A^
AWAVI
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
rSH9
[]A\A]A^A_
AWAV
AUATE1
?t6M
([]A\A]A^A_
AWAVI
AUATUSH
H;D$
o(M;oH
M9oHv
L9d$
o8t1H
t$ H
H9D$
[]A\A]A^A_
o(M9oH
?umH
K D9
ATUSH
"D;f H
D;` H
[]A\A]
D;` H
[]A\A]
9C r.L
[]A\A]
[]A\A]
[]A\A]
ATUI
[]A\
AWAVAUATUSH
d$0H
D$0H
l$pH
|$PL
|$PI
D$ H
|$pI
|$0I
[]A\A]A^A_
l$pH
T$ H
|$pI
|$0I
|$PI
AWAVH
AUATH
<$dH
t$H1
d$ L
l$0H
\$(I9
C(H9
l$(M
d$ L
l$0H
\$(I9
C(H9
l$(M
d$ L
l$0H
\$(I9
C(H9
l$(M
d$ L
l$0H
\$(I9
C(H9
l$(M
d$ L
55VB
l$0H
\$(I9
C(H9
l$(M
H;D$
d$ L
5lTB
l$0H
\$(I9
C(H9
l$(M
d$ L
5rRB
l$0H
\$(I9
C(H9
l$(M
H;D$
D$HdH3
X[]A\A]A^A_
|$(H
ATUI
D$(1
\$ H
D$(dH3
0[]A\
5WjA
AWAVI
AUATUSH
|$8H
D$`H
H;\$
C0I9
"E:!
H;\$
D$8L
|$0L
t$ H
D$(M
L;t$ 
L;|$(
o0I9
L;t$ 
t$@H
|$0H
D$8L
l$ M
h8L9
D$8L
l$ M
XxH;\$
H;D$
D$8L
D$8L
D$`L
D$(I
D$PL
t$ L
=/z@
H;\$(
|$0H
L$(H
u	H9
t$H9
u	M9
t&M9
D$OH
T$XL
L$PI
D$Ou*L
L$PL
T$XM)
D$(H9
$A8E
u	L9
t(L9
$</t
\$pH
D$`H
D$8H
D$8H
H;\$ t#I
H;D$ H
D$8H
t$hH
[]A\A]A^A_
=^r@
t$hH
t$@H
AWAVI
AUATH
D$@H
D$ H
D$(H
D$PH
D$0H
D$XH
D$8H
-bPA
D$ H
D$PH
D$0I
D$8f
D$0H
D$PH
D$8H
D$`H
D$0H
D$8H
D$0H
D$HH
=7g@
D$ H
=*f@
D$@H
[]A\A]A^A_
D$ H
D$0H
D$PH
D$8H
D$XH
|$0H
D$@H
ttI9
H9\$
|$HH
D$@H9
H;|$8t
H;|$0t
D$ H
5J,B
D$XI
D$0H
D$PH
D$8H
tlI9_xtuH
H9\$
|$(H
D$ I
D$8I
D$(H
|$HH
H;|$8t
H;|$0t
D$ H
5j(B
l$@H
D$hI
D$`I
|$0H
D$8H
D$PH
t$0I
D$HH
ttI;
H9\$H
|$(H
D$ I
D$8I
D$(H
|$XH
L$HH
H;|$8t
t$`H
D$0H
D$(H
D$(I
t$(H
D$HH
t$PL
|$XH
D$8H
t$PL
DD$8L
|$(L
H9\$H
t$(H
|$8H
L$HH
H;|$0t
D$8I
D$(H
D$(H
|$@H
t$@H
L$`H
\$0H
D$HH
D$0I
t$`I
D$XH
l$xL
t$hI
|$pH
D$PH
t$hL
|$pL
=&Q@
DD$PL
H;\$X
t$(H
t$@H
|$PH
L$XH
D$0H
H;|$Ht
H;|$8t
=TI@
=YF@
=)F@
D$ H
=?E@
D$@H
D$0H
|$`H
|$XH
|$(H9|$pt
D$PH
|$`H
|$hH
D$PH
|$XH
|$(H9|$`H
}(H9|$`H
D$XH
D$PH
}(H9|$hH
AWAVAUATI
%B=@
t$@L
|$pdH
l$hH
D$HH
D$PH
D$XH
D$@H
D$xH
D$pH
l$ H
D$(H
D$0H
D$ H
[]A\A]A^A_
=l9@
=H9@
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
CHH9
ATUSH
tl[]A\
[]A\
ATUSH
tl[]A\
[]A\
ATUSH
[]A\
[]A\
ATUSH
[]A\
[]A\
ATUSH
[]A\
[]A\
ATUSH
[]A\
[]A\
AWAVI
AUATUSH
l$0H
H+D$8H
t$pL
|$pI
|$0H
|$PI
[]A\A]A^A_
|$pI
|$0H
|$PI
AVUSL
[]A^
/t	8
u$H)
AWAVI
AUATE
D$(1
C8M9
t8H9]
t+M9
\$ H
=n(@
D8	t
C8H9
u	I9
ttI9
\$(dH3
8[]A\A]A^A_
AWAVI
AUATI
D$(1
{0I9
t8I9]
x0M9
t'M9
\$ H
D8	t
H9\$
u	I9
trH9
|$8I
|$(M
|$(H
|$XH
D$PI
D$hI
\$(dH3
8[]A\A]A^A_
|$(I9
ATUH
[]A\
[]A\
tSATI
C8H9
[]A\
tAATI
[]A\
fffff.
fffff.
fff.
fff.
fff.
fff.
fff.
fff.
ffff.
ATUI
[]A\
AWAVI
AUATL
[]A\A]A^A_
[]A\A]A^
[]A\A]A^
[]A\A]A^
AVAUI
StZA
[]A\A]A^
AWAVI
AUATI
d$@H
\$ I
|$ H
[]A\A]A^A_
|$ H
AWAVAUATL
D$(1
<$L9
D$(dH3
8[]A\A]A^A_
fffff.
AWAVI
AUATUSH
d$`L
l$ H
D$ I
T$(H
t$ L
T$(H
t$ L
T$(H
t$ H
\$@I
|$@H
|$ I
[]A\A]A^A_
|$@H
|$ I
ATUH
dH34%(
 []A\
fffff.
fff.
fffff.
fffff.
fff.
ATUH
dH34%(
 []A\
GHH9Gh
AVAUI
ATUI
\$ dH
[]A\A]A^
fffff.
ffff.
D$(1
D$(dH3
ATUH
G(SH
G dH
D$H1
t$ H
L$(t
L$0H
D$8t
T$HdH3
|$8H
fff.
fff.
D$(1
D$(dH3
fffff.
AWAVAUATUSH
d$`H
L$(H
t$ H
t$`H
|$`L9
[]A\A]A^A_
|$`I
ATUH
D$(1
L$(dH3
0[]A\
fffff.
AUATI
D$(1
5u @
EpH9
|$ H
|$ H
t$(dH34%(
8[]A\A]
|$ H
AVAUATUSH
l$0H
D$xH+D$XH
D$`H+D$hH
t$PH+t$@H
t$`H
T$@H
|$PL
T$XL
t$ H
D$ H
[]A\A]A^
AUATUSH
ohdH
H9op
[]A\A]
h0D)
FhH;FHtbH9Fp
AWAVAUATUSH
L$X1
T$8H
t$0H
|$0I
B(H9
T$8H
t$0H
|$0H;<$t
B(H9
T$8H
t$0H
|$0H;|$
D$XdH3
h[]A\A]A^A_
BXH9
T$8H
t$0H
|$0L9
\$ H
\$ H
|$0I
[]A\
ATUSH
D$(1
L$(dH3
0[]A\
fff.
AWAVAUATUSH
D$0H
D$XL
T$PH
L$pH
D$`H
D$`H
\$xH
L$0H
T$8H
T$`H
D$xH
T$xH
D$hH
D$`H
t$XH
l$XH
\$xH
D$HH
D$PH
D$hH
D$`H9D$h
D$@H9D$`
D$`H;D$h
|$`H;|$h
D$`H
D$@H9D$`
[]A\A]A^A_
D$xH
T$xH
|$hH
D$pH
D$xH
t$XH)
D$xH
|$0H
\$8H
L$0H
D$xH
l$ H
ATUH
~ dH
D$81
L$ H
D$(t
|$(A
\$8dH3
@[]A\
\$ H
|$(H
AWAVI
AUATA
D$(1
D$(dH3
8[]A\A]A^A_
AWAVAUATUSH
t$8H
D$XH
D$@H
D$`H
|$pH
\$xH
T$pH
\$xH
D$@H
D$HH
D$`H
D$ H
t$ H
D$8H
D$PH
D$0H
D$8H9X
L$0H
D$0H
D$(H
D$ H
H;|$Ht
H;|$@
H9\$PA
D$(H
t$(H
L$PA
D$8H
[]A\A]A^A_
D$(H
|$(H
D$ H
|$ H
|$hH
D$`H
D$XH
|$(H
|$ H
AWAVAUATUSH
D$X1
L$XdH3
h[]A\A]A^A_
W H;U u
G`H9E`u
v8@8p8
$H9D$
l$@H
D$Ht
|$0H
D$8t
D$0L
|$@H
T$@H
D$Ht
T$@H
D$0H
l$0M
d$@I
V0H9S0t2
V0H;S0u
tPI9
l$ H
AWAVAUATUSH
D$PH
T$XH
t$PH
D$pH
T$xH
t$pL
T$ H
D$(t
l$@H
t$@M
T$XH
t$PL
|$pH
|$PI
[]A\A]A^A_
l$0H
D$0H
|$pH
|$PI
fffff.
AWAVAUATUSH
d$ H
|$`H
|$0L
L$(H
t$ H
[]A\A]A^A_
AWAVAUATI
D$pH
D$pH
D$xH
D$pH
D$@H
D$Ht
D$hM
|$@H
T$@H
l$PH
D$XH
T$PH
T$`H
D$ht
L$@H
T$@H
T$HH
D$HH
L$`H
[]A\A]A^A_
\$0H
\$ H
fff.
AWAVAUATI
D$`H
D$`H
D$hH
D$pH
D$xH
D$`H
D$ H
D$(t
D$8M
|$ H
D$ H
T$0H
D$8t
d$@H
D$HH
T$@H
T$PH
D$Xt
L$ H
T$ H
|$XH
T$(H
D$(H
L$PH
[]A\A]A^A_
fffff.
AVAUI
ATUI
 []A\A]A^
AWAVE1
AUATUSH
L$8H
|$ dH
J 9O H
t$0H
T$(t-H
[]A\A]A^A_
D$@H
D$pH
D$HH
D$xH
\$@H
l$(H
|$`H
D$`H
D$hH
D$pH
D$xt
|$HH
D$`H
M`H9H`t>H
D$@H
E@H9
l$XI
E88C8
l$XH
t$0H
D$`H
t$8L
H;|$
D$@H
|$HH
fff.
AUATUSH
D$h1
GhH;GH
H9Gp
{hH;{Ht!H9{p
xH9G
D$hdH3
x[]A\A]
CHH9Cht
GhH9GH
H9Gp
l$PH
T$ H
T$0H
D$8H
t$@H
T$PH
D$XH
t$`H
T$XH
T$`H
l$PH
T$0H
t$@H
T$PH
l$PH
fff.
AWAVAUATUSH
t$ H
D$@L
D$0H
\$HH
D$@H
D$Ht
D$0H
D$8t
\$8A
[]A\A]A^A_
D$PH
D$Xt
\$PL
L$ H
D$`H
D$ht
\$`L
|$pH
\$/L
AWAVAUATUSH
t$ H
D$@L
D$0H
\$HH
D$@H
D$Ht
D$0H
D$8t
\$8A
[]A\A]A^A_
D$PH
D$Xt
\$PL
L$ H
D$`H
D$ht
\$`L
|$pH
\$/L
fff.
AWAVAUATUSH
t$HH
D$ f
D$(A
D$0H
D$ H
L$(H
L$0H
|$ 1
H;|$8t
G@H9
G@H9
D$ f
G@H9
G@H9
t$@H
G@H9
d$pH
d$PH
d$`H
|$HH
[]A\A]A^A_
D$ H
AWAVAUATUSH
D$ H
e@M9
D9d$
|$(H
|$ L
d$pH
d$`H
l$PH
t$8H
t$0H
[]A\A]A^A_
l$@H
t$8H
t$0H
AWAVAUATUSH
\$`H
\$pH
l$@H
\$ H
\$0H
\$PH
[]A\A]A^A_
AUATI
D$x1
D$@H
\$@I
\$@1
l$ H
D$xdH3
[]A\A]
fff.
AUATI
D$81
l$ H
D$8dH3
H[]A\A]
AWAVI
AUATM
[]A\A]A^A_
[]A\A]A^A_
fffff.
AUATI
[]A\A]
fff.
AVAUI
StZA
[]A\A]A^
dH34%(
fff.
AUATUSH
c dH
D$(1
L$ H
D$(dH3
8[]A\A]
AWAVAUATUSH
Hl9OlI
D$ H
D$(t
d$0I
D$0I
D$0H
l$`H
D$`H
D$ H
D$(H
D$`L
|$hH
|$8I
[]A\A]A^A_
\$ H
\$ H
\$ H
|$hH
|$8I
|$hH
|$hH
fffff.
AUATI
D$81
L$8dH3
H[]A\A]
fff.
AWAVAUATUSH
W(dH
D$HH
D$ H
D$XH
[]A\A]A^A_
D$ 1
|$HH
D$(H
t$0M
-(a@
\$8I
L9l$0H
\$8t
D$PH
L$`H
|$@H
|$(I
H;|$ t
l$pL
|$(H
D$HH
AWAVI
AUATUSH
|$HH
t$PdH
D$ H
D$@H
D$8H
D$XH
\$ H
t$(H
T$@H
D$8H
|$XH
t$@H
E@H9
E@H9
H;|$
H;<$t
H;|$8t
D$pH
D$xH
|$PH
S H;U 
|$0H
D$@H
E@H9
D$@H9
D$`H
D$0H
=qe?
|$(I
I;T$
D$0H
D$`H
D$hI
|$(H
|$@L
t$(I
t$@I
H;|$0t
|$(L
t$(I
t$@I
D$xH
D$pH
\$ H
[]A\A]A^A_
=b^?
t$(H
|$0H
D$@H
D$xH
D$pH
|$0H
E@H9
D$@H9
D$`H
|$ H
|$8I
D$81
L$ H
T$(t
|$(H
t$ H
D$8dH3
AWAVL
w AUATL
l$0M
D$H1
Ed$0I
d$ H
T$(H
D$(H
L$ H
T$(H
L$0H
T$8t
t$0H
|$(L
\$HdH3
X[]A\A]A^A_
|$(H
AWAVAUATI
[]A\A]A^A_
|$@L
t$ L
D$XH
\$pL
t$PL
t$PL
fffff.
L$(1
D$(dH3
AWAVAUATI
T$ dH
D$(H
P@I9
D$`L
t$`H
t$ H
L$pL
P@I9
|$ H
[]A\A]A^A_
d$@H
d$PH
d$0H
=MB?
fff.
D$81
tjH9
L$ H
T$(t
|$(H
t$ H
D$8dH3
AWAVI
AUATI
D$ H9
\$pH
T$xH
D$xH
|$pH
D$pH
D$(H
D$0H
P@H9
|$pH
\$@H
[]A\A]A^A_
\$pH
T$8H
T$pH
T$xH
|$ H
l$PH
T$(H
T$0H
d$`H
=G6?
D$(1
D$(dH3
0[]A\
=[4?
AWAVAUATUSH
G dH
[]A\A]A^A_
t$0L
l$`H
D$HH
t$hH
D$`H
8H9:
l$HI
t$@L
|$ H
=j0?
t$@L
AWAVI
AUATI
L$0H
=Z/?
=f.?
D$0L
D$ H
D$pH
D$`H
\$hH
\$xH
t$ L
|$0L
t$PH
=])?
t$@H
==)?
t$8H
t$XH
t$HH
[]A\A]A^A_
=L(?
t$PH
t$@H
t$8H
t$XH
t$HH
|$ H
|$(H
fffff.
ATUI
\$0H
T$hH
[]A\
AUAT
D$x1
D$@H
T$HH
D$PH
T$Xt
|$XD
D$xdH3
[]A\A]
d$`H
D$`H
\$0H
\$ H
=F#?
ATUH
D$(1
D$(dH3
0[]A\
fff.
AUATUSH
D$(1
L$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
ATUI
[]A\
ATUI
[]A\
AUATI
D$(1
T$ H
L$(dH3
8[]A\A]
AWAVAUATUSH
O8dH
D$8H
t$0H
d$@L
Ed$(I
T$`I
D$ht
D$PL
D$PH
L9d$
t$(L
|$HH
[]A\A]A^A_
l$`H
D$pH
D$xH
t$0H
\$ H
l$`H
l$`H
fff.
AWAVI
AUATH
\$0H
l$@dH
D$X1
d$@M
l$pL
D$XdH3
h[]A\A]A^A_
d$ H
fff.
ATUI
 []A\
fff.
AWAVAUATI
l$@dH
|$@H
T$@I
t$@E:l$8tCE
l$8H
[]A\A]A^A_
\$0H
\$ H
D$pL
|$@H
fff.
AVAUI
ATUI
\$ H
D$H1
D$HdH3
P[]A\A]A^
fffff.
ATUI
[]A\
AVAUI
ATUH
l$ H
D$H1
D$HdH3
P[]A\A]A^
fff.
ATUI
[]A\
AUAT
[]A\A]
AWAVI
AUATA
D9h s
D9k I
\$`H
l$PH
[]A\A]A^A_
G H9
l$ H
l$0H
l$@H
l$pH
fff.
AWAVI
AUATA
d$ dH
\$HH
D$(H
D$0H
D$8H
[]A\A]A^A_
l$PL
D$XI
|$XH
|$XH
fff.
AWAVI
AUATI
d$@dH
D$x1
D$0B
l$8H
D$ H
D$(H
D$`C
|$hH
D$HH
D$PH
D$XH
D$xdH3
[]A\A]A^A_
AUATI
d$ dH
D$81
D$ H
D$8dH3
H[]A\A]
fff.
ffffff.
AWAVI
AUATI
D$ H
D$(H
|$HH
|$HH
|$HH
d$`H
D$ H
D$XH
d$pI
D$(H
t$HH
t$(L
L$(H
t$HL
t$(L
|$XD
D$(H
t$HH
t$(L
9p s
A9u 
D$(H
T$(L
t$(H
D$(H
|$ D
t$@H
t$8H
t$0H
D$(H
T$(L
t$(H
D$(H
t$@H
t$8H
t$0H
[]A\A]A^A_
|$HI
|$HI
|$HI
t$(H
t$(H
AWAVI
AUATI
D$@H
|$@H
L$@H
Q@H9
L9d$
t$ L
\$pL
l$PH
D$PH
l$PH
|$@A
[]A\A]A^A_
\$0H
l$ H
AWAV
AUATA
d$@dH
D$@H
D$@H
D$pL
t$pH
|$`H
D$`H
L$@I
H9L$
D$@H
[]A\A]A^A_
D$@H
|$xH
D$pH
l$PH
\$ H
\$0H
AWAVAUATUSH
\$PH
D$pL
|$(H
|$ H
[]A\A]A^A_
\$0H
\$@H
\$`H
|$(H
|$ H
ATUH
 []A\
AWAVI
AUATI
|$8H
T$hH
D$XH
D$XH
D$@H
D$HH
D$PH
D$pH
D$xL
|$@L
t$HH
D$PH
l$X1
D$XH
L$8L
L$8H
|$@L
|$HL
	w1H
,Ht]
D$@I
D$PI
D$XH
D$xI
|$pH
D$8H
T$@H
|$X1
|$8L
D$ H
D$(H
D$(H
l$ H
|$ H
t$ I
|$hH
D$`H
D$PH
D$HH
D$@H
[]A\A]A^A_
l$ H
t$(L
L$0H
t$ I
H;|$
H;|$
t$`H
|$8H
|$`H
D$PH
D$HH
D$@H
D$XH
|$`H
D$PH
D$HH
D$@H
D$(H
D$ H
|$0H
D$XH
|$(H
D$XH
fff.
AUATI
\$0dH
t$0H
D$xH
T$8H
|$0H
D$ H
D$0H
|$0H
|$8H
[]A\A]
|$8H
|$0H
fffff.
AWAVAUATUSH
D$h1
ED$PH
T$@H
D$Ht
t$@1
|$8H
\$ H
T$@H9
T$@H
T$PH
D$Xt
D$hdH3
x[]A\A]A^A_
d$PM
\$0H
|$PH
|$PH
t$@H
AWAVAUATI
t$0H
|$ H
D$(I
D$8I
D$@H
t$8I
D$(H
[A\A]A^A_]
|$8H
AZA[H
P@I9
P@I9
t$ H
t$ L
t$ H
AWAVAUATI
C H9
D;h v
D;j 
;X v
;X v
;Z s
E;o w
D;o r
D;h v
=Q|>
=U{>
=vz>
=Dz>
=#z>
=~y>
=]y>
=<y>
=}w>
=7v>
=^m>
==m>
=wl>
[A\A]A^A_]
=ak>
AWAVI
AUATUSH
l$pH
L$ H
T$(dH
H9D$
tSf.
H9D$
~hL9
t&f.
t$PH
t$PH
|$ H
H;D$
l$0H
t$`H
t$(L
t$`H
|$ H
H;D$
|$(L
l$@H
[]A\A]A^A_
=ha>
=<a>
=x`>
=L`>
=(`>
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATUSH
[]A\A]
[]A\A]
AUATUSH
[]A\A]
[]A\A]
AUATUSH
[]A\A]
[]A\A]
AUATUSH
[]A\A]
[]A\A]
AWAVAUATI
D$HI9EHt
[]A\A]A^A_
t$8I9
D$xI9Exu
t$hI9
D$`H9E`
t$PH
L9l$
AUATI
D$(1
D$(dH3
8[]A\A]
D$(1
L$(dH3
AUATI
D$(1
D$(dH3
8[]A\A]
AWAVAUATI
D$(1
T$(dH3
8[]A\A]A^A_
AWAVAUATUSH
D$81
L$ D
D$,H
L9d$
\$8dH3
D$8ubH
H[]A\A]A^A_
\$0H
L$,L
D$ H
=7P>
AWAVE
AUATI
tdI9]
=BO>
t$(H
t$@H
([]A\A]A^A_
}(I9
ATUA
D$(1
L$(dH3
0[]A\
ATUSH
[]A\A]A^
C(H9
C(H9
C(H9
ATUSH
C8H9
[]A\A]A^
C(H9
C(H9
ATUSH
[]A\A]A^
AWAVH
AUATUSH
L;d$
t$(I
[]A\A]A^A_
[]A\A]A^A_
D$HI
\$(H
<$[]A\
[]A\
AWAVAUATUSH
|$ L
D$(L9
L9l$
H9t$(
L;t$
L9t$
L9t$
L9|$
L9|$
L9|$
|$ H
8[]A\A]A^A_
L;t$
L9t$
C H9
C H9
AWAVH
AUATUSH
L;d$
t$(I
[]A\A]A^A_
[]A\A]A^A_
D$HI
\$(H
<$[]A\
[]A\
AWAVAUATL
|$ L
D$(H
wHL9
L9t$
H9t$(
L;|$
L9|$
L9|$
4$H9t$
$H9D$
$H9D$
|$ H
8[]A\A]A^A_
L;|$
L9|$
1H92u
ATUSH
[]A\A]A^
AWAVH
AUATI
-:"?
t>I9]
[]A\A]A^A_
H9\$
]A\A]A^A_
AWAVH
AUATUSH
L;$$tAI
[]A\A]A^A_
[]A\A]A^A_
AWAVH
AUATUSH
L;$$t)H
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
tgE1
C A9
]A\A]A^A_
ATUSH
[]A\A]A^
AWAVAUATL
A;F w
[]A\A]A^A_
;G r
[]H)
A]A^A_
AVAUATUSH
D$81
d$ L
#S(	
D$ H
D$(H
H91u#
T$ H
D$(t
|$(H
L$ H
\$8dH3
@[]A\A]A^
ATUSH
 []A\
AUATI
D$(1
D$(dH3
8[]A\A]
AWAVI
AUATI
[]A\A]A^A_
dH3<%(
AWAVI
AUATI
`8L9
c8L9
[]A\A]A^A_
AUATI
t$(H
L$8I
T$ H
T$HH
T$@H
D$0A\A]A^
AWAVAUATI
[]A\A]A^A_
s(L)
AVAU
t$(I
D$ H
D$HH
D$8L
D$0I
L$@A\A]A^
AWAVI
AUATL
[]A\A]A^A_
E A9
[]A\A]A^A_
AUATI
[]A\A]
AVAUI
ATUM
9C r
[]A\A]A^
;A r
;B wVH
u(tPH9
I+E(]A\A]A^
ATUH
[]A\
[]A\
<	w-H
AVAUATUSH
dH34%(
[]A\A]A^
I;T$
ATUSH
54`>
[]A\
AWAVAUATI
[]A\A]A^A_
 t$USH
AWAVAUATI
D$81
D$ I
D$0H
|$8dH3<%(
H[]A\A]A^A_
AWAVI
AUATI
dH3<%(
([]A\A]A^A_
AWAVAUATI
[]A\A]A^A_
AWAVH
AUATUSH
t$(L
[]A\A]A^A_
AWAVAUATI
D$(1
I;D$
L$(I
E8H9
D$(H
t$ I
$t(H
D$(dH3
8[]A\A]A^A_
\$ H
AWAVH
AUATUSH
([]A\A]A^A_
AWAVAUATI
D$(1
I;D$
L$(I
D$(H
t$ I
$t=H
D$(dH3
8[]A\A]A^A_
\$ H
AVAUI
ATUI
[]A\A]A^
AVAUATI
[]A\A]A^A_
D$ H9
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
AWAVH
AUATUSH
H9l$
d$ H
\$PH
D$8H
t$xH
t$0L
dH3<%(
[]A\A]A^A_
t$0L
AWAVE
AUATI
D$(1
\$ H
H9\$
t$(H
t$@H
L$(dH3
8[]A\A]A^A_
t$(I
}(I9
AWAVE
AUATI
D$(1
\$ H
H9\$
t$(H
L$(dH3
8[]A\A]A^A_
t$(I
}(I9
AUATL
[]A\A]
D$(1
t	H;7
D$(dH3
AUATL
[]A\A]
D$(1
t	H;7
D$(dH3
AWAVM
AUATA
D$H1
T$(H
\$ H
t$0H
T$8H
D$8H
D$0H
|$8H
T$0H
T$8H
\$0H
T$8t
t$HdH34%(
X[]A\A]A^A_
\$0H
\$0H
T$8H
\$0H
T$8t
|$8H
\$ H
\$0H
\$0H
AUATL
[]A\A]
D$(1
t	H;7
D$(dH3
AUATL
[]A\A]
D$(1
t	H;7
D$(dH3
AWAVM
AUATA
D$H1
T$(H
\$ H
t$0H
T$8H
D$8H
D$0H
|$8H
T$0H
T$8H
\$0H
T$8t
t$HdH34%(
X[]A\A]A^A_
\$0H
\$0H
T$8H
\$0H
T$8t
|$8H
\$ H
\$0H
\$0H
|$(1
0ufH9
\$(dH3
AWAVI
AUATI
teL9
C 9E 
[]A\A]A^A_
ATUI
D$X1
\$0H
|$0H
D$XdH3
`[]A\
|$0H
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$X1
T$ H
l$0H
|$0I
D$XdH3
h[]A\A]
|$0I
D$81
D$8dH3
fff.
AWAVAUATUSH
l$@H
d$`H
D$8	
\$0H
T$HH
t$@H
T$hH
t$`H
t$ H
t$$H
t$(H
t$,H
t$8H
|$`I
|$@H
[]A\A]A^A_
D$8H
t$81
T$8H
|$`I
|$@H
D$81
D$8dH3
\$ dH
D$H1
T$(H
t$ H
|$ H
D$HdH3
|$ H
fff.
fff.
ATUI
[]A\
fffff.
AWAVAUATI
[A\A]A^A_]
fffff.
AWAVAUATI
[A\A]A^A_]
fffff.
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AWAVAUATSH
[A\A]A^A_]
AWAVAUATSH
[A\A]A^A_]
ATUH
\$0L
D$hH
D$hH
t$`H
[]A\
\$0H
l$ H
fff.
AWAVAUATSH
[A\A]A^A_]
fffff.
AWAVAUATSH
T$0L
[A\A]A^A_]
AWAVH
AUATUSH
D$`H
D$0H
D$8L
D$HH
\$HL
|$/I
t$@H
[]A\A]A^A_
\$`H
t$@H
AWAVH
AUATUSH
|$@L
D$(H
\$(I
t;f.
t$ L
[]A\A]A^A_
t$ L
fff.
AWAVH
AUATUSH
|$pL
t$@1
D$XH
D$`H
D$ H
\$XI
t$PL
[]A\A]A^A_
\$@H
t$PL
AWAVAUATSH
[A\A]A^A_]
AWAVAUATSH
[A\A]A^A_]
AWAVH
AUATUSH
d$ H
t$0L
t$0H
<$E1
[]A\A]A^A_
d$PL
t$0L
AWAVAUATSH
[A\A]A^A_]
AWAV1
AUATI
l$pL
|$@dH
.I9n
D$XH
\$0H
\$XI
d$ H
t$PL
[]A\A]A^A_
t$PL
AWAV1
AUATI
l$pL
|$@dH
.I9n
D$XH
\$0H
\$XI
d$ H
t$PL
[]A\A]A^A_
t$PL
AWAVI
AUAT1
D$`I
/I9o
D$hH
D$xH
\$PH
\$@H9\$HH
l$/t1
H9\$Hu
t$pH
[]A\A]A^A_
\$0H
t$pH
AWAVH
AUATUSH
l$`L
D$@H
I9D$
I9D$
\$0H
[]A\A]A^A_
\$ H
AWAVH
AUATUSH
|$P1
D$hH
D$pH
\$@H
t$`L
[]A\A]A^A_
\$ H
t$`L
fffff.
AWAVH
AUATUSH
|$ L
t$`L
D$xH
\$@H
D$0H
\$@H
t$pL
[]A\A]A^A_
t$pL
fff.
AWAV1
AUATI
l$PL
l$pH
l$PH
\$0H
[]A\A]A^A_
D$ L
l$PH
\$0H
l$pH
l$PH
\$0L
l$PH
l$PH
D$ H
l$PI
AWAVAUATSH
[A\A]A^A_]
fffff.
AWAVAUATSH
[A\A]A^A_]
AWAVAUATSH
F(H9
F(H9
[A\A]A^A_]
fff.
AWAVAUATUSH
D$@H
D$8H
D$HH
D$_H
D$(H
l$(H
C(H9
|$ I
L$XI
T$@H
5su?
t$pA
t$8H
D$pH
D$xI
l$(L
t$(H
5wl>
|$ H
|$8H
[]A\A]A^A_
=ky=
D$ H
\$`H
="y=
|$ H
|$8H
AWAVAUATSH
[A\A]A^A_]
=Yt=
ffff.
ATUSH
D$(1
E8H9
|$ H
|$ H
D$(dH3
0[]A\
|$ H
AWAVAUATSH
E@H9
E@H9
s)E1
EPH9
E@I9
=ci=
59O>
h@L9
5[d?
=sf=
GXH9
GXH9
50a?
=ee=
5"V>
[A\A]A^A_]
AWAVH
AUATUSH
l$@H
=Q_=
|$pH
L$PH
L$`H
L$?L
t$>H
o@L9
D$> 
H;D$
[]A\A]A^A_
=z[=
fff.
AWAVH
AUATUSH
t$8L
D$xH
t$81
D$@H
D$hH
D$HH
D$PH
D$XH
t$(H
t$7H
='?>
L$8H
|$hH
|$HH
T$ H
t$HH
|$PH
t$PH
|$XH
t$XH
D$@H
[]A\A]A^A_
=kQ=
|$hH
|$HH
|$PH
|$XH
AWAVH
AUATUSH
t$PH
T$PH
D$01
|$8H
|$8L
|$8H
t$@H
D$0H
\$pH
T$xH
t$pH
|$pH
|$PL9
[]A\A]A^A_
\$0H
T$XH
t$PH
=SM=
|$PI
l$ H
T$XH
t$PH
|$pH
AWAVAUATI
[A\A]A^A_]
AWAVI
AUATI
D$(L
L$8H)
D$ H
D$`H
D$@H
D$hH
H9\$
l$PH
D$PH
D$PH
T$ L
T$0H
AZA[H
L$0H9
H;L$
l$XM
|$@H
D$`H
D$`H
AXAYH
L$0H9
D$0H
D$(H
D$(H
D$(H
D$(H
D$(H
D$(H
D$(H
d$pH
D$pH
D$pH
T$(H
L$ H9
H;L$
d$xM
|$(H
L$ H9
D$ H
D$8H
D$8H
D$8H
D$8H
D$8H
D$8H
[]A\A]A^A_
T$ H
|$(L
|$8L
D$ H
|$(H
|$@H
AWAVH
AUATUSH
D$ H
l$pH
D$0H
D$(M
|$8H;|$@
|$8H
|$8L
D$PH
|$(L
t$8H9t$0
D$PM
D$`H
|$8H
D$XH
|$8H;|$@
|$8H
|$8H
t$8H9t$0
|$ H
[]A\A]A^A_
|$(H
=73=
D$0H
fff.
AWAVH
AUATUSH
D$ H
l$pH
D$0H
D$(M
|$8H;|$@
|$8H
|$8L
D$PH
|$(L
t$8H9t$0
D$PM
D$`H
|$8H
|$8H;|$@
|$8H
|$8H
t$8H;t$0
t@f.
|$ H
[]A\A]A^A_
|$(H
=j.=
D$0H
fff.
AVAUATUH
 []A\A]A^
AVAUATUI
[]A\A]A^
B 9E
fff.
AWAVAUATI
AYAZI
t*(tkH
t*(M9
t*(tkH
t*(M9
t$ H
9p }
t	9r 
t$ H
9p }
9r ~
_AXt
AZA[
D$ H
t$0H
T$8H
T$ H
9P }
A9U 
AXAY
t$ H
t$ H
t$ H
[A\A]A^A_]
H9H`
H@L9
C8A8E8
AWAVAUATI
I;|$
[A\A]A^A_]
AWAVI
AUATUSH
L$ L
D$(L
C@I)
L$@H
l$PI
l$PH
l$PH
T$ H
D$@E1
D$(H
\$pI
|$pH
[]A\A]A^A_
|$pH
L9d$
L9d$
H9l$
ATUH
[]A\
[]A\
{ []
{ []
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVL
AUATSL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVL
AUATSL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVAUATL
AWS1
XZL9
[A\A]A^A_]
AWAVL
AUATI
[]A\A]A^A_
AWAVH
AUATUSH
L;$$tQI
u/H)
[]A\A]A^A_
[]A\A]A^A_
tAATI
[]A\
AWAVL
AUATI
C8H9
[]A\A]A^A_
AVAUI
[]A\A]A^
]A\A]A^
t2[L
]A\A]A^
AVAUI
[]A\A]A^
]A\A]A^
t2[L
]A\A]A^
AVAUI
[]A\A]A^
]A\A]A^
t2[L
]A\A]A^
AWAVH
AUATH
L$(1
-VY=
L$(dH3
8[]A\A]A^A_
H9\$
UXtMH
L$ H
AVAUH
ATUH)
H9k8tRH9k`t|H9
[]A\A]A^
C([]A\A]A^
AUATI
[]A\A]
AWAVI
AUATI
[]A\A]A^A_
AUATUSH
[]A\A]
AVUSH
K0L9
[]A^
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
AWAVL
AUATI
D$0H
D$PH
D$XI
[]A\A]A^A_
{(H9|$
K D9
ATUSH
"D;f H
D;` H
[]A\A]
D;` H
[]A\A]
9C |.L
[]A\A]
[]A\A]
[]A\A]
AUATUSH
D$h1
9J }
t	9K 
d$0H
D$ I
|$@I
|$hdH3<%(
x[]A\A]
|$@I
fff.
ATUI
[]A\
AWAVAUATUSH
t$(H
L$0H
D$8H
D$@H
D$HdH
D$ H
=G\<
D$(H
=E[<
l$PH
l$`H
l$pH
=dY<
D$0H
=\X<
D$@H
D$8H
|$ H
H;|$
D$HH
=\V<
[]A\A]A^A_
T$ H
AVAUATUI
T$ H
[]A\A]A^
AWAVAUATUSH
t$0H
|$HH
D$8H
=aS<
D$8H
D$@H
D$pI
D$PH
t$@L
|$HL
t$0H
|$PH
D$(L
D$(H
D$ H
D$XH
D$xH
D$ M
l$xH
H9\$ H
l$xt
|$XL
T$XH
H;\$ 
t$`H
|$(L
T$(H
|$ L
|$@H
|$8H
\$@H
D$8H
D$0H
H9H(
[]A\A]A^A_
|$(H
|$XH
=fF<
t$`H
t$`H
|$@H
|$(H
AWAVAUATI
|$(H
T$`H
L$XL
D$hH
D$8H
=^D<
D$8H
L$HH
x tRH
\$HH
|$(L
D$ H
5:(=
|$(L
D$hH
D$XL
T$0M
L9d$0
t$ H
%f'=
|$ H
D$8H
[]A\A]A^A_
\$`L
|$`L
|$ H
|$HH
|$8H
|$ H
AVAUATUI
[]A\A]A^
AWAVAUATUSH
t$0H
D$8H
=q9<
l$pH
=29<
D$(H
D$8H
D$PH
D$hH
D$@H
|$HH
D$0L
t$ M
L9d$ t
T$@H
|$0L
|$XI
D$(L
D$(H
D$8H
[]A\A]A^A_
\$PH
D$(H
D$(A
D$(H
|$8H
|$PH
|$@H
t$hH
|$hH
|$(H
AWAVAUATUSH
D$PH
D$(H
l$`H
D$(L
D$ H
D$8H
D$pH
D$HH
D$8I
\$ H
H9l$
|$ H
T$ H
|$8H
D$(H
[]A\A]A^A_
=Q-<
=A-<
|$0L
=q,<
|$HH
=I+<
|$XH
|$PH
|$ H
|$HH
|$XH
AWAVAUATUSH
|$@H
t$ H
=}(<
l$pH
t$@H
D$(H
D$HH
D$PH
D$`H
H;\$
[]A\A]A^A_
\$ H
|$(H9
t$@A
|$HH
|$ H
D$0H
L$0H
\$ L
|$`H
H;|$hI
D$`H
ffff.
AWAVAUATUSH
T$HH
L$ I
D$8H
T$@H9
D$0H
T$xH
D$pH
T$hH
|$0H
D$ H
D$(H
D$8H
D$HH
D$XL
D$`H
t$`H
t$XH
L$@H
[]A\A]A^A_
D$pH
t$pL
D$xH
t$xL
L90I
|$8H
|$XH
AWAVAUATL
h@L9
[A\A]A^A_]
AWAVI
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
tAATI
[]A\
AWAVL
AUATI
[]A\A]A^A_
AWAVH
AUATH
[]A\A]A^A_
H9\$
[]A\A]A^A_
AWAVL
AUATI
[]A\A]A^A_
AWAVL
AUATI
[]A\A]A^A_
AWAVL
AUATI
[]A\A]A^A_
AWAVL
AUATI
[]A\A]A^A_
AWAVAUATUSH
([]A\A]A^A_
AWAVL
AUATI
[]A\A]A^A_
AWAVL
AUATI
[]A\A]A^A_
tAATI
[]A\
AWAVAUATI
|$pH
D$`I
D$PH
T$xI
([]A\A]A^A_
|$PH9|$
AUATI
tDI;]
[]A\A]
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
AVAUL
ATUI
D$(1
t$ H
L$(dH3
D$8u
0[]A\A]A^
AUATI
tDI;]
[]A\A]
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
AWAVI
AUATL
l$PL
D$hH
D$pH
D$ H
D$xH
D$(H
D$hH
D$pH
D$xH
[]A\A]A^A_
AUATI
tDI;]
[]A\A]
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
AWAVI
AUATL
D$`I
tiI9
[]A\A]A^A_
AUATI
tDI;]
[]A\A]
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
AWAVI
AUATL
l$@L
D$XH
tzI9
D$XH
D$`H
[]A\A]A^A_
AUATI
[]A\A]
AWAVAUATI
[]A\A]A^A_
t&M9
AUATI
tDI;]
[]A\A]
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
AVAUL
ATUI
D$(1
t$ H
L$(dH3
D$8u
0[]A\A]A^
AWAVAUATI
[]A\A]A^A_
AUATUI
[]A\A]A^
[]A\A]A^
]A\A]A^
F H9
[]A\A]A^
AWAVL
AUATI
D$(1
L$(dH3
8[]A\A]A^A_
twM9
t$ H
D$ A
AWAVAUATI
[]A\A]A^A_
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
AWAVAUATUSH
\$H1
H9\$
|$HdH3<%(
X[]A\A]A^A_
l$ H
t\L9d$
t$ H
D$8H
ATUI
[]A\
AWAVL
AUATL
([]A\A]A^A_
fffff.
AVAUI
ATUH
\$`H
t$ H
l$@L
l$PH
l$0H
|$`H
[]A\A]A^
|$`H
|$`H
AWAVI
AUATH
4$dH
T$pM
D$x	
t$xH
t$pH
T$pH
d$pH9
D$pI
[]A\A]A^A_
d$`H
l$@H
t$xL
t$0H
t$PH
AUATUSH
$w[H
[]A\A]
ffffff.
ATUSH
D$(1
H9p s
t0H9r w*H
D$(dH3
0[]A\
5~]<
fff.
ATUI
D$81
@ H)
D$8dH3
@[]A\
InternalH
@*.H
T$ H
 error iH
n Gzip_C
ompressif
on deflaH
5]8<
ATUSH
D$(1
D$(dH3
0[]A\
ATUSH
D$(1
D$(dH3
0[]A\
fffff.
ATUSH
D$H1
D$8L
T$(H
T$ H
|$8H
T$0H
t$ H
D$HdH3
P[]A\
fff.
ATUSH
D$81
@ H)
D$8dH3
@[]A\
InternalH
@0late
@4.H
T$ H
 error iH
n Gzip_CH
ompressiH
on finisH
hing defH
5q2<
fffff.
AVAUATUSH
D$8H
T$(L
T$ H
D$(H
|$(H;|$
|$@I
5L	<
t$ L
|$8H
T$0H
[]A\A]A^
|$`I
|$`I
|$`I
|$`I
|$@I
AUATUSH
D$(1
L$(dH3
8[]A\A]
AVAUI
ATUI
D$X1
@ H)
@ H)
G H)
D$XdH3
`[]A\A]A^
Gzip_DecH
@(rrorH
\$0H
T$ H
ompressiH
on: UnknH
own decoH
mpress eH
D$0H
H+D$8H
|$0H
|$0H
|$0H
|$0H
AWAVAUATI
D$(1
H;_ v
t0H;^ r*H
L$(dH3
8[]A\A]A^A_
uTE1
B H9D$
AWAVAUATA
CRC3
wPjpL
{xE1
ZYu"H
[A\A]A^A_]
ATUSH
[]A\H
[]A\
fffff.
AWAVAUATUSH
D$81
D$ CRC3
D$8dH3
H[]A\A]A^A_
ATUSH
[]A\H
[]A\
Gzip_DecH
dH3<%(
ompressif
Gzip_ComH
dH3<%(
pressionH
t/ATI
[]A\
K L9
ATUSH
"L;f H
L;` H
[]A\A]
L;` H
[]A\A]
H9C r,L
[]A\A]
[]A\A]
[]A\A]
ATUI
[]A\
AWAVAUATUSH
t$(H
L$hH
D$hH
[]A\A]A^A_
D$`H
D$ H
|$ H
D$ H
D$@H
D$HH
D$PH
D$XH
D$HH
|$@H
|$@H
|$PH
H;|$Xt
H;|$Ht
D$8H
D$8H
\$ H
D$(H
{0I9
D$(H9X
t+L9
D$ H
D$`H
:@88
t0H9
D$ H
|$7L
D$(H
D$ H
l$pH
D$hH
D$`H
D$ H
D$ H
D$ H
D$8H
D$ H
D$ H
D$8H
D$PH
D$@H
AWAVI
AUATUSH
D$?H
t$(H
D$`H
d$pH
\$hI9
C(H9
d$hM
D$ I9
D$@L
5HJ=
\$PH
d$pH
\$hI9
C(H9
d$hM
H9D$ I
5$=<
|$(H
\$pH
[]A\A]A^A_
|$hH
fff.
AWAVA
AUATI
l$@L
|$@H
l$`I
|$`H
l$ H
l$0H
[]A\A]A^A_
|$`H
|$@H
ATUH
D$(1
@ H9
@ H9
T$ H
D$(dH3
0[]A\
@ H9
AUATI
D$H1
\$ H
|$ H
D$HdH3
X[]A\A]
|$ H
fff.
ATUI
[]A\
[]A\A]A^
AWAVAUATUSH
|$0H
l$@L
t$`H
T$hH
t$`H
|$`H;|$ t
D$hH
[]A\A]A^A_
L$(H
|$(H
|$@I
|$`I
|$(H
fffff.
AWAVI
AUATH
d$@H
\$`H
D$@H
|$`H
T$HH
T$HH
\$0H
|$@I
[]A\A]A^A_
t$@H
|$@I
l$ H
=?4;
|$`H
AWAVI
AUATI
=z2;
D$0H
=;2;
|$`H
|$PH
[]A\A]A^A_
D$ H
|$pH
t$ L
d$@H
=2";
=Z!;
fffff.
AWAVI
AUATUSH
D$x1
D$ H
l$HL
D$@H
l$XH
\$XH9
t$PH
\$0H
L$xdH3
[]A\A]A^A_
t$PH
AWAVAUATSH
C0H9
E0H9
D$0I
|$ H
D$0H9
CxH9
C0H9
C0H9
GxH9
G0H9
[A\A]A^A_]
GxH9
G0H9
p0H;p8
} H9
GxH9
AWAVI
AUATUSL
|$`dH
|$`H
T$hH
D$pH
T$xt
d$ H
t$`H
H9D$
c xIH
\$PH
[]A\A]A^A_
l$0H
AWAVM
AUATI
D$H1
D$(H
D$(L
t$ H
D$HdH3
X[]A\A]A^A_
t$ H
AUATM
D$H1
t$ H
D$HdH3
X[]A\A]
t$ H
AVAUH
ATUI
[]A\A]A^
[]A\A]A^
AVAUH
ATUI
]A\A]A^
AVAUH
ATUSL
]A\A]A^
[]A\A]A^
AVAUH
ATUSL
]A\A]A^
[]A\A]A^
AVAUH
ATUI
]A\A]A^
AVAUH
ATUI
]A\A]A^
C H9
AVAUATUSL
C H9
t'[L
]A\A]A^
[]A\A]A^
AUATI
([]A\A]
AUATI
D$(1
L$(dH3
8[]A\A]
AUATI
D$(1
L$(dH3
8[]A\A]
AUATI
D$(1
L$(dH3
8[]A\A]
AWAVI
AUATL
D$H1
d$ H)
|$ I
L$HdH3
X[]A\A]A^A_
|$ I
AUATI
([]A\A]
AUATI
([]A\A]
AWAVI
AUATUSH
D$81
T$ H
D$(t
|$(I
L$ H
D$8dH3
H[]A\A]A^A_
AWAVAUATI
D$X1
D$ H
D$(t
l$ I
D$(H
T$ H
D$XdH3
h[]A\A]A^A_
,$L9
UUUUUUU
tDL94$t
UUUUUUU
AWAVL
AUATL
[]A\A]A^A_
l$`H
\$ H
D$0H
D$8L
D$HH
D$PH
D$xH
\$HL
D$xH
t$pH
t$@H
t$pH
t$@H
dH3<%(
AWAVAUATI
[A\A]A^A_]
AWAVAUATI
D$81
L$8dH3
H[]A\A]A^A_
AVAUI
ATUL
D$x1
l$@H
D$XH
l$ H
D$(H
t$XI
t$PL
L$xdH3
[]A\A]A^
t$PL
AWAVI
AUATUSH
D$(H
D$XH
D$hH
D$(H
\$hH
T$@H
l$0H
T$ f
t$ H
H;D$
t$`H
[]A\A]A^A_
D$xH
\$@H
t$`H
|$(H
AWAVAUATI
c0L+c(H
_AXH
[A\A]A^A_]
c0L+c(H
c0L+c(H
c0L+c(H
c0L+c(H
c0L+c(H
c0L+c(H
c0L+c(H
c0L+c(H
c0L+c(H
fff.
fff.
ATUI
[]A\
AWAVI
AUATL
[]A\A]A^A_
B H9
tjAVAUI
ATUI
k(H9
[]A\A]A^
fffff.
AWAVI
AUATI
[]A\A]A^A_
AWAVAUATUSH
D$(1
\$ H
L$(dH3
8[]A\A]A^A_
=4y;
fff.
AWAVAUATI
D$H1
D$(L
t$(I
D$8K
;P ~
H9L$
t?;Q |:HcA$H
D$(H
\$ H
\$@H
D$HdH3
X[]A\A]A^A_
t$(L
G8H+G0H
fff.
AWAVH
AUATI
T$PdH
T$`H
T$hI
T$PI
="s;
D$ H
D$XH
D$0M
t$ I+t$
\$0H
D$8H
T$ I+T$
t$0H
D$8I+D$0H
l$0H
t$@H
l$xM
t$`M
[]A\A]A^A_
D$ I+D$
\$@H
D$pH
t$XI
\$0H
l$xM
|$(H
\$0I
l$xM
\$0I
l$xM
G H+G
}1Hc
fff.
ATUSH
H;_ t4I
H9] u
[]A\
G H+G
fff.
ATUSH
H;_ t4I
H9] u
[]A\
AWAVAUATUSH
D$(1
hXL9
D$(dH3
8[]A\A]A^A_
AUATUSH
9z }
t19~ 
([]A\A]
uGE1
B 9D$
fff.
AUATUSH
D$ H+F
D$ L
[]A\A]
AWAVAUATI
[]A\A]A^A_
u'L)
AWAVH
AUATUSH
t$pH
|$ dH
G H+G
D$`H
|$`H
D$ H
H;X8u
D$ H
D$`H
D$HH
t$ H
D$ H
D$HH
H;|$Ht
|$XH
5Qa;
t$(H
D$(H
D$pL
t$PM
D$hH
H9l$PteH
t$hH
D$XH
t$xH
|$pH
H;|$Xt
D$@H
D$0H
D$8H
D$`H
l$PH
D$pH
L$(H+K@H
[]A\A]A^A_
D$0H
|$`H
|$`H
D$pH
D$8H
D$0H
D$@H
D$8H
fff.
AWAVH
AUATUSH
E8H+E0@
D$(H
D$hH
t$HH
E H)
D$xH
D$XH
D$PH
D$`f
D$@H
|$(L
d$0H
l$8L
D$(L
d$0L
l$8H
\$PH
D$XH
t$@H
D$`H
T$PH
H;|$`H
H;|$Xt
=b6;
E H)
D$hH
[]A\A]A^A_
D$(H
t$(H
|$hA
D$pH
=8d:
D$pH
|$pH
|$PH
D$xH
|$HH
D$hH
|$PH
AWAVH
AUATUSH
H+.H
D$HH
C(H)
t$pH
D$ H
D$0H
L+%{a<
D$pH
t$pH
T$xH
|$ L
d$0H
|$8H
D$hL
5t`<
T$(M
L;d$
|$pI
s H;s(
[]A\A]A^A_
=Q_<
H;=R_<
=!_<
T$(H
|$HH
T$@H
C H+C
\$`H
t$hH
D$ H
|$pI
D$0H
fffff.
AVAUATUI
l$ H
D$h1
d$@H
D$@M
|$@I
|$ H
D$hdH3
p[]A\A]A^
|$@I
|$ H
AWAVM
AUATI
D$pH
T$xH+T$pH
|$XL
5 Z:
d$0H
|$`H
D$XH
T$pH
t$`H
|$`H
D$XH
D$XH9
H+T$pH
l$@H
=KY:
H+3H
D$XH
D$XH
T$XH
T$xf
H+T$pH
\$PH
T$xL
\$pH
D$XH
|$pH
[]A\A]A^A_
H+T$pH
T$XHc
T$`H
D$`H
D$XH
T$pH
L$`H
t$ L
D$Xv
|$`H9
L$hH
T$xH+T$pH
|$pH
ATUI
[]A\
AWAVAUATSH
G8H+G0H
C8H)
C8H)
[A\A]A^A_]
=/O:
AWAVAUATI
|$@H
t$8H9
D$(H
D$HH
D$hH
D$`H
D$Xf
t$(H
D$ I
D$ H
L9d$
L$(H
t$ H
t$(H
|$@I
=gK:
=!K:
t$8H
D$PI9
[]A\A]A^A_
|$@L
=cI:
=!I:
t$(H
L$HM
D$0L9`
=vF:
=OF:
D$0L9`
T$HH
t$(H
D$XH
T$`H
t$(H
|$@H
t$(A
D$ H
D$0H
D$ I
t>H-
L$pI
L$pM)
D$ A
D$pD
D$|H
D$ H
l$ H
tOH-
T$ H
T$ L
|$0H
t$|H
D$0H
H;|$Xt
t$(H
=:>:
L$HH
t$(I
t$(H
|$(H
D$`H
|$HH
ffff.
AWAVI
AUATI
=?6:
D$ H
L$`H
L$pH
t?H-
D$4I
l$8H
tOH-
T$8H
t$4I
t$0H
|$(H
[]A\A]A^A_
L$ H
l$@H
T$ H
|$(H
l$PH
EPH9
EPH9
EPH9
ATUI
_0H9
l$0H
AWAVH
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
C(H9
CPH9
CPH9
t/ATI
[]A\
AVAUATUSL
m0I9
t(f.
]A\A]A^
[]A\A]A^
AWAVI
AUATUSH
L$81
w	H9
D$8dH3
H[]A\A]A^A_
l$ L
ATUSH
[]A\A]A^
K L9
AUATUSH
[]A\A]
{@L9
AVAUI
ATUH
m0I9
t(f.
]A\A]A^
[]A\A]A^
AWAVAUATUSH
D$(H
T$ H
T$ H
D$(H
D$ H
D$ H
D$ H
D$ H
D$(H
T$ H
T$ H
D$(H
D$ H
D$ H
D$ H
D$ H
[]A\A]A^A_
AUATUSH
[]A\A]
[]A\A]
K D9
ATUSH
"D;f H
D;` H
[]A\A]
D;` H
[]A\A]
9C |.L
[]A\A]
[]A\A]
[]A\A]
AWAVAUATUSH
uEL)
[]A\A]A^A_
([]A\A]A^A_
AVAUATI
ueI)
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
yKI9^ 
[]A\A]A^A_
u\H9
ATUH
[]A\
[]A\
ATUSH
"L;f H
L;` H
[]A\A]
L;` H
[]A\A]
H9C r,L
[]A\A]
[]A\A]
[]A\A]
AWAVI
AUATI
t0L9
E H9C 
[]A\A]A^A_
fffff.
fffff.
fff.
AWAVAUATL
D$(1
D$(dH3
8[]A\A]A^A_
\$ H
AVATUSH
J0H9
E0L9
[]A\A^
[]A\A]A^
J0H9
tXI9
tcH9
</tW
AWAVAUATI
T$,dH
t$,L
t$,L
9P s
H;E`H
[]A\A]A^A_
d$pH
t$<L
t$<L
d$`H
t$,L
T$<H
D$ H
t$,L
\$@H
D$ H
D$ H
H;D$
d$PH
t$,L
t$<H
t$,L
AWAVAUATUSH
H;C`L
[]A\A]A^A_
t$,H
t	L9
y0H9
L9|$
w0H9
u	I9
t$H9
l$pH
D8	t
l$pH
l$pH
D$,1
l$PH
l$0H
l$@H
l$`H
l$pH
AWAVI
AUATL
g t4f.
mHI9
mPt,f
[]A\A]A^A_
AVAUATUI
[]A\A]A^
B A9
AWAVAUATL
D$H1
D$0I
D$0H
D$8H
D;B v
t|D;@ 
D;G v
t	D;@ s
D$HdH3
X[]A\A]A^A_
T$(H
D$ D
T$(H
D$ D
D$ D
D$ H
D$ H
D$ H
AUATM
[]A\A]
fffff.
AWAVH
AUATH
t$ L
H;D$
t$ L
T$ H
|$(L
9h s
9j w
tC9k 
H;L$
D$ H
[]A\A]A^A_
D$ H
9p s
9r s
H;D$
9p v
t$`H
d$@H
;J v
H;D$
;H s
T$pH
d$0H
9J s
H;D$
9H v
T$PH
|$ H
AWAVM
AUATUSH
|$pdH
D$(1
t$ H
D$(dH3
8[]A\A]A^A_
AWAVAUATUSH
D$(1
t$pL
t$ H
D$(dH3
8[]A\A]A^A_
AWAVAUATUSH
D$81
T$ L
t$(H
D$ H
D$8dH3
H[]A\A]A^A_
fff.
AVAUATUI
[]A\A]A^
z0L9
tcH9
</tW
AWAVAUATL
D$h1
D$0H
t$HI
D$8H
t]D9xHt
\$ H
H0M9
8@8>
E0L9
>@88
tdH9
</tK8
D$0H
|$8H;|$
D$hdH3
x[]A\A]A^A_
|$8H
AWAVAUATUSH
l$PH
\$(H
D$hH
D$pH
H9D$
H;|$
L$`M
y0H9
O0H9
u	H9
t%H9
D8	t
t$`H
t$`H
[]A\A]A^A_
\$hH
|$ L
H9D$
D$ L
S0L9
A0L9
L9d$
D$(I
D$0L9
:@88
t{H9
</tb8
|$ L
d$0H
D$ L
S0L9
K0L9
L9d$
D$(H
t$0H9
8@88
t)H9
d$@H
D$ L
S0L9
B0L9
L9d$
D$(H
t$0H9
8A89
tpH9
</tW8
|$ L
|$ L
fff.
AUATM
([]A\A]
ATUSH
[]A\
AVUSL
B0L9
;@8>
x0H9
t"M9
[]A^
K D9
ATUSH
"D;f H
D;` H
[]A\A]
D;` H
[]A\A]
9C r.L
[]A\A]
[]A\A]
[]A\A]
AVAUATUSH
S0L9
tuL9
/t[8
[]A\A]A^
]A\A]A^
AVAUATI
N0H9
M9l$
H0M9
u	H9
t&H9
[]A\A]A^A_
u	H9
t$H9
M9l$ 
@0L9
tEH9
/t+8
[]A\A]A^A_
E0L9
t8H9
u	I9
t$H9
[]A\A]A^A_
[]A\A]A^A_
ATUI
=)e	
[]A\
AWAVAUATUSH
D$H1
D$XL
|$ H
t$XH
L$HdH3
X[]A\A]A^A_
|$ H
AWAVAUATUSH
D$H1
|$XH
|$ H
t$XH
L$HdH3
X[]A\A]A^A_
|$ H
AUATUSH
D$H1
D$HdH3
X[]A\A]
H9T$
l$ H
|$ H
|$ H
fffff.
AVAUATUL
D$(1
s0E1
D$(dH3
0[]A\A]A^
AWAVAUATUS
[]A\A]A^A_
d$`H
D$(L
l$xH
l$0I
D$HH
l$ H9
t$@L
t$@L
fffff.
AWAVAUATUSH
([]A\A]A^A_
,$I9
ATUI
=9T	
[]A\
AVAUI
l$ dH
[]A\A]A^
AVAUI
l$ dH
[]A\A]A^
AVAUI
l$ dH
[]A\A]A^
AWAVAUATI
t$@M
\$0H
l$8E
[]A\A]A^A_
ffffff.
AWAVAUATI
\$0H
[]A\A]A^A_
fffff.
O(H9O u
w8H9w@u
wPH9wXu
whH9wpu
WpH+G8H+WhH
W(H+G
H+W H
GXH+GPH
fff.
AWAVAUATI
C(H9
l$(M
l$ I9
C(H9
D$8M
l$(M
l$@H
C(H9
ChH9
l$PI
l$XH
D$@t2
CXH9
C(H9
l$XI
l$pM
l$hI9
l$pI
t$`H
[]A\A]A^A_
t$`H
AUATL
[]A\A]
[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
\$@H
l$ H
T$(H
t$ H
|$ I
[]A\A]
|$ I
AWAVAUATUSH
l$@H
t$ L
T$(H
t$ H
T$HH
t$@H
|$ I
|$@I
C0H9
\$`I
|$`H
[]A\A]A^A_
|$`H
|$ I
|$@I
AUATI
l$@H
|$`H
E0H9
l$ H
|$ H
[]A\A]
|$ H
AVAUATUI
l$`H
l$ L
T$(H
t$ H
|$ H
l$@H
|$@H
[]A\A]A^
|$@H
|$ H
fff.
AWAVAUATI
D$H1
l$ L
T$(H
t$ L
|$ H
l$ E1
|$ H
T$(H
t$ L
|$ L9
l$ E1
|$ H
T$(H
t$ L
|$ L9
l$ E1
|$ H
T$(H
t$ L
|$ L9
l$ E1
|$ H
T$(H
t$ L
|$ L9
l$ E1
|$ H
T$(H
t$ L
|$ L9
l$ E1
|$ H
T$(H
t$ L
|$ L9
l$ E1
|$ H
T$(H
t$ L
|$ L9
l$ E1
|$ H
T$(H
t$ L
|$ L9
D$HdH3
X[]A\A]A^A_
|$ H
|$ H
ATUSH
D$81
D$8dH3
@[]A\
=ew9
ATUH
D$(1
I+D$
D$(dH3
0[]A\
AWAVAUATUSH
t$ H
[]A\A]A^A_
l$ M
|$PH
T$PI
{pH;{x
=>o9
fff.
AWAVE
AUATA
t$,H
[]A\A]A^A_
C H9
T$,H
D$(H
uxH9]p
D$pL
D$0H
|$0H
t$0H
l$PL
D$PH
t$0H
l$`L
|$ H
D$pH
D$,H
l$@L
D$@H
uHH9
|$,E9
D$pH
H9Ep
|$ H
|$,H
u(H;u0
|$ H
|$ H
AWAVAUATUSH
D$h1
|$8H
D$HH
D$ I
T$XH
|$0H
T$(I
T$@I
T$PI
T$XI
D$HH
D$XI
|$0I
D$`H
D$ H
d$ H
D$(t
|$hL
d$ I
d$@H
T$@I
T$HH
|$HI
D$hdH3
x[]A\A]A^A_
D$ H
d$ H
d$ H
|$HI
|$0H
t$ H
AWAVI
AUATUSH
T$ H
L$(L
D$0H
T$(H
t$0H
T$ H
t$XH
t$PH
t$HH
t$@H
t$8H
D$0H
D$xH
t$0I
F H9
L$ H
T$(H
t$ H
D$XI;D$`
D$XH
D$XH
D$xH
D$0H
D$0H
5$v	
t$hH
t$hH
|$0L
|$0L
L$xH
|$0L
|$0H
|$0H
D$`L
|$0H
D$`D:p
L$ H
\$(L
t$ H
D$xH
L$`L
D$xH
t$xH
D$xH
D$`H
D$`H
t$`H
D$xH
L$0H
L$ H
T$(H
t$ H
L$hH
D$`H
D$`H
D$xH
|$pL
|$hH
L$hI
D$pH
D$ H
t$pH
D$pH
D$xH
|$(H
L$hI
D$pH
t$hH
D$hH
T$ L
D$0H
D$xH
t$XH
t$PH
t$HH
t$@H
t$8H
[]A\A]A^A_
D$xH
P H;
|$xL
D$`H
T$xI
|$PH
|$`I
|$xH
|$(H
|$xH
|$pH
|$(H
|$hH
D$ H
|$0H
|$0H
55R	
D$xH
|$`I
|$`I
ATUH
 []A\
CXH9
AWAVAUATUSH
D$81
L$ D
D$,H
L9d$
\$8dH3
D$8uhH
H[]A\A]A^A_
\$0H
L$,L
D$ H
5Jl	
ATUH
[]A\
AUATUSH
[]A\A]
ATUH
[]A\
ATUH
[]A\
AWAVI
AUATI
[]A\A]A^A_
t{D9A
tUD9A
tOD9
tOD9
tND9
t-D9
t$D9
t{D9
tVD9A
tPD9
tPD9
tOD9
t.D9
t%D9
AUATI
[]A\A]
AWAVAUATI
D$0H
D$0I
D$4A
D$8A
D$<A
|$(H
D$pH
T$xA
D$@H
L$HI
T$HH
T$PI
D$PH
|$`A
D$XH
T$ H
D$(t
|$(I
L$ H
[]A\A]A^A_
4?L9
UUUUUUU
UUUUUUU
AUATUS
[]A\A]A^
AWAVAUATI
D$0H
D$0I
D$4A
D$8A
D$@A
D$hH
T$pA
D$8H
D$xH
L$@I
T$@H
T$HI
D$HH
|$XA
D$PH
D$xH
T$ H
D$(t
|$(I
L$ H
[]A\A]A^A_
,?L9
AUATUS
[]A\A]A^
AWAVI
AUATUSH
D$0H
D$ I
D$HI
D$ I
D$(A
D$0A
D$XH
T$`A
D$hH
D$pI
[]A\A]A^A_
$?L9
"""""""
|$8I
t#L9
"""""""
AUATI
[]A\A]
E(H9
AWAVAUATI
D$81
D$(H
D$8dH3
H[]A\A]A^A_
E(H9
C(H9
AUATUS
[]A\A]A^
AWAVAUATI
D$h1
D$8I
D$@A
|$HI
FXH9
D$hdH3
x[]A\A]A^A_
4?L9
vb'vb'v
EXH9
E(H9
vb'vb'v
AUATI
[]A\A]
AWAVI
AUATUSH
D$ H
D$ I
D$pH
T$xA
[]A\A]A^A_
,?L9
AUATI
[]A\A]
AWAVAUATI
D$h1
D$ I
D$@I
D$hdH3
x[]A\A]A^A_
4?L9
AUATI
[]A\A]
E(H9
AWAVAUATI
D$81
D$(H
D$8dH3
H[]A\A]A^A_
E(H9
C(H9
fff.
fff.
fff.
fff.
ATUI
[]A\
ATUI
[]A\
D$(1
D$(dH3
fffff.
D$(1
D$(dH3
fffff.
AWAVI
AUATI
\$`dH
|$hH
l$0H
T$0H
T$8H
t$8H
D$0H
D$hH
D$`H
D$hA
|$pH
|$8H
[]A\A]A^A_
|$hH
|$8H
|$pH
AWAVAUATL
[A\A]A^A_]
 []A\
AWAVI
AUATI
D$(1
D$(dH3
8[]A\A]A^A_
AWAVI
AUATI
D$(1
D$(dH3
8[]A\A]A^A_
AWAVAUATI
SATH
[A\A]A^A_]
ATUI
\$0H
D$X1
|$0H
D$XdH3
`[]A\
|$0H
ATUI
\$0H
D$X1
|$0H
D$XdH3
`[]A\
|$0H
D$H1
T$ H
D$(t
T$0H
D$8t
L$HdH3
P[]A\
ATUSH
D$81
D$8dH3
@[]A\
AWAVAUATI
5L|9
[A\A]A^A_]
AWAVAUATI
D$ H
L$`H
D$`H
|$(A
L$pH
D$pH
d$PH
|$XL
D$ H
[]A\A]A^A_
\$0H
\$@H
D$ H
AWAVAUATI
D$h1
l$@H
D$hdH3
x[]A\A]A^A_
d$ I
D$@I
|$HI
|$ I
d$ I
D$@I
t$@I
|$@L9
t$@I
|$@I
|$HI
|$ I
AUATI
W(dH
D$X1
l$0I
D$0I
|$8I
D$XdH3
h[]A\A]
|$8I
AWAVM
AUATI
|$(L
D$pH
D$xH
d$ H
[]A\A]A^A_
|$(L
|$(L
|$(A
d$PH
|$`A
d$@H
d$0H
|$HL
d$`H
AWAVAUATUSH
D$81
D$8dH3
H[]A\A]A^A_
fff.
AWAVAUATI
[A\A]A^A_]
AWAVI
AUATI
t$ H
D$(H
D$0H
3toL
|$0D
t$pH
H;|$
xI9]@
u8L9
t$HH
t$@H
t$8H
[]A\A]A^A_
|$XH
\$`H
t$HH
t$@H
t$8H
fffff.
AWAVAUATI
GpH)
t$(H
5g}:
5S}:
=o{8
=${8
[A\A]A^A_]
=Sz8
=Jy8
59x	
=kx8
=Hx8
5lz:
D$hL
AZA[I
t$@I
=	v8
t$(L
5{x:
t$@I
5ks:
AXAYI
5Lu:
58u:
D$hL
=;q8
=?p8
=:o8
AWAVI
AUATI
D$8L
L$@H
t$(H
t$0H
L$HH
L$(H
5cl:
D;|$<
5El:
=!g8
|$0H
|$PH
|$(H
|$HH
t$ H
=Mf8
=-f8
[]A\A]A^A_
D$`H
t$XH
D;|$<
=~e8
l$pH
=Me8
5fe:
t$@H
D;|$<
t$@H
5wf:
5>c:
5De:
5(b:
5kf:
=#a8
=Y`8
t$ H
5'`:
5jd:
=I_8
=U^8
=2^8
|$0H
|$PH
|$(H
|$HH
|$XI
AWAVM
AUATM
l$@H
d$`dH
d$`H
l$ H
=jY8
=-Y8
l$0H
T$HH
5B?9
[]A\A]A^A_
AWAVM
AUATM
l$ H
=xU8
t$@H
D$0L
|$0H
T$XH
5+;9
[]A\A]A^A_
fffff.
AWAVAUATI
[A\A]A^A_]
=&Q8
=WN8
=HM8
= L8
=cJ8
=!I8
AWAVAUATUSH
=IE8
t$ A
[]A\A]A^A_
=7D8
L$0H
L$(H
L$`H
\$8H
L$ H
\$(H
\$`H
D$0H
D$(H
D$`H
D$`H
D$`H
\$PD
d$@H
|$@H
\$ H
D$(H
L$8H
|$0H
|$(H
|$8H
|$ H
5za	
-3@8
=k?8
|$0H
=7>8
|$0H
|$ H
|$8H
|$(H
|$0H
D$`H
|$0H
AWAVAUATI
=x;8
=/88
=T38
=,38
[A\A]A^A_]
=_08
=E08
AWAVAUATI
=%/8
xpL9
=0-8
H9Xp
C(ATD
K@AUAW
C@AUAWH
=L&8
='&8
[A\A]A^A_]
@hH9
=i"8
=H"8
='"8
AWAVI
AUATI
t$0H
L$@L
L$pH
D$/H
=K 8
D$xH
D$HH
D$XH
|$@H
D$(M
D$@L
T$ H
D$ H
5T :
T$hH
5E :
t$8I
T$ H
t$`H
L$8I
|$ H
|$hH
t$pH
|$0H
|$@H
L$ H
t$8H
t$XH
|$8H
|$ H
H;|$Pt
H;|$H
d$XH
t$8H
t$XH
t$XH
t$XH
[]A\A]A^A_
|$ H
|$8H
|$8H
|$ H
D$XH
|$hH
|$ H
|$8H
|$ H
|$hH
D$XH
AWAV1
AUATI
T$ H
D$(t
T$0H
D$8t
[]A\A]A^A_
D$@H
t$`H
t$`H
D$@H
AWAV1
AUATI
T$ H
D$(t
|$(H
T$0H
D$8t
[]A\A]A^A_
D$@I
t$`I
t$`H
AWAVI
AUATI
t$PH
T$XL
L$hD
D$gH
FXH)
D$@H
D$ H
D$HH
t$8H
t$@H
t$HH
|$0H
H;|$(t
H;|$ t
|$PH
L$0H
D$8H
D$8L
t$8H
t$hH
t$pH
t$xH
[]A\A]A^A_
t$pH
t$xH
|$0H
D$HH
D$@H
AWAVI
AUATUSH
t$0H
T$pH
L$8L
L$xH
E(H)
D$(H
D$`H
D$PH
D$hH
t$8L
t$8L
t$8L
t$8L
t$xL
|$ H
D$HH
D$@H
H;|$Xt
H;|$Pt
t$(H
t$(H
T$`H
D$@H
D$HH
d$pH
|$0L
D$ H
|$8H
L$ H
t$`H
t$hH
t$@H
t$HH
[]A\A]A^A_
t$(H
|$ H
D$HH
D$@H
D$hH
D$`H
ffffff.
AVAU1
ATUI
l$@H
|$@H
[]A\A]A^
t$ H
l$`H
|$`H
t$ H
|$`H
|$@H
AVAU1
ATUI
l$@H
|$@H
[]A\A]A^
t$ H
l$`H
|$`H
|$`H
|$@H
AWAVI
AUATI
t$8H
T$@L
D$0H
D$HH
D$PH
D$XH
D$(H
t$0H
D$PH
L$`H
D$pH
D$xH
D$ H
T$ H
t$xH
|$hH
|$`H
H;|$Xt
H;|$Pt
t$0H
[]A\A]A^A_
D$pH
t$pH
D$pH
D$xH
t$xH
D$xH
D$ H
t$ H
D$ H
D$ H
t$ H
|$pL
D$ H
t$pH
t$pH
t$xH
D$ H
D$xH
D$pH
t$xH
t$ H
t$0H
l$ H
D$xH
t$pH
|$hH
|$`H
D$HH
l$ H
D$xH
|$pH
AWAVI
AUATI
t$ H
T$XL
L$xD
D$KH
E@H)
D$0H
D$PH
D$8H
D$pH
D$hf
t$0H
D$8H
L$@H
D$LL
|$ H
D$`H
|$ L
l$pH
t$LH
t$`H
t$PH
D$`H
t$xL
H;|$8t
|$(H
|$@H
t$0H
[]A\A]A^A_
t$PH
t$(H
t$PH
t$(H
L$LH
t$`H
D$hH
|$XH
|$XH
T$LH
t$pL
t$PH
H;|$h
D$LH
t$pL
t$pL
t$PH
t$pL
t$`H
t$PH
t$`H
t$0H
D$PH
|$(H
|$@H
D$pH
l$`H
l$`H
D$pH
AWAVI
AUATI
t$HH
T$XL
L$`D
D$(H
D$PH
D$0H
D$@H
D$HH
D$XH
t$@L
|$HI
t$`H
H;|$8t
H;|$0t
|$ H
t$(H
t$(H
D$0H
L$ H
D$8H
L$ H
T$PH
T$@H
t$@L
t$@L
|$XA
t$PL
t$hH
t$@L
t$PL
t$hH
t$xH
t$pH
[]A\A]A^A_
t$(H
t$xH
t$pH
D$@H
D$PH
|$ H
ffff.
AWAVI
AUATM
t$(H
L$0L
F(I+F H
FXI+FPH
^8I;^@
|$ H
I9n@
t$0H
t$(H
^hI;^p
D$(I
D$0I
t$ L
T$pH
D$xt
|$xH
L$pH
I9^p
D$ H
|$(H
I9^@
t$0H
t$(H
D$ H
tRf.
[]A\A]A^A_
D$8I
^XI;^`
D$ H
D$0H
D$(1
t$ L
^pI;^x
T$0H
T$0H
T$0H
^pI;^x
T$0H
T$(I
|$8H
I9Fp
l$`H
|$ H
|$ H
t$PH
\$ H
|$ H
t$(H
\$ H
|$ H
|$ H
|$(H
D$(H
\$(H
v(I;v0
D$ I
^@I;^H
|$ H
H9|$ I
H9|$0t
D$HH
D$(H
D$0H
|$`L
D$`H
H;|$(t
|$(A
|$HA
D$(H
l$ H
l$01
|$pL
D$pH
H;|$8t
52~9
D$@H
D$@H
D$@H
D$@H
|$HH
t$PH
|$ I
D$ I
5y{9
|$ H
|$0H
|$8H
AWAVAUATI
[A\A]A^A_]
5Wu9
XZL9
AWAVAUATL
|$(H
D$8H
[A\A]A^A_]
5	o9
XZL9
AWAVAUATI
5Wf9
5BT8
C`H9
[A\A]A^A_]
C`H9
=l]7
=H]7
=|\7
=X\7
=,\7
=h[7
=<[7
=xZ7
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
ATUH
tq[]A\
[]A\
[]A\
AWAVAUATUSH
uEL)
[]A\A]A^A_
([]A\A]A^A_
ATUSH
[]A\A]
[]A\A]
[]A\A]
[]A\A]
AWAVH
AUATUSH
\$X1
H9,$tfH
\$0H
D$ H
D$HH
D$(H
D$Pt
D$HH
D$PH
t$XdH34%(
E8u*H
h[]A\A]A^A_
fff.
ATUI
[]A\
AVAUI
ATUH
-TK7
D$81
D$8dH3
@[]A\A]A^
fffff.
AWAVI
AUATI
\$`L
d$@H
D$ L
l$0M
d$PM
I;T$
d$@H
l$PH
l$0H
[]A\A]A^A_
AWAVM
AUATI
5<E7
\$PL
5k+8
|$0L
l$@H
l$ H
[]A\A]A^A_
fffff.
AWAVH
AUATUSH
|$ H
D$(H
L9d$
D$(H
t$(H
D$ H
D$ H
H;l$
\$ H
l$PH
d$pH
\$@H
d$pH
d$pH
l$`H
=g>7
[]A\A]A^A_
D$ H
l$0H
52B	
d$pH
d$pH
d$pH
AVAUH
ATUH
D$81
\$0A
L$8dH3
@[]A\A]A^
fffff.
AUATI
D$81
\$01
L$8dH3
H[]A\A]
\$0H
fffff.
AWAVAUATSH
=:87
=k37
=737
[A\A]A^A_]
=&27
506	
=*17
5p5	
fff.
AWAVM
AUATI
D$ dH
dH34%(
[]A\A]A^A_
L$(L
|$PH
|$(L
D$pL
D$xH
|$ L
t.f.
t.f.
t.f.
D$@H
|$8H
|$0H
|$(H
T$@H
|$8H
|$0H
|$(H
fffff.
AWAVAUATSH
=b&7
SAWAVAT
=n%7
=:%7
[A\A]A^A_]
=c$7
5((	
="#7
fff.
5J&	
=2!7
5j%	
=R 7
5:#	
AWAVI
AUATA
l$pL
l$@H
L$ H
D$(dH
H;D$
L$ H
T$(D
\$hH
\$PH
\$xH
[]A\A]A^A_
d$0H
AUATUSH
d$0H
D$HH
D$Pt
l$`L
D$HH
D$xH
D$PH
\$pH
\$PH
\$@H
\$ H
[]A\A]
AWAVAUATUSH
|$ H
T$(H
L9d$
D$(H
\$pH
|$ H
D$pH
D$0H
D$xH
D$8t
d$PH
D$0H
D$8H
|$(H
D$xH
T$pH
T$@H
D$Ht
|$HH
L$@H
D$@I
T$8H
[]A\A]A^A_
fff.
AWAVL
AUATA
D$X1
D$XdH3
h[]A\A]A^A_
t$ D
t$ H
t$ H
D$0H
|$@H
t$@H
|$0H
t$ H
AWAVAUATUSH
D$X1
D$XdH3
h[]A\A]A^A_
D$0H
|$@H
t$@H
|$0H
t$ D
t$ H
t$ H
t$ H
AUATUSH
d$0H
D$HH
D$Pt
l$`L
D$HH
D$xH
D$PH
\$pH
\$PH
\$@H
\$ H
[]A\A]
AWAVI
AUATI
\$pH
t$ L
d$@H
\$pL
\$hH
\$PH
\$0H
[]A\A]A^A_
fffff.
AVAUI
ATUI
\$pH
l$ L
l$@H
\$pL
\$hH
\$PH
\$0H
[]A\A]A^
AWAVI
AUATI
\$pH
l$ L
l$@H
\$pL
\$hH
\$PH
\$0H
[]A\A]A^A_
AWAVAUATSH
PATAVI
[A\A]A^A_]
PATAVI
AWAVI
AUATL
D$pH
|$xH
D$(1
C(H+C H
CXH+CPH
D$(dH3
8[]A\A]A^A_
|$ H
L$ H
t$ L
\$ H
|$ H
|$ H
|$ H
|$ H
|$ H
AWAVH
AUATI
|$(1
l$pL
L$ L
D$(H
D$(dH3
8[]A\A]A^A_
AWAVM
AUATI
\$ H
\$(H
D$(H
T$ H
D$ H
D$0H
D$(H
D$8t
t$`L
D$0H
D$8H
\$pH
\$8H
\$@H
\$HH
D$HH
T$@H
D$@H
D$PH
D$HH
D$Xt
D$PH
D$XH
d$XM
\$HH
\$(H
[]A\A]A^A_
AWAVAUATI
AZA[H
AUAVH
AXAYH
[A\A]A^A_]
ATUH
[]A\
[]A\
AWAVH
AUATH
[]A\A]A^A_
H9\$
uNL)
[]A\A]A^A_
AUATI
[]A\A]
AWAVH
AUATH
[]A\A]A^A_
H9\$
uNL)
[]A\A]A^A_
AWAVH
AUATI
[]A\A]A^A_
ATUI
[]A\
tjAVAUI
ATUI
k(H9
[]A\A]A^
ffffff.
AWAVAUATI
L$X1
\$PH
\$HI
\$HH
t$ H
D$(H)
D$@H
D$(H
D$(H
t$8H
t$@H
t$0H
\$PH
D$XdH3
h[]A\A]A^A_
t$ L
H+\$
T$(H
)tUH
D$(I
AWAVO
4	AUATH
D$8dH
|$X1
|$@L
8L;x
T$@H
T$HH
T$PH
L9|$0
|$@L
t$0H
H9D$0v]
l$@H
D$HH
D$PH
D$XdH3
h[]A\A]A^A_
T$(H
L$ L
L$ L
I;t$
l$@H
T$HH
T$PH
D$@H
T$HH
T$PH
T$(H
D$8H
D$8H
T$(H
D$0I
AWAVI
AUATI
I;t$
[]A\A]A^A_
t$0H
$HcE
$PHcS
D$0H
t$0H9s
I;t$
I;t$
t$0H
l$`H
T$`H
t$0H
W8H)
|$@H
T$@H
t$0L
T$HH
t$@H
T$hH
t$`H
|$@I
|$`I
5M`7
t$0H
\$ H
5%h	
5Ur	
|$`I
\$ H
5ig	
|$@I
fffff.
AWAVAUATSH
H+3H
#L;c
 L;`
H+0H
 L;`
 L;`
H+0H
 L;`
 L;`
t(H9
t(H9
[A\A]A^A_]
ffff.
AWAVH
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
[]A\A]A^A_
ATUI
[]A\
AWAVI
AUATI
D$pH
D$(H
D$0I
|$(H
|$pH
|$0H
|$P1
t$ H
D$8H
K0H9
t)H9
\$`H
H;|$0t
|$pH;|$(
H9\$8
t0H9
|$(H
D$ I
D$8I
D$(H
|$GH
L$8H
[]A\A]A^A_
|$pH
|$ H
|$(H9|$HH
AWAVH
AUATUSH
t$HH
t$HH
D$pH
D$PH
D$(H
D$xH
I;l$
D$(H
D$PH
D$pH
[]A\A]A^A_
|$pH
|$xH
|$xH
D$`H
T$pH
D$@H
D$0H
|$PH
D$@H
|$0H
t$0H
H;|$ht
H;|$@t
|$(H
D$ H
D$8H
D$HH
J0L9
H9l$
M0L9
t*L9
D$XH
l$8L
L;$$L
l$8tDM
t$(I
t$ L
|$ M9
D$ J
|$XL
D$ H
l$@I
D$PL
D$@H
|$ H
F0H9
t$(L
D$`H
%xz8
|$HH
H9T$
D$0H
0@82
t/H9
D$XH
}ht]H
D$HH
D$`H
D$(H
D$PH
D$pH
D$`H
D$ H
D$8H
D$0H
}(H9<$I
|$ H9|$8H
F0H9
D$xH
D$`H
fffff.
AWAVAUATI
D$pH
D$pL
D$pH
[]A\A]A^A_
D$`H
D$`H
t$hH
\$ H
D$(H
|$ L
t$ L
H;|$8t
H;|$
D$(H
D$0H
D$@H
D$0H
D$@H
D$PL
t$0M
\$HI
D$XH
L;d$0H
\$HtfI
D$(H
t$XH
D$hH
|$PH
H9T$0
T$@I
|$8A
T$PH
T$XtVH
D$HH
D$XH
D$`H
L$0A
D$PH
L$HH
D$@H
y0H9
L9l$
M0L9
t*L9
|$0A
D$(H
D$@H
D$(H
H;|$
|$8L
t$XH9t$
F0H9
0@82
t0H9
D$0I
|$HH
F@H9
D$@H
D$(H
|$`H
D$pH
|$0I
}(H9|$xI
F@H9
D$0H
D$@H
D$0H
D$@H
D$(H
T$ H
D$(H
|$hH
AVAUATUSH
S0L9
tuL9
/t[8
[]A\A]A^
]A\A]A^
AVAUATI
N0H9
M9l$
H0M9
u	H9
t&H9
[]A\A]A^A_
u	H9
t$H9
M9l$ 
@0L9
tEH9
/t+8
[]A\A]A^A_
E0L9
t8H9
u	I9
t$H9
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
uEL)
[]A\A]A^A_
([]A\A]A^A_
AVAUATI
[]A\A]A^A_
[]A\A]A^A_
I9^ 
[]A\A]A^A_
[]A\A]A^A_
AVAUATUSH
S0L9
tuL9
/t[8
[]A\A]A^
]A\A]A^
AVAUATI
N0H9
M9l$
H0M9
u	H9
t&H9
[]A\A]A^A_
u	H9
t$H9
M9l$ 
@0L9
tEH9
/t+8
[]A\A]A^A_
E0L9
t8H9
u	I9
t$H9
[]A\A]A^A_
[]A\A]A^A_
AWAVAUATUSH
D$H1
+thA
\$ H
\$0H
\$@H
|$HdH3<%(
X[]A\A]A^A_
H9<$t
ffffff.
AWAVAUATA
=2(6
t$ H
=1&6
[]A\A]A^A_
|$`H
=y#6
L;<$u
|$PH
=_!6
=D 6
\$0H
d$@H
\$pH
ATUI
[]A\
AWAVAUATUSH
L9d$
[]A\A]A^A_
AWAVAUATI
D$(H
\$(L
[A\A]A^A_]
t$ H
fff.
AWAVAUATI
|$ L
>	w 
>	w!
t{H9
U(I;T$(
t$ I
D$HH
[A\A]A^A_]
AWAVAUATI
t$PH
=./6
t$8H
|$ H
t$XH9D$H
D$HH
\$8H
|$PH
D$ H
T$XH
H;D$ H
D$@H
D$hf
D$(L
t$ H
D$HH9
H++I
5Z)6
\$@H
D$(H
t$8H
l$@H
l$@H
l$@H
t$(H
t$(H
l$@H
l$pH
|$8H
T$(H
[]A\A]A^A_
T$@H
|$hI
|$@H
AWAVAUATI
[]A\A]A^A_
u'L)
fff.
AWAVAUATL
|$@H
t$HL9
\$@H
|$HH
d$PL
\$`H
H;D$
D$@H
t$ H
D$(H
|$ H
D$pH
D$(H
D$pH
D$xH
t$(L
D$pH;D$(
\$8H
t$0H
|$8H
d$pH
l$ H
|$HI
D$HH
t$8H
T$ H
D$(H
|$0H
t$ H
D$pH;D$(
[]A\A]A^A_
t$(H
T$8H
D$pH
D$(H
D$pH
|$ H
|$0H
|$8H
AVAUATUSL
]A\A]A^
[]A\A]A^
AVAUATUSL
]A\A]A^
[]A\A]A^
AWAVAUATI
[]A\A]A^A_
,$I9
AWAVAUATI
[]A\A]A^A_
AWAVI
AUATUSH
D$(1
D$(dH3
8[]A\A]A^A_
ATUSH
[]A\A]A^
AVAUATUSH
[]A\A]A^
AWAVH
AUATH
|$ H
D$(H
D$ H9X
[]A\A]A^A_
H9\$(A
s I9
u L)
L$(H
[]A\A]A^A_
} H9
ATUSH
C0H9
[]A\A]A^
AWAVH
AUATUSH
D$(M
4$L9
|$(M
<$L9
4$L9
D$(H
T$(H
8[]A\A]A^A_
\$ L
\$ M)
|$(M
AWAVAUATI
I;D$
T$(H
E0H9
D$(H
D$(t`H
[]A\A]A^A_
t$ I
[]A\A]A^A_
AWAVAUATUSH
D$X1
l$0H
D$/H
t$0L
|$0L9
D$XdH3
h[]A\A]A^A_
|$0I
AWAVI
AUATUSH
H;W(
H1C(
]A\A]A^A_
H1C(
AWAVAUATI
D$X1
\$0H
T$0H
|$/H
|$0H
L$XdH3
h[]A\A]A^A_
|$0H
AWAVAUATUSH
uEL)
[]A\A]A^A_
([]A\A]A^A_
AVAUATI
[]A\A]A^A_
[]A\A]A^A_
I9^ 
[]A\A]A^A_
[]A\A]A^A_
fff.
ATUI
[]A\
ATU1
D$(1
D$(dH3
0[]A\
D$81
D$8dH3
@[]A\
D$(1
T$(dH3
ffff.
ATUI
D$H1
l$ H
D$ H
|$(H
D$HdH3
P[]A\
|$(H
fff.
fffff.
AWAVAUATUSH
D$LH
T$PH
D$Xt
l$`H
\$`H
t$pH
D$LL
D$LL
t$ I
t$(H
t$ H
t$0H
D$8H
[]A\A]A^A_
\$LH
D$ H
t$(H
t$ H
t$0H
T$8H
AWAVAUATUSH
D$@H
D$0H
D$ H
D$HH
D$8H
H;T$
T$PH
\$`H
H;T$
|$ H
|$HH
t$ H
D$8H
t$(H
D$8H
t$@H
[]A\A]A^A_
t$ H
t$XH
l$pH
t$@H
|$ H
|$8H
|$8H
AWAVAUATI
[]A\A]A^A_
D$ H
D$@H
D$(H
D$Ht
D$0H
D$8t
d$@L
l$0L
D$ H
D$PH
T$`H9
D$hH
T$pH
t$ H
D$ H
AWAVI
AUATI
t$8L
D$hH
L$0H
D$0H
D$ H
t$ H
|$(H
D$8H
D$0H
`8L9
D$0H
`hL9
D$0H
D$0H
D$0H
D$0H
t$@H
t$ H
t$ H
|$(H
t$PH
|$ H
t$PH
|$ H
D$`H
H;D$
t$ H
D$0H
H;D$
t$ H
t$0H
t$ H
D$0H
D$@H
D$PH
H;D$
|$hH
t$`H
t$XH
t$PH
t$HH
[]A\A]A^A_
D$8H
D$ H
D$(L
\$pH
="~5
t$@H
=f|5
t$`H
=-|5
t$XH
t$PH
t$HH
\$@H
D$8H
D$ L
=Ix5
t$@H
D$ H
D$ H
t$@H
=)v5
t$@H
|$ H
fffff.
AWAVH
AUATUSH
D$8H
D$8H
D$ H
D$(H
D$ H
D$0H
D$(f
l$`H
T$hH
|$PH
D$hH
l$`H
D$hH
T$`H
T$pH
D$8H
[]A\A]A^A_
D$(H
D$ H
t$ H
l$(H
G H9
H;|$
H;|$
5Yo7
D$ H
5Cl7
D$(L
|$0H
D$0H
D$8H
H;|$(t
H;|$ t
G H9
D$(H
D$ H
AUATI
D$8H
D$@H
D$hH
D$pH
9P s
t	9V 
D$0H
;P v
t	;Q 
ShH9
D9hPH
D9hP
[]A\A]
ATUI
D$(H
D$0H
D$XH
D$`H
9P s
tr9Q wmH
dH34%(
[]A\
AWAVI
AUATUSH
=OT5
t$0H
t$(H
D$P}
\$XH
D$8H
D$@H
D$HH
D$0H
D$`H
D$`H
D$hH
D$pH
D$xH
D$`H
t$PH
t$ H
t$(H
[]A\A]A^A_
t$ H
t$(H
=xJ5
=LJ5
=(J5
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AUATI
D$(1
D$(dH3
8[]A\A]
AWAVAUATUSH
D$81
L$ M
D$,H
g E9
wGrdL
u[A9
\$0H
L$,L
D$ H
L9d$
D$ 9
L$8dH3
H[]A\A]A^A_
t$0H
AWAVAUATUSH
D$81
L$ M
D$,H
g E9
wGrdL
u[D9
\$0H
L$,L
D$ H
L;d$
D$ 9
L$8dH3
H[]A\A]A^A_
t$0H
~0I9
AWAVAUATI
D$81
L$ H
D$,H
s E9
\$0H
L$,L
D$ H
=?@5
H9\$
C A9
L$8dH3
H[]A\A]A^A_
tAATI
[]A\
ATUSH
C@H9
[]A\A]A^
ATUSH
[]A\A]A^
ATUSH
[]A\A]A^
ATUSH
[]A\A]A^
ATUSH
[]A\A]A^
AWAVI
AUATL
[]A\A]A^A_
E A9
[]A\A]A^A_
AUATI
[]A\A]
G@uXH
=X75
AUATI
[]A\A]
AWAVI
AUATI
[]A\A]A^A_
tgE1
C A9
]A\A]A^A_
AUATI
[]A\A]
AWAVAUATI
|$ H
k A9
[]A\A]A^A_
|$(H
D$ H9X
[]A\A]A^A_
AWAVI
AUATE
|$(A
|$HA
[]A\A]A^A_
=<15
AWAVAUATUSH
d$PL
D$pH
T$hH
D$xH
D$pH
T$hH
D$xH
d$PH
[]A\A]A^A_
d$PH
d$PH
d$PH
=&,5
d$PH
d$PH
=v+5
d$PH
AUATI
D$(1
D$(dH3
8[]A\A]
AWAVAUATUSH
%x)5
D$x1
t$ L
\$PH
D$`SHA-A
L$PH
|$PH
\$8M
t$0L
D$xdH3
[]A\A]A^A_
t$0L
|$PH
AWAVAUATL
BenchmarH
 cor
ks botanH
's SHA-1H
benchmarH
k_shL
[A\A]A^A_]
tAATI
[]A\
fffff.
AWAVAUATI
ATASI
[A\A]A^A_]
5JA	
fffff.
AVAUATUH
%-*7
H;X v
t@H;Y r:H
[]A\A]A^
d$(I
H;Z v
H;^ 
T$0H
=](7
\$0H
tqI9
B H9D$0A
D$0H
D$8H
D$@H
l$ H
5D<	
l$PH
\$pH
t$PH
|$pH
|$PH
|$pH
|$PH
|$0H
l$0H
5r;	
\$pH
l$PH
t$pH
|$PH
|$pH
|$PH
|$pH
t/ATI
[]A\
ATUH
K L9
ATUSH
"L;f H
L;` H
[]A\A]
L;` H
[]A\A]
H9C r,L
[]A\A]
[]A\A]
[]A\A]
ATUI
[]A\
ATUA
D$81
L$8dH3
@[]A\
D$(1
L$(dH3
AUATI
[]A\A]
AWAVI
AUATUSH
\$`dH
d$`L
D$`H
D$hH
l$ H
|$ I
D$`H
D$hH
C`H9
[]A\A]A^A_
l$@H
T$@H
|$@I
D$hH
C`H9
|$ I
|$@I
ATUI
[]A\
AWAVI
AUATI
D$dL
=N-	
D$pH
D$eH
D$xH
D$hH
D$iH
D$kH
D$jH
D$xL
=)'	
.I;n
D$lH
D$mH
D$nH
D$oH
|$(L
G`H9
[]A\A]A^A_
H;|$ 
|$XH
|$PH
|$HH
|$@H
|$8H
|$0H
AWAVAUATUSH
t$PdH
L$@H9
D$8H
D$gH
D$HH
D$pH
D$hH
\$0H
|$8H
D$(H
D$(H
t$if
D$(L
p8M9
D$jH
D$(L
phM9
D$kH
D$(L
D$lH
D$(L
D$mH
l$`M
D$ H
t$ H
D$(L
D$nH
H9D$@H
|$PL
E`H9
[]A\A]A^A_
t$8H
|$8I
|$XH
|$8H
AWAVAUATUSH
L$@L
D$ H
D$0H
d$pL
L$(H
D$PH
D$PH
d$pL
D$PH
d$pH
d$pH
\$XH;\$`
D$PH
\$XL
D$PH
\$XH
t$@L
\$XH;\$`
\$XL
\$XM
D$ H
\$XH;\$`
\$XL
\$XM
D$(H
5u5	
\$XH;\$`
\$XL
\$XM
D$8H
L$0H
l$XH
\$PL
l$PM
[]A\A]A^A_
D$PH
|$HH
|$PH
D$PH
D$PH
ATUI
[]A\
AWAVI
AUATL
[]A\A]A^A_
B H9
AWAVL
AUATI
[]A\A]A^A_
B H9
B(H9A
fffff.
AVAUL
ATUSH
](H9
[]A\A]A^
AWAVM
AUATI
L$0H
D$8dH
D$ L9
D$(H
D$pM
D$xH
D$PH
T$PH
/rVH
l$ M
t$(L9
L$01
d$PH
l$XL)
l$XH
\$PH9
t)f.
l$PH
D$(H
D$ H
[]A\A]A^A_
|$XH;|$`
|$XH
|$XH
|$XH;|$`tRH
|$XH
|$XH
d$XH
l$PI9
d$PM
D$(H
D$ H
AWAVAUATI
AXAYtTI+
t$ H9p s
t$ L
[A\A]A^A_]
AWAVAUATI
A\A_
AZA[H)
AXAYu
[A\A]A^A_]
tCH9
I;} 
AWAVAUATSH
u	I9
[A\A]A^A_]
AWAVAUATI
4$M9
[]A\A]A^A_
t/ATI
[]A\
AUATI
[]A\A]
AWAVAUATL
[A\A]A^A_]
AUATH
[]A\A]A^A_
[]A\A]A^A_
H9C(w
S H9
P H9
H9p(r
AUATH
[]A\A]A^A_
[]A\A]A^A_
AWAVH
AUATI
D$(H
8[]A\A]A^A_
D$ H
L;t$
H+l$ L;,$L
t$(H
H9L$
H9D$
8[]A\A]A^A_
w-I9
w(E1
 L9$$L
L9$$u
H;,$
8[]A\A]A^A_
AWAVI
AUATI
[]A\A]A^A_
ATUSH
*L9n H
w'r]H
H9F(w
[]A\A]
L;h H
[]A\A]
H9] t
L;h sLH
[]A\A]
H9A(r
[]A\A]
H(I9L$
C H9
C(H9B
ATUI
[]A\
AUATUSH
[]A\A]
D$81
L$ D
L$8dH3
fff.
vz~8
vz~8
=S|4
fff.
D$81
D$hH
T$$D
vz~8
D$8dH3
=S{4
fff.
ATU1
vz~8
 []A\
=,z4
ATUSH
D$81
vz~8
t$$L
\$8dH3
@[]A\
=9u4
D$(1
L$(dH3
D$(1
D$(dH3
AVAUI
ATUI
-as4
\$@H
t$ H
D$ H
|$(H
\$@H
T$@H
T$HH
T$PH
T$XH
T$`H
T$hH
D$PL
t$0H
\$@L
[]A\A]A^
t$0H
t$0H
\$@H
t$0H
AVAU
ATUI
l$ dH
\$`H
D$0H
\$`H
\$`H
T$`H
L$`H9L$ H
T$hH
T$pH
T$xH
L$hH9L$(
L$pH9L$0
L$xH9L$8
;D$@
Hi\$
[]A\A]A^
fffff.
fff.
AWAVAUATUSH
.uWL
	v:H
=Tf4
[]A\A]A^A_
d$ H
d$0H
=Ed4
d$@H
d$pH
=_c4
= c4
=Ub4
d$`H
d$PH
=Ia4
vz~8
=#^4
fffff.
ATUI
[]A\
AUATUSH
l$(L;nP
[hM;
[]A\A]
|$ L
|$ L
=KZ4
ATUI
D$81
D$8dH3
@[]A\
ATUI
D$81
D$8dH3
@[]A\
ATUI
D$81
D$8dH3
@[]A\
ATUI
D$81
D$8dH3
@[]A\
AUATI
D$81
D$8dH3
H[]A\A]
fff.
AVAUI
ATUH
-g<5
D$81
D$8dH3
@[]A\A]A^
AWAVI
AUATI
l$0H)
|$0H
H9l$
t$PH
D$PH
|$PI
t$pH
|$pI
[]A\A]A^A_
=cQ4
|$0H
|$PI
|$pI
fff.
AUATUSH
u3M)
[]A\A]
[]A\A]
[]A\A]
k0M9
kPM9
[]A\A]
fff.
[]A\A]A^
AWAVAUATM
D$X1
D$XdH3
h[]A\A]A^A_
d$ H
=|L4
d$PH
=#L4
{HI9
{(I9
H9|$
d$@H
=3K4
d$0H
fffff.
AWAVAUATUSH
|$0H
D$ H
dH3<%(
[]A\A]A^A_
D$(H
D$0L
L9d$ 
H;D$ I
|$ 1
|$(L
\$ H
L$ I
T$(H
H;D$
L$ I
T$(H
H;\$
|$(L
H;\$
l$pH
D$(H
|$8H
D$HH
l$@L
|$8H
H;|$@t
H;|$Ht
D$(H
|$0H
H9D$ I
k(M;l$p
t$hH
d$@L
|$0H
H9D$ H
-*D4
d$`H
C@H9
|$(H
T$PI
t$HH
|$(H
d$PH
D$8H
AVAUATH
D$ H
D$PH
D$0H
D$`H
H;D$
D$ H
D$(H
t$PL
T$XH
|$(H
D$8H
D$XI
|$HH
D$xI
|$hH
|$@L
ExH9
EXH9
E8H9
D$xH9
D$XH9
D$8H9
|$PH;|$(t
FXH9
F8H9
H;|$ 
D$8H
|$pL
D$pH
t$pL
T$xH
|$(H
D$8H
D$XI
|$HH
D$xI
|$hH
|$@H
ExH9
EXH9
E8H9
D$xH9
D$XH9
D$8H9
|$pI
EXH9
E8H9
D$8H
|$(H
D$8H
D$XI
|$HH
D$xI
|$hH
|$@H
ExH9
EXH9
E8H9
D$xH9
D$XH9
D$8H9
EXH9
E8H9
[]A\A]A^A_
D$xH9
D$XH9
D$8H9
|$pI
EXH9
E8H9
ExH9
EXH9
E8H9
T$0H
|$PH
D$xH9
D$XH9
D$8H9
EXH9
E8H9
D$xH9
D$XH9
D$8H9
FXH9
F8H9
ExH9
EXH9
E8H9
ExH9
EXH9
E8H9
AWAV1
AUATUSH
+H;k
D$8H
D$XH
L$(H
|$8H
H;|$(t
CXH9
C8H9
l$`M
@H9h
D$PH
L$0H
[]A\A]A^A_
D$8H
T$ H
|$ H
L$pH
T$xH
T$ H
T$ H
CXH9
C8H9
|$pH
AWAVAUATI
L$8H
t$f.
D$pH
D$(H
D$ H
D$PH
D$`H
D$ L
D$@H
|$(L
D$@H
D$HH
T$xH
|$(H
T$xH
t$pH
D$0H
|$pH;|$ t
t$PH
|$PH
[]A\A]A^A_
|$(L
|$(L
D$0H
t$pH
D$0H
|$(H
D$(H
|$pH
D$HH
D$@H
|$PH
AWAVAUATI
AWAVI
[A\A]A^A_]
AWAVAUATI
AWAVL
[A\A]A^A_]
fffff.
AWAVAUATI
[A\A]A^A_]
fffff.
AWAVAUATUSH
d$`H
t$@L
D$ M
|$`L9
l$`H
|$(H;|$0
|$(H
|$(H
\$PH
D$ H
d$(H
l$ I9
d$ M
[]A\A]A^A_
|$ H
|$`I
AUATI
\$0H
D$h1
t$@H
L$hdH3
x[]A\A]
t$@H
[]A\
+[]A\
AVAUATUH
[]A\A]A^
{HI9
{(L9
D$H1
D$(H
D$0H
D$8H
D$ H
l$ H9
D$(H
D$0H
D$8H
L$HdH3
l$ H9
t$(H
D$ H
D$H1
D$(H
D$0H
D$8H
D$ H
l$ H9
D$(H
D$0H
D$8H
L$HdH3
l$ H9
t$(H
D$ H
AWAVL
AUATUSH
\$(I
t$ L
uHI)
[]A\A]A^A_
[]A\A]A^A_
CxH9
CXH9
C0H9
[]A\
CxH9
CXH9
AWAVH
AUATH
[]A\A]A^A_
L9l$
[]A\A]A^A_
{ I9
AUATI
[]A\A]
AVAUI
ATUI
]A\A]A^
AWAVAUATUSH
([]A\A]A^A_
{hI9
{HI9
{(I9
AWAVI
ATUSL
D$(H
D$ H
H+T$
D$(L
8[]A\A]A^A_
l$ I9
H;\$
l$ M
8[]A\A]A^A_
H9D$
w+I9
8[]A\A]A^A_
ATUSI
[]A\A]
T$ 1
[]A\A]
[]A\A]
[]A\A]
[]A\A]
AWAVAUATM
H;,$tyH;\$
H;,$H
H;\$
H;D$
[]A\A]A^A_
D$(1
D$(dH3
fffff.
D$(1
D$(dH3
fffff.
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
ATUI
l$ H
D$H1
D$ H
|$(H
D$HdH3
P[]A\
|$(H
fff.
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
ATUI
[]A\
D$(1
<$H9
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
fffff.
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
fffff.
D$(1
D$(dH3
fffff.
D$(1
D$(dH3
fffff.
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
fffff.
D$(1
D$(dH3
fffff.
D$(1
D$(dH3
fffff.
D$(1
D$(dH3
fffff.
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
ATUI
l$ H
D$H1
t$ H
H+D$
|$ H
D$ H
|$(H
D$HdH3
P[]A\
|$ H
|$(H
fffff.
CXtnH
[]A\A]A^
N(H9M
F t*
fff.
ffff.
fff.
ATUSH
D$81
D$8dH3
@[]A\
D$(1
D$(dH3
fffff.
D$(1
D$(dH3
D$(1
D$(dH3
AUATI
D$(1
D$(dH3
8[]A\A]
D$(1
D$(dH3
AWAV
AUATI
D$H1
\$ L
D$ H
|$(H
D$HdH3
X[]A\A]A^A_
|$(H
D$(1
D$(dH3
AWAV
AUATI
D$H1
\$ L
D$ H
|$(H
D$HdH3
X[]A\A]A^A_
=ro3
|$(H
D$(1
D$(dH3
AWAVAUATUSH
,$I9
([]A\A]A^A_
AWAVH
AUATUSH
,$I9
([]A\A]A^A_
AWAVH
AUATUSH
,$I9
([]A\A]A^A_
AWAVH
AUATUSH
,$I9
([]A\A]A^A_
AWAVH
AUATUSH
,$I9
([]A\A]A^A_
AWAVH
AUATUSH
,$I9
([]A\A]A^A_
AWAVH
AUATUSH
,$I9
([]A\A]A^A_
AWAVH
PAUATUSH
,$I9
([]A\A]A^A_
AWAVH
AUATUSH
,$I9
([]A\A]A^A_
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
ATUH
D$x1
\$ H
|$XH
CHH9
|$8H
l$(H
\$ H9
l$ H
D$xdH3
[]A\
fffff.
ATUH
D$x1
\$ H
|$XH
CHH9
|$8H
l$(H
\$ H9
l$ H
D$xdH3
[]A\
ffffff.
fff.
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
fff.
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
D$(1
D$(dH3
AWAVI
AUATUSH
|$0H
\$PdH
D$0H
D$PH
D$pH
|$PH
D$(M
t$`I
l$XL
L$ H
l$xH
\$pH9
l$pH
|$0H
[]A\A]A^A_
L9d$(
l$`I
t$XH
l$xH
l$pI
l$xH
l$pI
|$ H
L$(L
hXM9
l$ I
|$0H
|$PH
AUATH
D$@1
ZYt.H
D$8dH3
H[]A\A]
fffff.
AUATH
D$@1
ZYt.H
D$8dH3
H[]A\A]
ffffff.
AWAVAUATUSH
\$0H
D$PH
|$0H
d$XH
|$`L
|$`I
l$XL
|$hH
l$XH
\$PH9
l$PH
[]A\A]A^A_
L9d$
l$`I
t$XH
l$XH
l$PI
l$XH
l$PI
t$hI
L9`8
hXM9
T$pH
t$hH
|$0H
|$0H
|$0H
AUATH
D$@1
ZYt+H
D$8dH3
H[]A\A]
fffff.
AWAVAUATUSH
\$0H
D$PH
|$0H
d$XH
|$`L
|$`I
l$XL
|$hH
l$XH
\$PH9
l$PH
[]A\A]A^A_
L9d$
l$`I
t$XH
l$XH
l$PI
l$XH
l$PI
t$hI
hXM9
T$pH
t$hH
|$0H
|$0H
|$0H
D$81
D$8dH3
fffff.
AWAVAUATUSH
D$hH
D$pH
D$xH
EHH9
GHH9
G(H9
[]A\A]A^A_
D$`H
|$XH
H9|$xt
H9|$pt
H9|$h
D$(H
D$(H
D$(H
D$0H
D$8H
D$0H
D$(H
D$ H
D$@H
ATUH
D$x1
\$ H
D$ H
D$XH
t$PH
|$ H9
D$xdH3
[]A\
AWAVI
AUATUSH
l$PdH
D$PH
d$PL
\$XI9
u	H9
|$PI
-uiH
|$PI
[]A\A]A^A_
D$ H
|$ H
D$(L
	wWH
D$(L
t$(H9
u	L9
l$ r
t$pL
|$pI
|$pI
AWAVAUATUSH
D$x1
t$ I
u	H9
-uPH
D$xdH3
[]A\A]A^A_
T$PH
D$XL
\$PH
\$PA
	wWH
u	L9
\$0L
|$0H
5Ou3
|$0H
|$PH
fff.
D$(1
D$(dH3
D$(1
D$(dH3
D$81
D$8dH3
D$81
D$8dH3
D$81
D$8dH3
AWAVAUATUSH
|$0I
u	H9
-uRH
[]A\A]A^A_
T$`H
D$hL
\$`H
\$`A
	wWH
u	L9
\$@L
|$@H
5Fk3
|$@H
|$`H
D$(1
D$(dH3
D$(1
D$(dH3
=f.5
=4.5
=l-5
=:-5
=r,5
=@,5
=x+5
=F+5
=~*5
=L*5
=R)5
= )5
=X(5
=&(5
=^'5
=,'5
=d&5
=2&5
=j%5
=8%5
=p$5
=>$5
=v#5
=D#5
=|"5
=J"5
=P!5
=V 5
=$ 5
=r	5
=@	5
fffff.
AWAVI
AUATUSH
e0t:
[]A\A]A^A_
B H9
D$(1
=Hy3
L$(dH3
AVAUATUH
D$H1
H9Z s
t`I9\$ wYI
\$(I
D$HdH3
P[]A\A]A^
\$ H
\$ L
T$(H
T$0H
|$(H
<$L9
|$(H
<$L9
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
AVAUATUI
[]A\A]A^
B I9
=WO3
dH3<%(
H9J s
H9N 
H9H s
H9N 
H9H s
H9N 
H9H s
H9N 
H9H s
H9N 
H9J s
H9H v%H
AVAUATUI
[]A\A]A^
B I9
dH3<%(
H9H s
H9N 
H9H s
H9N 
H9H s
H9N 
H9J s
H9H v)H
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
fff.
AWAVAUATSH
[A\A]A^A_]
RAVH
fff.
=;z4
5	z4
fff.
5ix4
fff.
fff.
=[u4
5)u4
fff.
fff.
={p4
5Fp4
=;m4
5fk4
={f4
5If4
fff.
fff.
=;c4
5ia4
fff.
fff.
=[^4
5)^4
fff.
=Q}4
fff.
=Q|4
=!|4
=l{4
fff.
=!{4
={Y4
=pz4
5IY4
=<z4
fff.
=Hy4
fff.
= x4
fff.
=qw4
=qv4
=Av4
={S4
5FS4
=Au4
=\t4
fff.
={P4
=hs4
5IP4
=4s4
fff.
=@r4
fff.
fff.
=ip4
fff.
=io4
=9o4
={J4
5IJ4
fff.
=9n4
=	n4
=Tm4
fff.
=	m4
=;G4
=Xl4
5	G4
=$l4
fff.
=%k4
5fE4
=yj4
=yi4
=Ii4
=[B4
5)B4
fff.
=Ih4
=dg4
fff.
=ef4
=1f4
={=4
=5e4
5F=4
=Yc4
=;:4
5	:4
fff.
=Yb4
=)b4
5i84
=ta4
fff.
=!a4
=p`4
=<`4
fff.
=@_4
fff.
={34
5I34
fff.
=a]4
fff.
=a\4
=1\4
=;04
=y[4
=1[4
5i.4
=LZ4
fff.
=MY4
=[+4
= X4
5)+4
fff.
=qW4
=qV4
=AV4
=AU4
={&4
5F&4
=YT4
=`S4
=,S4
fff.
=;#4
=0R4
5	#4
fff.
5f!4
=QP4
AWAVAUATL
@ H;
dH34%(
[A\A]A^A_]
fffff.
=iR4
=FR4
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
=>G4
=LO4
5 G4
AVAUATSH
=HN4
[A\A]A^]
AVAUATSH
[A\A]A^]
=QL4
=;K4
AVAUATSH
[A\A]A^]
={I4
AVAUATSH
[A\A]A^]
=TH4
AVAUATSH
=PG4
[A\A]A^]
5p<4
AVAUATSH
[A\A]A^]
=YE4
=^:4
5@:4
=CD4
AVAUATSH
[A\A]A^]
=.84
AVAUATSH
[A\A]A^]
=TA4
AVAUATSH
=P@4
[A\A]A^]
AVAUATSH
[A\A]A^]
=Y>4
=C=4
AVAUATSH
[A\A]A^]
=n/4
5P/4
AVAUATSH
[A\A]A^]
=>-4
=T:4
5 -4
AVAUATSH
=H94
[A\A]A^]
AVAUATSH
[A\A]A^]
=Q74
=;64
AVAUATSH
[A\A]A^]
=n&4
5P&4
={44
AVAUATSH
[A\A]A^]
=>$4
=L34
5 $4
AVAUATSH
=@24
[A\A]A^]
=	24
AVAUATSH
[A\A]A^]
=I04
=3/4
AVAUATSH
[A\A]A^]
=s-4
AVAUATSH
[A\A]A^]
=L,4
AVAUATSH
=P+4
[A\A]A^]
AVAUATSH
[A\A]A^]
=Y)4
=C(4
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
=T%4
AVAUATSH
=8$4
[A\A]A^]
=|#4
AVAUATSH
=x"4
[A\A]A^]
=A"4
=+!4
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
=~	4
5`	4
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
=<	4
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVAUATSH
[A\A]A^]
AVSH
[A^]
AVAUI
ATUSH
D$H1
\$ H
|$ H
D$HdH3
P[]A\A]A^
|$ H
=z)2
AWAVAUATI
4$M9
[]A\A]A^A_
AWAVAUATUSL
|$ H
l$ L
L$(L
l$HL
L$PH
D$@H
l$@I9
D$HH
D$hH
D$PH
D$pH
D$XH
D$xH
D$`H
L;l$
D$hH
D$pH
D$xH
D$@H
|$01
d$0L
[]A\A]A^A_
=Cj1
L$`H
D$HH
D$PH
D$XH
D$`I9
D$`H
D$@H
D$(1
D$(dH3
AWAVAUATI
|$(SH
D$H1
D$HH
D$8H
t$ M
t$ H
|$ L9
tDH9]
l$ H
I;|$
I;|$
4$H)
?v-I
D$HdH3
X[]A\A]A^A_
=m_1
|$8H9|$
|$ I
AWAVI
AUATI
S H9
[]A\A]A^A_
P H9
tOE1
C I9
]A\A]A^A_
tcAVAUI
ATUI
|$(M
[]A\A]A^
ATUI
[]A\
t/ATI
[]A\
t/ATI
[]A\
AUATH
D$@1
ZYt+H
D$8dH3
H[]A\A]
t/ATI
[]A\
t<ATI
[]A\
AWAVI
AUATI
h0L9
{0L9
t^H;X
[]A\A]A^A_
dH3<%(
AWAVI
AUATI
|$ H
D$(H
D$(H
D$(H
h H9
D$(H
](I+] E1
L$(H
D$(L
m I9
D$(H
D$(H
\$(A
|$ L
D$(M
|$XI
D$hH
|$8I
D$HH
\$(I
l$ H9
\$ H
](I+] I
D$ I
D$(I
\$0M
m I9
\$(I
|$8I
D$8I
|$XI
D$XI
|$ L
](I+] I
D$ I
D$(I
\$0M
m I9
\$(I
\$HI
|$8I
\$8I
D$hI
|$XI
D$XI
D$(H
8[]A\A]A^A_
D$(H
D$(L
`(t,H
D$(H
L$(H
D$(H
x8H9
D$(H
D$(H
x8H9|$
D$(H
|$8H9
D$(H
t$(H
H9\$
|$ H
H9\$
|$ H
|$8H9|$
D$(H
dH3<%(
AWAVI
AUATI
[]A\A]A^A_
G8tNH
AWAVAUATUSH
t$0I
u	H9
\$@L
|$@H
[]A\A]A^A_
T$`H
D$hL
\$`H
\$`A
	wWH
u	L9
|$@H
|$`H
AWAVAUATI
D$(1
\$ H
D$(dH3
8[]A\A]A^A_
<?L9
$$L9
L9$$t
L94$t
AVATSH
[A\A^]
AWAVI
AUATI
[]A\A]A^A_
K L9
ATUSH
"L;f H
L;` H
[]A\A]
L;` H
[]A\A]
H9C r,L
[]A\A]
[]A\A]
[]A\A]
AWAVAUATUSH
H9J s
t@H9N w:H
dH3<%(
[]A\A]A^A_
t$ L
d$PH
D$8H
D$@I
D$pH
G H9D$P
D$PH
t$hI
$tVH
t$hI
t$0L
t$hI
t$0L
K L9
ATUSH
"L;f H
L;` H
[]A\A]
L;` H
[]A\A]
H9C r,L
[]A\A]
[]A\A]
[]A\A]
AUATUSH
D$H1
H9J s
H9K 
l$ H
L$ H
D$(H
|$(H
<$L9
t$HdH34%(
X[]A\A]
|$(H
<$L9
K L9
ATUSH
"L;f H
L;` H
[]A\A]
L;` H
[]A\A]
H9C r,L
[]A\A]
[]A\A]
[]A\A]
H9J s
t H9H w
dH34%(
K L9
ATUSH
"L;f H
L;` H
[]A\A]
L;` H
[]A\A]
H9C r,L
[]A\A]
[]A\A]
[]A\A]
H9J s
t H9H w
dH34%(
AVAUA
ATUI
D$81
D$ noneH
coun
D$8dH3
@[]A\A]A^
stdiH
fffff.
ATUI
[]A\
ffffff.
	w*H
5eT1
ATUH
D$81
ATUI
[]A\
AWAVAUATI
H;,$
H;,$
\$ H
[]A\A]A^A_
d$pH
d$0H
d$@H
d$PH
d$`H
d$ M
fffff.
ATUS
-$T3
=QS3
[]A\
ATUSH
T$P1
D$PH
D$XH
D$`H
D$(H
D$hH
D$0H
D$pH
D$8H
D$xH
D$@H
[]A\
@0H9
AVAUATUI
l$0H
[]A\A]A^
=6	1
AUATI
[]A\A]
ATUI
[]A\
AWAVAUATUSH
\$pdH
d$pL
D$pH
D$xH
tSL9
D$pH
t$PH
T$PH
|$PI
D$pH
D$xH
C`H9
[]A\A]A^A_
t$0H
|$0I
|$0I
D$xH
C`H9
|$PI
fffff.
fffff.
ATUI
D$(1
L$(dH3
0[]A\
|$ H
|$ H
D$81
|$$H
|$0H
L$8dH3
AWAVA
AUATI
[]A\A]A^A_
AWAVAUATUSH
\$@L
d$PH
|$pH
D$pH
D$xH
D$PH
|$PI
[]A\A]A^A_
\$ H
\$0H
|$PI
ffffff.
ATUH
T$0dH
D$H%@@
[]A\
AVAUATUI
[]A\A]A^
|$@H
|$ H
fffff.
D$(1
T$(dH3
ATUSH
T$`dH
D$ H
t$ H
D$(H
t$(H
D$0H
t$0H
D$8H
D$@H
D$HH
D$PH
t$PH
[]A\
fffff.
fffff.
ATUI
[]A\
AUATUSH
D$(1
	vDH
L$(dH3
8[]A\A]
ffff.
AWAVAUATUSH
>~tEH
[]A\A]A^A_
l$01
d$pH
L$pH
|$pI
|$0I
d$PH
T$PH
|$PI
T$8H
|$0I
|$PI
|$pI
D$81
D$8dH3
@[]A\
ATUSH
D$81
D$8dH3
@[]A\
D$(1
H9D$
H+L$
D$(dH3
AWAVAUATI
[]A\A]A^A_
H9D$@
t$pL
l$ H
T$(H
t$ H
\$pL
l$ H
T$(H
t$ H
|$ I
l$ D
AWAVAUATUSH
\$PH
\$pH
t$<H
l$@H
L$ H
l$`H
t$(H
t$ H
[]A\A]A^A_
ATUSH
T$0dH
t$HH
[]A\
AWAVI
AUATI
D$`H
D$pH
T$hH
D$ H
D$(H
D$0H
t$`L
T$hH
d$@H
T$hH
t$`H
|$`H
[]A\A]A^A_
t$`H
D$(H
|$ H
T$hH
|$ H
D$8H
|$0H
|$0H
H;|$8
H;|$(
|$`H
D$ H
D$0H
d$PH
ATUH
D$x1
T$0H
l$8H
D$0H
H;\$
 H9\$
D$xdH3
[]A\
d$PH
\$0L
T$XH
t$PH
|$PI
ATUSH
T$0dH
D$H%
[]A\
fffff.
ATUSH
D$81
D$8dH3
@[]A\
ATUI
D$(1
H9D$
H+L$
D$(dH3
0[]A\
AUATI
D$h1
D$(H
|$ H
t$(H
|$ H
\$ I
|$ H
L$hdH3
x[]A\A]
d$@L
T$HH
t$@H
|$@I
|$ H
AWAVI
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
uWE1
AUATUSH
([]A\A]
AVAUATUH
[]A\A]A^
fff.
AUATUSH
D$(1
T$ H
T$ H
t$ L
D$(dH3
8[]A\A]
\$ H
AWAVAUATUSH
d$ 1
[]A\A]A^A_
ATUH
[]A\
ATUI
[]A\
fffff.
ATUI
_hH9
l$hH
|$@I
D$PH9
|$ I
D$0H9
[]A\
[]A\
|$hH
|$@I
D$PH9
|$ I
D$0H9
fff.
fff.
fff.
GpH+GhH
AWAVI
AUATUSH
D$ H
D$ H
|$ I
[]A\A]A^A_
D$ H
\$`A
}pH;}x
t$ H
D$@H
D$PH
|$@H
|$ I
AWAV1
oPATL
g0UH
[]A\A]A^A_
{@L9
{ I9
AWAVA
AUATD
l$@I
{pH;{x
s`u/H
[]A\A]A^A_
{pH;{xtEH
AWAVAUATI
D$X1
I;|$
D$XdH3
h[]A\A]A^A_
ATUI
[]A\
fff.
AWAVA
AUATL
[]A\A]A^A_H
5"v1
AWAVA
AUATL
D$81
D$8dH3
H[]A\A]A^A_
=0t1
AUATUSH
C,t3A
C0t*H
[]A\A]H
[]A\A]
D$H1
T$HdH3
ATUSH
D$X1
L$XdH3
`[]A\
|$0H
|$0H
fff.
fff.
fff.
ATUS
[]A\
ATUSH
[]A\
AUATI
[]A\A]
fff.
AUATUSH
T$(H
D$(H
[]A\A]H
AUATUSH
[]A\A]
[]A\A]
AUATI
[]A\A]
AWAVAUATA
D$(1
L$(dH3
8[]A\A]A^A_
fff.
AVAUI
ATUI
]A\A]A^H
fffff.
AVAUI
[]A\A]A^
AUATI
4$H9
([]A\A]
<$H9
AUATI
4$H9
([]A\A]
<$H9
AUATUSH
T$(H
[]A\A]
ATUSH
e0L9
[]A\
AUATI
[]A\A]
AUATI
|$0I
l$0I
l$0I
l$8I
[]A\A]
AVAUI
ATUI
[]A\A]A^
fff.
fff.
AWAVAUATUSH
|$XH
L$,I
T$PH
D$0L
D$ H
L9d$
Ic|$
$$L9d$
D$,L
`0L9d$ tLA
Ic|$
$$L9d$ u
T$0H9
P A9U L
L;l$0
D$HH
T$8L
T$PH
D$pH
D$PH
D$xH
D$pH
Ic|$
$$L9d$
l$@L
L;d$
[]A\A]A^A_
D$pH
T$`A
t$`D
l$dH
D$`H
D$XH
H;D$
Ic|$ 
Ic|$ E1
Ic|$ 
D$XH
AUATI
4$H9
([]A\A]
<$H9
AVAUI
ATUI
]A\A]A^
[]A\A]A^
t/ATI
[]A\
AWAVI
AUATI
[]A\A]A^A_
tME1
C A9
]A\A]A^A_
AWAVH
AUATI
[]A\A]A^A_
fff.
ATUI
D$81
Netxx buH
pe givenH
x:SockAdH
T$ H
g: bad sH
ocket ty
 to NetxH
@pfA
D$8dH3
@[]A\
8t	f
fffff.
fff.
ATUA
D$X1
\$XdH3
`[]A\
T$8H
t$0H
|$0H
|$0H
D$81
T$8dH3
fffff.
ATUA
[]A\H
ATUA
[]A\H
AUATI
m(I+m H
m(H)
[]A\A]
fffff.
D$(1
T$(dH3
AUATI
w(H;w0t>H
[]A\A]
ATUA
w(H;w0t1H
 []A\
ATUI
w(H;w0t-H
 []A\
fffff.
AWAVI
AUATUSH
D$pH
D$ H
l$PL
t$@H
D$(H
D$0H
|$ L
H;|$8t	
@H9\$
t$(L
T$xH
|$ H
t$ L
D$ H
|$pH
[]A\A]A^A_
T$xH
t$pH
D$ H
|$pH
D$0H
fffff.
fffff.
ATUI
[]A\
D$h1
D$hdH3
p[]A\
l$ H
listen(2H
D$ H
T$0H
) error:H
T$ H
T$HH
t$@H
|$@I
|$ H
|$@I
fff.
AVAUI
[]A\A]A^
AVAUI
ATUH
[]A\A]A^
fff.
D$h1
t$hdH34%(
p[]A\
l$@H
|$@H
AWAVI
AUATD
\$0dH
|$(1
D$0"
D$(H
L$`L
D$(L
D$(H
D$(L
[]A\A]A^A_
AWAVI
AUATH
\$`1
l$ H
accept(2H
D$ L
T$0H
) error:H
T$ H
T$HH
t$@H
|$@I
[]A\A]A^A_
|$ H
|$@I
AUATUSH
$wTH
[]A\A]
ATUI
[]A\
9p }
fffff.
ATUH
GXH9
l$`I
D$XH9
|$xH
D$pH
l$`I
\$XH9
l$XH
t$8I
|$(]A\
|$xH
D$pH
t$8I
fffff.
AVAUATUI
[]A\A]A^
B A9
;J ~
t);F |$H
fffff.
AWAVAUATUSH
D$PL
D$`H
D$0H
D$(H
D$ A
T$ L
;Z ~
;X }
T$0H
\$`H
\$LL
L9t$
[]A\A]A^A_
H;D$8L
|$(H
}`H;}h
H;|$8
|$(A
D$8H
|$(H
}`H;}htcH
T$LH
T$(H
T$(H
D$(H
t#I)
t/ATI
[]A\
K D9
ATUSH
"D;f H
D;` H
[]A\A]
D;` H
[]A\A]
9C |.L
[]A\A]
[]A\A]
[]A\A]
AUATUSH
$w[H
[]A\A]
fffff.
AUATL
D$H1
D$HdH3
X[]A\A]
T$(H
t$ H
|$ H
|$ H
fff.
fff.
AUATL
D$H1
D$HdH3
X[]A\A]
T$(H
t$ H
|$ H
|$ H
fffff.
ATUI
<$H9|$
 []A\
AUATI
D$H1
\$ H
recv fai
luref
T$(H
t$ H
|$ H
L$HdH3
X[]A\A]
|$ H
ATUI
<$H9|$
 []A\
AUATI
D$H1
\$ H
send fai
led:
T$(H
t$ H
|$ H
L$HdH3
X[]A\A]
|$ H
fff.
ATUI
<$H9|$
 []A\
ATUSH
D$(1
L$(dH3
0[]A\
fff.
AWAVA
AUATL
[]A\A]A^A_
boost::format_error: format generic failure
boost::bad_format_string: format-string is ill-formed
boost::too_few_args: format-string referred to more arguments than were passed
boost::too_many_args: format-string referred to less arguments than were passed
bad lexical cast: source type value could not be interpreted as target
/usr/include/boost/format/alt_sstream_impl.hpp
basic_string::_M_construct null not valid
sanity::debug_p called before sanity::initialize
/usr/include/boost/format/format_implementation.hpp
item.pad_scheme_ & format_item_t::tabulation
bound_.size()==0 || num_args_ == static_cast<int>(bound_.size())
/usr/include/boost/format/feed_args.hpp
i+(tmp_size-i)+(std::max)(d,(std::streamsize)0) == static_cast<size_type>(w)
res.size() == static_cast<size_type>(w)
/usr/include/boost/format/parsing.hpp
static_cast<unsigned int>(cur_item) < items_.size() || cur_item==0
/usr/include/boost/format/internals.hpp
!(fmtstate_.flags_ &(std::ios_base::adjustfield ^std::ios_base::left))
----- begin '%s' (in %s, at %s:%d)
%s%s-----   end '%s' (in %s, at %s:%d)
fatal: formatter failed on %s:%d: %s
basic_string::at: __n (which is %zu) >= this->size() (which is %zu)
ignoring request to give last gasp; already in process of dumping
saving current work set: %i items
ignoring error trigged by saving work set to debug log
sanity::generic_failure occured before sanity::initialize
Encountered an error while musing upon the following:
%s:%d: detected %s error, '%s' violated
src/boost/circular_buffer_base.hpp
wrote debugging log to %s
if reporting a bug, please include this file
discarding debug log, because I have nowhere to write it
(maybe you want -v -v or --dump?)
failed to create directory for %s
failed to write debugging log to %s
%s: __pos (which is %zu) > this->size() (which is %zu)
src/sanity.cc:407: I(imp->musings.back() == musing)
I(imp->musings.back() == musing)
sanity::index_failure occured before sanity::initialize
%s:%d: index '%s' = %d overflowed vector '%s' with size %d
----- begin '%s' (in %s, at %s:%d)
-----   end '%s' (in %s, at %s:%d)
network
system
general
invalid error type
true
false
vector<bool>::_M_fill_insert
basic_string::append
vector::_M_fill_insert
cur_item == num_items
src/sanity.cc
Current work set: %i items
finished saving work set
contents of work set:
<caught logic_error>
<caught informative_failure>
misuse: 
src/sanity.cc:158: I(imp)
m_buff != 0
m_it != 0
src/sanity.cc:197: I(imp)
src/sanity.cc:228: I(imp)
src/sanity.cc:235: I(imp)
setting dump path to %s
src/sanity.cc:396: I(imp)
system_flavour
started up on %s
cmdline_string
command line: %s
string(lc_all)
set locale: LC_ALL=%s
.exe
basic_string::erase
src/sanity.cc:404: I(imp)
:memory:
boost::basic_format<Ch, Tr, Alloc>::string_type boost::basic_format<Ch, Tr, Alloc>::str() const [with Ch = char; Tr = std::char_traits<char>; Alloc = std::allocator<char>; boost::basic_format<Ch, Tr, Alloc>::string_type = std::__cxx11::basic_string<char>]
void boost::io::detail::put(T, const boost::io::detail::format_item<Ch, Tr, Alloc>&, typename boost::basic_format<Ch, Tr, Alloc>::string_type&, typename boost::basic_format<Ch, Tr, Alloc>::internal_streambuf_t&, boost::io::detail::locale_t*) [with Ch = char; Tr = std::char_traits<char>; Alloc = std::allocator<char>; T = const boost::io::detail::put_holder<char, std::char_traits<char> >&; typename boost::basic_format<Ch, Tr, Alloc>::string_type = std::__cxx11::basic_string<char>; typename boost::basic_format<Ch, Tr, Alloc>::internal_streambuf_t = boost::io::basic_altstringbuf<char, std::char_traits<char>, std::allocator<char> >; boost::io::detail::locale_t = std::locale]
boost::basic_format<Ch, Tr, Alloc>& boost::basic_format<Ch, Tr, Alloc>::clear() [with Ch = char; Tr = std::char_traits<char>; Alloc = std::allocator<char>]
void boost::io::detail::format_item<Ch, Tr, Alloc>::compute_states() [with Ch = char; Tr = std::char_traits<char>; Alloc = std::allocator<char>]
boost::basic_format<Ch, Tr, Alloc>& boost::basic_format<Ch, Tr, Alloc>::parse(const string_type&) [with Ch = char; Tr = std::char_traits<char>; Alloc = std::allocator<char>; boost::basic_format<Ch, Tr, Alloc>::string_type = std::__cxx11::basic_string<char>]
boost::io::basic_altstringbuf<Ch, Tr, Alloc>::pos_type boost::io::basic_altstringbuf<Ch, Tr, Alloc>::seekpos(boost::io::basic_altstringbuf<Ch, Tr, Alloc>::pos_type, std::ios_base::openmode) [with Ch = char; Tr = std::char_traits<char>; Alloc = std::allocator<char>; boost::io::basic_altstringbuf<Ch, Tr, Alloc>::pos_type = std::fpos<__mbstate_t>; std::ios_base::openmode = std::_Ios_Openmode]
boost::cb_details::cb_iterator<Buff, Traits>::reference boost::cb_details::cb_iterator<Buff, Traits>::operator*() const [with Buff = boost::circular_buffer<char>; Traits = boost::cb_details::cb_nonconst_traits<std::allocator<char> >; boost::cb_details::cb_iterator<Buff, Traits>::reference = char&]
boost::cb_details::cb_iterator<Buff, Traits>::difference_type boost::cb_details::cb_iterator<Buff, Traits>::operator-(const boost::cb_details::cb_iterator<Buff, Traits>&) const [with Buff = boost::circular_buffer<char>; Traits = boost::cb_details::cb_nonconst_traits<std::allocator<char> >; boost::cb_details::cb_iterator<Buff, Traits>::difference_type = long int]
virtual void sanity::initialize(int, char**, const char*)
N5boost16base_from_memberINS_10shared_ptrINS_2io18basic_altstringbufIcSt11char_traitsIcESaIcEEEEELi0EEE
10MusingBase
N5boost2io22basic_oaltstringstreamIcSt11char_traitsIcESaIcEE5No_OpE
19recoverable_failure
21unrecoverable_failure
6sanity
7MusingI
N5boost9exceptionE
N5boost16exception_detail10clone_baseE
N5boost6detail15sp_counted_baseE
N5boost2io12format_errorE
N5boost2io17bad_format_stringE
N5boost2io12too_few_argsE
N5boost2io13too_many_argsE
N5boost16bad_lexical_castE
6MusingINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
N5boost2io18basic_altstringbufIcSt11char_traitsIcESaIcEEE
N5boost16exception_detail19error_info_injectorINS_2io17bad_format_stringEEE
N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_2io17bad_format_stringEEEEE
N5boost16exception_detail19error_info_injectorINS_2io12too_few_argsEEE
N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_2io12too_few_argsEEEEE
N5boost16exception_detail19error_info_injectorINS_16bad_lexical_castEEE
N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_16bad_lexical_castEEEEE
N5boost16exception_detail19error_info_injectorINS_2io13too_many_argsEEE
N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_2io13too_many_argsEEEEE
N5boost2io22basic_oaltstringstreamIcSt11char_traitsIcESaIcEEE
N5boost6detail18sp_counted_impl_pdIPNS_2io18basic_altstringbufIcSt11char_traitsIcESaIcEEENS2_22basic_oaltstringstreamIcS5_S6_E5No_OpEEE
basic_string::substr
ascii
8859
utf-8
utf_8
\ No newline at end of file
default
binary
mtn:manual_merge
mtn:encoding
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-.@+_
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-
0123456789abcdef
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/= 
bad character '%c' in symbol '%s'
E(val().size() == constants::idlen_bytes)
bad character '%c' in cert name '%s'
bad character '%c' in key name '%s'
hex encoded ID '%s' size != %d
E(val().size() == constants::idlen)
bad character '%c' in id name '%s'
invalid key length of %d bytes
E(val().size() == constants::netsync_session_key_length_in_bytes)
invalid hmac length of %d bytes
E(val().size() == constants::netsync_hmac_value_length_in_bytes)
src/vocab_terms.hh:49: I(netsync_session_key_tab_active > 0)
I(netsync_session_key_tab_active > 0)
src/vocab_terms.hh:52: I(netsync_hmac_value_tab_active > 0)
I(netsync_hmac_value_tab_active > 0)
src/vocab_terms.hh:41: I(rsa_sha1_signature_tab_active > 0)
I(rsa_sha1_signature_tab_active > 0)
src/vocab_terms.hh:40: I(old_arc4_rsa_priv_key_tab_active > 0)
I(old_arc4_rsa_priv_key_tab_active > 0)
src/vocab_terms.hh:39: I(rsa_priv_key_tab_active > 0)
I(rsa_priv_key_tab_active > 0)
src/vocab_terms.hh:42: I(rsa_oaep_sha_data_tab_active > 0)
I(rsa_oaep_sha_data_tab_active > 0)
src/vocab_terms.hh:37: I(external_key_name_tab_active > 0)
I(external_key_name_tab_active > 0)
src/vocab_terms.hh:34: I(var_value_tab_active > 0)
src/vocab_terms.hh:25: I(cert_name_tab_active > 0)
src/vocab_terms.hh:38: I(rsa_pub_key_tab_active > 0)
src/vocab_terms.hh:23: I(branch_name_tab_active > 0)
src/vocab_terms.hh:55: I(attr_value_tab_active > 0)
src/vocab_terms.hh:32: I(var_domain_tab_active > 0)
src/vocab_terms.hh:26: I(cert_value_tab_active > 0)
src/vocab_terms.hh:21: I(inodeprint_tab_active > 0)
src/vocab_terms.hh:20: I(delta_tab_active > 0)
src/vocab_terms.hh:18: I(id_tab_active > 0)
src/vocab_terms.hh:69: I(merkle_tab_active > 0)
src/vocab_terms.hh:68: I(prefix_tab_active > 0)
src/vocab_terms.hh:16: I(symbol_tab_active > 0)
src/vocab_terms.hh:19: I(data_tab_active > 0)
src/vocab_terms.hh:15: I(utf8_tab_active > 0)
src/vocab_terms.hh:54: I(attr_key_tab_active > 0)
src/vocab_terms.hh:36: I(key_name_tab_active > 0)
src/vocab_terms.hh:33: I(var_name_tab_active > 0)
src/vocab_terms.hh:14: I(external_tab_active > 0)
src/vocab.cc:157: I(counter >= 1)
00000000000000000000000000000000%08x
src/vocab.cc
E(is_alnum(*i) || *i == '_')
invalid ID '%s'
E(pos == string::npos)
bad character '%c' in '%s'
E(is_xdigit(*i))
src/vocab_terms.hh
I(var_value_tab_active > 0)
I(cert_name_tab_active > 0)
I(rsa_pub_key_tab_active > 0)
I(branch_name_tab_active > 0)
I(attr_value_tab_active > 0)
I(var_domain_tab_active > 0)
I(cert_value_tab_active > 0)
I(inodeprint_tab_active > 0)
I(delta_tab_active > 0)
I(id_tab_active > 0)
I(merkle_tab_active > 0)
I(prefix_tab_active > 0)
I(symbol_tab_active > 0)
I(data_tab_active > 0)
I(utf8_tab_active > 0)
I(attr_key_tab_active > 0)
I(key_name_tab_active > 0)
I(var_name_tab_active > 0)
I(external_tab_active > 0)
I(counter >= 1)
N5boost6detail17sp_counted_impl_pINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE
_src/charset.cc:35: I(locale_charset_name != NULL)
I(locale_charset_name != NULL)
leading / trailing hyphen-minus character
invalid length (output must be between 1 and 63 chars)
failed to convert string from %s to %s: '%s'
src/charset.cc:223: I(utf8_validate(utf))
converting %d bytes from IDNA ACE to UTF-8
error converting %d UTF-8 bytes to IDNA ACE: %s
E(res == IDNA_SUCCESS || res == IDNA_NO_ACE_PREFIX)
converting %d bytes from UTF-8 to IDNA ACE
src/charset.cc
stringprep error
punycode error
non-LDH characters
no ace prefix
roundtrip verify error
contains ACE prefix ("xn--")
iconv error
malloc error
unknown error
//TRANSLIT
E(converted != NULL)
ansi_x3.4
UTF-8
I(utf8_validate(utf))
E(res == IDNA_SUCCESS)
src/paths.cc:477: I(fully_normalized_path(path))
I(fully_normalized_path(path))
src/paths.cc:478: I(in_bookkeeping_dir(path))
E(fully_normalized_path(path))
bookkeeping path is not in bookkeeping directory
src/paths.cc:587: I(sep != string::npos)
src/paths.cc:618: I(sep < s.size() - 1)
src/paths.cc:789: I(!is_absolute_somewhere(to_append))
I(!is_absolute_somewhere(to_append))
ignoring bookkeeping directory '%s'
skipping directory '%s' with unsupported name
skipping file '%s' with unsupported name
src/paths.cc:39: I(!very_uninitialized)
src/paths.cc:52: I(initialized)
src/paths.cc:46: I(initialized)
src/paths.cc:742: I(!to_append.empty())
src/paths.cc:752: I(!to_append.empty())
src/paths.cc:761: I(!to_append.empty())
src/paths.cc:770: I(!to_append.empty())
src/paths.cc:779: I(!to_append.empty())
src/paths.cc:307: I(!is_absolute_here(inT))
E(fully_normalized_path(normalized))
src/paths.cc:440: I(utf8_validate(utf8(path, origin::internal)))
I(utf8_validate(utf8(path, origin::internal)))
path '%s' is in bookkeeping dir
E(!in_bookkeeping_dir(normalized))
src/paths.cc:452: I(is_valid_internal(data))
src/paths.cc:472: I(is_valid_internal(data))
src/paths.cc:38: I(may_be_initialized || !initialized)
I(may_be_initialized || !initialized)
src/paths.cc:799: I(!is_absolute_here(to_append))
I(!is_absolute_here(to_append))
current directory '%s' is not below root '%s'
searching for '%s' directory with root '%s'
'%s' not found in '%s' with '%s' removed
problems with '%s' (missing '.' or '..')
problems with '%s' (cannot check for '.' or '..')
src/paths.cc:726: I(!to_append.empty())
src/paths.cc:730: I(!is_absolute_somewhere(s) && !in_bookkeeping_dir(s))
I(!is_absolute_somewhere(s) && !in_bookkeeping_dir(s))
src/paths.cc:411: I(utf8_validate(utf8(data, origin::internal)) && !has_bad_component_chars(data) && data != "." && data != "..")
I(utf8_validate(utf8(data, origin::internal)) && !has_bad_component_chars(data) && data != "." && data != "..")
src/paths.cc:420: I(utf8_validate(utf8(data, origin::internal)) && !has_bad_component_chars(data) && data != "." && data != "..")
limiting search for workspace to %s
search root '%s' is not a directory
search root '%s' does not exist
src/paths.cc:402: I(!has_bad_component_chars(data) && data != "." && data != "..")
I(!has_bad_component_chars(data) && data != "." && data != "..")
src/paths.cc
I(in_bookkeeping_dir(path))
path is not normalized
E(in_bookkeeping_dir(path))
I(sep != string::npos)
I(sep < s.size() - 1)
base: %s, other: %s
src/paths.cc:790: I(!empty())
I(!very_uninitialized)
src/paths.cc:40: I(!used)
I(initialized)
I(!to_append.empty())
src/paths.cc:753: I(!empty())
src/paths.cc:762: I(!empty())
src/paths.cc:771: I(!empty())
src/paths.cc:780: I(!empty())
I(!is_absolute_here(inT))
E(is_valid_internal(path))
E(!is_absolute_here(path))
E(false)
absolute path '%s' is invalid
I(is_valid_internal(data))
invalid utf8
E(utf8_validate(path))
invalid path ''
E(!path().empty())
initial abs path is: %s
src/paths.cc:798: I(!empty())
'%s' is not a directory
_MTN
working root is '%s'
initial relative path is '%s'
file_path::file_path(file_path::source_type, const utf8&, bool)
file_path::file_path(file_path::source_type, const string&, bool)
path_component::path_component(const char*)
path_component::path_component(const string&, origin::type)
path_component::path_component(const utf8&)
std::__cxx11::string normalize_path(const string&)
6MusingIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
6MusingIK4utf8E
N5boost6detail17sp_counted_impl_pI11system_pathEE
N5boost6detail17sp_counted_impl_pI16bookkeeping_pathEE
N5boost6detail17sp_counted_impl_pI9file_pathEE
monotone_parse_basic_io_for_lua
input stream ended in hex string
non-hex character in hex string
hex string did not end with ']'
input stream ended in string
unrecognized character escape
string did not end with '"'
bad input to parse_basic_io
src/luaext_parse_basic_io.cc
E(!res.empty())
values
format_version
content_mark
src/luaext_guess_binary.cc
src/luaext_guess_binary.cc:36: I(file.gcount() <= static_cast<int>(sizeof tmpbuf))
I(file.gcount() <= static_cast<int>(sizeof tmpbuf))
FILE*
15dirent_consumer
*N12_GLOBAL__N_111build_tableE
Unknown error.
lua: extracted string [CLASSIFIED]
stack top is not >= count in pop
%s called with an invalid parameter
lua error while loading rcfile '%s'
lua failure: %s; stack = %s
src/lua.cc
Lua::ok(): failed
lua stack: %s
lua stack limit '%d' reached
isstring() in extract_str
lua: extracted string = %s
isnumber() in extract_int
lua: extracted int = %i
isnumber() in extract_double
lua: extracted double = %i
isboolean() in extract_bool
lua: extracted bool = %i
istable() in begin
stack top > 0 in get
istable() in get
isfunction() in get_fn
istable() in get_tab
isstring() in get_str
isnumber() in get_num
isboolean() in get_bool
istable() in next
src/lua.cc:568: I(st)
src/lua.cc:579: I(st)
Include
E(path)
loading lua hook %s
includedir
includedirpattern
regex
search
gettext
directory '%s' does not exist
opening rcfile '%s'
E(res)
'%s' is ok
IncludeDir
E(pathstr)
IncludeDirPattern
E(pathstr && pattern)
*N12_GLOBAL__N_118ignore_directoriesE
*N12_GLOBAL__N_117record_if_matchesE
XXXXXX
basic_string::replace
0123456789ABCDEFGHJKMNPQRSTUVWYZ
src/botan_pipe_cache.hh:42: I(!pipe)
src/file_io.cc:38: I(get_path_status(path) == path::nonexistent)
I(get_path_status(path) == path::nonexistent)
src/file_io.cc:44: I(get_path_status(path) == path::file)
I(get_path_status(path) == path::file)
src/file_io.cc:50: I(get_path_status(path) == path::directory)
I(get_path_status(path) == path::directory)
could not create directory '%s': it is a file
file '%s' cannot be overwritten as data; it is a directory
file to delete, '%s', is not a file but a directory
file to delete '%s' does not exist
directory to delete, '%s', is not a directory but a file
directory to delete '%s' does not exist
object to delete, '%s', does not exist
directory to delete, '%s', is a file
directory to delete, '%s', does not exist
rename source file '%s' is a directory -- bug in monotone?
rename source file '%s' does not exist
rename target '%s' already exists
rename source dir '%s' is a file -- bug in monotone?
rename source dir '%s' does not exist
rename source path '%s' does not exist
file '%s' cannot be read as data; it is a directory
cannot open file '%s' for reading
cannot read standard input multiple times
no such file or directory: '%s'
'%s' is neither a file nor a directory
src/botan_pipe_cache.hh:82: I(global_pipe_cleanup_object)
src/botan_pipe_cache.hh:46: I(pipe)
expected file '%s', but it is a directory.
src/file_io.cc
E(!path_exists(path))
src/botan_pipe_cache.hh
I(!pipe)
E(!directory_exists(p))
E(path_exists(p))
E(path_exists(old_path))
E(file)
E(!have_consumed_stdin)
src/platform-wrapped.hh
SHA-160
I(global_pipe_cleanup_object)
I(pipe)
*Z15directory_emptyRK8any_pathE22directory_empty_helper
*Z15directory_emptyRK8any_pathE29directory_not_empty_exception
18special_file_error
11tree_walker
13fill_path_vecI9file_pathE
src/globish.cc:438: I(*p != META_CC_KET)
src/globish.cc:455: I(*p != META_CC_KET)
after *: looking for '%c' in '%s'
metacharacter after *: doing it the slow way
matching '%s' against '%s': %s
invalid pattern '%s': control character 0x%02x is not allowed
E((widen<unsigned int, char>(*p)) >= ' ')
invalid pattern '%s': un-escaped \ at end
invalid pattern '%s': unmatched '['
invalid pattern '%s': one-element character ranges are not allowed
invalid pattern '%s': endpoints of a character range must be in ascending numeric order
invalid pattern '%s': cannot use non-ASCII characters in classes
E(start < 0x80 && stop < 0x80)
expanding range from %X (%c) to %X (%c)
syntax error in '%s': character classes may not be nested
E((widen<unsigned int, char>(*p)) < 0x80)
invalid pattern '%s': empty character class
invalid pattern '%s': unmatched ']'
invalid pattern '%s': braces nested too deeply
invalid pattern '%s': unmatched '}'
invalid pattern '%s': unmatched '{'
Finding subpattern in '%s'
src/globish.cc
src/globish.cc:397: I(false)
subpattern: '%s' against '%s'
src/globish.cc:437: I(p < pe)
I(*p != META_CC_KET)
src/globish.cc:444: I(p < pe)
src/globish.cc:454: I(p < pe)
src/globish.cc:461: I(p < pe)
matches
does not match
E(p != pat.end())
E(start != stop)
E(start < stop)
E(*p != '[')
E(!in_class.empty())
E(brace_depth < 6)
E(brace_depth > 0)
E(brace_depth == 0)
src/basic_io.cc:172: I(count == 0)
src/basic_io.cc
I(count == 0)
TOK_STRING
TOK_SYMBOL
TOK_HEX
TOK_NONE
TOK_UNKNOWN
parsing a %s at %d:%d:E: %s
full_version_string
src/mtn-sanity.cc
virtual void mtn_sanity::initialize(int, char**, const char*)
10mtn_sanity
inserting duplicate entry into '%s'
fatal: %s
This is almost certainly a bug in monotone.
Please report this error message, the output of '%s version --full',
and a description of what you were doing to '%s'.
This error appears to have been triggered by something in the
database you were using, so please preserve it in case it can
help in finding the bug.
https://code.monotone.ca/p/monotone/issues/
fatal: %s
This is almost certainly a bug in monotone.
Please report this error message, the output of '%s version --full',
and a description of what you were doing to '%s'.
src/ui.cc:102: I(ui.imp->tickers.find(keyname) != ui.imp->tickers.end())
I(ui.imp->tickers.find(keyname) != ui.imp->tickers.end())
src/ui.cc:113: I(ui.imp->tickers.find(keyname) != ui.imp->tickers.end())
erasing nonexistent key from '%s'
src/ui.cc:496: I(!tickline.empty())
src/ui.cc:890: I(text.find('\n') == string::npos)
I(text.find('\n') == string::npos)
src/ui.cc:954: I(curcol <= col)
src/ui.cc:1061: I(names.size() == descriptions.size())
Usage: %s [OPTION...] command [ARG...]
Options specific to '%s %s' (run '%s help' to see global options):
%.0f
%.1f k
%.1f M
%.1f G
%d/%d
call to empty boost::function
src/ui.cc:558: I(imp)
src/ui.cc
src/ui.cc:634: I(imp)
failed to open log file '%s'
E(filestr.is_open())
guess_terminal_width
safe_insert
%a %b %d %H:%M:%S %Y
src/ui.cc:589: I(imp)
src/ui.cc:565: I(imp)
src/ui.cc:577: I(imp)
src/ui.cc:546: I(imp)
src/ui.cc:826: I(imp)
C++ exception of unknown type
error: memory exhausted
class 
src/ui.cc:601: I(imp)
src/ui.cc:84: I(ui.imp)
ui.imp->tickers
src/ui.cc:538: I(imp)
src/ui.cc:101: I(ui.imp)
src/ui.cc:112: I(ui.imp)
src/ui.cc:643: I(imp)
safe_erase
src/ui.cc:90: I(ui.imp)
src/ui.cc:247: I(ui.imp)
tick_title_strings
tick_count_strings
src/ui.cc:460: I(ui.imp)
I(!tickline.empty())
src/ui.cc:390: I(ui.imp)
ticks: 
I(curcol <= col)
St14unary_functionINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEvE
N5boost17bad_function_callE
N6option12option_errorE
11tick_writer
16tick_write_count
14tick_write_dot
16tick_write_stdio
18tick_write_nothing
NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
St9binder1stIN5boost8functionIFvP7optionsNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEE
N6option11binder_onlyI7optionsEE
N5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
Nbad input to automate stdio: unexpected EOF
bad input to automate stdio: expected ':' after string size
bad input to automate stdio: unknown start token '%c'
bad input to automate stdio: expected '%c' token
bad input to automate stdio: command name is missing
src/automate_reader.cc
E(eof_ok || rv > 0)
E(c == ':')
Got string '%s'
E(loc == cmd)
E(cmdline.size() > 0)
/usr/include/boost/smart_ptr/shared_ptr.hpp
px != 0
p == 0 || p != px
missing
Exists: 
; position: 
; count: 
; size: 
Touch: 
Fetch: 
Insert... 
 dropped items: 
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cache_logger_impl; typename boost::detail::sp_member_access<T>::type = cache_logger_impl*]
void boost::shared_ptr<T>::reset(Y*) [with Y = cache_logger_impl; T = cache_logger_impl]
N5boost6detail17sp_counted_impl_pI17cache_logger_implEE
src/commands.cc:230: I(presetter_map)
src/commands.cc:130: I(this != CMD_REF(__root__))
src/commands.cc:138: I(!i.empty())
src/commands.cc:415: I(!name().empty())
src/commands.cc:286: I(remaining.size() == id.size() - 1)
I(remaining.size() == id.size() - 1)
src/commands.cc:311: I(remaining.size() == id.size() - 1)
I(this != CMD_REF(__root__) || !id.empty())
src/commands.cc:377: I(!id.empty())
src/commands.cc:398: I(remaining.size() == id.size() - 1)
src/commands.cc:376: I(this != CMD_REF(__root__) || !id.empty())
src/commands.cc:482: I(id.size() >= 2)
'%s' is ambiguous; possible completions are:
src/commands.cc:515: I(!id.empty())
src/commands.cc
I(presetter_map)
I(this != CMD_REF(__root__))
I(!i.empty())
I(!name().empty())
I(!id.empty())
I(id.size() >= 2)
unknown command '%s'
N8commands7commandE
N8commands9cmdpresetE
src/cmd.cc:304: I(cmd != NULL)
Glob '%s' does not match string '%s'
src/cmd.cc:440: I(app.lua.check_lua_state(st))
src/cmd.cc:443: I(app_p == & app)
call to user command '%s' (lua command: '%s') failed.
src/cmd.cc:111: I(ident.empty() || args.size() >= ident.size() - invisible_length)
src/cmd.cc:114: I(ident[i]().find(args[0]()) == 0)
'--message' and '--message-file' are mutually exclusive
E(!opts.message_given || !opts.msgfile_given)
Commands that aid in scripted execution
Commands that manipulate the database
Commands that aid in program debugging
Commands for information retrieval
Commands to manage keys and certificates
Commands that access the network
Commands for packet reading and writing
Commands for interaction with other version control systems
Commands to manipulate the tree
Commands to manage persistent variables
Commands that deal with the workspace
Displays help about commands and options
Check that a particular glob matches a particular string
Triggers the specified kind of crash
{ N | E | I | double-throw | exception | signal }
Generate a manual page from monotone's command help
'%s' called with an invalid parameter
E(cmd_name && cmd_params && cmd_abstract && cmd_desc && cmd_func)
src/cmd.cc:264: I(!children.empty())
src/cmd.cc:235: I(colabstract > 0)
Note that you can always abbreviate a command name as long as it does not conflict with other names.
To see more details about the commands of a particular group, type 'mtn help <group_name>'.
For information on a specific command, type 'mtn help <command_name> [subcommand_name ...]'.
src/cmd.cc:313: I(ident.size() >= 1)
monotone \- a distributed version control system
[options...] command [arguments...]
monotone is a highly reliable, very customizable distributed version control system that provides lightweight branches, history-sensitive merging and a flexible trust setup. monotone has an easy-to-learn command set and comes with a rich interface for scripting purposes and thorough documentation.
For more information on monotone, visit %s.
The complete documentation, including a tutorial for a quick start with the system, can be found online on %s.
info %s and the documentation on %s
monotone was written originally by Graydon Hoare <graydon@pobox.com> in 2003 and has since then received numerous contributions from many individuals. A complete list of authors can be found in AUTHORS.
Nowadays, monotone is maintained by a collective of enthusiastic programmers, known as the monotone development team.
monotone and this man page is Copyright (c) 2003 \- %s by the monotone development team.
E(app.lua.hook_get_man_page_formatter_command(cmd) && !cmd.empty())
could not execute man page formatter command '%s': %s
no man page formatter command configured
src/cmd.cc:566: I(spoon_exists)
src/cmd.cc:610: I(!"crash: raise returned")
src/cmd.cc:189: I(!process_called)
src/cmd.cc:198: I(cmd->is_leaf() || cmd->is_group())
command '%s' is invalid; it is a group
E(!(cmd->is_group() && cmd->parent() == CMD_REF(__root__)))
no subcommand specified for '%s'
could not match '%s' to a subcommand of '%s'
no arguments allowed
src/cmd.cc
E(args.empty())
I(cmd != NULL)
alias_command
register_command
.SH "
E(g.matches(s))
src/cmd.cc:439: I(st)
I(app_p == & app)
E(ll.ok())
invisible_length
src/cmd.cc:100: I(false)
src/cmd.cc:97: I(false)
src/cmd.cc:94: I(false)
src/cmd.cc:91: I(false)
src/cmd.cc:88: I(false)
src/cmd.cc:85: I(false)
src/cmd.cc:82: I(false)
src/cmd.cc:79: I(false)
src/cmd.cc:76: I(false)
src/cmd.cc:73: I(false)
src/cmd.cc:70: I(false)
src/cmd.cc:67: I(false)
src/cmd.cc:64: I(false)
src/cmd.cc:60: I(false)
__root__
automation
debug
informative
key_and_cert
packet_io
Commands to review revisions
review
tree
Commands defined by the user
command [ARGS...]
help
Shows the program version
glob string
check_glob
crash
manpage
.IP "
.PD 0
E(old_cmd && new_cmd)
I(!children.empty())
I(colabstract > 0)
Command groups:
I(ident.size() >= 1)
Commands in group '%s':
Subcommands of '%s %s':
Syntax specific to '%s %s':
Purpose of group '%s':
Description for '%s %s':
Aliases: %s.
.TH "
" 1 
2015-07-29
monotone 1.1
Name
Synopsis
Description
http://www.monotone.ca
http://www.monotone.ca/docs
Global Options
Commands
command group '%s'
.SS "
See Also
Bugs
Please report bugs to %s.
Authors
Copyright
E(fp != NULL)
There is no spoon.
E(spoon_exists)
I(spoon_exists)
double-throw
std::bad_alloc
std::bad_cast
std::bad_typeid
std::bad_exception
std::exception
std::domain_error
std::invalid_argument
std::length_error
std::out_of_range
std::range_error
std::overflow_error
std::underflow_error
std::logic_error
std::runtime_error
I(!"crash: raise returned")
src/cmd.cc:128: I(cmd)
I(!process_called)
E(!args.empty())
executing command '%s'
void commands::remove_command_name_from_args(const command_id&, args_vector&, size_t)
N8commands12cmd___root__E
N8commands14cmd_automationE
N8commands12cmd_databaseE
N8commands9cmd_debugE
N8commands15cmd_informativeE
N8commands16cmd_key_and_certE
N8commands11cmd_networkE
N8commands13cmd_packet_ioE
N8commands7cmd_vcsE
N8commands10cmd_reviewE
N8commands8cmd_treeE
N8commands13cmd_variablesE
N8commands13cmd_workspaceE
N8commands8cmd_userE
6MusingIKSt6vectorI4utf8SaIS1_EEE
6MusingISt6vectorI8arg_typeSaIS1_EEE
6MusingImE
N8commands7cmd_luaE
N8commands8cmd_helpE
5usage
N8commands11cmd_versionE
N8commands14cmd_check_globE
N8commands9cmd_crashE
N8commands17cmdpreset_manpageE
N8commands11cmd_manpageE
Opens an 'automate stdio' connection to a remote server
Executes COMMAND on a remote server
This will push all branches that match the pattern given in PATTERN to the netsync server at the address ADDRESS.
Pushes branches to a netsync server
[URI]
[ADDRESS[:PORTNUMBER] [PATTERN ...]]
This pulls all branches that match the pattern given in PATTERN from the netsync server at the address ADDRESS.
Pulls branches from a netsync server
This synchronizes branches that match the pattern given in PATTERN with the netsync server at the address ADDRESS.
Synchronizes branches with a netsync server
If a revision is given, that's the one that will be checked out.  Otherwise, it will be the head of the branch supplied.  If no directory is given, the branch name will be used as directory
Checks out a revision from a remote database into a directory
URI [DIRECTORY]
HOST[:PORTNUMBER] BRANCH [DIRECTORY]
Serves the database to connecting clients
failed to create pid file '%s'
would receive %d revisions, %d certs, and at least %d keys
would receive %d revisions, %d certs, and %d keys
would send %d certs and %d keys
cannot use '--exclude' in URI mode
you must specify an unambiguous branch to clone
E(!include_pattern().empty() && !include_pattern.contains_meta_chars())
src/cmd_netsync.cc:797: I(!app.opts.branch().empty())
clone destination directory '%s' already exists
bookkeeping directory already exists in '%s'
doing anonymous pull; use -kKEYNAME if you need authentication
branch '%s' has multiple heads:
choose one with '%s clone -r<id> URI'
branch '%s' has multiple heads
revision %s is not a member of branch '%s'
E(project.revision_is_in_branch(ident, app.opts.branch))
checking out revision %s to directory %s
the '--branch' option is only valid with an URI to clone
E(url_arg || (host_branch_arg && !app.opts.branch_given))
no database given; assuming '%s' database. This means that
we can't verify the server key, because we have no record of
what it should be.
vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)
src/automate_ostream_demuxed.hh:68: I(false)
src/automate_ostream_demuxed.hh
%s: remote header: 
[URI]
[ADDRESS[:PORTNUMBER]]
remote_stdio
COMMAND [ARGS]
remote
pull
clone
pid file '%s' already exists
src/cmd_netsync.cc
E(file.is_open())
would send %d revisions:
would send %d revisions
%9d in branch '%s'
E(!app.opts.exclude_given)
I(!app.opts.branch().empty())
branch '%s' is empty
E(!heads.empty())
vector::_M_range_insert
E(!opts.exclude_given)
wrong argument count
E(args.size() >= 1)
stdio input: %s
received remote error code %d
E(os.get_error() == 0)
%s: remote warning: 
%s: remote error: 
%s: remote message: 
estimate
receive_cert
receive_key
receive_revision
send_branch
send_cert
send_key
send_revision
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = connection_counts; typename boost::detail::sp_member_access<T>::type = connection_counts*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = netsync_connection_info; typename boost::detail::sp_member_access<T>::type = netsync_connection_info*]
N8commands21automate_remote_stdioE
24basic_automate_streambufIcSt11char_traitsIcEE
22basic_automate_ostreamIcSt11char_traitsIcEE
N8commands15automate_remoteE
32basic_automate_streambuf_demuxedIcSt11char_traitsIcEE
30basic_automate_ostream_demuxedIcSt11char_traitsIcEE
N8commands8cmd_pushE
N8commands13automate_pushE
N8commands8cmd_pullE
N8commands13automate_pullE
N8commands8cmd_syncE
N8commands13automate_syncE
N8commands9cmd_cloneE
N8commands9cmd_serveE
This command is used to query information from the database.  It shows database objects, or the current workspace manifest, or known, unknown, intentionally ignored, missing, or changed-state files.
Lists certificates attached to a revision
Lists duplicate files in the specified revision. If no revision is specified, use the workspace
Lists keys that match a pattern
Lists branches in the database that match a pattern
Lists the current epoch of branches that match a pattern
Lists all tags in the database
Lists variables in the whole database or a domain
Lists known workspaces of a specified database
Lists managed databases and their known workspaces
Lists workspace files that belong to the current branch
Lists workspace files that are unknown in the current branch
Lists workspace files that are ignored in the current branch
Lists files that belong to the branch but are not in the workspace
Lists files that have changed with respect to the current revision
Lists all keys in the keystore
Prints all certificates attached to a revision
ignoring missing workspace '%s'
ignoring workspace '%s', expected database %s, but has %s configured in _MTN/options
no default database location configured
E(app.lua.hook_get_default_database_locations(search_paths))
could not query default database glob
E(app.lua.hook_get_default_database_glob(file_matcher))
E(!(!args.empty() && paths.empty()))
all arguments given were bookkeeping paths; aborting
fetching nonexistent entry from '%s'
E(app.opts.revision.size() <= 1)
no revision %s found in database
src/roster.hh:141: I(static_cast<bool>(f))
Some key names refer to multiple keys
no public key %s found in database
Key   : %s
Sig   : %s
Name  : %s
Value : %s
src/cmd_list.cc:57: I(false)
src/cmd_list.cc
Shows database objects
REVID
duplicates
[PATTERN]
[BRANCH [...]]
epochs
tags
[DOMAIN]
vars
databases
[PATH]
[PATH...]
no known valid workspaces
%s (in '%s')
<no branch set>
ignoring file '%s'
%s (in %s):
ignoring database '%s'
no epoch for branch '%s'
E(j != epochs.end())
keystore
ignored bookkeeping path '%s'
src/cmd.hh
safe_get
more than one revision given
app.opts.revision
E(db.revision_exists(rev_id))
src/roster.hh
I(static_cast<bool>(f))
no keys found
no keys found matching '%s'
[public keys]
(*) - only in '%s/'
[private keys]
Duplicate Key: %s
   (*)
no arguments needed
      : %s
<binary data>
untrusted
E(args.size() == 1)
E(db.revision_exists(rid))
local_name
public_location
private_location
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = cset; typename boost::detail::sp_dereference<T>::type = cset&]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const roster_t; typename boost::detail::sp_dereference<T>::type = const roster_t&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = file_node; typename boost::detail::sp_member_access<T>::type = file_node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const node; typename boost::detail::sp_member_access<T>::type = const node*]
4node
N8commands8cmd_listE
N8commands9cmd_certsE
N8commands14cmd_duplicatesE
N8commands8cmd_keysE
N8commands12cmd_branchesE
N8commands10cmd_epochsE
N8commands8cmd_tagsE
N8commands8cmd_varsE
N8commands14cmd_workspacesE
N8commands13cmd_databasesE
13fill_path_vecI11system_pathE
N8commands9cmd_knownE
N8commands17cmdpreset_unknownE
N8commands11cmd_unknownE
N8commands17cmdpreset_ignoredE
N8commands11cmd_ignoredE
N8commands11cmd_missingE
N8commands11cmd_changedE
N8commands13automate_keysE
N8commands14automate_certsE
no packets found in given files
no packets found in given file
Store the public key in the database
Load the given packets into the database
If no files are provided, the standard input is used.
public key '%s' does not exist
src/cmd_packet.cc
no packets found on stdin
E(count != 0)
read %d packets
read %d packet
KEY-PACKET-DATA
put_public_key
Prints a public key packet
KEY_NAME_OR_HASH
pubkey
get_public_key
Prints a private key packet
privkey
read_packets
Reads packets from files
[FILE1 [FILE2 [...]]]
read
E(exists)
19key_packet_consumer
15packet_consumer
*N12_GLOBAL__N_120key_packet_db_writerE
*N12_GLOBAL__N_116packet_db_writerE
N8commands23automate_put_public_keyE
N8commands10cmd_pubkeyE
N8commands23automate_get_public_keyE
N8commands11cmd_privkeyE
N8commands21automate_read_packetsE
N8commands8cmd_readE
you already have a key named '%s'
E(!keys.key_pair_exists(name))
there is another key named '%s'
E(!db.public_key_exists(name))
Drops a public and/or private key
Changes the passphrase of a private RSA key
Exports a private key for use with ssh-agent
Adds a private key to ssh-agent
Creates a certificate with the given name and value on each revision that matches the given selector
Creates a certificate for a revision or set of revisions
The current settings are used to run the test.
Tests whether a hypothetical certificate would be trusted
REVISION NAME VALUE SIGNER1 [SIGNER2 [...]]
Puts a symbolic tag certificate on a revision
Notes the results of running a test on a revision
REV (pass|fail|true|false|yes|no|1|0)
Approves a particular revision
Suspends a particular revision
Comments on a particular revision
need '--branch' argument for approval
need '--branch' argument to suspend
E(app.lua.hook_edit_comment(external(""), comment_external))
E(comment().find_first_not_of("\n\r\t ") != string::npos)
dropping public key %s from database
dropping key pair %s from keystore
public or private key '%s' does not exist in keystore or database
public or private key '%s' does not exist in keystore, and no database was specified
if a cert on: %s
with key: %s
and value: %s
was signed by: %s
it would be: %s
src/cmd_key_cert.cc
E(args.size() == 2)
Generates an RSA key-pair
KEY_NAME
genkey
KEY_NAME PASSPHRASE
generate_key
dropkey
Drops a public key
drop_public_key
[FILENAME]
ssh_agent_export
ssh_agent_add
SELECTOR CERTNAME [CERTVAL]
REVISION TAGNAME
testresult
suspend
REVISION [COMMENT]
passphrase changed
E(!app.opts.branch().empty())
edit comment failed
empty comment
E(key_deleted)
UNtrusted
N8commands10cmd_genkeyE
N8commands21automate_generate_keyE
N8commands11cmd_dropkeyE
N8commands24automate_drop_public_keyE
N8commands14cmd_passphraseE
N8commands20cmd_ssh_agent_exportE
N8commands17cmd_ssh_agent_addE
N8commands8cmd_certE
N8commands11cmd_trustedE
N8commands7cmd_tagE
N8commands14cmd_testresultE
N8commands11cmd_approveE
N8commands11cmd_suspendE
N8commands11cmd_commentE
src/roster.hh:157: I(static_cast<bool>(f))
%s and %s are the same revision, aborting
%s is already an ancestor of %s
E(!is_ancestor(db, left, right))
E(!is_ancestor(db, right, left))
please specify a branch, with '--branch=BRANCH'
branch '%s' is currently merged:
branch '%s' is currently unmerged:
src/cmd_merging.cc:1535: I(i == parents.end())
src/cmd_merging.cc:1555: I(!null_id(rid))
This command modifies your workspace to be based off of a different revision, preserving uncommitted changes as it does so.  If a revision is given, update the workspace to that revision.  If not, update the workspace to the head of the branch.
Merges unmerged heads of a branch
Merges from one branch to another asymmetrically
Merges one branch into a subdirectory in another branch
Merges OTHER-REVISION into the current workspace's base revision, and update the current workspace with the result.  There can be no pending changes in the current workspace.  Both OTHER-REVISION and the workspace's base revision will be recorded as parents on commit.  The workspace's selected branch is not changed.
Merges a revision into the current workspace's base revision
The results of the merge are placed on the branch specified by DEST-BRANCH.
Merges two explicitly given revisions
LEFT-REVISION RIGHT-REVISION DEST-BRANCH
The conflicts are calculated based on the two revisions given in the REV parameters.
Shows what conflicts need resolution between two revisions
If no arguments are given, LEFT_REVID and RIGHT_REVID default to the first two heads that would be chosen by the 'merge' command.
Shows the conflicts between two revisions
If no arguments are given, LEFT_REVID and RIGHT_REVID default to the first two heads that would be chosen by the 'merge' command. If '--conflicts-file' is not given, '%s' is used.
Store the conflicts from merging two revisions
Prints the results of the internal line merger, given two child revisions and file names
LEFT_REVID LEFT_FILENAME RIGHT_REVID RIGHT_FILENAME
This command takes changes made at any point in history, and edits your current workspace to include those changes.  The end result is identical to 'mtn diff -r FROM -r TO | patch -p0', except that this command uses monotone's merger, and thus intelligently handles renames, conflicts, and so on.
If one revision is given, applies the changes made in that revision compared to its parent.
If two revisions are given, applies the changes made to get from the first revision to the second.
Applies changes made at arbitrary places in history
Shows unmerged head revisions of a branch
If no REVID is given, the workspace is used.
Dumps the roster associated with a given identifier
src/cmd_merging.cc:463: I(heads.size() >= 2)
src/cmd_merging.cc:501: I(!ancestors.empty())
branch '%s' has only 1 head; must be at least 2 for conflicts
calculating best pair of heads to merge next
note: branch '%s' still has %d heads; run merge again
this command can only be used in a single-parent workspace
this workspace is a new project; cannot update
cannot determine branch for update
your request matches no descendents of the current revision.
In fact, it doesn't even match the current revision.
Maybe you want something like '--revision=h:%s'
choose one with '%s update -r<id>'
multiple update candidates remain after selection
src/cmd_merging.cc:249: I(!null_id(chosen_rid))
target revision is not in current branch
target revision is in multiple branches:%s
Try again with explicit '--branch'
target revision not in any branch.
Next commit will use branch '%s'
src/cmd_merging.cc:335: I(result.is_clean())
switched branch; next commit will use branch '%s'
at most one revision selector may be specified
'%s' can only be used in a workspace with no pending changes
E(parent_roster(parents.begin()) == *working_roster)
workspace is already at revision %s
revision %s is already an ancestor of your workspace
E(!is_ancestor(db, right_id, left_id))
revision %s is a descendant of the workspace parent,
did you mean 'mtn update -r %s'?
E(!is_ancestor(db, left_id, right_id))
src/cmd_merging.cc:884: I(merge_result.is_clean())
updated to result of merge
 [left] %s
[right] %s
revision %s is a merge.
To apply the changes relative to one of its parents, use:
  %s pluck -r PARENT -r %s
src/cmd_merging.cc:1420: I(result.is_clean())
applied changes from %s
             through %s
applied partial changes from %s
                     through %s
E(cm.attempt_auto_merge(ancestor_path, left_path, right_path, ancestor_fid, left_n->content, right_n->content, left_data, right_data, merge_data))
branch '%s' is up-to-date with respect to branch '%s'
no merge necessary; putting %s in branch '%s'
Path '%s' not found in destination tree.
propagate from branch '%s' (head %s)
            to branch '%s' (head %s)
%s is an ancestor of %s; no merge is needed.
%d conflicts with supported resolutions.
%d conflict with supported resolutions.
warning: %d conflicts with no supported resolutions.
warning: %d conflict with no supported resolutions.
conflicts file must be under '_MTN'
child->attrs
src/cmd_merging.cc
 of '
and '
[left]  %s
[right] %s
[merged] %s
to branch '
E(!(left == right))
explicit merge
I(i == parents.end())
I(!null_id(rid))
Updates the workspace
SOURCE-BRANCH DEST-BRANCH
propagate
SOURCE-BRANCH DEST-BRANCH DIR
OTHER-REVISION
merge_into_workspace
explicit_merge
REV REV
show_conflicts
[LEFT_REVID RIGHT_REVID]
_MTN/conflicts
file_merge
pluck
heads
[REVID]
get_roster
ancestor_roster
left_roster
right_roster
ancestor_rid
left_rid
right_rid
left_with_attrs
right_with_attrs
ancestor_markings
left_markings
right_markings
left_uncommon_ancestors
right_uncommon_ancestors
I(heads.size() >= 2)
heads_for_ancestor
I(!ancestors.empty())
E(heads.size() >= 2)
branch '%s' is already merged
%d heads on branch '%s'
%d head on branch '%s'
merge %d / %d:
E(parents.size() == 1)
E(!null_id(old_rid))
updating along branch '%s'
E(!candidates.empty())
multiple update candidates:
I(!null_id(chosen_rid))
already up to date at %s
selected update target %s
using existing branch %s
switching to branch '%s'
*old_roster
*working_roster
chosen_roster
I(result.is_clean())
updated to base revision %s
E(!(left_id == right_id))
merge_result
I(merge_result.is_clean())
no changes to apply
E(!(from_rid == to_rid))
*from_roster
from_to_to
from_to_to_excluded
no changes to be applied
E(!from_to_to.empty())
*to_roster
no changes were applied
E(!update.empty())
applied changes to workspace
E(args.size() == 4)
internal line merger failed
E(src_heads.size() != 0)
branch '%s' is not merged
E(src_heads.size() == 1)
E(dst_heads.size() != 0)
E(dst_heads.size() == 1)
no action taken
propagating %s -> %s
E(right_roster.has_node(dir))
tree merge_into_dir
[left]     %s
[right]    %s
0 conflicts
[ancestor] %s
stored in '%s'
virtual void commands::cmd_pluck::exec(app_state&, const command_id&, const args_vector&) const
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const file_node; typename boost::detail::sp_member_access<T>::type = const file_node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const roster_t; typename boost::detail::sp_member_access<T>::type = const roster_t*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const marking_map; typename boost::detail::sp_dereference<T>::type = const marking_map&]
virtual void commands::cmd_merge_into_workspace::exec(app_state&, const command_id&, const args_vector&) const
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = dir_node; typename boost::detail::sp_member_access<T>::type = dir_node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = marking; typename boost::detail::sp_member_access<T>::type = marking*]
void perform_merge_into_dir(app_state&, const command_id&, const args_vector&)
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = roster_t; typename boost::detail::sp_dereference<T>::type = roster_t&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = node; typename boost::detail::sp_member_access<T>::type = node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const node; typename boost::detail::sp_member_access<T>::type = const node*]
void three_way_merge(const revision_id&, const roster_t&, const revision_id&, const roster_t&, const revision_id&, const roster_t&, roster_merge_result&, marking_map&, marking_map&)
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const roster_t; typename boost::detail::sp_dereference<T>::type = const roster_t&]
void update(app_state&, const args_vector&)
6MusingIK8roster_tE
6MusingIK8revisionI2idEE
6MusingI8roster_tE
6MusingI11marking_mapE
N8commands10cmd_updateE
N8commands15automate_updateE
N8commands9cmd_mergeE
6MusingI9file_pathE
N8commands13cmd_propagateE
N8commands18cmd_merge_into_dirE
N8commands24cmd_merge_into_workspaceE
6MusingI19roster_merge_resultE
N8commands18cmd_explicit_mergeE
N8commands18cmd_show_conflictsE
N8commands23automate_show_conflictsE
N8commands9cmd_storeE
N8commands19automate_file_mergeE
N8commands9cmd_pluckE
6MusingI4csetE
6MusingI10revision_tE
N8commands9cmd_headsE
N8commands14cmd_get_rosterE
N5boost6detail17sp_counted_impl_pI8roster_tEE
src/cmd_db.cc
E(args.size() == 0)
src/cmd_db.cc:42: I(false)
src/cmd_db.cc:174: I(false)
E(db.var_exists(k))
no workspace given
cached height: %s
loading certs
loaded %d certs
Deals with the database
Initializes a database
init
info
Shows the database's version
Attempt to fix bad certs
fix_certs
dump
migrate
local
kill_revision
kill_certs
regenerate_caches
Clears the branch's epoch
clear_epoch
Sets the branch's epoch
BRANCH EPOCH
set_epoch
Sets a database variable
DOMAIN NAME VALUE
Unsets a database variable
DOMAIN NAME
unset
[WORKSPACE_PATH]
unregister_workspace
cleanup_workspace_list
complete
SCHEMA
test_migration_step
Shows a revision's height
rev_height
load_revisions
load_rosters
load_files
load_certs
loading revisions
E(!children.size())
E(!work.has_changes(db))
loading files
abcdef0123456789
non-hex digits in partial id
loading rosters
NOTE: because this database was last used by a rather old version
of monotone, you're not done yet.  If you're a project leader, then
see the file UPGRADE for instructions on running '%s db %s'
The epoch must be %d characters
E(idx(args, 1)().size() == constants::epochlen)
no var with name '%s' in domain '%s'
E(args.size() == 1 || workspace::found)
Creates a new database file and initializes it.
Shows information about the database
Older monotone versions could sometimes associate certs with the wrong key. This fixes such certs if you have the correct key, and can optionally drop any certs that you don't have the correct key for. This should only be needed if you had such certs in your db when upgrading from 0.44 or earlier, or if you loaded such certs with 'mtn read'.
Generates a list of SQL instructions that represent the whole contents of the database.  The resulting output is useful to later restore the database from a text file that serves as a backup.
Dumps the contents of the database
Reads a list of SQL instructions that regenerate the contents of the database.  This is supposed to be used in conjunction with the output generated by the 'dump' command.
Loads the contents of the database
Updates the database's internal schema to the most recent one.  Needed to automatically resolve incompatibilities that may be introduced in newer versions of monotone.
Migrates the database to a newer schema
Directly executes the given SQL command on the database
Executes an SQL command on the database
Deletions cannot be propagated through netsync, so the deleted items will come back if you sync with a database that still has them.
Commands that delete items from the local database
Kills a revision from the local database
Deletes all certs which are on the given revision(s) and have the given name and if a value is specified then also the given value.
Deletes the specified certs from the local database
Ensures that the database is consistent by issuing multiple checks.
Does some sanity checks on the database
Converts the database to the changeset format
Converts the database to the rosters format
Regenerates the caches stored in the database
This command modifies (or adds if it did not exist before) the variable named NAME, stored in the database, and sets it to the given value in VALUE.  The variable is placed in the domain DOMAIN.
This command removes the variable NAME from domain DOMAIN, which was previously stored in the database.
This command adds WORKSPACE_PATH to the list of `known-workspaces'.
Registers a new workspace for the current database
This command removes WORKSPACE_PATH to the list of `known-workspaces'.
Unregisters an existing workspace for the current database
Removes all invalid, registered workspace paths for the current database
Completes a partial identifier
(revision|file|key) PARTIAL-ID
This command migrates the given database from the specified schema in SCHEMA to its successor.
Runs one step of migration on the specified database
This command loads all revisions from the database and is intended to be used for timing revision loading performance.
Load all revisions from the database
This command loads all roster versions from the database and is intended to be used for timing roster reconstruction performance.
Load all roster versions from the database
This command loads all files versions from the database and is intended to be used for timing file reconstruction performance.
Load all file versions from the database
This command loads all certs from the database and is intended to be used for timing cert loading performance.
Load all certs from the database
revision %s already has children. We cannot kill it.
cannot kill revision %s,
because it would leave the current workspace in an invalid
state, from which monotone cannot recover automatically since
the workspace contains uncommitted changes.
Consider updating your workspace to another revision first,
before you try to kill this revision again.
applying changes from %s on the current workspace
deleting all certs named '%s' on %d revisions
deleting all certs with name '%s' and value '%s' on %d revisions
E(idx(args, 1)().find_first_not_of("abcdef0123456789") == string::npos)
N8commands6cmd_dbE
N8commands11cmd_db_initE
N8commands11cmd_db_infoE
N8commands14cmd_db_versionE
N8commands16cmd_db_fix_certsE
N8commands11cmd_db_dumpE
N8commands11cmd_db_loadE
N8commands14cmd_db_migrateE
N8commands14cmd_db_executeE
N8commands12cmd_db_localE
N8commands23cmd_db_kill_rev_locallyE
N8commands25cmd_db_kill_certs_locallyE
N8commands12cmd_db_checkE
N8commands19cmd_db_changesetifyE
N8commands16cmd_db_rosterifyE
N8commands24cmd_db_regenerate_cachesE
N8commands15cmd_clear_epochE
N8commands16cmd_db_set_epochE
N8commands7cmd_setE
N8commands9cmd_unsetE
N8commands22cmd_register_workspaceE
N8commands24cmd_unregister_workspaceE
N8commands26cmd_cleanup_workspace_listE
N8commands12cmd_completeE
N8commands23cmd_test_migration_stepE
N8commands14cmd_rev_heightE
N8commands18cmd_load_revisionsE
N8commands16cmd_load_rostersE
N8commands14cmd_load_filesE
N8commands14cmd_load_certsE
src/cmd_diff_log.cc:525: I(name == date_cert_name)
src/parallel_iter.hh:113: I(state_ == in_left || state_ == in_both)
I(state_ == in_left || state_ == in_both)
src/parallel_iter.hh:132: I(state_ == in_right || state_ == in_both)
I(state_ == in_right || state_ == in_both)
Compares the current tree with the files in the repository and prints the differences on the standard output.
If one revision is given, the diff between the workspace and that revision is shown.  If two revisions are given, the diff between them is given.  If no format is specified, unified is used by default.
This command prints selected history in forward or reverse order, filtering it by PATH if given.
Prints selected history in forward or reverse order
Lists the selected revision history
src/cmd_diff_log.cc:550: I(false)
src/parallel_iter.hh:62: I(!finished_)
src/parallel_iter.hh:72: I(state_ != invalid)
src/parallel_iter.hh:79: I(started_)
src/parallel_iter.hh:98: I(left_->first == right_->first)
I(left_->first == right_->first)
src/cmd_diff_log.cc:153: I(false)
E(app.opts.revision.size() <= 2)
E(!app.opts.reverse || app.opts.revision.size() == 1)
this workspace has more than one parent
(specify a revision to diff against with '--revision')
src/cmd_diff_log.cc:390: I(false)
'--reverse' only allowed with exactly one revision
'--diff-args' requires '--external'; try adding '--external' or remove '--diff-args'
E(app.opts.diff_format == external_diff)
only one of '--last'/'--next' allowed
workspace has no parent revision, probably an empty branch
workspace parent revision %s not found - did you specify a wrong database?
src/cmd_diff_log.cc:805: I(!null_id(first_rid))
try passing a '--from' revision to start at
src/cmd_diff_log.cc
I(name == date_cert_name)
src/parallel_iter.hh
no changes
Shows current differences
[PATH]...
Calculates diffs of files
[FILE [...]]
content_diff
[PATH] ...
I(!finished_)
I(state_ != invalid)
I(started_)
mtn:manual_merge
/dev/null
more than two revisions given
# old_revision [
# new_revision [
E(last == -1 || next == -1)
rids
%d ending revisions
I(!null_id(first_rid))
log %d selected revisions
log %d starting revisions
(Revision: %s)
 in_left
 in_right
 in_both
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::middle_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::middle_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::leaf_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::leaf_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = marking; typename boost::detail::sp_member_access<T>::type = marking*]
void log_common(app_state&, args_vector, bool, std::ostream&)
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = node; typename boost::detail::sp_member_access<T>::type = node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = file_node; typename boost::detail::sp_member_access<T>::type = file_node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const node; typename boost::detail::sp_member_access<T>::type = const node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type*]
void dump_diffs(lua_hooks&, database&, const roster_t&, const roster_t&, std::ostream&, diff_type, bool, std::__cxx11::string, bool, bool, bool)
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const roster_t; typename boost::detail::sp_dereference<T>::type = const roster_t&]
N8parallel7state_tE
14path_predicateI9file_pathE
17path_always_falseI9file_pathE
6MusingIN8parallel4iterI8cow_trieIjN5boost10shared_ptrI4nodeEELi8EEEEE
N8commands14cmdpreset_diffE
N8commands8cmd_diffE
N8commands21automate_content_diffE
6MusingISt3setI8revisionI2idESt4lessIS3_ESaIS3_EEE
6MusingIK8arg_typeE
N8commands7cmd_logE
N8commands12automate_logE
src/cmd_ws_commit.cc:2290: I(false)
src/cmd_ws_commit.cc:2054: I(false)
src/cmd_ws_commit.cc:1154: I(false)
a backup from a previously failed commit exists in '_MTN/commit'.
This file must be removed before commit will proceed.
You may recover the previous message from this file if necessary.
-- Enter a description of this change above --
-- You may edit the fields below            --
-- Modifications below this line are ignored --
*** REMOVE THIS LINE TO CANCEL THE COMMIT ***
date format '%s' cannot be parsed; using default instead
*** THIS REVISION WILL CREATE DIVERGENCE ***
E(lua.hook_edit_comment(input_message, output_message))
E(message.read(instructions()))
commit failed. Branch header not found.
E(message.read(trim_right(BRANCH())))
commit failed. Branch value empty.
commit failed. Author header not found.
E(message.read(trim_right(AUTHOR())))
commit failed. Author value empty.
commit failed. Date header not found.
E(message.read(trim_right(DATE())))
commit failed. Date value empty.
*** THIS REVISION WILL CREATE A NEW BRANCH ***
commit failed. Instructions not found.
In order to revert the entire workspace, specify '.' as the file name.
Reverts files and/or directories
If the file was deleted from the workspace, this is the same as 'revert'. Otherwise, it just removes the 'drop' from the manifest.
Disapproves a particular revision or revision range
[PARENT-REVISION] CHILD-REVISION
Creates directories and adds them to the workspace
Drops files from the workspace
Renames entries in the workspace
SRC DEST
SRC1 [SRC2 [...]] DEST_DIR
After this command, the directory that currently has the name NEW_ROOT will be the root directory, and the directory that is currently the root directory will have name PUT_OLD.
Use of '--bookkeep-only' is NOT recommended.
Shows workspace's status information
If a revision is given, that's the one that will be checked out.  Otherwise, it will be the head of the branch (given or implicit).  If no directory is given, the branch name will be used as directory.
Checks out a revision from the database into a directory
This command is used to set, get or drop file attributes.
If no attribute is specified, this command removes all attributes attached to the file given in PATH.  Otherwise only removes the attribute specified in ATTR.
Removes attributes from a file
If no attribute is specified, this command prints all attributes attached to the file given in PATH.  Otherwise it only prints the attribute specified in ATTR.
Gets the values of a file's attributes
Sets the attribute given on ATTR to the value specified in VALUE for the file mentioned in PATH.
If an explicit revision is given, the file's attributes at this specific revision are returned.
Prints all attributes for the specified path
Sets an attribute on a certain path
Drops an attribute or all of them from a certain path
Commits workspace changes to the database
If no directory is specified, uses the current directory.
Sets up a new workspace directory
Imports the contents of a directory into a branch
If no directory is given, defaults to the current workspace.
Migrates a workspace directory's metadata to the latest format
Refreshes the inodeprint cache
These commands subdivide a set of revisions into good, bad and untested subsets and successively narrow the untested set to find the first revision that introduced some change.
Search revisions to find where a change first appeared
Update the workspace back to the revision from which the bisection was started and remove all current search information, allowing a new search to be started.
Reset the current bisection search
Lists the total number of revisions in the search set, the number of revisions that have been determined to be good or bad, the number of revisions that have been skipped and the number of revisions remaining to be tested.
Reports on the current status of the bisection search
This command can be used if updates by good, bad or skip commands fail due to blocked paths or other problems.
Updates the workspace to the next revision to be tested by bisection
Skipped revisions are removed from the set being searched. Revisions that cannot be tested for some reason should be skipped.
Excludes the current revision or specified revisions from the search
Known bad revisions are removed from the set being searched.
Marks the current revision or specified revisions as bad
Known good revisions are removed from the set being searched.
Marks the current revision or specified revisions as good
src/cmd_ws_commit.cc:1261: I(args.size() == 2)
no attribute '%s' on path '%s'
none or only one revision must be given
src/cmd_ws_commit.cc:1411: I(base.has_node(path))
src/cmd_ws_commit.cc:1417: I(j != prev_node->attrs.end())
I(j != prev_node->attrs.end())
E(app.opts.no_ignore || !work.ignore_file(fp))
ignoring directory '%s' (see '.mtn-ignore')
the specified target directory '%s/' doesn't exist.
E(get_path_status(dst_path) == path::directory)
src/cmd_ws_commit.cc:2153: I(false)
bisecting revisions; %d good; %d bad; %d skipped; specify good revisions to start search
bisecting revisions; %d good; %d bad; %d skipped; specify bad revisions to start search
src/cmd_ws_commit.cc:2171: I(!good.empty())
bisecting %d revisions; %d good; %d bad; %d skipped; %d remaining
bisection finished at revision %s
next revision for bisection testing is %s
however this workspace is currently at %s
run 'bisect update' to update to this revision before testing
revision %s has %d parents, cannot invert
need '--branch' argument for disapproval
revisions %s and %s do not share common history, cannot invert
revisions share common history, but %s is not an ancestor of %s, cannot invert
revision %s it not a child of %s, cannot invert
disapproval of revisions '%s'..'%s'
cannot disapprove root revision
E(!null_id(edge_old_revision(old_edge)))
note: this revision creates divergence
note: you may (or may not) wish to run '%s merge'
need '--branch' argument for setup
use '--revision' or '--branch' to specify what to checkout
choose one with '%s checkout -r<id>'
src/cmd_ws_commit.cc:1060: I(!app.opts.branch().empty())
revision %s is not a member of branch %s
E(project.revision_is_in_branch(revid, app.opts.branch))
you must specify a destination directory
checkout directory '%s' already exists
E(app.opts.revision.size() < 2)
this command can only be used in a workspace with no pending changes
E(parent_roster(parents.begin()) == current_roster)
src/cmd_ws_commit.cc:2091: I(start.first == bisect::start)
I(start.first == bisect::start)
src/cmd_ws_commit.cc:933: I(start.first == bisect::start)
bisection from revision %s in progress
E(restricted_rev.is_nontrivial())
E(branchname() == "" || branchname == bn_candidate)
new manifest '%s'
new revision '%s'
'_MTN/log' is non-empty and log message was specified on command line.
Perhaps move or delete '_MTN/log',
or remove '--message'/'--message-file' from the command line?
E(!(log_message_given && work.has_contents_user_log() && app.opts.msgfile() != "_MTN/log"))
using specified commit date %s
empty log message; commit canceled
E(log_message().find_first_not_of("\n\r\t ") != string::npos)
log message rejected by hook: %s
beginning commit on branch '%s'
revision %s already in database
skipping file delta %s, already in database
file '%s' modified during commit, aborting
your database is missing version %s of file '%s'
parent revisions of this commit are in different branches:
'%s' and '%s'.
Please specify a branch name for the commit, with '--branch'.
you must specify a directory to import
src/cmd_ws_commit.cc:1928: I(!app.opts.branch().empty())
use '--revision' or '--branch' to specify the parent revision for the import
choose one with '%s import -r<id>'
import directory '%s' is a file
import directory '%s' doesn't exists
you must pass at least one path to 'revert' (perhaps '.')
E(app.opts.missing || !args.empty() || !app.opts.exclude.empty())
no file version %s found in database for '%s'
E(db.file_version_exists(f->content))
src/cmd_ws_commit.cc:1187: I(args.size() == 2)
path '%s' does not have attribute '%s'
E(node->attrs.find(a_key) != node->attrs.end())
E(args.size() ==1 || args.size() == 2)
bisection started at revision %s
ignored redundant bisect %s on revision %s
conflicting bisect %s/%s on revision %s
skip
src/cmd_ws_commit.cc
E(backup().empty())
Branch:   
Author:   
Date:     
date check failed: %s != %s
date check failed: %s
New Branch: 
Old Branch: 
edit of log message failed
commit cancelled.
E(!b.empty())
E(!author.empty())
E(!d.empty())
Reverses a mistaken 'drop'
PATH...
undrop
disapprove
[DIRECTORY...]
mkdir
Adds files to the workspace
Renames the root directory
NEW_ROOT PUT_OLD
pivot_root
status
[DIRECTORY]
checkout
Manages file attributes
PATH [ATTR]
Sets an attribute on a file
PATH ATTR VALUE
PATH
get_attributes
PATH KEY VALUE
set_attribute
PATH [KEY]
drop_attribute
setup
DIRECTORY
migrate_workspace
refresh_inodeprints
bisect
reset
unknown path '%s'
E(new_roster.has_node(path))
no attributes for '%s'
I(args.size() == 2)
E(current.has_node(path))
unknown path '%s' in %s
I(base.has_node(path))
dropped
directory '%s' already exists
no bisection in progress
E(!info.empty())
I(!good.empty())
E(rev.edges.size() == 1)
disapproval of revision '%s'
E(ancestors.size() > 0)
E(ancestors.size() < 1)
E(!null_id(r))
E(rev.edges.size() < 2)
E(rev.edges.size() > 0)
E(args.size() < 2)
wrong revision count
reset back to %s
no changes to commit
changes rejected by hook: %s
E(changes_validated)
using current commit date %s
E(message_validated)
inserting new revision %s
inserting delta %s -> %s
E(tid == new_content)
inserting full version %s
updating commit date %s
committed revision %s
_MTN/log
workspace commit
no missing files to revert
reverting missing file: %s
skipping unchanged %s
reverting %s
reverting %s to [%s]
writing file %s to %s
recreating '%s/'
skipping existing %s/
reverting %s on %s
E(old_roster.has_node(path))
E(args.size() == 3)
updating to %s
void bisect_update(app_state&, bisect::type)
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = cset; typename boost::detail::sp_dereference<T>::type = cset&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = node; typename boost::detail::sp_member_access<T>::type = node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = file_node; typename boost::detail::sp_member_access<T>::type = file_node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const node; typename boost::detail::sp_member_access<T>::type = const node*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const roster_t; typename boost::detail::sp_dereference<T>::type = const roster_t&]
N8commands10cmd_revertE
N8commands10cmd_undropE
N8commands14cmd_disapproveE
N8commands9cmd_mkdirE
N8commands13cmdpreset_addE
N8commands7cmd_addE
N8commands8cmd_dropE
N8commands10cmd_renameE
N8commands14cmd_pivot_rootE
N8commands10cmd_statusE
N8commands12cmd_checkoutE
N8commands17automate_checkoutE
N8commands8cmd_attrE
N8commands13cmd_attr_dropE
N8commands12cmd_attr_getE
N8commands12cmd_attr_setE
N8commands23automate_get_attributesE
N8commands22automate_set_attributeE
N8commands23automate_drop_attributeE
N8commands16cmdpreset_commitE
N8commands10cmd_commitE
N8commands9cmd_setupE
N8commands10cmd_importE
N8commands21cmd_migrate_workspaceE
N8commands23cmd_refresh_inodeprintsE
N8commands10cmd_bisectE
N8commands9cmd_resetE
N8commands17cmd_bisect_statusE
N8commands17cmd_bisect_updateE
N8commands15cmd_bisect_skipE
N8commands14cmd_bisect_badE
N8commands15cmd_bisect_goodE
N5boost6detail17sp_counted_impl_pI4csetEE
This command doesn't reconstruct or import revisions.  You probably want to use cvs_import.
Imports all versions in a CVS repository
Produces a git fast-export data stream on stdout
need base '--branch' argument for importing
reading author mappings from '%s'
reading branch mappings from '%s'
importing revision marks from '%s'
src/options.hh:68: I(allowed.size() >= 2)
must be one of the following: %s
exporting revision marks to '%s'
Parses versions in RCS files
RCSFILE...
rcs_import
CVSROOT
cvs_import
git_export
src/cmd_othervcs.cc
path '%s' does not exist
revs
src/options.hh
I(allowed.size() >= 2)
roots
N6option16bad_arg_internalE
N8commands14cmd_rcs_importE
N8commands14cmd_cvs_importE
N8commands14cmd_git_exportE
src/cmd_automate.cc:42: I(false)
this is an informational message
src/cmd_automate.cc:164: I(false)
directory '%s' is not a workspace
src/cmd_automate.cc:321: I(app_p != NULL)
src/cmd_automate.cc:322: I(app_p->lua.check_lua_state(LS))
I(app_p->lua.check_lua_state(LS))
it is illegal to call the mtn_automate() lua extension,
unless from a command function defined by register_command().
E(app_p->mtn_automate_allowed)
bad input to mtn_automate() lua extension: command name is missing
Starting call to mtn_automate lua hook
src/cmd_automate.cc:356: I(acmd)
Informative failure caught inside lua call to mtn_automate: %s
Interface for scripted execution
Prints the automation interface's version
Emulates certain kinds of diagnostic / UI messages for debugging and testing purposes, such as stdio
{ info | warning | error | ticker }
Automates several commands in one run
src/cmd_automate.cc
running bandtest %s
this is a warning
this is an error message
ticker
fake ticker (not fixed)
fake ticker (fixed)
POSIX
change_workspace
mtn_automate
I(app_p != NULL)
E(n > 0)
arg: %s
I(acmd)
interface_version
bandtest
format-version
13.1
N8commands8automateE
N8commands12cmd_automateE
N8commands26automate_interface_versionE
N8commands17automate_bandtestE
18done_reading_input
N8commands14automate_stdioE
18local_stdio_pre_fn
no file version %s found in database
E(db.file_version_exists(ident))
ancestor file id does not exist
E(db.file_version_exists (anc_id))
E(db.file_version_exists (left_id))
E(db.file_version_exists (right_id))
E(merge3(anc_lines, left_lines, right_lines, merged_lines))
E(db.file_version_exists (src_id))
destination file id does not exist
E(db.file_version_exists (dst_id))
no file '%s' found in revision %s
E((!null_node(node->self) && is_file_t(node)))
with no revision selected, this command can only be used in a single-parent workspace
no such file '%s' in revision %s
'%s' in revision %s is not a file
src/cmd_files.cc
cannot read from stdin
E(path() != "-")
dumping file %s
left file id does not exist
right file id does not exist
merge failed
source file id does not exist
E(roster.has_node(fp))
annotate file '%s'
E(roster.has_node(file))
E(is_file_t(node))
annotate for file_id %s
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const file_node; typename boost::detail::sp_member_access<T>::type = const file_node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const node; typename boost::detail::sp_member_access<T>::type = const node*]
N8commands9cmd_floadE
N8commands10cmd_fmergeE
N8commands9cmd_fdiffE
N8commands12cmd_annotateE
N8commands12cmd_identifyE
N8commands17automate_identifyE
N8commands7cmd_catE
N8commands17automate_get_fileE
N8commands22automate_get_file_sizeE
N8commands20automate_get_file_ofE
_MTN/resolutions
src/cmd_conflicts.cc
too many arguments
wrong number of arguments
duplicate_name
show_first
show_remaining
RESOLUTION
resolve_first
resolve_first_left
resolve_first_right
clean
E(args.size() > 0)
orphaned_node
E(!conflict.orphaned)
dropped_modified
interactive merge failed.
orphaned node '%s'
possible resolutions:
resolve_first drop
conflict: file '%s'
orphaned on the left
modified on the right
modified on the left
orphaned on the right
dropped on the left
dropped on the right
left_
right_
resolve_first rename
resolve_first keep
resolve_first user "name"
resolve_first_left drop
resolve_first_left rename
resolve_first_left keep
resolve_first_right drop
resolve_first_right rename
resolve_first_right keep
duplicate_name %s
content %s
all conflicts resolved
other resolution is %s; specify 'drop', 'rename', or 'user_rename'
E(other_resolution.resolution == resolve_conflicts::none || other_resolution.resolution == resolve_conflicts::drop || other_resolution.resolution == resolve_conflicts::rename || other_resolution.resolution == resolve_conflicts::content_user_rename)
'%s' is not a supported conflict resolution for %s
src/cmd_conflicts.cc:20: I(false)
Commands for conflict resolutions
Show the first unresolved conflict in the conflicts file, and possible resolutions
Show the remaining unresolved conflicts in the conflicts file
Use 'mtn conflicts show_first' to see possible resolutions.
Set the resolution for the first unresolved single-file conflict.
Set the left resolution for the first unresolved two-file conflict
Set the right resolution for the first unresolved two-file conflict
Delete any bookkeeping files related to conflict resolution
must specify 'resolve_first_left' or 'resolve_first_right' (not just 'resolve_first')
E(conflict.left_nid == the_null_node)
orphaned files must be renamed
E(conflict.right_nid == the_null_node)
interactive merge result saved in '%s'
no resolvable yet unresolved single-file conflicts
must specify resolve_first (not _left or _right)
E(conflict.left_nid != the_null_node)
no resolvable yet unresolved left side conflicts
E(conflict.right_nid != the_null_node)
no resolvable yet unresolved right side conflicts
resolve_first rename "file_name"
dropped and recreated on the left
dropped and recreated on the right
resolve_first user_rename "new_content_name" "new_file_name"
resolve_first_left user_rename "new_content_name" "new_file_name"
resolve_first_left user "name"
resolve_first_right user_rename "new_content_name" "new_file_name"
resolve_first_right user "name"
resolve_first_left rename "name"
resolve_first_right rename "name"
resolve_first interactive "file_name"
resolve_first user "file_name"
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = roster_t; typename boost::detail::sp_member_access<T>::type = roster_t*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = roster_t; typename boost::detail::sp_dereference<T>::type = roster_t&]
N8commands13cmd_conflictsE
N8commands14cmd_show_firstE
N8commands18cmd_show_remainingE
N8commands17cmd_resolve_firstE
N8commands22cmd_resolve_first_leftE
N8commands23cmd_resolve_first_rightE
N8commands9cmd_cleanE
src/diff_output.cc:78: I(pos <= a.size())
src/diff_output.cc:81: I(a.rend() - encloser_last_search >= 0)
I(a.rend() - encloser_last_search >= 0)
src/diff_output.cc:82: I(pos >= static_cast<size_t>(a.rend() - encloser_last_search))
I(pos >= static_cast<size_t>(a.rend() - encloser_last_search))
/usr/include/boost/smart_ptr/scoped_ptr.hpp
find_encloser: from %u matching %d, "%s"
src/diff_output.cc:597: I(false)
src/diff_output.cc
lines1
lines2
I(pos <= a.size())
vector::reserve
@@ -0,0
@@ -
 +0,0
***************
*** 
 ****
--- 
 ----
 is binary
+++ 
void boost::scoped_ptr<T>::reset(T*) [with T = const pcre::regex]
T* boost::scoped_ptr<T>::operator->() const [with T = const pcre::regex]
13hunk_consumer
19unidiff_hunk_writer
19cxtdiff_hunk_writer
'tostring' must return a string to 
lua error while setting up standard hooks
E(run_string(st, dat().c_str(), rc().c_str()))
E(run_file(st, rc.as_external().c_str()))
skipping nonexistent rcfile '%s'
src/lua_hooks.cc:681: I(false)
get_man_page_formatter_command
note_netsync_revision_received
<disabled dangerous functions>
lua error while disabling existing functions
lua error while redirecting output
get_default_database_locations
calling attr_init_function for %s
  calling an attr_init_function for %s
lua panic
tostring
lua: 
'print'
src/lua_hooks.cc
scheme
query
fragment
<std hooks>
src/lua_hooks.cc:207: I(st)
src/lua_hooks.cc:224: I(st)
lua error while loading '%s'
rcfile '%s' does not exist
E(!required)
skipping rcfile '%s': %s
monotonerc
persist_phrase_ok
expand_selector
expand_date
get_branch_key
edit_comment
ignore_file
ignore_branch
get_manifest_cert_trust
accept_testresult_change
merge3
external_diff
get_encloser_pattern
date_long
date_short
date_time_long
date_time_short
get_date_format_spec
get_default_database_alias
get_default_database_glob
hook_wrapper
use_inodeprints
get_netsync_client_key
get_netsync_server_key
use_transport_auth
get_netsync_read_permitted
attr_functions
validate_changes
validate_commit_message
note_commit
note_netsync_end
note_mtn_startup
unmapped_git_author
validate_git_author
get_revision_cert_trust
note_netsync_cert_sent
note_netsync_cert_received
note_netsync_pubkey_sent
note_netsync_pubkey_received
note_netsync_revision_sent
note_netsync_start
get_remote_automate_permitted
get_netsync_write_permitted
get_author
get_local_key_name
get_passphrase
get_netsync_connect_command
src/lua_hooks.cc:140: I(st)
get_confdir
<redirect output>
get_default_command_options
attr_init_functions
  added attr %s = %s
  no attr added
io.write = function(...)   message(...) end print = function(...)   message(...) end 
os.execute = function(c)  error("os.execute disabled for security reasons.  Try spawn().") end io.popen = function(c,t)  error("io.popen disabled for security reasons.  Try spawn_pipe().") end 
This may be due to a memory glitch, data corruption during
a network transfer, corruption of your database or workspace,
or a bug in monotone.  If the error persists, please report
it to '%s'.
src/transforms.cc:119: I(pipe->message_count() < Pipe::LAST_MESSAGE)
I(pipe->message_count() < Pipe::LAST_MESSAGE)
src/transforms.cc:120: I(pipe->message_count() < Pipe::LAST_MESSAGE)
src/transforms.cc:199: I(pipe->message_count() < Pipe::LAST_MESSAGE)
src/transforms.cc:200: I(pipe->message_count() < Pipe::LAST_MESSAGE)
src/transforms.cc
Decoding error: 
invalid hex character '
void boost::scoped_ptr<T>::reset(T*) [with T = Botan::Pipe]
N5Botan14Encoding_ErrorE
N5Botan14Decoding_ErrorE
N5Botan17Integrity_FailureE
N5Botan15Stream_IO_ErrorE
failed to decode boolean testresult cert value '%s'
%s is acceptable update candidate
%s has unacceptable test results
src/update.cc:119: I(!null_id(base))
src/update.cc:120: I(!branch().empty())
src/update.cc
Considering update target %s
%s not in branch %s
I(!null_id(base))
I(!branch().empty())
active_candidates
%d workspace conflicts
detached
path '%s' already exists
revision path is %s
src/work.cc
bisect path is %s
update path is %s
commit path is %s
user log path is %s
inodeprints path is %s
options path is %s
E(workspace::found)
E(file_exists(update_path))
no update revision available
E(!null_id(update_id))
local dump path is %s
 with value 
wanted 
keydir
E(src.lookahead == EOF)
src/work.cc:832: I(false)
file '%s' is a directory
E(curr_id == old_id)
updating '%s'
I(root_dir_attached)
rename_add_drop_map
I(in_inodeprints_mode())
I(static_cast<bool>(d))
I(ros.all_nodes().empty())
base roster has %d entries
branch name is '%s'
invalid directory ''
E(!new_dir.empty())
creating workspace in %s
I(nid != the_null_node)
skipping ignorable file '%s'
I(ros.has_root())
new_roster
I(new_roster.has_root())
I(i != nid_map.end())
I(!srcs.empty())
E(!src.empty())
E(new_roster.has_node(src))
E(!i->empty())
E(new_roster.has_node(*i))
E(!new_roster.has_node(d))
missing directory '%s'
not a directory '%s'
missing file '%s'
not a file '%s'
E(missing_items == 0)
I(is_file_t(old_node))
E(move_conflicting_paths)
I(leftover_paths.size() > 0)
processing %s
src/work.cc:1596: I(false)
I(old_roster.has_root())
'%s' is in the way
cs.nodes_renamed
renaming '%s' to '%s'
adding '%s'
dropping '%s'
E(!name.empty())
E(recursive)
src/work.cc:792: I(false)
skipped
calling hook to clear attribute %s on %s
calling hook to set attribute %s on %s to %s
workspace required but not found
workspace required but not found
no update has occurred in this workspace
E(null_id(parent) || db.revision_exists(parent))
parent revision %s does not exist, did you specify the wrong database?
E(val != memory_db_identifier)
unrecognized key '%s' in options file '%s' - ignored
Could not parse entire options file '%s'
Failed to read options file '%s': %s
a memory database '%s' cannot be used in a workspace
workspace is corrupt: reading '%s': %s
content of file '%s' has changed, not overwriting
src/work.cc:1286: I(root_dir_attached)
src/work.cc:1429: I(rename_add_drop_map.empty())
I(rename_add_drop_map.empty())
src/work.cc:1430: I(root_dir_attached)
src/work.cc:241: I(rev.made_for == made_for_workspace)
I(rev.made_for == made_for_workspace)
src/work.cc:885: I(in_inodeprints_mode())
src/work.cc:876: I(in_inodeprints_mode())
src/roster.hh:149: I(static_cast<bool>(d))
src/work.cc:349: I(ros.all_nodes().empty())
base revision %s does not exist in database
workspace options changed - writing back to _MTN/options
E(opts.dbname_type != memory_db)
Failed to write options file '%s': %s
could not unregister workspace from old database '%s'
monotone bookkeeping directory '%s' already exists in '%s'
E(!directory_exists(bookkeeping_root))
creating bookkeeping directory '%s' for workspace in '%s'
'%s' is not a recognized workspace option
cannot add '%s', because '%s' is recorded as a file in the workspace manifest
E(is_dir_t(ros.get_node(path)))
adding '%s' to workspace manifest
src/work.cc:1128: I(ident_existing_file(path, ident))
I(ident_existing_file(path, ident))
src/work.cc:1137: I(nid != the_null_node)
skipping '%s', already accounted for in workspace
src/work.cc:1169: I(ros.has_root())
src/work.cc:1776: I(new_roster.has_root())
attach node %d blocked by unversioned path '%s'
attach node %d blocked by blocked parent '%s'
src/work.cc:1456: I(i != nid_map.end())
cannot drop non-empty directory '%s'
src/work.cc:1931: I(!srcs.empty())
cannot rename the workspace root (try '%s pivot_root' instead)
source file '%s' is not versioned
cannot move '%s' to a subdirectory of itself, '%s/%s'
'%s' and '%s' are the same file
destination path's parent directory '%s/' doesn't exist
E(get_path_status(parent) == path::directory)
destination '%s/' is not a directory
E(get_path_status(dst) == path::directory)
destination '%s' already exists in the workspace manifest
renaming '%s' to '%s' in workspace manifest
'%s' doesn't exist in workspace, skipping
destination '%s' already exists in workspace, skipping filesystem rename
'%s' doesn't exist in workspace and '%s' does, skipping filesystem rename
%d missing items; use '%s ls missing' to view.
To restore consistency, on each missing item run either
 '%s drop ITEM' to remove it permanently, or
 '%s revert ITEM' to restore it.
To handle all at once, simply use
 '%s drop --missing' or
 '%s revert --missing'
src/work.cc:950: I(is_file_t(old_node))
workspace is locked
you must clean up and remove the %s directory
E(!directory_exists(detached))
re-run this command with '--move-conflicting-paths' to move conflicting paths out of the way
src/work.cc:1558: I(leftover_paths.size() > 0)
moved conflicting path '%s' to '%s'
moved some conflicting files into '%s'
src/work.cc:2090: I(old_roster.has_root())
proposed new root directory '%s' is not versioned or does not exist
E(old_roster.has_node(new_root))
proposed new root directory '%s' is not a directory
E(is_dir_t(old_roster.get_node(new_root)))
proposed new root directory '%s' contains illegal path '%s'
E(!old_roster.has_node(new_root / bookkeeping_root_component))
directory '%s' is not versioned or does not exist
E(old_roster.has_node(current_path_to_put_old_parent))
E(is_dir_t(old_roster.get_node(current_path_to_put_old_parent)))
E(!old_roster.has_node(current_path_to_put_old))
src/work.cc:1320: I(i != rename_add_drop_map.end())
I(i != rename_add_drop_map.end())
unable to drop the root directory
skipping '%s', not currently tracked
cannot remove '%s/', it is not empty
directory '%s' not empty - it will be dropped but not deleted
src/work.cc:1896: I(ident_existing_file(name, fid))
I(ident_existing_file(name, fid))
file '%s' changed - it will be dropped but not deleted
dropping '%s' from workspace manifest
void workspace::perform_pivot_root(database&, const file_path&, const file_path&, bool, bool)
void workspace::perform_rename(database&, const std::set<file_path>&, const file_path&, bool)
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const dir_node; typename boost::detail::sp_member_access<T>::type = const dir_node*]
void workspace::perform_deletions(database&, const std::set<file_path>&, bool, bool)
void workspace::perform_additions(database&, const std::set<file_path>&, bool, bool)
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = file_node; typename boost::detail::sp_member_access<T>::type = file_node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const file_node; typename boost::detail::sp_member_access<T>::type = const file_node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const node; typename boost::detail::sp_member_access<T>::type = const node*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const roster_t; typename boost::detail::sp_dereference<T>::type = const roster_t&]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = cset; typename boost::detail::sp_dereference<T>::type = cset&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const roster_t; typename boost::detail::sp_member_access<T>::type = const roster_t*]
void workspace::put_work_rev(const revision_t&)
void workspace::get_work_rev(revision_t&)
*N12_GLOBAL__N_113file_itemizerE
*N12_GLOBAL__N_118workspace_itemizerE
*N12_GLOBAL__N_116addition_builderE
*N12_GLOBAL__N_121editable_working_treeE
*N12_GLOBAL__N_122simulated_working_treeE
bisect
update
revision
commit
options
debug
inodeprints
12ignored_file
13editable_tree
6MusingI4dataE
6MusingIK10revision_tE
13fill_path_vecI16bookkeeping_pathE
N5boost6detail17sp_counted_impl_pI11marking_mapEE
'_MTN/format' should not exist in a format 1 workspace; corrected
workspace is corrupt: '%s' is invalid
this workspace's metadata is in format 0. To use this workspace
with this version of monotone, you must delete it and check it
out again (migration from format 0 is not possible).
Once you have done this, you will not be able to use the workspace
with versions of monotone older than %s.
We apologize for the inconvenience.
to use this workspace with this version of monotone, its metadata
must be migrated from format %d to format %d, using the command
'%s migrate_workspace'.
Once you have done this, you will not be able to use the workspace
with versions of monotone older than %s.
E(format >= current_workspace_format)
this version of monotone only understands workspace metadata
in formats 0 through %d.  Your workspace is in format %d.
You need a newer version of monotone to use this workspace.
E(format <= current_workspace_format)
workspace is corrupt: %s exists but is not a regular file
it is not possible to migrate from workspace format 0 to any
later format.  You must delete this workspace and check it out
again.  We apologize for the inconvenience.
this workspace is in the current format, no migration is necessary
src/migrate_work.cc:271: I(format > current_workspace_format)
I(format > current_workspace_format)
src/migrate_work.cc
E(format > 0)
base_rev_data
base_rid
workcs
workcs_data
void migrate_1_to_2()
0.30
6MusingI8revisionI2idEE
src/netio.hh:30: I(pos < str.size() || (pos == str.size() && len == 0))
I(pos < str.size() || (pos == str.size() && len == 0))
need %d bytes to decode '%s' at %d, only have %d
overflow while decoding variable length integer '%s' into a %d-byte field
expected '%s' to end at %d, have %d bytes
ran out of bytes reading variable length integer '%s' at pos %d
calculated cert hash %s does not match %s
cert: signable text %s
src/cert.cc
cert hash
src/netio.hh
cert ident
cert name
basic_string::assign
cert val
cert key
cert sig
src/cert.cc:118: I(false)
10bad_decode
src/project.cc:439: I(keys.have_signing_key())
src/project.cc:388: I(!branch().empty())
src/project.cc:389: I(!changelog().empty())
src/project.cc:390: I(time.valid())
src/project.cc:391: I(!author.empty())
src/project.cc:599: I(!info.id.inner()().empty())
found %d (%d valid) %s branch certs on revision %s
found %d (%d valid) %s suspend certs on revision %s
no branch found for empty revision, please provide a branch name
no branch certs found for revision %s, please provide a branch name
multiple branch certs found for revision %s, please provide a branch name
src/project.cc:747: I(i != branches.end())
E(ks_match_by_local_name.size() < 2)
E(db_match_by_local_name.size() < 2)
E(ks_match_by_given_name.size() < 2)
could not interpret test result string '%s'; valid strings are: 1, 0, yes, no, true, false, pass, fail
found heads of branch %s (%s heads)
branch '%s' has multiple heads
perhaps consider '%s merge'
{id=
; given_name=
; official_name=
src/project.cc
I(keys.have_signing_key())
I(!changelog().empty())
I(time.valid())
I(!author.empty())
key %s does not exist
info.id
info.official_name
info.given_name
I(!info.id.inner()().empty())
E(!ident.inner()().empty())
E(!branches.empty())
E(branches.size() == 1)
I(i != branches.end())
you have %d keys named '%s'
there are %d keys named '%s'
there is no key named '%s'
pass
fail
getting heads of branch %s
note: 
void project_t::complete_key_identity_from_id(key_store*, lua_hooks&, key_identity_info&) const
*N12_GLOBAL__N_113not_in_branchE
10is_failure
6MusingI3keyI2idEE
6MusingI8key_nameE
src/outdated_indicator.cc:38: I(changed == dispensed || changed == dispensed + 1)
I(changed == dispensed || changed == dispensed + 1)
src/outdated_indicator.cc:46: I(changed == dispensed || changed == dispensed + 1)
src/outdated_indicator.cc:65: I(when <= parent->last_change())
I(when <= parent->last_change())
src/outdated_indicator.cc
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = outdated_indicator_factory_impl; typename boost::detail::sp_member_access<T>::type = outdated_indicator_factory_impl*]
N5boost6detail17sp_counted_impl_pI31outdated_indicator_factory_implEE
existing (possibly stale) journal file '%s' has same stem as new database '%s'.
Cancelling database creation
need exactly 1 arg to gunzip()
invalid database alias '%s': does not start with a colon
invalid database alias '%s': must not be empty
E(lua.hook_get_default_database_glob(matcher))
invalid database alias '%s': does contain invalid characters
E(lua.hook_get_default_database_alias(alias) && !alias.empty())
could not query default database alias
add_prefix_matching_constraint for '%s'
prefix_matcher: lower bound ('%s') and upper bound ('%s')
'%s' is a workspace, not a database
(did you mean '%s'?)
E(opts.dbname.as_internal().empty())
'%s' is a directory, not a database
src/lru_writeback_cache.hh:117: I(_dirty.empty())
src/database.cc:4875: I(!__sql)
src/database.cc:4891: I(__sql)
src/database.cc:4898: I(__sql)
initializing new database '%s'
src/database.cc:4776: I(false)
src/lru_writeback_cache.hh:227: I(_curr_size == 0)
src/lru_writeback_cache.hh:241: I(liter != _list.begin())
src/lru_writeback_cache.hh:34: I(false)
src/lru_writeback_cache.hh:289: I(miter != _index.end())
src/lru_writeback_cache.hh:252: I(curr_size > 0)
src/lru_writeback_cache.hh:254: I(exists(key))
src/database.cc:4950: I(acquired)
src/database.cc:133: I(*i >= 10 && *i < 127)
src/database.cc:788: I(dump != NULL)
src/database.cc:789: I(dump->sql != NULL)
src/database.cc:790: I(vals != NULL)
src/database.cc:791: I(vals[0] != NULL)
src/database.cc:792: I(vals[1] != NULL)
src/database.cc:793: I(vals[2] != NULL)
src/database.cc:794: I(n == 3)
src/database.cc:795: I(string(vals[1]) == "table")
src/database.cc:807: I(stepresult == SQLITE_DONE || stepresult == SQLITE_ROW)
I(stepresult == SQLITE_DONE || stepresult == SQLITE_ROW)
src/database.cc:822: I(dump != NULL)
src/database.cc:823: I(dump->sql != NULL)
src/database.cc:824: I(vals != NULL)
src/database.cc:825: I(vals[0] != NULL)
src/database.cc:826: I(vals[1] != NULL)
src/database.cc:827: I(vals[2] != NULL)
src/database.cc:828: I(n == 3)
src/database.cc:829: I(string(vals[1]) == "index")
src/database.cc:838: I(dump != NULL)
src/database.cc:839: I(dump->sql != NULL)
src/database.cc:840: I(vals != NULL)
src/database.cc:841: I(vals[0] != NULL)
src/database.cc:842: I(n == 1)
src/database.cc:1631: I(cancel_size <= delayed_writes_size)
I(cancel_size <= delayed_writes_size)
src/database.cc:1448: I(i != statement_cache.end())
multiple statements in query: %s
wanted %d columns got %d in query: %s
E(want_cols == any_cols || want_cols == ncol)
src/database.cc:1470: I(params == int(query.args.size()))
I(params == int(query.args.size()))
src/database.cc:1524: I(false)
src/database.cc:1549: I(bytes == 0)
wanted %d rows got %d in query: %s
E(want_rows == any_rows || want_rows == nrow)
this database already contains rosters
E(!imp->table_has_data("rosters"))
src/database.cc:615: I(!table_has_data("rosters") && !table_has_data("heights"))
I(!table_has_data("rosters") && !table_has_data("heights"))
database '%s' contains old-style revisions.
If you are a project leader or doing local testing:
  see the file UPGRADE for instructions on upgrading.
If you are not a project leader:
  wait for a leader to migrate project data, and then
  pull into a fresh database.
Sorry about the inconvenience.
database '%s' contains manifests but no revisions.
This is a very old database; it needs to be upgraded.
Please see 'http://wiki.monotone.ca/upgradefromchangesets/'
for details
database '%s' lacks some cached data.
Run '%s db regenerate_caches' to restore use of this database
src/database.cc:3658: I(sqlite3_create_function(sql(), "hex", -1, SQLITE_UTF8, NULL, &sqlite3_hex_fn, NULL, NULL) == 0)
I(sqlite3_create_function(sql(), "hex", -1, SQLITE_UTF8, NULL, &sqlite3_hex_fn, NULL, NULL) == 0)
src/database.cc:3665: I(sqlite3_create_function(sql(), "gunzip", -1, SQLITE_UTF8, NULL, &sqlite3_gunzip_fn, NULL, NULL) == 0)
I(sqlite3_create_function(sql(), "gunzip", -1, SQLITE_UTF8, NULL, &sqlite3_gunzip_fn, NULL, NULL) == 0)
src/database.cc:1589: I(delayed_files.empty())
src/database.cc:1590: I(roster_cache.all_clean())
src/database.cc:1601: I(!exclusive || transaction_exclusive)
I(!exclusive || transaction_exclusive)
src/database.cc:4921: I(!acquired)
src/database.cc:1939: I(!null_id(ident))
src/database.cc:1944: I(tid == ident)
INSERT INTO files (id, data) VALUES (?, ?)
INSERT INTO rosters (id, checksum, data) VALUES (?, ?, ?)
src/database.cc:1679: I(cr.first)
src/database.cc:1680: I(cr.second)
src/database.cc:197: I(cr.first)
src/database.cc:198: I(cr.second)
SELECT name, type, sql FROM sqlite_master WHERE type='table' AND sql NOT NULL AND name not like 'sqlite_stat%' ORDER BY name
SELECT name, type, sql FROM sqlite_master WHERE type='index' AND sql NOT NULL ORDER BY name
src/database.cc:4929: I(acquired)
src/database.cc:4939: I(acquired)
src/database.cc:1978: I(!null_id(ident))
src/database.cc:1979: I(!null_id(base))
INSERT INTO file_deltas (id, base, delta) VALUES (?, ?, ?)
src/database.cc:1994: I(!null_id(ident))
INSERT OR REPLACE INTO file_sizes(id, size) VALUES (?, ?)
INSERT INTO roster_deltas (id, base, checksum, delta) VALUES (?, ?, ?, ?)
DELETE FROM next_roster_node_number
DELETE FROM revision_certs WHERE revision_id = ? AND name = ?
DELETE FROM revision_certs WHERE revision_id = ? AND name = ? AND value = ?
DELETE FROM public_keys WHERE id = ?
src/database.cc:4476: I(epo.inner()().size() == constants::epochlen_bytes)
I(epo.inner()().size() == constants::epochlen_bytes)
INSERT OR REPLACE INTO branch_epochs VALUES(?, ?, ?)
DELETE FROM branch_epochs WHERE branch = ?
INSERT OR REPLACE INTO db_vars VALUES(?, ?, ?)
DELETE FROM db_vars WHERE domain = ? AND name = ?
file version '%s' already exists in db
 WHERE id = ? and base = ? LIMIT 1
src/database.cc:1869: I(ident() != "")
src/database.cc:1870: I(base() != "")
src/database.cc:2057: I(ident() != "")
src/database.cc:2065: I(!selected_path.empty())
src/database.cc:2072: I(vcache.fetch(curr, begin))
delta-reconstructed '%s' item does not match hash
src/database.cc:1888: I(cr.first)
src/database.cc:1890: I(cr.second)
SELECT checksum, data FROM rosters WHERE id = ?
SELECT checksum, delta FROM roster_deltas WHERE id = ? AND base = ?
roster_delta does not match hash
SELECT id FROM revisions WHERE id = ?
src/database.cc:2372: I(res.size() <= 1)
src/database.cc:2907: I(!null_id(id))
src/database.cc:2908: I(revision_exists(id))
src/database.cc:2909: I(height.valid())
INSERT INTO heights VALUES(?, ?)
src/database.cc:2851: I(!null_id(id))
SELECT data FROM revisions WHERE id = ?
src/database.cc:2856: I(res.size() == 1)
src/database.cc:2323: I(expected_mid == actual_mid)
src/database.cc:4717: I(cr.first)
src/database.cc:4718: I(cr.second)
src/database.cc:4727: I(roster)
src/database.cc:4728: I(marking)
src/lru_writeback_cache.hh:262: I(is_dirty(key))
revision contains incorrect manifest_id
E(rev.new_manifest == roster_manifest_id)
SELECT height FROM heights WHERE revision = ?
src/database.cc:2890: I(res.size() == 1)
src/database.cc:2900: I(height.valid())
SELECT height FROM heights WHERE height = ?
src/database.cc:2925: I((res.size() == 1) || (res.empty()))
I((res.size() == 1) || (res.empty()))
src/database.cc:3097: I(!null_id(new_id))
src/database.cc:3122: I(childnr < std::numeric_limits<u32>::max())
I(childnr < std::numeric_limits<u32>::max())
SELECT id FROM public_keys WHERE id = ?
src/database.cc:3343: I((res.size() == 1) || (res.empty()))
skipping existing public key %s
INSERT INTO public_keys(id, name, keydata) VALUES(?, ?, ?)
SELECT id FROM public_keys WHERE name = ?
src/database.cc:3357: I((res.size() == 1) || (res.empty()))
SELECT name, keydata FROM public_keys WHERE id = ?
SELECT keydata FROM public_keys WHERE id = ?
Failed to get RSA encrypting key
building verifier for %d-byte pub key
failed to get RSA verifying key for %s
 WHERE revision_id = ? AND name = ? AND value = ? AND keypair_id = ? AND signature = ?
src/database.cc:3555: I(res.empty() || res.size() == 1)
I(res.empty() || res.size() == 1)
SELECT name FROM public_keys WHERE id = ?
SELECT hash, revision_id, keypair_id FROM revision_certs WHERE name != 'branch'
SELECT revision_id FROM revision_certs WHERE hash = ?
src/database.cc:4058: I(res.empty() || res.size() == 1)
SELECT hash FROM branch_epochs WHERE hash = ?
src/database.cc:4467: I(res.size() == 1 || res.empty())
I(res.size() == 1 || res.empty())
src/database.cc:4449: I(epoch_exists(eid))
SELECT branch, epoch FROM branch_epochs WHERE hash = ?
src/database.cc:4455: I(res.size() == 1)
src/database.cc:4495: I(res.size() == 1)
src/database.cc:4496: I(res[0].size() == 1)
SELECT value FROM db_vars WHERE domain = ? AND name = ?
src/database.cc:4528: I(res.size() == 1)
SELECT 1 WHERE EXISTS(  SELECT 1 FROM db_vars   WHERE domain = ? AND name = ?)
src/database.cc:2512: I(!(old_id == new_id))
file preimage '%s' missing in db
unknown delta direction '%s'; assuming 'reverse'. Valid values are 'reverse', 'forward', 'both'.
src/database.cc:2556: I(old_tmp == old_data.inner())
I(old_tmp == old_data.inner())
src/database.cc:2978: I(!null_id(new_id))
revision '%s' already exists in db
src/database.cc:2987: I(rev.made_for == made_for_database)
I(rev.made_for == made_for_database)
missing prerequisite revision %s
src/database.cc:3020: I(!delta_entry_src(d).inner()().empty())
I(!delta_entry_src(d).inner()().empty())
src/database.cc:3021: I(!delta_entry_dst(d).inner()().empty())
I(!delta_entry_dst(d).inner()().empty())
missing prerequisite file pre-delta %s
missing prerequisite file post-delta %s
INSERT INTO revisions VALUES(?, ?)
INSERT INTO revision_ancestry VALUES(?, ?)
roster for revision '%s' already exists in db
SELECT DISTINCT branch FROM branch_leaves
SELECT DISTINCT value FROM revision_certs WHERE name = ?
SELECT base FROM roster_deltas WHERE id = ?
SELECT parent,child FROM revision_ancestry
SELECT child,parent FROM revision_ancestry
SELECT child FROM revision_ancestry WHERE parent = ?
SELECT revisions.id FROM revisions LEFT JOIN revision_ancestry ON revisions.id = revision_ancestry.parent WHERE revision_ancestry.child IS null
SELECT revision_id FROM revision_certs WHERE name = ? AND value = ?
DELETE FROM branch_leaves WHERE branch = ?
INSERT INTO branch_leaves (branch, revision_id) VALUES (?, ?)
src/database.cc:3233: I(revision_exists(rid))
src/database.cc:3236: I(children.empty())
DELETE from revision_certs WHERE revision_id = ?
SELECT branch FROM branch_leaves where revision_id = ?
DELETE from revision_ancestry WHERE child = ?
DELETE from heights WHERE revision = ?
DELETE from revisions WHERE id = ?
SELECT revision_id FROM branch_leaves WHERE branch = ?
SELECT id FROM revisions WHERE 
SELECT DISTINCT parent FROM revision_ancestry WHERE 
SELECT DISTINCT revision_id FROM revision_certs WHERE name = ?
SELECT DISTINCT revision_id FROM revision_certs WHERE name = ? AND CAST(value AS TEXT) GLOB ?
SELECT DISTINCT revision_id FROM revision_certs WHERE (name=? OR name=? OR name=?) AND CAST(value AS TEXT) GLOB ?
SELECT DISTINCT revision_id FROM revision_certs WHERE name = ? AND CAST(value AS TEXT) 
SELECT DISTINCT revision_id FROM revision_certs WHERE keypair_id = ?
src/database.cc:2681: I(!null_id(id))
SELECT parent FROM revision_ancestry WHERE child = ?
SELECT id FROM file_deltas WHERE 
SELECT id, name FROM public_keys WHERE 
SELECT branch, epoch FROM branch_epochs
src/database.cc:4438: I(epochs.find(decoded) == epochs.end())
I(epochs.find(decoded) == epochs.end())
SELECT domain, name, value FROM db_vars
src/database.cc:4514: I(vars.find(make_pair(domain, name)) == vars.end())
I(vars.find(make_pair(domain, name)) == vars.end())
SELECT delta FROM file_deltas WHERE base = ? AND id = ?
DELETE FROM branch_leaves WHERE branch = ? AND revision_id = ?
INSERT INTO branch_leaves(branch, revision_id) VALUES (?, ?)
revision cert on '%s' already exists in db
cert revision %s does not exist in db
the branch name
  '%s'
contains meta characters (one or more of '?,;*%%+{}[]!^') or
starts with a dash, which might cause malfunctions when used
in a netsync branch pattern.
If you want to undo this operation, please use the
'%s local kill_certs' command to delete the particular branch
cert and re-add a valid one.
SELECT revision_id, name, value, keypair_id, signature FROM 
 WHERE revision_id = ? AND name = ?
 WHERE revision_id = ? AND name = ? AND value = ?
SELECT revision_id, name, value, keypair_id, signature FROM revision_certs WHERE hash = ?
src/database.cc:4044: I(certs.size() == 1)
your database contains multiple keys named '%s'
SELECT id, name, value, keypair, signature FROM 
SELECT revision_id, name, value, keypair_id, signature, hash FROM revision_certs
UPDATE revision_certs SET keypair_id = ? WHERE hash = ?
DELETE FROM revision_certs WHERE hash = ?
checked %d certs, found %d bad, fixed %d, dropped %d
checked %d certs, found %d bad, fixed %d
SELECT revision_id, name, value, keypair_id, signature, hash FROM 
SELECT hash FROM revision_certs WHERE revision_id = ?
trust function liked %d signers of %s cert on revision %s
ignoring bad signature by '%s' on '%s'
ignoring unknown signature by '%s' on '%s'
trust function disliked %d signers of '%s' cert on revision %s
no database option given or options empty
src/database.cc:4983: I(opts.dbname_type == managed_db)
I(opts.dbname_type == managed_db)
E(lua.hook_get_default_database_locations(search_paths) && search_paths.size() > 0)
no path expansions found for '%s', using '%s'
one path expansion found for '%s': '%s'
the database alias '%s' has multiple ambiguous expansions:
creating new database_impl instance for %s
SELECT size FROM file_sizes WHERE id = ?
src/database.cc:2422: I(!res.empty())
SELECT id, size FROM file_sizes WHERE id IN(
src/database.cc:2472: I(!res.empty())
SELECT node FROM next_roster_node_number
INSERT INTO next_roster_node_number VALUES(1)
src/database.cc:4814: I(res.size() == 1)
UPDATE next_roster_node_number SET node = ?
SELECT 1 FROM sqlite_master LIMIT 0
src/database.cc:1017: I(res.size() == 1)
src/database.cc:1041: I(res.size() == 1)
length(id) + length(checksum) + length(data)
length(id) + length(checksum)+ length(base) + length(delta)
length(id) + length(base) + length(delta)
length(parent) + length(child)
length(hash) + length(revision_id) + length(name)+ length(value) + length(keypair_id)+ length(signature)
length(revision) + length(height)
creator code      : %s
schema version    : %s
counts:
  full rosters    : %s
  roster deltas   : %s
  full files      : %s
  file deltas     : %s
  file sizes      : %s
  revisions       : %s
  ancestry edges  : %s
  certs           : %s
  logical files   : %s
bytes:
  full rosters    : %s
  roster deltas   : %s
  full files      : %s
  file deltas     : %s
  file sizes      : %s
  revisions       : %s
  cached ancestry : %s
  certs           : %s
  heights         : %s
  total           : %s
database:
  page size       : %s
  cache size      : %s
checking timestamps differences of related revisions
src/database.cc:1200: I(!null_id(desc_rid))
timestamp correctness between revisions:
  correct dates   : %s edges
  equal dates     : %s edges
  incorrect dates : %s edges
  based on root   : %s edges
  missing dates   : %s edges
timestamp differences between revisions:
  mean            : %d sec
  min             : %d sec
  max             : %d sec
  1st percentile  : %s sec
  5th percentile  : %s sec
  10th percentile : %s sec
  25th percentile : %s sec
  50th percentile : %s sec
  75th percentile : %s sec
  90th percentile : %s sec
  95th percentile : %s sec
  99th percentile : %s sec
invalid date '%s' for revision %s; skipped
src/database.cc:2747: I(revision_exists(*i))
need exactly 1 arg to hex()
sqlite error: 
'%s' is the database file
src/database.cc
no database specified
E(!filename.empty())
database '%s' already exists
-journal
E(alias.find(':') == 0)
E(pure_alias.size() > 0)
.mtn
using default database '%s'
 BETWEEN ? AND ?
database '%s' does not exist
delayed_files
src/lru_writeback_cache.hh
I(_dirty.empty())
I(!__sql)
I(__sql)
PRAGMA page_size=8192
PRAGMA user_version = %u;
statement cache statistics
prepared %d statements
%d executions of %s
I(_curr_size == 0)
_index
I(liter != _list.begin())
I(miter != _index.end())
I(curr_size > 0)
I(exists(key))
I(acquired)
I(*i >= 10 && *i < 127)
I(dump != NULL)
I(dump->sql != NULL)
I(vals != NULL)
I(vals[0] != NULL)
I(vals[1] != NULL)
I(vals[2] != NULL)
I(n == 3)
table
I(string(vals[1]) == "table")
SELECT * FROM 
INSERT INTO %s VALUES(
NULL
I(string(vals[1]) == "index")
I(n == 1)
vector::_M_insert_aux
I(i != statement_cache.end())
prepared statement %s
E(*tail == 0)
binding %d parameters for %s
binding %d with value '%s'
param - 1
query.args
null result in query: %s
E(datatype != SQLITE_NULL)
I(bytes == 0)
SELECT 1 FROM 
E(caches_are_filled)
database schema version: %s
gunzip
' -> 
 rows
I(delayed_files.empty())
I(roster_cache.all_clean())
BEGIN EXCLUSIVE
BEGIN DEFERRED
I(!acquired)
ROLLBACK
I(!null_id(ident))
I(tid == ident)
I(cr.first)
I(cr.second)
_dirty
COMMIT
BEGIN EXCLUSIVE;
PRAGMA user_version;
COMMIT;
DELETE FROM 
 WHERE id = ?
DELETE FROM revisions
DELETE FROM revision_ancestry
DELETE FROM revision_certs
DELETE FROM branch_leaves
DELETE FROM manifests
DELETE FROM manifest_deltas
DELETE FROM rosters
DELETE FROM roster_deltas
DELETE FROM heights
DELETE FROM file_sizes
pub_id
known-workspaces
 = ? LIMIT 1
file_deltas
PRAGMA page_size
PRAGMA default_cache_size
SELECT data FROM 
I(ident() != "")
I(base() != "")
SELECT delta FROM 
 WHERE id = ? AND base = ?
I(!selected_path.empty())
I(vcache.fetch(curr, begin))
following delta %s -> %s
E(final == ident)
roster does not match hash
E(calculated == checksum)
I(res.size() <= 1)
I(!null_id(id))
I(revision_exists(id))
I(height.valid())
I(res.size() == 1)
revision does not match hash
E(id == tmp)
I(expected_mid == actual_mid)
I(roster)
I(marking)
I(is_dirty(key))
*ros_writeable
*mm_writeable
roster_manifest_id
I(!null_id(new_id))
candidate
putting public key %s
EME1(SHA-1)
alleged_text
E(pub_key)
EMSA3(SHA1)
checking %d-byte signature
SELECT revision_id FROM 
INSERT INTO 
 VALUES(?, ?, ?, ?, ?, ?)
I(epoch_exists(eid))
idx(res, 0)
PRAGMA integrity_check
I(res[0].size() == 1)
I(!(old_id == new_id))
dropping delta '%s' -> '%s'
reverse
delta-direction
forward
new_id
dropping revision %s
missing prerequisite file %s
SELECT id FROM 
SELECT base FROM 
I(revision_exists(rid))
I(children.empty())
Killing revision %s locally
child
SELECT id FROM files WHERE 
infinity
INFINITY
SELECT TOTAL(
dropping cert
?,;*%%+{}[]!^
SELECT id FROM public_keys
 WHERE revision_id = ?
 WHERE name = ?
I(certs.size() == 1)
checking
checked
fixed
 WHERE name = ? AND value = ?
manifest_certs
I(!res.empty())
null)
SELECT COUNT(*) FROM 
PRAGMA user_version
length(id) + length(data)
length(id) + length(size)
not set
%s (0x%08x)
0x%08x
fetching revision dates
analyzing revision dates
fetching ancestry map
I(!null_id(desc_rid))
   rev %s -> rev %s
   but date %s ! -> %s
   (difference: %d seconds)
I(revision_exists(*i))
void database_path_helper::get_database_path(const options&, system_path&, database::dboptions)
void database::put_roster(const revision_id&, const revision_t&, const roster_t_cp&, const marking_map_cp&)
void database_impl::get_certs(const cert_name&, std::vector<cert>&, const string&)
void database_impl::get_certs(const id&, std::vector<cert>&, const string&)
void database_impl::get_oldstyle_certs(const id&, std::vector<cert>&, const string&)
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = Botan::PK_Verifier; typename boost::detail::sp_member_access<T>::type = Botan::PK_Verifier*]
void boost::shared_ptr<T>::reset(Y*) [with Y = Botan::PK_Verifier; T = Botan::PK_Verifier]
cert_status database::check_signature(const key_id&, const string&, const rsa_sha1_signature&)
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = Botan::RSA_PublicKey; typename boost::detail::sp_dereference<T>::type = Botan::RSA_PublicKey&]
void database::encrypt_rsa(const key_id&, const string&, rsa_oaep_sha_data&)
void database::delete_public_key(const key_id&)
bool database::put_key(const key_name&, const rsa_pub_key&)
void database::get_key(const key_id&, rsa_pub_key&)
void database::get_pubkey(const key_id&, key_name&, rsa_pub_key&)
bool database::public_key_exists(const key_name&)
bool database::public_key_exists(const key_id&)
{anonymous}::query_param {anonymous}::text(const string&)
void database::put_roster_for_revision(const revision_id&, const revision_t&)
void database::put_height_for_revision(const revision_id&, const revision_t&)
bool database::put_revision(const revision_id&, const revision_t&)
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = cset; typename boost::detail::sp_dereference<T>::type = cset&]
void database::deltify_revision(const revision_id&)
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const node; typename boost::detail::sp_member_access<T>::type = const node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const roster_t; typename boost::detail::sp_member_access<T>::type = const roster_t*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = roster_t; typename boost::detail::sp_dereference<T>::type = roster_t&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = roster_t; typename boost::detail::sp_member_access<T>::type = roster_t*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = marking_map; typename boost::detail::sp_dereference<T>::type = marking_map&]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = database_impl; typename boost::detail::sp_dereference<T>::type = database_impl&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = delta_applicator; typename boost::detail::sp_member_access<T>::type = delta_applicator*]
void database_impl::write_delayed_file(const file_id&, const file_data&)
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const roster_t; typename boost::detail::sp_dereference<T>::type = const roster_t&]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const marking_map; typename boost::detail::sp_dereference<T>::type = const marking_map&]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = ticker; typename boost::detail::sp_dereference<T>::type = ticker&]
void boost::shared_ptr<T>::reset(Y*) [with Y = ticker; T = ticker]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = database_impl; typename boost::detail::sp_member_access<T>::type = database_impl*]
NTM_
N5Botan13RSA_PublicKeyE
20reconstruction_graph
9rev_graph
6MusingIK4fileI2idEE
6MusingI4fileI2idEE
38file_and_manifest_reconstruction_graph
27roster_reconstruction_graph
N13database_impl9extractorE
N13database_impl18markings_extractorE
N13database_impl22file_content_extractorE
6MusingI10rev_heightE
6MusingI8manifestI2idEE
6MusingIK3keyI2idEE
6MusingIK8key_nameE
6MusingIK11rsa_pub_keyE
6MusingIK2idE
6MusingIK9cert_nameE
16rev_height_graph
6MusingISt6vectorI11system_pathSaIS1_EEE
N5boost6detail17sp_counted_impl_pI13database_implEE
N5boost6detail17sp_counted_impl_pIN5Botan10Public_KeyEEE
N5boost6detail17sp_counted_impl_pI6tickerEE
N5boost6detail17sp_counted_impl_pIN5Botan11PK_VerifierEEE
N5boost3_bi6bind_tIbPFbPK9project_tP9lua_hooksRKSt3setI3keyI2idESt4lessISA_ESaISA_EERKS9_RK9cert_nameRK10cert_valueENS0_5list6INS0_5valueIS4_EENSS_IS6_EENS_3argILi1EEENSV_ILi2EEENSV_ILi3EEENSV_ILi4EEEEEEE
N5boost3_bi6bind_tIbPFbP8databaseP9lua_hooksRKSt3setI3keyI2idESt4lessIS9_ESaIS9_EERKS8_RK9cert_nameRK10cert_valueENS0_5list6INS0_5valueIS3_EENSR_IS5_EENS_3argILi1EEENSU_ILi2EEENSU_ILi3EEENSU_ILi4EEEEEEE
N5boost6detail16basic_pointerbufIcSt15basic_streambufIcSt11char_traitsIcEEEE
N5boost6detail17basic_unlockedbufISt15basic_streambufIcSt11char_traitsIcEEcEE
?ffffff
?extraneous data in key store
src/key_store.cc
invalid data in key file
E(ident == expected_ident)
key dir '%s' does not exist
reading key dir '%s'
reading keys from file '%s'
too many failed passphrases
E(i++ < 2)
@%^_-+=.,;~[]
/keys
no available keystore found
I(found)
%d-byte private key
I(pkcs8_key)
E(priv_key)
privkey_cache
E(agent.connected())
putting key pair '%s'
skipping existing key pair %s
I(read_packets(is, val))
E(i != s->keys.end())
EMSA3(SHA-1)
E(ssh_sig == sig_string)
I(s != cert_unknown)
E(s == cert_ok)
key '%s' already exists
E(!exists)
generating key-pair '%s'
storing key-pair %s in '%s/'
storing public key %s in '%s'
key '%s' has hash '%s'
<std::ostream>
ARC4
PRIVATE KEY
I(priv_key)
E(cycles <= 3)
skipping id check before deleting old private key in '%s'
reading key pair '%s' from key store for validation
expected key with id %s in key file '%s', got key with id %s
ignored invalid key file '%s' in key store
enter new passphrase for key ID [%s] (%s): 
enter passphrase for key ID [%s] (%s): 
confirm passphrase for key ID [%s] (%s): 
passphrases do not match, try again
writing key '%s' to file '%s' in dir '%s'
E(app.opts.key_dir_given || app.opts.key_dir != system_path(get_default_keydir(), origin::user) || app.opts.conf_dir_given || !app.opts.no_default_confdir)
src/key_store.cc:312: I(found)
src/key_store.cc:289: I(found)
no key pair %s found in key store '%s'
E(maybe_get_key_pair(id, name, kp))
src/key_store.cc:642: I(pkcs8_key)
failed to extract RSA private key from PKCS#8 keypair
failed to load key with no passphrase: %s
decrypt_private_key: failure %d to load encrypted key: %s
failed to decrypt old private RSA key, probably incorrect passphrase or missing 'get_passphrase' lua hook
E(cycles < 3 && !non_interactive)
ssh-agent has key '%s' loaded, skipping internal cache
Botan error decrypting data: '%s'
no ssh-agent is available, cannot add key %s
reading key pair '%s' from key store
key store has multiple copies of the key with id %s
E(kss.put_key_pair_memory(full_key_info(ident, key_info(name, kp))))
successfully read key pair %s from key store
src/key_store.cc:473: I(read_packets(is, val))
no key pair '%s' found in key store '%s'
PBE-PKCS5v20(SHA-1,TripleDES/CBC)
E(agent.connected() || s->ssh_sign_mode != "only")
make_signature: building %d-byte pub key
Failed to get monotone RSA public key
make_signature: monotone and ssh-agent keys do not match, will use monotone signing
E(ssh_sig.length() > 0 || s->ssh_sign_mode != "only")
make_signature: adding private key (%s) to ssh-agent
make_signature: signatures from ssh-agent and monotone are the same
make_signature: produced %d-byte signature
src/key_store.cc:1010: I(s != cert_unknown)
make_signature: signature is not valid
you have chosen to sign only with ssh-agent but ssh-agent does not seem to be running
you don't seem to have your monotone key imported 
make_signature: ssh signature (%i) != monotone signature (%i)
ssh signature     : %s
monotone signature: %s
generated %d-byte public key
generated %d-byte (encrypted) private key
src/key_store.cc:1042: I(s->maybe_get_key_pair(id, name, kp))
I(s->maybe_get_key_pair(id, name, kp))
src/key_store.cc:1149: I(priv_key)
public and private keys for %s do not match
migrate_old_key_pair: failure %d to load old private key: %s
failed to decrypt old private RSA key, probably incorrect passphrase
converting old-format private key %s
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = Botan::PK_Signer; typename boost::detail::sp_member_access<T>::type = Botan::PK_Signer*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = Botan::RSA_PrivateKey; typename boost::detail::sp_dereference<T>::type = Botan::RSA_PrivateKey&]
T& boost::scoped_ptr<T>::operator*() const [with T = ssh_agent]
void boost::scoped_ptr<T>::reset(T*) [with T = ssh_agent]
void boost::shared_ptr<T>::reset(Y*) [with Y = Botan::Private_Key; T = Botan::Private_Key]
void key_store::get_key_pair(const key_id&, key_name&, keypair&)
void key_store::get_key_pair(const key_id&, keypair&)
T* boost::scoped_ptr<T>::operator->() const [with T = key_store_state]
*N12_GLOBAL__N_19keyreaderE
13dirent_ignore
20key_delete_validator
N5boost6detail17sp_counted_impl_pIN5Botan9PK_SignerEEE
N5boost6detail17sp_counted_impl_pIN5Botan11Private_KeyEEE
string not long enough to get a long
ssh_agent: get_long: %u %u %u %u
ssh_agent: get_string_from_buf: buf length: %u, loc: %u
ssh_agent: get_string_from_buf: len: %u
ssh_agent: length (%i) of buf less than loc (%u) + len (%u)
ssh_agent: get_string_from_buf: out length: %u
ssh_agent: put_long_into_buf: long: %u, buf len: %i
ssh_agent: long_to_buf: %u %u %u %u
ssh_agent: put_long_into_buf: buf len now %i
ssh_agent: put_string_into_buf: str len %i, buf len %i
ssh_agent: put_string_into_buf: buf len now %i
ssh_agent: fetch_packet: zero-length packet from ssh-agent
ssh_agent: fetch_packet: response len %u
ssh_agent: put_bigint_into_buf: bigint.bytes(): %u, bigint: %s
ssh_agent: put_bigint_into_buf: buf len now %i
ssh_agent: get_keys: attempted to sign data when not connected
ssh_agent: sign_data: key e: %s, n: %s, data len: %i
ssh_agent: put_public_key_into_buf: key e: %s, n: %s
ssh_agent: put_public_key_into_buf: buf len now %i
ssh_agent: sign_data: data_out length: %u
ssh_agent: sign_data: packet_in type (%u) != 14
ssh_agent: sign_data: signed data length: %u (%u)
ssh_agent: sign_data: type (%u), '%s'
ssh_agent: sign_data: output length %u
ssh_agent: sign_data: not all or too many signature bytes consumed, location (%u), length (%i)
E(full_sig.length() == full_sig_loc)
ssh_agent: sign_data: not all or too many packet bytes consumed, location (%u), length (%i)
E(packet_in.length() == packet_in_loc)
ssh_agent: add_identity: attempted to add a key when not connected
ssh_agent: add_identity: key e: %s, n: %s, comment len: %i
ssh_agent: put_private_key_into_buf: key e: %s, n: %s
ssh_agent: put_private_key_into_buf: buf len now %i
ssh_agent: add_identity: response packet of unexpected size (%u)
ssh_agent: packet type (%u) != 6
ssh_agent: get_keys: stream not initialized, no agent
ssh_agent: packet type (%u) != 12
ssh_agent: get_keys: not all or too many key bytes consumed, location (%u), length (%i)
ssh_agent: ignoring key of type '%s'
ssh_agent: packet length %u, packet loc %u, key length %u, key loc, %u
ssh_agent: comment_len: %u, comment: %s
ssh_agent: get_keys: not all or too many packet bytes consumed, location (%u), length (%i)
E(packet.length() == packet_loc)
has_key: building %d-byte pub key
has_key: Failed to get monotone RSA public key
src/ssh_agent.cc
E(buf.length() >= loc + 4)
E(loc + len <= buf.length())
E(len > 0)
E(connected())
ssh-rsa
E(s->connected())
E(packet_in.length() == 1)
E(packet_in.at(0) == 6)
E(packet.at(0) == 12)
ssh_agent: %u keys
ssh_agent: getting key # %u
ssh_agent: type: %s
ssh_agent: RSA
ssh_agent: e: %s, len %u
ssh_agent: n: %s, len %u
E(key.length() == key_loc)
has_key: key found
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = Botan::RSA_PublicKey; typename boost::detail::sp_dereference<T>::type = Botan::RSA_PublicKey&]
T* boost::scoped_ptr<T>::operator->() const [with T = ssh_agent_state]
the key %s stored in your database does
not match the version in your local key store!
E(keys_match(name, pub_key, name, priv_key.pub))
E(key_requiredness == key_optional || !all_privkeys.empty())
E(key_requiredness == key_optional || all_privkeys.size() < 2)
you have no private key to make signatures with.
Perhaps you need to 'genkey <your email>'
you have multiple private keys.
Pick one to use for signatures by adding '-k<keyname>' to your command
a key is required for this operation, but the '--key' option was given with an empty argument
src/keys.cc
E(keys.key_pair_exists(id))
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = netsync_connection_info; typename boost::detail::sp_member_access<T>::type = netsync_connection_info*]
malformed packet: invalid base64 block
E(!s.empty() && s.find_first_not_of(constants::legal_base64_bytes) == string::npos)
malformed packet: invalid identifier
E(id.size() == constants::idlen && id.find_first_not_of(constants::legal_id_bytes) == string::npos)
E(!k.empty() && k.find_first_not_of(constants::legal_key_name_bytes) == string::npos)
malformed packet: invalid public key data for '%s': %s
malformed packet: invalid private key data for '%s': %s
malformed packet: invalid key name
src/packet.cc:428: I(start <= haystack.size())
malformed packet: too many arguments in header
E(!cn.empty() && cn.find_first_not_of(constants::legal_cert_name_bytes) == string::npos)
E(s.find_first_not_of(constants::legal_base64_bytes) == string::npos)
malformed packet: invalid cert name
Passphrase required
[fdata 
[end]
[fdelta 
        
[rdata 
[rcert 
[privkey 
[pubkey 
[keypair 
read %s data packet
src/packet.cc
read keypair packet
basic_string::basic_string
[end]
I(start <= haystack.size())
read delta packet
E(next.empty())
rcert
read cert packet
read pubkey packet
keypair
read privkey packet
unknown packet type '%s'
13packet_writer
8Dummy_UI
src/key_packet.cc:300: I(start <= haystack.size())
malformed key_packet: invalid base64 block
malformed key_packet: invalid public key data for '%s': %s
malformed key_packet: invalid private key data for '%s': %s
malformed key_packet: invalid key name
src/key_packet.cc
read pubkey key_packet
read keypair key_packet
read privkey key_packet
unknown key_packet type: '%s'
17key_packet_writer
 failed, after reading RCS file
parse failure %d:%d: expecting %s, got %s with value '%s'
parse failure %d:%d: expecting word '%s'
TOK_NUM
TOK_SEMI
TOK_COLON
munmapping 
close of 
head
access
symbols
locks
strict
expand
desc
stat of 
open of 
mmap of 
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = rcs_deltatext; typename boost::detail::sp_member_access<T>::type = rcs_deltatext*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = rcs_delta; typename boost::detail::sp_member_access<T>::type = rcs_delta*]
N5boost6detail17sp_counted_impl_pI9rcs_deltaEE
N5boost6detail17sp_counted_impl_pI13rcs_deltatextEE
src/xdelta.cc
I(p < pieces.size())
I(old_pos < old.size())
I(i != delta.end())
I(*i == '\n')
I(*i == 'C')
I(i == delta.end())
I(lo != in.end())
I(seglen > 0)
I(src_vpos >= lo->vpos)
I(ppos + offset >= ppos)
I(src_len >= seglen)
I(src_vpos == src_final)
I(dst_vpos == dst_final)
src/adler32.hh
I(count < 255)
I(tpos < a.size())
I(tpos + tlen <= a.size())
I(new_lo <= new_hi)
I(apos + alen <= a.size())
I(lo < b.size())
src/xdelta.cc:531: I(p < pieces.size())
src/xdelta.cc:799: I(old_pos < old.size())
src/xdelta.cc:410: I(i != delta.end())
src/xdelta.cc:412: I(i != delta.end())
src/xdelta.cc:413: I(*i == '\n')
src/xdelta.cc:415: I(i != delta.end())
src/xdelta.cc:416: I((i - delta.begin()) + len <= delta.size())
I((i - delta.begin()) + len <= delta.size())
src/xdelta.cc:426: I(*i == 'C')
src/xdelta.cc:428: I(i != delta.end())
src/xdelta.cc:430: I(i != delta.end())
src/xdelta.cc:435: I(i != delta.end())
src/xdelta.cc:436: I(*i == '\n')
src/xdelta.cc:439: I(i == delta.end())
src/xdelta.cc:770: I(old_pos < old.size())
src/xdelta.cc:606: I(lo != in.end())
src/xdelta.cc:630: I(seglen > 0)
src/xdelta.cc:631: I(src_vpos >= lo->vpos)
src/xdelta.cc:632: I(src_vpos + seglen <= lo->vpos + lo->len)
I(src_vpos + seglen <= lo->vpos + lo->len)
src/xdelta.cc:500: I(ppos + offset >= ppos)
src/xdelta.cc:501: I(ppos + offset + ln <= ppos + len)
I(ppos + offset + ln <= ppos + len)
src/xdelta.cc:637: I(src_len >= seglen)
src/xdelta.cc:639: I(out.back().vpos + out.back().len == dst_vpos)
I(out.back().vpos + out.back().len == dst_vpos)
src/xdelta.cc:642: I(src_vpos == src_final)
src/xdelta.cc:643: I(dst_vpos == dst_final)
computing binary delta instructions
src/adler32.hh:54: I(count < 255)
src/xdelta.cc:123: I(tpos < a.size())
src/xdelta.cc:124: I(tpos + tlen <= a.size())
src/xdelta.cc:158: I(a[apos - 1] == *(delta.back().payload.rbegin()))
I(a[apos - 1] == *(delta.back().payload.rbegin()))
src/xdelta.cc:176: I(memcmp(a.data() + apos, b.data() + bpos, alen) == 0)
I(memcmp(a.data() + apos, b.data() + bpos, alen) == 0)
src/xdelta.cc:249: I(next < b.size() && (lo + badvance - 1) < b.size())
I(next < b.size() && (lo + badvance - 1) < b.size())
src/xdelta.cc:276: I(new_lo <= new_hi)
src/xdelta.cc:283: I(apos + alen <= a.size())
src/xdelta.cc:286: I(lo < b.size())
computed binary delta instructions
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = std::vector<chunk>; typename boost::detail::sp_member_access<T>::type = std::vector<chunk>*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = delta_applicator; typename boost::detail::sp_member_access<T>::type = delta_applicator*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = std::vector<chunk>; typename boost::detail::sp_dereference<T>::type = std::vector<chunk>&]
16delta_applicator
17simple_applicator
20piecewise_applicator
32inverse_delta_writing_applicator
N5boost6detail17sp_counted_impl_pI17simple_applicatorEE
N5boost6detail17sp_counted_impl_pISt6vectorI5chunkSaIS3_EEEE
N5boost6detail17sp_counted_impl_pI20piecewise_applicatorEE
N5boost6detail17sp_counted_impl_pI32inverse_delta_writing_applicatorEE
cannot use the empty sqlite database '%s'
(monotone databases must be created with '%s db init')
'%s' does not appear to be a monotone database
'%s' appears to be a monotone database, but this version of
monotone does not recognize its schema.
You probably need a newer version of monotone.
need exactly 1 arg to unbase64()
invalid migration event (null pointer)
invalid migration event, index %ld/%lu
migration %ld/%lu: %s, %s, from %s
unhex() result is the wrong length
make sure database and containing directory are writeable
and you have not run out of disk space
(if this is a database last used by monotone 0.16 or older,
you must follow a special procedure to make it usable again.
see the file UPGRADE, in the distribution, for instructions.)
src/migrate_schema.cc:126: I(s)
src/migrate_schema.cc:131: I(sqlite3_column_count(s) == ncols)
I(sqlite3_column_count(s) == ncols)
src/migrate_schema.cc:157: I(false)
src/migrate_schema.cc:191: I(stmt.step() == false)
src/migrate_schema.cc:130: I(*after == 0)
src/migrate_schema.cc:201: I(stmt.step() == true)
src/migrate_schema.cc:203: I(stmt.step() == false)
SELECT sql FROM sqlite_master WHERE (type = 'table' OR type = 'index') AND sql IS NOT NULL AND name not like 'sqlite_stat%' ORDER BY name
/usr/include/boost/token_iterator.hpp
c3a13c60edc432f9a7739f8a260565d77112c86e
SELECT COUNT(*) FROM sqlite_master
src/migrate_schema.cc:1132: I(db != NULL)
src/migrate_schema.cc:1149: I(false)
src/migrate_schema.cc:1181: I(db != NULL)
database '%s' is laid out according to an old schema.
Try '%s db migrate' to upgrade
(this is irreversible; you may want to make a backup copy first)
E(cat != SCHEMA_MIGRATION_NEEDED)
SELECT private_keys.id, private_keys.keydata, public_keys.keydata  FROM private_keys LEFT OUTER JOIN public_keys  ON private_keys.id = public_keys.id
moving key '%s' from database to '%s'
src/migrate_schema.cc:1314: I(db != NULL)
cannot test migration from unknown schema %s
E(m->migrator_sql || m->migrator_func)
testing migration from %s to %s
 in database '%s'
successful migration to schema %s
src/migrate_schema.cc:230: I(committed == false)
src/migrate_schema.cc:1204: I(db != NULL)
no migration performed; database schema already up-to-date
src/migrate_schema.cc:1256: I(id == m->id)
src/migrate_schema.cc:1257: I(!m->migrator_sql || !m->migrator_func)
I(!m->migrator_sql || !m->migrator_func)
src/migrate_schema.cc:1272: I(m < migration_events + n_migration_events)
I(m < migration_events + n_migration_events)
committing changes to database
src/migrate_schema.cc:1294: I(regen_type != regen_none)
CREATE TABLE branch_leaves
        (
        branch not null,        -- joins with revision_certs.value
        revision_id not null,   -- joins with revisions.id
        unique(branch, revision_id)
        )
select child, parent from revision_ancestry where parent is not null
select revision_id, value from revision_certs where name = 'branch'
insert into branch_leaves(branch, revision_id) values(X'
edb5fa6cef65bcb7d0c612023d267c3aeaa1e57a
f042f3c4d0a4f98f6658cbaf603d376acf88ff4b
8929e54f40bf4d3b4aea8b037d2c9263e82abdf4
c1e86588e11ad07fa53e5d294edc043ce1d4005a
40369a7bda66463c5785d160819ab6398b9d44f4
e372b508bea9b991816d1c74680f7ae10d2a6d94
1509fd75019aebef5ac3da3a5edf1312393b70e9
bd86f9a90b5d552f0be1fa9aee847ea0f317778b
1db80c7cee8fa966913db1a463ed50bf1b0e5b0e
9d2b5d7b86df00c30ac34fe87a3c20f1195bb2df
ae196843d368d042f475e3dadfed11e9d7f9f01e
48fd5d84f1e5a949ca093e87e5ac558da6e5956d
fe48b0804e0048b87b4cea51b3ab338ba187bdc2
7ca81b45279403419581d7fde31ed888a80bd34e
212dd25a23bfd7bfe030ab910e9d62aa66aa2955
9c8d5a9ea8e29c69be6459300982a68321b0ec12
0c956abae3e52522e4e0b7c5cbe7868f5047153e
1f60cec1b0f6c8c095dc6d0ffeff2bd0af971ce1
src/migrate_schema.cc
E(cat != SCHEMA_EMPTY)
E(cat != SCHEMA_NOT_MONOTONE)
E(cat != SCHEMA_TOO_NEW)
SCHEMA_MATCHES
SCHEMA_MIGRATION_NEEDED
SCHEMA_TOO_NEW
SCHEMA_NOT_MONOTONE
SCHEMA_EMPTY
schema_mismatch_case(%d)
upgrade_changesetify
upgrade_rosterify
upgrade_regen_caches
upgrade_none
upgrade_regime(%d)
SQL only
codeful
none (current)
need exactly 1 arg to unhex()
need at least 1 arg to sha1()
sqlite error: %d: %s
sqlite error: %s
executing SQL '%s'
after
I(s)
success
I(stmt.step() == false)
I(*after == 0)
I(stmt.step() == true)
(),;
valid_
 PRAGMA user_version = 
calculated schema id %s
I(db != NULL)
%s (usable)
%s (migration needed)
%s (too new, cannot use)
%s (not a monotone database)
%s (database has no tables!)
DROP TABLE private_keys;
sha1_nows
sha1
unbase64
unhex
E(m >= migration_events)
schema %s is up to date
I(committed == false)
regime
calculating migration...
migrating data...
I(id == m->id)
migrated to schema %s
optimizing database
VACUUM
I(regen_type != regen_none)
', X'
migration_status migrate_sql_schema(sqlite3*, key_store&, const system_path&)
void boost::token_iterator<TokenizerFunc, Iterator, Type>::increment() [with TokenizerFunc = boost::char_separator<char>; Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Type = std::__cxx11::basic_string<char>]
const Type& boost::token_iterator<TokenizerFunc, Iterator, Type>::dereference() const [with TokenizerFunc = boost::char_separator<char>; Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Type = std::__cxx11::basic_string<char>]
{anonymous}::sql::sql(sqlite3*, int, const char*, const char**)
CREATE TABLE file_sizes
        (
        id primary key,     -- joins with files.id or file_deltas.id
        size not null       -- the size of the file in byte
        );
DROP INDEX revision_certs__revision_id;
CREATE INDEX revision_certs__revnameval ON revision_certs (revision_id,
       name, value, keypair_id, signature);
ALTER TABLE public_keys rename to public_keys_tmp;
CREATE TABLE public_keys
  ( id primary key,         -- hash of remaining fields separated by ":"
    name not null,          -- key identifier chosen by user
    keydata not null        -- RSA public params
  );
INSERT INTO public_keys (id, name, keydata)   SELECT hash, id, keydata FROM public_keys_tmp;
DROP TABLE public_keys_tmp;
ALTER TABLE revision_certs rename to revision_certs_tmp;
CREATE TABLE revision_certs
  ( hash not null unique,   -- hash of remaining fields separated by ":"
    revision_id not null,   -- joins with revisions.id
    name not null,          -- opaque string chosen by user
    value not null,         -- opaque blob
    keypair_id not null,    -- joins with public_keys.id
    signature not null,     -- RSA/SHA1 signature of "[name@id:val]"
    unique(name, value, revision_id, keypair_id, signature)
  );
CREATE INDEX revision_certs__revision_id ON revision_certs (revision_id);
INSERT INTO revision_certs(hash, revision_id, name, value, keypair_id, signature)
SELECT a.hash, a.id, a.name, a.value, b.id, a.signature
FROM revision_certs_tmp a JOIN public_keys b
ON a.keypair = b.name;
DROP TABLE revision_certs_tmp;
UPDATE files             SET id=unhex(id);UPDATE file_deltas       SET id=unhex(id), base=unhex(base);UPDATE revisions         SET id=unhex(id);UPDATE revision_ancestry SET parent=unhex(parent), child=unhex(child);UPDATE heights           SET revision=unhex(revision);UPDATE rosters           SET id=unhex(id), checksum=unhex(checksum);UPDATE roster_deltas     SET id=unhex(id), base=unhex(base),                              checksum=unhex(checksum);UPDATE public_keys       SET hash=unhex(hash);ALTER TABLE revision_certs RENAME TO tmp;
CREATE TABLE revision_certs  ( hash not null unique,   -- hash of remaining fields separated by ":"
    id not null,            -- joins with revisions.id
    name not null,          -- opaque string chosen by user
    value not null,         -- opaque blob
    keypair not null,       -- joins with public_keys.id
    signature not null,     -- RSA/SHA1 signature of "[name@id:val]"
    unique(name, value, id, keypair, signature)
  );INSERT INTO revision_certs SELECT unhex(hash), unhex(id), name, value, keypair, signature FROM tmp;DROP TABLE tmp;CREATE INDEX revision_certs__id ON revision_certs (id);ALTER TABLE branch_epochs RENAME TO tmp;CREATE TABLE branch_epochs  ( hash not null unique,         -- hash of remaining fields separated by ":"
    branch not null unique,       -- joins with revision_certs.value
    epoch not null                -- random binary id
  );INSERT INTO branch_epochs SELECT unhex(hash), branch, unhex(epoch) FROM tmp;DROP TABLE tmp;UPDATE manifests         SET id=unhex(id);UPDATE manifest_deltas   SET id=unhex(id), base=unhex(base);UPDATE manifest_certs    SET id=unhex(id), hash=unhex(hash);
CREATE INDEX heights__height ON heights (height);
CREATE TABLE heights  ( revision not null,       -- joins with revisions.id
    height not null, -- complex height, array of big endian u32 integers
    unique(revision, height)  );
DROP TABLE rosters;DROP TABLE roster_deltas;DROP TABLE revision_roster;CREATE TABLE rosters  ( id primary key,    -- a revision id
    checksum not null, -- checksum of 'data', to protect against                          disk corruption
    data not null      -- compressed, encoded contents of the roster
  );CREATE TABLE roster_deltas  ( id primary key,    -- a revision id
    checksum not null, -- checksum of 'delta', to protect against                          disk corruption
    base not null,     -- joins with either rosters.id or roster_deltas.id
    delta not null     -- rdiff to construct current from base
  );
ALTER TABLE files RENAME TO tmp;CREATE TABLE files  ( id primary key,   -- strong hash of file contents
    data not null     -- compressed contents of a file
  );INSERT INTO files SELECT id, unbase64(data) FROM tmp;DROP TABLE tmp;ALTER TABLE file_deltas RENAME TO tmp;CREATE TABLE file_deltas  ( id not null,      -- strong hash of file contents
    base not null,    -- joins with files.id or file_deltas.id
    delta not null,   -- compressed rdiff to construct current from base
    unique(id, base)  );INSERT INTO file_deltas SELECT id, base, unbase64(delta) FROM tmp;DROP TABLE tmp;UPDATE manifests       SET data=unbase64(data);UPDATE manifest_deltas SET delta=unbase64(delta);UPDATE rosters         SET data=unbase64(data) ;UPDATE roster_deltas   SET delta=unbase64(delta);UPDATE db_vars         SET value=unbase64(value), name=unbase64(name);UPDATE public_keys     SET keydata=unbase64(keydata);UPDATE revision_certs  SET value=unbase64(value),                           signature=unbase64(signature);UPDATE manifest_certs  SET value=unbase64(value),                           signature=unbase64(signature);UPDATE revisions       SET data=unbase64(data);UPDATE branch_epochs   SET branch=unbase64(branch);
CREATE TABLE rosters  ( id primary key,   -- strong hash of the roster
    data not null     -- compressed, encoded contents of the roster
  );CREATE TABLE roster_deltas  ( id not null,      -- strong hash of the roster
    base not null,    -- joins with either rosters.id or roster_deltas.id
    delta not null,   -- rdiff to construct current from base
    unique(id, base)  );CREATE TABLE revision_roster  ( rev_id primary key, -- joins with revisions.id
    roster_id not null -- joins with either rosters.id or roster_deltas.id
  );CREATE TABLE next_roster_node_number  ( node primary key        -- only one entry in this table, ever
  );
CREATE INDEX revision_ancestry__child ON revision_ancestry (child);CREATE INDEX revision_certs__id ON revision_certs (id);CREATE INDEX revision_certs__name_value ON revision_certs (name, value);
CREATE TABLE db_vars
  ( domain not null,      -- scope of application of a var
    name not null,        -- var key
    value not null,       -- var value
    unique(domain, name)  );
DROP TABLE merkle_nodes;CREATE TABLE branch_epochs
  ( hash not null unique,   -- hash of remaining fields separated by ":"
    branch not null unique, -- joins with revision_certs.value
    epoch not null          -- random hex-encoded id
  );
DROP TABLE schema_version;DROP TABLE posting_queue;DROP TABLE incoming_queue;DROP TABLE sequence_numbers;DROP TABLE file_certs;DROP TABLE netserver_manifests;DROP TABLE merkle_nodes;CREATE TABLE merkle_nodes  ( type not null,          -- "key", "mcert", "fcert", "rcert"
    collection not null,    -- name chosen by user
    level not null,         -- tree level this prefix encodes
    prefix not null,        -- label identifying node in tree
    body not null,          -- binary, base64'ed node contents
    unique(type, collection, level, prefix)  );CREATE TABLE revision_certs  ( hash not null unique,   -- hash of remaining fields separated by ":"
    id not null,            -- joins with revisions.id
    name not null,          -- opaque string chosen by user
    value not null,         -- opaque blob
    keypair not null,       -- joins with public_keys.id
    signature not null,     -- RSA/SHA1 signature of "[name@id:val]"
    unique(name, id, value, keypair, signature)  );CREATE TABLE revisions  ( id primary key,      -- SHA1(text of revision)
    data not null        -- compressed, encoded contents of a revision
  );CREATE TABLE revision_ancestry  ( parent not null,     -- joins with revisions.id
    child not null,      -- joins with revisions.id
    unique(parent, child)  );
ALTER TABLE manifest_certs RENAME TO tmp;CREATE TABLE manifest_certs  ( hash not null unique, -- hash of remaining fields separated by ":"
    id not null,          -- joins with manifests.id or manifest_deltas.id
    name not null,        -- opaque string chosen by user
    value not null,       -- opaque blob
    keypair not null,     -- joins with public_keys.id
    signature not null,   -- RSA/SHA1 signature of "[name@id:val]"
    unique(name, id, value, keypair, signature)  );INSERT INTO manifest_certs  SELECT sha1_nows(':', id, name, value, keypair, signature),         id, name, value, keypair, signature         FROM tmp;DROP TABLE tmp;ALTER TABLE file_certs RENAME TO tmp;CREATE TABLE file_certs  ( hash not null unique,   -- hash of remaining fields separated by ":"
    id not null,            -- joins with files.id or file_deltas.id
    name not null,          -- opaque string chosen by user
    value not null,         -- opaque blob
    keypair not null,       -- joins with public_keys.id
    signature not null,     -- RSA/SHA1 signature of "[name@id:val]"
    unique(name, id, value, keypair, signature)  );INSERT INTO file_certs  SELECT sha1_nows(':', id, name, value, keypair, signature),         id, name, value, keypair, signature         FROM tmp;DROP TABLE tmp;ALTER TABLE public_keys RENAME TO tmp;CREATE TABLE public_keys  ( hash not null unique,   -- hash of remaining fields separated by ":"
    id primary key,         -- key identifier chosen by user
    keydata not null        -- RSA public params
  );INSERT INTO public_keys SELECT sha1_nows(':',id,keydata), id, keydata FROM tmp;DROP TABLE tmp;ALTER TABLE private_keys RENAME TO tmp;CREATE TABLE private_keys  ( hash not null unique, -- hash of remaining fields separated by ":"
    id primary key,       -- as in public_keys (same identifiers, in fact)
    keydata not null      -- encrypted RSA private params
  );INSERT INTO private_keys SELECT sha1_nows(':',id,keydata), id, keydata FROM tmp;DROP TABLE tmp;CREATE TABLE merkle_nodes  ( type not null,        -- "key", "mcert", "fcert", "manifest"
    collection not null,  -- name chosen by user
    level not null,       -- tree level this prefix encodes
    prefix not null,      -- label identifying node in tree
    body not null,        -- binary, base64'ed node contents
    unique(type, collection, level, prefix));
ALTER TABLE posting_queue RENAME TO tmp;CREATE TABLE posting_queue  ( url not null,   -- URL we are going to send this to
    content not null -- the packets we're going to send
  );INSERT INTO posting_queue  SELECT (url || '/' || groupname), content FROM tmp;DROP TABLE tmp;ALTER TABLE incoming_queue RENAME TO tmp;CREATE TABLE incoming_queue   ( url not null,    -- URL we got this bundle from
    content not null -- the packets we're going to read
  );INSERT INTO incoming_queue  SELECT (url || '/' || groupname), content FROM tmp;DROP TABLE tmp;ALTER TABLE sequence_numbers RENAME TO tmp;CREATE TABLE sequence_numbers   ( url primary key, -- URL to read from
    major not null,  -- 0 in news servers, may be higher in depots
    minor not null   -- last article / packet sequence number we got
  );INSERT INTO sequence_numbers  SELECT (url || '/' || groupname), major, minor FROM tmp;DROP TABLE tmp;ALTER TABLE netserver_manifests RENAME TO tmp;CREATE TABLE netserver_manifests  ( url not null, -- url of some server
    manifest not null, -- manifest which exists on url
    unique(url, manifest)  );INSERT INTO netserver_manifests  SELECT (url || '/' || groupname), manifest FROM tmp;DROP TABLE tmp;
NTM_
6MusingIPKcE
6MusingI14upgrade_regimeE
6MusingIPK15migration_eventE
6MusingI20schema_mismatch_caseE
directory '%s' for path '%s' cannot be added, as there is a file in the way
E(is_dir_t(child_roster.get_node(pth)))
path '%s' cannot be added, as there is a directory in the way
path '%s' added twice with differing content
regenerating cached file sizes for revisions
finished regenerating cached file sizes
finished regenerating cached rosters
finished regenerating cached heights
noting ancestry from child %d -> parent %d
finished regenerating cached branches
src/migrate_ancestry.cc:1118: I(type != regen_none)
checking whether %s is an ancestor of %s
src/migrate_ancestry.cc:339: I(!existing_graph)
loaded '%s' manifest cert for node %s
src/migrate_ancestry.cc:370: I(existing_graph)
src/migrate_ancestry.cc:371: I(!null_id(rev))
node %d = revision %s = manifest %s
loaded '%s' revision cert for node %s
src/migrate_ancestry.cc:191: I(i != node_to_old_man.end())
src/migrate_ancestry.cc:557: I(i->second == birth_node)
unknown attribute '%s' on path '%s'.
Please contact %s so we can work out the right way to migrate this
(if you just want it to go away, see the switch '--drop-attr', but
seriously, if you'd like to keep it, we're happy to figure out how)
scanning for bogus merge edges
optimizing out redundant edge %d -> %d
failed to eliminate edge %d -> %d
rebuilding revision graph from manifest certs
converting existing revision graph to new roster-style revisions
certs in
revs out
certs out
src/migrate_ancestry.cc
roster: 
roster's marking:
cert '
E(is_file_t(n))
E(f->content == fid)
regenerated
regenerating cached rosters
regenerating cached heights
regenerating cached branches
I(type != regen_none)
I(!existing_graph)
node %d = manifest %s
I(existing_graph)
I(!null_id(rev))
processing node %d
I(i != node_to_old_man.end())
parent_rosters
node_to_new_rev
.mt-ignore
.mtn-ignore
child_roster
mtn:
new_rev_to_node
I(i->second == birth_node)
nodes_in_any_parent
node_to_old_rev
mapped node %d to revision %s
done
.mt-attrs
considering old merge edge %s
edges_to_kill
rebuilding %d nodes
setting epoch for %s to %s
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = cset; typename boost::detail::sp_dereference<T>::type = cset&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = roster_t; typename boost::detail::sp_member_access<T>::type = roster_t*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const marking; typename boost::detail::sp_member_access<T>::type = const marking*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = marking_map; typename boost::detail::sp_member_access<T>::type = marking_map*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const node; typename boost::detail::sp_member_access<T>::type = const node*]
void {anonymous}::anc_graph::construct_revisions_from_ancestry(const std::set<std::__cxx11::basic_string<char> >&)
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = marking_map; typename boost::detail::sp_dereference<T>::type = marking_map&]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = roster_t; typename boost::detail::sp_dereference<T>::type = roster_t&]
6MusingI20current_rev_debuggerE
6MusingISt3mapImSt4pairIN5boost10shared_ptrI8roster_tEENS3_I11marking_mapEEESt4lessImESaIS1_IKmS8_EEEE
src/refiner.cc:78: I(j != table.end())
Beginning %s refinement on %s.
/usr/include/boost/dynamic_bitset/dynamic_bitset.hpp
size() > 0 && num_blocks() > 0
src/refiner.cc:172: I(slot < constants::merkle_num_slots)
%s finished %s refinement: %d to send, %d to receive
underflow on query-in-flight counter
src/refiner.cc:416: I(ty == refinement_query)
src/refiner.cc
I(j != table.end())
client
m_check_invariants()
E((queries_in_flight > 0))
I(ty == refinement_query)
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = merkle_node; typename boost::detail::sp_member_access<T>::type = merkle_node*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = merkle_node; typename boost::detail::sp_dereference<T>::type = merkle_node&]
const Block& boost::dynamic_bitset<Block, Allocator>::m_highest_block() const [with Block = unsigned char; Allocator = std::allocator<unsigned char>]
boost::dynamic_bitset<Block, Allocator>::~dynamic_bitset() [with Block = unsigned char; Allocator = std::allocator<unsigned char>]
N5boost6detail17sp_counted_impl_pI11merkle_nodeEE
src/enumerator.cc
i->first
I(!null_id(i.ident_a))
I(!null_id(i.ident_b))
src/enumerator.cc:159: I(false)
revision_enumerator::step expanding contents of rev '%s'
revision_enumerator::step extracting item
src/enumerator.cc:299: I(!null_id(i.ident_a))
src/enumerator.cc:308: I(!null_id(i.ident_b))
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = cset; typename boost::detail::sp_dereference<T>::type = cset&]
void revision_enumerator::files_for_revision(const revision_id&, std::set<file<id> >&, std::set<std::pair<file<id>, file<id> > >&)
src/netsync.cc:75: I(!args.empty())
src/netsync.cc:89: I(!host.empty())
src/netsync.cc:411: I(voice == client_voice)
processing failure while talking to peer '%s', disconnecting
timed out waiting for I/O with peer '%s', disconnecting
peer '%s' disconnected after we informed them of error
I/O failure while talking to peer '%s', disconnecting
server_request_sync
src/netsync.cc
I(!args.empty())
I(!host.empty())
server_set_listening
bad argument (not a boolean)
src/netsync.cc:300: I(guard)
connecting to '%s'
Opened connection to %s
beginning service on '%s'
I(voice == client_voice)
  include pattern  '%s'
  exclude pattern  '%s'
E(io_ok)
successful exchange with '%s'
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = netsync_connection_info; typename boost::detail::sp_member_access<T>::type = netsync_connection_info*]
void boost::shared_ptr<T>::reset(Y*) [with Y = automate_session; T = wrapped_session]
void boost::shared_ptr<T>::reset(Y*) [with Y = netsync_session; T = wrapped_session]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = transaction_guard; typename boost::detail::sp_member_access<T>::type = transaction_guard*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = transaction_guard; typename boost::detail::sp_dereference<T>::type = transaction_guard&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = Netxx::StreamBase; typename boost::detail::sp_member_access<T>::type = Netxx::StreamBase*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = session; typename boost::detail::sp_member_access<T>::type = session*]
N5Netxx16NetworkExceptionE
N5Netxx9ExceptionE
N5boost6detail17sp_counted_impl_pIN5Netxx10PipeStreamEEE
N5boost6detail17sp_counted_impl_pIN5Netxx6StreamEEE
N5boost6detail17sp_counted_impl_pI7sessionEE
N5boost6detail17sp_counted_impl_pI15netsync_sessionEE
N5boost6detail17sp_counted_impl_pI17transaction_guardEE
N5boost6detail17sp_counted_impl_pI8listenerEE
N5boost6detail17sp_counted_impl_pI16automate_sessionEE
server is too old for remote automate connections
sorry, you aren't allowed to do that.
src/network/automate_session.cc
E(app.lua.hook_get_remote_automate_permitted(remote_identity, cmdline, params))
Executing %s for remote peer %s
src/network/automate_session.cc:46: I(input_stream)
src/network/automate_session.cc:164: I(output_stream)
src/network/automate_session.cc:202: I(output_stream)
unexpected netcmd '%d' received on automate connection
I(input_stream)
I(output_stream)
16automate_session
19remote_stdio_pre_fn
19remote_stdio_log_fn
src/network/connection_info.cc:190: I(input_stream)
src/network/connection_info.cc
src/network/connection_info.cc:197: I(output_stream)
include branch pattern contains a quote character:
setting include pattern to '%s' (previously '%s')
exclude branch pattern contains a quote character:
setting exclude pattern to '%s' (previously '%s')
branch pattern is empty and no default value could be loaded
E(conn_type != netsync_connection || !include_pattern().empty())
connection host / path is empty and no default value could be loaded
E(!uri.host.empty() || !uri.path.empty())
setting default branch include pattern to '%s'
setting default branch exclude pattern to '%s'
setting default include pattern for server '%s' to '%s'
setting default exclude pattern for server '%s' to '%s'
a non-empty hostname is expected for the 'mtn' uri scheme
E(uri.scheme != "mtn" || !uri.host.empty())
loaded default server address: %s
ignoring invalid default server address '%s': %s
ignoring invalid default include / exclude pattern: %s
include / exclude pattern was given both as part of the URI and as a separate argument
E(!(include_exclude_given && query_exists))
need permission to store persistent passphrase (see hook persist_phrase_ok())
E(lua.hook_persist_phrase_ok())
the '--no-transport-auth' option is usually only used in combination with '--stdio'
separate server and pattern arguments are deprecated, please consider using the URI calling syntax instead
you can specify either a query string or separate include/exclude parameters, but not both
E(info->client.uri.query.empty())
no branch pattern found in URI, will try to use suitable database defaults if available
default-server
default-include-pattern
default-exclude-pattern
server-include
server-exclude
setting default server to %s
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = netsync_connection_info; typename boost::detail::sp_member_access<T>::type = netsync_connection_info*]
void boost::shared_ptr<T>::reset(Y*) [with Y = netsync_connection_info; T = netsync_connection_info]
N5boost6detail17sp_counted_impl_pI17connection_countsEE
N5boost6detail17sp_counted_impl_pI23netsync_connection_infoEE
session limit %d reached, some connections will be refused
src/network/reactable.hh:28: I(count != 0)
src/network/listener_base.cc
src/network/reactable.hh
I(count != 0)
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = Netxx::StreamServer; typename boost::detail::sp_dereference<T>::type = Netxx::StreamServer&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = Netxx::StreamServer; typename boost::detail::sp_member_access<T>::type = Netxx::StreamServer*]
9reactable
13listener_base
accepting new connection on %s : %s
accept() returned a dead client
accepted new client connection from %s : %s
src/network/listener.cc:78: I(guard)
src/network/listener.cc
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = session; typename boost::detail::sp_member_access<T>::type = session*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = Netxx::StreamServer; typename boost::detail::sp_member_access<T>::type = Netxx::StreamServer*]
8listener
N5Netxx4PeerE
<all interfaces>
beginning service on %s : %s
src/network/make_server.cc
N5boost6detail17sp_counted_impl_pIN5Netxx12StreamServerEEE
epoch refinement finished; beginning other refinements
src/network/netsync_session.cc
underflow on count of %s items to receive
count of %s items to receive has reached zero
queueing 'done' command for %s (%d items)
processing refine cmd for %s node at level %d
unexpected 'refine' command on non-refined item type
ignoring delta received for item type %s
queueing refinement %s of %s node '%s', level %d
All refinements done for peer %s
decoding variable length string of %d bytes for '%s', maximum is %d
src/network/../netio.hh:30: I(pos < str.size() || (pos == str.size() && len == 0))
src/network/netsync_session.cc:370: I(role == source_and_sink_role)
I(role == source_and_sink_role)
src/network/netsync_session.cc:1418: I(j != epochs.end())
including key %s by special request
anonymous access to branch '%s' denied by server
denied '%s' read permission for '%s' excluding '%s' because of branch '%s'
allowed '%s' read permission for '%s' excluding '%s'
allowed anonymous read permission for '%s' excluding '%s'
allowed anonymous read/write permission for '%s' excluding '%s'
denied '%s' write permission for '%s' excluding '%s'
allowed '%s' write permission for '%s' excluding '%s'
rejected attempt at anonymous connection for write
not queueing %s data for '%s' as we are in pure sink role
queueing %d bytes of data for %s item '%s'
src/network/netsync_session.cc:715: I(type == file_item)
not queueing %s delta '%s' -> '%s' as we are in pure sink role
queueing %s delta '%s' -> '%s'
%s with hash '%s' does not exist in our database
public key '%s' is also called '%s'
received 'done' command for %s (%s items)
unexpected 'done' command on non-refined item type
src/network/netsync_session.cc:109: I(counts)
%s '%s' already exists in our database
received epoch %s for branch %s
branch %s has no epoch; setting epoch to %s
branch %s already has an epoch; checking
src/network/netsync_session.cc:967: I(!(i->second == epoch))
mismatched epoch on branch '%s'. Server has %s, client has %s
hash check failed for public key '%s' (%s); wanted '%s' got '%s'
dropping incoming cert which claims to be signed by key
%s (name '%s'), but has a bad signature
dropping incoming cert which was signed by a key we don't have.
You probably need to obtain this key from a more recent netsync peer.
The name of the key involved is '%s', but note that there are multiple
keys with this name and we don't know which one it is
hash check failed for revision cert '%s'
hash check failed for revision %s
refine netcmd received when authenticated
done netcmd received when not authenticated
data netcmd received when not authenticated
data netcmd received in source or source/sink role
delta netcmd received when not authenticated
delta netcmd received in source or source/sink role
peer %s finishing processing with '%d' packet
protocol error while processing peer %s: '%s'
recoverable '%s' error while processing peer %s: '%s'
epoch refinement finished
check of '%s' failed
response
src/network/../netio.hh
bytes in
bytes out
revs in
finding items to synchronize:
including branch %s
certificates
setting epoch on %s to zero
I(j != epochs.end())
cannot find key '%s'
noting key '%s' to send
I(type == file_item)
I(counts)
I(!(i->second == epoch))
pubkey id
pubkey value
received duplicate key %s
received revision '%s'
received file '%s'
hash check failed for file %s
const Block& boost::dynamic_bitset<Block, Allocator>::m_highest_block() const [with Block = unsigned char; Allocator = std::allocator<unsigned char>]
boost::dynamic_bitset<Block, Allocator>::~dynamic_bitset() [with Block = unsigned char; Allocator = std::allocator<unsigned char>]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = connection_counts; typename boost::detail::sp_member_access<T>::type = connection_counts*]
20enumerator_callbacks
17refiner_callbacks
15netsync_session
got woken up for action on unknown fd %d
src/network/reactor.cc:74: I(!have_pipe)
src/network/reactor.cc:77: I(items.size() == 0)
peer %s has been idle too long, disconnecting
i/o probe with %d armed
src/network/reactor.cc
Got i/o on dead peer %s
I(!have_pipe)
I(items.size() == 0)
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = reactable; typename boost::detail::sp_member_access<T>::type = reactable*]
armed with netcmd having code '%d'
src/network/session.cc:89: I(this->saved_nonce().empty())
I(this->saved_nonce().empty())
src/network/session.cc:101: I(this->saved_nonce().size() == constants::merkle_hash_length_in_bytes)
I(this->saved_nonce().size() == constants::merkle_hash_length_in_bytes)
queued outgoing netcmd of type '%d'
dropping outgoing netcmd of type '%d' (because we're in error unwind mode)
queueing 'bye' command, phase %d
unexpected bye phase 0 received
unexpected bye phase 1 received
unexpected bye phase 2 received
received 'anonymous' netcmd from client for pattern '%s' excluding '%s' in %s mode
received 'auth(hmac)' netcmd from client '%s' for pattern '%s' exclude '%s' in %s mode with nonce1 '%s'
src/network/session.cc:622: I(false)
src/network/session.cc:569: I(false)
detected replay attack in auth netcmd
doing work for peer '%s' with '%d' netcmd
doing work for peer '%s' with no netcmd
received warning from usher: %s
received greeting from usher: %s
client has maximum version %d, using %d
src/network/session.cc:250: I(!received_remote_key)
src/network/session.cc:251: I(saved_nonce().empty())
received hello command; setting version from %d to %d
server key has name %s, hash %s
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@ WARNING: SERVER IDENTIFICATION HAS CHANGED              @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY
It is also possible that the server key has just been changed.
Remote host sent key %s,
I expected %s
'%s unset %s %s' overrides this check
first time connecting to server %s.
I'll assume it's really them, but you might want to double-check
their key's fingerprint: %s
src/network/session.cc:307: I(project.db.put_key(their_keyname, their_key))
I(project.db.put_key(their_keyname, their_key))
saving public key for %s to database
received 'hello' netcmd from server '%s' with nonce '%s'
src/network/session.cc:317: I(project.db.public_key_exists(remote_peer_key_id))
I(project.db.public_key_exists(remote_peer_key_id))
src/network/session.cc
signing_key
unknown bye phase %d received
source and sink
bad client signature
sent reply.
I(!received_remote_key)
I(saved_nonce().empty())
server key changed
received network error: %s
queueing 'error' command
known-servers
void boost::shared_ptr<T>::reset(Y*) [with Y = automate_session; T = wrapped_session]
void boost::shared_ptr<T>::reset(Y*) [with Y = netsync_session; T = wrapped_session]
void session::request_automate()
void session::request_netsync(protocol_role, const globish&, const globish&)
void session::set_session_key(const rsa_oaep_sha_data&)
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = wrapped_session; typename boost::detail::sp_member_access<T>::type = wrapped_session*]
7session
6MusingIbE
13netsync_error
src/network/session_base.cc:84: I(!is_pipe_pair())
src/network/session_base.cc:129: I(inbuf.size() < constants::netcmd_maxsz)
I(inbuf.size() < constants::netcmd_maxsz)
read %d bytes from fd %d (peer %s)
in error unwind mode, so throwing them into the bit bucket
src/network/../string_queue.hh:188: I(amount <= max_string_queue_incr)
src/network/../string_queue.hh
I(amount <= max_string_queue_incr)
src/network/../string_queue.hh:231: I(new_buffer_size <= max_string_queue_size)
I(new_buffer_size <= max_string_queue_size)
src/network/../string_queue.hh:223: I((size_t) (end - back) >= bytes)
I((size_t) (end - back) >= bytes)
peer %s IO terminated connection in working state (error)
peer %s IO terminated connection in shutdown state (possibly client misreported error)
src/network/session_base.cc:176: I(!outbuf.empty())
wrote %d bytes to fd %d (peer %s)
finished flushing output queue in error unwind mode, disconnecting
got OOB from peer %s, disconnecting
peer %s IO failed in working state (error)
peer %s IO failed in shutdown state (possibly client misreported error)
peer %s IO failed in confirmed state (success)
disconnecting due to a network error on peer %s: %s
src/network/session_base.cc:66: I(pipe)
src/network/session_base.cc
I(!is_pipe_pair())
probing write on %s
probing read on %s
I(!outbuf.empty())
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = Netxx::StreamBase; typename boost::detail::sp_dereference<T>::type = Netxx::StreamBase&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = Netxx::PipeStream; typename boost::detail::sp_member_access<T>::type = Netxx::PipeStream*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = Netxx::StreamBase; typename boost::detail::sp_member_access<T>::type = Netxx::StreamBase*]
12session_base
?I(!this->owner)
src/network/wrapped_session.cc:25: I(!this->owner)
src/network/wrapped_session.cc
15wrapped_session
src/netxx_pipe.cc
E(child >= 0)
dup2
pipe/fork failed: %s
src/netxx_pipe.cc:72: I(fcntl(readfd, F_SETFL, flags | O_NONBLOCK) != -1)
I(fcntl(readfd, F_SETFL, flags | O_NONBLOCK) != -1)
src/netxx_pipe.cc:74: I(fcntl(writefd, F_SETFL, flags | O_NONBLOCK) != -1)
I(fcntl(writefd, F_SETFL, flags | O_NONBLOCK) != -1)
src/netxx_pipe.cc:178: I(args.size() < (sizeof(newargv) / sizeof(newargv[0])))
I(args.size() < (sizeof(newargv) / sizeof(newargv[0])))
N5Netxx10PipeStreamE
src/netcmd.cc:86: I(hmac.hmac_length == constants::netsync_hmac_value_length_in_bytes)
I(hmac.hmac_length == constants::netsync_hmac_value_length_in_bytes)
src/netcmd.cc:263: I(nonce().size() == constants::merkle_hash_length_in_bytes)
I(nonce().size() == constants::merkle_hash_length_in_bytes)
src/netcmd.cc:385: I(client.inner()().size() == constants::merkle_hash_length_in_bytes)
I(client.inner()().size() == constants::merkle_hash_length_in_bytes)
src/netcmd.cc:386: I(nonce1().size() == constants::merkle_hash_length_in_bytes)
I(nonce1().size() == constants::merkle_hash_length_in_bytes)
read automate headers request netcmd payload
src/netcmd.cc:488: I(item().size() == constants::merkle_hash_length_in_bytes)
I(item().size() == constants::merkle_hash_length_in_bytes)
src/netcmd.cc:545: I(base().size() == constants::merkle_hash_length_in_bytes)
I(base().size() == constants::merkle_hash_length_in_bytes)
src/netcmd.cc:546: I(ident().size() == constants::merkle_hash_length_in_bytes)
I(ident().size() == constants::merkle_hash_length_in_bytes)
src/netcmd.cc:565: I(tmp.size() <= constants::netcmd_payload_limit)
I(tmp.size() <= constants::netcmd_payload_limit)
I(client.inner()().empty() || client.inner()().size() == constants::merkle_hash_length_in_bytes)
src/netcmd.cc:609: I(nonce1().size() == constants::merkle_hash_length_in_bytes)
src/netcmd.cc:608: I(client.inner()().empty() || client.inner()().size() == constants::merkle_hash_length_in_bytes)
src/netio.hh:48: I(pos < str.size() || (pos == str.size() && len == 0))
refine netcmd, refinement type
unknown item type 0x%x for '%s'
done netcmd, item-to-send count
automate_packet netcmd, command_num
automate_packet netcmd, stream
automate_packet netcmd, packet_data
automate_packet netcmd payload
automate netcmd, hmac_key_encrypted
anonymous(hmac) netcmd, include_pattern
anonymous(hmac) netcmd, exclude_pattern
anonymous(hmac) netcmd, hmac_key_encrypted
anonymous(hmac) netcmd payload
delta netcmd, ident identifier
delta netcmd, compression flag
the remote side has a newer, incompatible version of monotone
the remote side has an older, incompatible version of monotone
protocol version mismatch: wanted between '%d' and '%d' got '%d' (netcmd code %d)
oversized payload of '%d' bytes
src/netcmd.cc:180: I(hmac.hmac_length == constants::netsync_hmac_value_length_in_bytes)
src/string_queue.hh:133: I(size <= max_string_queue_incr)
I(size <= max_string_queue_incr)
src/string_queue.hh:134: I(pos <= max_string_queue_size)
I(pos <= max_string_queue_size)
src/string_queue.hh:135: I(used_size () >= (pos + size))
I(used_size () >= (pos + size))
src/string_queue.hh:111: I(used_size () >= amount)
src/string_queue.hh:231: I(new_buffer_size <= max_string_queue_size)
bad HMAC checksum (got %s, wanted %s)
this suggests data was corrupted in transit
read packet with code %d and version %d
auth(hmac) netcmd, include_pattern
auth(hmac) netcmd, exclude_pattern
auth(hmac) netcmd, client identifier
auth(hmac) netcmd, hmac_key_encrypted
automate headers reply netcmd, count
automate headers reply netcmd payload
automate headers reply netcmd, name
automate headers reply netcmd, value
automate_command netcmd, arg count
automate_command netcmd, option count
automate_command netcmd, argument
automate_command netcmd payload
automate_command netcmd, option name
automate_command netcmd, option value
src/netcmd.cc
confirm netcmd payload
bye netcmd, phase number
bye netcmd payload
refine cmd
done netcmd, item type
done netcmd payload
error netcmd, message
error netcmd payload
usher netcmd, message
usher netcmd payload
usher_reply netcmd, server
usher_reply netcmd, pattern
usher_reply netcmd payload
data netcmd, item type
data netcmd, item identifier
data netcmd, compression flag
data netcmd, data payload
data netcmd payload
hello netcmd, server key name
hello netcmd, server key
hello netcmd, nonce
hello netcmd payload
automate netcmd, key id
automate netcmd, nonce1
automate netcmd, signature
automate netcmd payload
anonymous(hmac) netcmd, role
unknown role specifier %d
delta netcmd, item type
delta netcmd, base identifier
delta netcmd, delta payload
delta netcmd payload
netcmd protocol number
netcmd code
unknown netcmd code 0x%x
netcmd payload length
src/string_queue.hh
I(used_size () >= amount)
netcmd HMAC
auth netcmd, role
auth(hmac) netcmd, nonce1
auth(hmac) netcmd, signature
auth(hmac) netcmd payload
?src/merkle_tree.cc:64: I(!typestr.empty())
src/merkle_tree.cc:106: I(this->pref.size() == prefix_length_in_bits(this->level))
src/merkle_tree.cc:107: I(this->level <= constants::merkle_num_tree_levels)
src/merkle_tree.cc:108: I(this->slots.size() == constants::merkle_num_slots)
src/merkle_tree.cc:109: I(this->bitmap.size() == constants::merkle_bitmap_length_in_bits)
src/merkle_tree.cc:195: I(n < constants::merkle_num_slots)
src/merkle_tree.cc:196: I(2*n + 1 < bitmap.size())
src/merkle_tree.cc:176: I(n < constants::merkle_num_slots)
src/merkle_tree.cc:177: I(2*n + 1 < bitmap.size())
src/merkle_tree.cc:130: I(get_slot_state(slot) != empty_state)
old_num_blocks >= 1 && old_num_blocks <= m_bits.size()
num_blocks() == calc_num_blocks(m_num_bits)
src/merkle_tree.cc:148: I(slot < constants::merkle_num_slots)
src/merkle_tree.cc:454: I(constants::merkle_hash_length_in_bytes == leaf().size())
src/merkle_tree.cc:456: I(constants::merkle_fanout_bits * (level + 1) <= constants::merkle_hash_length_in_bits)
src/merkle_tree.cc:230: I(in.pref.size() == in.level * constants::merkle_fanout_bits)
src/merkle_tree.cc:249: I(slot < in.slots.size())
src/merkle_tree.cc:256: I(hash.size() == constants::merkle_hash_length_in_bytes)
src/merkle_tree.cc:355: I(i != tab.end())
src/merkle_tree.cc:321: I(out.size() >= constants::merkle_hash_length_in_bytes)
node level is %d, exceeds maximum %d
mismatched node hash value %s, expected %s
src/merkle_tree.cc
I(!typestr.empty())
slot
this->slots
pos < m_num_bits
I(2*n + 1 < bitmap.size())
I(slot < in.slots.size())
I(i != tab.end())
node hash
node type
node level
node prefix
number of leaves
bitmap
slot value
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = merkle_node; typename boost::detail::sp_dereference<T>::type = merkle_node&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = merkle_node; typename boost::detail::sp_member_access<T>::type = merkle_node*]
bool boost::dynamic_bitset<Block, Allocator>::test(boost::dynamic_bitset<Block, Allocator>::size_type) const [with Block = unsigned char; Allocator = std::allocator<unsigned char>; boost::dynamic_bitset<Block, Allocator>::size_type = long unsigned int]
boost::dynamic_bitset<Block, Allocator>& boost::dynamic_bitset<Block, Allocator>::reset(boost::dynamic_bitset<Block, Allocator>::size_type) [with Block = unsigned char; Allocator = std::allocator<unsigned char>; boost::dynamic_bitset<Block, Allocator>::size_type = long unsigned int]
boost::dynamic_bitset<Block, Allocator>& boost::dynamic_bitset<Block, Allocator>::set(boost::dynamic_bitset<Block, Allocator>::size_type, bool) [with Block = unsigned char; Allocator = std::allocator<unsigned char>; boost::dynamic_bitset<Block, Allocator>::size_type = long unsigned int]
void boost::dynamic_bitset<Block, Allocator>::m_zero_unused_bits() [with Block = unsigned char; Allocator = std::allocator<unsigned char>]
void boost::dynamic_bitset<Block, Allocator>::resize(boost::dynamic_bitset<Block, Allocator>::size_type, bool) [with Block = unsigned char; Allocator = std::allocator<unsigned char>; boost::dynamic_bitset<Block, Allocator>::size_type = long unsigned int]
const Block& boost::dynamic_bitset<Block, Allocator>::m_highest_block() const [with Block = unsigned char; Allocator = std::allocator<unsigned char>]
boost::dynamic_bitset<Block, Allocator>::~dynamic_bitset() [with Block = unsigned char; Allocator = std::allocator<unsigned char>]
src/lcs.cc:203: I(y >= 0)
src/lcs.cc
src/lcs.cc:204: I(x >= 0)
I(start_a >= 0)
I(start_a <= a.size())
I(start_b >= 0)
I(start_b <= b.size())
src/lcs.cc:297: I(end_a >= 0)
I(end_a <= a.size())
src/lcs.cc:299: I(end_b >= 0)
I(end_b <= b.size())
src/lcs.cc:360: I(rdx >= 0)
src/lcs.cc:443: I(end_a >= 0)
src/lcs.cc:445: I(end_b >= 0)
I(end_a - start_a >= p_lim)
I(len_a <= len_b)
I(len_a == p_lim)
I(cost_c == est_c)
I(cost_r == est_r)
src/lcs.cc:498: I(end_a >= 0)
src/lcs.cc:500: I(end_b >= 0)
I(cost == edit_distance)
src/lcs.cc:293: I(start_a >= 0)
src/lcs.cc:294: I(start_a <= a.size())
src/lcs.cc:295: I(start_b >= 0)
src/lcs.cc:296: I(start_b <= b.size())
src/lcs.cc:298: I(end_a <= a.size())
src/lcs.cc:300: I(end_b <= b.size())
src/lcs.cc:440: I(start_a <= a.size())
src/lcs.cc:442: I(start_b <= b.size())
src/lcs.cc:444: I(end_a <= a.size())
src/lcs.cc:446: I(end_b <= b.size())
src/lcs.cc:448: I(end_a - start_a >= p_lim)
src/lcs.cc:495: I(start_a <= a.size())
src/lcs.cc:497: I(start_b <= b.size())
src/lcs.cc:499: I(end_a <= a.size())
src/lcs.cc:501: I(end_b <= b.size())
src/lcs.cc:506: I(len_a <= len_b)
src/lcs.cc:549: I(len_a == p_lim)
src/lcs.cc:339: I(cost_c == est_c)
src/lcs.cc:346: I(cost_r == est_r)
src/lcs.cc:494: I(start_a >= 0)
src/lcs.cc:496: I(start_b >= 0)
src/lcs.cc:574: I(len_a <= len_b)
src/lcs.cc:583: I(cost == edit_distance)
src/rcs_import.cc:878: I(stk.size() > 1)
existing path to %s found, skipping
src/rcs_import.cc:474: I(db.file_or_manifest_base_exists(new_id, "files") || db.delta_exists(new_id.inner(), "file_deltas"))
I(db.file_or_manifest_base_exists(new_id, "files") || db.delta_exists(new_id.inner(), "file_deltas"))
src/interner.hh:33: I(k < rev.size())
src/rcs_import.cc:433: I(r.deltas.find(dest_version) != r.deltas.end())
I(r.deltas.find(dest_version) != r.deltas.end())
src/rcs_import.cc:436: I(r.deltatexts.find(dest_version) != r.deltatexts.end())
I(r.deltatexts.find(dest_version) != r.deltatexts.end())
src/rcs_import.cc:398: I(cursor == pos)
src/rcs_import.cc:408: I(cursor == pos - 1)
out_of_range while processing 
src/rcs_import.cc:711: I(! filename.empty())
first version in branch %s would be %s
src/rcs_import.cc:248: I(delta != r.deltas.end())
src/rcs_import.cc:252: I(deltatext != r.deltatexts.end())
I(deltatext != r.deltatexts.end())
src/rcs_import.cc:263: I(strptime(dp, "%Y.%m.%d.%H.%M.%S", &t) != NULL)
I(strptime(dp, "%Y.%m.%d.%H.%M.%S", &t) != NULL)
synthetic branch root changelog
src/rcs_import.cc:758: I(file.size() > 2)
src/rcs_import.cc:759: I(file.substr(file.size() - 2) == string(",v"))
I(file.substr(file.size() - 2) == string(",v"))
src/rcs_import.cc:849: I(!stk.empty())
src/rcs_import.cc:154: I(c.time != 0)
constructed RCS version %s, inserting into database
following RCS branch %s = '%s'
src/rcs_import.cc:677: I(r.deltatexts.find(r.admin.head) != r.deltatexts.end())
I(r.deltatexts.find(r.admin.head) != r.deltatexts.end())
src/rcs_import.cc:678: I(r.deltas.find(r.admin.head) != r.deltas.end())
I(r.deltas.find(r.admin.head) != r.deltas.end())
error reading RCS file '%s': %s
adding entry state '%s' on '%s'
applying state delta on '%s' : '%s' -> '%s'
deleting entry state '%s' on '%s'
src/rcs_import.cc:1448: I(!c.entries.empty())
src/rcs_import.cc:139: I(has_a_branchpoint || has_a_commit)
I(has_a_branchpoint || has_a_commit)
src/rcs_import.cc:142: I(first_commit != 0)
src/rcs_import.cc:147: I(last_branchpoint != 0)
initial cluster on branch %s has %d live entries
initial cluster contains %s at %s
examining next commit [t:%d] [p:%s] [a:%s] [c:%s]
examining cluster %d to see if it touched %d
found cluster touching %d: [t:%d] [a:%d] [c:%d]
picked existing cluster [t:%d] [a:%d] [c:%d]
building new cluster [t:%d] [a:%d] [c:%d]
src/rcs_import.cc:1176: I(target)
finished branch commits, writing all pending clusters
finished writing pending clusters
'%s' appears to be a CVS repository root directory
try importing a module instead, with 'cvs_import %s/<module_name>'
E(!directory_exists(cvsroot / "CVSROOT"))
src/rcs_import.cc:1232: I(cvs.stk.size() == 1)
src/rcs_import.cc
created_dirs
cs.dirs_added
I(stk.size() > 1)
skipping identity file edge
src/interner.hh
I(k < rev.size())
directive.size() > 1
 %c %d %d
illformed directive '
I(cursor == pos)
I(cursor == pos - 1)
unknown directive '
 with source.size() == 
 and cursor == 
versions
I(! filename.empty())
parsing RCS file '%s'
parsed RCS file '%s' OK
file branchpoint for %s at %s
I(delta != r.deltas.end())
Calculating time of %s
%y.%m.%d.%H.%M.%S
%Y.%m.%d.%H.%M.%S
dead
was initially added on branch
version %s -> tag %s
importing file '%s'
I(file.size() > 2)
Attic/
I(!stk.empty())
version %s has %d lines
I(c.time != 0)
following RCS edge %s -> %s
finished RCS branch %s = '%s'
parsing RCS file %s
parsed RCS file %s OK
skipping non-RCS file '%s'
cs.files_added
cs.deltas_applied
cs.nodes_deleted
I(!c.entries.empty())
beginning of branch 
I(first_commit != 0)
I(last_branchpoint != 0)
expiring cluster
last modification time is %d
I(target)
I(cvs.stk.size() == 1)
branch %s has %d entries
trunk has %d entries
marking tag 
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = revision_t; typename boost::detail::sp_member_access<T>::type = revision_t*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cset; typename boost::detail::sp_member_access<T>::type = cset*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = cset; typename boost::detail::sp_dereference<T>::type = cset&]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = revision_t; typename boost::detail::sp_dereference<T>::type = revision_t&]
void process_one_hunk(const std::vector<piece>&, std::vector<piece>&, std::vector<piece>::const_iterator&, int&)
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = cvs_cluster; typename boost::detail::sp_dereference<T>::type = cvs_cluster&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cvs_cluster; typename boost::detail::sp_member_access<T>::type = cvs_cluster*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cvs_branch; typename boost::detail::sp_member_access<T>::type = cvs_branch*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = cvs_branch; typename boost::detail::sp_dereference<T>::type = cvs_branch&]
void boost::token_iterator<TokenizerFunc, Iterator, Type>::increment() [with TokenizerFunc = boost::char_separator<char>; Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Type = std::__cxx11::basic_string<char>]
const Type& boost::token_iterator<TokenizerFunc, Iterator, Type>::dereference() const [with TokenizerFunc = boost::char_separator<char>; Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Type = std::__cxx11::basic_string<char>]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = rcs_delta; typename boost::detail::sp_member_access<T>::type = rcs_delta*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = rcs_deltatext; typename boost::detail::sp_member_access<T>::type = rcs_deltatext*]
15cvs_tree_walker
N5boost6detail17sp_counted_impl_pI10cvs_branchEE
N5boost6detail17sp_counted_impl_pI11cvs_clusterEE
N5boost6detail17sp_counted_impl_pI10revision_tEE
src/git_change.cc:135: I(i != rename_map.end())
src/git_change.cc:37: I(false)
src/git_change.cc
I(i != rename_map.end())
.tmp.break-rename-loop
mtn:execute
100644
100755
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = file_node; typename boost::detail::sp_member_access<T>::type = file_node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const node; typename boost::detail::sp_member_access<T>::type = const node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type*]
void get_change(const roster_t&, const roster_t&, git_change&)
invalid git author '%s' mapped from monotone author '%s'
E(lua.hook_validate_git_author(i->second))
missing leading ':' in marks file
invalid git author '%s' from monotone author key '%s'
E(lua.hook_validate_git_author(unmapped_key))
invalid git author '%s' from monotone author value '%s'
E(lua.hook_validate_git_author(unmapped_name))
src/git_export.cc:396: I(false)
src/git_export.cc:399: I(f != change_map.end())
#############################################################
src/git_export.cc
ignored invalid mapping '%s'
reset refs/mtn/leaves/
from :
reset refs/mtn/roots/
reset refs/mtn/revs/
missing space after mark
E(c == ' ')
bad revision id in marks file
E(tmp.size() == 40)
incomplete line in marks file
E(c == '\n')
loading
exporting
Unknown <unknown>
I(f != change_map.end())
blob
mark :
Monotone-Parent: 
Monotone-Revision: 
Monotone-Author: 
Monotone-Date: 
Monotone-Branch: 
Monotone-Tag: 
commit refs/heads/
author 
 +0000
committer 
merge :
reset refs/heads/
progress revision 
reset refs/tags/
merge revision has a null parent
E(!null_id(edge_old_revision(i)))
revision has %d edges, not 1 or 2
E(old_rosters.size() == 1 || no_excludes)
the command '%s %s' cannot be restricted in a two-parent workspace
encountered a revision with unknown format, version %s.
I only know how to understand the version 1 format.
A newer version of monotone is required to complete this operation
revision has no manifest id
src/revision.cc
E(!null_id(new_manifest))
old_rosters
new manifest_id is %s
wanted symbol '
', got 
E(tmp == "1")
failed to parse revision
old_rev_id
old_revision
new_manifest
void read_revision(const data&, revision_t&)
void parse_revision(basic_io::parser&, revision_t&)
void parse_edge(basic_io::parser&, revision_t&)
void make_revision_for_workspace(const revision_id&, const roster_t&, const roster_t&, revision_t&)
void make_revision_for_workspace(const revision_id&, const cset&, revision_t&)
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cset; typename boost::detail::sp_member_access<T>::type = cset*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const roster_t; typename boost::detail::sp_dereference<T>::type = const roster_t&]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = cset; typename boost::detail::sp_dereference<T>::type = cset&]
6MusingIK4csetE
src/ancestry.cc:582: I(!temp_node(n))
src/ancestry.cc:604: I(!null_id(left_rid) && !null_id(right_rid))
I(!null_id(left_rid) && !null_id(right_rid))
src/ancestry.cc:214: I(ancestors.find(parent) != ancestors.end())
I(ancestors.find(parent) != ancestors.end())
src/ancestry.cc:218: I(j != ancestors.end())
src/ancestry.cc
I(!temp_node(n))
new_rid
new_markings
src/ancestry.cc:649: I(false)
called predicate %s times
size() == rhs.size()
relatives
src/ancestry.cc:714: I(false)
I(j != ancestors.end())
void graph_loader::load_revs(graph_loader::load_direction, std::set<revision<id> >&)
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const roster_t; typename boost::detail::sp_dereference<T>::type = const roster_t&]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const marking_map; typename boost::detail::sp_dereference<T>::type = const marking_map&]
void make_roster_for_revision(database&, node_id_source&, const revision_t&, const revision_id&, roster_t&, marking_map&)
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = cset; typename boost::detail::sp_dereference<T>::type = cset&]
boost::dynamic_bitset<Block, Allocator>& boost::dynamic_bitset<Block, Allocator>::operator-=(const boost::dynamic_bitset<Block, Allocator>&) [with Block = long unsigned int; Allocator = std::allocator<long unsigned int>]
bool boost::dynamic_bitset<Block, Allocator>::test(boost::dynamic_bitset<Block, Allocator>::size_type) const [with Block = long unsigned int; Allocator = std::allocator<long unsigned int>; boost::dynamic_bitset<Block, Allocator>::size_type = long unsigned int]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = boost::dynamic_bitset<>; typename boost::detail::sp_member_access<T>::type = boost::dynamic_bitset<>*]
boost::dynamic_bitset<Block, Allocator>& boost::dynamic_bitset<Block, Allocator>::operator|=(const boost::dynamic_bitset<Block, Allocator>&) [with Block = long unsigned int; Allocator = std::allocator<long unsigned int>]
boost::dynamic_bitset<Block, Allocator>& boost::dynamic_bitset<Block, Allocator>::set(boost::dynamic_bitset<Block, Allocator>::size_type, bool) [with Block = long unsigned int; Allocator = std::allocator<long unsigned int>; boost::dynamic_bitset<Block, Allocator>::size_type = long unsigned int]
boost::dynamic_bitset<Block, Allocator>& boost::dynamic_bitset<Block, Allocator>::operator&=(const boost::dynamic_bitset<Block, Allocator>&) [with Block = long unsigned int; Allocator = std::allocator<long unsigned int>]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = boost::dynamic_bitset<>; typename boost::detail::sp_dereference<T>::type = boost::dynamic_bitset<>&]
void boost::dynamic_bitset<Block, Allocator>::m_zero_unused_bits() [with Block = long unsigned int; Allocator = std::allocator<long unsigned int>]
void boost::dynamic_bitset<Block, Allocator>::resize(boost::dynamic_bitset<Block, Allocator>::size_type, bool) [with Block = long unsigned int; Allocator = std::allocator<long unsigned int>; boost::dynamic_bitset<Block, Allocator>::size_type = long unsigned int]
const Block& boost::dynamic_bitset<Block, Allocator>::m_highest_block() const [with Block = long unsigned int; Allocator = std::allocator<long unsigned int>]
boost::dynamic_bitset<Block, Allocator>::~dynamic_bitset() [with Block = long unsigned int; Allocator = std::allocator<long unsigned int>]
*N12_GLOBAL__N_111no_failuresE
*N12_GLOBAL__N_119true_node_id_sourceE
14node_id_source
N5boost6detail17sp_counted_impl_pINS_14dynamic_bitsetImSaImEEEEE
src/cset.cc:361: I(prev_path.empty() || prev_path < p1)
I(prev_path.empty() || prev_path < p1)
src/cset.cc:371: I(prev_path.empty() || prev_path < p1)
src/cset.cc:383: I(prev_path.empty() || prev_path < p1)
src/cset.cc:393: I(prev_path.empty() || prev_path < p1)
src/cset.cc:406: I(prev_path.empty() || prev_path < p1)
src/cset.cc:425: I(prev_pair.first.empty() || new_pair > prev_pair)
I(prev_pair.first.empty() || new_pair > prev_pair)
src/cset.cc:438: I(prev_pair.first.empty() || new_pair > prev_pair)
src/cset.cc:463: I(src.lookahead == EOF)
*this
src/cset.cc
src/cset.cc:53: I(false)
src/cset.cc:69: I(false)
attaches
detaches
drops
prev_path
prev_pair.first
prev_pair.second
cs.attrs_cleared
cs.attrs_set
cset
I(src.lookahead == EOF)
delete
add_file
add_dir
patch
clear
void read_cset(const data&, cset&)
void parse_cset(basic_io::parser&, cset&)
void check_normalized(const cset&)
void cset::apply_to(editable_tree&) const
6MusingI8attr_keyE
6MusingIK4dataE
src/roster.cc:2946: I(*i >= '0' && *i <= '9')
src/roster.cc:1302: I(temp_node(n))
src/roster.cc:486: I(tmpsize >= 0)
src/roster.cc:457: I(!finished())
src/roster.cc:450: I(track_path)
src/roster.cc:2683: I(!null_id(mark->birth_revision))
I(!null_id(mark->birth_revision))
src/roster.cc:2710: I(mark->file_content.empty())
src/roster.cc:808: I(!null_node(nid))
src/roster.cc:827: I(!bookkeeping_path::internal_string_is_bookkeeping_path(typecast_vocab<utf8>(sp.top()->name)))
I(!bookkeeping_path::internal_string_is_bookkeeping_path(typecast_vocab<utf8>(sp.top()->name)))
src/roster.cc:2611: I(has_node(nid))
src/roster.cc:611: I(i == da->children.end() && j == db->children.end())
I(i == da->children.end() && j == db->children.end())
src/roster.hh:133: I(static_cast<bool>(d))
src/roster.cc:690: I(has_root())
src/roster.cc:704: I(child != nd->children.end())
I(child != nd->children.end())
src/roster.cc:1159: I(has_node(pth))
src/roster.cc:498: I(!finished())
src/roster.cc:2782: I(has_root())
src/roster.cc:2892: I(curr->self != the_null_node)
I(curr->self != the_null_node)
src/roster.cc:2924: I(j->second.second().empty())
src/roster.cc:1214: I(old_locations.empty())
src/roster.cc:1215: I(has_root())
src/roster.cc:1223: I(n->name.empty() && null_node(n->parent))
I(n->name.empty() && null_node(n->parent))
src/roster.cc:1228: I(!n->name.empty() && !null_node(n->parent))
I(!n->name.empty() && !null_node(n->parent))
src/roster.cc:1235: I(parent_dir->get_child(n->name) == n)
I(parent_dir->get_child(n->name) == n)
src/roster.cc:1239: I(a->second.first || a->second.second().empty())
I(a->second.first || a->second.second().empty())
src/roster.cc:1243: I(!null_id(downcast_to_file_t(n)->content))
I(!null_id(downcast_to_file_t(n)->content))
src/roster.cc:1246: I(!null_node(nid))
src/roster.cc:1249: I(!temp_node(nid))
src/roster.cc:1251: I(n == get_node(nid))
src/roster.cc:1252: I(maxdepth-- > 0)
src/roster.cc:1254: I(maxdepth == 0)
src/roster.cc:1269: I(!null_id(mi->second->birth_revision))
I(!null_id(mi->second->birth_revision))
src/roster.cc:1270: I(!mi->second->parent_name.empty())
I(!mi->second->parent_name.empty())
src/roster.cc:1273: I(!mi->second->file_content.empty())
I(!mi->second->file_content.empty())
src/roster.cc:1275: I(mi->second->file_content.empty())
I(mi->second->file_content.empty())
src/roster.cc:1283: I(rai->first == mai->first)
src/roster.cc:1284: I(!mai->second.empty())
src/roster.cc:1286: I(rai == ri->second->attrs.end() && mai == mi->second->attrs.end())
I(rai == ri->second->attrs.end() && mai == mi->second->attrs.end())
src/roster.cc:1290: I(ri == nodes.end() && mi == markings.end())
I(ri == nodes.end() && mi == markings.end())
src/roster.cc:1568: I(new_marks.empty())
src/roster.cc:317: I(null_node(child->parent))
src/roster.cc:318: I(child->name.empty())
src/roster.cc:319: I(cow_version == child->cow_version)
I(cow_version == child->cow_version)
src/roster.cc:330: I(cow_version == n->cow_version)
I(cow_version == n->cow_version)
src/roster.cc:2244: I(same_type(from_n, to_n))
src/roster.cc:2245: I(from_n->self == to_n->self)
I(_store.set_if_missing(nid, boost::const_pointer_cast<marking>(m)))
src/roster.cc:243: I(_store.set_if_missing(nid, boost::const_pointer_cast<marking>(m)))
src/roster.cc:2035: I(am != marking->attrs.end())
I(_store.set_if_missing(nid, m))
src/roster.cc:238: I(_store.set_if_missing(nid, m))
src/roster.cc:1672: I(new_marking->parent_name.empty())
I(new_marking->parent_name.empty())
src/roster.cc:1674: I(new_marking->file_content.empty())
I(new_marking->file_content.empty())
src/roster.cc:1677: I(new_marking->attrs.empty())
src/roster.cc:1709: I(same_type(parent_n, n) && parent_n->self == n->self)
I(same_type(parent_n, n) && parent_n->self == n->self)
src/roster.cc:1732: I(new_marks.empty())
src/roster.cc:233: I(_store.size() == pre_sz - 1)
I(_store.size() == pre_sz - 1)
src/roster.cc:1872: I(ri == re || ri->first >= mi->first)
I(ri == re || ri->first >= mi->first)
src/roster.cc:1883: I(mm.size() == ros.all_nodes().size())
I(mm.size() == ros.all_nodes().size())
src/roster.cc:2180: I(!null_id(child_rid))
src/roster.cc:968: I(null_node(n->parent))
src/roster.cc:969: I(n->name.empty())
src/roster.cc:972: I(downcast_to_dir_t(n)->children.empty())
I(downcast_to_dir_t(n)->children.empty())
src/roster.cc:1084: I(f->content == old_id)
src/roster.cc:1085: I(!null_node(f->self))
src/roster.cc:1086: I(!(f->content == new_id))
src/roster.cc:1130: I(val.first || val.second().empty())
I(val.first || val.second().empty())
src/roster.cc:1131: I(!null_node(n->self))
src/roster.cc:1136: I(i->second != val)
src/roster.cc:1045: I(!null_node(n->self))
src/roster.cc:1047: I(null_node(n->parent))
src/roster.cc:1048: I(n->name.empty())
src/roster.cc:1057: I(null_node(parent) && name.empty())
I(null_node(parent) && name.empty())
src/roster.cc:1060: I(!has_root())
src/roster.cc:1063: I(i == old_locations.end() || i->second != make_pair(root_dir->parent, root_dir->name))
I(i == old_locations.end() || i->second != make_pair(root_dir->parent, root_dir->name))
src/roster.cc:1070: I(i == old_locations.end() || i->second != make_pair(n->parent, n->name))
I(i == old_locations.end() || i->second != make_pair(n->parent, n->name))
src/roster.cc:1095: I(!(f->content == new_id))
src/roster.cc:2425: I(restricted.all_nodes().empty())
I(restricted.all_nodes().empty())
src/roster.cc:2460: I(is_dir_t(n->second))
restriction includes deletion of '%s' but excludes deletion of '%s'
restriction excludes addition of '%s' but includes addition of '%s'
restriction excludes addition of root directory
src/roster.cc:1147: I(val.first || val.second().empty())
src/roster.cc:1150: I(i->second != val)
src/roster.cc:946: I(n->name.empty())
src/roster.cc:950: I(!has_root())
src/roster.cc:957: I(parent->detach_child(name) == n)
I(parent->detach_child(name) == n)
src/roster.cc:914: I(has_root())
src/roster.cc:918: I(dirname.empty())
src/roster.cc:924: I(!has_root())
src/roster.cc:935: I(!null_node(nid))
src/roster.cc:2977: I(vers == "1")
src/roster.cc:3009: I(static_cast<bool>(n))
src/roster.cc:3012: I(nodes.set_if_missing(n->self, n))
I(nodes.set_if_missing(n->self, n))
src/roster.cc:3016: I(! has_root())
src/roster.cc:3021: I(!pth.empty())
src/roster.cc:3065: I(src.lookahead == EOF)
src/roster.cc:883: I(!null_node(from))
src/roster.cc:884: I(!null_node(to))
src/roster.cc:891: I(nodes.set_if_missing(to, n))
I(nodes.set_if_missing(to, n))
src/roster.cc:898: I(i->second->parent == from)
src/roster.cc:1930: I(right_uncommon_ancestors.find(right_marking->birth_revision) != right_uncommon_ancestors.end())
I(right_uncommon_ancestors.find(right_marking->birth_revision) != right_uncommon_ancestors.end())
src/roster.cc:1939: I(left_uncommon_ancestors.find(left_marking->birth_revision) != left_uncommon_ancestors.end())
I(left_uncommon_ancestors.find(left_marking->birth_revision) != left_uncommon_ancestors.end())
src/roster.cc:1770: I(same_type(ln, n) && same_type(rn, n))
I(same_type(ln, n) && same_type(rn, n))
src/roster.cc:1771: I(left_marking->birth_revision == right_marking->birth_revision)
I(left_marking->birth_revision == right_marking->birth_revision)
src/roster.cc:1613: I(new_marks.empty())
src/roster.cc:1623: I(right_uncommon_ancestors.find(*i) == right_uncommon_ancestors.end())
I(right_uncommon_ancestors.find(*i) == right_uncommon_ancestors.end())
src/roster.cc:1626: I(left_uncommon_ancestors.find(*i) == left_uncommon_ancestors.end())
I(left_uncommon_ancestors.find(*i) == left_uncommon_ancestors.end())
src/roster.cc:1807: I(new_marking->attrs.find(key) == new_marking->attrs.end())
I(new_marking->attrs.find(key) == new_marking->attrs.end())
src/roster.cc:1847: I(n->attrs.find(i->first) != n->attrs.end())
I(n->attrs.find(i->first) != n->attrs.end())
src/roster.cc:1850: I(n->attrs.find(i->first) != n->attrs.end())
src/roster.cc:2083: I(left_uncommon_ancestors.find(left_rid) != left_uncommon_ancestors.end())
I(left_uncommon_ancestors.find(left_rid) != left_uncommon_ancestors.end())
src/roster.cc:2084: I(left_uncommon_ancestors.find(right_rid) == left_uncommon_ancestors.end())
I(left_uncommon_ancestors.find(right_rid) == left_uncommon_ancestors.end())
src/roster.cc:2085: I(right_uncommon_ancestors.find(right_rid) != right_uncommon_ancestors.end())
I(right_uncommon_ancestors.find(right_rid) != right_uncommon_ancestors.end())
src/roster.cc:2086: I(right_uncommon_ancestors.find(left_rid) == right_uncommon_ancestors.end())
I(right_uncommon_ancestors.find(left_rid) == right_uncommon_ancestors.end())
src/roster.cc:1432: I(temp_node(bid))
src/roster.cc:1459: I(a_new.find(aid) == a_new.end())
I(a_new.find(aid) == a_new.end())
src/roster.cc:1473: I(left_i->second->self == right_i->second->self)
I(left_i->second->self == right_i->second->self)
src/roster.cc:1489: I(!j.left_data().first)
src/roster.cc:1495: I(!j.right_data().first)
src/roster.cc:1522: I(left_i == left.all_nodes().end())
I(left_i == left.all_nodes().end())
src/roster.cc:1523: I(right_i == right.all_nodes().end())
I(right_i == right.all_nodes().end())
src/roster.cc:2123: I(equal_shapes(new_roster, from_right_r))
I(equal_shapes(new_roster, from_right_r))
src/roster.cc:2125: I(new_roster == from_right_r)
src/roster.cc:2082: I(!null_id(left_rid) && !null_id(right_rid))
src/roster.cc:2593: I(old_roster.has_node(*i))
src/roster.cc:2600: I(new_roster.has_node(*i))
live
attr key: '
  status: 
   value: '
birth_revision: 
parent_name: 
file_content: 
attrs (number: 
 node 
 path 
src/roster.cc
Marking for 
I(*i >= '0' && *i <= '9')
I(temp_node(n))
I(tmpsize >= 0)
I(!finished())
I(track_path)
birth [
path_mark [
content_mark [
I(mark->file_content.empty())
attr_mark "
src/roster.cc:791: I(n)
I(!null_node(nid))
src/roster.cc:206: I(m)
I(has_node(nid))
address: 
 (uses: 
self: 
attrs:
type: 
file
content: 
children: 
   at 
, uses: 
Node 
root dir is NULL
Root node: 
I(has_root())
I(has_node(pth))
format_version "1"
dir "
file "
ident "
I(j->second.second().empty())
dormant_attr "
old_locations
I(old_locations.empty())
I(!temp_node(nid))
I(n == get_node(nid))
I(maxdepth-- > 0)
I(maxdepth == 0)
I(rai->first == mai->first)
I(!mai->second.empty())
I(new_marks.empty())
I(null_node(child->parent))
I(child->name.empty())
marking->parent_name
marking->file_content
marking->attrs[key]
src/roster.cc:2317: I(false)
I(same_type(from_n, to_n))
I(from_n->self == to_n->self)
src/roster.cc:213: I(m)
I(am != marking->attrs.end())
I(new_marking->attrs.empty())
parent_marking->attrs
parent_markings
child_rid
child_markings
I(!null_id(child_rid))
I(null_node(n->parent))
I(n->name.empty())
src/roster.cc:870: I(p)
I(f->content == old_id)
I(!null_node(f->self))
I(!(f->content == new_id))
I(!null_node(n->self))
I(i->second != val)
src/roster.cc:799: I(n)
I(!has_root())
this->r
restricted
src/roster.cc:2390: I(false)
selected node %d %s parent %d
deferred node %d %s parent %d
I(is_dir_t(n->second))
adding node %d %s parent %d
src/roster.cc:2512: I(false)
invalid restriction
E(problems == 0)
I(dirname.empty())
I(vers == "1")
I(static_cast<bool>(n))
I(! has_root())
I(!pth.empty())
I(!null_node(from))
I(!null_node(to))
src/roster.cc:886: I(n)
I(i->second->parent == from)
n->self
left_marking->attrs
right_marking->attrs
new_marks
left_cs
right_cs
from_right_r
I(temp_node(bid))
src/roster.cc:1485: I(false)
I(!j.left_data().first)
I(!j.right_data().first)
left_n->attrs
right_n->attrs
I(new_roster == from_right_r)
I(old_roster.has_node(*i))
I(new_roster.has_node(*i))
birth
dormant_attr
path_mark
attr_mark
void select_restricted_nodes(const roster_t&, const roster_t&, const node_restriction&, std::map<unsigned int, boost::shared_ptr<node> >&)
void make_restricted_roster(const roster_t&, const roster_t&, roster_t&, const node_restriction&)
void {anonymous}::delta_in_both(node_id, const roster_t&, node_t, const roster_t&, node_t, cset&)
void make_cset(const roster_t&, const roster_t&, cset&)
void mark_roster_with_one_parent(const roster_t&, const marking_map&, const revision_id&, const roster_t&, marking_map&)
void {anonymous}::union_corpses(roster_t&, roster_t&)
void make_roster_for_merge(const revision_id&, const roster_t&, const marking_map&, const cset&, const std::set<revision<id> >&, const revision_id&, const roster_t&, const marking_map&, const cset&, const std::set<revision<id> >&, const revision_id&, roster_t&, marking_map&, node_id_source&)
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const marking; typename boost::detail::sp_dereference<T>::type = const marking&]
void {anonymous}::mark_merged_node(const const_marking_t&, const std::set<revision<id> >&, const_node_t, const const_marking_t&, const std::set<revision<id> >&, const_node_t, const revision_id&, const_node_t, marking_map&)
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const marking; typename boost::detail::sp_member_access<T>::type = const marking*]
virtual void editable_roster_base::attach_node(node_id, const file_path&)
void roster_t::check_sane(bool) const
void roster_t::attach_node(node_id, const file_path&)
void boost::shared_ptr<T>::reset(Y*) [with Y = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type; T = void]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type; typename boost::detail::sp_dereference<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type&]
void boost::shared_ptr<T>::reset(Y*) [with Y = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type; T = void]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type; typename boost::detail::sp_dereference<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type&]
bool roster_t::has_node(const file_path&) const
node_t roster_t::get_node_internal(const file_path&) const
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const file_node; typename boost::detail::sp_member_access<T>::type = const file_node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const dir_node; typename boost::detail::sp_member_access<T>::type = const dir_node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const node; typename boost::detail::sp_member_access<T>::type = const node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = file_node; typename boost::detail::sp_member_access<T>::type = file_node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = dir_node; typename boost::detail::sp_member_access<T>::type = dir_node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = node; typename boost::detail::sp_member_access<T>::type = node*]
void boost::shared_ptr<T>::reset(Y*) [with Y = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::leaf_node_type; T = void]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::leaf_node_type; typename boost::detail::sp_dereference<T>::type = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::leaf_node_type&]
void boost::shared_ptr<T>::reset(Y*) [with Y = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::middle_node_type; T = void]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::middle_node_type; typename boost::detail::sp_dereference<T>::type = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::middle_node_type&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::middle_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::middle_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::leaf_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::leaf_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = marking; typename boost::detail::sp_member_access<T>::type = marking*]
*N12_GLOBAL__N_125editable_roster_for_mergeE
*N12_GLOBAL__N_128editable_roster_for_nonmergeE
8dir_node
9file_node
19temp_node_id_source
20editable_roster_base
6MusingIK9file_pathE
6MusingIKSt3mapIjSt4pairIj14path_componentESt4lessIjESaIS1_IKjS3_EEEE
6MusingIN8parallel4iterISt3mapI8attr_keySt4pairIb10attr_valueESt4lessIS3_ESaIS4_IKS3_S6_EEEEEE
6MusingIKjE
6MusingIK8attr_keyE
6MusingIK11marking_mapE
6MusingIKSt3setI8revisionI2idESt4lessIS3_ESaIS3_EEE
N5boost6detail17sp_counted_impl_pI7markingEE
N5boost6detail17sp_counted_impl_pI8dir_nodeEE
N5boost6detail17sp_counted_impl_pI9file_nodeEE
N5boost6detail17sp_counted_impl_pIN8cow_trieIjNS_10shared_ptrI7markingEELi8EE16middle_node_typeEEE
N5boost6detail17sp_counted_impl_pIN8cow_trieIjNS_10shared_ptrI7markingEELi8EE14leaf_node_typeEEE
N5boost6detail17sp_counted_impl_pIN8cow_trieIjNS_10shared_ptrI4nodeEELi8EE16middle_node_typeEEE
N5boost6detail17sp_counted_impl_pIN8cow_trieIjNS_10shared_ptrI4nodeEELi8EE14leaf_node_typeEEE
33333Cr@333333Y@%s (base revision: %s)
1_58
3.8.11
Lua 5.3
Running on          : %s
C++ compiler        : %s
C++ standard library: %s
Boost version       : %s
SQLite version      : %s (compiled against %s)
Lua version         : %s
PCRE version        : %s (compiled against %d.%d)
Botan version       : %d.%d.%d (compiled against %d.%d.%d)
Changes since base revision:
GNU C++ version 5.1.1 20150618 (Red Hat 5.1.1-4)
GNU libstdc++ version 20150618
E(db.file_version_exists(f_id))
E(db.file_version_exists(f_old_id))
E(db.file_version_exists(f_new_id))
E(db.file_version_exists(base_id))
src/automate.cc:2117: I(false)
E(args.size() == 1 || args.size() == 2)
Prints the heads of the given branch
Prints the ancestors of the given revisions
Prints the descendents of the given revisions
Erases the ancestors in a list of revisions
Erases the descendants in a list of revisions
Topologically sorts a list of revisions
Lists the ancestors of the first revision given, not in the others
NEW_REV [OLD_REV1 [OLD_REV2 [...]]]
Lists the leaves of the revision graph
Lists the roots of the revision graph
Prints the parents of a revision
Prints the children of a revision
Prints the complete ancestry graph
Lists the revisions that match a selector
Prints a summary of files found in the workspace
Shows change information for a revision
Shows change information for a workspace
Shows the revision on which the workspace is based
Shows the revision of the current workspace
Shows the manifest associated with a revision
Prints the extended manifest for the given identifier
Prints the revision data in packet format
Prints the certs associated with a revision in packet format
Prints the file data in packet format
Prints the file delta in packet format
Prints revisions that are common ancestors of a list of revisions
Prints all branch certs in the revision graph
Prints all tags attached to a set of branches
Lists the revisions that changed the content relative to another revision
Prints the name of a file in a target revision relative to a given revision
Stores a revision into the database
Prints the workspace root for the current directory
Executes the given lua function and returns the result
LUA_FUNCTION [ARG1 [ARG2 [...]]]
with no argument, this command prints the heads of the workspace's branch
file '%s' is unknown for revision %s
E(db.revision_exists(old_ident))
src/automate.cc:2165: I(calculated == rev.new_manifest)
I(calculated == rev.new_manifest)
E(db.put_revision(id, rev) || db.revision_exists(id))
missing prerequisite for revision %s
no variables found or invalid domain specified
no variables found in domain '%s'
src/automate.cc:1514: I(s != file_sizes.end())
src/automate.cc:1535: I(j->second.second().empty())
src/automate.cc:1540: I(!null_id(mark->birth_revision))
src/automate.cc:1559: I(mark->file_content.empty())
src/automate.cc:523: I(j->first == i->first)
lua function '%s' does not exist
E(app.lua.hook_hook_wrapper(func, func_args, out))
'%s' is both known and ignored; it will be shown as 'missing'. Check '.mtn-ignore'
src/automate.cc:1161: I(false)
src/automate.cc:1176: I(false)
src/automate.cc:1198: I(!states.empty())
no completions for this command
multiple completions possible for this command
src/automate.cc:2475: I(cmd != NULL)
src/automate.cc:2478: I(acmd != NULL)
sorry, that can't be run remotely or over stdio
src/automate.cc
dumping revision %s
E(db.revision_exists(r_id))
no such file '%s'
[BRANCH]
REV1 [REV2 [REV3 [...]]]
descendents
[REV1 [REV2 [REV3 [...]]]]
erase_ancestors
erase_descendants
toposort
ancestry_difference
SELECTOR
select
inventory
get_revision
[PATHS ...]
get_current_revision
get_base_revision_id
get_current_revision_id
get_manifest_of
get_extended_manifest_of
packet_for_rdata
packets_for_certs
FILEID
packet_for_fdata
OLD_FILE NEW_FILE
packet_for_fdelta
[BRANCH_PATTERN]
Shows the value of an option
OPTION
get_option
REV FILE
get_content_changed
REV1 FILE REV2
get_corresponding_path
Stores a file in the database
[FILEID] CONTENTS
put_file
REVISION-DATA
put_revision
Adds a revision certificate
REVISION-ID NAME VALUE
Retrieve database variables
get_db_variables
set_db_variable
Drops a database variable
DOMAIN [NAME]
drop_db_variables
get_workspace_root
E(db.revision_exists(a))
E(db.revision_exists(b))
dumping manifest %s
E(db.revision_exists(ident))
E(found_something)
E(db.var_exists(key))
src/automate.cc:598: I(false)
I(s != file_sizes.end())
I(j->first == i->first)
signer
E(app.lua.hook_exists(func))
lua call '%s' failed
rename_source
rename_target
I(!states.empty())
I(acmd != NULL)
E(acmd->can_run_from_stdio())
old_type
new_type
fs_type
old_path
new_path
domain
entry
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cset; typename boost::detail::sp_member_access<T>::type = cset*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const marking; typename boost::detail::sp_member_access<T>::type = const marking*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const file_node; typename boost::detail::sp_member_access<T>::type = const file_node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const node; typename boost::detail::sp_member_access<T>::type = const node*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const marking_map; typename boost::detail::sp_dereference<T>::type = const marking_map&]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const roster_t; typename boost::detail::sp_dereference<T>::type = const roster_t&]
N8commands14automate_headsE
N8commands18automate_ancestorsE
N8commands20automate_descendentsE
N8commands24automate_erase_ancestorsE
N8commands26automate_erase_descendantsE
N8commands17automate_toposortE
N8commands28automate_ancestry_differenceE
N8commands15automate_leavesE
N8commands14automate_rootsE
N8commands16automate_parentsE
N8commands17automate_childrenE
N8commands14automate_graphE
N8commands15automate_selectE
18inventory_itemizer
N8commands18automate_inventoryE
N8commands21automate_get_revisionE
N8commands29automate_get_current_revisionE
N8commands29automate_get_base_revision_idE
N8commands32automate_get_current_revision_idE
N8commands24automate_get_manifest_ofE
N8commands33automate_get_extended_manifest_ofE
N8commands25automate_packet_for_rdataE
N8commands26automate_packets_for_certsE
N8commands25automate_packet_for_fdataE
N8commands26automate_packet_for_fdeltaE
N8commands25automate_common_ancestorsE
N8commands17automate_branchesE
N8commands13automate_tagsE
N8commands19automate_get_optionE
N8commands28automate_get_content_changedE
N8commands31automate_get_corresponding_pathE
N8commands17automate_put_fileE
N8commands21automate_put_revisionE
N8commands13automate_certE
N8commands25automate_get_db_variablesE
N8commands24automate_set_db_variableE
N8commands26automate_drop_db_variablesE
N8commands27automate_get_workspace_rootE
N8commands12automate_luaE
revision %s missing (%d revision references; %d cert references; %d parent references; %d child references; %d roster references)
revision %s incomplete (%d missing manifests)
revision %s incomplete (%d missing revisions)
revision %s incomplete (missing roster)
revision %s mismatched roster and manifest
revision %s incomplete (incomplete roster)
revision %s mismatched parents (%d ancestry parents; %d revision refs)
revision %s mismatched children (%d ancestry children; %d parents)
revision %s has bad history (%s)
revision %s is not parseable (perhaps with unnormalized paths?)
revision %s is not in normalized form
checking %d rosters, manifest pass
src/database_check.cc:254: I(checked_rosters.size() == rosters.size())
I(checked_rosters.size() == rosters.size())
src/database_check.cc:376: I(checked_rosters[*i].found)
checked %d revisions after starting with %d
missing height(s), skipping edge %s -> %s
checking heights for edges %s -> %s
error: height %s of child %s not greater than height %s of parent %s
error loading height when checking heads of '%s'
revision %s unchecked signature in %s cert from missing key %s
revision %s bad signature in %s cert from key %s
revision %s mismatched certs (%d authors %d dates %d changelogs)
asking sqlite to check db integrity
file structure is corrupted; cannot check further
missing file size entry for %s
src/database_check.cc:191: I(checked_files.size() == files.size())
I(checked_files.size() == files.size())
checking %d rosters, marking pass
file %s missing (%d manifest references)
file %s has a missing or invalid file size
roster %s incomplete (%d missing files)
roster %s incomplete (%d missing revisions)
key %s missing (signed %d certs)
height missing for revision %s
duplicate height for revision %s
height of revision %s not greater than that of parent
%d missing or invalid file sizes
%d revisions not parseable (perhaps with invalid paths)
%d revisions not in normalized form
%d unchecked signatures due to missing keys
%d branches cached but not used
%d branches with incorrect head count
%d branches missing from branch cache
check complete: %d files; %d rosters; %d revisions; %d keys; %d certs; %d heights; %d branches
total problems detected: %d (%d serious)
src/database_check.cc
checking roster %s
error loading roster %s: %s
checking %d revisions
checking revision %s
I(checked_rosters[*i].found)
error parsing revision %s: %s
checking %d heights
checking height for %s
error: height not unique: %s
error loading height: %s
checking heights for %d edges
height relations
checking %d branches
revision %s missing %s cert
E(db.check_integrity())
checking %d files
checking file %s
checking %d ancestry edges
checking %d public keys
checking %d revision certs
file %s unreferenced
roster %s unreferenced
key %s signed %d certs
cached branch '%s' not used
branch '%s' not cached
branch '%s' wrong head count
%d missing files
%d unreferenced files
%d unreferenced rosters
%d incomplete rosters
%d missing revisions
%d incomplete revisions
%d mismatched parents
%d mismatched children
%d revisions with bad history
%d missing rosters
%d missing keys
%d missing certs
%d mismatched certs
%d bad signatures
%d missing heights
%d duplicate heights
%d incorrect heights
serious problems detected
minor problems detected
database is good
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const marking; typename boost::detail::sp_member_access<T>::type = const marking*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const node; typename boost::detail::sp_member_access<T>::type = const node*]
epoch, branch name
epoch, epoch data
Ran out of memory, allocation failed
zlib_free: Got pointer not allocated by us
Gzip_Decompression: start_msg after already writing
Gzip_Decompression: didn't find footer
Gzip_Decompression: Error finalizing decompression
Gzip_Decompression: Data integrity error - incorrect length
Gzip_Decompression: Data integrity error - CRC32 error
Gzip_Decompression: Data integrity error in footer
Gzip_Decompression: Data integrity error in header
Gzip_Decompression: Data integrity error
Gzip_Decompression: Need preset dictionary
1.2.8
N5Botan6FilterE
N5Botan13Invalid_StateE
N5Botan17Memory_ExhaustionE
N5Botan16Gzip_CompressionE
N5Botan18Gzip_DecompressionE
inodeprints file format is wrong, skipping it
inodeprints file version is unknown, skipping it
src/inodeprint.cc:85: I(src.lookahead == EOF)
src/inodeprint.cc
inodeprint
21inodeprint_calculator
14my_iprint_calc
the '%s' function takes %d arguments, not %d
the '%s' function takes %d argument, not %d
selection '%s' has multiple ambiguous expansions:
selector '%s' is not a valid date
E(lua.hook_expand_date(sel, tmp))
expanded date '%s' to UTC -> '%s'
selector '%s' is not a valid date (internally completed to '%s')
the empty parent selector p: refers to the base revision of the workspace
expansion of selector '%s' failed
expanded selector '%s' -> '%s'
the empty branch selector b: refers to the current branch
the cert selector c: may not be empty
the empty head selector h: refers to the head of the current branch
the key selector k: must not be empty
no value is allowed with the update selector u:
the update selector u: refers to the revision before the last update in the workspace
no value is allowed with the base revision selector w:
the selector w: returns the base revision(s) of the workspace
after get_branch_heads for %s, heads has %d entries
unknown selection function '%s'
selector '%s' is invalid, it ends with the escape character '\'
src/selectors.cc:749: I(!val2.empty())
selector '%s' is invalid, it contains an unknown escape sequence '%s%s'
E(special_chars.find(val2) != string::npos)
Processing token number %d: '%s'
src/selectors.cc:791: I(idx(items, items.size() - lparen_pos).str == "(")
I(idx(items, items.size() - lparen_pos).str == "(")
found function-like selector '%s' at stack position %d of %d
        found argument at stack position %d
E(i == items.size() - 1 || idx(items,i+1).str == ";")
E(lparen_pos == 2 && idx(items, items.size() - 1).sel)
selector '%s' is invalid, because it starts with a '/'
selector '%s' is invalid, because it starts with a '|'
selector '%s' is invalid, because there is a '%s' someplace it shouldn't be
src/selectors.cc:896: I(new_item)
E(items.size() == 1 && items[0].sel)
selector '%s' is invalid, function argument doesn't look like an arg-list
selector '%s' is invalid, grouping parentheses contain something that doesn't look like an expr
selector '%s' is invalid, don't mix '/' and '|' operators without parentheses
selector '%s' is invalid, it doesn't look like an expr
selector '%s' is invalid, unmatched ')'
E(project.db.revision_exists(*completions.begin()))
E(project.db.revision_exists(*i))
src/selectors.cc:956: I(!completions.empty())
src/selectors.cc
E(expected == actual)
E(tmp.size()==19 || equals)
-01T00:00:00
GLOB
E(!value.empty())
E(!arg.empty())
E(arg.empty())
unknown selector type: %c
found %d matching branches
pick
();\/|
tokenizing selector '%s'
E(iter != tokenizer.end())
I(!val2.empty())
tokens: '%s'
items.size() - lparen_pos
E(lparen_pos < items.size())
name_idx
items.size() - 1
E(!items.empty())
E(lhs)
E(op == "/" || !lhs_as_and)
E(op == "|" || !lhs_as_or)
I(new_item)
items.size() - 3
items.size() - 2
expanding selection '%s'
no match for selection '%s'
E(!completions.empty())
expanded to '%s'
I(!completions.empty())
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = ident_selector; typename boost::detail::sp_member_access<T>::type = ident_selector*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = or_selector; typename boost::detail::sp_member_access<T>::type = or_selector*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = and_selector; typename boost::detail::sp_member_access<T>::type = and_selector*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = fn_selector; typename boost::detail::sp_member_access<T>::type = fn_selector*]
void boost::token_iterator<TokenizerFunc, Iterator, Type>::increment() [with TokenizerFunc = boost::char_separator<char>; Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Type = std::__cxx11::basic_string<char>]
const Type& boost::token_iterator<TokenizerFunc, Iterator, Type>::dereference() const [with TokenizerFunc = boost::char_separator<char>; Iterator = __gnu_cxx::__normal_iterator<const char*, std::__cxx11::basic_string<char> >; Type = std::__cxx11::basic_string<char>]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = selector; typename boost::detail::sp_member_access<T>::type = selector*]
8selector
15author_selector
12key_selector
15branch_selector
13cert_selector
13date_selector
21earlier_than_selector
13head_selector
14ident_selector
19later_than_selector
16message_selector
15parent_selector
12tag_selector
15update_selector
21working_base_selector
16unknown_selector
11or_selector
12and_selector
15nested_selector
11fn_selector
N5boost6detail17sp_counted_impl_pI14ident_selectorEE
N5boost6detail17sp_counted_impl_pI16unknown_selectorEE
N5boost6detail17sp_counted_impl_pI15author_selectorEE
N5boost6detail17sp_counted_impl_pI15branch_selectorEE
N5boost6detail17sp_counted_impl_pI13cert_selectorEE
N5boost6detail17sp_counted_impl_pI13date_selectorEE
N5boost6detail17sp_counted_impl_pI21earlier_than_selectorEE
N5boost6detail17sp_counted_impl_pI13head_selectorEE
N5boost6detail17sp_counted_impl_pI12key_selectorEE
N5boost6detail17sp_counted_impl_pI19later_than_selectorEE
N5boost6detail17sp_counted_impl_pI16message_selectorEE
N5boost6detail17sp_counted_impl_pI15parent_selectorEE
N5boost6detail17sp_counted_impl_pI12tag_selectorEE
N5boost6detail17sp_counted_impl_pI15update_selectorEE
N5boost6detail17sp_counted_impl_pI21working_base_selectorEE
N5boost6detail17sp_counted_impl_pI11fn_selectorEE
N5boost6detail17sp_counted_impl_pI15nested_selectorEE
N5boost6detail17sp_counted_impl_pI12and_selectorEE
N5boost6detail17sp_counted_impl_pI11or_selectorEE
annotate_equivalent_lines unable to find equivalent for line %d
src/annotate.cc:330: I(j != equivalent_lines.end())
I(j != equivalent_lines.end())
src/annotate.cc:343: I(annotated_lines_completed < annotations.size())
I(annotated_lines_completed < annotations.size())
annotate_context::annotate_context initialized with %d file lines
annotate_context::annotate_context initialized with %d entries in annotations
src/annotate.cc:291: I(index >= 0 && index < (int)file_lines.size())
I(index >= 0 && index < (int)file_lines.size())
src/annotate.cc:303: I(index >= 0 && index <= (int)file_lines.size())
I(index >= 0 && index <= (int)file_lines.size())
src/annotate.cc:716: I(!markings->file_content.empty())
I(!markings->file_content.empty())
annotate_context::set_equivalent index %d index2 %d
src/annotate.cc:659: I(file_interned.size() == other.file_interned.size())
I(file_interned.size() == other.file_interned.size())
src/annotate.cc:660: I(mapping.size() == other.mapping.size())
I(mapping.size() == other.mapping.size())
src/annotate.cc:392: I(annotations.size() == file_lines.size())
I(annotations.size() == file_lines.size())
src/annotate.cc:456: I(annotations.size() == file_lines.size())
annotate_lineage_mapping::init_with_lines ending with %d entries in mapping
%s file_interned[%d]: %ld	lcs[%d]: %ld	mapping[%d]: %ld
src/annotate.cc:610: I(j == lcs.size())
src/annotate.cc:642: I(j == lcs.size())
src/annotate.cc:250: I(copied_lines.size() <= annotations.size())
I(copied_lines.size() <= annotations.size())
src/annotate.cc:251: I(touched_lines.size() <= annotations.size())
I(touched_lines.size() <= annotations.size())
src/annotate.cc:262: I(*i < annotations.size())
do_annotate_node processing edge from parent %s to child %s
src/annotate.cc:742: I(!(work_unit.revision == parent_revision))
I(!(work_unit.revision == parent_revision))
parent file identical, set copied all mapped and copy lineage
building parent lineage for parent file %s
merging lineage from node %s to parent %s
annotating file %s with content %s in revision %s
src/annotate.cc:880: I(w != work_units.end())
src/annotate.cc:891: I(acp->is_complete())
src/annotate.cc
%s.. by '%s' %s: 
%s.. by '%s': 
%s.. %s: 
%s..: 
I(j == lcs.size())
I(*i < annotations.size())
do_annotate_node for node %s
file added in %s, continuing
I(w != work_units.end())
I(acp->is_complete())
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = annotate_lineage_mapping; typename boost::detail::sp_dereference<T>::type = annotate_lineage_mapping&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const file_node; typename boost::detail::sp_member_access<T>::type = const file_node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const marking; typename boost::detail::sp_member_access<T>::type = const marking*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = annotate_lineage_mapping; typename boost::detail::sp_member_access<T>::type = annotate_lineage_mapping*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = annotate_context; typename boost::detail::sp_member_access<T>::type = annotate_context*]
N5boost6detail17sp_counted_impl_pI24annotate_lineage_mappingEE
N5boost6detail17sp_counted_impl_pI16annotate_contextEE
restriction includes unknown path '%s'
restriction excludes unknown path '%s'
src/restrictions.cc:343: I(roster.has_node(nid))
depth includes nid %d path '%s'
depth excludes nid %d path '%s'
explicit include of nid %d path '%s'
explicit exclude of nid %d path '%s'
implicit include of nid %d path '%s'
default include of nid %d path '%s'
(debug) default exclude of nid %d path '%s'
conflicting include/exclude on path '%s'
including required parent '%s'
src/restrictions.cc
%d unknown paths
%d unknown path
E(bad == 0)
I(roster.has_node(nid))
depth includes path '%s'
depth excludes path '%s'
empty include of path '%s'
explicit include of path '%s'
explicit exclude of path '%s'
implicit include of path '%s'
default include of path '%s'
default exclude of path '%s'
E(n->second == status)
including missing parent '%s'
E(p->second == status)
bool node_restriction::includes(const roster_t&, node_id) const
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const roster_t; typename boost::detail::sp_dereference<T>::type = const roster_t&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const node; typename boost::detail::sp_member_access<T>::type = const node*]
*N12_GLOBAL__N_122unknown_unignored_nodeE
*N12_GLOBAL__N_122unknown_unignored_pathE
src/hmac.cc:49: I(pos < str.size())
src/hmac.cc:53: I(pos + n <= str.size())
src/hmac.cc:61: I(chain_val.size() == constants::sha1_digest_length)
src/hmac.cc:71: I(pos < str.size())
src/hmac.cc:75: I(pos + n <= str.size())
src/string_queue.hh:141: I(strsize <= max_string_queue_size)
I(strsize <= max_string_queue_size)
src/string_queue.hh:142: I(used_size () >= strsize)
src/hmac.cc:84: I(chain_val.size() == constants::sha1_digest_length)
src/hmac.cc:47: I(active)
src/hmac.cc
I(pos < str.size())
I(pos + n <= str.size())
src/hmac.cc:69: I(active)
I(used_size () >= strsize)
HMAC(SHA-160)
note: your workspace has not been updated
src/maybe_workspace_updater.cc
invalid_name_conflict on node: 
directory_loop_conflict on node: 
orphaned_node_conflict on node: 
multiple_name_conflict on node: 
src/merge_roster.cc:354: I(false)
src/merge_roster.cc:64: I(false)
duplicate_name_conflict between left node: 
file_content_conflict on node: 
src/merge_roster.cc:41: I(false)
missing_root_conflict: root directory has been removed
unsupported '%s' conflict resolution in mtn:resolve_conflict attribute
src/merge_roster.cc:464: I(name.empty())
src/merge_roster.cc:581: I(n->self == old_n->self)
src/merge_roster.cc:618: I(false)
src/merge_roster.cc:654: I(false)
src/merge_roster.cc:691: I(new_i->first == i.left_key())
I(new_i->first == i.left_key())
src/merge_roster.cc:692: I(left_mi->first == i.left_key())
I(left_mi->first == i.left_key())
src/merge_roster.cc:693: I(right_mi->first == i.right_key())
I(right_mi->first == i.right_key())
src/merge_roster.cc:323: I(!(left_wins && right_wins))
src/merge_roster.cc:343: I(false)
src/merge_roster.cc:720: I(false)
src/merge_roster.cc:769: I(false)
src/merge_roster.cc:780: I(conflict.key == attr_i.right_key())
I(conflict.key == attr_i.right_key())
src/merge_roster.cc:816: I(left_mi == left_markings.end())
I(left_mi == left_markings.end())
src/merge_roster.cc:817: I(right_mi == right_markings.end())
I(right_mi == right_markings.end())
src/merge_roster.cc:818: I(new_i == result.roster.all_nodes().end())
I(new_i == result.roster.all_nodes().end())
src/merge_roster.cc:915: I(n->name == bookkeeping_root_component)
I(n->name == bookkeeping_root_component)
basename: 
left parent: 
right parent: 
attribute_conflict on node: 
attr: '
left: 
right: 
src/merge_roster.cc
content_user
content_internal
content_user_rename
, content: '
, rename: '
and right node: 
left_resolution: 
 resolution: 
left_side
right_side
dropped_modified_conflict -
 dropped_side    : 
 left_nid        : 
 right_nid       : 
 orphaned        : 
 left_rid        : 
 right_rid       : 
 left_resolution : 
 right_resolution: 
mtn:resolve_conflict
I(name.empty())
I(n->self == old_n->self)
Performing a roster_merge
left_parent
right_parent
left_marks
right_marks
I(!(left_wins && right_wins))
new_n->attrs
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = node; typename boost::detail::sp_member_access<T>::type = node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = dir_node; typename boost::detail::sp_member_access<T>::type = dir_node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const node; typename boost::detail::sp_member_access<T>::type = const node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::middle_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::middle_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::leaf_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::leaf_node_type*]
bool {anonymous}::merge_scalar(const T&, const std::set<revision<id> >&, const std::set<revision<id> >&, const T&, const std::set<revision<id> >&, const std::set<revision<id> >&, T&, C&) [with T = std::pair<bool, attr_value>; C = attribute_conflict]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = marking; typename boost::detail::sp_member_access<T>::type = marking*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = file_node; typename boost::detail::sp_member_access<T>::type = file_node*]
bool {anonymous}::merge_scalar(const T&, const std::set<revision<id> >&, const std::set<revision<id> >&, const T&, const std::set<revision<id> >&, const std::set<revision<id> >&, T&, C&) [with T = file<id>; C = file_content_conflict]
bool {anonymous}::merge_scalar(const T&, const std::set<revision<id> >&, const std::set<revision<id> >&, const T&, const std::set<revision<id> >&, const std::set<revision<id> >&, T&, C&) [with T = std::pair<unsigned int, path_component>; C = multiple_name_conflict]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const marking; typename boost::detail::sp_member_access<T>::type = const marking*]
void roster_merge(const roster_t&, const marking_map&, const std::set<revision<id> >&, const roster_t&, const marking_map&, const std::set<revision<id> >&, roster_merge_result&)
src/merge_conflict.cc:1698: I(ancestor_roster)
src/merge_conflict.cc:1699: I(ancestor_roster->has_node(conflict.nid))
I(ancestor_roster->has_node(conflict.nid))
src/merge_conflict.cc:2382: I(tmp == "dropped")
src/merge_conflict.cc:2360: I(tmp == "dropped")
src/merge_conflict.cc:40: I(false)
src/merge_conflict.cc:484: I(false)
src/merge_conflict.cc:1594: I(ancestor_roster)
src/merge_conflict.cc:1595: I(ancestor_roster->has_node(conflict.nid))
conflict: content conflict on file '%s'
content hash is %s on the left
content hash is %s on the right
conflict: content conflict on file '%s' from revision %s
content hash is %s on the left in file '%s'
content hash is %s on the right in file '%s'
src/merge_conflict.cc:2459: I(tmp == "file")
src/merge_conflict.cc:2474: I(conflict.nid = right_roster.get_node (file_path_internal (right_name))->self)
I(conflict.nid = right_roster.get_node (file_path_internal (right_name))->self)
%s is not a supported conflict resolution for %s
src/merge_conflict.cc:2037: I(false)
src/merge_conflict.cc:2079: I(false)
src/merge_conflict.cc:2772: I(!target_path.empty())
E(!new_roster.has_node(target_path))
directory '%s' does not exist or is unknown
E(new_roster.has_node(target_path.dirname()))
E(resolve_conflicts::do_auto_merge(lua, conflict, adaptor, left_roster, right_roster, this->roster, merged_id))
replacing content of '%s', '%s' with '%s'
src/merge_conflict.cc:3370: I(false)
can't drop directory '%s'; it is not empty
E(downcast_to_dir_t(roster.get_node(conflict.nid))->children.empty())
no resolution provided for orphaned_node '%s'
invalid resolution for orphaned_node '%s'
src/merge_conflict.cc:1105: I(!roster.is_attached(conflict.right_nid))
I(!roster.is_attached(conflict.right_nid))
src/merge_conflict.cc:1112: I(!roster.is_attached(conflict.left_nid))
I(!roster.is_attached(conflict.left_nid))
modified on the right, named %s
modified on the left, named %s
src/merge_conflict.cc:1254: I(false)
src/merge_conflict.cc:1271: I(false)
src/merge_conflict.cc:568: I(left_root != right_root)
conflict: missing root directory
directory '%s' pivoted to root on the left
directory '%s' deleted on the right
directory '%s' deleted on the left
directory '%s' pivoted to root on the right
replacing content of '%s' from %s with '%s'
history for '%s' from %s will be lost; see user manual Merge Conflicts section
extra %s_resolution provided for dropped_modified '%s'
E(resolution.resolution == resolve_conflicts::none)
no resolution provided for dropped_modified '%s'
no %s_resolution provided for dropped_modified '%s'
E(resolution.resolution != resolve_conflicts::none)
src/merge_conflict.cc:2981: I(false)
inconsistent left/right resolutions for '%s'
E(other_resolution.resolution == resolve_conflicts::drop || other_resolution.resolution == resolve_conflicts::rename)
replacing content of '%s' with '%s'
no resolution provided for duplicate_name '%s'
src/merge_conflict.cc:3239: I(false)
src/merge_conflict.cc:354: I(0 != left_roster)
src/merge_conflict.cc:356: I(0 != right_roster)
conflict: multiple values for attribute '%s' on file '%s'
conflict: multiple values for attribute '%s' on directory '%s'
conflict: multiple values for attribute '%s' on file '%s' from revision %s
conflict: multiple values for attribute '%s' on directory '%s' from revision %s
set to '%s' on left directory '%s'
deleted from left directory '%s'
set to '%s' on right file '%s'
set to '%s' on right directory '%s'
deleted from right directory '%s'
src/merge_conflict.cc:291: I(0 != ancestor_roster)
src/merge_conflict.cc:293: I(0 != right_roster)
src/merge_conflict.cc:164: I(0 != ancestor_roster)
src/merge_conflict.cc:1022: I(!roster.is_attached(conflict.nid))
I(!roster.is_attached(conflict.nid))
conflict: multiple names for file '%s' from revision %s
conflict: multiple names for directory '%s' from revision %s
src/merge_conflict.cc:801: I(!roster.is_attached(conflict.nid))
conflict: directory loop created
'%s' renamed to '%s' on the left
'%s' renamed to '%s' on the right
src/merge_conflict.cc:135: I(0 != roster)
src/merge_conflict.cc:1302: I(!roster.is_attached(left_nid))
I(!roster.is_attached(left_nid))
src/merge_conflict.cc:1303: I(!roster.is_attached(right_nid))
I(!roster.is_attached(right_nid))
conflict: duplicate name '%s' for the directory '%s'
src/merge_conflict.cc:1340: I(left_basename == right_basename)
I(left_basename == right_basename)
conflict: duplicate name '%s' for the directory
          named '%s' on the left and
          named '%s' on the right.
added as a new file on the left
added as a new directory on the left
added as a new file on the right
added as a new directory on the right
renamed from file '%s' on the left
renamed from directory '%s' on the left
renamed from file '%s' on the right
renamed from directory '%s' on the right
src/merge_conflict.cc:1452: I(false)
src/merge_conflict.cc:881: I(!roster.is_attached(conflict.nid))
conflict: orphaned file '%s' from revision %s
conflict: orphaned directory '%s' from revision %s
parent directory '%s' was deleted on the right
file '%s' was renamed from '%s' on the left
directory '%s' was renamed from '%s' on the left
file '%s' was added on the left
directory '%s' was added on the left
parent directory '%s' was deleted on the left
file '%s' was renamed from '%s' on the right
directory '%s' was renamed from '%s' on the right
file '%s' was added on the right
directory '%s' was added on the right
src/merge_conflict.cc:997: I(false)
src/merge_conflict.cc:699: I(!roster.is_attached(conflict.nid))
conflict: invalid name '_MTN' in root directory
'%s' pivoted to root on the left
'%s' added in revision %s on the right
'%s' pivoted to root on the right
'%s' added in revision %s on the left
src/merge_conflict.cc:779: I(false)
src/merge_conflict.cc:2573: I(!result.missing_root_conflict)
I(!result.missing_root_conflict)
src/merge_conflict.cc:2574: I(result.invalid_name_conflicts.size() == 0)
I(result.invalid_name_conflicts.size() == 0)
src/merge_conflict.cc:2575: I(result.directory_loop_conflicts.size() == 0)
I(result.directory_loop_conflicts.size() == 0)
src/merge_conflict.cc:2576: I(result.multiple_name_conflicts.size() == 0)
I(result.multiple_name_conflicts.size() == 0)
src/merge_conflict.cc:2577: I(result.attribute_conflicts.size() == 0)
I(result.attribute_conflicts.size() == 0)
expected orphaned_directory or orphaned_file, found %s
conflicts file does not match current conflicts
E(merge_conflict.nid == file_conflict.nid)
E(merge_conflict.dropped_side == file_conflict.dropped_side && merge_conflict.left_nid == file_conflict.left_nid && merge_conflict.right_nid == file_conflict.right_nid)
E(merge_conflict.left_nid == file_conflict.left_nid && merge_conflict.right_nid == file_conflict.right_nid)
src/merge_conflict.cc:2425: I(false)
E(pars.tok.in.lookahead == EOF)
left revision id does not match conflict file
E(left_rid == decode_hexenc_as<revision_id>(temp, src.made_from))
right revision id does not match conflict file
E(right_rid == decode_hexenc_as<revision_id>(temp, src.made_from))
renamed file
renamed directory
added file
added directory
src/merge_conflict.cc
I(ancestor_roster)
I(tmp == "dropped")
I(tmp == "file")
dropped file
orphaned file
recreated file
modified file
I(!target_path.empty())
this->roster
merge of '%s', '%s' failed
merged '%s', '%s'
left_resolution: drop
right_resolution: drop
I(left_root != right_root)
pivoted root
deleted directory
dropping '%s' from %s
keeping '%s' from %s
renaming '%s' from %s to '%s'
can't drop '%s'; not empty
E(n->children.empty())
keeping '%s'
I(0 != left_roster)
I(0 != right_roster)
set to '%s' on the left
deleted on the left
set to '%s' on the right
deleted on the right
set to '%s' on left file '%s'
deleted from left file '%s'
deleted from right file '%s'
I(0 != ancestor_roster)
renamed to '%s' on the left
renamed to '%s' on the right
I(0 != roster)
E(++tmp == conflicts.end())
extra data in file
ancestor_file_id
ancestor_name
attr_name
directory_loop
invalid_name
left_attr_state
left_attr_value
left_file_id
left_name
left_rev
left_type
missing_root
multiple_names
node_type
orphaned_directory
orphaned_file
resolved_drop_left
resolved_drop_right
resolved_keep_left
resolved_keep_right
resolved_internal
resolved_rename_left
resolved_rename_right
resolved_user_left
resolved_user_right
right_attr_state
right_attr_value
right_file_id
right_name
right_rev
right_type
void roster_merge_result::resolve_file_content_conflicts(lua_hooks&, const roster_t&, const roster_t&, content_merge_adaptor&)
void roster_merge_result::resolve_duplicate_name_conflicts(lua_hooks&, const roster_t&, const roster_t&, content_merge_adaptor&)
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = file_node; typename boost::detail::sp_member_access<T>::type = file_node*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = any_path; typename boost::detail::sp_dereference<T>::type = any_path&]
void roster_merge_result::resolve_dropped_modified_conflicts(lua_hooks&, const roster_t&, const roster_t&, content_merge_database_adaptor&, temp_node_id_source&)
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const dir_node; typename boost::detail::sp_member_access<T>::type = const dir_node*]
void roster_merge_result::resolve_orphaned_node_conflicts(lua_hooks&, const roster_t&, const roster_t&, content_merge_adaptor&)
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = roster_t; typename boost::detail::sp_dereference<T>::type = roster_t&]
void roster_merge_result::report_file_content_conflicts(lua_hooks&, const roster_t&, const roster_t&, content_merge_adaptor&, bool, std::ostream&)
void roster_merge_result::report_attribute_conflicts(const roster_t&, const roster_t&, content_merge_adaptor&, bool, std::ostream&) const
void roster_merge_result::report_duplicate_name_conflicts(const roster_t&, const roster_t&, content_merge_adaptor&, bool, std::ostream&) const
void roster_merge_result::report_dropped_modified_conflicts(const roster_t&, const roster_t&, content_merge_adaptor&, bool, std::ostream&) const
void roster_merge_result::report_multiple_name_conflicts(const roster_t&, const roster_t&, content_merge_adaptor&, bool, std::ostream&) const
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = any_path; typename boost::detail::sp_member_access<T>::type = any_path*]
void roster_merge_result::report_orphaned_node_conflicts(const roster_t&, const roster_t&, content_merge_adaptor&, bool, std::ostream&) const
void roster_merge_result::report_directory_loop_conflicts(const roster_t&, const roster_t&, content_merge_adaptor&, bool, std::ostream&) const
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const node; typename boost::detail::sp_member_access<T>::type = const node*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const roster_t; typename boost::detail::sp_dereference<T>::type = const roster_t&]
void roster_merge_result::report_invalid_name_conflicts(const roster_t&, const roster_t&, content_merge_adaptor&, bool, std::ostream&) const
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = dir_node; typename boost::detail::sp_member_access<T>::type = dir_node*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const roster_t; typename boost::detail::sp_member_access<T>::type = const roster_t*]
void roster_merge_result::report_missing_root_conflicts(const roster_t&, const roster_t&, content_merge_adaptor&, bool, std::ostream&) const
21content_merge_adaptor
6MusingIK21invalid_name_conflictE
6MusingIK23directory_loop_conflictE
6MusingIK22orphaned_node_conflictE
6MusingIK22multiple_name_conflictE
6MusingIK25dropped_modified_conflictE
6MusingIK23duplicate_name_conflictE
6MusingIK18attribute_conflictE
6MusingI21file_content_conflictE
6MusingI25dropped_modified_conflictE
6MusingIK21file_content_conflictE
recording successful merge of %s <-> %s into %s
src/merge_content.cc:331: I(i != content_paths.end())
file '%s' does not exist in workspace
file '%s' in workspace has id %s, wanted %s
'%s' in workspace is a directory, not a file
src/merge_content.cc:582: I(!null_id(ancestor_id))
src/merge_content.cc:583: I(!null_id(left_id))
src/merge_content.cc:584: I(!null_id(right_id))
trying user merge '%s' %s <-> %s (ancestor: %s)
help required for 3-way merge
[ancestor] %s
[    left] %s
[   right] %s
[  merged] %s
src/merge_content.cc:476: I(left_id != right_id)
src/merge_content.cc:535: I(!null_id(ancestor_id))
src/merge_content.cc:536: I(!null_id(left_id))
src/merge_content.cc:537: I(!null_id(right_id))
trying auto merge '%s' %s <-> %s (ancestor: %s)
src/merge_content.cc:437: I(false)
src/merge_content.cc:430: I(false)
src/merge_content.cc:422: I(false)
src/merge_content.cc:413: I(false)
src/merge_content.cc:406: I(false)
src/merge_content.cc:384: I(false)
src/merge_content.cc:376: I(false)
src/merge_content.cc:369: I(false)
src/merge_content.cc:360: I(false)
src/merge_content.cc:216: I(false)
src/merge_content.cc:176: I(lm->birth_revision == rm->birth_revision)
I(lm->birth_revision == rm->birth_revision)
src/merge_content.cc:182: I(anc)
src/merge_content.cc:308: I(lm->birth_revision == rm->birth_revision)
src/merge_content.cc:314: I(anc)
temporarily recording merge of %s <-> %s into %s
temporarily recording file %s -> %s
src/merge_content.cc:661: I(roster_for_file_lca)
src/merge_content.cc:662: I(roster_for_file_lca->has_node(conflict.nid))
I(roster_for_file_lca->has_node(conflict.nid))
resolved content conflict %d / %d on file '%s'
conflict resolution for %s not yet supported
E(!result.missing_root_conflict)
E(result.invalid_name_conflicts.size() == 0)
E(result.directory_loop_conflicts.size() == 0)
E(result.multiple_name_conflicts.size() == 0)
E(result.attribute_conflicts.size() == 0)
%d content conflicts require user intervention
%d content conflict requires user intervention
can't spawn external merger when non-interactive
merge failed due to unresolved conflicts
src/merge_content.cc:866: I(result.is_clean())
recording new file %s
src/merge_content.cc
recording file %s -> %s
I(i != content_paths.end())
E(fid == ident)
I(!null_id(ancestor_id))
I(!null_id(left_id))
I(!null_id(right_id))
files are identical
lua merge3 hook merged ok
I(left_id != right_id)
internal 3-way merged ok
rmap
I(anc)
temporarily recording file %s
I(roster_for_file_lca)
missing_root_dir
invalid_name_conflicts
directory_loop_conflicts
multiple_name_conflicts
attribute_conflicts
examining content conflicts
E(!opts.non_interactive)
E(result.is_clean())
merged_rev.edges
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = cset; typename boost::detail::sp_dereference<T>::type = cset&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = file_node; typename boost::detail::sp_member_access<T>::type = file_node*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const roster_t; typename boost::detail::sp_dereference<T>::type = const roster_t&]
void try_to_merge_files(lua_hooks&, const roster_t&, const roster_t&, roster_merge_result&, content_merge_adaptor&, merge_method)
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const marking; typename boost::detail::sp_member_access<T>::type = const marking*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const roster_t; typename boost::detail::sp_member_access<T>::type = const roster_t*]
30content_merge_database_adaptor
31content_merge_workspace_adaptor
30content_merge_checkout_adaptor
27content_merge_empty_adaptor
src/merge_3way.cc:180: I(a.at(j-1) == b.at(a_b_map.at(j-1).pos))
I(a.at(j-1) == b.at(a_b_map.at(j-1).pos))
exchanging preserved extent [%d+%d] with changed extent [%d+%d]
src/merge_3way.cc:274: I(a_b_map.size() == a_c_map.size())
I(a_b_map.size() == a_c_map.size())
conflicting edits: %s %d[%d] '%s' vs. %s %d[%d] '%s'
conflicting edits: [%s %d %d] vs. [%s %d %d]
calculating left edit script on %d -> %d lines
calculating right edit script on %d -> %d lines
calculating left extents on %d edits
calculating right extents on %d edits
merging %d left, %d right extents
src/merge_3way.cc
normalizing %d right extents
normalizing %d left extents
conflicting prefixes
conflicting suffixes
conflict detected. no merge.
8conflict
preserved
deleted
changed
old_manifest
delete_file
delete_dir
rename_file
rename_dir
bad URLencoded string '%s'
src/uri.cc
E(i != in.end())
^\w[\w\d\+\-\.]*:[^\d]+
ZZZ://
unable to parse URI '%s'
I(matches.size() == 10)
matched URI scheme: '%s'
matched URI user: '%s'
src/uri.cc:88: I(false)
matched URI host: '%s'
matched URI port: '%s'
matched URI path: '%s'
matched URI query: '%s'
matched URI fragment: '%s'
prepending pseudo scheme and authority marker
^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?
E(matcher.match(modified, made_from, matches))
src/uri.cc:42: I(matches.size() == 10)
parsing host and optional port of '%s'
^(([^@]+)@)?(([^:\[\]]+)|\[([:0-9a-fA-F]+)\])(:(\d*))?$
unable to parse host of URI '%s'
E(hostlike.match(matches[4], made_from, hostlike_matches))
src/graph.cc:82: I(!live_paths.empty())
src/graph.cc:99: I(!next.empty())
src/graph.cc:125: I(!pthN->empty())
src/graph.cc:141: I(selected_path || !next_paths.empty())
I(selected_path || !next_paths.empty())
src/graph.cc:291: I(false)
src/graph.cc
I(!live_paths.empty())
I(!next.empty())
considering %s -> %s
I(!pthN->empty())
src/graph.cc:132: I(*k != *j)
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = std::vector<id>; typename boost::detail::sp_dereference<T>::type = std::vector<id>&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = std::vector<id>; typename boost::detail::sp_member_access<T>::type = std::vector<id>*]
N5boost6detail17sp_counted_impl_pISt6vectorI2idSaIS3_EEEE
src/roster_delta.cc:155: I(old_n->self == new_n->self)
src/roster_delta.cc:181: I(false)
src/roster_delta.cc:219: I(false)
src/roster_delta.cc:246: I(false)
location "
new_loc.first
src/roster_delta.cc
new_loc.second
d.dirs_added
d.files_added
d.attrs_changed
I(old_n->self == new_n->self)
d.nodes_renamed
d.deltas_applied
d.attrs_cleared
d.markings_changed
from_markings
to_markings
d.nodes_deleted
 content [
        attr "
       value "
roster_delta
attr_cleared
attr_changed
marking
void apply_roster_delta(const roster_delta&, roster_t&, marking_map&)
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const marking; typename boost::detail::sp_member_access<T>::type = const marking*]
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = const marking; typename boost::detail::sp_dereference<T>::type = const marking&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const node; typename boost::detail::sp_member_access<T>::type = const node*]
void {anonymous}::do_delta_for_node_only_in_dest(const_node_t, {anonymous}::roster_delta_t&)
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = marking; typename boost::detail::sp_dereference<T>::type = marking&]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::middle_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::middle_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::leaf_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<marking>, 8>::leaf_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = const file_node; typename boost::detail::sp_member_access<T>::type = const file_node*]
void {anonymous}::do_delta_for_node_in_both(const_node_t, const_node_t, {anonymous}::roster_delta_t&)
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::middle_node_type*]
typename boost::detail::sp_member_access<T>::type boost::shared_ptr<T>::operator->() const [with T = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type; typename boost::detail::sp_member_access<T>::type = cow_trie<unsigned int, boost::shared_ptr<node>, 8>::leaf_node_type*]
void {anonymous}::make_unconstrained_roster_delta_t(const roster_t&, const marking_map&, const roster_t&, const marking_map&, {anonymous}::roster_delta_t&)
void {anonymous}::make_roster_delta_t(const roster_t&, const marking_map&, const roster_t&, const marking_map&, {anonymous}::roster_delta_t&, const cset*)
void delta_rosters(const roster_t&, const marking_map&, const roster_t&, const marking_map&, roster_delta&, const cset*)
6MusingIjE
6MusingI14path_componentE
6MusingIN8parallel4iterI11marking_mapEEE
6MusingIK6rosterI5deltaEE
Benchmarking botan's SHA-1 core
src/sha1.cc
SHA-1 provider '%s': %s MiB/s
N5Botan21RandomNumberGeneratorE
N5Botan14AutoSeeded_RNGE
N8commands18cmd_benchmark_sha1E
backtrack limit exceeded in regular expression matching
recursion limit exceeded in regular expression matching
invalid UTF-8 sequence found during regular expression matching
src/pcrewrap.cc:203: I(rc == 0)
src/pcrewrap.cc:226: I(rc != 0)
while compiling regex '%s': %s
error near char %d of regex '%s': %s
src/pcrewrap.cc
pcre_exec returned %d
I(rc == 0)
I(rc != 0)
error in regex '%s': %s
failed to get memory
while studying regex '%s': %s
src/rev_height.cc:76: I(tmp < std::numeric_limits<u32>::max())
I(tmp < std::numeric_limits<u32>::max())
src/rev_height.cc
  attr on  %s
      set  %s
       to  %s
Parent:   
Other certs:
Tag:      
Changelog: 
Comments: 
Changes
Changes against parent 
  dropped  %s
  renamed  %s
       to  %s
  added    %s
  patched  %s
  attr on  %s
    unset  %s
typename boost::detail::sp_dereference<T>::type boost::shared_ptr<T>::operator*() const [with T = cset; typename boost::detail::sp_dereference<T>::type = cset&]
Prints an ASCII representation of the revisions' graph
src/asciik.cc:267: I(curr_loc < curr_items)
src/asciik.cc:303: I(j < next_items)
src/asciik.cc:337: I(curr_loc < curr_row.size())
src/asciik.cc:346: I(curr_loc < next_row.size())
src/asciik.cc:366: I(curr_loc < extra_ghost.size())
I(curr_loc < extra_ghost.size())
src/asciik.cc:368: I(try_draw(extra_ghost, curr_loc, parents, annotation))
I(try_draw(extra_ghost, curr_loc, parents, annotation))
asciik
src/asciik.cc
I(curr_loc < curr_items)
curr_row
I(j < next_items)
I(curr_loc < curr_row.size())
I(curr_loc < next_row.size())
N8commands10cmd_asciikE
src/dates.cc:225: I(tb.year > 0 && tb.year <= 292278994)
I(tb.year > 0 && tb.year <= 292278994)
src/dates.cc:226: I(tb.month >= 1 && tb.month <= 12)
I(tb.month >= 1 && tb.month <= 12)
src/dates.cc:227: I(tb.day >= 1 && tb.day <= 31)
I(tb.day >= 1 && tb.day <= 31)
src/dates.cc:228: I(tb.hour >= 0 && tb.hour <= 23)
I(tb.hour >= 0 && tb.hour <= 23)
src/dates.cc:229: I(tb.min >= 0 && tb.min <= 59)
I(tb.min >= 0 && tb.min <= 59)
src/dates.cc:230: I(tb.sec >= 0 && tb.sec <= 60)
I(tb.sec >= 0 && tb.sec <= 60)
src/dates.cc:231: I(tb.millisec >= 0 && tb.millisec <= 999)
I(tb.millisec >= 0 && tb.millisec <= 999)
current date '%s' is outside usable range
(your system clock may not be set correctly)
src/dates.cc:196: I(0 <= delta && delta < days_in_year(year))
I(0 <= delta && delta < days_in_year(year))
src/dates.cc:213: I(month <= 12)
formatting date '%s' with format '%s'
%s seconds UTC since unix epoch
localtime %4s/%02s/%02s %02s:%02s:%02s WD %s YD %s DST %d
time format specification '%s' produces no output
date '%s' is too long when formatted using '%s' (the result must fit in %d characters)
parsing date '%s' with format '%s'
date '%s' is out of range and cannot be parsed
E(tb.tm_sec == check.tm_sec && tb.tm_min == check.tm_min && tb.tm_hour == check.tm_hour && tb.tm_mday == check.tm_mday && tb.tm_mon == check.tm_mon && tb.tm_year == check.tm_year && tb.tm_wday == check.tm_wday && tb.tm_yday == check.tm_yday && tb.tm_isdst == check.tm_isdst)
unrecognized date (monotone only understands ISO 8601 format)
E(s.at(i) >= '0' && s.at(i) <= '9' && s.at(i-1) >= '0' && s.at(i-1) <= '5')
E((s.at(i-1) >= '0' && s.at(i-1) <= '1' && s.at(i) >= '0' && s.at(i) <= '9') || (s.at(i-1) == '2' && s.at(i) >= '0' && s.at(i) <= '3'))
E(s.at(i) == 'T' || s.at(i) == ' ')
E(s.at(i-1) >= '0' && s.at(i-1) <= '3' && s.at(i) >= '0' && s.at(i) <= '9')
E(s.at(i-1) >= '0' && s.at(i-1) <= '1' && s.at(i) >= '0' && s.at(i) <= '9')
E(s.at(i) >= '0' && s.at(i) <= '9')
date too early (monotone only goes back to 0001-01-01T00:00:00)
date too late (monotone only goes forward to year 292,278,993)
day out of range for its month in '%s'
src/dates.cc
src/dates.cc:310: I(valid())
src/dates.cc:326: I(valid())
E(valid_ms_count(tu))
src/dates.cc:347: I(valid())
I(month <= 12)
%04u-%02u-%02uT%02u:%02u:%02u
formatted date '%s'
parsed date '%s'
hour out of range
E(hour < 24)
month out of range in '%s'
E(month >= 1 && month <= 12)
E(i >= 3)
E(year >= 1)
E(year <= 292278994)
E(day >= 1 && day <= mdays)
src/dates.cc:667: I(valid())
src/dates.cc:671: I(valid())
81fa9664405655b13bde971bddd802de25096073
format_version "1"
new_manifest [3f49ef95c9afe8094b075119cad01839c44885e3]
old_revision [81fa9664405655b13bde971bddd802de25096073]
  Generated from data cached in the distribution;
  further changes may have been made.
src/option.cc:374: I(i_have_arg == they_have_arg)
I(i_have_arg == they_have_arg)
src/option.cc:378: I(res.second)
missing argument to option '%s'
option '%s' does not take an argument
bad argument '%s' to option '%s'
bad argument '%s' to option '%s': %s
src/option.cc:77: I(n.empty())
src/option.cc:98: I((desc && desc[0]) || !longname.empty() || !shortname.empty())
I((desc && desc[0]) || !longname.empty() || !shortname.empty())
src/option.cc:100: I((!longname.empty() || !shortname.empty()) || cancelname.empty())
I((!longname.empty() || !shortname.empty()) || cancelname.empty())
src/option.cc:102: I(set || (longname.empty() && shortname.empty()))
I(set || (longname.empty() && shortname.empty()))
src/option.cc:104: I(reset || cancelname.empty())
I(reset || cancelname.empty())
src/option.cc:326: I(i != by_name.end())
option '%s' has multiple ambiguous expansions:
src/option.cc:339: I(i != by_name.end())
deprecated option '%s' used: %s
src/option.cc:466: I(!is_cancel)
invalid escape in '--xargs' file
src/option.cc
I(res.second)
option error: %s
unknown option '%s'
I(n.empty())
I(i != by_name.end())
expanding option '%s' to '%s'
negation of '--%s'
 [ -
 <arg>
I(!is_cancel)
xargs
E(i != from.end())
N6option14unknown_optionE
N6option11missing_argE
N6option9extra_argE
N6option7bad_argE
N6option16discard_argumentE
E(bookkeeping_path::internal_string_is_bookkeeping_path(utf8(arg, origin::user)))
src/option.hh:260: I((name && name[0]) || (desc && desc[0]))
I((name && name[0]) || (desc && desc[0]))
please use '--no-standard-rcfiles' instead
please use '--no-builtin-rcfile' instead
please use '-v' (or '-v -v -v' if there are previous '-q' options)
insert command line arguments taken from the given file
block size in bytes for 'automate stdio' output
automatically update the workspace, if it was at a head and the command creates a new head
address:port to listen on (default :4691)
disable transport authentication
cause monotone to lie about the maximum netsync protocol version that it supports, mostly for debugging
cause monotone to lie about the minimum netsync protocol version it supports, useful for debugging or if you want to prevent use of older protocol versions
sets the host (and optionally the port) for a remote netsync action
select branch cert for operation
print a brief version of the normal output
annotate using full revision ids only
set location of configuration directory
forbid use of the default confdir
no-default-confdir/allow-default-confdir
strftime(3) format specification for printing dates
print date certs exactly as stored in the database
log roster cache statistic to the given file
limit the number of levels of directories to descend
argument to pass external diff hook
do not show the function containing each block of changes
no-show-encloser/show-encloser
show the matching cset in the diff header
use external diff hook for generating diffs
when rosterifying, drop attrs entries with the given key
don't perform the operation, just show what would have happened
drop certs signed by keys we don't know about
file to dump debugging log to, on failure
leave out anything described by its argument
include anything described by its argument
only update monotone's internal bookkeeping, not the filesystem
move conflicting, unversioned paths into '%s' before proceeding with any workspace change
move-conflicting-paths/no-move-conflicting-paths
controls use of ssh-agent.  valid arguments are: 'yes' to use ssh-agent to make signatures if possible, 'no' to force use of monotone's internal code, 'only' to force use of ssh-agent, 'check' to sign with both and compare
force genkey to not error out when the named key already exists
show hidden commands and options
do not ignore revisions marked as suspended
ignore-suspend-certs/no-ignore-suspend-certs
do not prompt the user for input
sets the key for signatures, using either the key name or the key hash
push the specified key even if it hasn't signed anything
limit log output to the last number of entries
set filename containing commit changelog message
perform the operations for files missing from workspace
limit log output to the next number of entries
exclude files when printing logs
do not use ASCII graph to display ancestry
no-respect-ignore/respect-ignore
exclude merges when printing logs
do not load '~/.monotone/monotonerc' or '_MTN/monotonerc' lua files
no-standard-rcfiles/standard-rcfiles
do not load the built-in lua file with the default hooks
no-builtin-rcfile/builtin-rcfile
old version of '--no-standard-rcfiles'
old version of '--no-builtin-rcfile'
decrease verbosity (undo previous '-v', then disable informational output, then disable warnings)
increase verbosity (undo previous '-q', and then enable debug output)
print debug log to stderr while running
suppress warning, verbose, informational and progress messages
automatically run the output through nroff (default if the output is a terminal)
show timestamps in front of errors, warnings and progress messages
also operate on the contents of any listed directories
select revision id for operation
limit search for workspace to specified root
use the current netsync arguments and options as the future default
set ticker style (count|dot|none)
revision(s) to start logging at
revision(s) to stop logging at
perform the operations for unknown files from workspace
print version number, then exit
don't output corresponding renames if restricted on such nodes
no-corresponding-renames/corresponding-renames
specify conflict resolutions in a file, instead of interactively
resolve-conflicts/no-resolve-conflicts
file in which to store conflicts
use only one changelog cert for the git commit message
file mapping author names from original to new values
file mapping branch names from original to new values 
include git refs for 'revs', 'roots' or 'leaves'
include revision ids in commit logs
include standard cert values in commit logs
load the internal marks table before exporting revisions
save the internal marks table after exporting revisions
src/options_list.hh
src/option.hh
yes,no,only,check
count,dot,none
revs,roots,leaves
must not be less than %d
must be between 0 and 255
please use '-q -q'
xargs,@
override author for commit
automate-stdio-size
update/no-update
bind
no-transport-auth
serve netsync on stdio
max-netsync-version
min-netsync-version
remote-stdio-host
branch,b
brief/no-brief
revs-only
override date/time for commit
date-format
no-format-dates
set name of database
db,d
roster-cache-performance-log
depth
diff-args
reverse order of diff
with-header/without-header
use context diff format
context
external
use unified diff format
unified
print diffs along with logs
diffs/no-diffs
drop-attr
dry-run/no-dry-run
drop-bad-certs
bookkeep-only
ssh-sign
force-duplicate-key
display help message
help,h
hidden/no-hidden
non-interactive/interactive
key,k/use-default-key
set location of key store
key-to-push
last
file to write the log to
set commit changelog message
message,m
message-file
no prefix to message
no-prefix
no-files/files
no-graph/graph
do not ignore any files
no-merges/merges
norc
nostd
load extra lua file
rcfile/clear-rcfiles
record process id of server
pid-file/no-pid-file
quiet,q
verbose,v
reallyquiet
print detailed information
full/concise
formatted/plain
timestamps
recursive,R/no-recursive
revision,r
don't look for a workspace
no-workspace/allow-workspace
set-default/no-set-default
from/clear-from
to/clear-to
unknown/no-unknown
don't output ignored files
no-ignored/ignored
don't output unknown files
no-unknown/unknown
don't output unchanged files
no-unchanged/unchanged
use file to resolve conflicts
resolve-conflicts-file
use-one-changelog
authors-file
branches-file
refs
log-revids/no-log-revids
log-certs/no-log-certs
import-marks
export-marks
globals
automate_stdio_size
auto_update
bind_opts
bind_uris
no_transport_auth
bind_stdio
max_netsync_version
min_netsync_version
remote_stdio_host
revs_only
no_default_confdir
date_formats
no_format_dates
roster_cache_performance_log
au_diff_options
external_diff_args
no_show_encloser
with_header
attrs_to_drop
dryrun
drop_bad_certs
bookkeep_only
move_conflicting_paths
ssh_sign
force_duplicate_key
show_hidden_commands
ignore_suspend_certs
non_interactive
key_dir
keys_to_push
messages
msgfile
no_prefix
no_files
no_graph
no_ignore
no_merges
extra_rcfiles
pidfile
verbosity
full
formatted
no_workspace
set_default
automate_inventory_opts
no_ignored
no_unknown
no_unchanged
no_corresponding_renames
resolve_conflicts_opts
resolve_conflicts
use_one_changelog
authors_file
branches_file
log_revids
log_certs
import_marks
export_marks
FvvE
FvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
7options
M7optionsFvNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
M7optionsFvvE
src/options_applicator.cc
I(opts.ticker.empty())
src/options_applicator.cc:58: I(opts.ticker.empty())
std::terminate() - exception thrown while handling another exception
thread_safe=0 selftest=0 seed_rng=1 use_engines=0 secure_memory=1 fips140=0
src/botan_pipe_cache.hh:67: I(!global_pipe_cleanup_object)
I(!global_pipe_cleanup_object)
this monotone binary requires at least SQLite 3.3.8 to run
E(sqlite3_libversion_number() >= 3003008)
monotone does not support Botan 1.7.14
E(linked_botan_version != BOTAN_VERSION_CODE_FOR(1,7,14))
monotone does not support Botan 1.9.9
E(linked_botan_version != BOTAN_VERSION_CODE_FOR(1,9,9))
this monotone binary requires Botan 1.9.11 or newer
E(linked_botan_version >= BOTAN_VERSION_CODE_FOR(1,9,11))
src/monotone.cc
: operation canceled: 
: fatal signal: 
stack trace:
MTN_STACKTRACE_ON_CRASH
this is almost certainly a bug in monotone.
please send this error message, the output of '
 version --full',
and a description of what you were doing to <https://code.monotone.ca/p/monotone/issues/>
do not send a core dump, but if you have one, 
please preserve it in case we ask you for information from it.
-- Copyright (C) 2003 Graydon Hoare <graydon@pobox.com>
-- This program is made available under the GNU GPL version 2.0 or
-- greater. See the accompanying file COPYING for details.
-- This program is distributed WITHOUT ANY WARRANTY; without even the
-- implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
-- PURPOSE.
-- this is the standard set of lua hooks for monotone;
-- user-provided files can override it or add to it.
-- Since Lua 5.2, unpack and loadstrings are deprecated and are either moved
-- to table.unpack() or replaced by load(). If lua was compiled without
-- LUA_COMPAT_UNPACK and/or LUA_COMPAT_LOADSTRING, these two are not
-- available and we add a similar compatibility layer, ourselves.
unpack = unpack or table.unpack
loadstring = loadstring or load
function temp_file(namehint, filemodehint)
   local tdir
   tdir = os.getenv("TMPDIR")
   if tdir == nil then tdir = os.getenv("TMP") end
   if tdir == nil then tdir = os.getenv("TEMP") end
   if tdir == nil then tdir = "/tmp" end
   local filename
   if namehint == nil then
      filename = string.format("%s/mtn.XXXXXX", tdir)
   else
      filename = string.format("%s/mtn.%s.XXXXXX", tdir, namehint)
   end
   local filemode
   if filemodehint == nil then
      filemode = "r+"
   else
      filemode = filemodehint
   end
   local name = mkstemp(filename)
   local file = io.open(name, filemode)
   return file, name
function execute(path, ...)
   local pid
   local ret = -1
   pid = spawn(path, ...)
   if (pid ~= -1) then ret, pid = wait(pid) end
   return ret
function execute_redirected(stdin, stdout, stderr, path, ...)
   local pid
   local ret = -1
   io.flush();
   pid = spawn_redirected(stdin, stdout, stderr, path, ...)
   if (pid ~= -1) then ret, pid = wait(pid) end
   return ret
-- Wrapper around execute to let user confirm in the case where a subprocess
-- returns immediately
-- This is needed to work around some brokenness with some merge tools
-- (e.g. on OS X)
function execute_confirm(path, ...)
   ret = execute(path, ...)
   if (ret ~= 0)
   then
      print(gettext("Press enter"))
   else
      print(gettext("Press enter when the subprocess has completed"))
   end
   io.read()
   return ret
-- attributes are persistent metadata about files (such as execute
-- bit, ACLs, various special flags) which we want to have set and
-- re-set any time the files are modified. the attributes themselves
-- are stored in the roster associated with the revision. each (f,k,v)
-- attribute triple turns into a call to attr_functions[k](f,v) in lua.
if (attr_init_functions == nil) then
   attr_init_functions = {}
attr_init_functions["mtn:execute"] =
   function(filename)
      if (is_executable(filename)) then
        return "true"
      else
        return nil
      end
   end
attr_init_functions["mtn:manual_merge"] =
   function(filename)
      if (binary_file(filename)) then
        return "true" -- binary files must be merged manually
      else
        return nil
      end
   end
if (attr_functions == nil) then
   attr_functions = {}
attr_functions["mtn:execute"] =
   function(filename, value)
      if (value == "true") then
         set_executable(filename)
      else
         clear_executable(filename)
      end
   end
function dir_matches(name, dir)
   -- helper for ignore_file, matching files within dir, or dir itself.
   -- eg for dir of 'CVS', matches CVS/, CVS/*, */CVS/ and */CVS/*
   if (string.find(name, "^" .. dir .. "/")) then return true end
   if (string.find(name, "^" .. dir .. "$")) then return true end
   if (string.find(name, "/" .. dir .. "/")) then return true end
   if (string.find(name, "/" .. dir .. "$")) then return true end
   return false
function portable_readline(f)
    line = f:read()
    if line ~= nil then
        line = string.gsub(line, "\r$","") -- strip possible \r left from windows editing
    end
    return line
function ignore_file(name)
   -- project specific
   if (ignored_files == nil) then
      ignored_files = {}
      local ignfile = io.open(".mtn-ignore", "r")
      if (ignfile ~= nil) then
         local line = portable_readline(ignfile)
         while (line ~= nil) do
            if line ~= "" then
                table.insert(ignored_files, line)
            end
            line = portable_readline(ignfile)
         end
         io.close(ignfile)
      end
   end
   local warn_reported_file = false
   for i, line in pairs(ignored_files)
   do
      if (line ~= nil) then
         local pcallstatus, result = pcall(function()
        return regex.search(line, name)
     end)
         if pcallstatus == true then
            -- no error from the regex.search call
            if result == true then return true end
         else
            -- regex.search had a problem, warn the user their
            -- .mtn-ignore file syntax is wrong
        if not warn_reported_file then
           io.stderr:write("mtn: warning: while matching file '"
                       .. name .. "':\n")
           warn_reported_file = true
        end
        local prefix = ".mtn-ignore:" .. i .. ": warning: "
            io.stderr:write(prefix
                            .. string.gsub(result, "\n", "\n" .. prefix)
                               .. "\n\t- skipping this regex for "
                               .. "all remaining files.\n")
            ignored_files[i] = nil
         end
      end
   end
   local file_pats = {
      -- c/c++
      "%.a$", "%.so$", "%.o$", "%.la$", "%.lo$", "^core$",
      "/core$", "/core%.%d+$",
      -- java
      "%.class$",
      -- python
      "%.pyc$", "%.pyo$",
      -- gettext
      "%.g?mo$",
      -- intltool
      "%.intltool%-merge%-cache$",
      -- TeX
      "%.aux$",
      -- backup files
      "%.bak$", "%.orig$", "%.rej$", "%~$",
      -- vim creates .foo.swp files
      "%.[^/]*%.swp$",
      -- emacs creates #foo# files
      "%#[^/]*%#$",
      -- other VCSes (where metadata is stored in named files):
      "%.scc$",
      -- desktop/directory configuration metadata
      "^%.DS_Store$", "/%.DS_Store$", "^desktop%.ini$", "/desktop%.ini$"
   }
   local dir_pats = {
      -- autotools detritus:
      "autom4te%.cache", "%.deps", "%.libs",
      -- Cons/SCons detritus:
      "%.consign", "%.sconsign",
      -- other VCSes (where metadata is stored in named dirs):
      "CVS", "%.svn", "SCCS", "_darcs", "%.cdv", "%.git", "%.bzr", "%.hg"
   }
   for _, pat in ipairs(file_pats) do
      if string.find(name, pat) then return true end
   end
   for _, pat in ipairs(dir_pats) do
      if dir_matches(name, pat) then return true end
   end
   return false;
-- return true means "binary", false means "text",
-- nil means "unknown, try to guess"
function binary_file(name)
   -- some known binaries, return true
   local bin_pats = {
      "%.gif$", "%.jpe?g$", "%.png$", "%.bz2$", "%.gz$", "%.zip$",
      "%.class$", "%.jar$", "%.war$", "%.ear$"
   }
   -- some known text, return false
   local txt_pats = {
      "%.cc?$", "%.cxx$", "%.hh?$", "%.hxx$", "%.cpp$", "%.hpp$",
      "%.lua$", "%.texi$", "%.sql$", "%.java$"
   }
   local lowname=string.lower(name)
   for _, pat in ipairs(bin_pats) do
      if string.find(lowname, pat) then return true end
   end
   for _, pat in ipairs(txt_pats) do
      if string.find(lowname, pat) then return false end
   end
   -- unknown - read file and use the guess-binary
   -- monotone built-in function
   return guess_binary_file_contents(name)
-- given a file name, return a regular expression which will match
-- lines that name top-level constructs in that file, or "", to disable
-- matching.
function get_encloser_pattern(name)
   -- texinfo has special sectioning commands
   if (string.find(name, "%.texi$")) then
      -- sectioning commands in texinfo: @node, @chapter, @top,
      -- @((sub)?sub)?section, @unnumbered(((sub)?sub)?sec)?,
      -- @appendix(((sub)?sub)?sec)?, @(|major|chap|sub(sub)?)heading
      return ("^@("
              .. "node|chapter|top"
              .. "|((sub)?sub)?section"
              .. "|(unnumbered|appendix)(((sub)?sub)?sec)?"
              .. "|(major|chap|sub(sub)?)?heading"
              .. ")")
   end
   -- LaTeX has special sectioning commands.  This rule is applied to ordinary
   -- .tex files too, since there's no reliable way to distinguish those from
   -- latex files anyway, and there's no good pattern we could use for
   -- arbitrary plain TeX anyway.
   if (string.find(name, "%.tex$")
       or string.find(name, "%.ltx$")
       or string.find(name, "%.latex$")) then
      return ("\\\\("
              .. "part|chapter|paragraph|subparagraph"
              .. "|((sub)?sub)?section"
              .. ")")
   end
   -- There's no good way to find section headings in raw text, and trying
   -- just gives distracting output, so don't even try.
   if (string.find(name, "%.txt$")
       or string.upper(name) == "README") then
      return ""
   end
   -- This default is correct surprisingly often -- in pretty much any text
   -- written with code-like indentation.
   return "^[[:alnum:]$_]"
function edit_comment(user_log_message)
   local exe = nil
   -- top priority is VISUAL, then EDITOR, then a series of hardcoded
   -- defaults, if available.
   local visual = os.getenv("VISUAL")
   local editor = os.getenv("EDITOR")
   if (visual ~= nil) then exe = visual
   elseif (editor ~= nil) then exe = editor
   elseif (program_exists_in_path("editor")) then exe = "editor"
   elseif (program_exists_in_path("vi")) then exe = "vi"
   elseif (string.sub(get_ostype(), 1, 6) ~= "CYGWIN" and
       program_exists_in_path("notepad.exe")) then exe = "notepad"
   else
      io.write(gettext("Could not find editor to enter commit message\n"
               .. "Try setting the environment variable EDITOR\n"))
      return nil
   end
   local tmp, tname = temp_file()
   if (tmp == nil) then return nil end
   tmp:write(user_log_message)
   if user_log_message == "" or string.sub(user_log_message, -1) ~= "\n" then
      tmp:write("\n")
   end
   io.close(tmp)
   -- By historical convention, VISUAL and EDITOR can contain arguments
   -- (and, in fact, arbitrarily complicated shell constructs).  Since Lua
   -- has no word-splitting functionality, we invoke the shell to deal with
   -- anything more complicated than a single word with no metacharacters.
   -- This, unfortunately, means we have to quote the file argument.
   if (not string.find(exe, "[^%w_.+-]")) then
      -- safe to call spawn directly
      if (execute(exe, tname) ~= 0) then
         io.write(string.format(gettext("Error running editor '%s' "..
                                        "to enter log message\n"),
                                exe))
         os.remove(tname)
         return nil
      end
   else
      -- must use shell
      local shell = os.getenv("SHELL")
      if (shell == nil) then shell = "sh" end
      if (not program_exists_in_path(shell)) then
         io.write(string.format(gettext("Editor command '%s' needs a shell, "..
                                        "but '%s' is not to be found"),
                                exe, shell))
         os.remove(tname)
         return nil
      end
      -- Single-quoted strings in both Bourne shell and csh can contain
      -- anything but a single quote.
      local safe_tname = " '" .. string.gsub(tname, "'", "'\\''") .. "'"
      if (execute(shell, "-c", editor .. safe_tname) ~= 0) then
         io.write(string.format(gettext("Error running editor '%s' "..
                                        "to enter log message\n"),
                                exe))
         os.remove(tname)
         return nil
      end
   end
   tmp = io.open(tname, "r")
   if (tmp == nil) then os.remove(tname); return nil end
   local res = tmp:read("*a")
   io.close(tmp)
   os.remove(tname)
   return res
function get_local_key_name(key_identity)
   return key_identity.given_name
function persist_phrase_ok()
   return true
function use_inodeprints()
   return false
function get_date_format_spec(wanted)
   -- Return the strftime(3) specification to be used to print dates
   -- in human-readable format after conversion to the local timezone.
   -- The default uses the preferred date and time representation for
   -- the current locale, e.g. the output looks like this: "09/08/2009
   -- 06:49:26 PM" for en_US and "date_time_long", or "08.09.2009"
   -- for de_DE and "date_short"
   --
   -- A sampling of other possible formats you might want:
   --   default for your locale: "%c" (may include a confusing timezone label)
   --   12 hour format: "%d %b %Y, %I:%M:%S %p"
   --   like ctime(3):  "%a %b %d %H:%M:%S %Y"
   --   email style:    "%a, %d %b %Y %H:%M:%S"
   --   ISO 8601:       "%Y-%m-%d %H:%M:%S" or "%Y-%m-%dT%H:%M:%S"
   --
   --   ISO 8601, no timezone conversion: ""
   --.
   if (wanted == "date_long" or wanted == "date_short") then
       return "%x"
   end
   if (wanted == "time_long" or wanted == "time_short") then
       return "%X"
   end
   return "%x %X"
-- trust evaluation hooks
function intersection(a,b)
   local s={}
   local t={}
   for k,v in pairs(a) do s[v.name] = 1 end
   for k,v in pairs(b) do if s[v] ~= nil then table.insert(t,v) end end
   return t
function get_revision_cert_trust(signers, id, name, val)
   return true
-- This is only used by migration from old manifest-style ancestry
function get_manifest_cert_trust(signers, id, name, val)
   return true
-- http://snippets.luacode.org/?p=snippets/String_to_Hex_String_68
function hex_dump(str,spacer)
   return (string.gsub(str,"(.)",
      function (c)
         return string.format("%02x%s",string.byte(c), spacer or "")
      end)
   )
function accept_testresult_change_hex(old_results, new_results)
   local reqfile = io.open("_MTN/wanted-testresults", "r")
   if (reqfile == nil) then return true end
   local line = reqfile:read()
   local required = {}
   while (line ~= nil)
   do
      required[line] = true
      line = reqfile:read()
   end
   io.close(reqfile)
   for test, res in pairs(required)
   do
      if old_results[test] == true and new_results[test] ~= true
      then
         return false
      end
   end
   return true
function accept_testresult_change(old_results, new_results)
   -- Hex encode each of the key hashes to match those in 'wanted-testresults'
   local old_results_hex = {}
   for k, v in pairs(old_results) do
	old_results_hex[hex_dump(k)] = v
   end
   local new_results_hex = {}
   for k, v in pairs(new_results) do
      new_results_hex[hex_dump(k)] = v
   end
   return accept_testresult_change_hex(old_results_hex, new_results_hex)
-- merger support
-- Fields in the mergers structure:
-- cmd       : a function that performs the merge operation using the chosen
--             program, best try.
-- available : a function that checks that the needed program is installed and
--             in $PATH
-- wanted    : a function that checks if the user doesn't want to use this
--             method, and returns false if so.  This should normally return
--             true, but in some cases, especially when the merger is really
--             an editor, the user might have a preference in EDITOR and we
--             need to respect that.
--             NOTE: wanted is only used when the user has NOT defined the
--             `merger' variable or the MTN_MERGE environment variable.
mergers = {}
-- This merger is designed to fail if there are any conflicts without trying to resolve them
mergers.fail = {
   cmd = function (tbl) return false end,
   available = function () return true end,
   wanted = function () return true end
mergers.meld = {
   cmd = function (tbl)
      io.write(string.format(
        "\nWARNING: 'meld' was chosen to perform an external 3-way merge.\n"..
        "You must merge all changes to the *CENTER* file.\n\n"
      ))
      local path = "meld"
      local ret = execute(path, tbl.lfile, tbl.afile, tbl.rfile)
      if (ret ~= 0) then
         io.write(string.format(gettext("Error running merger '%s'\n"), path))
         return false
      end
      return tbl.afile
   end ,
   available = function () return program_exists_in_path("meld") end,
   wanted = function () return true end
mergers.diffuse = {
   cmd = function (tbl)
      io.write(string.format(
        "\nWARNING: 'diffuse' was chosen to perform an external 3-way merge.\n"..
        "You must merge all changes to the *CENTER* file.\n\n"
      ))
      local path = "diffuse"
      local ret = execute(path, tbl.lfile, tbl.afile, tbl.rfile)
      if (ret ~= 0) then
         io.write(string.format(gettext("Error running merger '%s'\n"), path))
         return false
      end
      return tbl.afile
   end ,
   available = function () return program_exists_in_path("diffuse") end,
   wanted = function () return true end
mergers.tortoise = {
   cmd = function (tbl)
      local path = "tortoisemerge"
      local ret = execute(path,
                          string.format("/base:%s", tbl.afile),
                          string.format("/theirs:%s", tbl.lfile),
                          string.format("/mine:%s", tbl.rfile),
                          string.format("/merged:%s", tbl.outfile))
      if (ret ~= 0) then
         io.write(string.format(gettext("Error running merger '%s'\n"), path))
         return false
      end
      return tbl.outfile
   end ,
   available = function() return program_exists_in_path ("tortoisemerge") end,
   wanted = function () return true end
mergers.vim = {
   cmd = function (tbl)
      function execute_diff3(mine, yours, out)
     local diff3_args = {
        "diff3",
        "--merge",
        "--easy-only",
     }
     table.insert(diff3_args, string.gsub(mine, "\\", "/") .. "")
     table.insert(diff3_args, string.gsub(tbl.afile, "\\", "/") .. "")
     table.insert(diff3_args, string.gsub(yours, "\\", "/") .. "")
     return execute_redirected("", string.gsub(out, "\\", "/"), "", unpack(diff3_args))
      end
      io.write (string.format("\nWARNING: 'vim' was chosen to perform "..
                  "an external 3-way merge.\n"..
                  "You must merge all changes to the "..
                  "*LEFT* file.\n"))
      local vim
      if os.getenv ("DISPLAY") ~= nil and program_exists_in_path ("gvim") then
     vim = "gvim"
      else
     vim = "vim"
      end
      local lfile_merged = tbl.lfile .. ".merged"
      local rfile_merged = tbl.rfile .. ".merged"
      -- first merge lfile using diff3
      local ret = execute_diff3(tbl.lfile, tbl.rfile, lfile_merged)
      if ret == 2 then
         io.write(string.format(gettext("Error running diff3 for merger '%s'\n"), vim))
         os.remove(lfile_merged)
     return false
      end
      -- now merge rfile using diff3
      ret = execute_diff3(tbl.rfile, tbl.lfile, rfile_merged)
      if ret == 2 then
         io.write(string.format(gettext("Error running diff3 for merger '%s'\n"), vim))
         os.remove(lfile_merged)
         os.remove(rfile_merged)
     return false
      end
      os.rename(lfile_merged, tbl.lfile)
      os.rename(rfile_merged, tbl.rfile)
      local ret = execute(vim, "-f", "-d", "-c", string.format("silent file %s", tbl.outfile),
                          tbl.lfile, tbl.rfile)
      if (ret ~= 0) then
         io.write(string.format(gettext("Error running merger '%s'\n"), vim))
         return false
      end
      return tbl.outfile
   end ,
   available =
      function ()
     return program_exists_in_path("diff3") and
            (program_exists_in_path("vim") or
        program_exists_in_path("gvim"))
      end ,
   wanted =
      function ()
     local editor = os.getenv("EDITOR")
     if editor and
        not (string.find(editor, "vim") or
         string.find(editor, "gvim")) then
        return false
     end
     return true
      end
mergers.rcsmerge = {
   cmd = function (tbl)
      -- XXX: This is tough - should we check if conflict markers stay or not?
      -- If so, we should certainly give the user some way to still force
      -- the merge to proceed since they can appear in the files (and I saw
      -- that). --pasky
      local merge = os.getenv("MTN_RCSMERGE")
      if execute(merge, tbl.lfile, tbl.afile, tbl.rfile) == 0 then
         copy_text_file(tbl.lfile, tbl.outfile);
         return tbl.outfile
      end
      local ret = execute("vim", "-f", "-c", string.format("file %s", tbl.outfile
                          tbl.lfile)
      if (ret ~= 0) then
         io.write(string.format(gettext("Error running merger '%s'\n"), "vim"))
         return false
      end
      return tbl.outfile
   end,
   available =
      function ()
     local merge = os.getenv("MTN_RCSMERGE")
     return merge and
        program_exists_in_path(merge) and program_exists_in_path("vim")
      end ,
   wanted = function () return os.getenv("MTN_RCSMERGE") ~= nil end
--  GNU diffutils based merging
mergers.diffutils = {
    --  merge procedure execution
    cmd = function (tbl)
        --  parse options
        local option = {}
        option.partial = false
        option.diff3opts = ""
        option.sdiffopts = ""
        local options = os.getenv("MTN_MERGE_DIFFUTILS")
        if options ~= nil then
            for spec in string.gmatch(options, "%s*(%w[^,]*)%s*,?") do
                local name, value = string.match(spec, "^(%w+)=([^,]*)")
                if name == nil then
                    name = spec
                    value = true
                end
                if type(option[name]) == "nil" then
                    io.write("mtn: " .. string.format(gettext("invalid \"diffutils\" merger option \"%s\""), name) .. "\n")
                    return false
                end
                option[name] = value
            end
        end
        --  determine the diff3(1) command
        local diff3 = {
            "diff3",
            "--merge",
            "--label", string.format("%s [left]",     tbl.left_path ),
            "--label", string.format("%s [ancestor]", tbl.anc_path  ),
            "--label", string.format("%s [right]",    tbl.right_path),
        }
        if option.diff3opts ~= "" then
            for opt in string.gmatch(option.diff3opts, "%s*([^%s]+)%s*") do
                table.insert(diff3, opt)
            end
        end
        table.insert(diff3, string.gsub(tbl.lfile, "\\", "/") .. "")
        table.insert(diff3, string.gsub(tbl.afile, "\\", "/") .. "")
        table.insert(diff3, string.gsub(tbl.rfile, "\\", "/") .. "")
        --  dispatch according to major operation mode
        if option.partial then
            --  partial batch/non-modal 3-way merge "resolution":
            --  simply merge content with help of conflict markers
            io.write("mtn: " .. gettext("3-way merge via GNU diffutils, resolving conflicts via conflict markers") .. "\n")
            local ret = execute_redirected("", string.gsub(tbl.outfile, "\\", "/"), "", unpack(diff3))
            if ret == 2 then
                io.write("mtn: " .. gettext("error running GNU diffutils 3-way difference/merge tool \"diff3\"") .. "\n")
                return false
            end
            return tbl.outfile
        else
            --  real interactive/modal 3/2-way merge resolution:
            --  display 3-way merge conflict and perform 2-way merge resolution
            io.write("mtn: " .. gettext("3-way merge via GNU diffutils, resolving conflicts via interactive prompt") .. "\n")
            --  display 3-way merge conflict (batch)
            io.write("\n")
            io.write("mtn: " .. gettext("---- CONFLICT SUMMARY ------------------------------------------------") .. "\n")
            local ret = execute(unpack(diff3))
            if ret == 2 then
                io.write("mtn: " .. gettext("error running GNU diffutils 3-way difference/merge tool \"diff3\"") .. "\n")
                return false
            end
            --  perform 2-way merge resolution (interactive)
            io.write("\n")
            io.write("mtn: " .. gettext("---- CONFLICT RESOLUTION ---------------------------------------------") .. "\n")
            local sdiff = {
                "sdiff",
                "--diff-program=diff",
                "--suppress-common-lines",
                "--minimal",
                "--output=" .. string.gsub(tbl.outfile, "\\", "/")
            }
            if option.sdiffopts ~= "" then
                for opt in string.gmatch(option.sdiffopts, "%s*([^%s]+)%s*") do
                    table.insert(sdiff, opt)
                end
            end
            table.insert(sdiff, string.gsub(tbl.lfile, "\\", "/") .. "")
            table.insert(sdiff, string.gsub(tbl.rfile, "\\", "/") .. "")
            local ret = execute(unpack(sdiff))
            if ret == 2 then
                io.write("mtn: " .. gettext("error running GNU diffutils 2-way merging tool \"sdiff\"") .. "\n")
                return false
            end
            return tbl.outfile
        end
    end,
    --  merge procedure availability check
    available = function ()
        --  make sure the GNU diffutils tools are available
        return program_exists_in_path("diff3") and
               program_exists_in_path("sdiff") and
               program_exists_in_path("diff");
    end,
    --  merge procedure request check
    wanted = function ()
        --  assume it is requested (if it is available at all)
        return true
    end
mergers.emacs = {
   cmd = function (tbl)
      local emacs
      if program_exists_in_path("xemacs") then
         emacs = "xemacs"
      else
         emacs = "emacs"
      end
      local elisp = "(ediff-merge-files-with-ancestor \"%s\" \"%s\" \"%s\" nil \"%s\")"
      -- Converting backslashes is necessary on Win32 MinGW; emacs
      -- lisp string syntax says '\' is an escape.
      local ret = execute(emacs, "--eval",
                          string.format(elisp,
                          string.gsub (tbl.lfile, "\\", "/"),
                          string.gsub (tbl.rfile, "\\", "/"),
                          string.gsub (tbl.afile, "\\", "/"),
                          string.gsub (tbl.outfile, "\\", "/")))
      if (ret ~= 0) then
         io.write(string.format(gettext("Error running merger '%s'\n"), emacs))
         return false
      end
      return tbl.outfile
   end,
   available =
      function ()
     return program_exists_in_path("xemacs") or
        program_exists_in_path("emacs")
      end ,
   wanted =
      function ()
     local editor = os.getenv("EDITOR")
     if editor and
        not (string.find(editor, "emacs") or
         string.find(editor, "gnu")) then
        return false
     end
     return true
      end
mergers.xxdiff = {
   cmd = function (tbl)
      local path = "xxdiff"
      local ret = execute(path,
                        "--title1", tbl.left_path,
                        "--title2", tbl.right_path,
                        "--title3", tbl.merged_path,
                        tbl.lfile, tbl.afile, tbl.rfile,
                        "--merge",
                        "--merged-filename", tbl.outfile,
                        "--exit-with-merge-status")
      if (ret ~= 0) then
         io.write(string.format(gettext("Error running merger '%s'\n"), path))
         return false
      end
      return tbl.outfile
   end,
   available = function () return program_exists_in_path("xxdiff") end,
   wanted = function () return true end
mergers.kdiff3 = {
   cmd = function (tbl)
      local path = "kdiff3"
      local ret = execute(path,
                          "--L1", tbl.anc_path,
                          "--L2", tbl.left_path,
                          "--L3", tbl.right_path,
                          tbl.afile, tbl.lfile, tbl.rfile,
                          "--merge",
                          "--o", tbl.outfile)
      if (ret ~= 0) then
         io.write(string.format(gettext("Error running merger '%s'\n"), path))
         return false
      end
      return tbl.outfile
   end,
   available = function () return program_exists_in_path("kdiff3") end,
   wanted = function () return true end
mergers.opendiff = {
   cmd = function (tbl)
      local path = "opendiff"
      -- As opendiff immediately returns, let user confirm manually
      local ret = execute_confirm(path,
                                  tbl.lfile,tbl.rfile,
                                  "-ancestor",tbl.afile,
                                  "-merge",tbl.outfile)
      if (ret ~= 0) then
         io.write(string.format(gettext("Error running merger '%s'\n"), path))
         return false
      end
      return tbl.outfile
   end,
   available = function () return program_exists_in_path("opendiff") end,
   wanted = function () return true end
function write_to_temporary_file(data, namehint, filemodehint)
   tmp, filename = temp_file(namehint, filemodehint)
   if (tmp == nil) then
      return nil
   end;
   tmp:write(data)
   io.close(tmp)
   return filename
function copy_text_file(srcname, destname)
   src = io.open(srcname, "r")
   if (src == nil) then return nil end
   dest = io.open(destname, "w")
   if (dest == nil) then return nil end
   while true do
      local line = src:read()
      if line == nil then break end
      dest:write(line, "\n")
   end
   io.close(dest)
   io.close(src)
function read_contents_of_file(filename, mode)
   tmp = io.open(filename, mode)
   if (tmp == nil) then
      return nil
   end
   local data = tmp:read("*a")
   io.close(tmp)
   return data
function program_exists_in_path(program)
   return existsonpath(program) == 0
function get_preferred_merge3_command (tbl)
   local default_order = {"diffuse", "kdiff3", "xxdiff", "opendiff",
                          "tortoise", "emacs", "vim", "meld", "diffutils"}
   local function existmerger(name)
      local m = mergers[name]
      if type(m) == "table" and m.available(tbl) then
         return m.cmd
      end
      return nil
   end
   local function trymerger(name)
      local m = mergers[name]
      if type(m) == "table" and m.available(tbl) and m.wanted(tbl) then
         return m.cmd
      end
      return nil
   end
   -- Check if there's a merger given by the user.
   local mkey = os.getenv("MTN_MERGE")
   if not mkey then mkey = merger end
   if not mkey and os.getenv("MTN_RCSMERGE") then mkey = "rcsmerge" end
   -- If there was a user-given merger, see if it exists.  If it does, return
   -- the cmd function.  If not, return nil.
   local c
   if mkey then c = existmerger(mkey) end
   if c then return c,mkey end
   if mkey then return nil,mkey end
   -- If there wasn't any user-given merger, take the first that's available
   -- and wanted.
   for _,mkey in ipairs(default_order) do
      c = trymerger(mkey) ; if c then return c,mkey end
   end
function merge3 (anc_path, left_path, right_path, merged_path, ancestor, left, right)
   local ret = nil
   local tbl = {}
   tbl.anc_path = anc_path
   tbl.left_path = left_path
   tbl.right_path = right_path
   tbl.merged_path = merged_path
   tbl.afile = nil
   tbl.lfile = nil
   tbl.rfile = nil
   tbl.outfile = nil
   tbl.meld_exists = false
   tbl.lfile = write_to_temporary_file (left, "left", "r+b")
   tbl.afile = write_to_temporary_file (ancestor, "ancestor", "r+b")
   tbl.rfile = write_to_temporary_file (right, "right", "r+b")
   tbl.outfile = write_to_temporary_file ("", "merged", "r+b")
   if tbl.lfile ~= nil and tbl.rfile ~= nil and tbl.afile ~= nil and tbl.outfile ~= nil
   then
      local cmd,mkey = get_preferred_merge3_command (tbl)
      if cmd ~=nil
      then
         io.write ("mtn: " .. string.format(gettext("executing external 3-way merge via \"%s\" merger\n"), mkey))
         ret = cmd (tbl)
         if not ret then
            ret = nil
         else
            ret = read_contents_of_file (ret, "rb")
            if string.len (ret) == 0
            then
               ret = nil
            end
         end
      else
     if mkey then
        io.write (string.format("The possible commands for the "..mkey.." merger aren't available.\n"..
                "You may want to check that $MTN_MERGE or the lua variable `merger' is set\n"..
                "to something available.  If you want to use vim or emacs, you can also\n"..
        "set $EDITOR to something appropriate.\n"))
     else
        io.write (string.format("No external 3-way merge command found.\n"..
                "You may want to check that $EDITOR is set to an editor that supports 3-way\n"..
                "merge, set this explicitly in your get_preferred_merge3_command hook,\n"..
                "or add a 3-way merge program to your path.\n"))
     end
      end
   end
   os.remove (tbl.lfile)
   os.remove (tbl.rfile)
   os.remove (tbl.afile)
   os.remove (tbl.outfile)
   return ret
-- expansion of values used in selector completion
function expand_selector(str)
   -- something which looks like a generic cert pattern
   if string.find(str, "^[^=]*=.*$")
   then
      return ("c:" .. str)
   end
   -- something which looks like an email address
   if string.find(str, "[%w%-_]+@[%w%-_]+")
   then
      return ("a:" .. str)
   end
   -- something which looks like a branch name
   if string.find(str, "[%w%-]+%.[%w%-]+")
   then
      return ("b:" .. str)
   end
   -- a sequence of nothing but hex digits
   if string.find(str, "^%x+$")
   then
      return ("i:" .. str)
   end
   -- tries to expand as a date
   local dtstr = expand_date(str)
   if  dtstr ~= nil
   then
      return ("d:" .. dtstr)
   end
   return nil
-- expansion of a date expression
function expand_date(str)
   -- simple date patterns
   if string.find(str, "^19%d%d%-%d%d")
      or string.find(str, "^20%d%d%-%d%d")
   then
      return (str)
   end
   -- "now"
   if str == "now"
   then
      local t = os.time(os.date('!*t'))
      return os.date("!%Y-%m-%dT%H:%M:%S", t)
   end
   -- today don't uses the time         # for xgettext's sake, an extra quote
   if str == "today"
   then
      local t = os.time(os.date('!*t'))
      return os.date("!%Y-%m-%d", t)
   end
   -- "yesterday", the source of all hangovers
   if str == "yesterday"
   then
      local t = os.time(os.date('!*t'))
      return os.date("!%Y-%m-%d", t - 86400)
   end
   -- "CVS style" relative dates such as "3 weeks ago"
   local trans = {
      minute = 60;
      hour = 3600;
      day = 86400;
      week = 604800;
      month = 2678400;
      year = 31536000
   }
   local pos, len, n, type = string.find(str, "(%d+) ([minutehordaywk]+)s? ago")
   if trans[type] ~= nil
   then
      local t = os.time(os.date('!*t'))
      if trans[type] <= 3600
      then
        return os.date("!%Y-%m-%dT%H:%M:%S", t - (n * trans[type]))
      else
        return os.date("!%Y-%m-%d", t - (n * trans[type]))
      end
   end
   return nil
external_diff_default_args = "-u"
-- default external diff, works for gnu diff
function external_diff(file_path, data_old, data_new, is_binary, diff_args, rev_old, rev_new)
   local old_file = write_to_temporary_file(data_old, nil, "r+b");
   local new_file = write_to_temporary_file(data_new, nil, "r+b");
   if diff_args == nil then diff_args = external_diff_default_args end
   execute("diff", diff_args, "--label", file_path .. "\told", old_file, "--label", file_path .. "\tnew", new_file);
   os.remove (old_file);
   os.remove (new_file);
-- netsync permissions hooks (and helper)
function globish_match(glob, str)
      local pcallstatus, result = pcall(function() if (globish.match(glob, str)) then return true else return false end end)
      if pcallstatus == true then
          -- no error
          return result
      else
          -- globish.match had a problem
          return nil
      end
function _get_netsync_read_permitted(branch, ident, permfilename, state)
   if not exists(permfilename) or isdir(permfilename) then
      return false
   end
   local permfile = io.open(permfilename, "r")
   if (permfile == nil) then return false end
   local dat = permfile:read("*a")
   io.close(permfile)
   local res = parse_basic_io(dat)
   if res == nil then
      io.stderr:write("file "..permfilename.." cannot be parsed\n")
      return false,"continue"
   end
   state["matches"] = state["matches"] or false
   state["cont"] = state["cont"] or false
   for i, item in pairs(res)
   do
      -- legal names: pattern, allow, deny, continue
      if item.name == "pattern" then
         if state["matches"] and not state["cont"] then return false end
         state["matches"] = false
         state["cont"] = false
         for j, val in pairs(item.values) do
            if globish_match(val, branch) then state["matches"] = true end
         end
      elseif item.name == "allow" then if state["matches"] then
         for j, val in pairs(item.values) do
            if val == "*" then return true end
            if val == "" and ident == nil then return true end
            if ident ~= nil and val == ident.id then return true end
            if ident ~= nil and globish_match(val, ident.name) then return true end
         end
      end elseif item.name == "deny" then if state["matches"] then
         for j, val in pairs(item.values) do
            if val == "*" then return false end
            if val == "" and ident == nil then return false end
            if ident ~= nil and val == ident.id then return false end
            if ident ~= nil and globish_match(val, ident.name) then return false end
         end
      end elseif item.name == "continue" then if state["matches"] then
         state["cont"] = true
         for j, val in pairs(item.values) do
            if val == "false" or val == "no" then
              state["cont"] = false
            end
         end
      end elseif item.name ~= "comment" then
         io.stderr:write("unknown symbol in read-permissions: " .. item.name .. "\n")
         return false
      end
   end
   return false
function get_netsync_read_permitted(branch, ident)
   local permfilename = get_confdir() .. "/read-permissions"
   local permdirname = permfilename .. ".d"
   local state = {}
   if _get_netsync_read_permitted(branch, ident, permfilename, state) then
      return true
   end
   if isdir(permdirname) then
      local files = read_directory(permdirname)
      table.sort(files)
      for _,f in ipairs(files) do
        pf = permdirname.."/"..f
        if _get_netsync_read_permitted(branch, ident, pf, state) then
          return true
        end
      end
   end
   return false
function _get_netsync_write_permitted(ident, permfilename)
   if not exists(permfilename) or isdir(permfilename) then return false end
   local permfile = io.open(permfilename, "r")
   if (permfile == nil) then
      return false
   end
   local matches = false
   local line = permfile:read()
   while (not matches and line ~= nil) do
      local _, _, ln = string.find(line, "%s*([^%s]*)%s*")
      if ln == "*" then matches = true end
      if ln == ident.id then matches = true end
      if globish_match(ln, ident.name) then matches = true end
      line = permfile:read()
   end
   io.close(permfile)
   return matches
function get_netsync_write_permitted(ident)
   local permfilename = get_confdir() .. "/write-permissions"
   local permdirname = permfilename .. ".d"
   if _get_netsync_write_permitted(ident, permfilename) then return true end
   if isdir(permdirname) then
      local files = read_directory(permdirname)
      table.sort(files)
      for _,f in ipairs(files) do
        pf = permdirname.."/"..f
        if _get_netsync_write_permitted(ident, pf) then return true end
      end
   end
   return false
-- This is a simple function which assumes you're going to be spawning
-- a copy of mtn, so reuses a common bit at the end for converting
-- local args into remote args. You might need to massage the logic a
-- bit if this doesn't fit your assumptions.
function get_netsync_connect_command(uri, args)
        local argv = nil
        if uri["scheme"] == "ssh"
                and uri["host"]
                and uri["path"] then
                argv = { "ssh" }
                if uri["user"] then
                        table.insert(argv, "-l")
                        table.insert(argv, uri["user"])
                end
                if uri["port"] then
                        table.insert(argv, "-p")
                        table.insert(argv, uri["port"])
                end
                -- ssh://host/~/dir/file.mtn or
                -- ssh://host/~user/dir/file.mtn should be home-relative
                if string.find(uri["path"], "^/~") then
                        uri["path"] = string.sub(uri["path"], 2)
                end
                table.insert(argv, uri["host"])
        end
        if uri["scheme"] == "file" and uri["path"] then
                argv = { }
        end
        if uri["scheme"] == "ssh+ux"
                and uri["host"]
                and uri["path"] then
                argv = { "ssh" }
                if uri["user"] then
                        table.insert(argv, "-l")
                        table.insert(argv, uri["user"])
                end
                if uri["port"] then
                        table.insert(argv, "-p")
                        table.insert(argv, uri["port"])
                end
                -- ssh://host/~/dir/file.mtn or
                -- ssh://host/~user/dir/file.mtn should be home-relative
                if string.find(uri["path"], "^/~") then
                        uri["path"] = string.sub(uri["path"], 2)
                end
                table.insert(argv, uri["host"])
                table.insert(argv, get_remote_unix_socket_command(uri["host"]))
                table.insert(argv, "-")
                table.insert(argv, "UNIX-CONNECT:" .. uri["path"])
        else
            if argv then
                    -- start remote monotone process
                    table.insert(argv, get_mtn_command(uri["host"]))
                    if args["debug"] then
                            table.insert(argv, "--verbose")
                    else
                            table.insert(argv, "--quiet")
                    end
                    table.insert(argv, "--db")
                    table.insert(argv, uri["path"])
                    table.insert(argv, "serve")
                    table.insert(argv, "--stdio")
                    table.insert(argv, "--no-transport-auth")
            -- else scheme does not require starting a new remote
            -- process (ie mtn:)
            end
        end
        return argv
function use_transport_auth(uri)
        if uri["scheme"] == "ssh"
        or uri["scheme"] == "ssh+ux"
        or uri["scheme"] == "file" then
                return false
        else
                return true
        end
function get_mtn_command(host)
        return "mtn"
function get_remote_unix_socket_command(host)
    return "socat"
function get_default_command_options(command)
    local default_args = {}
    return default_args
function get_default_database_alias()
    return ":default.mtn"
function get_default_database_locations()
    local paths = {}
    table.insert(paths, get_confdir() .. "/databases")
    return paths
function get_default_database_glob()
    return "*.{mtn,db}"
hook_wrapper_dump                = {}
hook_wrapper_dump.depth          = 0
hook_wrapper_dump._string        = function(s) return string.format("%q", s) end
hook_wrapper_dump._number        = function(n) return tostring(n) end
hook_wrapper_dump._boolean       = function(b) if (b) then return "true" end return "false" end
hook_wrapper_dump._userdata      = function(u) return "nil --[[userdata]]" end
-- if we really need to return / serialize functions we could do it
-- like cbreak@irc.freenode.net did here: http://lua-users.org/wiki/TablePersistence
hook_wrapper_dump._function      = function(f) return "nil --[[function]]" end
hook_wrapper_dump._nil           = function(n) return "nil" end
hook_wrapper_dump._thread        = function(t) return "nil --[[thread]]" end
hook_wrapper_dump._lightuserdata = function(l) return "nil --[[lightuserdata]]" end
hook_wrapper_dump._table = function(t)
    local buf = ''
    if (hook_wrapper_dump.depth > 0) then
        buf = buf .. '{\n'
    end
    hook_wrapper_dump.depth = hook_wrapper_dump.depth + 1;
    for k,v in pairs(t) do
        buf = buf..string.format('%s[%s] = %s;\n',
              string.rep("\t", hook_wrapper_dump.depth - 1),
              hook_wrapper_dump["_" .. type(k)](k),
              hook_wrapper_dump["_" .. type(v)](v))
    end
    hook_wrapper_dump.depth = hook_wrapper_dump.depth - 1;
    if (hook_wrapper_dump.depth > 0) then
        buf = buf .. string.rep("\t", hook_wrapper_dump.depth - 1) .. '}'
    end
    return buf
function hook_wrapper(func_name, ...)
    -- we have to ensure that nil arguments are restored properly for the
    -- function call, see http://lua-users.org/wiki/StoringNilsInTables
    local args = { n=select('#', ...), ... }
    for i=1,args.n do
        local val = assert(loadstring("return " .. args[i]),
                         "argument "..args[i].." could not be evaluated")()
        assert(val ~= nil or args[i] == "nil",
               "argument "..args[i].." was evaluated to nil")
        args[i] = val
    end
    local res = { _G[func_name](unpack(args, 1, args.n)) }
    return hook_wrapper_dump._table(res)
   -- Hook functions are tables containing any of the following 6 items
   -- with associated functions:
   --
   --   startup			Corresponds to note_mtn_startup()
   --   start			Corresponds to note_netsync_start()
   --   revision_received	Corresponds to note_netsync_revision_received()
   --   revision_sent		Corresponds to note_netsync_revision_sent()
   --   cert_received		Corresponds to note_netsync_cert_received()
   --   cert_sent		Corresponds to note_netsync_cert_sent()
   --   pubkey_received		Corresponds to note_netsync_pubkey_received()
   --   pubkey_sent		Corresponds to note_netsync_pubkey_sent()
   --   end			Corresponds to note_netsync_end()
   --
   -- Those functions take exactly the same arguments as the corresponding
   -- global functions, but return a different kind of value, a tuple
   -- composed of a return code and a value to be returned back to monotone.
   -- The codes are strings:
   -- "continue" and "stop"
   -- When the code "continue" is returned and there's another notifier, the
   -- second value is ignored and the next notifier is called.  Otherwise,
   -- the second value is returned immediately.
   local hook_functions = {}
   local supported_items = {
      "startup",
      "start", "revision_received", "revision_sent", "cert_received", "cert_sent",
      "pubkey_received", "pubkey_sent", "end"
   }
   function _hook_functions_helper(f,...)
      local s = "continue"
      local v = nil
      for _,n in pairs(hook_functions) do
         if n[f] then
            s,v = n[f](...)
         end
         if s ~= "continue" then
            break
         end
      end
      return v
   end
   function note_mtn_startup(...)
      return _hook_functions_helper("startup",...)
   end
   function note_netsync_start(...)
      return _hook_functions_helper("start",...)
   end
   function note_netsync_revision_received(...)
      return _hook_functions_helper("revision_received",...)
   end
   function note_netsync_revision_sent(...)
      return _hook_functions_helper("revision_sent",...)
   end
   function note_netsync_cert_received(...)
      return _hook_functions_helper("cert_received",...)
   end
   function note_netsync_cert_sent(...)
      return _hook_functions_helper("cert_sent",...)
   end
   function note_netsync_pubkey_received(...)
      return _hook_functions_helper("pubkey_received",...)
   end
   function note_netsync_pubkey_sent(...)
      return _hook_functions_helper("pubkey_sent",...)
   end
   function note_netsync_end(...)
      return _hook_functions_helper("end",...)
   end
   function add_hook_functions(functions, precedence)
      if type(functions) ~= "table" or type(precedence) ~= "number" then
         return false, "Invalid type"
      end
      if hook_functions[precedence] then
         return false, "Precedence already taken"
      end
      local unknown_items = ""
      local warning = nil
      local is_member =
         function (s,t)
            for k,v in pairs(t) do if s == v then return true end end
            return false
         end
      for n,f in pairs(functions) do
         if type(n) == "string" then
            if not is_member(n, supported_items) then
               if unknown_items ~= "" then
                  unknown_items = unknown_items .. ","
               end
               unknown_items = unknown_items .. n
            end
            if type(f) ~= "function" then
               return false, "Value for functions item "..n.." isn't a function"
            end
         else
            warning = "Non-string item keys found in functions table"
         end
      end
      if warning == nil and unknown_items ~= "" then
         warning = "Unknown item(s) " .. unknown_items .. " in functions table"
      end
      hook_functions[precedence] = functions
      return true, warning
   end
   function push_hook_functions(functions)
      local n = #hook_functions + 1
      return add_hook_functions(functions, n)
   end
   -- Kept for backward compatibility
   function add_netsync_notifier(notifier, precedence)
      return add_hook_functions(notifier, precedence)
   end
   function push_netsync_notifier(notifier)
      return push_hook_functions(notifier)
   end
-- to ensure only mapped authors are allowed through
-- return "" from unmapped_git_author
-- and validate_git_author will fail
function unmapped_git_author(author)
   -- replace "foo@bar" with "foo <foo@bar>"
   name = author:match("^([^<>]+)@[^<>]+$")
   if name then
      return name .. " <" .. author .. ">"
   end
   -- replace "<foo@bar>" with "foo <foo@bar>"
   name = author:match("^<([^<>]+)@[^<>]+>$")
   if name then
      return name .. " " .. author
   end
   -- replace "foo" with "foo <foo>"
   name = author:match("^[^<>@]+$")
   if name then
      return name .. " <" .. name .. ">"
   end
   return author -- unchanged
function validate_git_author(author)
   -- ensure author matches the "Name <email>" format git expects
   if author:match("^[^<]+ <[^>]*>$") then
      return true
   end
   return false
function get_man_page_formatter_command()
   local term_width = guess_terminal_width() - 2
   -- The string returned is run in a process created with 'popen'
   -- (see cmd.cc manpage).
   --
   -- On Unix (and POSIX compliant systems), 'popen' runs 'sh' with
   -- the inherited path.
   --
   -- On MinGW, 'popen' runs 'cmd.exe' with the inherited path. MinGW
   -- does not (currently) provide nroff or equivalent. So we assume
   -- sh, nroff, locale and less are also installed, from Cygwin or
   -- some other toolset.
   --
   -- GROFF_ENCODING is an environment variable that, when set, tells
   -- groff (called by nroff where applicable) to use preconv to convert
   -- the input from the given encoding to something groff understands.
   -- For example, groff doesn NOT understand raw UTF-8 as input, but
   -- it does understand unicode, which preconv will happily provide.
   -- This doesn't help people that don't use groff, unfortunately.
   -- Patches are welcome!
   if string.sub(get_ostype(), 1, 7) == "Windows" then
      return string.format("sh -c 'GROFF_ENCODING=`locale charmap` nroff -man -rLL=%dn' | less -R", term_width)
   else
      return string.format("GROFF_ENCODING=`locale charmap` nroff -man -rLL=%dn | less -R", term_width)
   end
-- Copyright (C) 2002 Graydon Hoare <graydon@pobox.com>
-- This program is made available under the GNU GPL version 2.0 or
-- greater. See the accompanying file COPYING for details.
-- This program is distributed WITHOUT ANY WARRANTY; without even the
-- implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
-- PURPOSE.
-- schema for the sql database. this file is converted into
-- a string constant, as the symbol:
-- char const schema_constant[...] = { ... };
-- and emitted as schema.h at compile time. it is used by
-- database.cc when initializing a fresh sqlite db.
PRAGMA page_size=8192;
-- Transactions avoid syncing for each action, db init gets faster.
BEGIN EXCLUSIVE;
-- primary data structures concerned with storing and 
-- versionning state-of-tree configurations
CREATE TABLE files
	id primary key,   -- strong hash of file contents
	data not null     -- compressed contents of a file
CREATE TABLE file_deltas
	id not null,      -- strong hash of file contents
	base not null,    -- joins with files.id or file_deltas.id
	delta not null,   -- compressed rdiff to construct current from base
	unique(id, base)
CREATE TABLE file_sizes
	id primary key,     -- joins with files.id or file_deltas.id
	size not null       -- the size of the file in byte
CREATE TABLE revisions
	id primary key,      -- SHA1(text of revision)
	data not null        -- compressed, encoded contents of a revision
CREATE TABLE revision_ancestry
	parent not null,     -- joins with revisions.id
	child not null,      -- joins with revisions.id
	unique(parent, child)
CREATE INDEX revision_ancestry__child ON revision_ancestry (child);
CREATE TABLE heights
	revision not null,	-- joins with revisions.id
	height not null,	-- complex height, array of big endian u32 integers
	unique(revision, height)
CREATE INDEX heights__height ON heights (height);
CREATE TABLE rosters
	id primary key,         -- a revision id
	checksum not null,      -- checksum of 'data', to protect against disk corruption
	data not null           -- compressed, encoded contents of the roster
CREATE TABLE roster_deltas
	id primary key,         -- a revision id
	checksum not null,      -- checksum of 'delta', to protect against disk corruption
	base not null,          -- joins with either rosters.id or roster_deltas.id
	delta not null          -- rdiff to construct current from base
CREATE TABLE next_roster_node_number
	node primary key        -- only one entry in this table, ever
-- structures for managing RSA keys and file / revision certs
CREATE TABLE public_keys
	id primary key,         -- hash of remaining fields separated by ":"
	name not null,          -- key identifier chosen by user
	keydata not null        -- RSA public params
CREATE TABLE revision_certs
	hash not null unique,   -- hash of remaining fields separated by ":"
	revision_id not null,   -- joins with revisions.id
	name not null,          -- opaque string chosen by user
	value not null,         -- opaque blob
	keypair_id not null,    -- joins with public_keys.id
	signature not null,     -- RSA/SHA1 signature of "[name@id:val]"
	unique(name, value, revision_id, keypair_id, signature)
CREATE INDEX revision_certs__revnameval ON revision_certs (revision_id,
       name, value, keypair_id, signature);
CREATE TABLE branch_epochs
	hash not null unique,         -- hash of remaining fields separated by ":"
	branch not null unique,       -- joins with revision_certs.value
	epoch not null                -- random binary id
-- The *leaves* of a branch. May be different from the *heads* of the
-- branch, if there are suspended revisions or untrusted certs.
CREATE TABLE branch_leaves
        (
        branch not null,        -- joins with revision_certs.value
        revision_id not null,   -- joins with revisions.id
        unique(branch, revision_id)
        );
-- database-local variables used to manage various things
CREATE TABLE db_vars
        (
        domain not null,      -- scope of application of a var
        name not null,        -- var key
        value not null,       -- var value
        unique(domain, name)
        );
-- obsolete tables kept around only to enable migration from
-- pre-roster monotone; manifest_certs may contain data of historical
-- interest in a db that was migrated from the changeset era, the
-- others should always be empty.
CREATE TABLE manifests
	id primary key,      -- strong hash of all the entries in a manifest
	data not null        -- compressed, encoded contents of a manifest
CREATE TABLE manifest_deltas
	id not null,      -- strong hash of all the entries in a manifest
	base not null,    -- joins with either manifest.id or manifest_deltas.id
	delta not null,   -- rdiff to construct current from base
	unique(id, base)
CREATE TABLE manifest_certs
	hash not null unique,   -- hash of remaining fields separated by ":"
	id not null,            -- joins with manifests.id or manifest_deltas.id
	name not null,          -- opaque string chosen by user
	value not null,         -- opaque blob
	keypair not null,       -- joins with public_keys.id
	signature not null,     -- RSA/SHA1 signature of "[name@id:val]"
	unique(name, id, value, keypair, signature)
COMMIT;
src/unix/read_password.cc
I(buf != NULL)
src/unix/read_password.cc:38: I(buf != NULL)
I(uname(&n) >= 0)
%s %s %s %s
src/unix/get_system_flavour.cc:21: I(uname(&n) >= 0)
src/unix/get_system_flavour.cc
command -v '%s' >/dev/null 2>&1
error getting status of file '%s': %s
setting execute permission on '%s'
setting execute permission on '%s' with mode %s
clearing execute permission on '%s'
clearing execute permission on '%s' with mode %s
spawning command: %s
src/unix/process.cc
checking for program '%s'
error in process_spawn
error in process_wait
successful return; %s exists
failure; %s does not exist
error opening file '%s': %s
error closing file '%s': %s
N5redir9bad_redirE
TERM
dumb
could not find home directory for uid %d
could not find home directory for user '%s'
could not create directory '%s': %s
renaming '%s' to '%s' failed: %s
cannot create temp file '%s': %s
all %d possible temporary file names are in use
error writing to temp file '%s': %s
giving up after four zero-length writes to '%s' (%d bytes written, %d left)
giving up after four zero-length writes to '%s' (%d byte written, %d left)
could not open directory '%s': %s
E((err == ENOTEMPTY) || (err == EEXIST))
cannot handle special file '%s'
cannot change to directory '%s': %s
cannot get working directory: %s
HOME
src/unix/fs.cc
E(pw != NULL)
/.monotone
/usr/share/locale
could not remove '%s': %s
error reading file '%s': %s
E(read_count >= 0)
error writing file '%s': %s
E(write_count >= 0)
/mtxxxxxx.tmp
E(err == EEXIST)
writing %s via temp %s
E(written >= 0)
E(deadcycles < 4)
stat(%s) failed: %s
chmod(%s) failed: %s
error accessing '%s/%s': %s
E(st_result == 0)
error accessing file '%s': %s
abcdefghijklmnopqrstuvwxyz0123456789
*Z19do_remove_recursiveRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE13delete_nondir
*Z19do_remove_recursiveRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE14record_subdirs
unknown error code %d
SSH_AUTH_SOCK
ssh_agent: no agent
I(connected())
E(sent >= 0)
E(++deadcycles < 8)
E(recvd >= 0)
src/unix/ssh_agent_platform.cc
ssh_agent: failed to create a socket: %s
ssh_agent: failed to set socket as close-on-exec: %s
ssh_agent: failed to connect to agent: %s
src/unix/ssh_agent_platform.cc:87: I(connected())
ssh_agent: write_data: asked to send %u bytes
ssh_agent: error during send: %s
ssh_agent: giving up after %d ineffective sends to agent
src/unix/ssh_agent_platform.cc:115: I(connected())
ssh_agent: read_data: asked to read %u bytes
ssh_agent: error during receive: %s
ssh_agent: giving up after %d ineffective receives from agent
unable to parse date '%s' with format '%s'
invalid date '%s' not matched by format '%s'
src/unix/parse_date.cc
E(p)
E(*p == 0)
can't parse URI: 
localhost
local
domain socket
Netxx::Probe: too many sockets for select
select(2): 
setsockopt(2) failure: 
N5Netxx6StreamE
N5Netxx9ProbeInfoE
no address to connect to
connection timed out
failed to connect: 
N5Netxx10StreamBaseE
service name resolution failed for: 
name resolution failure for 
bug in Netxx, ServerBase::sockets_ != 0
bind(2) error: 
N5Netxx10ServerBaseE
Netxx bug: Socket::get_type called when !type_ready_
failure from socket(2): 
dup(2) call failed: 
;*3$"
zPLR
.0l.
. T.
. P.
. M.
. M.
. S.
. [.
.0^.
.0h.
.0h.
. M.
. l.
.0~.
. ~.
.0~.
.0~.
. `.
.0d.
.0q.
.0t.
. a.
~. [.
. a.
.@P.
. e.
E . 
. Z.
. b.
. [.
. X.
. y.
T. R.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
. Y.
	?3t
	7;t
	7;t
	7;t
	7;t
	?3t
	7;t
	7;t
	?3t
mtn.debug
7zXZ
zCIz
\j1Y
98D"
IW|s
gRa4
X|X2
q%q%
mnK}
U,E]$
Okk@fo[=^
Yzkl
KEi|H$Vt
^ 	}
24iX
4ov@C
,6V	
G3Ku
X.2q
FOdoE
EC$B<
M);Q
0Wum=-w,`
orS]
H1=q
7<VD
8jS#
M0hX
tY=>2
ZN	I
6tc8
zAoR5
	^Z*W
aV27
|7Fc
4%`'
U#N0Y
v|J?
5Lx'9
9"]f
76&F
ge!jqT
!e7Yi
T"35
b24L6
aZH" 
+\?[V
#s1l
.O'.
dd!J-
sgXW
DfmF2
!7>=:Q
xKG&\w
V&0R
.<E>
^R: 
0%~6
+;22
[iVI@
#q$a
 o"Em
MJ7x
4,[l&
I6U>~
&}Pv
Ui`p
B|vO
F	d~
:	o?6kx
zcKID
<B+E
ds+L
?VU-M
]~K@
tB=/`
W!)%
J]rvfd
t7,m
V~8/P
E(j 
fscxFB
z<Zq
ai)HW
D9%J<
HT	)W
(7UM
EiGl
;\gh
;zu'Q
N'z11
8V"A
B%y|
*,D4
&$L-
#?9u
"|%c
lKFr!=[L~5
/Bu|
B<"[Q
3h`/
PtF%$;e
Z)d3x
\X>J
BJNi
@E=4W
<ukyq
![Qt[C
?N}X,)
83S6
`W}B
3	S@DR
WrTlk
\~p_
HheN
+e~ $
E	V'
#gM)
#+A/
l.F[S
4E+c
^>lG
AldM
#JP;
.7l@
zXB0
Z?[O
TRHLB
A{f(
r|Jt:
LB#>
+>~K
M5:E
CY+s>
m$>A6
xAu(
a*~v
;brr9]
!pCS
rYK^
YP*-aX
3j.D
tAn1
xTh!"x^C
d&]r
y5mQ
*lJu0
4L-r
8e;S
4U[C
ta|N
7%JT
! 14\=
ei.U
?0Ft
UFk:
;?"B
KPVI
X_*3~
!'n.
?[$U
r.{~Az
{mIf
lt#cC`
CE@n9
N@'zu
W|ml
R~m3
mwt1
oP^c>
9~Tm
%THt
.mvG
c P\
0Bc%
	*.1-q
(rfD?
+xO8
34!m
n',y
v]N6
hNnUy
lmC{(
"xImsu}
%v9DiiL
Z41"
H<@'
p6n52
}8Pr
bw^m/
mInJ{
W9}u
[qy&
S?'%*0
6$^x
Cf*i
Ezk@4
	&QX
yd<V
|	Cx
D:) >
,`i-
!]Ql
:bVZ,?FGa
k-s1
-eY5
ae'l
`(C3
bARA
'R37
qps.
Dz<n
wWW_
0U8=Y
%'HnV
?/T!
vPU]q|
lyki
Q5sg
6amg
(8uQ
 sJ;~I	
te=g
ZWq(
_Sz?^
cV;)
5vy*
jd-&A2%u
NKC:
Xr:p
t3=<=
`95><
,XaF
<oh[Z
k0_c
-Ai#
!+q&
da5E1#
mVQWu
n;|U{xt
0!%f
"XIR
1yjI
{{+]<J
d+ajRI
6,p[DF
v7.7
|	tQ`
O2p[
|#[YY9
!5lQ
0C>K0
1b2m,
wheH
y@%k
~Wvt
:ehd
QfK"K
c2Si
l-:zHwU
1 g<
.2fi
~\@H
N:>}
"2|k
R&:W
AC\;
R[3n
^zzs
WQn/
[YT2
cz\?
!Ol!
;_}G
]NaC
R29y
vzHR
xH~CR
%[LP
V0)L
+8,K
8ENP
MS0H}
Xkj$!Z
K7hM
O+}W
WV;#g
:^YD
tJ=]
qwvX
4U"7
/m@:t6#q
}Wl0}
r$7(t
/Bu;
TITQ
VDqW8
&KCC
.5ZE
l_U6
$RuF
M9q%M
0&0L[
2}UJ
CY+>
HktR0
^9Z1
7\:,
r6?'E
AJ=[c
I"ld
h.l6e
i*Ol^6
B>Vg
"O'vJc
FiTu
#rCAI~
~H[<
zgU32
SS,R9^
%F+c
dYoS
gJPA
QUbM
O\m9
mW8k
IyRZZG0
v}Sl)$
s9zi
yVFU
5o4G
3PbQ]yI
2V#G
r0Bo
Wg|e
Tn]D
4nxQ
-]f+
oa>@
"^'E
'U[O
~|Qjfv&
?5Sx<dUQ
P$6f
j*JP*
?K#'
4H rS	
-a*I
uRxz
KDh?
V[Y}
evM48
{*q=
k(W,
[+$_|
uJpS
QF~c
UR&!
`ctO
VUIG
:}`B
<{1ef8}
Nkm_
zIh 
F&bc
 J{2
/t$?
"E`	*
nZ:s{J<
%i\B
lsHf
A$i5M
d	1x
yElG
$r4/
Y\Og
isj#
Y?XH
di!?
s"ur
x6<Z
8Kz#
~6D7H
D5TP
h Yf$;Z
.jk{
M_#g
8Eg)
imgp
wop7
`_$&T
+,f{3S
y)4]
RaK>Q
UGA@W%
3vi.WR
}*v_
6z^,
:Z"n
GEC:B
j3x4
#fGI
.ph)
Vud`{
wFN/
,Y3%
3zRVb
ZNc_#
yta9
u6OJ
]>!wHO
'"<d
Z4kLsPA,
c,*e
/DC1w
$<=b
_D5/
Q4n<>%
tY<V
]^R5!H
".j RO
 ?-+
pIBB
z?6k!KF
N<s2JJ~
WSvilp
0\+c
A3_1
GQvT
5"sl
g+!O
F`/p~
Qn2H
kTm%
8USo
*Zx5
%Q]Z
:1WQq
V:JqY97Y
<*lH
 ?2I
s/&Q^
8p`ON
~P+g1
m	#.}
#%TL
XWUd
_OH<
tTwq+#
9`Ro
\g$o
i8,[G
uasEfi
O^#m
vQR%B
qYzQ
khN"
,_}E
u1rq
5 %M\H
Hl4TM
k(mN
"~ZaJ
0yWqRb
\m6Hhm
_tM	
"0a[
C6:{
{ Ia!
/ aMG
@JFL
(r-B
4 P<n}
'O;qC
8-th
;;ix
+vze
ILd{y
O3tX
<no#
E"VUa_
#Z'r
?Z2t
4=rw/
?o=jH
4'(MB
i/h)
X/uw:
B(=!
#n:m
EviN
rFK$PE<
=Zv-
Lqk({
x=9lo$
U)o"F
ggB+
2&*o?
,aSv
FiZD
4zGd5}o
ci}&
,aS!\
Kc"fkle
<.j?N
HY~A
@~5S
jlx;$
xsg~
(WKsY
Mh(-ys
q<xB
.lsG
Dg?@T,
vQMwX
[xpKF
h'J5
;@|Ro
"|0mH
ZjaPf
Q,/qrQ%
nc%%
TXW	Pl
&VE^
_$EP
7D"p
[Y*AS#
`L06
j$	@
H[3x
gO]U
slO{
C;BMv6
9U2aZ
-Q&H~
LX)r;?i
]TJ%
:ld-
`s=Y
5+dx
2 F:G%$
pBvR
lP4g
_3o,
sNN'@
Kku~
2#'vcR
	"!!
*S	P
~q[\
-vkP
}z">
f"TFb*eD
kBg 
)y*,
A=n*HPY
BMPQ
xl.d[W
6TwO])
RzaI
*TU#
OYw@
iv,=
BM%Zx
jQ*(
6H<_E8
ZF/9
p}*T
G9FIX
?JF`7
,""If
y6+d
p_m"
mldS
Pq1;
PnT '
]IbB
z'.'
!&yn
'a`M
3E.X
 2z{
PfR!(O
:{kp
M8/l
7/rj
o8_/
0O/I
uMQW
4>vV
.M;j
_PKo
Xz%/:
3h?TJ
rQ;I9Hp
]"y{
W!/9
2i"aJ]Jv
9D$%
BO^f
ronS
X|'^t
7?Gb
(+6T
99_J;
)!bu
R=h] 
O	e'@
;;zU
j.,Xo
LV5W
sYBU0>
]Dp 
+I!K
khmS
./l3
3QEM
J	e[
L*py_
I1h-
Cmkr
}|k]
h}&!
,'sq
17V#
%o )
[@sb
BJ{5x
Vqf	
X%7n
%3	Sm_mB\n
Qh&)`
D}L5
iB2a
62*m
~a,C
3Nt@
BakL`df
Q0"M
/wp+
W^H/=H
0pUX
c;FG
#*-7;
bH<b
j(b`b
'QnO
C@93]
=jEr
,fr5B
s@~2
e[eM
5	FxG#
6cH{S
Td'1
ZRRS
Rgkm
zW>fCz
QGQMG
[4c1
5()_
DSGw h*
63Zt
O+NL
UC'	
 H2/d/
v=;7
J[c7
tHZs
V%=T
zTIx
6}6y
.ex6to
'DLL
+YFD
LOcCK
ZQhg
<f *
#)2F
yAxj
ZwyN
qMey
%pj"
)V#-
QOa<
_{!o+
0P&XQ
ByX$
LR|+
Mdhi
T(V3
GP%X4
XpHF
X'eM
#yc\
C~-M
A,tw[8\
JPd,
'f3HH
f-KK
[m&;
5h,Q
Dl3o
;'p"
SB)8
(~=/
8+G (-
P<lj
=4+u?
<RmS
<&Y^V
9hrq<
G{c1
Xb#*
CyW:
~FQU
m]1rZ 
~v{S
4cwo
	y.!
UDb%%
AwC^
B)5-
 ECK
;]ru
dP*i
y\fu
k9 =
&jYHa
to>g!t
Q)Ab
a$V5!
!zv{a
:|NZ
`Nyy
C\@L
^QFZ
\s#aL
'm8%
i8$"
IneR
1$v}
+O;qO
3wk>
`wl20
A{y361
517(	
'oa%
*\C[
S-{<D8
<+nJ
+`.r;
q'pK
ZZ=0y
KiOy
o-.1n
#l >@
-^g 
!*Si
Wm[H,
fwj4
S$L3
c^Im
w:pL
qFY{
AJUt
lB;L@
{/1o
':!%W1t
W3~N=
@.X!
^z`l[V9
>1y 
8F.B
e\ ?
[:F'
c8DG
3~wGw
M/xN
m`F/
}K6>
uUKd
C.++
N(%b
\N,.
q$@*vO%
Momj,
axP5
BtMg6vl
RCc)i
FD.tT	
1S4UM
K4?"
>De~5]
r~/*8G
o|>=
{`mKb
`0M`jm
)1`NS
FB2!
DmvL&
9ubD
v=?w
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
