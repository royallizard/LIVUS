<%(QrH
@x!PH
t$.D
A1-Z:Q|iuy
tKsq
*8#g
{? E
uz)8
MjvBt
%u+4
"x$Tb
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_ZN10soundtouch8AAFilterD2Ev
_ZN10soundtouch8AAFilterD1Ev
_ZN10soundtouch8AAFilter15calculateCoeffsEv
_Znaj
_ZdaPv
__assert_fail
__cxa_throw_bad_array_new_length
_ZN10soundtouch8AAFilter13setCutoffFreqEd
_ZN10soundtouch8AAFilter9setLengthEj
_ZN10soundtouch8AAFilterC2Ej
_ZN10soundtouch9FIRFilter11newInstanceEv
_ZN10soundtouch8AAFilterC1Ej
_ZNK10soundtouch8AAFilter8evaluateEPfPKfjj
_ZN10soundtouch9FIRFilter8evaluateEPfPKfjj
_ZNK10soundtouch8AAFilter8evaluateERNS_16FIFOSampleBufferES2_
_ZN10soundtouch16FIFOSampleBuffer6ptrEndEj
_ZNK10soundtouch8AAFilter9getLengthEv
_ZNK10soundtouch9FIRFilter9getLengthEv
_ZN10soundtouch9FIRFilterD2Ev
_ZTVN10soundtouch9FIRFilterE
_ZN10soundtouch9FIRFilterD1Ev
_ZN10soundtouch9FIRFilterD0Ev
_ZdlPvj
_ZNK10soundtouch9FIRFilter20evaluateFilterStereoEPfPKfj
_ZNK10soundtouch9FIRFilter18evaluateFilterMonoEPfPKfj
_ZN10soundtouch9FIRFilter19evaluateFilterMultiEPfPKfjj
_ZN10soundtouch9FIRFilter15setCoefficientsEPKfjj
memcpy
__cxa_allocate_exception
_ZNSt13runtime_errorC1EPKc
_ZNSt13runtime_errorD1Ev
_ZTISt13runtime_error
__cxa_throw
__gxx_personality_v0
__cxa_free_exception
_Unwind_Resume
_ZN10soundtouch9FIRFilterC2Ev
_ZN10soundtouch9FIRFilterC1Ev
_ZN10soundtouch9FIRFilternwEj
_Z19detectCPUextensionsv
_Znwj
_ZN10soundtouch12FIRFilterSSEC1Ev
_ZTSN10soundtouch9FIRFilterE
_ZTIN10soundtouch9FIRFilterE
_ZTVN10__cxxabiv117__class_type_infoE
_ZNK10soundtouch16FIFOSampleBuffer10numSamplesEv
_ZN10soundtouch16FIFOSampleBuffer14receiveSamplesEj
_ZNK10soundtouch16FIFOSampleBuffer7isEmptyEv
_ZN10soundtouch16FIFOSampleBuffer5clearEv
_ZN10soundtouch16FIFOSampleBuffer21adjustAmountOfSamplesEj
_ZN10soundtouch16FIFOSampleBufferD2Ev
_ZTVN10soundtouch16FIFOSampleBufferE
_ZN10soundtouch16FIFOSampleBufferD1Ev
_ZN10soundtouch16FIFOSampleBufferD0Ev
_ZN10soundtouch16FIFOSampleBuffer14receiveSamplesEPfj
_ZN10soundtouch16FIFOSampleBuffer8ptrBeginEv
_ZN10soundtouch16FIFOSampleBuffer11setChannelsEi
_ZN10soundtouch16FIFOSampleBuffer6rewindEv
memmove
_ZNK10soundtouch16FIFOSampleBuffer11getCapacityEv
_ZN10soundtouch16FIFOSampleBuffer14ensureCapacityEj
_ZN10soundtouch16FIFOSampleBufferC2Ei
_ZN10soundtouch16FIFOSampleBufferC1Ei
_ZN10soundtouch16FIFOSampleBuffer10putSamplesEj
_ZN10soundtouch16FIFOSampleBuffer10putSamplesEPKfj
_ZTSN10soundtouch14FIFOSamplePipeE
_ZTIN10soundtouch14FIFOSamplePipeE
_ZTSN10soundtouch16FIFOSampleBufferE
_ZTIN10soundtouch16FIFOSampleBufferE
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZN10soundtouch13FIFOProcessor8ptrBeginEv
_ZN10soundtouch13FIFOProcessor14receiveSamplesEPfj
_ZN10soundtouch13FIFOProcessor14receiveSamplesEj
_ZNK10soundtouch13FIFOProcessor10numSamplesEv
_ZN10soundtouch13FIFOProcessor21adjustAmountOfSamplesEj
_ZN10soundtouch14TransposerBase11setChannelsEi
_ZN10soundtouch14TransposerBase7setRateEd
_ZN10soundtouch14TransposerBase9transposeERNS_16FIFOSampleBufferES2_
_ZN10soundtouch14RateTransposer7setRateEd
_ZN10soundtouch14RateTransposer14enableAAFilterEb
_ZNK10soundtouch14RateTransposer17isAAFilterEnabledEv
_ZN10soundtouch14RateTransposer11getAAFilterEv
_ZN10soundtouch14RateTransposer11setChannelsEi
_ZNK10soundtouch14RateTransposer10getLatencyEv
_ZN10soundtouch14TransposerBase12setAlgorithmENS0_9ALGORITHME
_ZN10soundtouch14TransposerBase9algorithmE
_ZN10soundtouch14TransposerBaseC2Ev
_ZTVN10soundtouch14TransposerBaseE
_ZN10soundtouch14TransposerBaseC1Ev
_ZN10soundtouch14TransposerBaseD2Ev
_ZN10soundtouch14TransposerBaseD1Ev
_ZN10soundtouch14TransposerBaseD0Ev
_ZN10soundtouch14TransposerBase11newInstanceEv
_ZN10soundtouch18InterpolateShannonC1Ev
_ZN10soundtouch16InterpolateCubicC1Ev
_ZN10soundtouch22InterpolateLinearFloatC1Ev
_ZN10soundtouch14RateTransposerC2Ev
_ZTVN10soundtouch14RateTransposerE
_ZN10soundtouch14RateTransposerC1Ev
_ZN10soundtouch14RateTransposerD2Ev
_ZN10soundtouch14RateTransposerD1Ev
_ZN10soundtouch14RateTransposerD0Ev
_ZN10soundtouch14RateTransposer14processSamplesEPKfj
_ZN10soundtouch14RateTransposer10putSamplesEPKfj
_ZN10soundtouch14RateTransposer5clearEv
_ZNK10soundtouch14RateTransposer7isEmptyEv
_ZTSN10soundtouch13FIFOProcessorE
_ZTIN10soundtouch13FIFOProcessorE
_ZTSN10soundtouch14TransposerBaseE
_ZTIN10soundtouch14TransposerBaseE
_ZTSN10soundtouch14RateTransposerE
_ZTIN10soundtouch14RateTransposerE
__cxa_pure_virtual
_ZNK10soundtouch13FIFOProcessor7isEmptyEv
_ZN10soundtouch10SoundTouchD2Ev
_ZTVN10soundtouch10SoundTouchE
_ZN10soundtouch10SoundTouchD1Ev
_ZN10soundtouch10SoundTouch5clearEv
_ZNK10soundtouch10SoundTouch21numUnprocessedSamplesEv
_ZN10soundtouch10SoundTouch14receiveSamplesEPfj
_ZN10soundtouch10SoundTouch14receiveSamplesEj
_ZN10soundtouch10SoundTouchD0Ev
_ZN10soundtouch10SoundTouch10putSamplesEPKfj
soundtouch_ac_test
__printf_chk
_ZN10soundtouch10SoundTouch16getVersionStringEv
_ZN10soundtouch10SoundTouch12getVersionIdEv
_ZN10soundtouch10SoundTouch11setChannelsEj
_ZN10soundtouch9TDStretch11setChannelsEi
_ZN10soundtouch10SoundTouch25calcEffectiveRateAndTempoEv
_ZN10soundtouch9TDStretch8setTempoEd
_ZN10soundtouch10SoundTouchC2Ev
_ZN10soundtouch9TDStretch11newInstanceEv
_ZN10soundtouch10SoundTouchC1Ev
_ZN10soundtouch10SoundTouch7setRateEd
_ZN10soundtouch10SoundTouch13setRateChangeEd
_ZN10soundtouch10SoundTouch8setTempoEd
_ZN10soundtouch10SoundTouch14setTempoChangeEd
_ZN10soundtouch10SoundTouch8setPitchEd
_ZN10soundtouch10SoundTouch15setPitchOctavesEd
_ZN10soundtouch10SoundTouch17setPitchSemiTonesEi
_ZN10soundtouch10SoundTouch17setPitchSemiTonesEd
_ZN10soundtouch10SoundTouch13setSampleRateEj
_ZN10soundtouch9TDStretch13setParametersEiiii
_ZN10soundtouch10SoundTouch5flushEv
memset
_ZN10soundtouch9TDStretch10clearInputEv
_ZN10soundtouch10SoundTouch10setSettingEii
_ZNK10soundtouch9TDStretch13getParametersEPiS1_S1_S1_
_ZN10soundtouch9TDStretch15enableQuickSeekEb
_ZNK10soundtouch10SoundTouch10getSettingEi
_ZNK10soundtouch9TDStretch18isQuickSeekEnabledEv
_ZN10soundtouch10SoundTouch25getInputOutputSampleRatioEv
_ZTSN10soundtouch10SoundTouchE
_ZTIN10soundtouch10SoundTouchE
_ZNK10soundtouch9TDStretch11overlapMonoEPfPKf
_ZN10soundtouch9TDStretch19clearCrossCorrStateEv
_ZNK10soundtouch9TDStretch13overlapStereoEPfPKf
_ZNK10soundtouch9TDStretch12overlapMultiEPfPKf
_ZN10soundtouch9TDStretch13calcCrossCorrEPKfS2_Rd
sqrt
_ZN10soundtouch9TDStretch23calcCrossCorrAccumulateEPKfS2_Rd
_ZN10soundtouch9TDStretch23seekBestOverlapPositionEPKf
_ZN10soundtouch9TDStretch28seekBestOverlapPositionQuickEPKf
_ZN10soundtouch9TDStretch27seekBestOverlapPositionFullEPKf
_ZN10soundtouch9TDStretch14clearMidBufferEv
_ZN10soundtouch9TDStretch15adaptNormalizerEv
_ZN10soundtouch9TDStretch17calcSeqParametersEv
_ZN10soundtouch9TDStretch22acceptNewOverlapLengthEi
_ZN10soundtouch9TDStretchnwEj
_ZN10soundtouch9TDStretch22calculateOverlapLengthEi
_ZN10soundtouch9TDStretchD2Ev
_ZTVN10soundtouch9TDStretchE
_ZN10soundtouch9TDStretchD1Ev
_ZN10soundtouch9TDStretchD0Ev
_ZN10soundtouch9TDStretch5clearEv
_ZN10soundtouch9TDStretchC2Ev
_ZN10soundtouch9TDStretchC1Ev
_ZTVN10soundtouch12TDStretchSSEE
_ZN10soundtouch9TDStretch14processSamplesEv
_ZN10soundtouch9TDStretch10putSamplesEPKfj
_ZTSN10soundtouch9TDStretchE
_ZTIN10soundtouch9TDStretchE
_Z17disableExtensionsj
_ZN10soundtouch9BPMDetectD2Ev
_ZTVN10soundtouch9BPMDetectE
_ZdlPv
_ZN10soundtouch9BPMDetectD1Ev
_ZN10soundtouch9BPMDetectD0Ev
_Z7hammingPfi
_ZN10soundtouch11IIR2_filterC2EPKd
_ZN10soundtouch11IIR2_filterC1EPKd
_ZN10soundtouch11IIR2_filter6updateEf
_ZN10soundtouch9BPMDetectC2Eii
_ZN10soundtouch9BPMDetectC1Eii
_ZN10soundtouch9BPMDetect8decimateEPfPKfi
_ZN10soundtouch9BPMDetect11updateXCorrEi
_ZN10soundtouch9BPMDetect10removeBiasEv
_Z8MAFilterPfPKfiii
_ZN10soundtouch9BPMDetect6getBpmEv
_ZN10soundtouch10PeakFinderC1Ev
_ZN10soundtouch10PeakFinder10detectPeakEPKfii
_ZN10soundtouch9BPMDetect8getBeatsEPfS1_i
printf
abort
_ZNSt6vectorIN10soundtouch4BEATESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
_ZN10soundtouch9BPMDetect13updateBeatPosEi
_ZN10soundtouch9BPMDetect12inputSamplesEPKfi
_ZTSN10soundtouch9BPMDetectE
_ZTIN10soundtouch9BPMDetectE
_ZN10soundtouch10PeakFinderC2Ev
_ZNK10soundtouch10PeakFinder7findTopEPKfi
_ZNK10soundtouch10PeakFinder10findGroundEPKfii
_ZNK10soundtouch10PeakFinder17findCrossingLevelEPKffii
_ZNK10soundtouch10PeakFinder14calcMassCenterEPKfii
_ZNK10soundtouch10PeakFinder13getPeakCenterEPKfi
_ZN10soundtouch24InterpolateLinearInteger14resetRegistersEv
_ZN10soundtouch22InterpolateLinearFloat14resetRegistersEv
_ZN10soundtouch22InterpolateLinearFloat14transposeMultiEPfPKfRi
_ZN10soundtouch22InterpolateLinearFloatD2Ev
_ZTVN10soundtouch22InterpolateLinearFloatE
_ZN10soundtouch22InterpolateLinearFloatD1Ev
_ZN10soundtouch24InterpolateLinearIntegerD2Ev
_ZTVN10soundtouch24InterpolateLinearIntegerE
_ZN10soundtouch24InterpolateLinearIntegerD1Ev
_ZN10soundtouch24InterpolateLinearInteger14transposeMultiEPfPKfRi
_ZN10soundtouch22InterpolateLinearFloat15transposeStereoEPfPKfRi
_ZN10soundtouch24InterpolateLinearInteger7setRateEd
_ZN10soundtouch22InterpolateLinearFloatD0Ev
_ZN10soundtouch24InterpolateLinearIntegerD0Ev
_ZN10soundtouch24InterpolateLinearInteger13transposeMonoEPfPKfRi
_ZN10soundtouch24InterpolateLinearInteger15transposeStereoEPfPKfRi
_ZN10soundtouch22InterpolateLinearFloat13transposeMonoEPfPKfRi
_ZN10soundtouch24InterpolateLinearIntegerC2Ev
_ZN10soundtouch24InterpolateLinearIntegerC1Ev
_ZN10soundtouch22InterpolateLinearFloatC2Ev
_ZTSN10soundtouch24InterpolateLinearIntegerE
_ZTIN10soundtouch24InterpolateLinearIntegerE
_ZTSN10soundtouch22InterpolateLinearFloatE
_ZTIN10soundtouch22InterpolateLinearFloatE
_ZN10soundtouch16InterpolateCubic14resetRegistersEv
_ZN10soundtouch16InterpolateCubic13transposeMonoEPfPKfRi
_ZN10soundtouch16InterpolateCubic15transposeStereoEPfPKfRi
_ZN10soundtouch16InterpolateCubic14transposeMultiEPfPKfRi
_ZN10soundtouch16InterpolateCubicD2Ev
_ZTVN10soundtouch16InterpolateCubicE
_ZN10soundtouch16InterpolateCubicD1Ev
_ZN10soundtouch16InterpolateCubicD0Ev
_ZN10soundtouch16InterpolateCubicC2Ev
_ZTSN10soundtouch16InterpolateCubicE
_ZTIN10soundtouch16InterpolateCubicE
_ZN10soundtouch18InterpolateShannon14resetRegistersEv
_ZN10soundtouch18InterpolateShannon14transposeMultiEPfPKfRi
_ZN10soundtouch18InterpolateShannon13transposeMonoEPfPKfRi
_ZN10soundtouch18InterpolateShannon15transposeStereoEPfPKfRi
_ZN10soundtouch18InterpolateShannonD2Ev
_ZTVN10soundtouch18InterpolateShannonE
_ZN10soundtouch18InterpolateShannonD1Ev
_ZN10soundtouch18InterpolateShannonD0Ev
_ZN10soundtouch18InterpolateShannonC2Ev
_ZTSN10soundtouch18InterpolateShannonE
_ZTIN10soundtouch18InterpolateShannonE
_dontcomplain_mmx_empty
_ZN10soundtouch12TDStretchSSE23calcCrossCorrAccumulateEPKfS2_Rd
_ZN10soundtouch12FIRFilterSSED2Ev
_ZTVN10soundtouch12FIRFilterSSEE
_ZN10soundtouch12FIRFilterSSED1Ev
_ZN10soundtouch12FIRFilterSSED0Ev
_ZNK10soundtouch12FIRFilterSSE20evaluateFilterStereoEPfPKfj
_ZN10soundtouch12TDStretchSSED2Ev
_ZN10soundtouch12TDStretchSSED1Ev
_ZN10soundtouch12TDStretchSSED0Ev
_ZN10soundtouch12TDStretchSSE13calcCrossCorrEPKfS2_Rd
_ZN10soundtouch12FIRFilterSSEC2Ev
_ZN10soundtouch12FIRFilterSSE15setCoefficientsEPKfjj
_ZTSN10soundtouch12TDStretchSSEE
_ZTIN10soundtouch12TDStretchSSEE
_ZTSN10soundtouch12FIRFilterSSEE
_ZTIN10soundtouch12FIRFilterSSEE
libstdc++.so.6
libm.so.6
libc.so.6
__stack_chk_fail
libgcc_s.so.1
libSoundTouch.so.2
GCC_3.0
GLIBC_2.0
CXXABI_1.3.8
CXXABI_1.3.9
CXXABI_1.3
GLIBCXX_3.4.21
GLIBCXX_3.4
GLIBC_2.4
GLIBC_2.1.3
GLIBC_2.3.4
Qj W
UWVS
YD$H
YD$H
XD$P
\D$@
|$pWP
[^_]
t$,V
UWVS
XZUW
,[^_]
\$L)
,[^_]
L$@f
\$L)
,[^_]
t$8f
9D$ 
D$,u*
[^_]
[^_]
[^_]
[^_]
UWVS
T$@9~
,[^_]
[^_]
UWVS
|$@V
[^_]
[^_]
UWVS
t$,P
[^_]
UWVS
D$(1
t$ V
,[^_]
G,Y[V
XZVW
[^_]
[^_]
[^_]
[^_]
N,XZj
ZYj@P
[^_]
XZjhV
UWVS
[^_]
[^_]
,[^_]
[^_]
XZjLV
C,s]9C
0RQP
[^_]
0RQP
[^_]
Y[^_]
Y[^_]
[^_]
*D$0
UWVS
,[^_]
D$(1
t$@P
D$$P
D$$P
D$$P
 [^_
t$@P
D$,Pj
D$(Pj
D$$Pj
9<$u
[^_]
D$$f
T$(f
D$,f
D$,f
UWVS
[^_]
D$<1
XL$0
D$0P
XL$0
D$(9C
D$0P
XL$(
|$<e3=
L[^_]
|$,e
D$<1
u\SU
XD$ 
t$<e35
D$(u,
L[^_]
UWVS
[^_]
[^_]
wN9F
[^_]
[^_]
[^_]
[^_]
XGHf
GPZYP
ZYPW
Y[^_]
UWVS
YD$0
^D$ 
YD$(
<[^_]
F,jdP
[^_]
UWVS
L$81
\$4f
9t$<u
[^_]
[^_]
Y[^_]
[^_]
UWVS
D$@9
\$0)
L$4f
[^_]
UWVS
D$(1
t$LU
v$WU
$w1f
,[^_]
UWVS
[^_]
UWVS
N89l$
D$ U
YL$(f
YD$ 
D$4;FTt
t$0P
[^_]
UWVS
XZjdV
FHY]
[^_]
UWVS
+T$4
9t$4
9T$4
t$<Q
[^_]
$9D$4u
M29z
WVS1
[^_]
UWVS
l$0j
D$$VU
PRVU
[^_]
[^_]
|$Hf
XD$(
/D$@wO
YD$H
T$(f
\[^_]
UWVS
[^_]
UWVS
,[^_]
UWVS
D$01
[^_]
t$,R
UWVS
[^_]
UWVS
[^_]
UWVS
D$01
[^_]
[^_]
[^_]
UWVS
D$Pf
D$P1
XT$ 
<[^_]
UWVS
D$Pf
D$P1
X\$ 
<[^_]
UWVS
t$`f
XT$,
$9\$ ~Xf
L[^_]
t$,V
Y[^_]
ZW8f
Y[^_]
t$,V
XZj V
Y[^_]
Y[^_]
UWVS
t$<UVW
[^_]
AAFilter.cpp
length >= 2
length % 4 == 0
cutoffFreq >= 0
cutoffFreq <= 0.5
sum > 0
work[length/2] > 0
work[length/2 + 1] > -1e-6
work[length/2 - 1] > -1e-6
temp >= -32768 && temp <= 32767
numChannels == dest.getChannels()
uint soundtouch::AAFilter::evaluate(soundtouch::FIFOSampleBuffer&, soundtouch::FIFOSampleBuffer&) const
void soundtouch::AAFilter::calculateCoeffs()
@FIRFilter.cpp
length != 0
src != NULL
dest != NULL
filterCoeffs != NULL
numChannels < 16
newLength > 0
length == newLength
length > 0
lengthDiv8 * 8 == length
numChannels > 0
FIR filter length not divisible by 8
Error in FIRFilter::new: Don't use 'new FIRFilter', use 'newInstance' member instead!
uint soundtouch::FIRFilter::evaluate(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, uint, uint)
virtual void soundtouch::FIRFilter::setCoefficients(const SAMPLETYPE*, uint, uint)
virtual uint soundtouch::FIRFilter::evaluateFilterMulti(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, uint, uint)
virtual uint soundtouch::FIRFilter::evaluateFilterMono(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, uint) const
virtual uint soundtouch::FIRFilter::evaluateFilterStereo(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, uint) const
N10soundtouch9FIRFilterE
FIFOSampleBuffer.cpp
buffer
Error: Illegal number of channels
virtual soundtouch::SAMPLETYPE* soundtouch::FIFOSampleBuffer::ptrBegin()
soundtouch::FIFOSampleBuffer::FIFOSampleBuffer(int)
N10soundtouch14FIFOSamplePipeE
N10soundtouch16FIFOSampleBufferE
RateTransposer.cpp
false
pAAFilter
static soundtouch::TransposerBase* soundtouch::TransposerBase::newInstance()
virtual int soundtouch::TransposerBase::transpose(soundtouch::FIFOSampleBuffer&, soundtouch::FIFOSampleBuffer&)
void soundtouch::RateTransposer::processSamples(const SAMPLETYPE*, uint)
N10soundtouch13FIFOProcessorE
N10soundtouch14TransposerBaseE
N10soundtouch14RateTransposerE
SoundTouch : Sample rate not defined
SoundTouch : Number of channels not defined
../../include/FIFOSamplePipe.h
SoundTouch.cpp
output == pTDStretch
output == pRateTransposer
SoundTouch Version: %s
output == NULL
pOutput != NULL
virtual void soundtouch::SoundTouch::putSamples(const SAMPLETYPE*, uint)
void soundtouch::SoundTouch::calcEffectiveRateAndTempo()
void soundtouch::FIFOProcessor::setOutPipe(soundtouch::FIFOSamplePipe*)
N10soundtouch10SoundTouchE
TDStretch.cpp
newOverlapLength >= 0
overlapInMsec >= 0
Error: Excessive samplerate
channels > 0
nominalSkip >= -skipFract
Error in TDStretch::new: Don't use 'new TDStretch' directly, use 'newInstance' member instead!
(offset + temp + overlapLength) <= (int)inputBuffer.numSamples()
void soundtouch::TDStretch::calculateOverlapLength(int)
void soundtouch::TDStretch::acceptNewOverlapLength(int)
void soundtouch::TDStretch::overlap(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, uint) const
void soundtouch::TDStretch::processSamples()
N10soundtouch9TDStretchE
Gfff?
BPMDetect.cpp
decimateBy > 0
windowLen > windowStart
decimateBy != 0
INPUT_BLOCK_SIZE < decimateBy * DECIMATED_BLOCK_SIZE
buffer->numSamples() >= (uint)(process_samples + windowLen)
process_samples == XCORR_UPDATE_SEQUENCE
__builtin_expect(__n < this->size(), true)
/usr/include/c++/8/bits/stl_vector.h
%s:%d: %s: Assertion '%s' failed.
process_samples == XCORR_UPDATE_SEQUENCE / 2
std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = soundtouch::BEAT; _Alloc = std::allocator<soundtouch::BEAT>; std::vector<_Tp, _Alloc>::reference = soundtouch::BEAT&; std::vector<_Tp, _Alloc>::size_type = unsigned int]
float soundtouch::BPMDetect::getBpm()
void soundtouch::BPMDetect::updateBeatPos(int)
void soundtouch::BPMDetect::updateXCorr(int)
int soundtouch::BPMDetect::decimate(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, int)
soundtouch::BPMDetect::BPMDetect(int, int)
N10soundtouch9BPMDetectE
>CPeakFinder.cpp
peaklevel >= level
gp1 == peakpos
double soundtouch::PeakFinder::getPeakCenter(const float*, int) const
int soundtouch::PeakFinder::findCrossingLevel(const float*, float, int, int) const
>333?InterpolateLinear.cpp
iFract < SCALE
fract < 1.0
virtual int soundtouch::InterpolateLinearFloat::transposeStereo(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, int&)
virtual int soundtouch::InterpolateLinearFloat::transposeMono(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, int&)
virtual int soundtouch::InterpolateLinearInteger::transposeMulti(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, int&)
virtual int soundtouch::InterpolateLinearInteger::transposeStereo(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, int&)
virtual int soundtouch::InterpolateLinearInteger::transposeMono(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, int&)
N10soundtouch24InterpolateLinearIntegerE
N10soundtouch22InterpolateLinearFloatE
@InterpolateCubic.cpp
virtual int soundtouch::InterpolateCubic::transposeMulti(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, int&)
virtual int soundtouch::InterpolateCubic::transposeStereo(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, int&)
virtual int soundtouch::InterpolateCubic::transposeMono(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, int&)
N10soundtouch16InterpolateCubicE
InterpolateShannon.cpp
virtual int soundtouch::InterpolateShannon::transposeMulti(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, int&)
virtual int soundtouch::InterpolateShannon::transposeStereo(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, int&)
virtual int soundtouch::InterpolateShannon::transposeMono(soundtouch::SAMPLETYPE*, const SAMPLETYPE*, int&)
N10soundtouch18InterpolateShannonE
!	@V
>sse_optimized.cpp
source != NULL
(length % 8) == 0
filterCoeffsAlign != NULL
(overlapLength % 8) == 0
((ulongptr)filterCoeffsAlign) % 16 == 0
virtual uint soundtouch::FIRFilterSSE::evaluateFilterStereo(float*, const float*, uint) const
virtual double soundtouch::TDStretchSSE::calcCrossCorr(const float*, const float*, double&)
N10soundtouch12TDStretchSSEE
N10soundtouch12FIRFilterSSEE
9*2$"
zPLR
zPLR
h. O.
gcc 8.2.1 20180801
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.2.1 20180801
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.2.1 20180801
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.2.1 20180801
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.2.1 20180801
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.2.1 20180801
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.2.1 20180801
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.2.1 20180801
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.2.1 20180801
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.2.1 20180801
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.2.1 20180801
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.2.1 20180801
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.2.1 20180801
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.2.1 20180801
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.2.1 20180801
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+stack_realign
libSoundTouch.so.2.1.0-2.1.0-1.fc29.i386.debug
.data
.rodata
.shstrtab
.plt.sec
.dynamic
.note.gnu.build-id
.gcc_except_table
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rel.dyn
.data.rel.ro
.gnu.version_r
.eh_frame_hdr
.dynstr
.gnu.build.attributes
.bss
.init
.rel.plt
.got
.text
.fini_array
.init_array
.note.gnu.property
