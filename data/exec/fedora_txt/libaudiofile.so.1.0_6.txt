%^[e
NO#vS
1w*x;uE
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
AUpvgetparam
AUpvgetvaltype
AUpvgetval
__stack_chk_fail
_ZdlPvm
afGetLoopMode
afGetLoopStart
afGetLoopEnd
afGetInstParamLong
AUpvnew
AUpvsetparam
AUpvsetvaltype
AUpvsetval
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
strlen
strrchr
strncpy
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm
_Znwm
memcpy
_ZSt20__throw_length_errorPKc
__sprintf_chk
_ZSt19__throw_logic_errorPKc
memset
FLAC__stream_decoder_new
FLAC__stream_decoder_init_stream
FLAC__stream_decoder_process_until_end_of_metadata
FLAC__stream_decoder_get_decode_position
FLAC__stream_decoder_delete
close
read
lseek
af_virtual_file_destroy
open
__cxa_pure_virtual
_ZdaPvm
_Znam
memcmp
afInitInstIDs
afGetInstIDs
AUpvgetmaxitems
afSetInstParams
afSetInstParamLong
AUpvfree
afGetInstParams
afInitLoopIDs
afGetLoopIDs
afSetLoopMode
afSetLoopCount
afGetLoopCount
afSetLoopStart
afSetLoopStartFrame
afSetMarkPosition
afGetLoopStartFrame
afGetMarkPosition
afSetLoopTrack
afGetLoopTrack
afSetLoopEnd
afSetLoopEndFrame
afGetLoopEndFrame
afInitMarkIDs
afInitMarkName
afInitMarkComment
strcpy
afGetMarkName
afGetMarkComment
afGetMarkIDs
afInitMiscIDs
afGetMiscIDs
afInitMiscType
afGetMiscType
afInitMiscSize
afGetMiscSize
afWriteMisc
afReadMisc
afSeekMisc
__snprintf_chk
strstr
sscanf
printf
abort
_ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_
memmove
afNewFileSetup
afFreeFileSetup
afInitFileFormat
afInitChannels
afInitSampleFormat
afInitByteOrder
afInitRate
afInitDataOffset
afInitFrameCount
afInitTrackIDs
afGetTrackIDs
stderr
__fprintf_chk
afInitAESChannelData
afInitAESChannelDataTo
afGetAESChannelData
afSetAESChannelData
af_virtual_file_new
calloc
malloc
afGetCompression
afInitCompression
afWriteFrames
afReadFrames
__printf_chk
putchar
stdout
_IO_putc
fwrite
fputs
afSetErrorHandler
__vsnprintf_chk
frexp
ldexp
afGetDataOffset
afGetTrackBytes
afGetFrameSize
afGetVirtualFrameSize
afSeekFrame
afTellFrame
afSetVirtualByteOrder
afGetByteOrder
afGetVirtualByteOrder
afGetFrameCount
afGetRate
afGetChannels
afGetSampleFormat
afGetVirtualSampleFormat
afSetVirtualSampleFormat
afGetFileFormat
afSetVirtualChannels
afSetChannelMatrix
afGetVirtualChannels
strdup
afIdentifyFD
afIdentifyNamedFD
afOpenFD
afOpenNamedFD
afOpenFile
afOpenVirtualFile
afSyncFile
afCloseFile
afInitPCMMapping
afSetVirtualPCMMapping
afSetTrackPCMMapping
afGetPCMMapping
afGetVirtualPCMMapping
afQuery
afQueryLong
afQueryDouble
afQueryPointer
realloc
FLAC__stream_encoder_delete
_ZdaPv
FLAC__stream_decoder_seek_absolute
FLAC__stream_encoder_finish
FLAC__stream_decoder_process_single
FLAC__stream_decoder_get_state
FLAC__stream_encoder_new
FLAC__stream_encoder_set_channels
FLAC__stream_encoder_set_sample_rate
FLAC__stream_encoder_set_bits_per_sample
FLAC__stream_encoder_init_stream
FLAC__stream_encoder_process_interleaved
_ZNSt6vectorIPiSaIS0_EE17_M_default_appendEm
__errno_location
strerror
__cxa_throw_bad_array_new_length
llrint
libFLAC.so.8
libstdc++.so.6
libm.so.6
libc.so.6
libgcc_s.so.1
_edata
__bss_start
_end
libaudiofile.so.1
GCC_3.0
GLIBC_2.2.5
CXXABI_1.3
CXXABI_1.3.8
CXXABI_1.3.9
GLIBCXX_3.4
GLIBC_2.4
GLIBC_2.14
GLIBC_2.3.4
%zi#
%ri#
%ji#
%bi#
%Zi#
%Ri#
%Ji#
%Bi#
%:i#
%2i#
%*i#
%"i#
%zh#
%rh#
%jh#
%bh#
%Zh#
%Rh#
%Jh#
%Bh#
%:h#
%2h#
%*h#
%"h#
%zg#
%rg#
%jg#
%bg#
%Zg#
%Rg#
%Jg#
%Bg#
%:g#
%2g#
%*g#
%"g#
|$ H
|$ H
|$@H
=	`#
u+UH
=R\#
ATE1
 []A\
GHHc
NAMEtG
AUTHt:
(c) t-
ANNOt 
APPLt
MIDI
HcSHH
HcCHH
t$	H
T$	H
AVAUATUSH
D$(1
t$ I
|$ A
L$(dH3
8[]A\A]A^A_
|$"H
t$"H
L$$H
D$ 9
[]A\
<$FORMu
<$AIFF
<$FORMu
<$AIFC
ATUS
wNH9
[]A\
[]A\
D$(1
D$"H
L$(dH3
AWAVAUATUSH
D$(1
t$ H
l$$L
D$ APPLL
T$(dH3
8[]A\A]A^A_
D$ ANNO
D$ NAME
D$ MIDI
D$ AUTH
D$ (c) 
k@@"H
[]A\
twos
NONE
in24
in32
ACE2
ACE8
MAC3
MAC6
ulaw
ULAW
alaw
ALAW
fl32
FL32
fl64tk
FL64
sowt
ima4
HcC@H
HcC@H
T$1H
t$1H
AVAUATUH
D$(1
FORM
AIFFt
AIFC
l$ H
=FVER
=INST
=MARK
=AESD
=AUTH
=NAME
=(c) 
=ANNO
=APPL
=MIDI
T$ L
D$ H
=COMM
T$ L
L$(dH3
8[]A\A]A^A_
T$ L
T$ L
T$ L
=SSND
T$ L
[]A\
P H9
ATUSH
[]A\
t$ H
t$ H
ima4
D$0ion
)D$ 
ulawf
)D$ 
not comp
NONEH
D$(ressf
fl32
D$0Poin
)D$ f
alawf
)D$ 
fl64
D$0Poin
)D$ f
AVAUATUSH
D$(1
MARKL
D$ H
tjf.
D$ H
T$(dH3
8[]A\A]A^A_
2BIT
t$(H
t$ H
t$$H
[]A\
ATUSH
L$(H
L$(H
t$ H
t$$H
)D$0H
L$HH
)D$P
)D$`
)D$p
[]A\
2BIT
HcA8H
$dbl 
\$0H
littf
[]A\A]A^
(big H
compressH
ion:
,0I9
$flt 
AWAVM
AUATI
<$L;+
u(M9
([]A\A]A^A_
[]A\
caffu
ATUH
ug[H
ATUH
[]A\
P8H)
AUATI
mpL9
([]A\A]
D$81
desc
D$( 
lpcm
L$$=
alac
alaw
t$(H
t$0H
t$ H
t$$H
L$8dH3
@[]A\
ulaw
ima4
dataH
tVE1
 []A\
kukiH
SpH9B
k@@"H
D$H1
=lpcm
=ulaw
=alaw
=ima4
=alac
L$HdH3
l$CH
D$CH
T$ 1
|$ H
AVAUATUSH
t$pL9
\$pH
D$pH
$tGH
 []A\A]A^
$caff
AWAVAUATUSH
D$(1
t$ L
T$(dH3
8[]A\A]A^A_
</H)
T$ H
AVAUATUH
D$H1
D$ L
D$0L
=desc
=pakt
=kuki
=data
D$CH
L$ H
|$ H;<$t
=desctM=data
L$HdH3
X[]A\A]A^A_
ATUSH
D$(1
C H+C
H9S 
pakt
|$(dH3<%(
8[]A\A]
t$ L
P H9
P(H9
P(I+
[]A\
fLaC
ATUSH
[]A\
AVAUATUSH
tJHiu
H9k0u
t~HcC(H
L;t$
L;t$
D9c8
9kHH
[]A\A]A^A_
[]A\A]A^A_
\$0H
[]A\
G0;0t]
t.H9
G@;0tMH
t,H9
GP;0tM
t,H9
AWAVAUATUSH
E,E1
E9e,
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AVAUI
ATUSH
E8E1
E9e8
E9e8
[]A\A]A^A_
[]A\A]A^A_
<$FORMu
<$8SVX
GHHc
NAMEt-
AUTHt 
(c) t
ANNO
HcSHH
HcCHH
[]A\
ATUH
FORM
8SVX
=BODY
=AUTH
=NAME@
=(c) @
=ANNOu
=VHDR
([]A\A]
AWAVAUATUH
ANNO
D9eH~}L
NAME
(c) 
D9eH
([]A\A]A^A_
AUTH
tWD;%
D;%w
D;%f
D9%I
 []A\
ATUSH
[]A\
ATUH
[]A\
[]A\
P`;2tIH
AWAVAUA
([]A\A]A^A_
@0H9
HcC(LcD$
[]A\A]
AWAVE
D$(1
D$(dH3
8[]A\A]A^A_
D$$1
T$$H
HcE(H
[]A\A]
;0tMH
t,H9
[]A\A]
[]A\A]
[]A\A]
AUATA
[]A\A]A^A_
T$xJ
T$xH
A9\$t
t$tI
D$xE
D$xH
\$xH
[]A\A]A^A_
AWAVAUA
[]A\A]A^A_
px;.tF
]A\A]A^A_
[]A\A]A^A_
AVAUA
[]A\A]A^
px;.
A]A^
[]A\A]A^
[]A\A]
[]A\A]
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
t3HcE
[]A\A]
t3HcU
~/Hcp
[]A\A]
[]A\
[]A\A]A^
[]A\A]
AUATUSH
l$`H
   1024
H3T$hH
NIST_1A
H3D$`H	
HcC@
HcD$
[]A\A]A^
   1024
H3T$
NIST_1A
AVAUATI
K@AWH
T$ R
P H=
[]A\A]A^A_
t.H9
HcC@H
.snd
ATUH
O L)
w H;w(t
AVAUATI
([]A\A]A^A_
ATUSH
[]A\
[]A\
D$x1
l$0H
        
D$ H
)D$0
)D$@
)D$Pf
D$(    H
D$h    H
L$xdH3
ATUH
AWAVAUATU
([]A\A]A^A_
AUATUH
([]A\A]
HcSHH
[]A\
l$ H
t$	H
[]A\
AWAVAUATA
D$(1
|$ H
t$$L
T$(dH3
8[]A\A]A^A_
AVAUI
        ATI
 []A\A]A^
t$	H
D$	<
s`dH
AWAVAUATUSH
D;d$
Hc{l
t_E1
t:D9{l
[]A\A]A^A_
AUATUSH
[]A\A]
]A\A]
Hc{(H
AUHc
D xH
[]A\A]
wKHc
AWAVAUATUH
oS H
Hcxt
]xE1
D xJ
"D9xt
([]A\A]A^A_
HcQtH
;0t]H
t.H9
[]A\
[]A\
[]A\A]
[]A\A]
[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
G ;0tMH
t,H9
G0;0tMH
t,H9
ATUSH
~\E1
[]A\
[]A\
t0L9
AWAVI
AUATI
[]A\A]A^A_
[]A\A]A^A_
dH3<%(
[A\A^]
AVAUATUH
D$X1
t$DH
t$FH
t$HH
D$LE1
D$PH
D$BH
D$0H
D$CH
D$8H
D$JH
P0L9l$
t$TH
t$TH
t$(H
D$JA
t$')
t$0H
t$8H
t$(H
t$TH
D$PI
D$CH
D$Jf
T$`I
L$XdH3
h[]A\A]A^A_
v!f=
 Voice FH3T$
CreativeH3
ATUSH
t$	H
 []A\
ATE1
 []A\
ISFT
INAM
IART
ICMT
ICOP
ICRD
AWAVAUATUSH
WHdH
9kH~|I
P09kH
([]A\A]A^A_
[]A\
AVAUATUSH
 []A\A]A^
AVAUATUH
D$X1
t$<I
|$<A
T$XdH3
h[]A\A]A^A_
L$DH
T$LE1
L$HL
|$@H
L$PL
T$TH
L$ H
t$ H
t$(H
D$@L
D$TH
D9t$<
AVAUATU
D$81
t$,L
L$4H
P8H9
D$,=notetY=labltRH
P8H9
L$8dH3
H[]A\A]A^A_
D$0D
t$4H
lablta
notet9L
AWAVAUATU
P8I9
$=IART
=INAM
=ICOP
=ICMT
=ICRD
=ISFT
P8I9
[]A\A]A^A_
sHHc
HcSHH
ATUH
=adtltL=INFOt5H
[]A\
<$RIFFu
<$WAVE
ATUH
[]A\
[]A\
[]A\
[]A\
D$81
D$42
D$"f
|$$H
t$4H
t$ H
t$,H
D$0H
t$0H
t$"H
t$$H
L$8dH3
@[]A\
t$*H
t$(H
t$*H
D$"fD
D$"fD
t$&H
t$(H
t$*H
[]A\
AVAUATUSH
D$h1
t$<H
D$<cue 
t$@H
t$DH
D$PE1
d$TH
D$(H
D$XH
D$\H
D$`H
D$dH
D$ f
t$(H
D$Xdata
t$ H
|$HM9
t$LH
D$LLIST
t$HH
t$(H
D$Padtl
D$XE1
d$TH
D$\H
D$`H
D$dH
D$ f.
D$\lablH
t$ H
D$dnoteH
L$hdH3
x[]A\A]A^A_
AUATUSH
D$h1
L$hdH3
p[]A\A]A^
t$ H
t$(H
D$(H
L$ f9
t$(H
|$(@
t$(H
T$ 1
l$@H
T$@1
|$@H
AWAVAUATUH
D$81
t$ H
t$(H
t$$H
d$,L
l$0H
T$0=inst
=fact
T$0=cue 
=list
=LIST
=INST
=plst
P09\$(
D$,=fmt t;=data
T$0L
T$0E
T$0L
T$0A
L$8dH3
H[]A\A]A^A_
ATUH
D$81
\$HH
D$8dH3
H[]A\A]
[]A\
@n[]A\
[]A\
[]A\
[]A\A]
[]A\A]
]A\A]
ATUS
txLc
[]A\
[]A\
u?SH
9>t,
[]A\
XD[]A\
AWAVI
AUATI
D$(1
 L;`
8L9x
d$ I
T$ Lc
H;\$
T$ u
t$(dH34%(
8[]A\A]A^A_
P0H9
T$ A
AWAVLc
AUATU
D$81
|$(H
D$(I
\$0I
l$0I
tQI9
uGHcD$
H9\$
|$(H
l$0E
|$(H
T$8dH3
H[]A\A]A^A_
P0I9
Hc\$
l$0H
|$(H
\$0I
ATUSH
[]A\A]
AVAUATUH
D9l$
[]A\A]A^A_
\$01
A9l$,
[]A\A]
AVAUI
D$x1
)D$ D)
)D$0H
)D$@
)D$P
)D$`
D$ |
D$xdH3
[]A\A]A^A_
l$ I
z`u^1
[]A\
ATUSH
[]A\
xh[@
xGI9
[]A\
[]A\
[]A\A]
[]A\A]
[]A\A]
[]A\A]
[]A\A]
[]A\
[]A\
c@Ic
[]A\
AWAVAUATI
[]A\A]A^A_
[]A\A]A^A_
AUATM
T$0H
L$8dH
L$H1
t$DL
L$$H
|$0A
D$ A
\$(I
D$,E1
E9t$,
\$0L
L$HdH3
X[]A\A]A^A_
D$8L
D$0H
[]A\
rteA
[]A\
rt`A
[]A\A]
ATUSH
rtxA
wuxH
[]A\A]
ATUH
rtlA
[]A\
ATUH
E,E1
D9e,~NIi
P([]
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
Hcx<H
Hcx8H
Hcx@H
ATUS
@[]H
@[]H
[]A\
A\Hcx\
HcxX
w'Hc
HcxT
uLHc
HcxP
tIHcx(H
t)Hcx,H
ATUH
[]A\
[]A\
ATUH
D9,$t
[]A\A]A^
ATUH
D9,$t
[]A\A]A^
ATUH
D9,$t
[]A\A]A^
ZH H
G0H+
G0HcwxH
AUATUH
D$(1
C HcUxH)
D$(dH3
8[]A\A]
cala
tM~;
D$h1
mcpl
D$ H
|$@A
D$0H
L$(H
t$XA
HcT$
Hct$
C0u<H
D$hdH3
D$81
D$8dH3
[]A\
[]A\
ATUH
gHdH
([]A\A]A^A_
ATUH
gHdH
([]A\A]A^A_
G0HcwHI
G0H+
O0HcwHH
HcWDH
AVAUI
ATUSH
HcOHL
GDHc
EHE1
IcUHA
[]A\A]A^
AWAVI
AUATUSH
PxD9
IcNDH
IcvHI
[]A\A]A^A_
[]A\A]A^A_
MXH9
AUATUSH
[]A\A]
,@E1
gPL;gX
OXL)
OlHc
AUE1
ATUH
]h+]lD9
[]A\A]
X[]A\A]
[]A\A]
G0USD
G0AUATUSD
[]A\A]
AVATSH
Icp@H)
SPE1
H9SXu*
[A\A^]
[A\A^]
[]A\A]
AUATUH
H;KXtrE1
[]A\A]
AWAVAUATI
[]A\A]A^A_
[]A\A]A^
ATUH
[]A\
[]A\
Hc@PH
AWAVAUATI
HcHPL
D$0H
D$0H
[]A\A]A^A_
AWAVAUATUSH
HchPH
[]A\A]A^A_
[]A\
[]A\A]
[]A\A]
Lcc@I9
[]A\
AWAVAUATUSH
HcT$
4CfA
H;t$
H9D$
[]A\A]
A^A_
AWAVAUATUSH
HcD$
L;L$
H9D$
[]A\A]
A^A_
AWAVAUATUSH
HcT$
PpIcB
L;\$
H9D$
[]A\
@DA]A^A_
AWAVAUATUSH
Hct$
H9D$
[]A\
@DA]A^A_
HcCHI
[]A\A]A^
HcCHI
[]A\A]A^
`0f.
`Hf.
t_SH
tMv#
ATUSH
k(I9
[]A\A]
[]A\A]
AWAVAUI
ATUH
zDdH
P0H9
T$@I
}HH9
tdE1
D$1H
}PH9
([]A\A]A^A_
T$HI
}HH9
@`H9
P8H9]
P@H9]
[]A\
PPH9]
t#H;]
PXH9]
[]A\
AVAUATUH
D$(1
tXE1
Y^H)
U(H9U0
<$L9
D$(dH3
8[]A\A]A^A_
AUATUSH
H;w 
D$0I;D$(
D$0I;D$(
|$(L
[]A\A]
tXAUI
l$(L
\$,I
[]A\A]
[]A\A]
[]A\A]A^A_
tXAUI
l$(L
\$,I
[]A\A]
AWAVAUATUH
)l$@
)t$P
)|$`
)T$p
D$@H
|$8M
C0H9C(
o\$@f
od$Pf
ol$`f
ot$pH
PhH9
C0H;C(
tQIc
L$pf
D$Xf
z#u!
.T$`z
D$`f
D$x9
L$xD
D$hD
t$&H
[]A\A]A^A_
od$XE
ol$hI
D$Xf
T$`f
9D$x
)|$@
)\$P
)d$`
)|$p
D$x9
oT$X
od$hI
T$0A
d$@A
\$PA
o|$XH
oT$h
T$@A
l$PA
|$`A
AVAUATUH
^BhdH
D$H1
D$ A
S(H9
|$8H
D$@H
t/L9
<2I9
d$@M
d$8M
$tYH
K(H9
T$8H
|$@H
D$(H
t5L9
<2H;D$
t$@M
t$8M
S(D9
*D$ 
L$HdH3
X[]A\A]A^A_
S(A9
D$ f
4HH9
4HH9
HcNPH
4HH9
4HH9
4HH9
HcNPH
f9<P
HcHPH
w(tN
4HH9
4HH9
AUATUH
([]A\A]A^A_
AWAVAUATUH
([]A\A]A^A_
AVAUATUSH
W0dH
D$H1
d$0A
L;|$
T$HdH3
X[]A\A]A^A_
t$4A
t$0L
t$:H
L$8f
D$0D
D$4D
D$8D
D$:D
L$8H
G0LcP@E
WhAWAVAUI
ATUSK
L9\$
L9l$
[]A\A]A^A_
ATUSH
G0Hcx@
L;l$
[]A\A]A^A_
Lc`@H
[]A\
 []A\
HcCHI
[]A\A]A^
[]A\A]A^
HcCHI
[]A\A]A^
[]A\A]A^
W0HcGDH
ATU1
HcWDL
HcKDH
[]A\
C0HcSHH
C0HcSLH
ATUSH
4*H)
HcSDH
x[HcKDH
[]A\
[]A\
[]A\
[]A\A]
[]A\A]
s8Hc
AWAVAUATUSH
S,Hc
C0E)
]A\A]A^A_
[]A\A]A^A_
AVAUATUH
Hcu0H
}8Hc
m@[]A\A]A^
+u@E
Hcs@H
sHHc
HcG0H
HcG0H
{,Hc
{,Hc
C8Hc
c@Hc
C8[]A\A]A^
[]A\A]A^
AWAVHc
AUATH
o0E1
[]A\A]A^A_
o0E1
[]A\A]A^A_
~hE1
D9O0
[]A\A]A^A_
o0E1
[]A\A]A^A_
D9O0
[]A\A]A^A_
m0Hc
~(Hc
[]A\A]A^A_
U0Hc
[]A\A]A^A_
[]A\A]A^A_
AWAVAUA
ATUSH
D$ D
t$,D
w	D9
 ~LA
 tcL
#D$(
D$ +t$,L
[]A\A]A^A_
AWAVAUATUSH
D$,L
L$HA
D$8A
+D$,
|$ D
|$4E1
D+d$
L$ D
D9T$
|$ E1
L$0D
w	E9
D$HD
+t$DH
[]A\A]A^A_
l$(D
\$,D
#t$@
[]A\A]A^A_
[]D)
AWAVAUATUSH
8[]A\A]A^A_
ATUH
AWAVI
AUATUSH
L$ dH
D$@H
D$HH
D$(I
t$8D
|$ D
D$P;D$
fA	W
|$@H
D$lPD
L$PD
fA	W
|$PA
< u(H
[]A\A]A^A_
l$PH
D$0L
L9|$0u
l$PI
l$TM
D$0M
L9|$0u
L$8H
D$\PD
L$@D
AXAY
L$81
4QA9
D$\PD
L$@D
T$@UA
D$lPD
L$PD
\$d@
l$hL
l$h@
T$`A
D$`I
D$lI
D$dH
L$PE
A\A]@
l$PE1
w8fB
L$0D
T$hA
l$`A
|$8E)
|$(L
D$dI
D$lH
L$PE
\$pA
D$lI
D$pH
L$XE
AZA[@
l$XI
L$0D
D$(D
L$0D
D$(D
T$ 1
L$0D
D$(D
D$dP
L$|Q
L$0D
H=mcplt
AWAVAUI
ATUSH
,D$PD
t$lD
[]A\A]A^A_
AWAVA
 uEE
[]A\A]A^A_
U E1
M(E1
AWAVI
AUATUSH
T$@H
L$PD
L$4dH
\$hH
L$pf
\$XA
L$hD
|$ H
\$4L
|$(H
|$HI
 u6H
D$lA
t$pH
~ j	A
L$XI
L$(E
T$Tf
 u:H
D$lPA
D$lPD
t$pH
D$hD
D$pA
\$(H
|$ A
L$ E
T$8H
;D$Hs
D$HH
D$(H
|$ A
u8AXL
L$(E
T$8H
;D$Xs
D$XA
T$X1
\$49
\$4A
T$@D
D$4L
L$PH
[]A\A]A^A_
D$\PD
t$`H
t$`A
D$lA
t$pH
t$`A
l$x1
|$41
D$hH
\$8D
d$pI
\$8tb
d$HL
d$xD
l$8E
l$8L
d$HH
\$DD
|$ A
T$xI
\$DL
|$ A
\$xI
L$(H
D$lPA
D$lPD
t$pH
D$\PD
t$`H
AWAVAUATE
L$(dH
)D$@H
D$ f
<6D)
D;d$
D$ I
tLE1
d$,G
d$,H
l$`H
[]A\A]A^A_
D$8D;d$
L$(E
oL$@H
t$8A
AYAZ
t$HH
t$HH
t$8A
A[A]E1
|$@A
AVAUI
ATUSH
L$<D
)D$pH
	9L$
L$PH
D$[f
\$\H
T$8f
l$8A
D$(H
D$0A
D$lH
\$8A
D$$H
l$HD
;D$P
 u>D
|$<E
t$@1
[]A\A]A^A_
|$<E
t$@1
t$<H
|$@D
l$0I
\$\I
\$ D
L$HD
D$$L
oL$p
L$P9L$
t$TL
t$<H
t$<H
|$@D
L$@D
|$@D
D$<H
t$<H
|$@D
AWAVI
ATUSH
L$ D
l$0dH
D$H1
D$(A
H#D$
uvD9
\$HdH3
X[]A\A]A^A_
t$(D
D$81
D$8dH3
chan
AWAVAUATUS
L9T$
[]A\A]A^A_
A]A^A_
f)T$
f)|$
fD)D$
f)D$
H9t$
f)T$
f)|$
fD)D$
[]A\A]A^A_
[]A\A]A^A_
f)t$
fD)D$
f)|$
f)D$
f)D$
f)D$
f)L$
f)D$
L9\$
C$D	
f)t$
fD)D$
f)D$
f)D$
f)D$
f)D$
f)D$
[]A\A]A^A_
AWAVAUATUS
L9T$
[]A\A]A^A_
A]A^A_
f)T$
f)t$
fD)D$
fD)T$
H9|$
f)T$
f)t$
fD)D$
[]A\A]A^A_
[]A\A]A^A_
f)|$
fD)L$
fD)D$
fD)T$
f)\$
f)T$
f)T$
f)D$
L9\$
f)|$
fD)L$
f)D$
f)D$
f)D$
f)D$
f)D$
[]A\A]A^A_
AUATUS
[]A\A]
[]A\A]
AVAUATUS
l$0L
\$8D
[]A\A]A^
[]A\A]A^
[]A\A]A^
[]A\A]A^
AVAUATUS
l$0L
\$8D
[]A\A]A^
[]A\A]A^
[]A\A]A^
AUATUSD
d$(H
[]A\A]
[]A\A]
ATUS
[]A\A]
[]A\A]
AVAUA
ATUS
D$HD
d$8L
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AVAUATUS
D$HH
t$8L
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AESD
SSND
INST
FVER
invalid file with 0 channels
bad AIFF COMM chunk
COMM
FORM
AIFC
AIFF
MIDI base note
Detune in cents
Low velocity
High velocity
Low note
High note
Gain in dB
Sustain loop id
Release loop id
AIFF/AIFF-C file must have 1 track
AIFF/AIFF-C format does not support unsigned data
AIFF format supports only two's complement integer data
invalid sample width %d for AIFF/AIFF-C file (must be 1-32)
AIFF does not support compression; use AIFF-C
compression format not supported in AIFF-C
AIFF/AIFF-C format supports only big-endian data
AIFF/AIFF-C file must have 0 or 1 instrument chunk
AIFF/AIFF-C file with instrument must also have 2 loops
invalid miscellaneous type %d for AIFF/AIFF-C file
AIFF-C format does not support Apple's proprietary %s compression format
AIFF-C compression type '%s' not currently supported
AIFF file has more than one SSND chunk
FVER chunk is required in AIFF-C
32-bit Floating 64-bit Floating CCITT G.711 u-laCCITT G.711 A-laIMA 4:1 compresscould not read AVR file header
bad sample width %d in AVR file
invalid number of channels in AVR file
AVR files must have exactly 1 track
AVR format does supports only unsigned and two's complement integer data
invalid sample width %d for AVR file (only 8- and 16-bit sample widths are allowed)
compression not supported for AVR files
AVR format supports only big-endian data
AVR files do not support AES data
AVR format does not support markers
AVR format does not support instruments
AVR format does not support miscellaneous data
file is not AVR format
bad sample format in AVR file
bad seek
2BIT
basic_string::_M_create
{ %7.2f Hz %d ch 
basic_string::append
%db 2 
%db u 
(%.30g+-%.30g [%.30g,%.30g]) 
big 
little 
compression: 
basic_string::_M_construct null not valid
CAF format does not support unsigned data
invalid sample width %d for CAF file (must be 1-32)
compression format %d not supported in CAF file
CAF does not yet support markers
invalid bits per sample %d for floating-point audio data
unsupported format flags for ALAC: %u
Compression type %s not supported
invalid chunk length %jd for chunk type %s
CAF file must have 1 track
CAF does not support AES data
error %d parsing FLAC file
could not read FLAC file
FLAC file must have 1 track
FLAC files support only signed integer audio data
FLAC files support only 16- or 24-bit audio data
Only FLAC compression supported in FLAC files
FLAC does not yet support markers
FLAC does not support AES data
bad track id %d
invalid instrument id %d
bad miscellaneous id %d
file not opened for read access
file not opened for write access
IFF/8SVX file must have 1 track
IFF/8SVX format supports only two's complement integer data
IFF/8SVX file allows only 8 bits per sample (%d bits requested)
invalid channel count (%d) for IFF/8SVX format (only 1 channel supported)
IFF/8SVX does not support compression
IFF/8SVX format does not support markers
IFF/8SVX format does not support AES data
IFF/8SVX format does not support instruments
VHDR
BODY
Could not read BICSF file header
file is not a BICSF file (bad magic number)
invalid channel count (%d) for BICSF format (1, 2, or 4 only)
BICSF data format %d not supported
unsupported compression type %d in IRCAM sound file
unsupported sample width %d for two's complement BICSF file
unsupported sample width %d for BICSF file
BICSF format does not support unsigned integer audio data
BICSF format does not support unsigned data
BICSF format supports only 8-, 16-, 24-, or 32-bit two's complement audio data
invalid sample rate %.30g for BICSF file
invalid channel count (%d) for BICSF format (1, 2, or 4 channels only)
BICSF format does not support compression type %d
BICSF file cannot have AES data
BICSF format does not support markers
BICSF format does not support instruments
BICSF format does not currently support miscellaneous chunks
BICSF file must have 1 track
?instrument
invalid instrument parameter id %d
type of instrument parameter %d is not AU_PVTYPE_LONG
invalid instrument parameter type %d
no loop with id %d for instrument %d
loop
unrecognized loop mode %d
invalid loop count: %d
loop start frame must not be negative
loop end frame must not be negative
invalid marker position %jd
no marker id %d for file setup
warning: marker name truncated to 255 characters
invalid size (%d) for miscellaneous chunk
offset %d too big for miscellaneous chunk %d (%d data bytes)
%s -s
%s -s%%d %%79s
%s -i
%s -i %%d
NIST_1A
   1024
Bad NIST SPHERE file header
channel_count
invalid number of channels %d
sample_n_bytes
sample_coding
ulaw
mu-law
alaw
sample_byte_format
sample_sig_bits
invalid sample width %d bits
sample_rate
invalid sample rate %d Hz
sample_count
sample rate not specified
Could not read NIST SPHERE file header
number of channels not specified
bytes per sample not specified
unrecognized NIST SPHERE sample format %s
sample byte order not specified
number of samples not specified
NIST SPHERE file must have 1 track
invalid sample width %d bits for NIST SPHERE format
NIST SPHERE format does not support unsigned data
NIST SPHERE format does not support floating-point data
invalid sample rate %.30g for NIST SPHERE file
NIST SPHERE format supports only G.711 u-law or A-law compression
NIST SPHERE file cannot have AES data
NIST SPHERE format does not support markers
NIST SPHERE format does not support instruments
NIST SPHERE format does not currently support miscellaneous chunks
NIST_1A
   1024
channel_count -i %d
sample_count -i %d
sample_rate -i %d
sample_n_bytes -i %d
sample_byte_format -s%d %s
sample_sig_bits -i %d
sample_coding -s%d %s
end_head
bad sample format
.snd
NeXT files must have exactly 1 track
NeXT format does not support unsigned data
invalid sample width %d for NeXT file (only 8-, 16-, 24-, and 32-bit data are allowed)
compression format not implemented for NeXT files
NeXT format supports only big-endian data
NeXT files cannot have AES data
NeXT format does not support markers
NeXT format does not support instruments
NeXT format does not support miscellaneous data
__builtin_expect(__n < this->size(), true)
/usr/include/c++/8/bits/stl_vector.h
%s:%d: %s: Assertion '%s' failed.
std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>; std::vector<_Tp, _Alloc>::const_reference = const long unsigned int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]
a valid AFfilesetup is required for reading raw data
data offset is larger than file size
raw file must have exactly one track
could not access track in file setup
raw file cannot have instruments
raw file cannot have miscellaneous data
raw file cannot have AES data
raw file cannot have markers
SOUND SAMPLE DATA 
2.1 
SampleVision file must have 1 track
SampleVision format supports only 16-bit signed integer audio data
SampleVision supports only little-endian data
SampleVision does not support compressed audio data
SampleVision does not support markers
SampleVision does not support AES data
                unrecognized file format %d
invalid byte order %d
invalid sample rate %.30g
invalid data offset %jd
invalid frame count %jd
%s format not currently supported
@totalfframes %jd
nextfframe %jd
frames2ignore %jd
fpos_first_frame %jd
fpos_next_frame %jd
fpos_after_data %jd
totalvframes %jd
nextvframe %jd
data_size %jd
no marker with id %d found in track %d
%08x-%04x-%04x-%04x-%02x%02x%02x%02x%02x%02x
VOC file contains multiple sound data blocks
Creative ADPCM compression is not currently suppported
VOC file contains unrecognized codec type %d
VOC extended information found after sound data
Creative ADPCM compression is not currently supported
VOC format supports only integer audio data
VOC format supports only 16-bit signed or 8-bit unsigned data
VOC supports only little-endian data
compression format %d not supported in VOC file
VOC file must have 1 track
VOC does not support markers
VOC does not support AES data
Creative Voice File
LIST
INFO
WAVE file must have 1 track
fmt 
bad compression type
fact
bad sample width of %d bits
Bad number of coefficients
RIFF
Warning: invalid sample width for floating-point WAVE file: %d (must be 32 bits)
Warning: invalid sample width for double-precision floating-point WAVE file: %d (must be 64 bits)
invalid sample width for WAVE file: %d (must be 1-32 bits)
WAVE integer data of more than 8 bits must be two's complement signed
invalid sample width %d for WAVE file (must be 1-32)
Warning: WAVE format integer data of 1-8 bits must be unsigned; setting sample format to unsigned
compression format not supported in WAVE format
WAVE format only supports little-endian data
WAVE files cannot have AES data
WAVE files can have 0 or 1 instrument
WAVE files with loops must contain at least 1 marker
illegal miscellaneous type [%d] for WAVE file
WAVE file with MS ADPCM compression must have 1 or 2 channels
IMA ADPCM compression supports only 4 bits per sample
Invalid samples per block for IMA ADPCM compression
WAVE extensible data format %s is not currently supported
WAVE ADPCM data format 0x%x is not currently supported
WAVE MPEG data format is not supported
WAVE MPEG layer 3 data format is not supported
WAVE file data format 0x%x not currently supported != 0xfffe ? %d, != EXTENSIBLE? %d
missing format chunk in WAVE file
Frame count required but not found
Aunable to store AES channel status data for track %d
compression type %d not available
unable to position write pointer at next frame
__builtin_expect(!this->empty(), true)
unable to position read pointer at next frame
std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::back() const [with _Tp = SharedPtr<Chunk>; _Alloc = std::allocator<SharedPtr<Chunk> >; std::vector<_Tp, _Alloc>::const_reference = const SharedPtr<Chunk>&]
std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::back() const [with _Tp = SharedPtr<Module>; _Alloc = std::allocator<SharedPtr<Module> >; std::vector<_Tp, _Alloc>::const_reference = const SharedPtr<Module>&]
std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::front() const [with _Tp = SharedPtr<Chunk>; _Alloc = std::allocator<SharedPtr<Chunk> >; std::vector<_Tp, _Alloc>::const_reference = const SharedPtr<Chunk>&]
std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::front() const [with _Tp = SharedPtr<Module>; _Alloc = std::allocator<SharedPtr<Module> >; std::vector<_Tp, _Alloc>::const_reference = const SharedPtr<Module>&]
list.valid: %d
list.count: %zu
item #%u, invalid type %d
flt 
dbl 
%dsampfmt? 
%dbyteorder? 
%dcompression?
NULL
%5.2f
track %d
 id %d
 virtual format
 total file frames: %jd
 total virtual frames: %jd
 next file frame: %jd
 next virtual frame: %jd
 frames to ignore: %jd
 data_size: %jd
 fpos_first_frame: %jd
 fpos_next_frame: %jd
 fpos_after_data: %jd
 channel matrix:
 marker count: %d
file handle: 0x%p
valid
invalid!
 access: 
 fileFormat: %d
 instrument count: %d
 instruments: 0x%p
 miscellaneous count: %d
 miscellaneous: 0x%p
 trackCount: %d
 tracks: 0x%p
%05jd 
item %u valid %d, should be %d
item #%u, parameter %d, long: %ld
item #%u, parameter %d, double: %f
item #%u, parameter %d, pointer: %p
?Audio File Library: 
 [error %ld]
invalid sampling rate %.30g
Cannot seek in file
could not open file '%s'
null access mode
unrecognized access mode '%s'
null virtual file
could not open virtual file
unrecognized access mode %d
close returned %d
warning: opening file for read access: ignoring file setup with non-raw file format
'%s': unrecognized audio file format
unrecognized audio file format
Abad query selector
not implemented yet
bad query type
unrecognized query selector %d
none
not compressed
CCITT G.711 u-law
CCITT G.711 A-law
ima4
IMA ADPCM
IMA DVI ADPCM
msadpcm
MS ADPCM
Microsoft ADPCM
flac
FLAC
Free Lossless Audio Codec
alac
ALAC
Apple Lossless Audio Codec
Raw Data
Raw Sound Data
AIFF-C
AIFF-C File Format
aifc
Audio Interchange File Format
aiff
NeXT .snd/Sun .au
NeXT .snd/Sun .au Format
next
MS RIFF WAVE
Microsoft RIFF WAVE Format
wave
BICSF
bicsf
MPEG
MPEG Audio Bitstream
mpeg
Sound Designer 1
Sound Designer 1 File Format
Sound Designer 2
Sound Designer 2 File Format
IFF/8SVX
Sample Vision
Sample Vision File Format
Creative Voice File Format
NIST SPHERE
NIST SPHERE File Format
nist
SoundFont 2
SoundFont 2 File Format
Core Audio Format
Berkeley/IRCAM/CARL Sound Format
Audio Visual Research File Format
Amiga IFF/8SVX Sound File Format
null file setup
invalid file setup
null file handle
invalid file handle
unknown sample format %d
nonunique %s id %d
bad memory allocation size request %zd
allocation of %zd bytes failed
bad memory allocation size request %zd elements of %zd bytes each
illegal sample width %d for integer data
@alac_compress
alac_decompress
error encoding ALAC audio data
ALAC compression supports a maximum of 8 channels
ALAC compression requires signed integer audio data
ALAC compression requires 16, 20, 24, or 32 bits per sample
ALAC compression requires native-endian format
codec data size not set
codec data not set
std::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = long unsigned int; _Alloc = std::allocator<long unsigned int>; std::vector<_Tp, _Alloc>::const_reference = const long unsigned int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]
flac_decompress
flac_compress
FLAC decoding error %d
could not seek to frame %jd
could not finish encoding
could not create encoder
could not set channel count
could not set sample rate
could not set sample width
could not initialize FLAC encoder
could not encode data into FLAC stream
FLAC compression supports a maximum of 8 channels
FLAC compression requires 16- or 24-bit signed integer format
FLAC compression requires native byte order
could not initialize FLAC decoder
vector::_M_default_append
std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = int*; _Alloc = std::allocator<int*>; std::vector<_Tp, _Alloc>::reference = int*&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]
file missing data -- read %jd frames, should be %jd
unable to write data (%s) -- wrote %jd out of %jd frames
unable to write data (disk full) -- wrote %jd out of %jd frames
g711compress
g711decompress
G.711 compression requires 16-bit signed integer format
G.711 compression requires native byte order
ima_adpcm_compress
ima_adpcm_decompress
IMA ADPCM compression requires 1 or 2 channels
IMA ADPCM compression requires 16-bit signed integer format
IMA ADPCM compression requires native byte order
IMA type not set
,[1K6
ADH~OqW/`
swap
sign
expand3to4
compress4to3
intToFloat
convertInt
convertFloat
clip
convertPCMMapping
transform
unable to position file handle at beginning of sound data
library does not support compression in virtual format yet
modules:
 %s (%p) in %p out %p
chunks:
 %p %s
std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = SharedPtr<Chunk>; _Alloc = std::allocator<SharedPtr<Chunk> >; std::vector<_Tp, _Alloc>::reference = SharedPtr<Chunk>&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]
std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = SharedPtr<Module>; _Alloc = std::allocator<SharedPtr<Module> >; std::vector<_Tp, _Alloc>::reference = SharedPtr<Module>&; std::vector<_Tp, _Alloc>::size_type = long unsigned int]
std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::front() [with _Tp = SharedPtr<Chunk>; _Alloc = std::allocator<SharedPtr<Chunk> >; std::vector<_Tp, _Alloc>::reference = SharedPtr<Chunk>&]
std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::back() [with _Tp = SharedPtr<Chunk>; _Alloc = std::allocator<SharedPtr<Chunk> >; std::vector<_Tp, _Alloc>::reference = SharedPtr<Chunk>&]
ms_adpcm_compress
ms_adpcm_decompress
Error decoding sample
coefficient array not set
number of coefficients not set
MS ADPCM compression requires 1 or 2 channels
MS ADPCM compression requires 16-bit signed integer format
MS ADPCM compression requires native byte order
rebuffer
channelMatrix
;*3$"
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
gcc 8.0.1 20180207
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA*cet status
libaudiofile.so.1.0.0-0.3.6-17.fc28.x86_64.debug
7zXZ
4u_m
sGaM
`"RSO=
'ogA
q}-}
_-1x'
ff^h
sxLr
T50E
)S9Q
r\rWc
n=p6
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.note.gnu.property
.init_array
.fini_array
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu.build.attributes
.gnu_debuglink
.gnu_debugdata
