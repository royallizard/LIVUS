/lib64/ld-linux-x86-64.so.2
libusb-0.1.so.4
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
usb_find_devices
_fini
usb_busses
usb_find_busses
usb_interrupt_write
usb_open
usb_claim_interface
usb_strerror
usb_close
usb_interrupt_read
usb_detach_kernel_driver_np
usb_set_configuration
usb_init
usb_get_string_simple
libpthread.so.0
__errno_location
accept
fcntl
sigaction
fork
libc.so.6
setuid
chroot
socket
__printf_chk
fopen
optind
strrchr
regexec
__strdup
perror
getpwuid
__fdelt_chk
initgroups
signal
strncpy
puts
regfree
__stack_chk_fail
unlink
putchar
listen
select
realloc
_exit
getpid
kill
chmod
__assert_fail
strtol
fgetc
fgets
getpwnam
calloc
strlen
setlogmask
sigemptyset
openlog
memset
bind
chdir
__syslog_chk
getopt
__fprintf_chk
strnlen
fclose
__vsnprintf_chk
malloc
umask
strcasecmp
__xstat64
__ctype_b_loc
getenv
regcomp
optarg
stderr
__snprintf_chk
seteuid
getuid
strncasecmp
usleep
gettimeofday
geteuid
difftime
strchr
__cxa_finalize
setsid
setgid
strcmp
__libc_start_main
snprintf
__cxa_atexit
_edata
__bss_start
_end
GLIBC_2.2.5
GLIBC_2.3
GLIBC_2.15
GLIBC_2.4
GLIBC_2.3.4
AWAVAUATA
D+ E
d$ L
fffff.
fffff.
fffff.
vTf.
l$ L
fff.
[]A\
AWAVAUATL
[]A\A]A^A_
ffff.
fffff.
AWAVAUATI
[]A\A]A^A_
ATUE1
[]A\
AUATL
([]A\A]
t$ H
AUATI
[]A\A]
tCUSH
t[AUATI
[]A\A]
fffff.
AWAVAUATI
([]A\A]A^A_
[]A\A]A^A_
fff.
[]A\
[]A\
ffffff.
ffffff.
AVAUA
ATUI
k([]A\A]A^
ATUI
[]A\
\$ L
dH3<%(
ATUSH
\$ L
[]A\
ATUH
[]A\
AUATI
l$pL
SATI
[]A\A]
l$xAT
AWAV
AUATUS
|$0H
t$8dH
Hc=i
t+Hc
|$P1
T$8H
L$XH
D$0H9
T$8H
T$PH9
D$01
Hc=1
Ic?I
L;d$
H)L$8
t/Hc
[]A\A]A^A_
|$ H
|$ H
t$(H
|$ H
M;w(r
L;d$
t$`H
D$Ln
|$(H
ATUI
\$ L
[]A\
ATUI
\$ L
[]A\
AUAT
[]A\A]
[]A\A]
fff.
ATUH
[]A\
t19X4t
fffff.
[]A\
[]A\
AUAT
[]A\A]
[]A\A]
fff.
=y~ 
=\~ 
=j} 
ffffff.
=5} 
ATUS
[]A\H
=I| 
=6| 
=b| 
=	{ 
?/t`H
ffffff.
AUATI
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
L$ H)
[]A\A]
ATUI
5*z 
<$H9
[]A\
fff.
ffff.
ffff.
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
ATUSH
[]A\
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
ffff.
AUATA
[]A\A]
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
AWAVL
AUATI
D$p1
ZY~kA
D$hdH3
x[]A\A]A^A_
AUATA
98}*H
[]A\A]
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
ffff.
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
ffff.
ffff.
ffff.
t!@8
fff.
AWAVM
AUATI
dH34%(
[]A\A]A^A_
ffff.
AWAVM
AUATI
[]A\A]A^A_
t#SH
fffff.
[]A\
fffff.
AUATI
[]A\A]
[]A\A]
AUATI
[]A\A]
[]A\A]
fff.
ATUI
[]A\
t#SH
t#SH
ATUI
fffff.
AUATI
\$8H
[]A\A]
fff.
tQ;.t
t:;(t	H
[]A\
ATUI
9C4t
[]A\
fff.
fff.
fff.
fff.
AUATI
[]A\A]
[]A\A]
ATUH
[]A\
fffff.
AWAVAUATUSH
L$HH
[]A\A]A^A_
l$ L
?[tE
=i\ 
=1\ 
L$PH
Invalid H
ctx buff
ATUSL
_wOH
[]A\
[]A\
[]A\H
AVAUATUSH
H;w(H
[]A\A]A^
[]A\A]A^
fffff.
ATUS
[]A\
[]A\
[]A\
[]A\
[]A\
#tVA
UnbalancH
nescaped
GxotesH
ed word H
due to u
 # in qu
ffffff.
C0t!H
fffff.
tSUSH
ffff.
H;C(H
C0H9C8t
ffff.
ATUH
[]A\
E0H9E8t
ffff.
AWAVI
AUATI
[]A\A]A^A_
/\L9
AWAVA
AUATL
[]A\A]A^A_
Warning: excessive comm failures, limiting error reporting
Communications with UPS lost - check cabling
usb_comm_fail: vsnprintf needed more than %d bytes
Communications with UPS lost: %s
Can't set USB configuration: %s
Couldn't retrieve USB string descriptor for vendor. Check permissions?
Matched device with NULL vendor string.
To keep trying (in case your device does not have a vendor string), use vendor=NULL
Matched device with vendor='%s'.
idVendor=%04x and idProduct=%04x, but provided vendor '%s' does not match device: '%s'.
idVendor=%04x and idProduct=%04x, but device vendor string '%s' does not match expected string '%s'. Have you tried the nutdrv_qx driver?
Checking USB device [%04x:%04x] (%s/%s)
Failed to open USB device, skipping: %s
Device does not match - skipping
failed to detach kernel driver from USB device: %s
detached kernel driver from USB device...
USB device [%04x:%04x] matches, but driver callback failed: %s
Can't open USB device, retrying ...
Unable to find ATCL FOR UPS
Things to try:
 - Connect UPS device to USB bus
 - Run this driver as another user (upsdrvctl -u or 'user=...' in ups.conf).
   See upsdrvctl(8) and ups.conf(5).
Fatal error: unusable configuration
Communications with UPS re-established
Status bytes 1-7 are not all zero
%s: attempting to call usb_interrupt_write(01 00 00 00 00 00 00 00)
%s: first usb_interrupt_write() failed: %s
%s: second usb_interrupt_write() failed: %s
USB vendor string (or NULL if none)
Charles Lepple <clepple+nut@gmail.com>
Can't claim USB interface: %s
vendor
NULL
ATCL FOR UPS
Matched expected vendor='%s'.
unknown
No matching USB device found
- VendorID     : %04x
- ProductID    : %04x
- Manufacturer : %s
- Product      : %s
- Serial Number: %s
- Bus          : %s
matcher
matcher: unspecified error
USB device [%04x:%04x] opened
Searching for USB device...
ups.mfr
ups.model
ups.serial
ups.vendorid
ups.productid
timeout
status interrupt read: %s
read
Query to UPS failed
reply[0] = 0x%02x -> OL
reply[0] = 0x%02x -> LB
reply[0] = 0x%02x -> OB
Unknown status: 0x%02x
'ATCL FOR UPS' USB driver
upsdrv_shutdown
driver.parameter.%s
driver.flag.%s
enabled
driver.flag.nolock
driver.flag.ignorelb
driver.parameter.port
sddelay
sdorder
desc
variable name
flag
override.
default.
%s %s
chroot
user
VALUE
FLAG
UNKNOWN
usage: %s -a <id> [OPTIONS]
%40s : -x %s=<value>
%40s : -x %s
+a:kDhx:Lqr:u:Vi:
debug level is '%d'
Can't chdir to %s
%s/%s-%s.pid
Initiating UPS shutdown
device.type
driver.version
driver.version.internal
driver.name
battery.charge
battery.charge.low
battery.runtime
driver.parameter.pollinterval
device.mfr
device.model
device.serial
Signal %d: exiting
battery.runtime.low
Obsolete value sddelay found in ups.conf
Fatal error: '%s' is not a valid %s for this driver.
Look in the man page or call this driver with -h for a list of
valid variable names and flags.
Network UPS Tools - %s %s (%s)
Error: UPS [%s] is for driver %s, but I'm %s!
Warning: This is an experimental driver.
Some features may not function correctly.
Error: Section %s not found in ups.conf
  -a <id>        - autoconfig using ups.conf section <id>
                 - note: -x after -a overrides ups.conf settings
  -V             - print version, then exit
  -L             - print parseable list of driver variables
  -D             - raise debugging level
  -q             - raise log level threshold
  -h             - display this help
  -k             - force shutdown
  -i <int>       - poll interval
  -r <dir>       - chroot to <dir>
  -u <user>      - switch to <user> (if started as root)
  -x <var>=<val> - set driver variable <var> to <val>
                 - example: -x cable=940-0095B
Acceptable values for -x or ups.conf in this driver:
Error: unknown option -%c. Try -h for help.
Error: too many non-option arguments. Try -h for help.
Error: specifying '-a id' is now mandatory. Try -h for help.
Error: you must specify a port name in ups.conf. Try -h for help.
Duplicate driver instance detected! Terminating other driver!
Fatal error: broken driver. It probably needs to be converted.
using 'battery.charge' to set battery low state
using 'battery.runtime' to set battery low state
The 'ignorelb' flag is set, but there is no way to determine the
battery state of charge.
Only set this flag if both 'battery.charge' and 'battery.charge.low'
and/or 'battery.runtime' and 'battery.runtime.low' are available.
%s: nothing to write
%s: %.*s
SETINFO %s "%s"
ADDENUM %s "%s"
ADDRANGE %s %i %i
SETAUX %s %d
 STRING
SETFLAGS %s
%s/%s-%s
%s/%s
bind %s failed: %s
getpwuid
Current user: %s (UID %d)
Things to try:
 - mkdir %s
 - rm %s
Exiting.
chmod(%s, 0660) failed
listen(%d, %d) failed
select unix sockets failed
accept on unix fd failed
fcntl get on unix fd failed
new connection on fd %d
DUMPALL
DATASTALE
ADDCMD %s
DATAOK
DUMPDONE
PING
PONG
INSTCMD
Unknown command on socket: 
arg %d: %s
Parse error on sock: %s
ADDRANGE %s  %i %i
DELINFO %s
DELENUM %s "%s"
DELRANGE %s "%i %i"
DELCMD %s
ALARM %s
ups.status
ups.alarm
write %d bytes to socket %d failed
Can't create a unix domain socket
Fatal error: unable to create listener socket
 - set different owners or permissions on %s
 - run this as some other user (try -u <username>)
dstate_init: sock %s open on fd %d
fcntl set O_NDELAY on unix fd failed
Got INSTCMD, but driver lacks a handler
Got SET, but driver lacks a handler
%s: base variable (%s) does not exist
%s: base variable (%s) is immutable
dstate_setaux: base variable (%s) does not exist
%s: ignoring LB flag from device
%s: appending LB flag [charge '%s' below '%s']
%s: appending LB flag [runtime '%s' below '%s']
status_commit
status_set
dstate_setflags
send_to_all
send_to_one
/var/run/nut
%s/%s.pid
common.c
len <= size
%4.0f.%06ld	
/etc/ups
NUT_CONFPATH
NUT_STATEPATH
writepid: fopen %s
Failed to read pid from %s
kill
 %02x
%s: (%d bytes) =>
%3s 
%02Xh 
'%c' 
Unable to enter background
open /dev/null
Startup successful
initgroups
setgid
setuid
chdir(%s)
chroot(%s)
chdir(/)
chrooted into %s
Invalid log level threshold
user %s not found
getpwnam(%s)
Out of memory
2.7.2
vupslog: vsnprintf needed more than %d bytes
Ignoring invalid pid number %d
getuid gave 0, but seteuid(0) failed
snprintfcat
Unrecognized flag [%s]
%s: duplicate value (shouldn't happen)
state_addenum: base variable (%s) does not exist
state_addrange: min is superior to max! (%i, %i)
state_addrange: base variable (%s) does not exist
state_setflags: base variable (%s) does not exist
st_tree_node_add
Fatal error in parseconf(ups.conf): %s
%s/ups.conf
Can't open %s: %s
Parse error: %s:%d: %s
parseconf: fatal error: %s
realloc wordbuf failed
realloc arglist failed
realloc argsize failed
realloc arglist member failed
malloc wordbuf failed
addchar: discarding invalid character (0x%02x)!
;*3$"
nutdrv_atcl_usb.debug
7zXZ
/KzYK
q6{Plz
D.T{
z	#M~
jq#x
a(s8y
pgZ.
*;]cn
:5EK
ezJj
i?+r
[?{v
<E!D
N>FW
?"IO$
/$L	
MnD!=
	$01<w
;P{P
Qka 
87R4
K2 a
fabs
BX[0
x"=X6Y
^R-]m
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
