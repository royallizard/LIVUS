__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
strcmp
memset
plugin_log
module_register
plugin_register_write
__ctype_b_loc
ssnprintf
strchr
strcspn
free
sstrncpy
uc_get_rate
__assert_fail
libdl.so.2
libc.so.6
__stack_chk_fail
write_log.so
GLIBC_2.3
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.0
[^_]
[^_]
[^_]
UWVS
D$DT
[^_]
write_log plugin: DS type does not match value list type
write_log values:
write_log
%s%c%s
utils_format_graphite.c
%s%s%s.%s.%s.%s
%s%s%s.%s.%s
 	"\:!/()
%.15g
%llu
%lli
%s %s %u
!(flags & 0x04) || (ds_name != ((void *)0))
(__extension__ (__builtin_constant_p (escape_char) && !__builtin_constant_p (" \t\"\\:!/()\n\r") && (escape_char) == '\0' ? (char *) __rawmemchr (" \t\"\\:!/()\n\r", escape_char) : __builtin_strchr (" \t\"\\:!/()\n\r", escape_char))) == ((void *)0)
0 == __extension__ ({ size_t __s1_len, __s2_len; (__builtin_constant_p (ds->type) && __builtin_constant_p (vl->type) && (__s1_len = strlen (ds->type), __s2_len = strlen (vl->type), (!((size_t)(const void *)((ds->type) + 1) - (size_t)(const void *)(ds->type) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((vl->type) + 1) - (size_t)(const void *)(vl->type) == 1) || __s2_len >= 4)) ? __builtin_strcmp (ds->type, vl->type) : (__builtin_constant_p (ds->type) && ((size_t)(const void *)((ds->type) + 1) - (size_t)(const void *)(ds->type) == 1) && (__s1_len = strlen (ds->type), __s1_len < 4) ? (__builtin_constant_p (vl->type) && ((size_t)(const void *)((vl->type) + 1) - (size_t)(const void *)(vl->type) == 1) ? __builtin_strcmp (ds->type, vl->type) : (__extension__ ({ const unsigned char *__s2 = (const unsigned char *) (const char *) (vl->type); int __result = (((const unsigned char *) (const char *) (ds->type))[0] - __s2[0]); if (__s1_len > 0 && __result == 0) { __result = (((const unsigned char *) (const char *) (ds->type))[1] - __s2[1]); if (__s1_len > 1 && __result == 0) { __result = (((const unsigned char *) (const char *) (ds->type))[2] - __s2[2]); if (__s1_len > 2 && __result == 0) __result = (((const unsigned char *) (const char *) (ds->type))[3] - __s2[3]); } } __result; }))) : (__builtin_constant_p (vl->type) && ((size_t)(const void *)((vl->type) + 1) - (size_t)(const void *)(vl->type) == 1) && (__s2_len = strlen (vl->type), __s2_len < 4) ? (__builtin_constant_p (ds->type) && ((size_t)(const void *)((ds->type) + 1) - (size_t)(const void *)(ds->type) == 1) ? __builtin_strcmp (ds->type, vl->type) : (- (__extension__ ({ const unsigned char *__s2 = (const unsigned char *) (const char *) (ds->type); int __result = (((const unsigned char *) (const char *) (vl->type))[0] - __s2[0]); if (__s2_len > 0 && __result == 0) { __result = (((const unsigned char *) (const char *) (vl->type))[1] - __s2[1]); if (__s2_len > 1 && __result == 0) { __result = (((const unsigned char *) (const char *) (vl->type))[2] - __s2[2]); if (__s2_len > 2 && __result == 0) __result = (((const unsigned char *) (const char *) (vl->type))[3] - __s2[3]); } } __result; })))) : __builtin_strcmp (ds->type, vl->type)))); })
gr_format_values plugin: Unknown data source type: %i
format_graphite: message buffer too small: Need %zu bytes.
format_graphite: target buffer too small
format_graphite: error with gr_format_values
gr_format_values
escape_graphite_string
gr_format_name
;*2$"<
write_log.so.debug
7zXZ
59>t
}D"<
 }zK
rjSl
hf<~f
6o!&z
G"|L
3V;a
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.bss
.gnu_debuglink
.gnu_debugdata
