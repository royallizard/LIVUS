/lib64/ld-linux-x86-64.so.2
<sZ<
^SE,
libgmp.so.10
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
libnspr4.so
libnss3.so
libc.so.6
socket
strcpy
__printf_chk
exit
fopen
optind
perror
__isoc99_sscanf
strncpy
puts
__stack_chk_fail
realloc
abort
getpid
printf
feof
fgets
strlen
openlog
memset
strstr
__errno_location
__syslog_chk
__fprintf_chk
stdout
memcpy
fclose
__vsnprintf_chk
malloc
__ctype_b_loc
optarg
stderr
ioctl
system
__snprintf_chk
getuid
__strncat_chk
strncat
fwrite
__memcpy_chk
__cxa_finalize
fcntl
__sprintf_chk
__xstat
setbuf
strerror
__libc_start_main
closelog
getopt_long_only
free
_edata
__bss_start
_end
__libc_csu_fini
pfkey_error_func
progname
pfkey_lib_debug
__libc_csu_init
openswan_passert_fail
pfkey_debug_func
GLIBC_2.3
GLIBC_2.7
GLIBC_2.14
GLIBC_2.4
GLIBC_2.2.5
GLIBC_2.3.4
AWAVAUATA
ipsec0
fffff.
fff.
fffff.
fffff.
<~u2H
|$ dH
L$ H
L$ H
L$ H
L$ H
L$ H
L$ H
L$ H
L$ H
L$ H
L$ H
ffffff.
D$(1
D$(dH3
\$8H
l$@H
|$ H
L$ H
L$ H
AVAUI
D$X1
D$XdH3
`[]A\A]A^
AWAVAUATUH
t$(H
T$8dH
Hcl$$H
T$8L
|$@H
d$$1
l$0H
L$@1
t$$A
[]A\A]A^A_
D$ L
D$@H
D$(H
t$0L
+D$$H
D$8H
T$(D+d$$D
T$8L
>"tlL9
AVAUATUH
t7I9
\toH
[]A\A]A^A_
iv3H
!tPH
l$ H
d$(L
l$0L
t$8L
|$@H
t$dD
d$hD
t$iD
D$lD
\$pH
/t:H
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
tIfA
@wjA
T$`H
T$hf
T$pH
D$81
D$PH
T$$f
L$(D
D$XD
L$*H
D$,H
D$ H
D$(H
T$8dH3
l$ L
d$(L
l$0L
t$8L
|$@H
D$h1
T$hdH3
\$xH
AtFA
Mw<Hc
HcT$
$tk1
l$ H
d$(L
l$0L
t$8L
|$@H
l$ H
d$(L
l$0L
t$8L
|$@H
$tv1
l$ L
t$(L
|$0H
d$ L
l$(L
t$0H
$tJf
fff.
T$HH
T$HH
l$`H
\$XL
d$hL
l$pL
t$xL
fff.
t$ H
l$ L
t$(L
|$0H
fff.
fff.
ffffff.
ffffff.
AWAVAUATUSH
!t[H
[]A\A]A^A_
ffffff.
ffff.
ffff.
O L9
O0L9
O@L9
l$ L
d$(L
l$0H
fffff.
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
\$XH
l$`L
d$hL
l$pL
t$xL
@vkH
T$8A
\$HD
D$@D
L$0D
\$HH
D$@D
|$ 1
T$8A
T$8D
t$HD
T$8I
L$0D
|$(1
T$ D
D$h1
T$hdH3
\$pH
l$xL
Au/H
d$ L
l$(L
t$0H
\$(H
l$0L
d$8L
l$@H
fffff.
2t9H
ffff.
ffff.
2t9H
ffff.
AVAUI
L$0L
L$@D
T$HD
D$PL
L$0D
T$HL
D$PD
T$ H
[]A\A]A^A_
t$PD
L$@D
T$HD
t$PI
\$8D
T$H1
\$(D
\$8H
L$0D
L$0A
\$8H
H	D$XA
D$PA
T$PD
T$PH
L$@I
T$H@
D$PA
T$XD
t$XH
D$X%
t$XH
t$ H
[]A\A]A^H
:u	H
IN-ADDR.
ARPAf
t$ H
AWAVI
IP6.ARPAf
[]A\A]A^A_
D$h1
T$hdH3
\$pH
l$xL
D$x1
T$xdH3
t$ L
t$ L
tI=r
t$ L
t$ L
fff.
D$(1
dt/1
T$(dH3
l$ L
t$(L
|$0H
%s --create <virtual>
%s --delete <virtual>
%s --clear
%s --help
%s --version
mast%d
ipsec%d
pfkey write
%s, %s
%s --label %s
/proc/net/pfkey
cat /proc/net/ipsec_tncfg
Root denied permission!?!
Run as root user.
Internet Protocol not enabled
Unknown socket error %d.
virtual
physical
create
delete
attach
detach
clear
help
version
optionsfrom
%s --attach --virtual <virtual-device> --physical <physical-device>
%s --detach --virtual <virtual-device>
        [ --debug ] is optional to any %s command.
        [ --label <label> ] is optional to any %s command.
%s: exactly one of 
	'--attach', '--detach', '--create', '--delete' or '--clear'
options must be specified.
%s: Trouble building message header, error=%d.
%s: Trouble building outif extension, error=%d.
%s: Trouble building pfkey message, error=%d.
%s: warning; '-v' and '--version' options don't expect arguments, arg '%s' found, perhaps unintended.
%s: NETKEY does not support virtual interfaces.
%s: No tncfg - no IPsec support in kernel (are the modules loaded?)
%s: physical I/F parameter missing.
%s: virtual I/F parameter missing.
%s: exactly one of '--attach', '--detach' or '--clear' options must be specified.
Try %s --help' for usage information.
%s: Socket creation failed -- 
Insufficient system resources.
No such device.  Is the virtual device valid?  Is the ipsec module linked into the kernel or loaded as a module?
%s: Socket ioctl failed on attach -- 
Invalid argument, check kernel log messages for specifics.
No such device.  Is the physical device valid?
Device busy.  Virtual device %s is already attached to a physical device -- Use detach first.
%s: Socket ioctl failed on detach -- 
No such device.  Is the virtual device valid?  The ipsec module may not be linked into the kernel or loaded as a module.
Device requested is not linked to any physical device.
%s: Socket ioctl failed on clear -- 
Failed.  Is the ipsec module linked into the kernel or loaded as a module?.
%s: Socket ioctl failed on unknown operation %u -- %s
ERROR: %s. Errno %d: %s
FATAL ERROR: %s
FATAL ERROR: %s
FATAL ERROR: %s. Errno %d: %s
ABORT at %s:%d
case %d unexpected
| %s
| %s
ASSERTION FAILED at %s:%lu: %s
FATAL ERROR: %s. Errno %d: %s
EXPECTATION FAILED at %s:%lu: %s
0123456789abcdef
unable to open file
unable to allocate memory
error in line read
out of memory for new line
out of space for new argv
%s: optionsfrom failed: %s
out of memory for new argument
%s: optionsfrom called %d times, looping?
/builddir/build/BUILD/openswan-2.6.37/lib/libopenswan/sanitizestring.c
size >= UGLY_WIDTH
\%03o
device does not exist.  See Openswan installation procedure.
Check permissions.  Should be 600.
You must be root to open this file.
Netlink not enabled OR KLIPS not loaded.
KLIPS is busy.  Most likely a serious internal error occured in a previous command.  Please report as much detail as possible to development team.
Invalid argument, KLIPS not loaded or check kernel log messages for specifics.
No kernel memory to allocate SA.
Algorithm support not available in the kernel.  Please compile in support.
SA already in use.  Delete old one first.
SA does not exist.  Cannot delete.
Unknown file open error %d.  Please report as much detail as possible to development team.
%s: Trouble opening PF_KEY family socket with error: 
access denied.  
KLIPS not loaded or enabled.
pfkey_extensions_free
]:%d
pfkey_lib_debug:%s:Free extension %d (%zu)
pfkey_lib_debug:pfkey_msg_hdr_build:
pfkey_lib_debug:pfkey_msg_hdr_build:
pfkey_lib_debug:pfkey_msg_hdr_build: on_entry &pfkey_ext=0p%p pfkey_ext=0p%p *pfkey_ext=0p%p.
pfkey_lib_debug:pfkey_msg_hdr_build: why is pfkey_msg already pointing to something?
pfkey_lib_debug:pfkey_msg_hdr_build: msg type not set, must be non-zero..
pfkey_lib_debug:pfkey_msg_hdr_build: msg type too large:%d.
pfkey_lib_debug:pfkey_msg_hdr_build: satype %d > max %d
pfkey_lib_debug:pfkey_msg_hdr_build: memory allocation failed
pfkey_lib_debug:pfkey_msg_hdr_build: on_exit &pfkey_ext=0p%p pfkey_ext=0p%p *pfkey_ext=0p%p.
pfkey_lib_debug:pfkey_sa_build: spi=%08x replay=%d sa_state=%d auth=%d encrypt=%d flags=%d
pfkey_lib_debug:pfkey_sa_build: why is pfkey_sa already pointing to something?
pfkey_lib_debug:pfkey_sa_build: why is pfkey_sa already pointing to something?
pfkey_lib_debug:pfkey_sa_build: invalid exttype=%d.
pfkey_lib_debug:pfkey_sa_build: replay window size: %d -- must be 0 <= size <= 64
pfkey_lib_debug:pfkey_sa_build: auth=%d > SADB_AALG_MAX=%d.
pfkey_lib_debug:pfkey_sa_build: sa_state=%d exceeds MAX=%d.
pfkey_lib_debug:pfkey_sa_build: sa_state=%d is DEAD=%d is not allowed.
pfkey_lib_debug:pfkey_sa_build: SAref=%d must be (SAref == IPSEC_SAREF_NULL(%d) || SAref < IPSEC_SA_REF_TABLE_NUM_ENTRIES(%d)).
pfkey_lib_debug:pfkey_sa_build: memory allocation failed
pfkey_lib_debug:pfkey_sa_build: memory allocation failed
pfkey_lib_debug:pfkey_lifetime_build:
pfkey_lib_debug:pfkey_lifetime_build:
pfkey_lib_debug:pfkey_lifetime_build: why is pfkey_lifetime already pointing to something?
pfkey_lib_debug:pfkey_lifetime_build: why is pfkey_lifetime already pointing to something?
pfkey_lib_debug:pfkey_lifetime_build: invalid exttype=%d.
pfkey_lib_debug:pfkey_lifetime_build: memory allocation failed
pfkey_lib_debug:pfkey_lifetime_build: memory allocation failed
pfkey_lib_debug:pfkey_address_build: exttype=%d proto=%d prefixlen=%d
pfkey_lib_debug:pfkey_address_build: why is pfkey_address already pointing to something?
pfkey_lib_debug:pfkey_address_build: address is NULL
pfkey_lib_debug:pfkey_address_build: unrecognised ext_type=%d.
pfkey_lib_debug:pfkey_address_build: found address family AF_INET.
pfkey_lib_debug:pfkey_address_build: found address family AF_INET.
pfkey_lib_debug:pfkey_address_build: found address family AF_INET6.
pfkey_lib_debug:pfkey_address_build: found address family AF_INET6.
pfkey_lib_debug:pfkey_address_build: address->sa_family=%d not supported.
pfkey_lib_debug:pfkey_address_build: found address=%s.
pfkey_lib_debug:pfkey_address_build: address prefixes not supported yet.
pfkey_lib_debug:pfkey_address_build: successful created len: %d.
pfkey_lib_debug:pfkey_key_build:
pfkey_lib_debug:pfkey_key_build:
pfkey_lib_debug:pfkey_key_build: why is pfkey_key already pointing to something?
pfkey_lib_debug:pfkey_key_build: key_bits is zero, it must be non-zero.
pfkey_lib_debug:pfkey_key_build: unsupported extension type=%d.
pfkey_lib_debug:pfkey_key_build: memory allocation failed
pfkey_lib_debug:pfkey_ident_build:
pfkey_lib_debug:pfkey_ident_build:
pfkey_lib_debug:pfkey_ident_build: why is pfkey_ident already pointing to something?
pfkey_lib_debug:pfkey_ident_build: unsupported extension type=%d.
pfkey_lib_debug:pfkey_ident_build: ident_type must be non-zero.
pfkey_lib_debug:pfkey_ident_build: identtype=%d out of range.
pfkey_lib_debug:pfkey_ident_build: string required to allocate size of extension.
pfkey_lib_debug:pfkey_ident_build: memory allocation failed
pfkey_lib_debug:pfkey_sens_build:
pfkey_lib_debug:pfkey_sens_build:
pfkey_lib_debug:pfkey_sens_build: why is pfkey_sens already pointing to something?
pfkey_lib_debug:pfkey_sens_build: Sorry, I can't build exttype=%d yet.
pfkey_lib_debug:pfkey_prop_build:
pfkey_lib_debug:pfkey_prop_build:
pfkey_lib_debug:pfkey_prop_build: why is pfkey_prop already pointing to something?
pfkey_lib_debug:pfkey_prop_build: memory allocation failed
pfkey_lib_debug:pfkey_supported_build: why is pfkey_supported already pointing to something?
pfkey_lib_debug:pfkey_supported_build: why is pfkey_supported already pointing to something?
pfkey_lib_debug:pfkey_supported_build: unsupported extension type=%d.
pfkey_lib_debug:pfkey_supported_build: memory allocation failed
pfkey_lib_debug:pfkey_supported_build: memory allocation failed
pfkey_lib_debug:pfkey_spirange_build: why is pfkey_spirange already pointing to something?
pfkey_lib_debug:pfkey_spirange_build: why is pfkey_spirange already pointing to something?
pfkey_lib_debug:pfkey_spirange_build: minspi=%08x must be < maxspi=%08x.
pfkey_lib_debug:pfkey_spirange_build: minspi=%08x must be > 255.
pfkey_lib_debug:pfkey_spirange_build: memory allocation failed
pfkey_lib_debug:pfkey_spirange_build: memory allocation failed
pfkey_lib_debug:pfkey_x_kmprivate_build: why is pfkey_x_kmprivate already pointing to something?
pfkey_lib_debug:pfkey_x_kmprivate_build: why is pfkey_x_kmprivate already pointing to something?
pfkey_lib_debug:pfkey_x_kmprivate_build: Sorry, I can't build exttype=%d yet.
pfkey_lib_debug:pfkey_x_satype_build:
pfkey_lib_debug:pfkey_x_satype_build:
pfkey_lib_debug:pfkey_x_satype_build: why is pfkey_x_satype already pointing to something?
pfkey_lib_debug:pfkey_x_satype_build: SA type not set, must be non-zero.
pfkey_lib_debug:pfkey_x_satype_build: satype %d > max %d
pfkey_lib_debug:pfkey_x_satype_build: memory allocation failed
pfkey_lib_debug:pfkey_x_debug_build:
pfkey_lib_debug:pfkey_x_debug_build:
pfkey_lib_debug:pfkey_x_debug_build: why is pfkey_x_debug already pointing to something?
pfkey_lib_debug:pfkey_x_debug_build: tunnel=%x netlink=%x xform=%x eroute=%x spi=%x radij=%x esp=%x ah=%x rcv=%x pfkey=%x ipcomp=%x verbose=%x?
pfkey_lib_debug:pfkey_x_debug_build: memory allocation failed
pfkey_lib_debug:pfkey_x_nat_t_type_build:
pfkey_lib_debug:pfkey_x_nat_t_type_build:
pfkey_lib_debug:pfkey_x_nat_t_type_build: why is pfkey_x_nat_t_type already pointing to something?
pfkey_lib_debug:pfkey_x_nat_t_type_build: why is pfkey_x_nat_t_type already pointing to something?
pfkey_lib_debug:pfkey_x_nat_t_type_build: type=%d
pfkey_lib_debug:pfkey_x_nat_t_type_build: memory allocation failed
pfkey_lib_debug:pfkey_x_nat_t_type_build: memory allocation failed
pfkey_lib_debug:pfkey_x_nat_t_port_build:
pfkey_lib_debug:pfkey_x_nat_t_port_build:
pfkey_lib_debug:pfkey_x_nat_t_port_build: why is pfkey_x_nat_t_port already pointing to something?
pfkey_lib_debug:pfkey_x_nat_t_port_build: why is pfkey_x_nat_t_port already pointing to something?
pfkey_lib_debug:pfkey_nat_t_port_build: unrecognised ext_type=%d.
pfkey_lib_debug:pfkey_x_nat_t_port_build: ext=%d, port=%d
pfkey_lib_debug:pfkey_x_nat_t_port_build: memory allocation failed
pfkey_lib_debug:pfkey_x_nat_t_port_build: memory allocation failed
pfkey_lib_debug:pfkey_x_protocol_build: protocol=%u
pfkey_lib_debug:pfkey_x_protocol_build: bogus protocol pointer
pfkey_lib_debug:pfkey_build: memory allocation failed
pfkey_lib_debug:pfkey_msg_build: extensions[0] must be specified (struct sadb_msg).
pfkey_lib_debug:pfkey_msg_build: extensions[%d] needs %zu bytes
pfkey_lib_debug:pfkey_msg_build: memory allocation failed
pfkey_lib_debug:pfkey_msg_build: pfkey_msg=0p%p allocated %lu bytes, &(extensions[0])=0p%p
pfkey_lib_debug:ext type %d not permitted for %d/%d (build)
pfkey_lib_debug:pfkey_msg_build: copying %lu bytes from extensions[%u] (type=%d)
pfkey_lib_debug:pfkey_msg_build: Trouble parsing newly built pfkey message, error=%d.
pfkey_lib_debug:extensions for op: %d seen: %08llx required %08llx, missing: %08llx
pfkey_lib_debug:pfkey_ident_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_ident_parse: ident_type=%d out of range, must be less than %d.
pfkey_lib_debug:pfkey_ident_parse: res=%d, must be zero.
pfkey_lib_debug:pfkey_ident_parse: string padding must be zero, last is 0x%02x.
pfkey_lib_debug:pfkey_key_parse: expecting extension type IDENTITY_SRC or IDENTITY_DST, got %d.
pfkey_lib_debug:pfkey_prop_parse: size wrong ext_len=%d, prop_ext_len=%d comb_ext_len=%d.
pfkey_lib_debug:pfkey_prop_parse: replay window size: %d -- must be 0 <= size <= 64
pfkey_lib_debug:pfkey_prop_parse: res[%d]=%d, must be zero.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_auth=%d > K_SADB_AALG_MAX=%d.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_auth_minbits=0, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_auth_maxbits=0, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_auth_minbits=%d > maxbits=%d, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_auth_minbits=%d != 0, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_auth_maxbits=%d != 0, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_encrypt_minbits=0, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_encrypt_maxbits=0, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_encrypt_minbits=%d > maxbits=%d, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_encrypt_minbits=%d != 0, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_encrypt_maxbits=%d != 0, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_soft_allocations=%d > hard_allocations=%d, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_soft_bytes=%Ld > hard_bytes=%Ld, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_soft_addtime=%Ld > hard_addtime=%Ld, fatal.
pfkey_lib_debug:pfkey_prop_parse: pfkey_comb[%d]->sadb_comb_soft_usetime=%Ld > hard_usetime=%Ld, fatal.
pfkey_lib_debug:pfkey_supported_parse: size wrong ext_len=%d, supported_ext_len=%d alg_ext_len=%d.
pfkey_lib_debug:pfkey_supported_parse: res=%d, must be zero.
pfkey_lib_debug:pfkey_supported_parse: alg[%d], id=%d, ivlen=%d, minbits=%d, maxbits=%d, res=%d, must be zero.
pfkey_lib_debug:pfkey_supported_parse: alg[%d], alg_id=%d > K_SADB_AALG_MAX=%d, fatal.
pfkey_lib_debug:pfkey_supported_parse: alg[%d], alg_id=%d > K_SADB_EALG_MAX=%d, fatal.
pfkey_lib_debug:pfkey_x_outif_parse:
pfkey_lib_debug:pfkey_x_outif_parse:
pfkey_lib_debug:pfkey_x_outif_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_x_saref_parse:
pfkey_lib_debug:pfkey_x_saref_parse:
pfkey_lib_debug:pfkey_x_saref_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_key_parse: NULL pointer passed in.
pfkey_lib_debug:pfkey_key_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_key_parse: key length set to zero, must be non-zero.
pfkey_lib_debug:pfkey_key_parse: key length=%d does not agree with extension length=%d.
pfkey_lib_debug:pfkey_key_parse: res=%d, must be zero.
pfkey_lib_debug:pfkey_key_parse: expecting extension type AUTH or ENCRYPT, got %d.
pfkey_lib_debug:pfkey_key_parse: success, found len=%d exttype=%d(%s) bits=%d reserved=%d.
pfkey_lib_debug:pfkey_lifetime_parse:enter
pfkey_lib_debug:pfkey_lifetime_parse:enter
pfkey_lib_debug:pfkey_lifetime_parse: NULL pointer passed in.
pfkey_lib_debug:pfkey_lifetime_parse: NULL pointer passed in.
pfkey_lib_debug:pfkey_lifetime_parse: length wrong pfkey_lifetime->sadb_lifetime_len=%d sizeof(struct sadb_lifetime)=%d.
pfkey_lib_debug:pfkey_lifetime_parse: unexpected ext_type=%d.
pfkey_lib_debug:pfkey_lifetime_parse: life_type=%d(%s) alloc=%u bytes=%u add=%u use=%u.
pfkey_lib_debug:pfkey_sa_parse: NULL pointer passed in.
pfkey_lib_debug:pfkey_sa_parse: length wrong pfkey_sa->sadb_sa_len=%d sizeof(struct sadb_sa)=%d.
pfkey_lib_debug:pfkey_sa_parse: pfkey_sa->sadb_sa_auth=%d > K_SADB_AALG_MAX=%d.
pfkey_lib_debug:pfkey_sa_parse: state=%d exceeds MAX=%d.
pfkey_lib_debug:pfkey_sa_parse: state=%d is DEAD=%d.
pfkey_lib_debug:pfkey_sa_parse: replay window size: %d -- must be 0 <= size <= 64
pfkey_lib_debug:pfkey_sa_parse: unknown exttype=%d, expecting K_SADB_EXT_SA=%d or K_SADB_X_EXT_SA2=%d.
pfkey_lib_debug:pfkey_sa_parse: SAref=%d must be (SAref == IPSEC_SAREF_NULL(%d) || SAref < IPSEC_SA_REF_TABLE_NUM_ENTRIES(%d)).
pfkey_lib_debug:pfkey_sa_parse: successfully found len=%d exttype=%d(%s) spi=%08lx replay=%d state=%d auth=%d encrypt=%d flags=%d ref=%d.
pfkey_lib_debug:pfkey_address_parse: NULL pointer passed in.
pfkey_lib_debug:pfkey_address_parse: size wrong 1 ext_len=%d, adr_ext_len=%d, saddr_len=%d.
pfkey_lib_debug:pfkey_address_parse: res=%d, must be zero.
pfkey_lib_debug:pfkey_address_parse: unexpected ext_type=%d.
pfkey_lib_debug:pfkey_address_parse: found exttype=%u(%s) family=%d(AF_INET) address=%s proto=%u port=%u.
pfkey_lib_debug:pfkey_address_parse: found exttype=%u(%s) family=%d(AF_INET6) address=%s proto=%u port=%u.
pfkey_lib_debug:pfkey_address_parse: s->sa_family=%d not supported.
pfkey_lib_debug:pfkey_address_parse: size wrong 2 ext_len=%d, adr_ext_len=%d, saddr_len=%d.
pfkey_lib_debug:pfkey_address_parse: address prefixes not supported yet.
pfkey_lib_debug:pfkey_address_parse: successful.
pfkey_lib_debug:pfkey_address_parse: successful.
pfkey_lib_debug:pfkey_sens_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_sens_parse: Sorry, I can't parse exttype=%d yet.
pfkey_lib_debug:pfkey_x_kmprivate_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_x_kmprivate_parse: reserved=%d must be set to zero.
pfkey_lib_debug:pfkey_x_kmprivate_parse: Sorry, I can't parse exttype=%d yet.
pfkey_lib_debug:pfkey_x_debug_parse: enter
pfkey_lib_debug:pfkey_x_debug_parse: enter
pfkey_lib_debug:pfkey_x_debug_parse: reserved[%d]=%d must be set to zero.
pfkey_lib_debug:pfkey_x_debug_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_x_protocol_parse:
pfkey_lib_debug:pfkey_x_protocol_parse:
pfkey_lib_debug:pfkey_x_protocol_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_protocol_parse: res=%d, must be zero.
pfkey_lib_debug:pfkey_spirange_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_spirange_parse: reserved=%d must be set to zero.
pfkey_lib_debug:pfkey_spirange_parse: minspi=%08x must be < maxspi=%08x.
pfkey_lib_debug:pfkey_spirange_parse: minspi=%08x must be > 255.
pfkey_lib_debug:pfkey_spirange_parse: ext_len=%u ext_type=%u(%s) min=%u max=%u res=%u.
pfkey_lib_debug:pfkey_x_satype_parse: enter
pfkey_lib_debug:pfkey_x_satype_parse: enter
pfkey_lib_debug:pfkey_x_satype_parse: size wrong ext_len=%d, key_ext_len=%d.
pfkey_lib_debug:pfkey_x_satype_parse: satype is zero, must be non-zero.
pfkey_lib_debug:pfkey_x_satype_parse: satype is zero, must be non-zero.
pfkey_lib_debug:pfkey_x_satype_parse: satype %d > max %d, invalid.
pfkey_lib_debug:pfkey_x_satype_parse: proto lookup from satype=%d failed.
pfkey_lib_debug:pfkey_x_satype_parse: reserved[%d]=%d must be set to zero.
pfkey_lib_debug:pfkey_x_satype_parse: len=%u ext=%u(%s) satype=%u(%s) res=%u,%u,%u.
pfkey_lib_debug:pfkey_msg_parse: parsing message ver=%d, type=%d(%s), errno=%d, satype=%d(%s), len=%d, res=%d, seq=%d, pid=%d.
pfkey_lib_debug:pfkey_msg_parse: not PF_KEY_V2 msg, found %d, should be %d.
pfkey_lib_debug:pfkey_msg_parse: msg type not set, must be non-zero..
pfkey_lib_debug:pfkey_msg_parse: msg type=%d > max=%d.
pfkey_lib_debug:pfkey_msg_parse: satype %d conversion to proto failed for msg_type %d (%s).
pfkey_lib_debug:pfkey_msg_parse: satype %d(%s) conversion to proto gives %d for msg_type %d(%s).
pfkey_lib_debug:pfkey_msg_parse: satype is zero, must be non-zero for msg_type %d(%s).
pfkey_lib_debug:pfkey_msg_parse: errno set to %d.
pfkey_lib_debug:pfkey_msg_parse: remain=%d
pfkey_lib_debug:pfkey_msg_parse: remain %d less than ext len %d.
pfkey_lib_debug:pfkey_msg_parse: parsing ext type=%d(%s) remain=%d.
pfkey_lib_debug:pfkey_msg_parse: ext type %d(%s) invalid, K_SADB_EXT_MAX=%d.
pfkey_lib_debug:pfkey_msg_parse: ext type %d(%s) already seen.
pfkey_lib_debug:pfkey_msg_parse: ext type %d(%s) unknown, ignoring.
pfkey_lib_debug:ext type %d(%s) not permitted (parse)
pfkey_lib_debug:pfkey_msg_parse: remain=%d ext_type=%d(%s) ext_len=%d parsing ext 0p%p with parser %s.
pfkey_lib_debug:pfkey_msg_parse: extension parsing for type %d(%s) failed with error %d.
pfkey_lib_debug:pfkey_msg_parse: Extension %d(%s) parsed.
pfkey_lib_debug:pfkey_msg_parse: unexpected remainder of %d.
pfkey_lib_debug:required extensions missing.seen=%08llx.
pfkey_lib_debug:pfkey_msg_parse: required SADB_X_DELFLOW extensions missing: either %16llx must be present or %16llx must be present with SADB_X_SAFLAGS_CLEARFLOW set.
pfkey_lib_debug:pfkey_msg_parse: state=%d for add or update should be MATURE=%d.
pfkey_lib_debug:pfkey_msg_parse: auth alg is zero, must be non-zero for AH SAs.
pfkey_lib_debug:pfkey_msg_parse: AH handed encalg=%d, must be zero.
pfkey_lib_debug:pfkey_msg_parse: encrypt alg=%d is zero, must be non-zero for ESP=%d SAs.
pfkey_lib_debug:pfkey_msg_parse: ESP handed encNULL+authNONE, illegal combination.
pfkey_lib_debug:pfkey_msg_parse: encrypt alg=%d is zero, must be non-zero for COMP=%d SAs.
pfkey_lib_debug:pfkey_msg_parse: COMP handed auth=%d, must be zero.
pfkey_lib_debug:pfkey_msg_parse: spi=%08x must be > 255.
IPIP
COMP
UNKNOWN
pfkey_sa_parse
pfkey_lifetime_parse
pfkey_address_parse
pfkey_key_parse
pfkey_ident_parse
pfkey_sens_parse
pfkey_prop_parse
pfkey_supported_parse
pfkey_spirange_parse
pfkey_x_kmprivate_parse
pfkey_x_satype_parse
pfkey_x_ext_debug_parse
pfkey_x_ext_protocol_parse
pfkey_x_ext_nat_t_type_parse
pfkey_x_ext_nat_t_port_parse
pfkey_x_ext_outif_parse
pfkey_x_ext_saref_parse
unknown-ext
unknown-sadb-type
reserved
lifetime-current
lifetime-hard
lifetime-soft
source-address
destination-address
proxy-address
authentication-key
cipher-key
source-identity
destination-identity
sensitivity-label
proposal
supported-auth
supported-cipher
spi-range
X-kmpprivate
X-satype2
X-security-association
X-destination-address2
X-source-flow-address
X-dest-flow-address
X-source-mask
X-dest-mask
X-set-debug
X-ext-protocol
X-NAT-T-type
X-NAT-T-sport
X-NAT-T-dport
X-NAT-T-OA
X-plumbif
X-saref
getspi
update
acquire
register
expire
flush
dump
x-promisc
x-pchange
x-groupsa
x-addflow(eroute)
x-delflow(eroute)
x-debug
x-natt-new-mapping
x-plumbif
x-unplumbif
:0:0:
<invalid>
0123456789abcdef
;*3$"
use ipsec --version instead
tncfg.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.note.ABI-tag
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.interp
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.bss
.init
.rela.plt
.got.plt
.got
.text
.fini_array
.init_array
