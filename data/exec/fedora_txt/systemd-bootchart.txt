tdxq
td@{
/lib/ld-linux.so.2
Vw})`
__sprintf_chk
GLIBC_2.3.4
libc.so.6
fscanf
GLIBC_2.0
sscanf
strcasecmp
fputc
__fprintf_chk
mempcpy
GLIBC_2.1
memset
getauxval
GLIBC_2.16
calloc
strftime
strspn
memchr
abort
strcspn
fork
libpthread.so.0
strncpy
__vsnprintf_chk
strncmp
execl
__printf_chk
__gcc_personality_v0
GCC_3.3.1
libgcc_s.so.1
__umoddi3
__udivdi3
_Unwind_Resume
GCC_3.0
strstr
__snprintf_chk
strcmp
free
stpcpy
memcmp
open64
GLIBC_2.2
optarg
__stack_chk_fail
GLIBC_2.4
realloc
getopt_long
opterr
strcpy
malloc
strchr
___tls_get_addr
GLIBC_2.3
ld-linux.so.2
fwrite
program_invocation_short_name
getpid
_end
__bss_start
_edata
closedir
__errno_location
strlen
__cxa_finalize
GLIBC_2.1.3
__libc_start_main
fdopendir
pread64
pclose
readdir64
popen
__read_chk
openat64
clock_gettime
librt.so.1
feof
strerror_r
__strdup
dirfd
uname
rewind
fread
strtol
fgets
setrlimit64
fopen64
strtoll
sigfillset
close
setvbuf
nanosleep
fdopen
time
localtime
read
sigaction
rewinddir
opendir
getgrgid
getgrnam
getpwnam
getpwuid
__strndup
fileno
statfs64
basename
ferror
sysconf
timerfd_create
GLIBC_2.8
_IO_putc
usleep
stdout
stdin
__fxstat64
umask
fflush
__ctype_b_loc
syscall
mkostemp64
GLIBC_2.7
fcntl
fnmatch
GLIBC_2.2.3
qsort
fclose
getrlimit64
__rawmemchr
fchmod
chmod
canonicalize_file_name
rename
unlink
ioctl
getpeername
inet_ntop
getsockopt
inet_pton
in6addr_any
write
poll
sigemptyset
ppoll
rand
srand
__asprintf_chk
getppid
strtoul
prctl
getuid
__vasprintf_chk
newlocale
strtod_l
freelocale
connect
socket
setsockopt
sendmsg
parse_printf_format
dirname
writev
__xstat64
isatty
getenv
access
__lxstat64
_Jv_RegisterClasses
_ITM_registerTMCloneTable
_ITM_deregisterTMCloneTable
_fini
_init
__gmon_start__
_IO_stdin_used
a_&	
PPQW
[^_]
[^_]
\$|;
p$t	
D$8u<
0<	w
D$|+
D$,@
t!S1
D$H+
9t$P
\$X1
D$H+
9t$P
9t$P
9t$P
l$Hf
[^_]
D$Hu
D$8)
D$8t
UWVS
[^_]
d$L1
[^_]
d$L[1
UWVS
d$<1
[^_]
d$01
d$01
;L$@
d$,[^_]
;k(t};k,u
d$,[^_]
|$$e
D$\1
uesp
emos
aren
modn
sety
arod5bdet
egyl
3\$H
3l$P
3l$,
\$\e3
d$l[^_]
T$He
D$\1
T$\e3
d$l[^_]
d$,1
[^_]
[^_]
[^_]
d$,[
d$,[^_]
UWVS
l$@e
d$,[^_]
d$,[^_]
d$,[^_]
UWVS
d$L[^_]
T$8w!
UWVS
d$,[^_]
UWVS
[^_]
D$,1
D$,e3
d$<[^_]
UWVS
[^_]
[^_]
l$T1
3\$T
3\$D
T$D1
3\$T
D$H1
|$(1
E$3E
t$T1
3D$T
T$D1
|$D1
|$ 1
D$@1
T$D1
|$D1
|$$1
3T$$
T$$1
3\$$
[^_]
d$,[^_]
d$,[^_]
D$,1
D$(9
L$,e3
d$<[^_]
d$,[^_]
d$,[^_]
D$,1
T$,e3
D$\1
\$\e3
d$l[^_]
[^_]
D$Tt
L$DtJ
tI~7=
[^_]
D$Xl
D$T0
D$P\
D$Lb
D$8L
D$,N
D$$r
D$Pl
D$L0
D$H\
D$Db
D$0L
D$$N
d$,[^_]
[^_]
CODE
_FUNf
do_j
ourn
al_a
ppenf
[^_]
UWVS
[^_]
d$,[^_]
[^_]
UWVS
[^_]
d$,1
:/u/
[^_]
D$,t
|$D;x
T$ht3
D$,v
D$D1
D$<t
t$ 1
9T$,w
|$<+D$,
D$49D$,
+D$,
;|$@u
|$de
t$,9
[^_]
|$de
t$,9
[^_]
D$\1
gfff
d$l[^_]
gfff
D$P)
L$@t5
|$l+t
<7+u
[^_]
D$X=
T$8e
D$fUnkn
D$jown
[^_]
T$Ot
d$([
D$Le
[^_]
[^_]
UWVS
[^_]
[^_]
[^_]
D$\1
T$\e3
d$l[^_]
<=ty
D$T1
d$$[^
D$,e
[^_]
UWV1
[^_]
L$,1
T$,e3
d$<[^_]
d$,[^_]
[^_]
UWVS
[^_]
T$+t
d$<[
[^_]
d$<[
d$<[
t$,U
[^_]
A(knN
/etc/systemd/bootchart.conf.d
/run/systemd/bootchart.conf.d
/usr/local/lib/systemd/bootchart.conf.d
/usr/lib/systemd/bootchart.conf.d
Bootchart
Samples
Frequency
Relative
Filter
Output
Init
PlotMemoryUsage
PlotEntropyGraph
ScaleX
ScaleY
ControlGroup
PerCPU
src/basic/mempool.c
mp->at_least > 0
src/basic/util.c
r > 0
src/basic/hashmap.c
Unknown hashmap type
/etc/systemd/bootchart.conf
src/bootchart/bootchart.c
/usr/lib/systemd/systemd
/run/log
Unhandled option code.
erpf:n:o:i:FCchx:y:
Frequency needs to be > 0
/sys
PRETTY_NAME
/etc/os-release
/usr/lib/os-release
/proc
vmstat
src/bootchart/store.c
pgpgin
pgpgout
%s %s
/proc/schedstat
Unable to read schedstat: %m
%d/sched
%s %*s %*s
%*s %*s %s
%d/stat
%*s %*s %*s %i
%d/schedstat
%s %s %*s
%i/task
%i/schedstat
%d/smaps
nanosleep() failed: %m
_item
%Y%m%d-%H%M
%s/bootchart-%s.svg
Error generating svg file: %m
systemd-bootchart wrote %s
BOOTCHART_FILE=
PRIORITY=7
MESSAGE=Bootchart created: 
BOOTCHART=
Failed to send bootchart: %m
freq
samples
output
init
no-filter
cmdline
control-group
help
scale-x
scale-y
entropy
per-cpu
src/bootchart/svg.c
head
<!-- hz="%f" n="%d" -->
<!-- x="%f" y="%f" -->
<!-- rel="%d" f="%d" -->
<!-- p="%d" e="%d" -->
<!-- o="%s" i="%s" -->
//    line.sec1  { }
    ]]>
   </style>
</defs>
</g>
<!-- Process graph -->
<!-- entropy pool graph -->
rgb(64,64,64)
<!-- %s [%d] pss=
 -->
</svg>
rgb(255,32,32)
rgb(32,192,192)
rgb(255,128,32)
rgb(128,32,192)
rgb(255,255,32)
rgb(192,32,128)
rgb(32,255,32)
rgb(255,64,32)
rgb(32,32,255)
rgb(255,192,32)
rgb(192,32,192)
rgb(32,192,32)
Invalid index
src/shared/conf-parser.c
table
lvalue
func
ltype
data
filename
rvalue
true
false
double
from != to
src/basic/fileio.c
src/basic/fd-util.c
fclose_nointr(f) != EBADF
line
close_nointr(fd) != -EBADF
src/basic/log.c
src/basic/utf8.c
src/basic/time-util.c
src/basic/string-util.c
postfix
src/basic/siphash24.c
src/basic/path-util.c
lost+found
aquota.user
aquota.group
.rpmnew
.rpmsave
.rpmorig
.dpkg-old
.dpkg-new
.dpkg-tmp
.dpkg-dist
.dpkg-bak
.dpkg-backup
.dpkg-remove
.swp
src/basic/parse-util.c
ret_d
ret_lli
ret_i
Out of memory.
ERRNO=
CODE_FUNCTION=
CODE_LINE=
CODE_FILE=
MESSAGE=
_k < ELEMENTSOF(_argtypes)
buffer
UNIT=%s
USER_UNIT=%s
MESSAGE=[%s:%u] %s
CONFIG_LINE=%u
CONFIG_FILE=%s
/dev/shm
/systemd-tmp-XXXXXX
src/journal/journal-send.c
SYSLOG_IDENTIFIER
src/basic/memfd-util.c
SYSLOG_IDENTIFIER=
CODE_LINE=297
contents
%d/cmdline
src/basic/conf-files.c
path
.conf
idx < n_buckets(h)
n_rehashed == n_entries(h)
n_entries(h) < n_buckets(h)
dmesg
<!-- initcall -->
Unknown
/proc/cmdline
Unable to read cmdline: %m
root=/dev/
/sys/block/%s/device/model
Error getting uname info
%a, %d %b %Y %H:%M:%S %z
/proc/cpuinfo
model name
%.03fs
</text>
Not detected
src/basic/fs-util.c
line > 0
.include 
k > 0
Invalid section header '%s'
Missing '='.
Failed to parse file '%s': %m
/dev/urandom
src/basic/alloc-util.c
allocated
name=systemd
/proc/self/cgroup
src/basic/cgroup-util.c
pid >= 0
/sys/fs/cgroup/
/proc/%i/cgroup
/dev/console
src/basic/io-util.c
fd >= 0
(size_t) k <= nbytes
!h->has_indirect
!h->n_direct_entries
e->p.b.key == i->next_key
i->idx > 0
e->key == i->next_key
mp->tile_size >= sizeof(void*)
failed to parse --freq/-f argument '%s': %m
failed to parse --samples/-n argument '%s': %m
failed to parse --scale-x/-x argument '%s': %m
failed to parse --scale-y/-y argument '%s': %m
Usage: %s [OPTIONS]
Options:
  -r --rel             Record time relative to recording
  -f --freq=FREQ       Sample frequency [%g]
  -n --samples=N       Stop sampling at [%d] samples
  -x --scale-x=N       Scale the graph horizontally [%g] 
  -y --scale-y=N       Scale the graph vertically [%g] 
  -p --pss             Enable PSS graph (CPU intensive)
  -e --entropy         Enable the entropy_avail graph
  -o --output=PATH     Path to output files [%s]
  -i --init=PATH       Path to init executable [%s]
  -F --no-filter       Disable filtering of unimportant or ephemeral processes
  -C --cmdline         Display full command lines with arguments
  -c --control-group   Display process control group
     --per-cpu         Draw each CPU utilization and wait bar also
  -h --help            Display this message
See bootchart.conf for more information.
Failed to setup graph start time.
The system uptime probably includes time that the system was suspended. Use --rel to bypass this issue.
Failed to open /proc/vmstat: %m
%s %*s %*s %*s %*s %*s %*s %s %s
sys/kernel/random/entropy_avail
Failed to open /proc/sys/kernel/random/entropy_avail: %m
Error opening output file '%s': %m
MESSAGE_ID=9f26aa562cf440c2b16c773d0479b518
Failed to open bootchart data "%s": %m
Failed to read bootchart data: %m
systemd-bootchart: sample time overrun %i times
<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg width="%.0fpx" height="%.0fpx" version="1.1" 
xmlns="http://www.w3.org/2000/svg">
<!-- This file is a bootchart SVG file. It is best rendered in a browser -->
<!-- such as Chrome, Chromium, or Firefox. Other applications that       -->
<!-- render these files properly but more slowly are ImageMagick, gimp,  -->
<!-- inkscape, etc. To display the files on your system, just point      -->
<!-- your browser to file:///run/log/ and click. This bootchart was      -->
<!-- generated by bootchart version %s, running with options:  -->
<defs>
  <style type="text/css">
    <![CDATA[
      rect       { stroke-width: 1; }
      rect.bg    { fill: rgb(255,255,255); }
      rect.cpu   { fill: rgb(64,64,240); stroke-width: 0; fill-opacity: 0.7; }
      rect.wait  { fill: rgb(240,240,0); stroke-width: 0; fill-opacity: 0.7; }
      rect.bi    { fill: rgb(240,128,128); stroke-width: 0; fill-opacity: 0.7; }
      rect.bo    { fill: rgb(192,64,64); stroke-width: 0; fill-opacity: 0.7; }
      rect.ps    { fill: rgb(192,192,192); stroke: rgb(128,128,128); fill-opacity: 0.7; }
      rect.krnl  { fill: rgb(240,240,0); stroke: rgb(128,128,128); fill-opacity: 0.7; }
      rect.box   { fill: rgb(240,240,240); stroke: rgb(192,192,192); }
      rect.clrw  { stroke-width: 0; fill-opacity: 0.7;}
      line       { stroke: rgb(64,64,64); stroke-width: 1; }
      line.sec5  { stroke-width: 2; }
      line.sec01 { stroke: rgb(224,224,224); stroke-width: 1; }
      line.dot   { stroke-dasharray: 2 4; }
      line.idle  { stroke: rgb(64,64,64); stroke-dasharray: 10 6; stroke-opacity: 0.7; }
      .run       { font-size: 8; font-style: italic; }
      text       { font-family: Verdana, Helvetica; font-size: 10; }
      text.sec   { font-size: 8; }
      text.t1    { font-size: 24; }
      text.t2    { font-size: 12; }
      text.idle  { font-size: 18; }
<rect class="bg" width="100%%" height="100%%" />
<g transform="translate(10,400)">
<!-- IO utilization graph - In -->
<text class="t2" x="5" y="-15">IO utilization - read</text>
<rect class="bi" x="%.03f" y="%.03f" width="%.03f" height="%.03f" />
  <text class="sec" x="%.03f" y="%.03f">%0.2fmb/sec</text>
<g transform="translate(10,%.03f)">
<!-- IO utilization graph - out -->
<text class="t2" x="5" y="-15">IO utilization - write</text>
<rect class="bo" x="%.03f" y="%.03f" width="%.03f" height="%.03f" />
<!-- CPU utilization graph -->
<text class="t2" x="5" y="-15">CPU[overall] utilization</text>
<text class="t2" x="5" y="-15">CPU[%d] utilization</text>
<rect class="cpu" x="%.03f" y="%.03f" width="%.03f" height="%.03f" />
<!-- Wait time aggregation box -->
<text class="t2" x="5" y="-15">CPU[overall] wait</text>
<text class="t2" x="5" y="-15">CPU[%d] wait</text>
<rect class="wait" x="%.03f" y="%.03f" width="%.03f" height="%.03f" />
<text class="t2" x="5" y="-15">Processes</text>
<!-- %s [%i] ppid=%i runtime=%.03fs -->
  <line class="dot" x1="%.03f" y1="%.03f" x2="%.03f" y2="%.03f" />
  <rect class="ps" x="%.03f" y="%.03f" width="%.03f" height="%.03f" />
    <rect class="wait" x="%.03f" y="%.03f" width="%.03f" height="%.03f" />
    <rect class="cpu" x="%.03f" y="%.03f" width="%.03f" height="%.03f" />
  <text x="%.03f" y="%.03f"><![CDATA[%s]]> [%i]<tspan class="run">%.03fs</tspan> %s</text>
<!-- idle detected at %.03f seconds -->
<line class="idle" x1="%.03f" y1="%.03f" x2="%.03f" y2="%.03f" />
<text class="idle" x="%.03f" y="%.03f">%.01fs</text>
<g transform="translate(10,  0)">
<g transform="translate(10,200)">
<text class="t2" x="5" y="-15">Entropy pool size</text>
<!-- Pss memory size graph -->
  <text class="t2" x="5" y="-15">Memory allocation - Pss</text>
  <line class="sec01" x1="%.03f" y1="%.0f" x2="%.03f" y2="%.0f"/>
  <text class="sec" x="%.03f" y="%.0f">%dM</text>
    <rect class="clrw" style="fill: %s" x="%.03f" y="%.03f" width="%.03f" height="%.03f" />
  <text x="%.03f" y="%.03f"><![CDATA[%s]]> [%i]</text>
<g transform="translate(410,200)">
<!-- PSS map - csv format -->
String is not UTF-8 clean, ignoring assignment: %s
Not an absolute path, ignoring: %s
Failed to parse boolean value, ignoring: %s
Failed to parse %s value, ignoring: %s
%s:%u: invalid UTF-8 in key '%s', ignoring.
%s:%u: invalid UTF-8 value for key %s: '%s', ignoring.
xsprintf: buffer[] must be big enough
Code should not be reached '%s' at %s:%u, function %s(). Aborting.
Assertion '%s' failed at %s:%u, function %s(). Aborting.
clock_gettime(map_clock_id(clock_id), &ts) == 0
Unknown format string argument.
MESSAGE_ID=%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x
Assertion '%s' failed at %s:%u, function %s(). Ignoring.
prctl(PR_GET_NAME, (unsigned long) pr) >= 0
CODE_FILE=src/bootchart/bootchart.c
old_dibs[idx] != DIB_RAW_REHASH
old_tail->iterate_next == IDX_NIL
hashmap_put_robin_hood(h, idx, swap) == false
<text class="t2" x="20" y="0">Top PSS consumers:</text>
<text class="t3" x="20" y="%d">%dK - <![CDATA[%s]]> [%d]</text>
<text class="t2" x="20" y="0">Top CPU consumers:</text>
<text class="t3" x="20" y="%d">%3.03fs - <![CDATA[%s]]> [%d]</text>
<rect class="box" x="%.03f" y="0" width="%.03f" height="%.03f" />
  <line class="sec5" x1="%.03f" y1="0" x2="%.03f" y2="%.03f" />
  <line class="sec1" x1="%.03f" y1="0" x2="%.03f" y2="%.03f" />
  <line class="sec01" x1="%.03f" y1="0" x2="%.03f" y2="%.03f" />
  <text class="sec" x="%.03f" y="%.03f" >%.01fs</text>
<text class="t2" x="5" y="-15">Kernel init threads</text>
[%lf] initcall %s %*s %d %*s %d %*s
[%lf] initcall %s %*s %*s %d %*s %d %*s
<!-- thread="%s" time="%.3f" elapsed="%d" result="%d" -->
  <rect class="krnl" x="%.03f" y="%.03f" width="%.03f" height="%.03f" />
  <text x="%.03f" y="%.03f">%s <tspan class="run">%.03fs</tspan></text>
xsprintf: filename[] must be big enough
Error reading disk model for %s: %m
<text class="t1" x="0" y="30">Bootchart for %s - %s</text>
<text class="t2" x="20" y="50">System: %s %s %s %s</text>
<text class="t2" x="20" y="65">CPU: %s</text>
<text class="t2" x="20" y="95">Boot options: %s</text>
<text class="t2" x="20" y="80">Disk: %s</text>
<text class="t2" x="20" y="110">Build: %s</text>
<text class="t2" x="20" y="125">Log start time: %.03fs</text>
<text class="t2" x="20" y="140">Idle time: 
<text class="sec" x="20" y="155">Graph data: %.03f samples/sec, recorded %i total, dropped %i samples, %i processes, %i filtered</text>
Configuration file %s is marked executable. Please remove executable permission bits. Proceeding anyway.
Configuration file %s is marked world-writable. Please remove world writability permission bits. Proceeding anyway.
Configuration file %s is marked world-inaccessible. This has no effect as configuration data is accessible via APIs without restrictions. Proceeding anyway.
Failed to read configuration file '%s': %m
.include not allowed here. Ignoring.
Unknown lvalue '%s' in section '%s'
Failed to open configuration file '%s': %m
0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_
entry_value
page_size
mempool_alloc_tile
parse_argv
parse_argv
log_sample
main
main
MbP?
>svg_header
0123456789abcdefconfig_item_table_lookup
config_parse_int
config_parse_int
config_parse_double
config_parse_double
config_parse_bool
config_parse_bool
config_parse_path
config_parse_path
safe_close
safe_fclose
read_one_line_file
parse_env_file_push
bucket_at_virtual
bucket_move_entry
log_assert
safe_atoi
safe_atolli
safe_atod
hidden_file_allow_backup
hidden_file
siphash24_compress
endswith
truncate_nl
utf8_encoded_expected_len
utf8_encoded_to_unichar
utf8_is_valid
utf8_escape_invalid
log_struct_internal
log_dispatch
/run/systemd/journal/socket
utf8_is_printable_newline
read_full_file
do_journal_append
sd_journal_sendv_with_location
memfd_new
sd_journal_sendv
hashmap_put
base_bucket_scan
resize_buckets
hashmap_base_put_boldly
files_add
svg_title
svg_title
next_assignment
next_assignment
parse_line
parse_line
fd_warn_permissions
config_parse
config_parse
utf8_encoded_valid_unichar
greedy_realloc
cg_pid_get_path
hashmap_iterate_in_insertion_order
hashmap_iterate_in_internal_order
reset_direct_storage
hashmap_free_no_clear
loop_read
;*2$"
zPLR
/usr/lib/systemd/systemd
/run/log
gold 1.11
systemd-bootchart.debug
7zXZ
(FRl3
,T_	
W56}
ad:\D4~
Ks4bE
Nsn8
0B0*
?t'r%
,MyX{:
CpyN
h},&
O\ks
UzxK
DXA\
1(oj
xaIU
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.dynsym
.dynstr
.gnu.hash
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.gcc_except_table
.eh_frame
.eh_frame_hdr
.tdata
.tbss
.data.rel.ro.local
.jcr
.fini_array
.init_array
.dynamic
.got
.got.plt
.tm_clone_table
.data
.bss
.note.gnu.gold-version
.gnu_debuglink
.gnu_debugdata
