__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
ast_module_unregister
ast_custom_function_unregister
strchr
ast_log
ast_extension_state
__ast_custom_function_register
ast_module_register
ast_unregister_file_version
ast_register_file_version
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
GLIBC_2.2.5
ATSubH
=o	 
=W	 
[]A\A]
[]A\A]
[]A\A]
fff.
=i	 
EXTENSION_STATE requires an extension
Gets an extension's state in the dialplan
This paragraph is copyright (c) 2006 by Digium, Inc. In order for your module to load, it must return this key via a function called "key".  Any code which includes this paragraph must be licensed under the GNU General Public License version 2 or later (at your option).  In addition to Digium's general reservations of rights, Digium expressly reserves the right to allow other parties to license this paragraph under different terms. Any use of Digium, Inc. trademarks or logos (including "Asterisk" or "Digium") without express written permission of Digium, Inc. is prohibited.
  The EXTENSION_STATE function can be used to retrieve the state from any
hinted extension.  For example:
   NoOp(1234@default has state ${EXTENSION_STATE(1234)})
   NoOp(4567@home has state ${EXTENSION_STATE(4567@home)})
  The possible values returned by this function are:
UNKNOWN | NOT_INUSE | INUSE | BUSY | INVALID | UNAVAILABLE | RINGING
RINGINUSE | HOLDINUSE | ONHOLD
EXTENSION_STATE(extension[@context])
func_extstate.c
default
BUSY
UNAVAILABLE
RINGING
RINGINUSE
HOLDINUSE
ONHOLD
NOT_INUSE
UNKNOWN
$Revision: 89333 $
func_extstate
EXTENSION_STATE
Get an extension's state
extstate_read
a9c98e5d177805051735cb5b0b16b0a0
func_extstate.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
