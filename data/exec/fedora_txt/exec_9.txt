&mB]q
wz?n
^hme
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
exec_search_color
weechat_exec_plugin
exec_color_string
exec_search_by_id
strtol
exec_cmds
strcmp
exec_add
last_exec_cmd
malloc
exec_cmds_count
exec_decode_color
strdup
exec_display_line
strstr
strlen
__snprintf_chk
exec_concat_output
realloc
memcpy
strchr
exec_end_command
exec_config_command_purge_delay
exec_timer_delete_cb
exec_process_cb
exec_free
exec_free_all
exec_print_log
exec_debug_dump_cb
weechat_plugin_init
exec_command_init
exec_config_init
exec_config_read
exec_completion_init
exec_buffer_set_callbacks
weechat_plugin_end
exec_config_write
exec_config_free
weechat_plugin_priority
weechat_plugin_license
weechat_plugin_version
weechat_plugin_author
weechat_plugin_description
weechat_plugin_api_version
weechat_plugin_name
exec_buffer_close_cb
exec_buffer_input_cb
exec_command_run
exec_buffer_new
exec_command_list
exec_config_color_flag_finished
exec_config_color_flag_running
localtime
strftime
exec_command_search_running_id
exec_command_parse_options
strcat
exec_config_cmd_options
exec_config_cmd_num_options
exec_command_exec
exec_completion_commands_ids_cb
exec_config_change_command_default_options
exec_config_command_default_options
exec_config_reload_cb
exec_config_file
libc.so.6
__stack_chk_fail
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.0
GLIBC_2.3.4
UWVS
[^_]
UWVS
[^_]
[^_]
RWQP
UWVS
[^_]
6Pj j
D$ P
D$(P
v8Pj j
t$ j
v8Pj j
UWVS
,[^_]
t$TP
,[^_]
O<+D$L
L$ R
T$ P
t$TP
UWVS
D$<1
PPj 
Pj j
D$ P
D$<e3
L[^_]
t$hR
UWVS
D$Dt4
t\Wj
T$<1
[^_]
t$DV
[^_]
t$Dj
[^_]
UWVS
l[^_]
UWVS
[^_]
UWVS
[^_]
UWVS
D$$Pj
L$(V
L$$QV
,[^_]
[^_]
[^_]
t$HP
SRQj 
D$$Y
D$<Z
PHYZ
T$XR
t$`RSPj
tT+^
D$ Ph
D$LP
t$ h
D$PP
D$ Y
L$$Z
T$lR
L$hQSRP
ZYSP
[^_]
UWVS
[^_]
t$4RUPj
t$4QV1
UWVS
T$,1
;t$T
9t$T~U
9t$T
L$,e3
<[^_]
;t$T
9t$Tu
;t$T
;t$T
D$0P
;t$T
;D$T
;t$T
9t$T
t$ R
UWVS
t$,V
PPj 
HT$4
 i|$ 
[^_]
D$4u
RVPj
PH_Z
RVPj
t$xV
L$T1
t$xV
UWVS
t$$U
,[^_]
[^_]
RUPj
QUPj
t$dU
RQUP
UWVS
D$<1
T$<e3
L[^_]
 [^_
UWVS
T$PQU
T$LR
[^_]
[^_]
[^_]
irc_color_decode_ansi
stdout
stderr
$line
%s %s
%d. %s
%c%s
exec_%s,exec_cmd_%s
%d. 
%s%s
string
command
number
exec
exec_rc
[exec command (addr:0x%lx)]
***** "%s" plugin dump *****
debug_dump
--upgrade
auto
weechat
strip
%s: end of command %d ("%s"), return code: %d
%s: unexpected end of command %d ("%s")
%s: process_cb: command="%s", rc=%d, out: %d bytes, err: %d bytes
  number. . . . . . . . . . : %d
  name. . . . . . . . . . . : '%s'
  hook. . . . . . . . . . . : 0x%lx
  command . . . . . . . . . : '%s'
  pid . . . . . . . . . . . : %d
  detached. . . . . . . . . : %d
  start_time. . . . . . . . : %lld
  end_time. . . . . . . . . : %lld
  output_to_buffer. . . . . : %d
  output_to_buffer_exec_cmd : %d
  buffer_full_name. . . . . : '%s'
  line_numbers. . . . . . . : %d
  display_rc. . . . . . . . : %d
  output_line_nb. . . . . . : %d
  output_size[stdout] . . . : %d
  output[stdout]. . . . . . : '%s'
  output_size[stderr] . . . : %d
  output[stderr]. . . . . . : '%s'
  return_code . . . . . . . : %d
  pipe_command. . . . . . . : '%s'
  hsignal . . . . . . . . . : '%s'
  prev_cmd. . . . . . . . . : 0x%lx
  next_cmd. . . . . . . . . : 0x%lx
***** End of "%s" plugin dump *****
full_name
pointer
plugin_name
close_callback
input_callback
free
formatted
clear
Executed commands
title
localvar_set_type
localvar_set_no_log
time_for_each_line
input_get_unknown_commands
display
No command is running
Commands:
%dh%02d
%dm%02d
reset
chat_delimiters
%Y-%m-%d %H:%M:%S
error
-nosh
-nobg
-stdin
-nostdin
-buffer
-nocl
-nosw
-noln
-flush
-noflush
-color
-norc
-timeout
-name
-pipe
-hsignal
sh -c '
url:
arg1
arg2
detached
buffer_flush
exec.%s
exec.%d
plugin
hook
child_pid
-list
no_filter
-inclose
stdin_close
-signal
-kill
-killall
-set
-del
-all
%d commands removed
Command "%s" removed
execute external commands
  %s%s%s %d%s%s%s: %s"%s%s%s"%s (pid: %d, started %s ago)
  %s%s%s %d%s%s%s: %s"%s%s%s"%s (%s -> %s, %s)
%s%s: command id "%s" not found
%s%s: command with id "%s" is not running any more
%s%s: invalid options in option exec.command.default_options
%s: executing command: "%s%s%s"
%s%s: failed to run command "%s"
%sToo few arguments for command "%s%s%s" (help on command: /help %s)
%s%s: command with id "%s" is still running
-list || -sh|-nosh|-bg|-nobg|-stdin|-nostdin|-buffer|-l|-o|-n|-nf|-cl|-nocl|-sw|-nosw|-ln|-noln|-flush|-noflush|-color|-timeout|-name|-pipe|-hsignal|%* || -in|-inclose|-signal|-kill %(exec_commands_ids) || -killall || -set %(exec_commands_ids) stdin|stdin_close|signal || -del %(exec_commands_ids)|-all %(exec_commands_ids)|%*
   -list: list commands
     -sh: use the shell to execute the command, many commands can be piped (WARNING: use this option ONLY if all arguments are safe, see option -nosh)
   -nosh: do not use the shell to execute the command (required if the command has some unsafe data, for example the content of a message from another user) (default)
     -bg: run process in background: do not display process output neither return code (not compatible with options -o/-oc/-n/-nf/-pipe/-hsignal)
   -nobg: catch process output and display return code (default)
  -stdin: create a pipe for sending data to the process (with /exec -in/-inclose)
-nostdin: do not create a pipe for stdin (default)
 -buffer: display/send output of command on this buffer (if the buffer is not found, a new buffer with name "exec.exec.xxx" is created)
      -l: display locally output of command on buffer (default)
      -o: send output of command to the buffer without executing commands (not compatible with options -bg/-pipe/-hsignal)
     -oc: send output of command to the buffer and execute commands (lines starting with "/" or another custom command char) (not compatible with options -bg/-pipe/-hsignal)
      -n: display output of command in a new buffer (not compatible with options -bg/-pipe/-hsignal)
     -nf: display output of command in a new buffer with free content (no word-wrap, no limit on number of lines) (not compatible with options -bg/-pipe/-hsignal)
     -cl: clear the new buffer before displaying output
   -nocl: append to the new buffer without clear (default)
     -sw: switch to the output buffer (default)
   -nosw: don't switch to the output buffer
     -ln: display line numbers (default in new buffer only)
   -noln: don't display line numbers
  -flush: display output of command in real time (default)
-noflush: display output of command after its end
  -color: action on ANSI colors in output:
             ansi: keep ANSI codes as-is
             auto: convert ANSI colors to WeeChat/IRC (default)
              irc: convert ANSI colors to IRC colors
          weechat: convert ANSI colors to WeeChat colors
            strip: remove ANSI colors
     -rc: display return code (default)
   -norc: don't display return code
-timeout: set a timeout for the command (in seconds)
   -name: set a name for the command (to name it later with /exec)
   -pipe: send the output to a WeeChat/plugin command (line by line); if there are spaces in command/arguments, enclose them with double quotes; variable $line is replaced by the line (by default the line is added after the command, separated by a space) (not compatible with options -bg/-o/-oc/-n/-nf)
-hsignal: send the output as a hsignal (to be used for example in a trigger) (not compatible with options -bg/-o/-oc/-n/-nf)
 command: the command to execute; if beginning with "url:", the shell is disabled and the content of URL is downloaded and sent as output
      id: command identifier: either its number or name (if set with "-name xxx")
     -in: send text on standard input of process
-inclose: same as -in, but stdin is closed after (and text is optional: without text, the stdin is just closed)
 -signal: send a signal to the process; the signal can be an integer or one of these names: hup, int, quit, kill, term, usr1, usr2
   -kill: alias of "-signal <id> kill"
-killall: kill all running processes
    -set: set a hook property (see function hook_set in plugin API reference)
property: hook property
   value: new value for hook property
    -del: delete a terminated command
    -all: delete all terminated commands
Default options can be set in the option exec.command.default_options.
Examples:
  /exec -n ls -l /tmp
  /exec -sh -n ps xu | grep weechat
  /exec -n -norc url:http://pastebin.com/raw.php?i=xxxxxxxx
  /exec -nf -noln links -dump https://weechat.org/files/doc/devel/weechat_user.en.html
  /exec -o uptime
  /exec -pipe "/print Machine uptime:" uptime
  /exec -n tail -f /var/log/messages
  /exec -kill 0
-list || [-sh|-nosh] [-bg|-nobg] [-stdin|-nostdin] [-buffer <name>] [-l|-o|-n|-nf] [-cl|-nocl] [-sw|-nosw] [-ln|-noln] [-flush|-noflush] [-color ansi|auto|irc|weechat|strip] [-rc|-norc] [-timeout <timeout>] [-name <name>] [-pipe <command>] [-hsignal <name>] <command> || -in <id> <text> || -inclose <id> [<text>] || -signal <id> <signal> || -kill <id> || -killall || -set <id> <property> <value> || -del <id>|-all [<id>...]
sort
exec_commands_ids
ids (numbers and names) of executed commands
default_options
integer
purge_delay
lightgreen
flag_running
lightred
flag_finished
default options for command /exec (see /help exec); example: "-nosh -bg" to run all commands in background (no output), and without using the shell
delay for purging finished commands (in seconds, 0 = purge commands immediately, -1 = never purge)
text color for a running command flag in list of commands
text color for a finished command flag in list of commands
9*2$"
GPL3
bastien Helleu <flashcode@flashtux.org>
Execution of external commands in WeeChat
20180812-01
exec
3p870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3h870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3c870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3s870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3e870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3p870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3h870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3c870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3s870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3e870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3p870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3h870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3c870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3s870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3e870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3p870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3h870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3c870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3s870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3e870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3p870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3h870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3c870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3s870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3e870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
exec.so-2.3-3.fc30.i386.debug
.data
.rodata
.shstrtab
.plt.sec
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rel.dyn
.data.rel.ro
.gnu.version_r
.eh_frame_hdr
.dynstr
.gnu.build.attributes
.bss
.init
.rel.plt
.got
.text
.fini_array
.init_array
.note.gnu.property
