HpJ!)	
5.8R
|-fc
__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
plugin_reg_handoff
proto_reg_handoff_asn1
__stack_chk_fail
plugin_register
proto_register_asn1
version
g_log
g_free
strcmp
g_snprintf
asn1_open
asn1_uint32_decode
asn1_err_to_str
asn1_header_decode
asn1_string_value_decode
g_realloc
asn1_uint32_value_decode
g_malloc
g_node_new
g_node_insert_before
g_ptr_array_new
memset
fputs
fflush
fopen
__sprintf_chk
proto_register_field_array
g_ptr_array_add
g_malloc0
g_strdup
g_strdup_printf
g_node_traverse
g_node_destroy
dissector_add
dissector_delete
except_throw
__ctype_b_loc
strncpy
get_tempfile_path
proto_register_protocol
proto_register_subtree_array
prefs_register_protocol
range_convert_str
prefs_register_range_preference
prefs_register_bool_preference
get_datafile_path
prefs_register_string_preference
prefs_register_uint_preference
prefs_register_enum_preference
prefs_register_obsolete_preference
lev_limit
asn1_close
icount
tvb_length_remaining
asn1_oid_value_decode
asn1_bits_decode
asn1_int32_value_decode
asn1_bool_decode
range_foreach
range_copy
create_dissector_handle
range_convert_range
fileno
__fxstat
fread
fclose
tvb_new_real_data
tvb_length
tvb_free
memmove
__errno_location
report_open_failure
g_log_set_handler
strerror
proto_tree_add_text
proto_item_append_text
strlen
proto_tree_add_item
proto_item_set_text
proto_tree_add_item_hidden
proto_item_add_subtree
proto_item_set_len
proto_tree_add_none_format
proto_tree_add_string_format
proto_tree_add_string_hidden
proto_tree_add_bytes_format
proto_tree_add_bytes_hidden
proto_tree_add_boolean_format
proto_tree_add_boolean_hidden
proto_tree_add_uint_format
proto_tree_add_uint_hidden
check_col
except_setup_try
_setjmp
except_free
except_pop
except_rethrow
col_clear
col_add_fstr
col_add_str
g_assertion_message_expr
proto_tree_add_protocol_format
longjmp
col_append_fstr
asn1_null_decode
ep_strdup
asn1_eoc
tvb_get_guint8
asn1_octet_decode
asn1_subid_decode
tvb_ensure_bytes_exist
asn1_eoc_decode
asn1_length_decode
asn1_id_decode1
asn1_tag_decode
asn1_id_decode
asn1_sequence_decode
asn1_oid_decode
asn1_string_decode
asn1_octet_string_decode
asn1_int32_decode
libm.so.6
libcrypto.so.7
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
asn1.so
GLIBC_2.2.5
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.3
ATSubH
fffff.
t\E1
AWAVAUATUSH
D$01
D$ H
|$0dH3<%(
8[]A\A]A^A_
AWAVAUA
D$ 1
C D9
T$ dH3
([]A\A]A^A_
D9k$
9H$txH
l$ H
D$(1
T$ H
t$$L
D9d$
T$(dH3
\$0H
l$8L
d$@H
D$81
L$,H
T$0H
t$4L
L$(L
D$$H
T$0E
T$8dH3
@[]A\
D9d$,u
t$(H
t$(H
T$(H
D$(1
T$ H
t$$L
T$(dH3
0[]A\
D9d$
AWAVAUATI
[]A\A]A^A_
l$ L
d$(L
l$0H
A;D$
fff.
d$ H
s-;C
AVAUI
ATUSH
D$`I
T$PH
L$HH
t$@H
D$0L
L$(M
D$XL
T$ E
D$XL
t$@L
D$PH
T$HL
T$01
\$(H
\$ H
D;|$|
[]A\A]A^A_
fffff.
l$ L
d$(L
l$0L
t$8L
|$@H
fff.
AWAVI
AUATA
D$(A
D$ A
[]A\A]A^A_
<$E1
L$0L
|$0H
D$(A
D$ I
D$(A
D$ I
D$(A
D$ I
AVAUATUSH
D$p1
|$4H
D$`H
H)T$@H
D$`M
F$u!
L$X1
D$ H
D$pdH3
x[]A\A]A^A_
L$\L
|$`1
L$XH
L$X1
L$XL
|$PH
D$`H
t$@H
|$8H
l$LD
L$XL
D$`H
A	F(
L$`L
L$XH
L$\H
D$ H
L$XL
L$XL
L$XL
T$pdH3
[]A\A]A^A_1
L$XL
L$XH
L$XL
D$`H
L$`H
fff.
D$@1
E(@H
D$@dH3
\$HH
l$PL
d$XL
l$`L
t$hL
|$pH
D$@dH3
\$HH
l$PH
d$XL
t$hL
|$p1
L$ H
no info I
availabl
AUATUSH
[]A\A]
AVAUATUSH
L$@L
|$@H
T$HH
T$H1
D$<H
L$0L
D$<A9E@
E(@uaE
C(@t
D$<9
[]A\A]A^A_
L$@I
|$ L
L$ H
L$0L
T$,A
L$0H
L$@H
fffff.
fffff.
fffff.
fffff.
fffff.
fffff.
d$ H
fffff.
ATUH
dH34%(
[]A\A]A^A_
L$pH
T$xH
t$hH
F D9
T$dt
D$PH
D$ H
L$$L
D$ H
D$$H
D$PH
\$DE
T$`E
M (A
|$PH
D$8M
D$( t"D
T$8H9U
L$PH
H9D$P
E9|$$u
D$PH
E4Hc
|$0E
t$(H
D$PH
t$xH
D$hH
|$pH
t$hH
D$ D9
T$\H
D$PH
G D9
D$dL
D9~$
T$HH
E9|$$
L$PH
t$HH
T$0L
\$(D
\$(L
T$ H
D$$I
T$0L
\$(A
\$(L
D$$L
D$$H
L$PH
L$HH
|$HH
AWAVAUI
[]A\A]A^A_
fffff.
D$X1
D$XdH3
h[A\
AVAUE1
D$HdH
t$L9
l$PL
t$LH
L$8H
D$0H
T$(H
L$ H
L$hH
T$L9T$H
T$LI
T$ L
L$8H
D$0H
L$(H
T$L9T$H
[]A\A]A^A_
L$LD
t$LH
indefiniL
t$LM
T$xH
L$ H
L$ H
T$pL
L$LD
AWAVAUATUSH
[]A\A]A^A_
|$xD
D$pH
T$hH
L$`H
D$XH
T$PH
L$HH
D$@H
|$pA
L$hL
D$`H
L$XH
T$PH
t$HH
|$xH
L$PH
AVAUATUSH
D$hH
T$|H
L$pH
D$PH
T$`H
L$Xf
D$0H
T$(H
l$ H
[]A\A]A^A_
T$XH
5Fy 
\$(L
l$ H
T$0H
=@x 
L$pH
D$|H
-mv 
,$D)
\$(H
T$0H
l$ L
,$D)
|$0L
l$ H
D$(H
T$PH
l$ L
D$(H
\$(L
l$ H
D$0H
T$0H
l$ D)
D$(H
D$0H
T$(H
l$ L
D$hH
T$`H
D$(H
T$8H
\$0H
l$ H
T$PH
l$ E
D$(H
T$0H
T$0H
D$(H
l$ H
D$0H
T$(H
l$ L
<$E)
T$PH
|$0L
l$ H
T$8H
D$(H
T$PH
l$ L
T$0H
D$(H
\$(H
D$0H
l$ L
\$8L
l$0H
T$@H
L$ H
|$(H
l$0L
T$8H
L$@H
D$ H
D$8H
L$ H
T$HH
\$@H
l$0H
|$(D
\$ H
|$ L
|$@H
L$HH
D$ H
L$8L
l$0L
|$(H
l$0H
L$@H
D$ H
L$8L
|$(H
\$8L
l$0H
L$@H
D$ H
|$(H
|$ L
l$0H
T$@H
L$ H
L$8L
|$(H
|$@H
T$HH
L$ H
L$8L
l$0L
|$(H
AWAVAUATUSH
[]A\A]A^A_
L$0H
D$ H
D$(I
T$xH
T$hH
D$pH
T$XH
D$`H
T$HH
D$PH
=KT 
L$xL
D$pL
L$hH
T$`H
=;R 
T$H1
D$@D
D$ 1
fff.
ffff.
D$(1
T$(dH3
d$ H
ATUH
[]A\
l$ L
d$(L
l$0L
t$8L
|$@H
A;D$
d$ L
l$(L
t$0H
E;t$
l$ L
d$(L
l$0L
t$8L
|$@H
E;t$
fffff.
AVAUA
$D;m
$D;m
[]A\A]A^
$D;m
$D;m
d$ L
l$(L
t$0H
ffff.
l$ H
l$ L
d$(L
l$0H
d$ H
ATUH
[]A\
l$ L
d$(L
l$0H
fff.
d$ H
ffff.
\$ H
l$(L
d$0H
\$ H
l$(L
d$0L
l$8L
t$@H
D$ 1
T$ dH3
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
D$ 1
T$ dH3
\$(H
l$0L
d$8L
l$@H
fffff.
D$ 1
T$ dH3
\$(H
l$0L
d$8L
l$@H
0.5.0
*too many bits*
, useful
%*smodule %s%s
, isPDU
%*stypedef %d %s%s
 opt
%*stype %d[%s]%s [%s]
%*stag %c%d[%s]
%*snamednumber %2d %s
%*srange %d .. %d
, implicit
%*styperef %d[%s]%s
%*s--default-- type=%d
    using sub choice (%s)%s
    have %c%d, found %c%d, %s
    OK, '%s:(%s)%s' chosen
    ...no matching choice...
*list-still-0*
%d(changed from %d)
expect tag 3, ERROR
==underflow
[repeat]
[choice]
[done]
[ref]
[ref-pop]
[chs-rep]
[rep-chs]
[seq-chs]
[constr]
*too many bits, no names...*
TypeDef
Type
, CLASSREF %d
%*sno typeref tag%s
%*s*refer2 to type#%d %s, %p
%*s*collection T %s
NamedNumber
%*s  %3d %s
TypeRef
%*s+handle a %s, list=%p
%*s*skip range
anon%d
%*s*switch %s %s
%*s*collection %s
%*s*insert type tag %c%d
%*s*set tag %c%d
%*s*type#%d %s, %p
%*s*refer to type#%d %s, %p
implicit 
%*s*typeref %s > %s%s at %p
name: %2d %s
def %d: 
, mt=%d, bt=%d
, optional
, namednum
, anonymous
, reference to %s (%s)%s [%s]
 T%d
, reference
, typedef
, typetree
%s%s%s%s%s%s%s
%*s%s
no data nodes
%s found, %p, typedef %d
%s not found, ignored
%s.%s
%s.%s.
%d anonymous types
******** Define type %d, %s
%s.--.%s
%s.--.%s.
%d types used
Type index:
  %3d %s, %c%d, refs: %d
      -- defining id=%d
      %s
The resulting PDU tree:
sctp.port
udp.port
tcp.port
PDUreset %d-%d
sentinel
==off=%d %c%d%c
*error*
*underflow*
    EOI: reference pop
    EOI: pop typeref
    EOI: mark choice
  EOI, pos.node == NULL
*no-name-EOI*
  EOI %s:%s OK, offset=%d
explicit-EOC
  return '%s', ignore
ASN1
  pos.node == NULL
*no-name*
    finish choice
    repeating choice
    seqof: repeat start
  return for repeat '%s'
    anonymous: dontshow
    repeating a choice, %s
    reference pop, donext
    sequence done, donext
    donext
    seq [push,child]
    choice [push], %c%d, %s
    '%s' %c%d will be used
    typeref [pop,next]
*no-name-2*
  return '%s'
  candidate %s '%s'%s%s, %c%d
    got %c%d, found %c%d
------
    *end of optional list...
  optional, %s
%s!%s
    %s:%s will be used
    matching choice '%s'
  using: %s '%s'%s%s, %c%d
  using: unknown '%s'
   typeref [push]
inknown tag
  typeref %s %s
    typeref pop
    typeref [pop]
....
%2.2X
wireshark.log
ASN.1 decoding
ASN.1 TCP Ports
tcp_ports
ASN.1 UDP Ports
udp_ports
ASN.1 SCTP Ports
sctp_ports
Desegment TCP
desegment_messages
asn1/default.tt
ASN.1 type table file
Name of top level PDU
ASN.1 PDU name
pdu_name
first_pdu_offset
Show full names
flat
Eliminate references to level
type_recursion
ASN.1 debug mode
debug
message_win
Write very verbose log
verbose_log
%d skip1 %d
TAG%d
%d skip2 %d
file %s is empty, ignored
reading %d bytes from %s
error reading %s, %s
logging to file %s
read %d items from %s
interpreting tree
TBLTypeId
not 
%s %sfound, %p
tbltypenames: max=%d, info=%p
, X  with errors  X
 %c %2d %s %s
tbltypedefs: max=%d, info=%p
  %3d %s, %c%d
* %3d %s pdu=%p
ASN1 ERROR: %s
%s[%s]
%ctag%d
NN%d
%s ** nesting cut off **
(%s)%s: %d
(%s)%s: %d ~
(%s)%s: %d:%s
(%s)%s: %d:%s ~
false
true
(%s)%s: %s
(%s)%s: %s ~
(%s)%s: %s:%s
(%s)%s: %s:%s ~
, noshow
, unexpected constructed
(%s)%s: [NULL]
(%s)%s: %s bytes
(%s)%s: %s bytes %s data
dissect_asn1: udp
ASN.1 %s
 at %d
first pdu%s: (%s)%s 
%s: (%s)%s %d-%d %s
%s: (%s)%s %d-%d %s ~
%s: (%s)%s
%s: (%s)%s ~
 (%d error%s)
[%d msg%s]
, %d msg%s
[%d+1 msg%s]
, %d+1 msg%s
 (incomplete)
except_state == EXCEPT_CAUGHT
packet-asn1.c
Universal
Application
Context
Private
Primitive
Constructed
Boolean
Integer
BitString
OctetString
Null
ObjectIdentifier
ObjectDescriptor
External
Real
Enumerated
tag11
UTF8String
tag13
tag14
tag15
Sequence
NumericString
PrintableString
TeletexString
VideotexString
IA5String
UTCTime
GeneralTime
GraphicString
ISO646String
GeneralString
UniversalString
tag29
BMPString
Long tag prefix
tbl-boolean
tbl-integer
tbl-bitstring
tbl-octetstring
tbl-null
tbl-oid
tbl-real
tbl-enumerated
tbl-sequence
tbl-set
tbl-sequenceof
tbl-setof
tbl-choice
tbl-typeref
tbl-sequenceof-start
tbl-typeref-nopop
tbl-choice-done
tbl-reserved
tbl-choice-immediate
tbl-invalid
Module
Range
FT_BOOLEAN
FT_UINT32
FT_STRINGZ
FT_NONE
FT_BYTES
FT_DOUBLE
INTEGER
BITSTRING
OCTET STRING
OBJECT IDENTIFIER
REAL
ENUMERATED
SEQUENCE
SET OF
CHOICE
TYPEREF
start-SEQUENCE OF
TYPEREF nopop
CHOICE done
Reserved
CHOICE immediate
INVALID entry
%*snode=%p, data=%p, next=%p, prev=%p, parent=%p, child=%p
--off=%d named number list not initialized
--off=%d namednumber %d=%s from list %s
ASN.1 uint mismatch at offset %d, %s
ASN.1 check_tag at offset %d, %s
ASN.1 string mismatch at offset %d, %s
ASN.1 int mismatch at offset %d, %s
expected a contents choice, error
***** index_typedef: expecting a tag or typeref, found %s *****
%s sp=%d,pos=%p,%s%s%s%s%s%s%s%s%s%s:%s,%d
| sp=%d,st=%p,%s%s%s%s%s%s%s%s%s%s:%s,%d
****tbl_typeref: n>40, return [recursion too deep] ****************
**** unexpected type %s, want %s, at line %d
%*s+tbl_typeref %s [%s, tag %c%d]
%*s*change typeref tag from %c%d to %c%d
%*sNOT changing tag from %c%d to %c%d
%*sinclude typedef %d %s %s [%p:%s, tag %c%d]
regtype1: %3d %3d [%3d] F%2.2x (%s)%s %s %s -> id=%d
regtype2: %3d %3d [%3d] F%2.2x (%s)%s %s %s -> id=%d
regtype3: %3d %3d [%3d] F%2.2x (%s)%s %s %s -> id=%d
****tbl_type: n>40, return [recursion too deep] ****************
register: %3d %3d [%3d] F%2.2x (%s)%s %s %s -> id=%d
%*s*typeref %s > %s already at %p
**** unknown tbl-type %d at line %d
%*sinclude type %s %s [%p:%s, tag %c%d]
regist-2: %3d %3d [%3d] F%2.2x (%s)%s %s %s -> id=%d
%s %s (%s)%s [%s] tag %c%d hf=%d tf=%d
build msg tree from '%s' for '%s'
******** Define main type %d, %s
Define the types that are actually referenced through the top level PDU
pdu %d %s defined twice, TopLevel & type
  return for constructed %s (%s)%s
>>off=%d stack underflow, return
>>off=%d stack underflow, return, no more messages
  *EOI %s:%s mismatch, EOIoffset=%d, stack=%d
  EOI extra pop, EOIoffset=%d, stack=%d
    seqof: first got %c%d, found %c%d
    seqof: child: got %c%d, found %c%d
    seqof: no repeat, force next
    reference change ref -> pop
    seqof: set repeat mark [push,child]
    seqof: end of reapeat loop [next]
    immediate choice [no next]
    end of optional list, constructed, expect value next time
    already pushed, skip next push
    immediate choice [push], %c%d, %s
  return from immediate choice [%s] '%s'
  indirect typeref to %s:%s, %s [%c%d]
  typeref set named number list node %p
    dontshow and set constructed flag
  return [%s] '%s' vid=%d, tid=%d
The TCP ports on which ASN.1 messages will be read
The UDP ports on which ASN.1 messages will be read
The SCTP ports on which ASN.1 messages will be read
Desegment ASN.1 messages that span TCP segments
Compiled ASN.1 description of ASN.1 types
Offset for non-reassembled packets, wrong if this happens on other than the first packet!
Offset to first PDU in first tcp packet
Show full names for all values
Allow this recursion level for eliminated type references
Extra output useful for debuging
log to file $TMP/wireshark.log
prefs change: tcpports=%s, udpports=%s, sctpports=%s, desegnment=%d, asn1file=%s, pduname=%s, first_offset=%d, debug=%d, msg_win=%d, verbose=%d
ASN.1 oid mismatch at offset %d, %s
OK, TBLTypeId's index verified%s
OK, %d TBLTypeDef's index set up
modules=%d, defs=%d, types=%d, tags=%d, strings=%d, lenstrings=%d
dissect_asn1: tcp - seq=%u, delta=%d, reassembled=%d
first%s: (%s)%s %d %s, %s, %s, len=%s, off=%d, size=%d 
%s, %s, %s, len=%s, off=%d, remaining=%d
ReportedBoundsError: offset=%d len=%d can_desegment=%d
dissect_asn1 finished: desegment_offset=%d desegment_len=%d can_desegment=%d
UACPX
dissect_asn1
Wrong type for that item
EOC mismatch
Length was indefinite
Length mismatch
Unknown error (%d)
Wrong length for that item's type
  **missing**  
asn1
*noname*
off=%d: [%s %s %s] (%s)%s%s%s
off=%d: [%s %s %s] (%s)%s: %s:%s%s
off=%d: [%s %s %s] (%s)%s: '%s'%s
off=%d: [%s %s %s] (%s)%s: %d:%s%s
off=%d: [%s %s %s] (%s)%s: %d%s
*unnamed*
asn1.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
