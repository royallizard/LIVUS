__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
g_snprintf
gegl_operation_point_composer_get_type
g_type_module_register_type
__stack_chk_fail
g_slice_alloc0
babl_format
gegl_operation_set_format
gegl_clSetKernelArg
gegl_clEnqueueNDRangeKernel
gegl_cl_get_command_queue
gegl_cl_compile_and_build
g_type_class_peek_parent
gegl_operation_get_type
g_type_check_class_cast
g_dgettext
gegl_operation_class_set_keys
gegl_param_spec_double
g_object_class_install_property
g_object_set_data_full
g_slice_free1
g_type_name
g_log
g_value_set_double
g_value_get_double
gegl_chant_get_type
gegl_module_query
gegl_module_register
libgmodule-2.0.so.0
libgio-2.0.so.0
libgobject-2.0.so.0
libgthread-2.0.so.0
libglib-2.0.so.0
libm.so.6
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
threshold.so
GLIBC_2.2.5
GLIBC_2.4
%"" 
%"" 
%"" 
%"" 
%"" 
%"" 
%"" 
%"" 
%"" 
%"" 
%"" 
%"" 
%"" 
%"" 
%"" 
%*" 
%*" 
%*" 
%2" 
%2" 
%2" 
%2" 
%:" 
%:" 
=9" 
\$Pf
T$0f
L$2H
D$ H
D$81
T$PH
D$H1
D$,H
T$HdH3
t$0H
D$0H
ATUI
[]A\
F H9
F H9
tkATUH
 []A\
ATUStgH
 []A\
[]A\
GeglChantthreshold.c
YA float
input
Y float
output
kernel_thr_3
kernel_thr_2
gegl-0.2
description
color
categories
gegl:threshold
name
Threshold
value
chant-data
property
GEGL-../../gegl/gegl-chant.h
__kernel void kernel_thr_3 (__global const float2     *in,     
                            __global const float      *aux,    
                            __global       float2     *out)    
{                                                              
  int gid = get_global_id(0);                                  
  float2 in_v  = in [gid];                                     
  float  aux_v = aux[gid];                                     
  float2 out_v;                                                
  out_v.x = (in_v.x > aux_v)? 1.0f : 0.0f;                     
  out_v.y = in_v.y;                                            
  out[gid]  =  out_v;                                          
}                                                              
__kernel void kernel_thr_2 (__global const float2     *in,     
                            __global       float2     *out,    
                            float value)                       
{                                                              
  int gid = get_global_id(0);                                  
  float2 in_v  = in [gid];                                     
  float2 out_v;                                                
  out_v.x = (in_v.x > value)? 1.0f : 0.0f;                     
  out_v.y = in_v.y;                                            
  out[gid]  =  out_v;                                          
}                                                              
Thresholds the image to white/black based on either the global value set in the value property, or per pixel from the aux input.
Global threshold level (used when there is no auxiliary input buffer).
%s:%d: invalid %s id %u for "%s" of type '%s' in '%s'
;*3$"
threshold.so.debug
7zXZ
$9<)
<(yl
jeQ}
{=G<	
 u>IN
hlRg
S2p2&N
6Y`f
5Vp/;
&Xt#o
\o$h
p2QE
d,{9!t
to;/
7PQ}
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.init
.plt
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.bss
.gnu_debuglink
.gnu_debugdata
