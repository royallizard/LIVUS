__gmon_start__
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
value_get_as_float
value_new_error_NUM
value_new_float
gnm_range_skew_pop
float_range_function
gnm_range_kurtosis_m3_pop
gnm_range_var_pop
gnm_range_var_est
gnm_range_skew_est
gnm_range_stddev_pop
gnm_range_stddev_est
gnm_range_mode
go_range_min
go_range_median_inter_sorted
go_range_max
gnm_range_kurtosis_m3_est
gnm_range_harmonic_mean
gnm_range_geometric_mean
go_range_devsq
gnm_range_count
go_range_average
gnm_range_avedev
gnm_range_rsq_pop
float_range_function2
gnm_range_covar_est
gnm_range_covar_pop
gnm_range_correl_pop
value_release
g_free
gnm_expr_eval
value_get_as_int
gnm_range_product
go_range_sum
drayleigh
sqrt
go_fake_floor
value_get_as_checked_bool
dgeom
pgeom
collect_floats_value
value_new_error_VALUE
__stack_chk_fail
pnorm
value_new_error_DIV0
dweibull
pweibull
value_new_error_NA
go_linear_regression
go_regression_stat_new
go_regression_stat_destroy
g_malloc_n
value_area_fetch_x_y
value_area_get_height
value_area_get_width
g_malloc0
g_malloc
value_new_error_REF
g_malloc0_n
value_new_array
value_array_set
go_fake_ceil
value_new_int
go_range_fractile_inter_sorted
dpois
ppois
permut
go_pow10
go_fake_trunc
gnm_owent
qnorm
pnorm2
dnorm
dnbinom
collect_floats
gnm_float_equal
gnm_float_hash
g_hash_table_new_full
g_hash_table_lookup_extended
g_hash_table_insert
g_hash_table_foreach_remove
g_hash_table_get_keys
g_list_sort
g_list_length
g_hash_table_destroy
go_logarithmic_regression
qlnorm
go_logarithmic_fit
go_exponential_regression
value_new_array_non_init
gnm_matrix_from_value
gnm_matrix_is_empty
go_linear_regression_leverage
gnm_matrix_free
dhyper
phyper
collect_float_pairs
g_memdup
qgamma
dgamma
pgamma
float_range_function2d
atanh
dexp
pexp
qbinom
pchisq
qchisq
pbinom2
dbinom
pbinom
qbeta
pbeta
dbeta
range_sort
log1p
gnm_range_adtest
gnm_cellref_make_abs
value_new_cellrange
plnorm
random_exppow_pdf
random_laplace_pdf
dcauchy
pcauchy
stat_functions
go_plugin_header
go_plugin_depends
libm.so.6
libc.so.6
_edata
__bss_start
_end
plugin.so
GLIBC_2.2.5
GLIBC_2.4
fffff.
fffff.
fffff.
fffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
ffff.
fffff.
fffff.
fffff.
fffff.
US~+
fffff.
tlAVAUI
ATU1
[]A\A]A^
]A\A]A^
]A\A]A^
ffffff.
ffffff.
ATUH
 []A\
ATUI
 []A\
fffff.
ATUI
D$ H
D$81
T$8dH3
@[]A\
T$0H
D$(f
T$(H
T$(t
AWAVI
AUATUSH
D$(1
|$ I
l$ I
T$(dH3
8[]A\A]A^A_
l$ I
z(u&f
z.u,f
ffff.
D$01
\$(dH3
D$01
\$(dH3
D$01
\$(dH3
AUATA
D$(1
QCxf
XZz@
T$(dH3
8[]A\A]
A9\$
AWAVE
AUATI
USIc
$t3H
L$PD
[]A\A]A^A_
[]A\A]A^A_
fff.
AWAVI
AUATI
D$(1
\$ I
\$ H
t$(dH34%(
8[]A\A]A^A_
D$ A
Hc|$
_AXH
AWAVAUATI
t$ H
D$H1
T$HdH3
X[]A\A]A^A_
L$ D
L$8H
T$0H
_AXt	
QGxf
~KLcD$
D$,I
L$8H
T$0H
ZYt	
AWAVI
AUATUSH
T$0dH
D$X1
L$XdH3
h[]A\A]A^A_
d$HH
D$(I
L$HE
T$@H
|$PD
AZA[t	
_AXu
D9d$,
L$8I
D9d$8
ATUH
 []A\
ATUH
 []A\
D$(1
\$(dH3
D$(1
\$(dH3
D$ uwH
ATUH
 []A\
ATUH
 []A\
ATUH
 []A\
ATUH
 []A\
AUATI
L$,L
D$0H
D$81
t$8dH34%(
H[]A\A]
D$,f
D$,f
ATUI
D$ H
D$(1
t$(dH34%(
0[]A\
ffffff.
fffff.
AWAV
AUATUSH
D$81
D$ H
L$8L
5Nc!
=%c!
9D$$}
D$$A
D9|$
T$$H
t8E1
T$ L
L$8dH3
H[]A\A]A^A_
fff.
AWAVI
AUATUSH
D$81
T$8dH3
H[]A\A]A^A_
L$(H
T$ H
AXAYt	
QGxf
~ELcD$
L$(H
T$ H
ZYt	
AWAVI
AUATUSH
?FtI1
([]A\A]A^A_
ffff.
AWAVI
AUATUSH
D$81
T$8dH3
H[]A\A]A^A_
L$(H
T$ H
AXAYt	
QGxf
~ELcD$
L$(H
T$ H
ZYt	
AWAVI
AUATI
dH34%(
([]A\A]A^A_
AVAUH
ATUH
ulHc{
[]A\A]A^
fff.
ATUH
D$H1
L$0L
D$8AXAY
T$HdH3
P[]A\
D$(H
Hc|$
|$(j
T$(L
YD$0
ffff.
AVAUI
D$(1
T$(dH3
0[]A\A]A^
T$ H
D$ f
^D$ 
ffffff.
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
fff.
D$(H
.L$ s
.L$(s
L$ 1
ATUH
 []A\
 []A\
AUATH
L$<L
D$@H
T$X1
\$XdH3
h[]A\A]
|$<H
|$@1
T$HH
|$@1
|$@H
t$<H
T$PH
t$<H
T$P1
L$HI
D$<f
T$P1
D$<f
|$@H
|$@H
\$(f
AUATH
D$ H
T$81
\$8dH3
H[]A\A]
|$ 1
T$(H
|$ 1
|$ H
T$0H
T$0I
|$ 1
|$ H
fffff.
AWAVH
AUAT
\$(1
\$(dH3
8[]A\A]A^A_
Hc|$
L$ L
D$ f
ffffff.
T$(1
\$(dH3
T$ H
AWAV
AUAT
-L6!
D$ H
?Fu*I
[]A\A]A^A_
[]A\A]A^A_
-t4!
L$(H
[]A\A]A^A_
L$(H9L$ 
8[]A\A]A^A_
AWAVA
AUATI
d$0H
L$(H
D$X1
\$XdH3
h[]A\A]A^A_
L$,M
t$(H
T$8L
t$(H
T$@L
t$,H
T$HH
t$,H
T$PH
D$@f
.L$Pz
T$Pf
\T$Hf
\T$Hf
YT$P
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
A\A]A^A_
AUATUSH
D$(1
L$(dH3
8[]A\A]
.D$ z
^D$ 
ffff.
ffff.
$s f
fffff.
munG
adtest
sftest
cvmtest
lkstest
avedev
average
averagea
bernoulli
betadist
fff|ff
beta.dist
fffb|ff
betainv
fffb
binom.dist.range
fff|f
cauchy
chidist
chiinv
chitest
confidence
confidence.t
correl
count
counta
covar
covariance.s
critbinom
devsq
expondist
fdist
finv
fisher
fisherinv
forecast
frequency
gammadist
gammainv
geomean
growth
A|AAb
harmean
hypgeomdist
ffff|b
intercept
kurt
large
leverage
linest
A|Abb
logest
logfit
loginv
lognormdist
logreg
maxa
mina
mode
mode.mult
negbinomdist
snorm.dist.range
norminv
normsdist
normsinv
owent
pearson
percentile
percentile.exc
percentrank
percentrank.exc
permut
poisson
prob
AAf|f
quartile
quartile.exc
fr|b
rank.avg
slope
small
standardize
ssmedian
stdev
stdeva
stdevp
stdevpa
steyx
skew
tdist
tinv
trend
trimmean
ttest
rrff
vara
varp
varpa
weibull
ztest
exppowdist
kurtp
landau
laplace
logistic
pareto
rayleigh
rayleightail
skewp
subtotal
cronbach
permutationa
x:array of sample values
CHITEST,ADTEST,LKSTEST,SFTEST
CHITEST,ADTEST,SFTEST,CVMTEST
wiki:en:Lilliefors_test
x:total number of objects
y:number of selected objects
=PERMUTATIONA(2,7)
=PERMUTATIONA(2.3,7.6)
=PERMUTATIONA(0,0)
POWER
x:number
a:mean
=LAPLACE(0.4,1)
RANDLAPLACE
b:scale parameter
=EXPPOWDIST(0.4,1,2)
RANDEXPPOW
a:lower limit
sigma:scale parameter
=RAYLEIGHTAIL(0.6,0.3,1)
RANDRAYLEIGHTAIL
=RAYLEIGH(0.4,1)
RANDRAYLEIGH
a:exponent
=PARETO(0.6,1,2)
RANDPARETO
=LOGISTIC(0.4,1)
RANDLOGISTIC
k:number of trials
=GEOMDIST(2,0.4,TRUE)
RANDGEOM
CRONBACH:Cronbach's alpha
ref1:first data set
ref2:second data set
ref1:first value
ref2:second value
COUNT,SUM
known_ys:known y-values
known_xs:known x-values
STDEV,STDEVPA
FORECAST,TREND
INTERCEPT,TREND
LOGEST,GROWTH,TREND
LINEST
LOGREG,LINEST,LOGEST
LOGFIT,LINEST,LOGEST
LOGEST,TREND
A:a matrix
FREQUENCY:frequency table
data_array:data values
FDIST,FINV
array:data points
QUARTILE
array:range of numeric values
x:data point to be ranked
area1:first cell area
area2:second cell area
STDEVA,STDEVP
VARA,VARP
VAR,VARPA
number1:first value
number2:second value
MIN,MAXA
MAX,MINA
AVERAGE
ref:data set (sample)
x:population mean
PEARSON,RSQ,SLOPE
x_range:possible values
BINOMDIST,CRITBINOM
data:data set
k:which value to find
array:data set
=SSMEDIAN(ARRAY(7,7,8,9), 1)
MEDIAN
MEDIAN:median of a data set
wiki:en:Median
array1:first component values
x:number of events
mean:mean of the distribution
=POISSON(3,6,0)
NORMDIST,WEIBULL
FISHER:Fisher transformation
=FISHER(0.332)
FISHERINV,ATANH
STDEV
AVERAGE,VARP,SKEWP,KURT
AVERAGE,VAR,SKEW,KURTP
p:probability
=NORMINV(0.76,2,3)
=NORMDIST(2,1,2,0)
alpha:scale parameter
beta:scale parameter
=WEIBULL(3,2,4,0)
x:value
=STANDARDIZE(3,2,4)
alpha:significance level
size:sample size
=CONFIDENCE.T(0.05,1,33)
AVERAGE,CONFIDENCE
=CONFIDENCE(0.05,1,33)
AVERAGE,CONFIDENCE.T
x:number of successes
n:sample size
N:population size
=HYPGEOMDIST(1,2,3,10)
BINOMDIST,POISSON
n:size of the base set
=PERMUT(7,3)
COMBIN
trials:number of trials
=CRITBINOM(10,0.5,0.75)
BINOMDIST
=CAUCHY(0.43,1,TRUE)
RANDCAUCHY
start:start of the interval
=BINOM.DIST.RANGE(5,0.8,3,4)
BINOMDIST,R.PBINOM
n:number of successes
=BINOMDIST(3,5,0.8,0)
=FINV(0.2,2,4)
FDIST
=LANDAU(0.34)
RANDLANDAU
=FDIST(2,5,5)
p:probability in both tails
=TINV(0.4,32)
TDIST,TTEST
tails:1 or 2
=TDIST(2,5,1)
=TDIST(-2,5,1)
=TDIST(0,5,2)
TINV,TTEST
=BETAINV(0.45,1.6,1)
BETADIST,BETA.DIST
BETAINV,BETADIST
=BETADIST(0.12,2,3)
BETAINV, BETA.DIST
actual_range:observed data
CHIDIST,CHIINV
=CHIINV(0.98,7)
CHIDIST,CHITEST
=CHIDIST(5.3,2)
CHIINV,CHITEST
=GAMMAINV(0.34,2,4)
GAMMADIST
=GAMMADIST(1,2,3,0)
GAMMAINV
k:integer
p:probability of success
=BERNOULLI(0,0.5)
RANDBERNOULLI
y:scale parameter
=EXPONDIST(2,4,0)
AVERAGE,VARP,SKEW,KURTP
AVERAGE,VAR,SKEWP,KURT
MIN,ABS
MAX,ABS
SUM, COUNT
wiki:en:Arithmetic_mean
wolfram:ArithmeticMean.html
Then COUNTA(A1:A5) equals 5.
Then COUNT(A1:A5) equals 5.
GEOMEAN:geometric mean
wiki:en:Geometric_mean
wolfram:GeometricMean.html
HARMEAN:harmonic mean
wiki:en:Harmonic_mean
wolfram:HarmonicMean.html
AVERAGE,MEDIAN,MODE
wiki:en:Mode_(statistics)
wolfram:Mode.html
AVERAGE,MEDIAN,MODE.MULT
=FISHERINV(2)
FISHER,TANH
mean:mean
stddev:standard deviation
=LOGINV(0.5,2,3)
EXP,LN,LOG,LOG10,LOGNORMDIST
=LOGNORMDIST(3,1,2)
OWENT:Owen's T function
h:number
a:number
=OWENT(0.1,11)
R.PSNORM,R.PST
p:given probability
=NORMSINV(0.2)
wiki:en:Normal_distribution
x1:start of the interval
x2:end of the interval
=NORMSDIST(2)
f:number of failures
p:probability of a success
=NEGBINOMDIST(2,5,0.55)
array1:first data set
array2:second data set
COVAR,FISHER,FISHERINV
wolfram:Covariance.html
array2:set data set
COVAR,CORREL
wiki:en:Covariance
CORREL,FISHER,FISHERINV
ref:list of numbers
PERCENTRANK,RANK
PERCENTRANK,RANK.AVG
STDEV,STDEVA,STDEVPA
wiki:en:Standard_deviation
VARP,STDEV,VARA
wiki:en:Variance
wolfram:Variance.html
AVERAGE,DVAR,DVARP,STDEV,VAR
goffice
gnumeric
1.12.23
ADTEST:Anderson-Darling Test of Normality
This function returns an array with the first row giving the p-value of the Anderson-Darling Test, the second row the test statistic of the test, and the third the number of observations in the sample.
If there are less than 8 sample values, ADTEST returns #VALUE!
CHITEST,CVMTEST,LKSTEST,SFTEST
wiki:en:Anderson
Darling_test
CVMTEST:Cram
r-von Mises Test of Normality
This function returns an array with the first row giving the p-value of the Cram
r-von Mises Test, the second row the test statistic of the test, and the third the number of observations in the sample.
If there are less than 8 sample values, CVMTEST returns #VALUE!
wiki:en:Cram
von-Mises_criterion
SFTEST:Shapiro-Francia Test of Normality
This function returns an array with the first row giving the p-value of the Shapiro-Francia Test, the second row the test statistic of the test, and the third the number of observations in the sample.
If there are less than 5 or more than 5000 sample values, SFTEST returns #VALUE!
CHITEST,ADTEST,LKSTEST,CVMTEST
LKSTEST:Lilliefors (Kolmogorov-Smirnov) Test of Normality
This function returns an array with the first row giving the p-value of the Lilliefors (Kolmogorov-Smirnov) Test, the second row the test statistic of the test, and the third the number of observations in the sample.
If there are less than 5 sample values, LKSTEST returns #VALUE!
PERMUTATIONA:the number of permutations of @{y} objects chosen from @{x} objects with repetition allowed
If both @{x} and @{y} equal 0, PERMUTATIONA returns 1.
If @{x} < 0 or @{y} < 0, PERMUTATIONA returns #NUM!
If @{x} or @{y} are not integers, they are truncated
This function is OpenFormula compatible.
LAPLACE:probability density function of the Laplace distribution
EXPPOWDIST:the probability density function of the Exponential Power distribution
This distribution has been recommended for lifetime analysis when a U-shaped hazard function is desired. This corresponds to rapid failure once the product starts to wear out after a period of steady or even improving reliability.
RAYLEIGHTAIL:probability density function of the Rayleigh tail distribution
RAYLEIGH:probability density function of the Rayleigh distribution
PARETO:probability density function of the Pareto distribution
LOGISTIC:probability density function of the logistic distribution
GEOMDIST:probability mass or cumulative distribution function of the geometric distribution
p:probability of success in any trial
cumulative:whether to evaluate the mass function or the cumulative distribution function
If @{k} < 0 this function returns a #NUM! error.
If @{p} < 0 or @{p} > 1 this function returns a #NUM! error.
If @{cumulative} is neither TRUE nor FALSE this function returns a #VALUE! error.
SUBTOTAL:the subtotal of the given list of arguments
function_nbr:determines which function to use according to the following table:
	1   AVERAGE
	2   COUNT
	3   COUNTA
	4   MAX
	5   MIN
	6   PRODUCT
	7   STDEV
	8   STDEVP
	9   SUM
	10   VAR
	11   VARP
This function is Excel compatible.
Let us assume that the cells A1, A2, ..., A5 contain numbers 23, 27, 28, 33, and 39.
Then SUBTOTAL(1,A1:A5) equals 30.SUBTOTAL(6,A1:A5) equals 22378356.SUBTOTAL(7,A1:A5) equals 6.164414003.SUBTOTAL(9,A1:A5) equals 150.SUBTOTAL(11,A1:A5) equals 30.4.
SLOPE:the slope of a linear regression line
If @{known_xs} or @{known_ys} contains no data entries or different number of data entries, this function returns a #N/A error.
If the variance of the @{known_xs} is zero, this function returns #DIV/0 error.
Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, 21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, and 42.7.
Then SLOPE(A1:A5,B1:B5) equals 1.417959936.
INTERCEPT:the intercept of a linear regression line
Then INTERCEPT(A1:A5,B1:B5) equals -20.785117212.
FORECAST:estimates a future value according to existing values using simple linear regression
x:x-value whose matching y-value should be forecast
This function estimates a future value according to existing values using simple linear regression.
If the variance of the @{known_xs} is zero, this function returns a #DIV/0 error.
Then FORECAST(7,A1:A5,B1:B5) equals -10.859397661.
GROWTH:exponential growth prediction
known_xs:known x-values; defaults to the array {1, 2, 3, 
new_xs:x-values for which to estimate the y-values; defaults to @{known_xs}
affine:if true, the model contains a constant term, defaults to true
GROWTH function applies the 
least squares
 method to fit an exponential curve to your data and predicts the exponential growth by using this curve.
GROWTH returns an array having one column and a row for each data point in @{new_xs}.
If @{known_ys} and @{known_xs} have unequal number of data points, this function returns a #NUM! error.
LOGEST:exponential least square fit
known_xs:known x-values; default to an array {1, 2, 3, 
stat:if true, extra statistical information will be returned; defaults to FALSE
LOGEST function applies the 
least squares
 method to fit an exponential curve of the form	y = b * m{1}^x{1} * m{2}^x{2}... to your data.
LOGEST returns an array { m{n},m{n-1}, ...,m{1},b }.
Extra statistical information is written below the regression line coefficients in the result array.  Extra statistical information consists of four rows of data.  In the first row the standard error values for the coefficients m1, (m2, ...), b are represented.  The second row contains the square of R and the standard error for the y estimate.  The third row contains the F-observed value and the degrees of freedom.  The last row contains the regression sum of squares and the residual sum of squares.
TREND:estimates future values of a given data set using a least squares approximation
known_ys:vector of values of dependent variable
known_xs:array of values of independent variables, defaults to a single vector {1,
new_xs:array of x-values for which to estimate the y-values; defaults to @{known_xs}
If the length of @{known_ys} does not match the corresponding length of @{known_xs}, this function returns a #NUM! error.
Let us assume that the cells A1, A2, 
, A5 contain numbers 11.4, 17.3, 21.3, 25.9, and 40.1, and the cells B1, B2, ... B5 23.2, 25.8, 29.9, 33.5, and 42.7.
Then TREND(A1:A5,B1:B5) equals {12.1, 15.7, 21.6, 26.7, 39.7}.
LOGFIT:logarithmic least square fit (using a trial and error method)
LOGFIT function applies the 
least squares
 method to fit the logarithmic equation y = a + b * ln(sign * (x - c)) ,   sign = +1 or -1 to your data. The graph of the equation is a logarithmic curve moved horizontally by c and possibly mirrored across the y-axis (if sign = -1).
LOGFIT returns an array having five columns and one row. `Sign' is given in the first column, `a', `b', and `c' are given in columns 2 to 4. Column 5 holds the sum of squared residuals.
An error is returned when there are less than 3 different x's or y's, or when the shape of the point cloud is too different from a ``logarithmic'' one.
You can use the above formula = a + b * ln(sign * (x - c)) or rearrange it to = (exp((y - a) / b)) / sign + c to compute unknown y's or x's, respectively. 
This is non-linear fitting by trial-and-error. The accuracy of `c' is: width of x-range -> rounded to the next smaller (10^integer), times 0.000001. There might be cases in which the returned fit is not the best possible.
LOGREG:the logarithmic regression
LOGREG function transforms your x's to z=ln(x) and applies the 
least squares
 method to fit the linear equation y = m * z + b to your y's and z's --- equivalent to fitting the equation y = m * ln(x) + b to y's and x's. LOGREG returns an array having two columns and one row. m is given in the first column and b in the second. 
Any extra statistical information is written below m and b in the result array.  This extra statistical information consists of four rows of data:  In the first row the standard error values for the coefficients m, b are given.  The second row contains the square of R and the standard error for the y estimate. The third row contains the F-observed value and the degrees of freedom.  The last row contains the regression sum of squares and the residual sum of squares.The default of @{stat} is FALSE.
LINEST:multiple linear regression coefficients and statistics
stats:if true, some additional statistics are provided, defaults to false
This function returns an array with the first row giving the regression coefficients for the independent variables x_m, x_(m-1),
,x_2, x_1 followed by the y-intercept if @{affine} is true.
If @{stats} is true, the second row contains the corresponding standard errors of the regression coefficients.In this case, the third row contains the R^2 value and the standard error for the predicted value. The fourth row contains the observed F value and its degrees of freedom. Finally, the fifth row contains the regression sum of squares and the residual sum of squares.
If @{affine} is false, R^2 is the uncentered version of the coefficient of determination; that is the proportion of the sum of squares explained by the model.
LEVERAGE:calculate regression leverage
Returns the diagonal of @{A} (@{A}^T @{A})^-1 @{A}^T as a column vector.
If the matrix is singular, #VALUE! is returned.
bins_array:array of cutoff values
The results are given as an array.
If the @{bins_array} is empty, this function returns the number of data points in @{data_array}.
TTEST:p-value for a hypothesis test comparing the means of two populations using the Student t-distribution
array1:sample from the first population
array2:sample from the second population
tails:number of tails to consider
type:Type of test to perform. 1 indicates a test for paired variables, 2 a test of unpaired variables with equal variances, and 3 a test of unpaired variables with unequal variances
If the data sets contain a different number of data points and the test is paired (@{type} one), TTEST returns the #N/A error.
@{tails} and @{type} are truncated to integers.
If @{tails} is not one or two, this function returns a #NUM! error.
If @{type} is any other than one, two, or three, this function returns a #NUM! error.
Then TTEST(A1:A5,B1:B5,1,1) equals 0.003127619.TTEST(A1:A5,B1:B5,2,1) equals 0.006255239.TTEST(A1:A5,B1:B5,1,2) equals 0.111804322.TTEST(A1:A5,B1:B5,1,3) equals 0.113821797.
FTEST:p-value for the two-tailed hypothesis test comparing the variances of two populations
Then FTEST(A1:A5,B1:B5) equals 0.510815017.
QUARTILE.EXC:the @{k}-th quartile of the data points (Hyndman-Fan method 6: N+1 basis)
quart:a number from 1 to 3, indicating which quartile to calculate
If @{array} is empty, this function returns a #NUM! error.
If @{quart} < 0 or @{quart} > 4, this function returns a #NUM! error. If @{quart} = 0, the smallest value of @{array} to be returned.
If @{quart} is not an integer, it is truncated.
Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, 21.3, 25.9, and 40.1.
Then QUARTILE.EXC(A1:A5,1) equals 14.35.
LARGE,MAX,MEDIAN,MIN,PERCENTILE,PERCENTILE.EXC,QUARTILE,SMALL
QUARTILE:the @{k}-th quartile of the data points (Hyndman-Fan method 7: N-1 basis)
quart:a number from 0 to 4, indicating which quartile to calculate
Then QUARTILE(A1:A5,1) equals 17.3.
LARGE,MAX,MEDIAN,MIN,PERCENTILE,QUARTILE.EXC,SMALL
PERCENTILE.EXC:determines the 100*@{k}-th percentile of the given data points (Hyndman-Fan method 6: N+1 basis)
k:which percentile to calculate
If @{k} < 0 or @{k} > 1, this function returns a #NUM! error.
Then PERCENTILE.EXC(A1:A5,0.42) equals 20.02.
PERCENTILE,QUARTILE,QUARTILE.EXC
PERCENTILE:determines the 100*@{k}-th percentile of the given data points (Hyndman-Fan method 7: N-1 basis)
Then PERCENTILE(A1:A5,0.42) equals 20.02.
PERCENTRANK.EXC:rank of a data point in a data set (Hyndman-Fan method 6: N+1 basis)
significance:number of significant digits, defaults to 3
If @{array} contains no data points, this function returns a #NUM! error.
If @{significance} is less than one, this function returns a #NUM! error.
If @{x} exceeds the largest value or is less than the smallest value in @{array}, this function returns a #NUM! error.
If @{x} does not match any of the values in @{array} or @{x} matches more than once, this function interpolates the returned value.
LARGE,MAX,MEDIAN,MIN,PERCENTILE,PERCENTILE.EXC,QUARTILE,QUARTILE.EXC,SMALL
PERCENTRANK:rank of a data point in a data set (Hyndman-Fan method 7: N-1 basis)
LARGE,MAX,MEDIAN,MIN,PERCENTILE,QUARTILE,SMALL
STDEVPA:population standard deviation of an entire population
This is also known as the N-standard deviation
Numbers, text and logical values are included in the calculation too. If the cell contains text or the argument evaluates to FALSE, it is counted as value zero (0). If the argument evaluates to TRUE, it is counted as one (1). Note that empty cells are not counted.
=STDEVPA(11.4,17.3,21.3,3,25.9,40.1)
STDEVA:sample standard deviation of the given sample
STDEVA is also known as the N-1-standard deviation.
To obtain the population standard deviation of a whole population use STDEVPA.
=STDEVA(11.4,17.3,21.3,3,25.9,40.1)
VARPA:variance of an entire population
VARPA is also known as the N-variance.
=VARPA(11.4,17.3,21.3,3,25.9,40.1)
VARA:sample variance of the given sample
VARA is also known as the N-1-variance.
To get the true variance of a complete population use VARPA.
Since the N-1-variance includes Bessel's correction, whereas the N-variance calculated by VARPA or VARP does not, under reasonable conditions the N-1-variance is an unbiased estimator of the variance of the population from which the sample is drawn.
=VARA(11.4,17.3,21.3,3,25.9,40.1)
MINA:smallest value, with negative numbers considered smaller than positive numbers
=MINA(11.4,17.3,21.3,3,25.9,40.1)
MAXA:largest value, with negative numbers considered smaller than positive numbers
=MAXA(11.4,17.3,21.3,3,25.9,40.1)
AVERAGEA:average of all the values and cells
=AVERAGE(11.4,17.3,21.3,3,25.9,40.1)
ZTEST:the probability of observing a sample mean as large as or larger than the mean of the given sample
stddev:population standard deviation, defaults to the sample standard deviation
ZTEST calculates the probability of observing a sample mean as large as or larger than the mean of the given sample for samples drawn from a normal distribution with mean @{x} and standard deviation @{stddev}.
If @{ref} contains less than two data items ZTEST returns #DIV/0! error.
Then ZTEST(A1:A5,20) equals 0.254717826.
CONFIDENCE,NORMDIST,NORMINV,NORMSDIST,NORMSINV,STANDARDIZE
STEYX:standard error of the predicted y-value in the regression
If @{known_ys} and @{known_xs} are empty or have a different number of arguments then this function returns a #N/A error.
Then STEYX(A1:A5,B1:B5) equals 1.101509979.
PROB:probability of an interval for a discrete (and finite) probability distribution
prob_range:probabilities of the corresponding values
lower_limit:lower interval limit
upper_limit:upper interval limit, defaults to @{lower_limit}
If the sum of the probabilities in @{prob_range} is not equal to 1 this function returns a #NUM! error.
If any value in @{prob_range} is <=0 or > 1, this function returns a #NUM! error.
If @{x_range} and @{prob_range} contain a different number of data entries, this function returns a #N/A error.
SMALL:@{k}-th smallest value in a data set
If data set is empty this function returns a #NUM! error.
If @{k} <= 0 or @{k} is greater than the number of data items given this function returns a #NUM! error.
Then SMALL(A1:A5,2) equals 17.3.SMALL(A1:A5,4) equals 25.9.
PERCENTILE,PERCENTRANK,QUARTILE,LARGE
LARGE:@{k}-th largest value in a data set
Then LARGE(A1:A5,2) equals 25.9.LARGE(A1:A5,4) equals 17.3.
PERCENTILE,PERCENTRANK,QUARTILE,SMALL
SSMEDIAN:median for grouped data
interval:length of each grouping interval, defaults to 1
The data are assumed to be grouped into intervals of width @{interval}. Each data point in @{array} is the midpoint of the interval containing the true value. The median is calculated by interpolation within the median interval (the interval containing the median value), assuming that the true values within that interval are distributed uniformly:
median = L + @{interval}*(N/2 - CF)/F
where:
L = the lower limit of the median interval
N = the total number of data points
CF = the number of data points below the median interval
F = the number of data points in the median interval
If @{interval} <= 0, this function returns a #NUM! error. SSMEDIAN does not check whether the data points are at least @{interval} apart.
=SSMEDIAN(ARRAY(7,7,8,8,9), 1)
=SSMEDIAN(ARRAY(7,7,8,8,8,9), 1)
Strings and empty cells are simply ignored.
If even numbers are given MEDIAN returns the average of the two numbers in the center.
=MEDIAN(11.4,17.3,11.4,3,25.9,40.1)
AVERAGE,COUNT,COUNTA,DAVERAGE,MODE,SSMEDIAN,SUM
wolfram:StatisticalMedian.html
RSQ:square of the Pearson correlation coefficient of the paired set of data
array2:second component values
CORREL,COVAR,INTERCEPT,LINEST,LOGEST,PEARSON,SLOPE,STEYX,TREND
PEARSON:Pearson correlation coefficient of the paired set of data
INTERCEPT,LINEST,RSQ,SLOPE,STEYX
POISSON:probability mass or cumulative distribution function of the Poisson distribution
If @{x} is a non-integer it is truncated.
If @{x} < 0 this function returns a #NUM! error.
If @{mean} <= 0 POISSON returns the #NUM! error.
If @{x} is not a number, this function returns a #VALUE! error.
If @{x} <= -1 or @{x} >= 1, this function returns a #NUM! error.
DEVSQ:sum of squares of deviations of a data set
=DEVSQ(11.4,17.3,21.3,25.9,40.1)
AVEDEV:average of the absolute deviations of a data set
=AVEDEV(11.4,17.3,21.3,25.9,40.1)
KURTP:population kurtosis of a data set
If fewer than two numbers are given or all of them are equal this function returns a #DIV/0! error.
=KURTP(11.4,17.3,21.3,25.9,40.1)
KURT:unbiased estimate of the kurtosis of a data set
This is only meaningful if the underlying distribution really has a fourth moment.  The kurtosis is offset by three such that a normal distribution will have zero kurtosis.
If fewer than four numbers are given or all of them are equal this function returns a #DIV/0! error.
=KURT(11.4,17.3,21.3,25.9,40.1)
NORMINV:inverse of the cumulative distribution function of a normal distribution
stddev:standard deviation of the distribution
If @{p} < 0 or @{p} > 1 or @{stddev} <= 0 this function returns a #NUM! error.
NORMDIST,NORMSDIST,NORMSINV,STANDARDIZE,ZTEST
NORMDIST:probability density or cumulative distribution function of a normal distribution
cumulative:whether to evaluate the density function or the cumulative distribution function
If @{stddev} is 0 this function returns a #DIV/0! error.
WEIBULL:probability density or cumulative distribution function of the Weibull distribution
If the @{cumulative} boolean is true it will return: 1 - exp (-(@{x}/@{beta})^@{alpha}),otherwise it will return (@{alpha}/@{beta}^@{alpha}) * @{x}^(@{alpha}-1) * exp(-(@{x}/@{beta}^@{alpha})).
If @{alpha} <= 0 or @{beta} <= 0 this function returns a #NUM! error.
STANDARDIZE:z-score of a value
mean:mean of the original distribution
stddev:standard deviation of the original distribution
CONFIDENCE.T:margin of error of a confidence interval for the population mean using the Student's t-distribution
stddev:sample standard deviation
If @{stddev} < 0 or = 0 this function returns a #NUM! error.
If @{size} is non-integer it is truncated.
If @{size} < 1 this function returns a #NUM! error.
If @{size} is 1 this function returns a #DIV/0! error.
CONFIDENCE:margin of error of a confidence interval for the population mean
stddev:population standard deviation
This function requires the usually unknown population standard deviation.
If @{size} < 0 this function returns a #NUM! error.
If @{size} is 0 this function returns a #DIV/0! error.
HYPGEOMDIST:probability mass or cumulative distribution function of the hypergeometric distribution
M:number of possible successes in the population
If @{x},@{n},@{M} or @{N} is a non-integer it is truncated.
If @{x},@{n},@{M} or @{N} < 0 this function returns a #NUM! error.
If @{x} > @{M} or @{n} > @{N} this function returns a #NUM! error.
PERMUT:number of @{k}-permutations of a @{n}-set
k:number of elements in each permutation
If @{n} = 0 this function returns a #NUM! error.
If @{n} < @{k} this function returns a #NUM! error.
CRITBINOM:right-tailed critical value of the binomial distribution
p:probability of success in each trial
alpha:significance level (area of the tail)
If @{trials} is a non-integer it is truncated.
If @{trials} < 0 this function returns a #NUM! error.
If @{alpha} < 0 or @{alpha} > 1 this function returns a #NUM! error.
CAUCHY:probability density or cumulative distribution function of the Cauchy, Lorentz or Breit-Wigner distribution
If @{a} < 0 this function returns a #NUM! error.
BINOM.DIST.RANGE:probability of the binomial distribution over an interval
end:end of the interval, defaults to @{start}
If @{start}, @{end} or @{trials} are non-integer they are truncated.
If @{start} > @{end} this function returns 0.
BINOMDIST:probability mass or cumulative distribution function of the binomial distribution
If @{n} or @{trials} are non-integer they are truncated.
If @{n} < 0 or @{trials} < 0 this function returns a #NUM! error.
If @{n} > @{trials} this function returns a #NUM! error.
FINV:inverse of the survival function of the F distribution
dof_of_num:numerator degrees of freedom
dof_of_denom:denominator degrees of freedom
The survival function is 1 minus the cumulative distribution function.
If @{dof_of_num} < 1 or @{dof_of_denom} < 1 this function returns a #NUM! error.
FINV is the OpenFormula function LEGACY.FINV.
LANDAU:approximate probability density function of the Landau distribution
FDIST:survival function of the F distribution
If @{dof_of_num} < 1 or @{dof_of_denom} < 1, this function returns a #NUM! error.
FDIST is the OpenFormula function LEGACY.FDIST.
TINV:two tailed inverse of the Student t-distribution
dof:number of degrees of freedom
This function returns the non-negative value x such that the area under the Student t density with @{dof} degrees of freedom to the right of x is @{p}/2.
If @{p} < 0 or @{p} > 1 or @{dof} < 1 this function returns a #NUM! error.
The parameterization of this function is different from what is used for, e.g., NORMSINV.  This is a common source of mistakes, but necessary for compatibility.
TDIST:survival function of the Student t-distribution
If @{dof} < 1 this function returns a #NUM! error.
If @{tails} is neither 1 or 2 this function returns a #NUM! error.
The parameterization of this function is different from what is used for, e.g., NORMSDIST.  This is a common source of mistakes, but necessary for compatibility.
This function is Excel compatible for non-negative @{x}.
BETAINV:inverse of the cumulative distribution function of the beta distribution
a:optional lower bound, defaults to 0
b:optional upper bound, defaults to 1
If @{alpha} <= 0 or @{beta} <= 0, this function returns a #NUM! error.
If @{a} >= @{b} this function returns a #NUM! error.
BETA.DIST:cumulative distribution function of the beta distribution
If @{x} < @{a} or @{x} > @{b} this function returns a #NUM! error.
=BETA.DIST(0.12,2,3,FALSE,0,4)
BETADIST:cumulative distribution function of the beta distribution
CHITEST:p value of the Goodness of Fit Test
theoretical_range:expected values
If the actual range is not an n by 1 or 1 by n range, but an n by m range, then CHITEST uses (n-1) times (m-1) as degrees of freedom. This is useful if the expected values were calculated from the observed value in a test of independence or test of homogeneity.
CHITEST is the OpenFormula function LEGACY.CHITEST.
CHIINV:inverse of the survival function of the chi-squared distribution
CHIINV(@{p},@{dof}) is the OpenFormula function LEGACY.CHIDIST(@{p},@{dof}).
CHIDIST:survival function of the chi-squared distribution
If @{dof} is non-integer it is truncated.
CHIDIST(@{x},@{dof}) is the OpenFormula function LEGACY.CHIDIST(@{x},@{dof}).
GAMMAINV:inverse of the cumulative gamma distribution
GAMMADIST:probability density or cumulative distribution function of the gamma distribution
BERNOULLI:probability mass function of a Bernoulli distribution
If @{k} != 0 and @{k} != 1 this function returns a #NUM! error.
EXPONDIST:probability density or cumulative distribution function of the exponential distribution
If @{cumulative} is false it will return:	@{y} * exp (-@{y}*@{x}),otherwise it will return	1 - exp (-@{y}*@{x}).
If @{x} < 0 or @{y} <= 0 this will return an error.
SKEWP:population skewness of a data set
If less than two numbers are given, SKEWP returns a #DIV/0! error.
=SKEWP(11.4,17.3,21.3,25.9,40.1)
SKEW:unbiased estimate for skewness of a distribution
This is only meaningful if the underlying distribution really has a third moment.  The skewness of a symmetric (e.g., normal) distribution is zero.
If less than three numbers are given, this function returns a #DIV/0! error.
=SKEW(11.4,17.3,21.3,25.9,40.1)
MAX:largest value, with negative numbers considered smaller than positive numbers
=MAX(11.4,17.3,21.3,25.9,40.1)
MIN:smallest value, with negative numbers considered smaller than positive numbers
=MIN(11.4,17.3,21.3,25.9,40.1)
AVERAGE:average of all the numeric values and cells
=AVERAGE(11.4,17.3,21.3,25.9,40.1)
COUNTA:number of arguments passed not including empty cells
Let us assume that the cells A1, A2, ..., A5 contain numbers and strings 11.4, "missing", "missing", 25.9, and 40.1.
AVERAGE,COUNT,DCOUNT,DCOUNTA,PRODUCT,SUM
COUNT:total number of integer or floating point arguments passed
The geometric mean is equal to the Nth root of the product of the N values.
=GEOMEAN(11.4,17.3,21.3,25.9,40.1)
AVERAGE,HARMEAN,MEDIAN,MODE,TRIMMEAN
The harmonic mean of N data points is N divided by the sum of the reciprocals of the data points).
=HARMEAN(11.4,17.3,21.3,25.9,40.1)
AVERAGE,GEOMEAN,MEDIAN,MODE,TRIMMEAN
MODE.MULT:most common numbers in the dataset
If the data set does not contain any duplicates this function returns a #N/A error.
=MODE.MULT(11.4,17.3,11.4,3,25.9,40.1)
MODE:first most common number in the dataset
=MODE(11.4,17.3,11.4,3,25.9,40.1)
FISHERINV:inverse of the Fisher transformation
If @{x} is a non-number this function returns a #VALUE! error.
LOGINV:inverse of the cumulative distribution function of the lognormal distribution
If @{p} < 0 or @{p} > 1 or @{stddev} <= 0 this function returns #NUM! error.
wiki:en:Log-normal_distribution
wolfram:LogNormalDistribution.html
LOGNORMDIST:cumulative distribution function of the lognormal distribution
If @{stddev} = 0 LOGNORMDIST returns a #DIV/0! error.
If @{x} <= 0, @{mean} < 0 or @{stddev} <= 0 this function returns a #NUM! error.
NORMSINV:inverse of the cumulative distribution function of the standard normal distribution
If @{p} < 0 or @{p} > 1 this function returns #NUM! error.
NORMSINV is the OpenFormula function LEGACY.NORMSINV.
NORMDIST,NORMINV,NORMSDIST,STANDARDIZE,ZTEST
wolfram:NormalDistribution.html
SNORM.DIST.RANGE:probability of the standard normal distribution over an interval
This function returns the cumulative probability over a range of the standard normal distribution; that is the integral over the probability density function from @{x1} to @{x2}.
If @{x1}>@{x2}, this function returns a negative value.
NORMSDIST,R.PNORM,R.QNORM,R.DNORM
NORMSDIST:cumulative distribution function of the standard normal distribution
NORMSDIST is the OpenFormula function LEGACY.NORMSDIST.
NEGBINOMDIST:probability mass function of the negative binomial distribution
t:threshold number of successes
If @{f} or @{t} is a non-integer it is truncated.
If (@{f} + @{t} -1) <= 0 this function returns a #NUM! error.
BINOMDIST,COMBIN,FACT,HYPGEOMDIST,PERMUT
CORREL:Pearson correlation coefficient of two data sets
Then CORREL(A1:A5,B1:B5) equals 0.996124788.
wiki:en:CorrelationCoefficient.html
COVARIANCE.S:sample covariance of two data sets
Then COVAR(A1:A5,B1:B5) equals 65.858.
COVAR:covariance of two data sets
TRIMMEAN:mean of the interior of a data set
ref:list of numbers whose mean you want to calculate
fraction:fraction of the data set excluded from the mean
If @{fraction}=0.2 and the data set contains 40 numbers, 8 numbers are trimmed from the data set (40 x 0.2): the 4 largest and the 4 smallest. To avoid a bias, the number of points to be excluded is always rounded down to the nearest even number.
Then TRIMMEAN(A1:A5,0.2) equals 23.2 and TRIMMEAN(A1:A5,0.4) equals 21.5.
AVERAGE,GEOMEAN,HARMEAN,MEDIAN,MODE
RANK.AVG:rank of a number in a list of numbers
x:number whose rank you want to find
order:0 (descending order) or non-zero (ascending order); defaults to 0
In case of a tie, RANK returns the average rank.
This function is Excel 2010 compatible.
Let us assume that the cells A1, A2, ..., A5 contain numbers 11.4, 17.3, 21.3, 25.9, and 25.9.
Then RANK.AVG(17.3,A1:A5) equals 4.
Then RANK.AVG(25.9,A1:A5) equals 1.5.
RANK:rank of a number in a list of numbers
In case of a tie, RANK returns the largest possible rank.
Let us assume that the cells A1, A2, 
, A5 contain numbers 11.4, 17.3, 21.3, 25.9, and 25.9.
Then RANK(17.3,A1:A5) equals 4.
Then RANK(25.9,A1:A5) equals 1.
STDEVP:population standard deviation of the given population
=STDEVP(11.4,17.3,21.3,25.9,40.1)
wolfram:StandardDeviation.html
STDEV:sample standard deviation of the given sample
STDEV is also known as the N-1-standard deviation.
To obtain the population standard deviation of a whole population use STDEVP.
=STDEV(11.4,17.3,21.3,25.9,40.1)
AVERAGE,DSTDEV,DSTDEVP,STDEVA,STDEVPA,VAR
VAR:sample variance of the given sample
VAR is also known as the N-1-variance.
=VAR(11.4,17.3,21.3,25.9,40.1)
VARP:variance of an entire population
VARP is also known as the N-variance.
=VARP(11.4,17.3,21.3,25.9,40.1)
\UUU
X?4*
%PiiC
@nz3
WYmS
?vT5A
?333333
j-T@
TD@Ho
`_X@
/7@f
!x(@
xqf@
@Zd;
?@'1
;*3$"
plugin.so.debug
7zXZ
9S9K
xS4)
eIL_s
)IQ 
N_kE|4
iZy\
mHYl
,!7']
rT7>
/F{4
chbb
6fm&3p?'[kx/
4#*~
3)CGQ
gNIj
lE*3
(O+zG
qof>
;>}|
ED5e.
+[BP*
6MAm
	Rd:
 7/$
fHY|8
+k\XCP
E\uW
""VM
@/e}O
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.bss
.gnu_debuglink
.gnu_debugdata
