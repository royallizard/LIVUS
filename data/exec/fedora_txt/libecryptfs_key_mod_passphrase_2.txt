__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
passphrase_transition
stack_push
stack_pop_val
malloc
from_hex
ecryptfs_add_passphrase_key_to_keyring
__asprintf_chk
free
strtol
calloc
parse_options_file
close
free_name_val_pairs
__syslog_chk
open64
__errno_location
ecryptfs_passphrase_ops
passphrase_get_key_mod_ops
passphrase_param_nodes
libdl.so.2
libc.so.6
__stack_chk_fail
_edata
__bss_start
_end
libecryptfs_key_mod_passphrase.so
GLIBC_2.8
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.0
GLIBC_2.1
UWVS
|$Xe
D$,1
T$,e3
d$<[^_]
D$L1
\$Le3
d$\[^_]
ecryptfs_sig=%s
passphrase_passwd_file
passphrase_passwd_fd
passphrase_passwd
passphrase
Out of memory
Passphrase
passphrase_type
Provide passphrase directly
passphrase_salt
default
passfile
Passphrase File
passfd
Passphrase File Discriptor
0011223344556677
%s: Error whilst attempting to open [%s]; errno = [%m]
%s: Invalid file descriptor qualifier
%s: Error parsing file for passwd; rc = [%d]
%s: Cannot find [passwd] directive
Method for providing the passphrase
File containing passphrase (only use secure media)
File descriptor for file containing passphrase
Salt (hexadecimal representation)
tf_pass_file
;*2$"
libecryptfs_key_mod_passphrase.so.debug
7zXZ
FYIv*
[3B^;w
?Xg\]
<IORHJ
k	/_4
T~4Q
21C&
)i{y
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.init
.plt
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.data
.bss
.gnu_debuglink
.gnu_debugdata
