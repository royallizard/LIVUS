/lib64/ld-linux-x86-64.so.2
libc.so.6
fflush
strcpy
__printf_chk
exit
readdir
setlocale
fopen
strncmp
strrchr
__strdup
perror
__isoc99_sscanf
dcgettext
closedir
__stack_chk_fail
putchar
realloc
popen
strspn
strtok
strtol
isatty
feof
seekdir
fgets
calloc
strlen
memset
strstr
__errno_location
__fprintf_chk
fputc
memcpy
fclose
malloc
__strndup
opendir
__ctype_b_loc
stderr
ioctl
pclose
usleep
fwrite
fread
strchr
__strcpy_chk
__cxa_finalize
__sprintf_chk
__xstat
bindtextdomain
access
strcmp
__libc_start_main
ferror
free
_edata
__bss_start
_end
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.7
GLIBC_2.14
GLIBC_2.4
GLIBC_2.2.5
AWAVAUATUSH
-txH
D$HD
\$@L
L$8L
L$ L
T$(L
L$8D
\$@L
<Vu0
T$ L
L$\L
D$XH
dH34%(
[]A\A]A^A_
D$ D
t$hPD
L$,D
D$@D
\$8L
L$(L
T$ L
\$8L
<Ruu
D$@D
\$8L
L$(L
<Cu)
<Ou+
L$@L
T$8A9
D$ H
D$ D
\$(H
T$8L
L$@H
L$@L
T$8A9
D$ H
D$ D
\$(H
T$8L
L$@H
fffff.
fffff.
=Q} 
fffff.
AWAVM
AUATI
\$ H
[]A\A]A^A_
AWAV
AUAT
t$hD
L$$1
([]A\A]A^A_
=|x 
=cx 
ffffff.
AWAVAUATUSH
L$(1
D9d$
D$(dH3
8[]A\A]A^A_
D9d$
=Ct 
fffff.
AWAVAUATUSH
|$LD
D$dH
D$ H
D$\H
D$(H
D$pH
D$0H
D$XH
t$\L
d$`H
HcT$\H
t$pI
H9l$
5_m 
D$xPL
L$@L
D$HH
L$PH
T$XH
L$dD
=or 
t	D9
9D$d
T$DH
L$@D
[]A\A]A^A_
=4p 
D$xH
L$xH
T$dH
t$pPj
D$|PH
L$xL
t$XD
L$dH
D$XH
A\A]D
T$dD
t$xH
|$LH
HcD$\
D$hH
=)n 
AYAZ
5ng 
HcL$\I
L$hI
5>f 
=jk 
\$H1
D$hE
5he 
5!e 
=Oj 
fffff.
AUAT
([]A\A]
fff.
AWAV1
AUATUSH
|$(dH
D$`H=
|$(L
[]A\A]A^A_
|$(L
5td 
=Cc 
AWAVA
AUATUSH
[]A\A]A^A_
-a[ 
AWAVI
AUATI
D$(H
D$@dH
D$x1
l$	E
D$KA
D$0A
D$MA
D$LA
D$OA
D$NA
T$KE
|$OL
T$ H
42L9
u	L9
D$(H
tmLc
D$ L
D$@H
|$@H
t$ H
\$xdH3
[]A\A]A^A_
D$lH
T$pH
D$pH
|$(H
d$(1
T$pH
H;D$ s
D$@H
D$ A
=3Y 
=/X 
ATUA
[]A\
tBf.
D$(1
D$(dH3
=iS 
AWAVI
AUAT
l$PD
tiE1
L94$u
[]A\A]A^A_
ffff.
ffff.
ffff.
ffff.
AUAT1
([]A\A]
=qN 
AUATI
[]A\A]
5`M 
;5^M 
5AM 
=1M 
5!M 
ATUSH
+uaI
[]A\
ffffff.
AWAVI
AUATH
5%G 
D$8H
d$0H
l$0H
L$8H;L$0I
 u"H
t$0A
	u!I
[]A\A]A^A_
T$ H
t$8L;t$0H
< u"I
T$(L
t$0A
T$ H
	u"H
=XG 
T$(L
T$ H
T$ H
=xF 
AUATI
[]A\A]
[]A\A]
ffffff.
AWAVAUATA
D9l$
5ID 
[]A\A]A^A_
[]A\A]A^A_1
ffff.
ATUSA
[]A\
AWAVA
AUATM
D$81
D$ 1
D$ M
L$8dH3
H[]A\A]A^A_
AWAVE
AUATA
D$H1
l$(H
D$01
5%? 
D$8H
L$HdH3
X[]A\A]A^A_
=Z= 
AUATI
[]A\A]
AVAUL
ATUI
[]A\A]A^
AWAVI
AUATUSH
|$8H
t$(H
L$HdH
D$8H)
D$@H
D$XH
D$`H
D$TH
.u!A
D$(H
T$0L
D$x%
\$XL
D$(H
T$0H
D$x%
D$HL
5,8 
t$ L
D$ H
t$@H
D$PH
D$PH
dH34%(
[]A\A]A^A_
L$ E
D$PE
D$@H
L$HL
T$TH
D$@H
L$HI
D$8I
|$@H
AWAVAUATI
t$ H
D$ L
[]A\A]A^A_
u1Hc
d$(I
D$0M
D$H%
D$H%
d$(I
|$(H
AWAVA
AUATL
%n+ 
-n+ 
[]A\A]A^A_
Usage: setfont [write-options] [-<N>] [newfont..] [-m consolemap] [-u unicodemap]
  write-options (take place before file loading):
    -o  <filename>  Write current font to <filename>
    -O  <filename>  Write current font and unicode map to <filename>
    -om <filename>  Write current consolemap to <filename>
    -ou <filename>  Write current unicodemap to <filename>
If no newfont and no -[o|O|om|ou|m|u] option is given,
a default font is loaded:
    setfont         Load font "default[.gz]"
    setfont -<N>    Load font "default8x<N>[.gz]"
The -<N> option selects a font from a codepage that contains three fonts:
    setfont -{8|14|16} codepage.cp[.gz]   Load 8x<N> font from codepage.cp
Explicitly (with -m or -u) or implicitly (in the fontfile) given mappings
will be loaded and, in the case of consolemaps, activated.
    -h<N>      (no space) Override font height.
    -m <fn>    Load console screen map.
    -u <fn>    Load font unicode map.
    -m none    Suppress loading and activation of a screen map.
    -u none    Suppress loading of a unicode map.
    -v         Be verbose.
    -C <cons>  Indicate console device to be used.
    -V         Print version and exit.
Files are loaded from the current directory or %s/*/.
Saved %d-char %dx%d font file on %s
%s: font position 32 is nonblank
%s: background will look funny
Loading %d-char %dx%d font from file %s
Loading %d-char %dx%d (%d) font from file %s
Loading %d-char %dx%d (%d) font
Loading Unicode mapping table...
No final newline in combine file
This file contains 3 fonts: 8x8, 8x14 and 8x16. Please indicate
using an option -8 or -14 or -16 which one you want loaded.
You asked for font size %d, but only 8, 14, 16 are possible here.
Hmm - a font from restorefont? Using the first half.
When loading several fonts, all must be psf fonts - %s isn't
Read %d-char %dx%d font from file %s
When loading several fonts, all must have the same height
When loading several fonts, all must have the same width
setfont: too many input files
setfont: cannot both restore from character ROM and from file. Font unchanged.
setfont: graphics console %s skipped
/lib/kbd/consolefonts/partialfonts/
/lib/kbd
Found nothing to save
Cannot write font file
Bad character height %d
Bad character width %d
Loading %d-char %dx%d font
char %03x:
 %04x
%s: bug in do_loadtable
 seq: <
default
default8x16
default8x14
default8x8
Cannot find default font
default8x%d
Cannot find %s font
Cannot open font file %s
Reading font file %s
def.uni
# combine partial fonts
Too many files to combine
Bad input file size
/usr/share/locale
%s from %s
kbd 2.0.2
none
.psfu
.psf
.fnt
/lib/kbd/consolefonts/
0123456789abcdefABCDEF
01234567
0123456789
Cannot stat map file
Error writing map to file
Saved screen map in `%s'
Cannot read console map
_to_uni.trans
.acm
/lib/kbd/consoletrans/
mapscrn: cannot open map file _%s_
Loading binary direct-to-font screen map from file %s
Error reading map from file `%s'
Loading binary unicode screen map from file %s
Loading symbolic screen map from file %s
Error parsing symbolic map from `%s', line %d
/proc/self/fd/0
Couldn't open %s
/dev/tty
/dev/tty0
/dev/vc/0
/dev/systty
/dev/console
Couldn't get a file descriptor referring to the console
%s: out of memory
%s: Error reading input font
%s: Bad call of readpsffont
%s: zero input font length?
%s: short unicode table
%s: short utf8 unicode table
%s: bad utf8
%s: unknown utf8 error
%s: short ucs2 unicode table
appendunimap
%02x 
appendseparator
Cannot write font file header
%s: Unsupported psf file mode (%d)
%s: Unsupported psf version (%d)
%s: zero input character size?
%s: Input file: bad input length (%d)
%s: Input file: trailing garbage
appendunicode: illegal unicode %u
GIO_SCRNMAP
PIO_SCRNMAP
GIO_UNISCRNMAP
PIO_UNISCRNMAP
GIO_UNIMAP(0)
GIO_UNIMAP
PIO_UNIMAPCLR
PIO_UNIMAP
strange... ct changed from %d to %d
Loading unicode map from file %s
%s: %s: Warning: line too long
%s: Glyph number (0x%x) larger than font length
%s: Bad Unicode range corresponding to font position range 0x%x-0x%x
%s: Unicode range U+%x-U+%x not of the same length as font position range 0x%x-0x%x
%s: trailing junk (%s) ignored
%s: not loading empty unimap
(if you insist: use option -f to override)
Bad input line: %s
%s: Bad end of range (0x%x)
idem
0x%02x	U+%04x
Saved unicode map on `%s'
char %03x: 
%04x 
Appended Unicode map
.sfm
/lib/kbd/unimaps/
PIO_FONTRESET
getfont: KDFONTOP
getfont: GIO_FONTX
getfont: GIO_FONT
putfont: KDFONTOP
putfont: PIO_FONTX
putfont: PIO_FONT trying ...
putfont: PIO_FONT
bug: getfont called with count<256
bug: getfont using GIO_FONT needs buf.
%s: putfont: %d,%dx%d:failed: %d
%s: putfont: %d,%dx%d:  failed: %d
%s %s
%s/%s
%s%s%s
gzip -d -c
.bz2
bzip2 -d -c
;*3$"
setfont.debug
7zXZ
af;Fem
O4-jOs-
bDQh
?$k1]
#OXk;
"As|
qr~B
a.6]I_
>/_>
RbNX
CR%5
N8aM
_Rk$
J,,ua
Cbk=
:]es
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
