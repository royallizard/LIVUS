__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
gimp_module_query
midi_get_type
gimp_controller_get_type
g_type_module_register_type
gimp_module_register
g_type_check_class_cast
g_type_class_peek_parent
dcgettext
g_strconcat
g_param_spec_string
g_object_class_install_property
g_free
g_param_spec_int
g_strdup_printf
g_type_check_instance_cast
snd_seq_event_input_pending
g_value_init
g_value_set_double
gimp_controller_event
g_value_unset
g_source_remove
g_io_channel_unref
g_strdup
g_object_set
snd_seq_close
g_ascii_strcasecmp
snd_seq_open
snd_seq_set_client_name
snd_seq_create_simple_port
snd_seq_client_id
g_source_new
g_source_attach
g_source_unref
g_io_channel_unix_new
g_io_channel_set_close_on_unref
g_io_channel_set_encoding
g_io_add_watch
snd_strerror
__errno_location
g_strerror
g_type_name
g_log
g_value_get_string
g_value_get_int
g_io_channel_read_chars
g_clear_error
g_print
__stack_chk_fail
g_value_set_string
g_value_set_int
snd_seq_event_input
snd_seq_client_info_sizeof
memset
snd_seq_port_info_sizeof
snd_seq_get_any_client_info
snd_seq_get_any_port_info
libgimpmodule-2.0.so.0
libgimpwidgets-2.0.so.0
libgtk-x11-2.0.so.0
libgdk-x11-2.0.so.0
libatk-1.0.so.0
libgdk_pixbuf-2.0.so.0
libpangocairo-1.0.so.0
libpango-1.0.so.0
libcairo.so.2
libgobject-2.0.so.0
libgmodule-2.0.so.0
libgthread-2.0.so.0
librt.so.1
libglib-2.0.so.0
libasound.so.2
libm.so.6
libdl.so.2
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
libcontroller_midi.so
/usr/lib64
GLIBC_2.2.5
GLIBC_2.4
ALSA_0.9
%z- 
%r- 
%j- 
%b- 
%Z- 
%R- 
%J- 
%B- 
%:- 
%2- 
%*- 
%"- 
%z, 
%r, 
%j, 
%b, 
%Z, 
%R, 
%J, 
%B, 
%:, 
%2, 
=`, 
ATSubH
=/' 
%\& 
=H+ 
ffff.
AUATSH
D$(H
D$ H
[A\A]
l$ H
fff.
5e' 
51' 
\$@H
l$HL
d$PL
l$XL
t$`H
\$ I
ffffff.
ATUH
[]A\
[]A\
\$ H
l$(L
d$0L
l$8L
t$@H
\$ H
l$(L
d$0L
l$8H
t$@H
fffff.
5)! 
X([A
AUATUSH
D$(1
T$(dH3
8[]A\A]
l$ L
d$(L
l$0H
l$ L
d$(L
l$0H
l$ L
d$(L
l$0H
ControllerMidi
gimp20-libgimp
Device:
device
Channel:
channel
MIDI
gimp-controller-midi
Note %02x on
Note %02x off
Controller %03d
note-on-%02x
note-off-%02x
controller-%03d
MIDI Events
name
alsa
default
GIMP
GIMP MIDI Input Controller
Device not available: %s
state
ALSA (%d:%d)
Reading from %s
No device configured
property
controller_midi.c:316
End of file
MIDI: sysex start
MIDI: time code
MIDI: song position
MIDI: song select
MIDI: tune request
MIDI: sysex end
MIDI (ch %02d): pitch (%d)
controller_midi.c:338
MIDI event controller
v0.2
2004-2007
Enter 'alsa' to use the ALSA sequencer.
The name of the device to read MIDI events from.
The MIDI channel to read events from. Set to -1 for reading from all MIDI channels.
%s: invalid %s id %u for "%s" of type `%s' in `%s'
MIDI: undefined system message
MIDI (ch %02d): note off (%02x vel %02x)
MIDI (ch %02d): polyphonic aftertouch (%02x pressure %02x)
MIDI (ch %02d): controller %d (value %d)
MIDI (ch %02d): program change (%d)
MIDI (ch %02d): channel aftertouch (%d)
MIDI (ch %02d): note on  (%02x vel %02x)
Michael Natterer <mitch@gimp.org>
(c) 2004-2007, released under the GPL
libcontroller_midi.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
