__gmon_start__
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
calloc
ogg_stream_clear
ogg_sync_clear
theora_comment_clear
theora_info_clear
xine_event_dispose_queue
ogg_sync_reset
ogg_stream_reset
_x_demux_flush_engine
strlen
strncasecmp
__asprintf_chk
_x_meta_info_set_utf8
__strdup
_x_demux_check_extension
theora_info_init
theora_comment_init
xine_event_new_queue
_x_demux_read_header
memcmp
__stack_chk_fail
snprintf
__snprintf_chk
_x_demux_send_data
_x_meta_info_set
xine_event_send
xine_log
_x_demux_control_newpts
memcpy
theora_decode_header
vorbis_comment_init
vorbis_info_init
vorbis_synthesis_headerin
vorbis_comment_clear
vorbis_info_clear
strtol
realloc
__ctype_b_loc
strncpy
ogg_sync_buffer
ogg_sync_wrote
ogg_sync_pageout
ogg_page_serialno
ogg_page_bos
ogg_stream_init
ogg_stream_pagein
ogg_stream_packetout
xine_hexdump
_x_stream_info_set
speex_packet_to_header
speex_mode_list
speex_decoder_init
speex_decoder_ctl
_x_fourcc_to_buf_video
strtoul
_x_formattag_to_buf_audio
dcgettext
stderr
__fprintf_chk
strstr
ogg_page_granulepos
xine_event_free
xine_event_get
ogg_page_eos
_x_demux_control_end
_x_demux_control_start
ogg_sync_init
xine_plugin_info
libxine.so.1
libdl.so.2
libz.so.1
librt.so.1
libresolv.so.2
libnsl.so.1
libvorbis.so.0
libm.so.6
libspeex.so.1
libtheora.so.0
libogg.so.0
libpthread.so.0
libc.so.6
_edata
__bss_start
xineplug_dmx_ogg.so
GLIBC_2.3
GLIBC_2.14
GLIBC_2.8
GLIBC_2.4
GLIBC_2.2.5
GLIBC_2.3.4
libtheora.so.1.0
%zf 
%rf 
%jf 
%bf 
%Zf 
%Rf 
%Jf 
%Bf 
%:f 
%2f 
%*f 
%"f 
%ze 
%re 
%je 
%be 
%Ze 
%Re 
%Je 
%Be 
%:e 
%2e 
%*e 
%"e 
=J_ 
fffff.
=z^ 
fff.
ffff.
ATE1
AUATI
D$h1
D$pA\A]A^
D$hH
A\A]A^
D$h)
ATU1
[]A\A]A^
tvHc
[]A\A]A^
ffffff.
P@Hi
AVAUI
dH34%(
[]A\A]A^
tiH9
tQH9
t%H9
none
ffff.
[]A\A]
AWAVAUE1
ATLc
L$ H
[]A\A]A^A_
\$ E
L$ H
L$ L
H;2~
H92}
\$0L
\$0L
\$0L
T$(D
D$`I
T$ H
l$0?
D$0H
T$ E
L$0L)
D$0H
D$0H
|$0 
P0Hi
s`Hc
D$(H
D$@A
D$0I
VxD9l$(
D$ E1
H9D$8
L$(H
D$HE)
L$@D
D$HA
l$(E
T$(H
P0Hi
T$(H
D$0H
t$HH
D$@H
\$0L
T$(H
P0Hi
T$(D
\$0H
D$`H
|$PL
t$`x\H
T$(H
l$0H
\$0L
D$`H
l$`E1
D$0H
*D$(
T$8L
*L$0
*L$ 
D$`H
l$`xT
t$01
AWAVAUATUSH
D$8H
D$XH
D$ H
D$`H
D$(1
l$8L
[]A\A]A^A_
T$PH
|$(L
HcP(H
{PHc
~=Hc
|$0A
F-A	
F1A	
t$0D
L$0H
|$0A
|$XI	
f	D$0A
F1A	
T$HD
L$HE
L$0H
L$HH
L$@H
D$0H
L$@H
L$0L
L$@u
D$@D
T$0L
T$@L
D$0D
"tDH
T$0I
D$HH
T$@L
T$@D
L$0I
T$0H
AWAVAUATI
-USH
tu=H
t1Hc
[]A\A]A^A_
8[]A\A]A^A_
D$ H
T$ H
D$ H
HcStH
Annodex demux plugin
Annodex
anx axa axv
OGG demux plugin
ogx ogv oga ogg spx ogm
OggS
channel %d
LANGUAGE=
CHAPTER
NAME=
%s / %s
libxine1
Speex
video
audio
text
FLAC
demux_ogg.c
AnxData
Content-Type: 
audio/x-vorbis
audio/x-speex
video/x-theora
text/x-cmml
CMML
seeking keyframe i %ld p %ld
application/annodex: anx: Annodex media;application/x-annodex: anx: Annodex media;audio/annodex: axa: Annodex audio;audio/x-annodex: axa: Annodex audio;video/annodex: axv: Annodex video;video/x-annodex: axv: Annodex video;
application/ogg: ogx: Ogg Stream;application/x-ogg: ogx: Ogg Stream;application/x-ogm: ogx: Ogg Stream;application/x-ogm-audio: oga: Ogg Audio;application/x-ogm-video: ogv: Ogg Video;audio/ogg: oga: Ogg Audio;audio/x-ogg: oga: Ogg Audio;video/ogg: ogv: Ogg Video;video/x-ogg: ogv: Ogg Video;
diff=%ld (pts=%ld, last_pts=%ld)
demux_ogg: MAX_STREAMS exceeded, aborting.
demux_ogg: stream with no beginning!
ogg: vorbis audio track indicated but no vorbis stream header found.
demux_ogg: unknown audio codec type 0x%x
Direct Show Samples embedded in Ogg
FIXME, old audio format not handled
old header detected but stream type is unknown
demux_ogg: Theorastreamsupport is highly alpha at the moment
A theora header was rejected by libtheora
assert: %s:%d: %s: Assertion `%s' failed.
memcmp(&op->packet[0], flac_signature_1, sizeof(flac_signature_1)) == 0
memcmp(&op->packet[9], flac_signature_2, sizeof(flac_signature_2)) == 0
header.length == FLAC_STREAMINFO_SIZE
demux_ogg: unknown stream type (signature >%.8s<). hex dump of bos packet follows:
fLaC
decode_flac_header
FLAC
ALBUM=
ARTIST=
PUBLISHER=
COPYRIGHT=
DISCNUMBER=
LICENSE=
TITLE=
TRACKNUMBER=
COMPOSER=
ARRANGER=
LYRICIST=
AUTHOR=
CONDUCTOR=
PERFORMER=
ENSEMBLE=
OPUS=
PART=
PARTNUMBER=
GENRE=
DATE=
LOCATION=
COMMENT=
@wKA
;*3$"
xineplug_dmx_ogg.so.debug
s?zp
7zXZ
Z,<7R!
Uk.\=
c+Y5
^xV2
7*e*
QB'6
>GFc
r"_M|
/DV.V
NS`-
^GX$
)x3D
eAZ9]5P
O+&~
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.bss
.gnu_debuglink
.gnu_debugdata
