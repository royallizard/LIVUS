'$37
O8$p
MElW` 
 kKrv
|c	b
"`oKr
\#Cz
|Q<i{
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
_ZN14bx_param_num_c3getEv
_ZN24bx_simulator_interface_c9get_paramEPKcP10bx_param_c
_ZN24bx_simulator_interface_c13get_param_numEPKcP10bx_param_c
_ZN24bx_simulator_interface_c16get_param_stringEPKcP10bx_param_c
_ZN24bx_simulator_interface_c14get_param_boolEPKcP10bx_param_c
_ZN24bx_simulator_interface_c14get_param_enumEPKcP10bx_param_c
_ZN24bx_simulator_interface_c13is_pci_deviceEPKc
_ZN24bx_simulator_interface_c21register_addon_optionEPKcPFiS1_iPPcEPFiP8_IO_FILEE
_ZN24bx_simulator_interface_c23unregister_addon_optionEPKc
_ZN24bx_simulator_interface_c14get_bochs_rootEv
_ZN24bx_simulator_interface_c20init_std_nic_optionsEPKcP9bx_list_c
_ZN24bx_simulator_interface_c16parse_nic_paramsEPKcS1_P9bx_list_c
_ZN24bx_simulator_interface_c16write_param_listEP8_IO_FILEP9bx_list_cPKcj
_ZN13bx_devmodel_c4initEv
_ZN13bx_devmodel_c5resetEj
_ZN13bx_devmodel_c14register_stateEv
_ZN13bx_devmodel_c19after_restore_stateEv
_ZN20bx_pci_device_stub_c16pci_read_handlerEhj
_ZN20bx_pci_device_stub_c17pci_write_handlerEhjj
_ZN9bx_ne2k_c16mem_read_handlerEmjPvS0_
theNE2kDevice
_ZN13bx_pic_stub_c9raise_irqEj
pluginlog
_ZN12logfunctions5panicEPKcz
_ZN13bx_pic_stub_c9lower_irqEj
_ZN17bx_pci2isa_stub_c11pci_set_irqEhjj
_ZN20bx_pci_device_stub_cD2Ev
_ZTV20bx_pci_device_stub_c
_ZdaPv
_ZN20bx_pci_device_stub_cD1Ev
_ZN20bx_pci_device_stub_cD0Ev
_ZdlPvm
_ZN13bx_devmodel_cD2Ev
_ZTV13bx_devmodel_c
_ZN12logfunctionsD2Ev
_ZN13bx_devmodel_cD1Ev
_ZN13bx_devmodel_cD0Ev
_ZN9bx_ne2k_c16pci_read_handlerEhj
_ZN12logfunctions6ldebugEPKcz
_ZThn48_N9bx_ne2k_c16pci_read_handlerEhj
_ZN9bx_ne2k_c17mem_write_handlerEmjPvS0_
_ZN12logfunctions4infoEPKcz
_ZN9bx_ne2k_c19after_restore_stateEv
bx_devices
_ZN9bx_ne2k_c13write_handlerEPvjjj
_ZN9bx_ne2k_c12read_handlerEPvjj
_ZN12bx_devices_c15pci_set_base_ioEPvPFjS0_jjEPFvS0_jjjEPjPhjPKhPKc
_ZN12bx_devices_c16pci_set_base_memEPvPFjmjS0_S0_ES2_PjPhj
_ZN9bx_ne2k_c17pci_write_handlerEhjj
_ZThn48_N9bx_ne2k_c17pci_write_handlerEhjj
_Z17ne2k_options_saveP8_IO_FILE
_ZN9bx_ne2k_c14register_stateEv
_Znwm
_ZN9bx_list_cC1EP10bx_param_cPKcS3_
_ZN9bx_list_cC1EP10bx_param_cPKc
_ZN16bx_shadow_bool_cC1EP10bx_param_cPKcPjh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPhihh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPtihh
__sprintf_chk
_ZN16bx_shadow_data_cC1EP10bx_param_cPKcPhj
_ZN20bx_pci_device_stub_c18register_pci_stateEP9bx_list_c
_Unwind_Resume
__stack_chk_fail
__gxx_personality_v0
_ZN9bx_ne2k_cD2Ev
_ZTV9bx_ne2k_c
_ZThn48_N9bx_ne2k_cD1Ev
_ZN9bx_ne2k_cD1Ev
_ZN9bx_ne2k_cD0Ev
_ZThn48_N9bx_ne2k_cD0Ev
_Z19ne2k_options_parserPKciPPc
strtoul
_ZN12logfunctions5errorEPKcz
strtol
_ZN15bx_param_enum_c11set_by_nameEPKc
_ZN9bx_ne2k_c4initEv
pluginRegisterIRQ
pluginRegisterIOReadHandlerRange
pluginRegisterIOWriteHandlerRange
pluginRegisterIOReadHandler
pluginRegisterIOWriteHandler
bx_gui
_ZN8bx_gui_c19register_statusitemEPKcj
_ZN9bx_ne2k_c17rx_status_handlerEPv
_ZN9bx_ne2k_c10rx_handlerEPvPKvj
_ZN9bx_list_c11get_by_nameEPKc
_ZN12bx_devices_c21register_pci_handlersEP20bx_pci_device_stub_cPhPKcS4_
_ZN9bx_ne2k_c16tx_timer_handlerEPv
bx_pc_system
_ZN14bx_pc_system_c14register_timerEPvPFvS0_EjjjPKc
_ZN20bx_pci_device_stub_c12load_pci_romEPKc
_Z17ne2k_init_optionsv
_ZN15bx_param_bool_cC1EP10bx_param_cPKcS3_S3_lj
_ZN14bx_param_num_cC1EP10bx_param_cPKcS3_S3_lllj
_ZN9bx_list_c5cloneEv
_ZN14bx_param_num_c18set_dependent_listEP9bx_list_c
libne2k_LTX_plugin_fini
_ZN9bx_ne2k_cC2Ev
_ZN12logfunctionsC2Ev
_ZN12logfunctions3putEPKc
memset
_ZN9bx_ne2k_cC1Ev
libne2k_LTX_plugin_init
pluginRegisterDeviceDevmodel
_ZN9bx_ne2k_c7read_crEv
_ZN9bx_ne2k_c12chipmem_readEjj
_ZN9bx_ne2k_c13chipmem_writeEjjj
_ZN9bx_ne2k_c10page0_readEjj
_ZN9bx_ne2k_c10page1_readEjj
_ZN9bx_ne2k_c11page1_writeEjjj
_ZN9bx_ne2k_c10page2_readEjj
_ZN9bx_ne2k_c11page2_writeEjjj
_ZN9bx_ne2k_c10page3_readEjj
_ZN9bx_ne2k_c11page3_writeEjjj
_ZN9bx_ne2k_c11mcast_indexEPKv
_ZN9bx_ne2k_c9rx_statusEv
_ZN9bx_ne2k_c13set_irq_levelEj
_ZN9bx_ne2k_c5resetEj
_ZN9bx_ne2k_c9asic_readEjj
_ZN9bx_ne2k_c10asic_writeEjjj
_ZN9bx_ne2k_c11page0_writeEjjj
_ZN9bx_ne2k_c8tx_timerEv
_ZN9bx_ne2k_c8rx_frameEPKvj
memcmp
memcpy
_ZN8bx_gui_c17statusbar_setitemEijj
_ZN9bx_ne2k_c8write_crEj
_ZN14bx_pc_system_c14activate_timerEjjj
_ZTS12logfunctions
_ZTI12logfunctions
_ZTVN10__cxxabiv117__class_type_infoE
_ZTS13bx_devmodel_c
_ZTI13bx_devmodel_c
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTS20bx_pci_device_stub_c
_ZTI20bx_pci_device_stub_c
_ZTS9bx_ne2k_c
_ZTI9bx_ne2k_c
libstdc++.so.6
libm.so.6
libc.so.6
libgcc_s.so.1
_edata
__bss_start
_end
libbx_ne2k.so.0
GCC_3.0
GLIBCXX_3.4
CXXABI_1.3
CXXABI_1.3.9
GLIBC_2.14
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.2.5
StIH
NHPH
AWAV@
AUATUSH
w$Ic
T&8A9
([]A\A]A^A_
NHPH
[]A\A]A^A_
ATUI
u$[1
[]A\E1
AWAVAUATS1
A^A_
A[A]
AYAZ
A^A_
A[A]
AYAZ
A^A_
A[A]
AYAZ
A^A_
AZA[H
AXAY
[A\A]A^A_]
AWAV
AUATI
H0H;
@HH;
J0H;
@8H;
[]A\A]A^A_
@8H;
@HH;
@PH;
@HH;
AWAVH
AUATE1
D$81
H0L9
@HH;
J0H;
@@H;
NE2000 NH
D$ fD
@8H;
J0H;
@8H;
J0H;
5ug 
5%g 
57g 
@@H;
T$&RA
T$5RD
L$<L
D$8dH3
H[]A\A]A^A_
@0L9
NE2000 P
D$ H
t$,H
D$ A
D$(CI NH
@@H;
T$ A
D$&PD
D$-1
AVAUL
ATE1
@0H;
[A\A]A^]
@0H;
ATUH
[]A\
ATUH
ua[]A\
%%[ 
[]A\
[]A\H
ATUS
[]A\
[]A\
%IY 
-	W 
ATUA
ATUA
[]A\
[]A\
[]A\H
ATUA
[]A\
ATUA
[]A\H
[]A\
[]A\
[]A\
[]A\H
[]A\
[]A\
[]A\
[]A\H
R8H;
R0H;
B0L;
-`O 
-dK 
u%[D
[]A\
AUAT
-nJ 
[]A\A]
[]A\A]H
[]A\A]
[]A\A]
[]A\A]H
AVAUATU
%iH 
[]A\A]A^
[]A\A]A^
[]A\A]A^H
[]A\A]A^H
AWAV
AUATI
-lB 
([]A\A]A^A_
;wcD
[]A\A]A^A_H
([]A\A]A^A_
[]A\
gfff
[]A\
AUATA
-2; 
[]A\A]
[]A\A]
[]A\A]1
[]A\A]
[]A\A]
[]A\A]
[]A\A]
raise_irq
%s called in %s stub. you must not have loaded the %s plugin
lower_irq
pci2isa
pci_set_irq
NE2000 PCI NIC read  register 0x%02x value 0x%08x
write to ROM ignored (addr=0x%08x len=%d)
write PCI register 0x%02x value 0x%02x
write PCI register 0x%02x value 0x%04x
write PCI register 0x%02x value 0x%08x
%s: 'ne2k' directive incomplete (ioaddr and irq are required)
%s: 'ne2k' directive incomplete (mac address is required)
Init $Id: ne2k.cc 11606 2013-02-01 19:13:58Z vruppert $
%s: boot ROM support not present yet
%s initialized port 0x%x/32 irq %d mac %02x:%02x:%02x:%02x:%02x:%02x
%s initialized mac %02x:%02x:%02x:%02x:%02x:%02x
Enables the NE2K NIC emulation
I/O base address of the emulated NE2K device
out-of-bounds chipmem read, %04X
out-of-bounds chipmem write, %04X
bad length! page 0 read from register 0x%02x, len=%u
reading FIFO not supported yet
page 0 register 0x%02x out of range
page 0 read from register 0x%02x, value=0x%02x
page 1 read from register 0x%02x, len=%u
bad length! page 1 read from register 0x%02x, len=%u
returning current page: 0x%02x
page 1 read register 0x%02x out of range
page 1 write to register 0x%02x, len=%u, value=0x%04x
Physical address set to %02x:%02x:%02x:%02x:%02x:%02x
page 1 write register 0x%02x out of range
page 2 read from register 0x%02x, len=%u
bad length!  page 2 read from register 0x%02x, len=%u
reserved read - page 2, register 0x%02x
page 2 register 0x%02x out of range
page 2 write to register 0x%02x, len=%u, value=0x%04x
page 2 write to reserved register 0x04
page 2 write to reserved register 0x%02x
page 2 write, illegal register 0x%02x
page 3 read register 0x%02x attempted
page 3 write register 0x%02x attempted
ne2K: dma read underrun iolen=%d remote_bytes=%d
asic read invalid address %04x
ne2K: unknown value of pgsel in read - %d
asic write addr=0x%02x, value=0x%04x
dma write length %d on byte mode operation
asic write invalid address %04x, ignoring
page 0 write to register 0x%02x, value=0x%02x
TCR write, loop mode %d not supported
TCR write, inhibit-CRC not supported
TCR write, auto transmit disable not supported
DCR write, loopback mode selected
page 0 write, bad register 0x%02x
rejected small packet, length %d
CR write - invalid rDMA value 0
CR write - tx start, dev in reset
CR write - tx start, tx bytes == 0
CR write, tx timer still active
write addr %x, value %x len %d
ne2K: unknown value of pgsel in write - %d
NE2000 PCI NIC
new base address: 0x%04x
new ROM address: 0x%08x
new irq line = %d
network.ne2k
NE2000 State
tx_packet
rdma_cmd
pgsel
pkt_rx
pkt_tx
rx_err
tx_err
overwrite
cnt_oflow
rdma_done
reset
rx_inte
tx_inte
rxerr_inte
txerr_inte
overw_inte
cofl_inte
rdma_inte
wdsize
endian
longaddr
loop
auto_rx
fifo_size
crc_disable
loop_cntl
ext_stoptx
coll_prio
tx_ok
collided
aborted
no_carrier
fifo_ur
cd_hbeat
ow_coll
errors_ok
runts_ok
broadcast
multicast
promisc
monitor
rx_ok
bad_crc
bad_falign
fifo_or
rx_missed
rx_mbit
rx_disabled
deferred
local_dma
page_stop
bound_ptr
tx_page_start
num_coll
tx_bytes
fifo
remote_dma
remote_start
remote_bytes
tallycnt_0
tallycnt_1
tallycnt_2
physaddr
curr_page
mchash
rempkt_ptr
localpkt_ptr
address_cnt
tx_timer_active
Exit
enabled
ethmod
null
ioaddr=
ioaddr
irq=
%s: unknown directive '%s'
NE2000 disabled
general.plugin_ctrl
bootrom
none
NE2000 ethernet NIC
NE2K
network
NE2000
Enable NE2K NIC emulation
NE2K I/O Address
IRQ used by the NE2K device
NE2K Interrupt
read CR returns 0x%02x
unaligned chipmem word read
unaligned chipmem word write
reserved read - page 0, 0xa
reserved read - page 0, 0xb
read addr %x, len %d
ne2K: dma write, byte count 0
RCR write, reserved bits set
RCR write, monitor bit set!
TCR write, reserved bits set
DCR write - LAS set ???
DCR write - AR set ???
IMR write, reserved bit set
tx_timer
rx_frame with length %d
rx_frame promiscuous receive
wrote 0x%02x to CR
Sending buffer #x%x length %d
Loop mode %d not supported.
12logfunctions
13bx_devmodel_c
20bx_pci_device_stub_c
9bx_ne2k_c
;*3$"
zPLR
libbx_ne2k.so.0.0.0.debug
7zXZ
f\]d
fu|B3
B5&U
pEh)Pt!
$;id|&
"n<p
<|r~
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.init
.plt
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.data
.bss
.gnu_debuglink
.gnu_debugdata
