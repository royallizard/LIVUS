xC0;
__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
my_init
register_match
addr_to_dotted
strcpy
addr_to_anyname
mask_to_dotted
__strcat_chk
__printf_chk
__stack_chk_fail
putchar
exit_error
strncasecmp
string_to_number
optarg
optind
check_inverse
parse_hostnetworkmask
strchr
strlen
__strdup
free
__ctype_tolower_loc
parse_protocol
libc.so.6
_edata
__bss_start
_end
GLIBC_2.3
GLIBC_2.4
GLIBC_2.2.5
GLIBC_2.3.4
ATSubH
[]A\A]
S8H9
[]A\A]1
[]A\A]1
fffff.
ffffff.
L$I Hc
T$4H
D$ A
L$H A
d$(L
l$0L
t$8L
|$@H
D$@H
T$8I
L$@H9
L$I@A
L$H@
T$,H
T$(H
T$0H
u|Ic
D$I@t
D$@I
anywhere
%sctstate 
%sINVALID
%sNEW
%sRELATED
%sESTABLISHED
%sUNTRACKED
%sSNAT
%sDNAT
%sctproto 
%sctorigsrc 
%sctorigdst 
%sctreplsrc 
%sctrepldst 
%sctstatus 
%sEXPECTED
%sSEEN_REPLY
%sASSURED
%sNONE
%sctexpire 
%lu:%lu 
1.3.8
expire value invalid: `%s'
Bad ctstate `%s'
Bad ctstatus `%s'
ctstate
ctproto
ctorigsrc
ctorigdst
ctreplsrc
ctrepldst
ctstatus
ctexpire
conntrack match v%s options:
 [!] --ctstate [INVALID|ESTABLISHED|NEW|RELATED|UNTRACKED|SNAT|DNAT][,...]
				State(s) to match
 [!] --ctproto	proto		Protocol to match; by number or name, eg. `tcp'
     --ctorigsrc  [!] address[/mask]
				Original source specification
     --ctorigdst  [!] address[/mask]
				Original destination specification
     --ctreplsrc  [!] address[/mask]
				Reply source specification
     --ctrepldst  [!] address[/mask]
				Reply destination specification
 [!] --ctstatus [NONE|EXPECTED|SEEN_REPLY|ASSURED|CONFIRMED][,...]
				Status(es) to match
 [!] --ctexpire time[:time]	Match remaining lifetime in seconds against
				value or range of values (inclusive)
You must specify one or more options
rule would never match protocol
multiple IP addresses not allowed
expire min. range value `%lu' greater than max. range value `%lu'
conntrack
libipt_conntrack.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
