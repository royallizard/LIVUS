4#(W
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
_ZN13bx_devmodel_c4initEv
_ZN13bx_devmodel_c5resetEj
_ZN13bx_devmodel_c14register_stateEv
_ZN13bx_devmodel_c19after_restore_stateEv
_ZN14bx_cmos_stub_c11get_timevalEv
_ZN9bx_cmos_c7get_regEj
_ZN9bx_cmos_c7set_regEjj
_ZN9bx_cmos_c11get_timevalEv
_ZN9bx_cmos_c13checksum_cmosEv
theCmosDevice
_ZN14bx_cmos_stub_c13checksum_cmosEv
pluginlog
_ZN12logfunctions5panicEPKcz
_ZN14bx_cmos_stub_c7set_regEjj
_ZN14bx_cmos_stub_c7get_regEj
_ZN9bx_cmos_c14register_stateEv
_Znwm
_ZN9bx_list_cC1EP10bx_param_cPKcS3_i
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPhihh
_ZN9bx_list_cC1EP10bx_param_cPKci
__sprintf_chk
_ZdlPv
_Unwind_Resume
__stack_chk_fail
__gxx_personality_v0
_ZN13bx_devmodel_cD2Ev
_ZTV13bx_devmodel_c
_ZN12logfunctionsD2Ev
_ZN13bx_devmodel_cD1Ev
_ZN9bx_cmos_c12read_handlerEPvjj
_ZN12logfunctions6ldebugEPKcz
bx_devices
_ZN9bx_cmos_c10save_imageEv
open64
write
close
_ZN14bx_cmos_stub_cD2Ev
_ZN14bx_cmos_stub_cD1Ev
_ZN13bx_devmodel_cD0Ev
_ZN14bx_cmos_stub_cD0Ev
_ZN9bx_cmos_cD2Ev
_ZTV9bx_cmos_c
ctime
strdup
_ZN12logfunctions4infoEPKcz
free
_ZN9bx_cmos_cD1Ev
_ZN9bx_cmos_cD0Ev
_Z10bcd_to_binhj
_Z10bin_to_bcdhj
libcmos_LTX_plugin_fini
_ZN9bx_cmos_cC2Ev
_ZN12logfunctionsC2Ev
_ZN12logfunctions3putEPKc
_ZN9bx_cmos_cC1Ev
libcmos_LTX_plugin_init
pluginRegisterDeviceDevmodel
_ZN9bx_cmos_c10CRA_changeEv
bx_pc_system
_ZN14bx_pc_system_c16deactivate_timerEj
_ZN14bx_pc_system_c14activate_timerEjjj
_ZN9bx_cmos_c5resetEj
_ZN9bx_cmos_c14periodic_timerEv
_ZN9bx_cmos_c22periodic_timer_handlerEPv
_ZN9bx_cmos_c16one_second_timerEv
_ZN9bx_cmos_c24one_second_timer_handlerEPv
_ZN9bx_cmos_c12update_clockEv
localtime
_ZN9bx_cmos_c9uip_timerEv
_ZN9bx_cmos_c17uip_timer_handlerEPv
_ZN9bx_cmos_c14update_timevalEv
mktime
_ZN9bx_cmos_c13write_handlerEPvjjj
_ZN12logfunctions5errorEPKcz
_ZN9bx_cmos_c19after_restore_stateEv
_ZN9bx_cmos_c4initEv
pluginRegisterIOReadHandler
pluginRegisterIOWriteHandler
pluginRegisterIRQ
__fxstat64
read
gmtime
_ZN14bx_pc_system_c14register_timerEPvPFvS0_EjjjPKc
_ZTS9bx_cmos_c
_ZTI9bx_cmos_c
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTI14bx_cmos_stub_c
_ZTI13bx_devmodel_c
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTS13bx_devmodel_c
_ZTI12logfunctions
_ZTVN10__cxxabiv117__class_type_infoE
_ZTS12logfunctions
_ZTS14bx_cmos_stub_c
_ZTV14bx_cmos_stub_c
libstdc++.so.6
libm.so.6
libc.so.6
libgcc_s.so.1
_edata
__bss_start
_end
libbx_cmos.so.0
GCC_3.0
CXXABI_1.3
GLIBCXX_3.4
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.2.5
%z1 
%r1 
%j1 
%b1 
%Z1 
%R1 
%J1 
%B1 
%:1 
%21 
%*1 
%"1 
%z0 
%r0 
%j0 
%b0 
%Z0 
%R0 
%J0 
%B0 
%:0 
%20 
%*0 
fffff.
=X) 
=B) 
AUATUSH
([]A\A]
qtMH
%'* 
[]A\
fffff.
@[@H
P,u7H
=f' 
=I' 
@[@u
`t(H
=s& 
fffff.
AUATUSH
D$PL
D$RL
t$LA
D$VL
D$WL
[]A\A]
D$TL
:HTt
%0" 
qt4H
t$ H
7v+H
t$ H
t$ H
t$ H
ATUH
D$8H
T$@H
H;D$@t
[]A\A]
D$8H
T$@H
D$0L
D$(L
cmos
checksum
set_reg
get_reg
CMOS State
mem_address
clock_cmos.cmosimage.enabled
clock_cmos.cmosimage.path
Last time is %u (%s)
Exit
CMOS
CRA: divider chain RESET
write register 0x0e: 0x%02x
CMOS RAM
CMOS RTC
clock_cmos.time0
clock_cmos.cmosimage.rtc_init
Out of memory.
%s called in %s stub. you must not have loaded the %s plugin
CMOS read of CMOS register 0x%02x
read of index port 0x70. returning 0xff
unsupported cmos read, address=0x%04x!
CMOS: error writing cmos file.
CMOS write to address: 0x%04x = 0x%02x
alarm time changed to %02x:%02x:%02x
CRA: divider chain control 0x%02x
write status reg B, daylight savings unsupported
write to control register 0x%02x ignored (read-only)
Reg 0Fh(00): shutdown action = normal POST
Reg 0Fh(01): request to change shutdown action to shutdown after memory size check
Reg 0Fh(02): request to change shutdown action to shutdown after successful memory test
Reg 0Fh(03): request to change shutdown action to shutdown after successful memory test
Reg 0Fh(04): request to change shutdown action to jump to disk bootstrap routine.
Reg 0Fh(05): request to change shutdown action to flush keyboard (issue EOI) and jump via 40h:0067h.
Reg 0Fh(06): Shutdown after memory test !
Reg 0Fh(07): request to change shutdown action to reset (after failed test in virtual mode).
Reg 0Fh(08): request to change shutdown action to return to POST (used by POST during protected-mode RAM test).
Reg 0Fh(09): request to change shutdown action to return to BIOS extended memory block move.
Reg 0Fh(0a): request to change shutdown action to jump to DWORD at 40:67
Reg 0Fh(0b): request to change shutdown action to iret to DWORD at 40:67
Reg 0Fh(0c): request to change shutdown action to retf to DWORD at 40:67
unsupported shutdown status: 0x%02x!
write reg 0x%02x: value = 0x%02x
Init $Id: cmos.cc 10209 2011-02-24 22:05:47Z sshwarts $
Using local time for initial clock
Using utc time for initial clock
Using specified time for initial clock
trying to open cmos image file '%s'
CMOS: could not fstat() image file.
CMOS: image file size must be 64 or 128
CMOS: error reading cmos file.
successfuly read from image file '%s'.
Setting initial clock to: %s (time0=%u)
9bx_cmos_c
13bx_devmodel_c
12logfunctions
14bx_cmos_stub_c
;*3$"
zPLR
libbx_cmos.so.0.0.0.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.gcc_except_table
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.bss
.init
.rela.plt
.got.plt
.got
.text
.fini_array
.init_array
