sKr4
b1/,
\#1L
 kKr
9>g 
aoKrE
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
_ZN24bx_simulator_interface_c16get_param_stringEPKcP10bx_param_c
_ZN24bx_simulator_interface_c13is_pci_deviceEPKc
_ZN24bx_simulator_interface_c14get_bochs_rootEv
_ZN18bx_nonvga_device_c11redraw_areaEjjjj
_ZN18bx_nonvga_device_c15refresh_displayEPvj
_ZN8bx_vga_c5resetEj
theVga
_ZN8bx_vga_c16mem_read_handlerEmjPvS0_
_ZN8bx_vga_c17mem_write_handlerEmjPvS0_
_ZN8bx_vga_c16pci_read_handlerEhj
_ZN12logfunctions6ldebugEPKcz
_ZThn48_N8bx_vga_c16pci_read_handlerEhj
_ZN8bx_vga_c17vbe_set_base_addrEPjPh
bx_devices
_ZN12bx_devices_c16pci_set_base_memEPvPFjmjS0_S0_ES2_PjPhj
_ZN8bx_vga_c16vbe_read_handlerEPvjj
_ZN12logfunctions5panicEPKcz
_ZN8bx_vga_c17pci_write_handlerEhjj
_ZN12logfunctions4infoEPKcz
_ZThn48_N8bx_vga_c17pci_write_handlerEhjj
_ZN8bx_vga_c17vbe_write_handlerEPvjjj
_ZN12logfunctions5errorEPKcz
bx_gui
memset
_ZN8bx_vga_c18init_vga_extensionEv
_ZN8bx_vga_c13write_handlerEPvjjj
_ZN12bx_vgacore_c12read_handlerEPvjj
_ZN12bx_vgacore_c15init_iohandlersEPFjPvjjEPFvS0_jjjE
_ZN8bx_vga_c17vga_param_handlerEP10bx_param_cil
_ZN8bx_vga_c13timer_handlerEPv
_ZN12bx_vgacore_c16init_systemtimerEPFvPvEPFlP10bx_param_cilE
_ZN12bx_devices_c21register_pci_handlersEP20bx_pci_device_stub_cPhPKcS4_
_ZN20bx_pci_device_stub_c12load_pci_romEPKc
_ZN12logfunctions3putEPKc
pluginRegisterIOReadHandler
pluginRegisterIOWriteHandler
_ZN8BX_MEM_C22registerMemoryHandlersEPvPFjmjS0_S0_ES2_PFPhmjS0_Emm
_Znam
__stack_chk_fail
_ZN8bx_vga_c14register_stateEv
_Znwm
_ZN9bx_list_cC1EP10bx_param_cPKcS3_
_ZN12bx_vgacore_c14register_stateEP9bx_list_c
_ZN9bx_list_cC1EP10bx_param_cPKc
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPtihh
_ZN16bx_shadow_bool_cC1EP10bx_param_cPKcPjh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPjihh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPhihh
_ZN20bx_pci_device_stub_c18register_pci_stateEP9bx_list_c
_ZdlPvm
_Unwind_Resume
__gxx_personality_v0
_ZN8bx_vga_cD2Ev
_ZTV8bx_vga_c
_ZN12bx_vgacore_cD2Ev
_ZThn48_N8bx_vga_cD1Ev
_ZN8bx_vga_cD1Ev
_ZN8bx_vga_cD0Ev
_ZThn48_N8bx_vga_cD0Ev
libvga_LTX_plugin_fini
_ZN8bx_vga_cC2Ev
_ZN12bx_vgacore_cC2Ev
_ZN8bx_vga_cC1Ev
libvga_LTX_plugin_init
pluginRegisterDeviceDevmodel
_ZN8bx_vga_c5writeEjjjj
_ZN12bx_vgacore_c5writeEjjjj
_ZN8bx_vga_c20write_handler_no_logEPvjjj
_ZN8bx_vga_c6updateEv
bx_pc_system
_ZN14bx_pc_system_c9time_usecEv
_ZN8bx_gui_c25graphics_tile_info_commonEP18bx_svga_tileinfo_t
memcpy
_ZN12bx_vgacore_c6updateEv
_ZN12bx_vgacore_c27determine_screen_dimensionsEPjS0_
_ZN12bx_vgacore_c13get_vga_pixelEttttjPPh
_ZN8bx_gui_c27graphics_tile_update_commonEPhjj
bx_virt_timer
_ZN15bx_virt_timer_c14activate_timerEjjj
_ZN8bx_vga_c15refresh_displayEPvj
_ZN8bx_vga_c12vbe_mem_readEm
_ZN8bx_vga_c13vbe_mem_writeEmh
_ZN8bx_vga_c19after_restore_stateEv
_ZN12bx_vgacore_c19after_restore_stateEv
_ZN8bx_vga_c8mem_readEm
_ZN12bx_vgacore_c8mem_readEm
_ZN8bx_vga_c9mem_writeEmh
_ZN12bx_vgacore_c9mem_writeEmh
_ZN8bx_vga_c11redraw_areaEjjjj
_ZN12bx_vgacore_c11redraw_areaEjjjj
_ZTS8bx_vga_c
_ZTI8bx_vga_c
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTI12bx_vgacore_c
_ZN12bx_vgacore_c4initEv
_ZN12bx_vgacore_c17get_text_snapshotEPPhPjS2_
_ZN12bx_vgacore_c12set_overrideEjPv
_ZN14bx_param_num_c3getEv
_ZN24bx_simulator_interface_c13get_param_numEPKcP10bx_param_c
_ZN13bx_devmodel_c4initEv
_ZN13bx_devmodel_c5resetEj
_ZN13bx_devmodel_c14register_stateEv
_ZN13bx_devmodel_c19after_restore_stateEv
_ZN20bx_pci_device_stub_c16pci_read_handlerEhj
_ZN20bx_pci_device_stub_c17pci_write_handlerEhjj
_ZN12bx_vgacore_c5resetEj
_ZN12bx_vgacore_c15refresh_displayEPvj
_ZN12bx_vgacore_c18init_vga_extensionEv
_ZN12bx_vgacore_c16mem_read_handlerEmjPvS0_
_ZN12bx_vgacore_c17mem_write_handlerEmjPvS0_
_ZN14bx_cmos_stub_c7get_regEj
pluginlog
_ZN14bx_cmos_stub_c7set_regEjj
_ZN13bx_devmodel_cD2Ev
_ZTV13bx_devmodel_c
_ZN12logfunctionsD2Ev
_ZN13bx_devmodel_cD1Ev
_ZN13bx_devmodel_cD0Ev
_ZN20bx_pci_device_stub_cD2Ev
_ZTV20bx_pci_device_stub_c
_ZdaPv
_ZN20bx_pci_device_stub_cD1Ev
_ZN20bx_pci_device_stub_cD0Ev
__sprintf_chk
_ZN16bx_shadow_data_cC1EP10bx_param_cPKcPhj
_ZN8bx_gui_c17set_text_charbyteEth
_ZN15bx_virt_timer_c16deactivate_timerEj
_ZTV12bx_vgacore_c
_ZN14bx_param_num_c11set_handlerEPFlP10bx_param_cilE
_ZThn48_N12bx_vgacore_cD1Ev
_ZN12bx_vgacore_cD1Ev
_ZN12bx_vgacore_cD0Ev
_ZThn48_N12bx_vgacore_cD0Ev
_ZN12logfunctionsC2Ev
_ZN12bx_vgacore_cC1Ev
_ZN12bx_vgacore_c17init_standard_vgaEv
_ZN12bx_vgacore_c8init_guiEv
strlen
_ZN8bx_gui_c4initEiPPcjjjj
_ZN17bx_param_string_c3getEPci
strtok
isspace
free
strdup
_ZN8BX_MEM_C8load_ROMEPKcmh
_ZN15bx_virt_timer_c14register_timerEPvPFvS0_EjjjPKc
_ZN12bx_vgacore_c24calculate_retrace_timingEv
_ZN12bx_vgacore_c4readEjj
_ZN8bx_gui_c21palette_change_commonEhhhh
_ZN8bx_gui_c16set_text_charmapEPh
_ZN12bx_vgacore_c13write_handlerEPvjjj
_ZN12bx_vgacore_c11skip_updateEv
_ZN12bx_vgacore_c5timerEv
_ZN12bx_vgacore_c13timer_handlerEPv
_ZTS12logfunctions
_ZTI12logfunctions
_ZTVN10__cxxabiv117__class_type_infoE
_ZTS13bx_devmodel_c
_ZTI13bx_devmodel_c
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTS20bx_pci_device_stub_c
_ZTI20bx_pci_device_stub_c
_ZTS13bx_vga_stub_c
_ZTI13bx_vga_stub_c
_ZTS12bx_vgacore_c
libstdc++.so.6
libm.so.6
libc.so.6
libgcc_s.so.1
_edata
__bss_start
_end
libbx_vga.so.0
GCC_3.0
CXXABI_1.3
CXXABI_1.3.9
GLIBCXX_3.4
GLIBC_2.14
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.2.5
tYAUAT
USH)
[]A\A]
tZAUAT
USH)
[]A\A]
AWAVD
AUATA
w4Ic
[]A\A]A^A_
[]A\A]A^A_1
AVAUATUS
[]A\A]A^
[]A\A]A^
[]A\A]A^
[]A\A]A^1
[]A\A]A^1
[]A\A]A^1
[]A\A]A^1
AWAVAUATUSH
A@H;
[]A\A]A^A_
@@H;
AVATSI
[A\A^]
A[A\
AYAZ
A[A\
AYAZ
[A\A^]
eu[USH
t;fA
AWAVAUATUSH
[]A\A]A^A_
t$`D
T$bD
t$PH
L$Tf
\$ H
\$\H
\$(H
\$XH
\$0D
\$ D
L$XE
\$XE1
T$`9
\$XA
T$bD
D$\A
T$bA
T$TH
T$Pu
L$Pf
|$ 9
t$(9
XZD9l$
D9d$
|$(9
9D$T
D$09D$P
\$0H
\$\H
\$@H
\$XH
\$HD
\$ 1
\$0D
\$ 9
D$@H
L$XE
l$8E1
|$dE
|$eI
H#T$pA
t$fH#T$x
t$`9
\$XA
T$bD
D$\A
l$(H
l$8H
D$`A
T$bA
l$(H
\$0D
\$ 9
\$0H
\$\H
\$@H
\$XH
\$HD
\$ 1
\$0D
\$ 9
D$@H
L$XE
l$8E1
|$dE
|$eI
H#T$pA
t$fH#T$x
t$`9
\$XA
T$bD
D$\A
l$(H
l$8H
D$`A
T$bA
l$(H
\$0D
\$ 9
\$0H
\$\H
\$@H
\$XH
\$HD
\$ 1
\$0D
\$ 9
D$@H
L$XE
l$8E1
L$fI
L$eM
L#|$xA
L#D$pL
|$`9
|$XA
T$bD
D$\A
l$(H
l$8H
D$`A
T$bA
l$(H
\$0D
\$ 9
\$0H
\$\H
\$@H
\$XH
\$HD
\$ 1
\$0D
\$ 9
D$@H
L$XE
l$8E1
L$fI
L$eM
L#|$xA
L#D$pL
|$`9
|$XA
T$bD
D$\A
l$(H
l$8H
D$`A
T$bA
l$(H
\$0D
\$ 9
|$(H
|$\H
|$8H
|$XH
|$@E1
\$(D
D$8D
L$XE
\$HD
d$01
L$dM
L$eL
vH#T$pG
H#L$xH
L$fD9
t$`9
\$XA
T$bD
d$ H
d$0H
L$`A
d$ H
\$(D
\$ D
@8H;
Y^uJH
J0L;
AUATUSH)
[]A\A]
[]E	
AUATUSH)
[]A\A]
AWAVAUATI
A]A^
AYAZu
A]A_
AYAZ
A[A]
AYAZ
A[A]
AYAZ
A[A]
AYAZ
A]A^
AYAZ
A]A^
AYAZ
A]A^
AYAZ
[A\A]A^A_]
AWAVAUATE1
D$(1
t=H=
D$(dH3
8[]A\A]A^A_
@"|$
@"|$
@"t$
@"t$
@"t$
@"t$
D"t$
@"t$
@"t$
D"t$
@"t$
=hy 
@8H;
J@H;
@0H;
{huMH
H;-Uu 
AWAVI
AUAT
|$0H
D$0H
@@H;
[]A\A]A^A_
D$(1
@@H;
\$(H
|$ A
ATUSH
@hH;
%pq 
@@L9
t>[]A\
@@L9
[]A\H
AWAVAUATA
=to 
D$(1
D$(dH3
]A\A]A^A_
@8H;
AUATI
P0H;
[]A\A]
[]A\A]
AVAUATI
[]A\A]A^
[]A\A]A^
=	j 
AUATA
[]A\A]
[]A\A]
[]A\A]
[]A\A]
[]A\A]
[]A\A]1
 u1H
=:U 
AWAVI
AUATUSH
D$x1
D$xdH3
[]A\A]A^A_
D$PA
D$Ru
D$RA
D$SA
t$Tf
D$VA
D$YA
D$\A
D$`t
D$XH
\$P1
T$HA
t$Lu
D$LE
D$HfA
T$TL
T$LH
t$HL
T$H9
D$LA
D$HfA
D$LI
D$LE1
9\$L
9D$H
T$HH
D$LI
D$8E
\$(9
|$49
t$ D
\$(9
|$49
T$ H
t$8H
D$ 9D$L
D$09D$H
t$HE
l$(D
9\$L
9D$H
l$HE
d$L1
l$(D
9\$L
9D$H
d$HE
T$LE1
9\$L
9D$H
\$LE1
9\$L
9D$H
AUATL
USE1
[]A\A]
[]A\A]
read  PCI register 0x%02x value 0x%02x
read  PCI register 0x%02x value 0x%04x
read  PCI register 0x%02x value 0x%08x
VBE unknown data read index 0x%x
write PCI register 0x%02x value 0x%02x
write PCI register 0x%02x value 0x%04x
write PCI register 0x%02x value 0x%08x
VBE unknown Display Interface %x
VBE known Display Interface %x
VBE set xres more then max xres (%d)
VBE set xres during vbe enabled!
VBE set yres more then max yres (%d)
VBE set yres during vbe enabled!
VBE set bpp with unknown bpp (%d)
VBE set bpp during vbe enabled!
VBE set bank in LFB mode ignored
VBE requested virtual width %d
VBE recalc virtual width %d height %d
VBE: write to virtual height register ignored
VBE: write unsupported register at index 0x%x
VBE enabling x %d, y %d, bpp %d, %u bytes visible
VBE Bochs Display Extension Enabled
write: invalid CRTC register 0x%02x ignored
current guest pixel format is unsupported on indexed colour host displays
VBE_mem_write out of video memory write at %x
VBE_read shouldn't reach this
new base address: 0x%08x
new ROM address: 0x%08x
VBE set xres (%d)
VBE set yres (%d)
VBE set bpp (%d)
VBE set bank to %d
VBE set invalid bank (%d)
VBE disabling
DAC in 8 bit mode
DAC in standard mode
VBE offset x %d
VBE offset y %d
VBE offset y %d out of bounds
VBE decent virtual height %d
pcivga
display.vga_extension
BXVGA
vga video
Experimental PCI VGA
memory.standard.vgarom.path
VGA Adapter State
cur_dispi
curindex
visible_screen_size
offset_x
offset_y
virtual_xres
virtual_yres
virtual_start
bpp_multiplier
lfb_enabled
get_capabilities
dac_8bit
Exit
cannot draw 4bpp SVGA
cannot get svga tile info
Changing timer interval to %d
8bx_vga_c
cmos
get_reg
%s called in %s stub. you must not have loaded the %s plugin
set_reg
VGA Core State
vgacore
misc_output
color_emulation
enable_ram
select_high_bank
horiz_sync_pol
vert_sync_pol
CRTC
write_protect
attribute_ctrl
flip_flop
video_enabled
palette_reg
overscan_color
color_plane_enable
horiz_pel_panning
color_select
mode_ctrl
graphics_alpha
display_type
enable_line_graphics
blink_intensity
pixel_panning_compat
pixel_clock_select
internal_palette_size
write_data_register
write_data_cycle
read_data_register
read_data_cycle
dac_state
pel_data
graphics_ctrl
enable_set_reset
color_compare
data_rotate
raster_op
read_map_select
write_mode
read_mode
chain_odd_even
shift_reg
memory_mapping
color_dont_care
bitmask
latch0
latch1
latch2
latch3
sequencer
map_mask
reset1
reset2
reg1
char_map_select
extended_mem
chain_four
line_offset
line_compare
vertical_display_end
charmap_address
x_dotclockdiv2
y_doublescan
plane_shift
plane_offset
dac_shift
last_xres
last_yres
last_bpp
last_msl
vga_override
memory
display.vga_update_frequency
none
bochs
display.displaylib_options
unknown display extension: %s
interval=%u
io read from 03cd
io read from vga port 0x%04x
8-bit write to %04x = %02x
16-bit write to %04x = %04x
Weird VGA write size
io write 3c4: value > 4
io write to 0x3cd = 0x%02x
io write: 0x3ce: value > 8
update: select_high_bank != 1
update: shift_reg == %u
vga_mem_write: write mode 0: op = %u
vga_mem_write: write mode %u ?
too many parameters, max is 16
hfreq = %.1f kHz / vfreq = %d Hz
io read: 0x3c0: flip_flop != 0
io read: 0x3c1: unknown register 0x%02x
io read 0x3c2: input status #0: ignoring
io read 0x3c5: sequencer reset
io read 0x3c5: sequencer clocking mode
io read 0x3c5: index %u unhandled
io read 0x3cf: reg 05 = 0x%02x
io read: 0x3cf: index %u unhandled
io read: invalid CRTC register 0x%02x
8-bit read from 0x%04x = 0x%02x
16-bit read from 0x%04x = 0x%04x
io write 0x3c0: address mode reg=0x%02x
io write 0x3c0: data-write mode 0x%02x
char map select: map #2 in block #%d unused
io write 0x3c5: index 0x%02x unhandled
io write 0x3c6: PEL mask=0x%02x != 0xFF
io write: 0x3cf: mode reg: value = 0x%02x
io write: 0x3cf: index %u unhandled
write: invalid CRTC register 0x%02x selected
io write: 3da: ignoring: feature ctrl & vert sync
unsupported io write to port 0x%04x, val=0x%02x
update(): text mode: out of memory
12logfunctions
13bx_devmodel_c
20bx_pci_device_stub_c
13bx_vga_stub_c
12bx_vgacore_c
;*3$"
zPLR
libbx_vga.so.0.0.0.debug
7zXZ
@v78
nq%O
1Xiw
GY_?
LC3~w.)m
lBn*0
W+q[
g(90
S$ Hj
ZC7'
X|A'
gwvt
Bipb
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.init
.plt
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.data
.bss
.gnu_debuglink
.gnu_debugdata
