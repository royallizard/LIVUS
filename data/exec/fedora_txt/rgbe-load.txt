__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
g_snprintf
gegl_operation_source_get_type
g_type_module_register_type
g_slice_alloc0
babl_format
gegl_operation_set_format
rgbe_load_path
rgbe_get_size
rgbe_file_free
g_free
rgbe_read_scanlines
gegl_buffer_set
g_type_class_peek_parent
gegl_operation_get_type
g_type_check_class_cast
g_dgettext
gegl_operation_class_set_keys
gegl_extension_handler_register
gegl_param_spec_file_path
g_object_class_install_property
g_object_set_data_full
g_slice_free1
g_type_name
g_log
g_value_set_string
g_value_get_string
g_strdup
gegl_chant_get_type
gegl_module_query
gegl_module_register
g_return_if_fail_warning
strlen
g_str_has_suffix
fwrite
g_mapped_file_get_contents
g_mapped_file_get_length
g_mapped_file_unref
rgbe_save_path
fopen64
g_strconcat
g_ascii_dtostr
g_malloc
__snprintf_chk
fclose
stdout
frexp
g_warn_message
g_mapped_file_new
g_str_has_prefix
__errno_location
g_ascii_strtod
g_strstr_len
__strncpy_chk
g_ascii_strtoull
g_malloc_n
libgmodule-2.0.so.0
libgio-2.0.so.0
libgobject-2.0.so.0
libgthread-2.0.so.0
libglib-2.0.so.0
libpthread.so.0
libc.so.6
__stack_chk_fail
_edata
__bss_start
_end
rgbe-load.so
GLIBC_2.0
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.1
GLIBC_2.3.4
UWVS
t$Pe
D$,1
T$,e3
d$<[^_]
UWVS
D$(e
D$<1
D$49G
L$<e3
d$L[^_]
D$89G
UWVS
d$,[^_]
UWVS
|$\tt
d$<[^_]
d$<[^_]
UWVS
|$\u4
d$<[^_]
d$<[^_]
d$([
d$([
d$([
d$,[^_]
d$,[^_]
UWVS
D$(1
[^_]
D$Hum
,D$0
,D$0
,D$0
T$D9
UWVS
t$`e
D$<1
L$<e3
d$L[^_]
;t$(
< uy
UWVS
D$l1
D$8f
D$$1
|$H97t,
;|$,u
|$0t1
D$$1
T$$)
\$le3
d$|[^_]
;|$4sD
;|$4
D$,9D$@
GeglChantrgbe-load.c
RGBA float
output
gegl-0.2
description
hidden
categories
gegl:rgbe-load
name
.hdr
.pic
Path of file to load.
File
path
chant-data
property
GEGL-../../gegl/gegl-chant.h
RGBE image loader (Radiance HDR format).
%s:%d: invalid %s id %u for "%s" of type '%s' in '%s'
header
GEGL-rgbe.c
g_str_has_suffix (line, "\n")
gegl 0.2.0
SOFTWARE=
EXPOSURE=
COLORCORR=
-Y %hu +X %hu
FORMAT=
pixels
rgbe[0] != 2 || rgbe[1] != 2
32-bit_rle_rgbe
Invalid value for COLORCORR
PIXASPECT=
Invalid pixel aspect ratio
file != NULL
file->file
cursor && *cursor > 0
file->scanlines
32-bit_rle_xyze
GPOINTER_TO_UINT (data) > GPOINTER_TO_UINT (g_mapped_file_get_contents (f))
header->format < FORMAT_UNKNOWN
rgbe[0] != 1 || rgbe[1] != 1 || rgbe[2] != 1
Unsupported color format for rgbe format
Invalid value for exposure in radiance image file
Cannot find a usable value for SOFTWARE, ignoring
Unable to parse rgbe scanlines, fail at row %u
file %s: line %d (%s): should not be reached
data[OFFSET_R] == 2 && data[OFFSET_G] == 2
pixoffset[component] == pixels + RGBE_NUM_RGBE * linesize + component
rgbe_rgbe_to_float
rgbe_read_uncompressed
rgbe_apply_exponent
rgbe_read_new_rle
rgbe_read_old_rle
rgbe_read_scanlines
rgbe_get_size
rgbe_header_read_orientation
rgbe_mapped_file_remaining
rgbe_header_read_variables
rgbe_file_init
rgbe_file_new
rgbe_float_to_rgbe
rgbe_write_uncompressed
rgbe_write_line
rgbe_header_write
rgbe_header_init
#?RADIANCE
;*2$"
rgbe-load.so.debug
7zXZ
bCK$
f:I&A
ij23gp(
K1kY
Uhg;
}afl
p~]Vw
yYm(
4n2@u8;
r'w_,
O^TV
x;uo
6Ewh
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.init
.plt
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.bss
.gnu_debuglink
.gnu_debugdata
