"m]n;
t/2|
r.Vx/2m
Z.q0
LJtgP^
{"Cz
^^bg
Y8v[
__gmon_start__
__cxa_finalize
_Jv_RegisterClasses
_ZN9pit_82C547set_OUTERNS_12counter_typeEj
_ZN9pit_82C5419set_count_to_binaryERNS_12counter_typeE
_ZN9pit_82C5419set_binary_to_countERNS_12counter_typeE
_ZN9pit_82C549set_countERNS_12counter_typeEj
_ZN9pit_82C549decrementERNS_12counter_typeE
_ZN9pit_82C545resetEj
_ZN9pit_82C5418decrement_multipleERNS_12counter_typeEj
_ZN9pit_82C5411get_inlatchEi
_ZN9pit_82C5415set_OUT_handlerEhPFvjE
_ZN9pit_82C5420get_clock_event_timeEh
_ZN12logfunctions5errorEPKcz
_ZN9pit_82C5419get_next_event_timeEv
_ZN9pit_82C549read_GATEEh
_ZN9pit_82C548read_OUTEh
_ZN9pit_82C545clockEh
_ZN9pit_82C5414clock_multipleEhj
_ZN9pit_82C548set_GATEEhj
_ZN12logfunctions4infoEPKcz
_ZN9pit_82C5413print_counterERNS_12counter_typeE
_ZN9pit_82C5410print_cnumEh
_ZN9pit_82C544readEh
_ZN12logfunctions6ldebugEPKcz
_ZN9pit_82C549clock_allEj
_ZN9pit_82C5413latch_counterERNS_12counter_typeE
_ZN9pit_82C545writeEhh
_Unwind_Resume
_ZN9pit_82C5414register_stateEP10bx_param_c
__sprintf_chk
_Znwm
_ZN9bx_list_cC1EP10bx_param_cPKci
_ZN16bx_shadow_bool_cC1EP10bx_param_cPKcPjh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPjihh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPtihh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPhihh
__stack_chk_fail
_ZdlPv
__gxx_personality_v0
_ZN9pit_82C544initEv
_ZN12logfunctions3putEPKc
_ZN9pit_82C54C2Ev
_ZN12logfunctionsC2Ev
_ZN12logfunctionsD2Ev
_ZN9pit_82C54C1Ev
_ZN13bx_devmodel_c4initEv
_ZN13bx_devmodel_c5resetEj
_ZN13bx_devmodel_c14register_stateEv
_ZN13bx_devmodel_c19after_restore_stateEv
libpit_LTX_plugin_fini
thePit
_ZN8bx_pit_c11irq_handlerEj
bx_devices
_ZN13bx_devmodel_cD2Ev
_ZTV13bx_devmodel_c
_ZN13bx_devmodel_cD1Ev
_ZN8bx_pit_c9get_timerEi
_ZN8bx_pit_c8periodicEj
_ZN8bx_pit_c13write_handlerEPvjjj
bx_virt_timer
_ZN15bx_virt_timer_c9time_usecEv
_ZN12logfunctions5panicEPKcz
_ZN15bx_virt_timer_c16deactivate_timerEj
_ZN15bx_virt_timer_c14activate_timerEjjj
_ZN8bx_pit_c12handle_timerEv
_ZN8bx_pit_c13timer_handlerEPv
_ZN8bx_pit_c12read_handlerEPvjj
_ZN8bx_pit_c14register_stateEv
_ZN9bx_list_cC1EP10bx_param_cPKcS3_i
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPmihh
_ZN8bx_pit_c5resetEj
_ZN8bx_pit_c4initEv
pluginRegisterIRQ
pluginRegisterIOReadHandler
pluginRegisterIOWriteHandler
_ZN15bx_virt_timer_c14register_timerEPvPFvS0_EjjjPKc
_ZN8bx_pit_cC2Ev
_ZTV8bx_pit_c
_ZN8bx_pit_cC1Ev
libpit_LTX_plugin_init
pluginRegisterDeviceDevmodel
_ZN13bx_devmodel_cD0Ev
_ZN8bx_pit_cD2Ev
_ZN8bx_pit_cD1Ev
_ZN8bx_pit_cD0Ev
_ZTI8bx_pit_c
_ZTS8bx_pit_c
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTI13bx_devmodel_c
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTS13bx_devmodel_c
_ZTI12logfunctions
_ZTVN10__cxxabiv117__class_type_infoE
_ZTS12logfunctions
libstdc++.so.6
libm.so.6
libc.so.6
libgcc_s.so.1
_edata
__bss_start
_end
libbx_pit.so.0
GCC_3.0
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.2.5
CXXABI_1.3
GLIBCXX_3.4
%zP 
%rP 
%jP 
%bP 
%ZP 
%RP 
%JP 
%BP 
%:P 
%2P 
%*P 
%"P 
%zO 
%rO 
%jO 
%bO 
%ZO 
%RO 
%JO 
%BO 
%:O 
ATSubH
=hI 
=OI 
fffff.
C(D9
C([]A\
[]A\
fff.
fffff.
fffff.
fff.
d/(N
l$ L
d$(L
l$0L
t$8L
|$@H
l$ L
d$(L
l$01
t$8L
|$@H
AWAVA
AUATI
(t H
([]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
(ulE
l$ H
l$ 1
|/(N
V@fA
l$ L
d$(L
l$01
t$8L
|$@H
l$ L
d$(L
l$0L
t$8L
|$@H
fE	u6
l$ H
d$(L
l$0L
t$8L
|$@H
fff.
AWAVE1
AUATUH
D$(1
|$ H
D$(dH3
8[]A\A]A^A_
fffff.
fffff.
CUSH
l$ L
|$0H
AUATUSH
-W$ 
[]A\A]
==" 
!vhL
%A" 
t$ H
%A! 
fff.
ATUSH
[]A\H
fff.
fff.
AUATUH
[]A\A]A^
fff.
ffff.
Counter number incorrect in 82C54 read_GATE
Counter number incorrect in 82C54 read_OUT
Counter number too high in clock
Undefined behavior when loading a half loaded count.
ERROR: count of 1 is invalid in pit mode 2.
Count of 1 is invalid in pit mode 3.
Counter number incorrect in 82C54 set_GATE
Bad counter index to print_cnum
Counter address incorrect in data read.
PIT Read: Control Word Register.
Read from control word register not defined.
Undefined output when status latched and count half read.
Setting read_state to MSB_mult
Setting read_state to LSB_mult
Unknown behavior when latching during 2-part read.
  This message will not be repeated.
Unknown read mode found during latch command.
Counter address incorrect in data write.
Counter Program command.  SC=%d, RW=%d, M=%d, BCD=%d
Write Initial Count: counter=%d, count=%d
write counter in invalid write state.
Mode not implemented.
Changing GATE %d to: %d
Printing Counter
count: %d
count_binary: %x
counter gate: %x
counter OUT: %x
next_change_time: %d
End Counter Printout
PIT Read: Counter %d.
clock_all:  cycles=%d
Control Word Write.
READ_BACK command.
Counter Latch command.  SC=%d
Setting read_state to LSB
Setting read_state to MSB
OUTpin
outlatch
inlatch
status_latch
rw_mode
bcd_mode
null_count
count_LSB_latched
count_MSB_latched
status_latched
count_binary
triggerGATE
write_state
read_state
count_written
first_pass
state_bit_1
state_bit_2
next_change_time
PIT81
write to port 0x%04x, value = 0x%02x
unsupported io write to port 0x%04x = 0x%02x
s.timer.get_next_event_time=%x
unsupported io read from port 0x%04x
read from port 0x%04x, value = 0x%02x
s.timer.get_next_event_time=%d
RESETting timer
deactivated timer
s.last_usec=%lld
s.timer_id=%d
s.last_next_event_time=%d
entering timer handler
8254 PIT State
speaker_data_on
refresh_clock_div2
last_usec
last_next_event_time
total_ticks
total_usec
counter
8254 PIT
starting init
pit_wrap
RESETting timer.
deactivated timer.
finished init
8bx_pit_c
13bx_devmodel_c
12logfunctions
zPLR
libbx_pit.so.0.0.0.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
