__gmon_start__
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
PyExc_RuntimeError
PyExc_IOError
PyExc_MemoryError
PyExc_AttributeError
PyExc_SystemError
PyExc_ValueError
PyExc_SyntaxError
PyExc_OverflowError
PyExc_ZeroDivisionError
PyExc_TypeError
PyExc_IndexError
_Py_NoneStruct
PyArg_ParseTuple
qof_query_init
strcmp
PyType_Ready
PyArg_UnpackTuple
PyBool_FromLong
PyObject_IsTrue
__stack_chk_fail
PyLong_FromVoidPtr
PyString_FromFormat
PyString_ConcatAndDel
PyObject_Malloc
PyObject_Init
PyObject_Free
PyObject_CallFunctionObjArgs
__printf_chk
PyClass_Type
PyObject_GetAttrString
PyTuple_New
PyTuple_SetItem
PyErr_Occurred
PyErr_Clear
guid_shutdown
guid_init
qof_query_shutdown
qof_finalize_backend_libraries
PyLong_AsUnsignedLong
PyInt_AsLong
xaccAccountTypesValid
PyLong_FromUnsignedLong
PyString_AsString
gnc_set_account_separator
gnc_get_account_separator_string
PyString_FromString
strncmp
PyCapsule_GetPointer
PyObject_GenericGetAttr
_Py_NotImplementedStruct
PyString_Format
PyLong_AsLong
gncOwnerTypeToQofIdType
PyErr_SetString
gnc_quote_source_num_entries
PyInt_FromLong
pwr64
xaccAccountIsEquityType
_Py_ZeroStruct
_Py_TrueStruct
xaccAccountIsAPARType
xaccAccountIsAssetLiabType
xaccAccountTypesCompatible
xaccParentAccountTypesCompatibleWith
gnc_commodity_table_register
gncOwnerRegister
gncCustomerRegister
gncVendorRegister
gncInvoiceRegister
gnc_quote_source_fq_installed
PyFloat_Type
PyType_IsSubtype
PyFloat_AsDouble
PyLong_AsDouble
qof_load_backend_library
PyDict_SetItemString
fwrite
fputs
fputc
_PyObject_New
PyObject_Call
_PyObject_GetDictPtr
PyDict_New
PyDict_SetItem
PyInstance_NewRaw
__assert_fail
gnc_get_account_separator
qof_session_new
qof_backend_get_registered_access_method_list
PyList_New
g_list_length
g_list_nth_data
gnc_account_get_type
g_type_check_instance_is_a
gnc_split_get_type
gnc_transaction_get_type
gnc_commodity_get_type
gnc_commodity_namespace_get_type
PyList_Append
gnc_lot_get_type
gnc_price_get_type
gnc_invoice_get_type
gnc_entry_get_type
gnc_customer_get_type
gnc_vendor_get_type
gnc_employee_get_type
gnc_job_get_type
gnc_taxtable_get_type
qof_collection_new
qof_query_create
qof_query_create_for
qof_query_string_predicate
PyCapsule_Import
gnc_dmy2timespec
qof_query_date_predicate
qof_query_int32_predicate
qof_query_int64_predicate
qof_query_double_predicate
qof_query_boolean_predicate
qof_query_char_predicate
gnc_guid_get_type
guid_new_return
guid_null
guid_malloc
guid_hash_table_new
double_to_gnc_numeric
gnc_numeric_error
gnc_numeric_get_type
gnc_quote_source_lookup_by_ti
gnc_commodity_table_new
gnc_address_get_type
gnc_billterm_get_type
gncInvoiceGetTypeListForOwnerType
gncOwnerNew
gncOwnerGetType
gncOwnerGetEmployee
gncOwnerGetCustomer
gncOwnerGetJob
gncOwnerGetVendor
gncTaxTableEntryCreate
calloc
gnc_pricedb_get_type
PyInstance_Type
PyDict_GetItem
_PyInstance_Lookup
_PyWeakref_ProxyType
_PyWeakref_CallableProxyType
PyObject_GetAttr
qof_query_core_to_string
strlen
PyString_FromStringAndSize
xaccSplitGetReconcile
xaccTransGetTxnType
qof_instance_get_type
g_type_check_instance_cast
qof_instance_get_guid
xaccSplitConvertAmount
xaccMallocSplit
xaccSplitReinit
xaccSplitDestroy
xaccSplitCopyOnto
xaccSplitGetBook
xaccSplitGetAccount
xaccSplitSetAccount
xaccSplitGetParent
xaccSplitSetParent
xaccSplitGetLot
xaccSplitSetLot
xaccSplitGetSlots
xaccSplitSetSlots_nc
xaccSplitSetDateReconciledSecs
xaccSplitSetDateReconciledTS
xaccSplitGetDateReconciledTS
xaccSplitRetDateReconciledTS
gnc_timespec2dmy
xaccSplitGetDateReconciled
xaccSplitSetAmount
xaccSplitGetAmount
xaccSplitSetValue
xaccSplitGetValue
xaccSplitSetSharePriceAndAmount
xaccSplitGetSharePrice
xaccSplitSetBaseValue
xaccSplitGetBaseValue
xaccSplitGetBalance
xaccSplitGetClearedBalance
xaccSplitGetReconciledBalance
xaccSplitEqual
xaccSplitLookup
xaccSplitListGetUniqueTransactions
xaccSplitGetOtherSplit
xaccSplitMakeStockSplit
xaccSplitOrder
xaccSplitOrderDateOnly
xaccSplitCompareAccountFullNames
xaccSplitCompareAccountCodes
xaccSplitCompareOtherAccountFullNames
xaccSplitCompareOtherAccountCodes
xaccSplitSetSharePrice
xaccSplitVoidFormerAmount
xaccSplitVoidFormerValue
gnc_account_get_children
gnc_account_get_children_sorted
gnc_account_get_descendants
gnc_account_get_descendants_sorted
xaccMallocAccount
gnc_account_create_root
xaccCloneAccount
xaccAccountBeginEdit
xaccAccountCommitEdit
xaccAccountDestroy
xaccAccountEqual
xaccAccountOrder
gnc_book_get_root_account
gnc_book_set_root_account
xaccAccountLookup
gnc_account_name_violations_errmsg
gnc_account_list_name_violations
gnc_account_get_book
xaccAccountSetType
gnc_account_set_policy
xaccAccountGetType
xaccAccountIsPriced
gnc_account_set_start_balance
gnc_account_set_start_cleared_balance
gnc_account_set_start_reconciled_balance
gnc_account_set_balance_dirty
gnc_account_set_sort_dirty
gnc_account_insert_split
gnc_account_remove_split
gnc_account_get_policy
xaccAccountRecomputeBalance
xaccAccountSortSplits
gnc_account_get_full_name
xaccAccountGetAutoInterestXfer
xaccAccountSetAutoInterestXfer
xaccAccountSetCommodity
xaccAccountGetCommodity
gnc_account_get_currency_or_parent
xaccAccountGetCommoditySCU
xaccAccountGetCommoditySCUi
xaccAccountSetCommoditySCU
xaccAccountSetNonStdSCU
xaccAccountGetNonStdSCU
xaccAccountGetBalance
xaccAccountGetClearedBalance
xaccAccountGetReconciledBalance
xaccAccountGetPresentBalance
xaccAccountGetProjectedMinimumBalance
xaccAccountGetBalanceAsOfDate
xaccAccountConvertBalanceToCurrency
xaccAccountConvertBalanceToCurrencyAsOfDate
xaccAccountGetBalanceInCurrency
xaccAccountGetClearedBalanceInCurrency
xaccAccountGetReconciledBalanceInCurrency
xaccAccountGetPresentBalanceInCurrency
xaccAccountGetProjectedMinimumBalanceInCurrency
xaccAccountGetBalanceAsOfDateInCurrency
xaccAccountGetBalanceChangeForPeriod
gnc_account_append_child
gnc_account_remove_child
gnc_account_get_parent
gnc_account_get_root
gnc_account_is_root
gnc_account_n_children
gnc_account_child_index
gnc_account_nth_child
gnc_account_n_descendants
gnc_account_get_current_depth
gnc_account_get_tree_depth
gnc_account_join_children
gnc_account_merge_children
xaccAccountSetReconcileChildrenStatus
xaccAccountGetReconcileChildrenStatus
xaccAccountHasAncestor
gnc_account_lookup_by_full_name
xaccAccountGetSplitList
xaccAccountMoveAllSplits
xaccAccountForEachTransaction
xaccAccountInsertLot
xaccAccountRemoveLot
xaccAccountGetLotList
xaccAccountGetReconcileLastDate
xaccAccountSetReconcileLastDate
xaccAccountGetReconcileLastInterval
xaccAccountSetReconcileLastInterval
xaccAccountGetReconcilePostponeDate
xaccAccountSetReconcilePostponeDate
xaccAccountGetReconcilePostponeBalance
xaccAccountSetReconcilePostponeBalance
xaccAccountClearReconcilePostpone
xaccAccountGetPlaceholder
xaccAccountSetPlaceholder
xaccAccountGetDescendantPlaceholder
xaccAccountGetHidden
xaccAccountSetHidden
xaccAccountIsHidden
xaccAccountGetTaxRelated
xaccAccountSetTaxRelated
xaccAccountGetTaxUSCopyNumber
xaccAccountSetTaxUSCopyNumber
xaccAccountSetMark
xaccClearMark
xaccClearMarkDown
gnc_account_tree_begin_staged_transaction_traversals
xaccSplitsBeginStagedTransactionTraversals
xaccAccountBeginStagedTransactionTraversals
xaccTransactionTraverse
xaccAccountStagedTransactionTraversal
gnc_account_tree_staged_transaction_traversal
xaccAccountTreeForEachTransaction
DxaccAccountSetCurrency
DxaccAccountGetCurrency
xaccMallocTransaction
xaccTransDestroy
xaccTransClone
xaccTransEqual
xaccTransBeginEdit
xaccTransCommitEdit
xaccTransRollbackEdit
xaccTransIsOpen
xaccTransLookup
xaccTransCopyToClipBoard
xaccTransCopyOnto
xaccTransCopyFromClipBoard
xaccTransFindSplitByAccount
xaccTransScrubGains
gnc_book_count_transactions
PyInt_FromSize_t
xaccTransUseTradingAccounts
xaccTransSortSplits
xaccTransSetIsClosingTxn
xaccTransGetIsClosingTxn
xaccTransGetSplit
xaccTransGetSplitIndex
xaccTransGetSplitList
xaccTransStillHasSplit
xaccTransGetFirstPaymentAcctSplit
xaccTransGetFirstAPARAcctSplit
xaccTransClearReadOnly
xaccTransIsReadonlyByPostedDate
xaccTransInFutureByPostedDate
xaccTransCountSplits
xaccTransHasReconciledSplits
xaccTransHasReconciledSplitsByAccount
xaccTransGetCurrency
xaccTransSetCurrency
xaccTransGetImbalanceValue
xaccTransGetImbalance
xaccTransIsBalanced
xaccTransGetAccountValue
xaccTransGetAccountAmount
xaccTransGetRateForCommodity
xaccTransGetAccountConvRate
xaccTransGetAccountBalance
xaccTransOrder
xaccTransSetDate
xaccTransSetDatePostedGDate
xaccTransSetDatePostedSecs
xaccTransSetDatePostedSecsNormalized
xaccTransSetDatePostedTS
xaccTransSetDateEnteredSecs
xaccTransSetDateEnteredTS
xaccTransSetDateDueTS
xaccTransGetDate
xaccTransGetDatePostedTS
xaccTransRetDatePostedTS
xaccTransGetDatePostedGDate
xaccTransGetDateEntered
xaccTransGetDateEnteredTS
xaccTransRetDateEnteredTS
xaccTransRetDateDueTS
xaccTransGetDateDueTS
xaccTransUnvoid
xaccTransReverse
xaccTransGetReversedBy
xaccTransGetVoidStatus
xaccTransGetVoidTime
gnc_lot_new
gnc_lot_destroy
gnc_lot_lookup
gnc_lot_get_book
gnc_lot_begin_edit
gnc_lot_commit_edit
gnc_lot_add_split
gnc_lot_remove_split
gnc_lot_get_split_list
gnc_lot_count_splits
gnc_lot_get_account
gnc_lot_set_account
gnc_lot_get_balance
gnc_lot_get_balance_before
gnc_lot_is_closed
gnc_lot_get_earliest_split
gnc_lot_get_latest_split
gnc_lot_set_closed_unknown
gnc_lot_get_slots
gnc_lot_make_default
qof_backend_run_begin
qof_backend_begin_exists
qof_backend_run_commit
qof_backend_commit_exists
qof_backend_set_error
qof_backend_get_error
qof_backend_check_error
qof_book_get_backend
qof_book_set_backend
qof_session_destroy
qof_session_swap_data
qof_session_get_error
qof_session_pop_error
qof_session_get_book
qof_session_save_in_progress
qof_session_end
qof_session_events_pending
qof_session_process_events
qof_session_add_close_hook
qof_session_call_close_hooks
qof_session_ensure_all_data_loaded
qof_book_use_trading_accounts
qof_book_uses_autoreadonly
qof_book_get_num_days_autoreadonly
qof_book_get_autoreadonly_gdate
qof_book_use_split_action_for_num_field
qof_book_shutting_down
qof_book_session_not_saved
qof_collection_count
qof_collection_destroy
qof_collection_get_type
qof_collection_get_data
qof_collection_set_data
qof_collection_is_dirty
qof_collection_add_entity
qof_collection_remove_entity
qof_collection_compare
qof_collection_from_glist
qof_query_destroy
qof_query_search_for
qof_query_set_book
PyList_Size
PyList_GetItem
g_slist_prepend
g_slist_free
qof_query_add_term
qof_query_add_guid_match
qof_query_add_guid_list_match
qof_query_add_boolean_match
qof_query_run
qof_query_last_run
qof_query_run_subquery
qof_query_clear
qof_query_purge_terms
qof_query_has_terms
qof_query_num_terms
qof_query_has_term_type
qof_query_get_term_type
qof_query_copy
qof_query_invert
qof_query_merge
qof_query_merge_in_place
qof_query_set_sort_order
qof_query_set_sort_options
qof_query_set_sort_increasing
qof_query_set_max_results
qof_query_equal
qof_query_print
qof_query_get_search_for
qof_query_get_books
qof_query_numeric_predicate
qof_query_guid_predicate
qof_query_collect_predicate
qof_query_choice_predicate
qof_query_kvp_predicate
qof_query_kvp_predicate_path
qof_query_core_predicate_copy
qof_query_core_predicate_free
qof_query_date_predicate_get_date
qof_string_number_compare_func
gnc_value_get_guid
guid_new
guid_free
guid_copy
guid_to_string
guid_to_string_buff
string_to_guid
guid_equal
guid_compare
guid_hash_to_guint
guid_g_hash_table_equal
string_to_gnc_numeric
gnc_numeric_to_double
PyFloat_FromDouble
gnc_numeric_to_string
gnc_num_dbg_to_string
gnc_numeric_check
gnc_numeric_compare
gnc_numeric_zero_p
gnc_numeric_negative_p
gnc_numeric_positive_p
gnc_numeric_eq
gnc_numeric_equal
gnc_numeric_same
gnc_numeric_mul
gnc_numeric_div
gnc_numeric_neg
gnc_numeric_abs
gnc_numeric_add
gnc_numeric_sub
gnc_numeric_add_with_error
gnc_numeric_sub_with_error
gnc_numeric_mul_with_error
gnc_numeric_div_with_error
gnc_numeric_convert
gnc_numeric_reduce
gnc_numeric_to_decimal
gnc_numeric_invert
gnc_quote_source_set_fq_installed
gnc_quote_source_get_supported
gnc_quote_source_get_type
gnc_quote_source_get_index
gnc_commodity_destroy
gnc_commodity_copy
gnc_commodity_clone
gnc_commodity_get_namespace_ds
gnc_commodity_get_fraction
gnc_commodity_get_quote_flag
gnc_commodity_get_quote_source
gnc_commodity_get_default_quote_source
gnc_commodity_set_fraction
gnc_commodity_user_set_quote_flag
gnc_commodity_set_quote_flag
gnc_commodity_set_quote_source
gnc_commodity_increment_usage_count
gnc_commodity_decrement_usage_count
gnc_commodity_equiv
gnc_commodity_equal
gnc_commodity_compare
gnc_commodity_compare_void
gnc_commodity_is_iso
gnc_commodity_is_currency
gnc_commodity_table_get_table
gnc_commodity_find_commodity_by_guid
gnc_commodity_table_insert
gnc_commodity_table_remove
gnc_commodity_table_add_default_data
gnc_commodity_namespace_get_commodity_list
gnc_commodity_table_get_namespaces
gnc_commodity_table_get_namespaces_list
gnc_commodity_table_get_size
gnc_commodity_table_get_quotable_commodities
gnc_commodity_table_destroy
gnc_commodity_obtain_twin
gnc_commodity_begin_edit
gnc_commodity_commit_edit
gnc_monetary_list_add_monetary
gnc_monetary_list_delete_zeros
gnc_monetary_list_free
gncOwnerInitJob
qofOwnerGetType
gncOwnerFree
gncOwnerInitCustomer
gncOwnerInitEmployee
gncOwnerInitVendor
qofOwnerGetOwner
qofOwnerSetEntity
GNC_IS_OWNER
gncOwnerInitUndefined
gncOwnerIsValid
gncOwnerGetUndefined
gncOwnerGetAddr
gncOwnerGetActive
gncOwnerGetCurrency
gncOwnerSetActive
gncOwnerCopy
gncOwnerEqual
gncOwnerGCompareFunc
gncOwnerCompare
gncOwnerGetGUID
gncOwnerRetGUID
gncOwnerGetEndOwner
gncOwnerGetEndGUID
gncOwnerAttachToLot
gncOwnerLotMatchOwnerFunc
gncOwnerLotsSortFunc
gncOwnerGetOwnerFromLot
gncOwnerGetOwnerFromTxn
gncOwnerGetOwnerFromTypeGuid
gncOwnerGetSlots
gncOwnerAutoApplyPaymentsWithLots
gncOwnerFindOffsettingSplit
gncOwnerReduceSplitTo
gncOwnerSetLotLinkMemo
gncOwnerGetAccountTypesList
gncOwnerGetCommoditiesList
gncOwnerGetBalanceInCurrency
gncOwnerBeginEdit
gncOwnerDestroy
gncCustomerCreate
gncCustomerDestroy
gncCustomerBeginEdit
gncCustomerCommitEdit
gncCustomerSetTerms
gncCustomerSetTaxIncluded
gncCustomerSetActive
gncCustomerSetDiscount
gncCustomerSetCredit
gncCustomerSetCurrency
gncCustomerSetTaxTableOverride
gncCustomerSetTaxTable
gncCustomerAddJob
gncCustomerRemoveJob
gncCustomerGetAddr
gncCustomerGetShipAddr
gncCustomerGetTerms
gncCustomerGetTaxIncluded
gncCustomerGetActive
gncCustomerGetDiscount
gncCustomerGetCredit
gncCustomerGetCurrency
gncCustomerGetTaxTableOverride
gncCustomerGetTaxTable
gncCustomerCompare
gncCustomerEqual
gncCustomerGetJoblist
gncCustomerIsDirty
gncCustomerNextID
gncEmployeeCreate
gncEmployeeDestroy
gncEmployeeBeginEdit
gncEmployeeCommitEdit
gncEmployeeCompare
gncEmployeeSetWorkday
gncEmployeeSetRate
gncEmployeeSetCurrency
gncEmployeeSetActive
gncEmployeeSetCCard
qofEmployeeSetAddr
qof_instance_get_book
gncEmployeeGetAddr
gncEmployeeGetWorkday
gncEmployeeGetRate
gncEmployeeGetCurrency
gncEmployeeGetActive
gncEmployeeGetCCard
gncEmployeeEqual
gncEmployeeIsDirty
gncVendorCreate
gncVendorDestroy
gncVendorSetTerms
gncVendorSetTaxIncluded
gncVendorSetCurrency
gncVendorSetActive
gncVendorSetTaxTableOverride
gncVendorSetTaxTable
gncVendorAddJob
gncVendorRemoveJob
gncVendorBeginEdit
gncVendorCommitEdit
gncVendorGetAddr
gncVendorGetTerms
gncVendorGetTaxIncluded
gncVendorGetCurrency
gncVendorGetActive
gncVendorGetTaxTableOverride
gncVendorGetTaxTable
gncVendorCompare
gncVendorEqual
gncVendorIsDirty
gncVendorNextID
gncAddressCreate
gncAddressDestroy
gncAddressBeginEdit
gncAddressCommitEdit
gncAddressClearDirty
gncAddressIsDirty
gncAddressCompare
gncAddressEqual
gncBillTermCreate
gncBillTermDestroy
gncBillTermIncRef
gncBillTermDecRef
gncBillTermChanged
gncBillTermBeginEdit
gncBillTermCommitEdit
gncBillTermSetType
gncBillTermSetDueDays
gncBillTermSetDiscountDays
gncBillTermSetDiscount
gncBillTermSetCutoff
gncBillTermGetTerms
gncBillTermGetType
gncBillTermGetDueDays
gncBillTermGetDiscountDays
gncBillTermGetDiscount
gncBillTermGetCutoff
gncBillTermIsDirty
gncBillTermGetParent
gncBillTermReturnChild
gncBillTermGetRefcount
gncBillTermCompare
gncBillTermEqual
gncBillTermIsFamily
gncBillTermComputeDueDate
gncInvoiceCreate
gncInvoiceDestroy
gncInvoiceCopy
gncInvoiceSetOwner
gncInvoiceSetDateOpenedGDate
gncInvoiceSetDateOpened
gncInvoiceSetDatePosted
gncInvoiceSetTerms
gncInvoiceSetCurrency
gncInvoiceSetActive
gncInvoiceSetIsCreditNote
gncInvoiceSetBillTo
gncInvoiceSetToChargeAmount
gncInvoiceAddEntry
gncInvoiceRemoveEntry
gncInvoiceAddPrice
gncBillAddEntry
gncBillRemoveEntry
gncInvoiceSortEntries
gncInvoiceRemoveEntries
gncInvoiceGetOwner
gncInvoiceGetDateOpened
gncInvoiceGetDatePosted
gncInvoiceGetDateDue
gncInvoiceGetTerms
gncInvoiceGetOwnerType
gncInvoiceGetType
gncInvoiceGetCurrency
gncInvoiceGetBillTo
gncInvoiceGetToChargeAmount
gncInvoiceGetActive
gncInvoiceGetIsCreditNote
gncInvoiceGetPostedLot
gncInvoiceGetPostedTxn
gncInvoiceGetPostedAcc
gncInvoiceGetTotal
gncInvoiceGetTotalOf
gncInvoiceGetTotalSubtotal
gncInvoiceGetTotalTax
gncInvoiceGetEntries
gncInvoiceGetPrice
gncInvoiceAmountPositive
gncInvoiceGetForeignCurrencies
gncInvoiceUnpost
gncInvoiceAutoApplyPayments
gncInvoiceGetInvoiceFromTxn
gncInvoiceGetInvoiceFromLot
gncInvoiceBeginEdit
gncInvoiceCommitEdit
gncInvoiceCompare
gncInvoiceIsPosted
gncInvoiceIsPaid
gncInvoiceGetBook
gncInvoiceEqual
gncInvoiceNextID
gncInvoiceSetPostedAcc
gncInvoiceSetPostedTxn
gncInvoiceSetPostedLot
gncJobCreate
gncJobDestroy
gncJobSetOwner
gncJobSetActive
gncJobBeginEdit
gncJobCommitEdit
gncJobGetOwner
gncJobGetActive
gncJobCompare
gncJobEqual
gncEntryCreate
gncEntryDestroy
gncEntrySetDateGDate
gncEntrySetDate
gncEntrySetDateEntered
gncEntrySetQuantity
gncEntrySetDocQuantity
gncEntrySetInvAccount
gncEntrySetInvPrice
gncEntrySetInvTaxable
gncEntrySetInvTaxIncluded
gncEntrySetInvTaxTable
gncEntrySetInvDiscount
gncEntrySetInvDiscountType
gncEntrySetInvDiscountHow
gncEntrySetBillAccount
gncEntrySetBillPrice
gncEntrySetBillTaxable
gncEntrySetBillTaxIncluded
gncEntrySetBillTaxTable
gncEntrySetBillable
gncEntrySetBillTo
gncEntrySetBillPayment
gncEntryGetDateGDate
gncEntryGetDate
gncEntryGetDateEntered
gncEntryGetQuantity
gncEntryGetDocQuantity
gncEntryGetInvAccount
gncEntryGetInvPrice
gncEntryGetInvDiscount
gncEntryGetInvDiscountType
gncEntryGetInvDiscountHow
gncEntryGetInvTaxable
gncEntryGetInvTaxIncluded
gncEntryGetInvTaxTable
gncEntryGetBillAccount
gncEntryGetBillPrice
gncEntryGetBillTaxable
gncEntryGetBillTaxIncluded
gncEntryGetBillTaxTable
gncEntryGetBillable
gncEntryGetBillTo
gncEntryGetBillPayment
gncEntryCopy
gncEntryGetDocValue
gncEntryGetDocTaxValue
gncEntryGetDocTaxValues
gncEntryGetDocDiscountValue
gncEntryGetBalValue
gncEntryGetBalTaxValue
gncEntryGetBalTaxValues
gncEntryGetBalDiscountValue
gncEntryComputeValue
gncEntryGetOrder
gncEntryGetInvoice
gncEntryGetBill
gncEntryIsOpen
gncEntryBeginEdit
gncEntryCommitEdit
gncEntryCompare
gncTaxTableCreate
gncTaxTableDestroy
gncTaxTableEntryDestroy
gncTaxTableIncRef
gncTaxTableDecRef
gncTaxTableEntrySetAccount
gncTaxTableEntrySetType
gncTaxTableEntrySetAmount
gncTaxTableAddEntry
gncTaxTableRemoveEntry
gncTaxTableChanged
gncTaxTableBeginEdit
gncTaxTableCommitEdit
gncTaxTableEqual
qof_collection_lookup_entity
qof_book_get_collection
gncTaxTableGetTables
gncTaxTableGetParent
gncTaxTableReturnChild
gncTaxTableGetEntries
gncTaxTableEntryGetType
gncTaxTableCompare
gncTaxTableEntryCompare
gnc_price_get_source
gncTaxTableGetRefcount
gncTaxTableLastModified
gncTaxTableEntryGetAccount
gncTaxTableEntryGetAmount
gncTaxTableEntryEqual
gncAccountValueAdd
gncAccountValueAddList
gncAccountValueTotal
gncAccountValueDestroy
gnc_search_customer_on_id
gnc_search_invoice_on_id
gnc_search_bill_on_id
gnc_search_vendor_on_id
gnc_price_create
gnc_price_clone
gnc_price_ref
gnc_price_unref
gnc_price_begin_edit
gnc_price_commit_edit
gnc_price_set_commodity
gnc_price_set_currency
gnc_price_set_time
gnc_price_set_source
PyString_AsStringAndSize
memcpy
gnc_price_set_typestr
gnc_price_set_source_string
gncTaxTableLookupByName
gncTaxTableSetName
gncTaxIncludedStringToType
gncAmountStringToType
qofEntrySetInvDiscHow
qofEntrySetInvDiscType
gncEntrySetNotes
gncEntrySetAction
gncEntrySetDescription
gncEntryPaymentStringToType
gncEntryDiscountStringToHow
gncJobSetReference
gncJobSetName
gncJobSetID
gncInvoiceApplyPayment
gncInvoicePostToAccount
gncInvoiceSetNotes
gncInvoiceSetBillingID
gncInvoiceSetID
gncBillTermLookupByName
gncBillTermSetDescription
gncBillTermSetName
gncAddressSetEmail
gncAddressSetFax
gncAddressSetPhone
gncAddressSetAddr4
gncAddressSetAddr3
gncAddressSetAddr2
gncAddressSetAddr1
gncAddressSetName
gncVendorSetNotes
gncVendorSetName
gncVendorSetID
gncEmployeeSetAcl
gncEmployeeSetLanguage
gncEmployeeSetName
gncEmployeeSetUsername
gncEmployeeSetID
gncCustomerSetNotes
gncCustomerSetName
gncCustomerSetID
gncOwnerApplyPayment
gncOwnerCreatePaymentLot
gnc_commodity_table_get_commodities
gnc_commodity_table_delete_namespace
gnc_commodity_table_find_namespace
gnc_commodity_table_add_namespace
gnc_commodity_table_has_namespace
gnc_commodity_table_find_full
gnc_commodity_table_lookup_unique
gnc_commodity_table_lookup
gnc_commodity_namespace_is_iso
gnc_commodity_set_user_symbol
gnc_commodity_set_quote_tz
gnc_commodity_set_cusip
gnc_commodity_set_fullname
gnc_commodity_set_namespace
gnc_commodity_set_mnemonic
gnc_commodity_new
gnc_quote_source_lookup_by_internal
gnc_quote_source_add_new
PyTuple_GetSlice
PyTuple_Size
qof_query_build_param_list
qof_session_begin
gnc_lot_set_notes
gnc_lot_set_title
xaccTransVoid
xaccTransOrder_num_action
xaccTransSetReadOnly
xaccTransSetNotes
xaccTransSetAssociation
xaccTransSetDescription
xaccTransSetNum
dxaccAccountSetQuoteTZ
xaccAccountSetTaxUSPayerNameSource
xaccAccountSetTaxUSCode
xaccAccountFindSplitByDesc
xaccAccountFindTransByDesc
xaccAccountStringToEnum
xaccAccountStringToType
gnc_account_lookup_by_code
gnc_account_lookup_by_name
dxaccAccountSetPriceSrc
xaccAccountSetLastNum
xaccAccountSetNotes
xaccAccountSetSortOrder
xaccAccountSetFilter
xaccAccountSetColor
xaccAccountSetDescription
xaccAccountSetCode
xaccAccountSetName
xaccSplitSetAction
xaccSplitSetMemo
xaccTransHasSplitsInStateByAccount
xaccTransHasSplitsInState
xaccTransSetTxnType
xaccSplitSetReconcile
gnc_price_set_value
gnc_price_lookup
gnc_price_get_commodity
gnc_price_get_currency
gnc_price_get_time
gnc_price_get_value
gnc_price_equal
gnc_price_print
gnc_price_list_insert
gnc_price_list_remove
gnc_price_list_destroy
gnc_price_list_equal
gnc_pricedb_get_db
gnc_collection_get_pricedb
gnc_pricedb_destroy
gnc_pricedb_begin_edit
gnc_pricedb_commit_edit
gnc_pricedb_set_bulk_update
gnc_pricedb_add_price
gnc_pricedb_remove_price
gnc_pricedb_remove_old_prices
gnc_pricedb_lookup_latest
gnc_pricedb_lookup_latest_any_currency
gnc_pricedb_has_prices
gnc_pricedb_get_prices
gnc_pricedb_lookup_at_time
gnc_pricedb_lookup_day
gnc_pricedb_lookup_nearest_in_time
gnc_pricedb_lookup_nearest_in_time_any_currency
gnc_pricedb_lookup_latest_before
gnc_pricedb_lookup_latest_before_any_currency
gnc_pricedb_convert_balance_latest_price
gnc_pricedb_convert_balance_nearest_price
PyCFunction_Type
strstr
gnc_pricedb_foreach_price
gnc_commodity_table_foreach_commodity
qof_collection_foreach
qof_session_export
qof_session_safe_save
qof_session_save
qof_session_load
xaccAccountFindOpenLots
xaccAccountForEachLot
gnc_account_foreach_descendant_until
gnc_account_foreach_descendant
gnc_account_foreach_child
gnc_pricedb_get_num_prices
gnc_pricedb_equal
gnc_pricedb_print_contents
xaccSplitGetCapGains
xaccAccountHasTrades
xaccAccountFindEarliestOpenLot
xaccAccountFindLatestOpenLot
xaccAccountGetDefaultGainAccount
xaccAccountSetDefaultGainAccount
xaccSplitGetCapGainsSplit
xaccSplitGetGainsSourceSplit
xaccSplitAssign
xaccSplitAssignToLot
xaccSplitComputeCapGains
xaccLotComputeCapGains
xaccScrubLot
xaccAccountScrubLots
xaccAccountTreeScrubLots
gncVendorGetName
xaccSplitGetCorrAccountFullName
xaccAccountGetFilter
xaccAccountGetDescription
xaccAccountGetColor
xaccSplitGetCorrAccountName
xaccSplitGetCorrAccountCode
xaccAccountGetName
xaccAccountGetCode
xaccAccountGetSortOrder
gnc_lot_get_title
xaccTransGetReadOnly
xaccTransGetVoidReason
xaccTransGetNum
xaccTransGetDescription
xaccTransGetAssociation
xaccTransGetNotes
xaccAccountGetNotes
xaccAccountGetLastNum
dxaccAccountGetPriceSrc
xaccAccountTypeEnumAsString
xaccAccountGetTypeStr
xaccAccountGetTaxUSCode
xaccAccountGetTaxUSPayerNameSource
dxaccAccountGetQuoteTZ
gncInvoiceGetNotes
gncInvoiceGetTypeString
gncCustomerGetID
gnc_commodity_get_user_symbol
gncCustomerGetNotes
gncEmployeeGetID
gncEmployeeGetUsername
gncEntryGetNotes
gnc_commodity_get_cusip
gnc_commodity_get_unique_name
gnc_commodity_get_quote_tz
gncJobGetReference
gnc_commodity_get_default_symbol
gnc_commodity_get_nice_symbol
gnc_commodity_namespace_get_name
gncAddressGetAddr4
gnc_numeric_errorCode_to_string
qof_session_get_url
qof_session_get_file_path
gncEmployeeGetName
gnc_commodity_get_namespace
gnc_commodity_get_printname
gnc_commodity_get_fullname
gncVendorGetNotes
gnc_quote_source_get_internal_name
gnc_commodity_get_namespace_compat
qof_session_get_error_message
gncCustomerGetName
gnc_quote_source_get_user_name
gnc_commodity_get_mnemonic
gnc_price_get_typestr
gncEmployeeGetAcl
gncAmountTypeToString
qofEntryGetInvDiscHow
qofEntryGetInvDiscType
gncVendorGetID
gncBillTermGetName
gncBillTermGetDescription
gncInvoiceGetID
gncAddressGetFax
gncJobGetID
gncEntryDiscountHowToString
gncJobGetName
gncInvoiceGetBillingID
gncEntryPaymentTypeToString
gncEntryGetDescription
gncEntryGetAction
xaccSplitGetMemo
gncAddressGetName
gncAddressGetPhone
gncAddressGetEmail
gncAddressGetAddr1
gnc_price_get_source_string
gncAddressGetAddr3
gncAddressGetAddr2
xaccSplitGetAction
xaccSplitGetType
gncTaxTableGetName
gncEmployeeGetLanguage
gncTaxIncludedTypeToString
gnc_lot_get_notes
gncOwnerGetID
gncOwnerGetName
init_gnucash_core_c
Py_InitModule4_64
PyModule_GetDict
gnc_environment_setup
qof_log_init
qof_init
gnc_module_system_init
gnc_engine_init
gnc_prefs_init
strncpy
PyCapsule_New
PyModule_AddObject
libgio-2.0.so.0
libgthread-2.0.so.0
libgobject-2.0.so.0
libgmodule-2.0.so.0
libglib-2.0.so.0
libgnc-qof.so.1
libgnc-module.so.0
libgncmod-engine.so
libgncmod-app-utils.so
libm.so.6
libpthread.so.0
libc.so.6
_edata
__bss_start
_gnucash_core_c.so
/usr/lib64:/usr/lib64/gnucash
GLIBC_2.14
GLIBC_2.4
GLIBC_2.3.4
GLIBC_2.2.5
AUATUSH
[]A\A]
t0Hc} 
AUATA
[]A\A]
AUATUSH
o(t)H
[]A\A]
ATUSH
[]A\
[]A\
W H;V r
AUATH
I9\$
[]A\A]
tVUSH
tFH9
t	[1
\$(H
[]A\
ATUI
[]A\
[]A\
[]A\
ATUSH
[]A\
[]A\
AVAUH
ATUH
 []A\A]A^
ATUI
[]A\
[]A\
[]A\
dH34%(
ATUH
[]A\
AWAVAUATI
[]A\A]A^A_
AWAVH
AUATH
[]A\A]A^A_
 ucI9
 ucL9
tQL9
AVAUATUStsH
[]A\A]A^
[]A\A]A^
[]A\A]A^
5K~+
AUATH
t	H;
t	H;
t	H;
t	H;
5P~+
5	{+
[]A\A]
5O|+
t	H9
5mz+
t	H9
t	H9
5k{+
5={+
5Zy+
5By+
AWAVH
AUATH
D$(1
t$ H
T$ H
\$(dH3
8[]A\A]A^A_
AUATH
D$(1
d$ H
d$ L
54v+
\$(dH3
8[]A\A]
50u+
5?t+
ATUH
5<s+
 []A\
AVAUH
[A]A^H
[A]A^
5Cm+
AVAUH
D$81
L$ H
D$(H
|$(H
t$0H
L$8dH3
@[A]A^
AVAUH
 [A]A^
AUATH
([]A\A]
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
59e+
([]A\A]
5gf+
5.g+
5gg+
5zd+
5Gd+
59f+
[]A\
51b+
5Ia+
5)c+
ATUH
 []A\
twH;
5=\+
[]A\
[]A\
AWAVAUATUSH
u"H;=+y*
([]A\A]A^A_
L;%hx*
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
L$8dH3
AVAUH
D$(1
L$ H
|$ H
\$(dH3
8[]A]A^
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
5rD+
D$(1
L$ H
|$ H
L$(dH3
5"C+
D$(1
L$ H
|$ H
L$(dH3
D$81
t$ H
D$ H
L$8dH3
D$81
t$ H
D$ H
L$8dH3
D$(1
T$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
AVAUH
 [A]A^
D$(1
L$ H
|$ H
\$(dH3
AVAUH
 [A]A^
AUATH
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
\$8dH3
H[]A\A]
AVAUH
 [A]A^
AUATH
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
\$8dH3
H[]A\A]
AVAUH
D$(1
L$ H
|$ H
\$(dH3
8[]A]A^
AVAUH
 [A]A^
AVAUH
 [A]A^
AVAUH
 [A]A^
D$81
D$8P1
L$8L
D$ H
D$(H9
D$0H9
uOE1
|$8dH3<%(
D$(1
L$ H
|$ H
5^-+
\$(dH3
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
5j++
([]A\A]
5'++
5I(+
5x)+
5y)+
5^)+
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
AVAUH
 [A]A^
AVAUH
 [A]A^
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
([]A\A]
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
([]A\A]
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
([]A\A]
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
([]A\A]
D$(1
L$ H
|$ H
\$(dH3
ATUH
D$(1
D$ H
D$ H
\$(dH3
0[]A\
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
([]A\A]
D$(1
t$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
t$ H
L$(dH3
AVAUH
 [A]A^
AVAUH
 [A]A^
AVAUH
 [A]A^
AVAUH
 [A]A^
AVAUH
 [A]A^
AVAUH
 [A]A^
AVAUH
ATUH
D$H1
L$0H
T$(L
L$@L
D$8H
|$(H
|$0H
|$8H
|$@H
t$ 1
D$ L
\$HdH3
P[]A\A]A^
AVAUH
ATUH
D$H1
L$(H
T$ H
D$HP1
L$HL
|$ 1
|$(H
|$0H
|$8H
\$HdH3
P[]A\A]A^
AVAUH
D$(1
D$ H
D$ H;
\$(dH3
8[]A]A^
AVAUH
D$(1
D$ H
D$ H;
\$(dH3
8[]A]A^
AVAUH
D$(1
D$ H
D$ H;
\$(dH3
8[]A]A^
AVAUH
D$(1
D$ H
D$ H;
\$(dH3
8[]A]A^
AVAUH
D$(1
D$ H
D$ H;
\$(dH3
8[]A]A^
AVAUH
ATUH
D$81
L$ H
L$0L
D$(H
|$ H
|$(H
D$0H;
\$8dH3
@[]A\A]A^
AVAUH
ATUH
D$(1
L$ L
|$ H;=F
\$(dH3
0[]A\A]A^
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
t$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
([]A\A]
D$(1
L$ H
|$ H
L$(dH3
ATUH
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
\$8dH3
@[]A\
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
([]A\A]
D$(1
L$ H
|$ H
L$(dH3
ATUH
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
\$8dH3
@[]A\
AVAUH
ATUH
D$(1
l$ H
L$(dH3
0[]A\A]A^
T$ H
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
t$ H
t$ H
L$(dH3
D$(1
t$ H
t$ H
L$(dH3
D$(1
t$ H
t$ H
L$(dH3
D$(1
t$ H
L$(dH3
AUATH
D$81
L$(L
D$ H
l$0H
|$ 1
D$0H
|$(1
\$8dH3
H[]A\A]
AUATH
D$81
L$(L
D$ H
l$0H
|$ 1
D$0H
|$(1
\$8dH3
H[]A\A]
ATUH
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
\$8dH3
@[]A\
D$(1
L$ H
|$ H
L$(dH3
D$H1
D$@H
L$ H
D$@P1
L$@L
|$ H
D$(H
D$0H9
D$8H9
udE1
D$@H9
uJE1
|$HdH3<%(
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
AUATH
D$H1
L$(H
T$ H
D$HP1
L$HL
|$ 1
|$(H
|$0H
|$8H
D$@H;
\$HdH3
X[]A\A]
D$(1
L$ H
|$ H
5nx*
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
t$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
([]A\A]
5'n*
5Ik*
5xl*
5yl*
5^l*
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
AVAUH
 [A]A^
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
([]A\A]
5G^*
5?^*
5i[*
57[*
5~\*
AVAUH
D$(1
L$ H
|$ H
\$(dH3
8[]A]A^
AVAUH
D$(1
L$ H
|$ H
\$(dH3
8[]A]A^
AUATH
D$H1
L$0H
T$(L
L$@L
D$8H
|$(H
|$0H
|$8H
|$@H
t$ 1
L$ L
\$HdH3
X[]A\A]
AVAUH
D$(1
L$ H
|$ H
\$(dH3
8[]A]A^
AVAUH
D$(1
L$ H
|$ H
\$(dH3
8[]A]A^
D$(1
L$ H
|$ H
\$(dH3
AWAVH
AUATH
D$81
L$(L
D$ H
l$0H
T$8dH3
H[]A\A]A^A_
|$ H
|$0I
|$(H
L$0H
D$(1
L$ H
|$ H
\$(dH3
D$81
t$ H
D$ H
L$8dH3
D$81
t$ H
D$ H
L$8dH3
D$81
t$ H
D$ H
L$8dH3
D$81
t$ H
D$ H
L$8dH3
D$(1
T$ H
|$ H
\$(dH3
D$81
t$ H
D$ H
L$8dH3
D$(1
T$ H
|$ H
\$(dH3
D$(1
T$ H
|$ H
\$(dH3
D$81
t$ H
D$ H
L$8dH3
5">*
D$(1
T$ H
|$ H
\$(dH3
52:*
D$(1
L$ H
|$ H
5v8*
\$(dH3
5J8*
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
5:3*
([]A\A]
5c3*
5_1*
5u1*
5G1*
5(1*
5)1*
5R-*
D$(1
L$ H
|$ H
L$(dH3
AVAUH
 [A]A^
AUATH
D$H1
L$0H
T$(L
L$@L
D$8H
|$(H
|$0H
|$8H
|$@H
t$ 1
L$ L
\$HdH3
X[]A\A]
5J(*
5"&*
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
t$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
AWAVH
AUATH
D$81
L$(L
D$ H
L$8dH3
H[]A\A]A^A_
|$ H
|$(H
t$0H
AWAVH
AUATH
D$81
L$(L
D$ H
L$8dH3
H[]A\A]A^A_
|$ H
|$(H
t$0H
AWAVH
AUATH
D$X1
L$0H
T$(H
D$PP1
L$PL
|$(H
|$0L
|$0H
|$0H)
T$XdH3
h[]A\A]A^A_
|$8H
t$ 1
t$PH
|$@H
l$ L
|$HL
D$PL
AWAVH
AUATH
D$81
L$(L
D$ H
T$8dH3
H[]A\A]A^A_
D$ H;
|$(H
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
([]A\A]
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
([]A\A]
AUATH
D$(1
L$ H
|$ H
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
t	H9
L$(dH3
8[]A\A]
AWAVH
AUATH
([]A\A]A^A_
AWAVH
AUATH
([]A\A]A^A_
AWAVH
AUATH
([]A\A]A^A_
D$81
L$ H
D$(H
|$ H
|$(H
t$0H
\$8dH3
D$81
L$ H
D$(H
|$ H
|$(H
t$0H
L$8dH3
AWAVH
AUATH
D$81
L$ H
L$0L
D$(H
|$ H
|$ L
|$ I)
L$8dH3
H[]A\A]A^A_
|$(H
|$(L
|$(M)
|$0H
|$0L
L;$$I
|$0M)
AWAVH
AUATH
D$81
L$(L
D$ H
l$0H
T$8dH3
H[]A\A]A^A_
|$ H
|$0I
|$(H
L$0H
D$(1
L$ L
t~H;
L$ H9
tyH;
\$(dH3
D$(1
t$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
([]A\A]
AWAVH
AUATH
D$(1
\$ H
l$ A
|$ M
D$ H
\$(dH3
8[]A\A]A^A_
D$(1
\$(dH3
D$(1
\$(dH3
D$(1
\$(dH3
AWAVH
AUATH
D$(1
L$(dH3
8[]A\A]A^A_
ATUH
D$(1
\$(dH3
0[]A\
D$81
t$ H
D$ H
L$8dH3
D$H1
L$(H
T$ L
L$8L
D$0H
|$ H
|$(H
|$0H
\$HdH3
|$8H
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
ATUH
D$(1
L$ H
|$ H
\$(dH3
0[]A\
ATUH
D$(1
L$ H
|$ H
L$(dH3
0[]A\
ATUH
D$(1
L$ H
|$ H
L$(dH3
0[]A\
ATUH
D$H1
L$(H
T$ L
L$8L
D$0H
|$ H
|$(H
|$0H
|$8H
t$@H
\$HdH3
P[]A\
AVAUH
ATUH
D$H1
L$(H
T$ L
L$8L
D$0H
|$ H
|$(H
|$0H
|$8H
t$@H
L$HdH3
P[]A\A]A^
AVAUH
ATUH
D$H1
L$(H
T$ L
L$8L
D$0H
|$ H
|$(H
|$0H
|$8H
t$@H
L$HdH3
P[]A\A]A^
AVAUH
 [A]A^
AVAUH
 [A]A^
AVAUH
ATUH
D$H1
L$(H
T$ L
L$8L
D$0H
|$ H
|$(H
|$0H
|$8H
t$@H
L$HdH3
P[]A\A]A^
ATUH
D$(1
L$ H
|$ H
\$(dH3
0[]A\
AVAUH
ATUH
D$H1
L$(H
T$ L
L$8L
D$0H
|$ H
|$(H
|$0H
|$8H
t$@H
L$HdH3
P[]A\A]A^
ATUH
D$(1
L$ H
|$ H
\$(dH3
0[]A\
AWAVH
AUATH
D$X1
L$0H
T$(H
D$PP1
L$PL
|$(H
|$0H
|$8L
|$@H
t$PI
|$HH
t$ 1
t$(M
\$XdH3
h[]A\A]A^A_
AWAVH
AUATH
D$X1
L$0H
T$(H
D$PP1
L$PL
|$(H
|$0H
|$8L
|$@H
t$PI
|$HH
t$ 1
t$(M
\$XdH3
h[]A\A]A^A_
AWAVH
AUATH
D$X1
L$0H
T$(H
D$PP1
L$PL
|$(H
|$0H
|$8L
|$@H
t$PI
|$HH
t$ 1
t$(M
\$XdH3
h[]A\A]A^A_
AWAVH
AUATH
D$X1
L$0H
T$(H
D$PP1
L$PL
|$(H
|$0H
|$8L
|$@H
t$PI
|$HH
t$ 1
t$(M
\$XdH3
h[]A\A]A^A_
AVAUH
ATUH
D$(1
t$ I
\$(dH3
0[]A\A]A^
AVAUH
 [A]A^
D$(1
L$ H
|$ H
L$(dH3
AVAUH
 [A]A^
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
52|)
D$(1
t$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
5fl)
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
5Jf)
([]A\A]
5)c)
5wd)
5Xd)
5Yd)
5>d)
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
5)_)
([]A\A]
5W`)
5w^)
5C`)
5%`)
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
5J])
([]A\A]
5)Z)
5w[)
5X[)
5Y[)
5>[)
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
5iU)
([]A\A]
5^W)
5GV)
5eV)
57V)
D$(1
L$ H
|$ H
56U)
\$(dH3
AUATH
D$81
T$(H
L$0H
D$8PQR
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
L$8dH3
H[]A\A]
5GN)
5wO)
5oO)
5gL)
5kM)
AUATH
D$H1
L$ H
D$(H
|$ H
|$(H
\$8H
T$@H
D$HPRS
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
t	H9
5bJ)
L$HdH3
X[]A\A]
5'J)
5'G)
5oH)
5&H)
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
5zE)
([]A\A]
57E)
5/E)
5YB)
5'B)
5nC)
58?)
D$(1
\$ H
t$ H
\$(dH3
t$ H
t$ H
t$ H
D$(1
\$ H
t$ H
\$(dH3
t$ H
t$ H
t$ H
5X9)
586)
ATUH
 []A\
ATUH
 []A\
ATUH
 []A\
ATUH
 []A\
AVAUH
-$")
([]A]A^
AUATH
([]A\A]
D$(1
\$ H
t$ H
\$(dH3
t$ H
t$ H
t$ H
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
ATUH
D$(1
t$ H
\$(dH3
0[]A\
t$ H
t$ H
t$ H
ATUH
D$(1
t$ H
\$(dH3
0[]A\
t$ H
t$ H
t$ H
ATUH
D$81
L$(L
D$ H
t$0H
|$(H
\$8dH3
@[]A\
t$0H
t$0H
t$0H
D$(1
\$ H
t$ H
\$(dH3
t$ H
t$ H
t$ H
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
AVAUH
ATUH
t	H;
t	H;
t	H;
t	H;
 []A\A]A^
t	H9
t	H9
t	H9
t	H9
t	H9
5=	)
5G	)
AVAUH
ATUH
t	H;
t	H;
t	H;
t	H;
 []A\A]A^
t	H9
t	H9
t	H9
t	H9
t	H9
AVAUH
D$(1
l$ H
t$ H
\$(dH3
8[]A]A^
t$ H
t$ H
t$ H
D$(1
L$ H
|$ H
L$(dH3
D$(1
t$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
AVAUH
 [A]A^
AVAUH
 [A]A^
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
AUATH
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
t	H9
([]A\A]
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
AVAUH
 [A]A^
AVAUH
 [A]A^
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
t$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
t$ H
L$(dH3
D$(1
t$ H
L$(dH3
D$(1
t$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
t$ H
L$(dH3
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
([]A\A]
AVAUH
 [A]A^
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
\$(dH3
ATUH
D$(1
t$ H
\$(dH3
0[]A\
t$ H
t$ H
t$ H
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
ATUH
D$(1
t$ H
\$(dH3
0[]A\
t$ H
t$ H
t$ H
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
ATUH
 []A\
-.x(
D$(1
T$ H
|$ H
\$(dH3
D$(1
T$ H
|$ H
\$(dH3
D$(1
T$ H
|$ H
\$(dH3
5Bt(
5"s(
ATUH
 []A\
-.q(
-Fp(
AVAUH
 [A]A^
5Bi(
AVAUH
 [A]A^
AVAUH
D$(1
t$ H
L$(dH3
0[A]A^
AVAUH
 [A]A^
AVAUH
 [A]A^
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
59b(
([]A\A]
5gc(
5.d(
5Sc(
55c(
D$(1
L$ H
|$ H
\$(dH3
5R\(
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
ATUH
D$(1
t$ H
\$(dH3
0[]A\
t$ H
t$ H
t$ H
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
ATUH
D$(1
t$ H
\$(dH3
0[]A\
t$ H
t$ H
t$ H
ATUH
 []A\
-NI(
-fH(
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
D$ H
D$ H;
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
t$ H
L$(dH3
D$(1
t$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
\$ H
t$ H
\$(dH3
t$ H
t$ H
t$ H
D$(1
\$ H
t$ H
\$(dH3
t$ H
t$ H
t$ H
D$(1
\$ H
t$ H
\$(dH3
t$ H
t$ H
t$ H
D$(1
\$ H
t$ H
\$(dH3
t$ H
t$ H
t$ H
5(#(
5x (
ATUH
D$(1
t$ H
\$(dH3
0[]A\
t$ H
t$ H
t$ H
D$(1
t$ H
L$(dH3
D$(1
T$ H
|$ H
\$(dH3
D$(1
T$ H
|$ H
\$(dH3
AVAUH
 [A]A^
AVAUH
 [A]A^
AVAUH
 [A]A^
AVAUH
 [A]A^
AVAUH
 [A]A^
5z	(
ATUH
 []A\
D$(1
D$ H
D$ H;
\$(dH3
AVAUH
D$(1
L$ L
L$ H9
\$(dH3
0[A]A^
AVAUH
D$(1
L$ L
L$ H9
\$(dH3
0[A]A^
AUATH
D$(1
D$ H
D$ H9
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
L$(dH3
8[]A\A]
AVAUH
D$(1
L$ L
L$ H9
\$(dH3
0[A]A^
AVAUH
D$(1
D$ H
D$ H9
\$(dH3
0[A]A^
AVAUH
D$(1
D$ H
D$ H9
\$(dH3
0[A]A^
AUATH
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
t	H9
([]A\A]
AVAUH
D$(1
D$ H
D$ H9
\$(dH3
0[A]A^
AWAVH
AUATH
T$xH
|$xH
t$@1
D$@H
t$HH
D$HH
D$PH
t$XH
D$XH
)L$0
[]A\A]A^A_
t$`1
t$h1
t$p1
t$pSL
AUUAWAV
t$hD
L$dL
D$hH
T$PH
L$XH
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
t$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
([]A\A]
AUATH
t	H;
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
([]A\A]
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
T$ H
|$ H
\$(dH3
AVAUH
 [A]A^
D$(1
L$ H
|$ H
L$(dH3
AUATH
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
t	H9
L$8dH3
H[]A\A]
AUATH
D$(1
L$ H
|$ H
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
t	H9
L$(dH3
8[]A\A]
AVAUH
 [A]A^
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
t$ H
L$(dH3
AVAUI
ATUI
 []A\A]A^
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
AWAVH
AUATH
[]A\A]A^A_
|$hH
t$01
|$pH
t$81
|$xH
t$@1
t$H1
D$HH
t$PH
D$PH
L$(H
t$XI
D$XH
L$,H
t$`1
t$hAVH
t$(H
t$(L
L$HH
|$XH
|$`H
L$@H
T$8H
D$pPH
D$pPH
D$pP1
L$pL
|$8H
t$ 1
|$@H
t$(1
T$xH
|$XH
t$0H
D$`H
D$hH9
T$pH
D$@H
|$0H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
5=s'
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
AWAVH
AUATH
T$xH
|$x1
t$@1
t$H1
t$P1
t$X1
t$`1
D$`H
L$8H
t$hH
T$(1
L$<H
t$p1
t$xI
t$8M
t$8L
t$8L
|$pH
[]A\A]A^A_
|$x1
|$x1
|$x1
AWAVH
AUATH
L$pH
|$h1
|$pH
t$81
|$xH
t$@1
t$H1
D$HH
t$PH
D$PH
L$0H
t$XH
T$(1
L$4H
t$`1
t$`UM
t$8M
t$8L
L$8L
55J'
[]A\A]A^A_
|$h1
|$h1
|$`H
|$h1
AUATH
D$(1
L$ H
u=E1
L$(dH3
8[]A\A]
|$ H
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
t	H9
t	H9
5	F'
5gC'
5}D'
5bD'
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$H1
L$8H
T$0L
D$@H
\$HdH3
|$0H
|$8H
t$ 1
|$@H
t$(1
T$(H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$H1
L$8H
T$0L
D$@H
\$HdH3
|$0H
|$8H
t$ 1
|$@H
t$(1
T$(H
|$ H
|$(H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$H1
L$8H
T$0L
D$@H
\$HdH3
|$0H
|$8H
t$ 1
|$@H
t$(1
T$(H
|$ H
|$(H
D$(1
T$ H
L$(dH3
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
AVAUH
ATUH
D$xH
D$xP1
L$xL
ZYud
[]A\A]A^
|$PH
t$(1
|$XH
t$01
|$`H
t$81
|$hH
L$ H
t$@1
|$pH
L$$H
t$H1
|$xH
|$HH
|$@H
|$8H
|$0H
D$(1
T$ H
L$(dH3
|$ H
D$81
L$0H
T$(H
T$8dH3
|$(H
t$ 1
D$0H;
|$ H
ATUH
ulE1
 []A\
D$X1
T$0H
D$XP1
L$XL
ZYu/1
\$XdH3
|$0H
t$ 1
|$8H
t$(1
L$@H
L$HH9
t$PH9
uuE1
t$(H
|$(H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
ATUH
D$X1
L$@H
T$8L
L$PL
D$HH
\$XdH3
`[]A\
|$8H
|$@H
t$ 1
|$HH
t$(1
|$PH
t$01
L$0L
|$ H
|$0H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$(1
T$ H
L$(dH3
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
5M	'
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
D$81
L$0H
T$(H
\$8dH3
|$(H
|$0H
t$ 1
t$ H
|$ H
ATUI
l$ H
D$(1
T$ H
\$(dH3
0[]A\
T$ H
ATUH
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
\$8dH3
@[]A\
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
T$ H
|$ H
\$(dH3
AVAUH
 [A]A^
D$(1
L$ H
|$ H
L$(dH3
D$(1
t$ H
\$(dH3
D$(1
t$ H
\$(dH3
D$81
L$ H
D$(H
|$ H
|$(H
t$0H
L$8dH3
ATUH
D$(1
D$ H
D$ H
\$(dH3
0[]A\
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ L
|$ H9
H;=o
uME1
L$(dH3
ATUH
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
\$8dH3
@[]A\
AUATH
D$(1
L$ H
|$ H
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
t	H9
L$(dH3
8[]A\A]
ATUH
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
\$8dH3
@[]A\
AUATH
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
t	H;
t	H;
L$8dH3
H[]A\A]
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
AUATH
D$81
L$ H
L$0L
D$(H
|$ H
|$(H
t	H;
t	H;
L$8dH3
H[]A\A]
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
ATUH
D$81
L$ H
L$0L
D$(H
|$ H
|$(H
\$8dH3
@[]A\
ATUH
D$81
L$ H
L$0L
D$(H
|$ H
|$(H
\$8dH3
@[]A\
AUATH
D$(1
D$ H
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
t	H9
L$(dH3
8[]A\A]
ATUH
D$81
L$ H
L$0L
D$(H
|$ H
|$(H
\$8dH3
@[]A\
AUATH
D$(1
D$ H
t	H;
t	H;
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
t	H9
L$(dH3
8[]A\A]
AVAUH
ATUH
D$H1
L$0H
T$(L
L$@L
D$8H
|$(H
|$0H
|$8H
|$@H
t$ 1
D$ L
\$HdH3
P[]A\A]A^
AVAUH
ATUH
D$H1
L$(H
T$ H
D$HP1
L$HL
|$ 1
|$(H
|$0H
|$8H
\$HdH3
P[]A\A]A^
D$(1
\$(dH3
|$ H
D$ L
ATUH
D$81
L$ H
L$0L
D$(H
|$ H
|$(H
D$0H
\$8dH3
@[]A\
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
\$8dH3
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
\$8dH3
ATUH
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
\$8dH3
@[]A\
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
AUATH
D$H1
L$0H
T$(L
L$@L
D$8H
|$(H
|$0H
|$8H
|$@H
t$ 1
D$ H
t	H;
t	H;
L$HdH3
X[]A\A]
t	H;
t	H;
t	H9
t	H9
t	H9
t	H9
t	H9
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
\$8dH3
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
\$8dH3
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
\$8dH3
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
\$8dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
AUATH
D$(1
L$ H
|$ H
\$(dH3
8[]A\A]
ATUH
 []A\
AVAUH
 [A]A^
AUATH
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
\$8dH3
H[]A\A]
AUATH
D$81
L$(H
T$ L
D$0H
|$ H
|$(H
|$0H
\$8dH3
H[]A\A]
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
5o}&
5;}&
5'y&
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$(1
L$ H
|$ H
L$(dH3
D$ H
D$ H
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
|$(dH3<%(
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
D$(1
L$ H
|$ H
\$(dH3
-I-%
-i+%
AWAVAUATUSH
D$H1
D$8L
t$ H
D$/c
D$0y
D$1f
D$2n
D$3v
D$5I
D$6P
D$7L
t$@1
D$HdH3
X[]A\A]A^A_
swig_ptr
L$8M
?vnH
D$ H
N9$2
0123456789abcdef
SWIG_Python_ConvertFunctionPtr
SWIG_Python_NewPointerObj
SWIG_Python_ConvertPtrAndOwn
:qof_query_init
__new__
__swig_destroy__
:guid_shutdown
:guid_init
:qof_query_shutdown
:xaccAccountTypesValid
O:gnc_set_account_separator
this
O:swigregister
SwigPyObject
SwigPyPacked
O:gncOwnerTypeToQofIdType
OO:pwr64
O:xaccAccountIsEquityType
O:xaccAccountIsAPARType
O:xaccAccountIsAssetLiabType
OO:xaccAccountTypesCompatible
:gnc_commodity_table_register
:gncOwnerRegister
:gncCustomerRegister
:gncVendorRegister
:gncInvoiceRegister
OO:qof_load_backend_library
<Swig Packed 
<Swig Packed at %s%s>
<Swig Packed %s>
%s%s
_p_char
gnucash_core.c
:gnc_get_account_separator
:qof_session_new
O:qof_collection_new
:qof_query_create
O:qof_query_create_for
OOO:qof_query_date_predicate
datetime.datetime_CAPI
OO:qof_query_int32_predicate
OO:qof_query_int64_predicate
OO:qof_query_double_predicate
OO:qof_query_char_predicate
:gnc_guid_get_type
:guid_new_return
:guid_null
:guid_malloc
:guid_hash_table_new
OOO:double_to_gnc_numeric
O:gnc_numeric_error
:gnc_numeric_get_type
:gnc_commodity_table_new
:gnc_address_get_type
:gnc_billterm_get_type
:gncOwnerNew
:gncTaxTableEntryCreate
:new_AccountClass
:new_GncLotClass
:new__QofQueryPredData
:new_GncGUID
:new__gnc_numeric
:new__gnc_monetary
:new__gncAccountValue
:gnc_pricedb_get_type
OO:gnc_numeric_create
:gnc_taxtable_get_type
:gnc_job_get_type
:gnc_employee_get_type
:gnc_vendor_get_type
:gnc_customer_get_type
:gnc_entry_get_type
:gnc_invoice_get_type
:gnc_price_get_type
:gnc_lot_get_type
:gnc_commodity_get_type
:gnc_transaction_get_type
:gnc_split_get_type
:gnc_account_get_type
:gnc_numeric_zero
OOO:qof_query_core_to_string
O:xaccSplitGetReconcile
O:xaccTransGetTxnType
O:gncSplitGetGUID
O:gncTransGetGUID
O:gncAccountGetGUID
OO:xaccSplitConvertAmount
O:xaccMallocSplit
O:xaccSplitReinit
O:xaccSplitDestroy
OO:xaccSplitCopyOnto
O:xaccSplitGetBook
O:xaccSplitGetAccount
OO:xaccSplitSetAccount
O:xaccSplitGetParent
OO:xaccSplitSetParent
O:xaccSplitGetLot
OO:xaccSplitSetLot
O:xaccSplitGetSlots
OO:xaccSplitSetSlots_nc
O:xaccSplitGetDateReconciled
OO:xaccSplitSetAmount
O:xaccSplitGetAmount
OO:xaccSplitSetValue
O:xaccSplitGetValue
O:xaccSplitGetSharePrice
OOO:xaccSplitSetBaseValue
OO:xaccSplitGetBaseValue
O:xaccSplitGetBalance
O:xaccSplitGetClearedBalance
OOOOO:xaccSplitEqual
OO:xaccSplitLookup
O:xaccSplitGetOtherSplit
O:xaccSplitMakeStockSplit
OO:xaccSplitOrder
OO:xaccSplitOrderDateOnly
OO:xaccSplitSetSharePrice
O:xaccSplitVoidFormerAmount
O:xaccSplitVoidFormerValue
O:gnc_account_get_children
O:gnc_account_get_descendants
O:xaccMallocAccount
O:gnc_account_create_root
OO:xaccCloneAccount
O:xaccAccountBeginEdit
O:xaccAccountCommitEdit
O:xaccAccountDestroy
OOO:xaccAccountEqual
OO:xaccAccountOrder
O:gnc_book_get_root_account
OO:gnc_book_set_root_account
OO:xaccAccountLookup
O:gnc_account_get_book
OO:xaccAccountSetType
OO:gnc_account_set_policy
O:xaccAccountGetType
O:xaccAccountIsPriced
O:gnc_account_set_sort_dirty
OO:gnc_account_insert_split
OO:gnc_account_remove_split
O:gnc_account_get_policy
O:xaccAccountRecomputeBalance
OO:xaccAccountSortSplits
O:gnc_account_get_full_name
OO:xaccAccountSetCommodity
O:xaccAccountGetCommodity
O:xaccAccountGetCommoditySCU
O:xaccAccountGetCommoditySCUi
OO:xaccAccountSetCommoditySCU
OO:xaccAccountSetNonStdSCU
O:xaccAccountGetNonStdSCU
O:xaccAccountGetBalance
OO:gnc_account_append_child
OO:gnc_account_remove_child
O:gnc_account_get_parent
O:gnc_account_get_root
O:gnc_account_is_root
O:gnc_account_n_children
OO:gnc_account_child_index
OO:gnc_account_nth_child
O:gnc_account_n_descendants
O:gnc_account_get_tree_depth
OO:gnc_account_join_children
O:gnc_account_merge_children
OO:xaccAccountHasAncestor
O:xaccAccountGetSplitList
OO:xaccAccountMoveAllSplits
OO:xaccAccountInsertLot
OO:xaccAccountRemoveLot
O:xaccAccountGetLotList
O:xaccAccountGetPlaceholder
OO:xaccAccountSetPlaceholder
O:xaccAccountGetHidden
OO:xaccAccountSetHidden
O:xaccAccountIsHidden
O:xaccAccountGetTaxRelated
OO:xaccAccountSetTaxRelated
OO:xaccAccountSetMark
OO:xaccClearMark
OO:xaccClearMarkDown
OO:xaccTransactionTraverse
OO:DxaccAccountSetCurrency
O:DxaccAccountGetCurrency
O:xaccMallocTransaction
O:xaccTransDestroy
O:xaccTransClone
OOOOOO:xaccTransEqual
O:xaccTransBeginEdit
O:xaccTransCommitEdit
O:xaccTransRollbackEdit
O:xaccTransIsOpen
OO:xaccTransLookup
O:xaccTransCopyToClipBoard
OO:xaccTransCopyOnto
OO:xaccTransScrubGains
O:gnc_book_count_transactions
O:xaccTransUseTradingAccounts
O:xaccTransSortSplits
OO:xaccTransSetIsClosingTxn
O:xaccTransGetIsClosingTxn
OO:xaccTransGetSplit
OO:xaccTransGetSplitIndex
O:xaccTransGetSplitList
OO:xaccTransStillHasSplit
O:xaccTransClearReadOnly
O:xaccTransCountSplits
O:xaccTransGetCurrency
OO:xaccTransSetCurrency
O:xaccTransGetImbalanceValue
O:xaccTransGetImbalance
O:xaccTransIsBalanced
OO:xaccTransGetAccountValue
OO:xaccTransGetAccountAmount
OO:xaccTransGetAccountBalance
OO:xaccTransOrder
OOOO:xaccTransSetDate
OO:xaccTransSetDatePostedSecs
OO:xaccTransSetDatePostedTS
OO:xaccTransSetDateEnteredTS
OO:xaccTransSetDateDueTS
O:xaccTransGetDate
OO:xaccTransGetDatePostedTS
O:xaccTransRetDatePostedTS
O:xaccTransGetDatePostedGDate
O:xaccTransGetDateEntered
OO:xaccTransGetDateEnteredTS
O:xaccTransRetDateEnteredTS
O:xaccTransRetDateDueTS
OO:xaccTransGetDateDueTS
O:xaccTransUnvoid
O:xaccTransReverse
O:xaccTransGetReversedBy
O:xaccTransGetVoidStatus
O:xaccTransGetVoidTime
O:gnc_lot_new
O:gnc_lot_destroy
OO:gnc_lot_lookup
O:gnc_lot_get_book
O:gnc_lot_begin_edit
O:gnc_lot_commit_edit
OO:gnc_lot_add_split
OO:gnc_lot_remove_split
O:gnc_lot_get_split_list
O:gnc_lot_count_splits
O:gnc_lot_get_account
OO:gnc_lot_set_account
O:gnc_lot_get_balance
O:gnc_lot_is_closed
O:gnc_lot_get_earliest_split
O:gnc_lot_get_latest_split
O:gnc_lot_set_closed_unknown
O:gnc_lot_get_slots
O:gnc_lot_make_default
OO:qof_backend_run_begin
O:qof_backend_begin_exists
OO:qof_backend_run_commit
O:qof_backend_commit_exists
OO:qof_backend_set_error
O:qof_backend_get_error
O:qof_backend_check_error
O:qof_book_get_backend
OO:qof_book_set_backend
O:qof_session_destroy
OO:qof_session_swap_data
O:qof_session_get_error
O:qof_session_pop_error
O:qof_session_get_book
O:qof_session_end
O:qof_session_events_pending
O:qof_session_process_events
OO:qof_session_add_close_hook
O:qof_book_uses_autoreadonly
O:qof_book_shutting_down
O:qof_book_session_not_saved
O:qof_collection_count
O:qof_collection_destroy
O:qof_collection_get_type
O:qof_collection_get_data
OO:qof_collection_set_data
O:qof_collection_is_dirty
OO:qof_collection_add_entity
OO:qof_collection_compare
OO:qof_collection_from_glist
O:qof_query_destroy
OO:qof_query_search_for
OO:qof_query_set_book
OOOO:qof_query_add_term
list must contain strings
not a list
OOOO:qof_query_add_guid_match
O:qof_query_run
O:qof_query_last_run
OO:qof_query_run_subquery
O:qof_query_clear
OO:qof_query_purge_terms
O:qof_query_has_terms
O:qof_query_num_terms
OO:qof_query_has_term_type
OO:qof_query_get_term_type
O:qof_query_copy
O:qof_query_invert
OOO:qof_query_merge
OOO:qof_query_merge_in_place
OOOO:qof_query_set_sort_order
OO:qof_query_set_max_results
OO:qof_query_equal
O:qof_query_print
O:qof_query_get_search_for
O:qof_query_get_books
OO:qof_query_guid_predicate
OO:qof_query_choice_predicate
OOO:qof_query_kvp_predicate
O:gnc_value_get_guid
O:guid_new
O:guid_free
O:guid_copy
O:guid_to_string
OO:guid_to_string_buff
OO:string_to_guid
OO:guid_equal
OO:guid_compare
O:guid_hash_to_guint
OO:guid_g_hash_table_equal
OO:string_to_gnc_numeric
O:gnc_numeric_to_double
O:gnc_numeric_to_string
O:gnc_num_dbg_to_string
O:gnc_numeric_check
OO:gnc_numeric_compare
O:gnc_numeric_zero_p
O:gnc_numeric_negative_p
O:gnc_numeric_positive_p
OO:gnc_numeric_eq
OO:gnc_numeric_equal
OOOO:gnc_numeric_same
OOOO:gnc_numeric_mul
OOOO:gnc_numeric_div
O:gnc_numeric_neg
O:gnc_numeric_abs
OOOO:gnc_numeric_add
OO:gnc_numeric_add_fixed
OOOO:gnc_numeric_sub
OO:gnc_numeric_sub_fixed
OOO:gnc_numeric_convert
O:gnc_numeric_reduce
OO:gnc_numeric_to_decimal
O:gnc_numeric_invert
O:gnc_quote_source_get_type
O:gnc_quote_source_get_index
O:gnc_commodity_destroy
OO:gnc_commodity_copy
OO:gnc_commodity_clone
O:gnc_commodity_get_fraction
OO:gnc_commodity_set_fraction
OO:gnc_commodity_equiv
OO:gnc_commodity_equal
OO:gnc_commodity_compare
OO:gnc_commodity_compare_void
O:gnc_commodity_is_iso
O:gnc_commodity_is_currency
OO:gnc_commodity_table_insert
OO:gnc_commodity_table_remove
O:gnc_commodity_table_destroy
OO:gnc_commodity_obtain_twin
O:gnc_commodity_begin_edit
O:gnc_commodity_commit_edit
O:gnc_monetary_list_free
O:qofOwnerGetType
O:qofOwnerGetOwner
OO:qofOwnerSetEntity
O:GNC_IS_OWNER
OO:gncOwnerInitUndefined
O:gncOwnerIsValid
O:gncOwnerGetUndefined
O:gncOwnerGetAddr
O:gncOwnerGetActive
O:gncOwnerGetCurrency
OO:gncOwnerSetActive
OO:gncOwnerCopy
OO:gncOwnerEqual
OO:gncOwnerGCompareFunc
OO:gncOwnerCompare
O:gncOwnerGetGUID
O:gncOwnerRetGUID
O:gncOwnerGetEndOwner
O:gncOwnerGetEndGUID
OO:gncOwnerAttachToLot
OO:gncOwnerLotMatchOwnerFunc
OO:gncOwnerLotsSortFunc
OO:gncOwnerGetOwnerFromLot
OO:gncOwnerGetOwnerFromTxn
O:gncOwnerGetSlots
OO:gncOwnerReduceSplitTo
O:gncOwnerSetLotLinkMemo
O:gncOwnerGetAccountTypesList
O:gncOwnerGetCommoditiesList
O:gncOwnerBeginEdit
O:gncOwnerDestroy
O:gncCustomerCreate
O:gncCustomerDestroy
O:gncCustomerBeginEdit
O:gncCustomerCommitEdit
OO:gncCustomerSetTerms
OO:gncCustomerSetTaxIncluded
OO:gncCustomerSetActive
OO:gncCustomerSetDiscount
OO:gncCustomerSetCredit
OO:gncCustomerSetCurrency
OO:gncCustomerSetTaxTable
OO:gncCustomerAddJob
OO:gncCustomerRemoveJob
O:gncCustomerGetAddr
O:gncCustomerGetShipAddr
O:gncCustomerGetTerms
O:gncCustomerGetTaxIncluded
O:gncCustomerGetActive
O:gncCustomerGetDiscount
O:gncCustomerGetCredit
O:gncCustomerGetCurrency
O:gncCustomerGetTaxTable
OO:gncCustomerCompare
OO:gncCustomerEqual
OO:gncCustomerGetJoblist
O:gncCustomerIsDirty
O:gncCustomerNextID
O:gncEmployeeCreate
O:gncEmployeeDestroy
O:gncEmployeeBeginEdit
O:gncEmployeeCommitEdit
OO:gncEmployeeCompare
OO:gncEmployeeSetWorkday
OO:gncEmployeeSetRate
OO:gncEmployeeSetCurrency
OO:gncEmployeeSetActive
OO:gncEmployeeSetCCard
OO:qofEmployeeSetAddr
O:gncEmployeeGetBook
O:gncEmployeeGetAddr
O:gncEmployeeGetWorkday
O:gncEmployeeGetRate
O:gncEmployeeGetCurrency
O:gncEmployeeGetActive
O:gncEmployeeGetCCard
OO:gncEmployeeEqual
O:gncEmployeeIsDirty
O:gncVendorCreate
O:gncVendorDestroy
OO:gncVendorSetTerms
OO:gncVendorSetTaxIncluded
OO:gncVendorSetCurrency
OO:gncVendorSetActive
OO:gncVendorSetTaxTable
OO:gncVendorAddJob
OO:gncVendorRemoveJob
O:gncVendorBeginEdit
O:gncVendorCommitEdit
O:gncVendorGetAddr
O:gncVendorGetTerms
O:gncVendorGetTaxIncluded
O:gncVendorGetCurrency
O:gncVendorGetActive
O:gncVendorGetTaxTable
OO:gncVendorCompare
OO:gncVendorEqual
O:gncVendorIsDirty
O:gncVendorNextID
OO:gncAddressCreate
O:gncAddressDestroy
O:gncAddressBeginEdit
O:gncAddressCommitEdit
O:gncAddressClearDirty
O:gncAddressIsDirty
OO:gncAddressCompare
OO:gncAddressEqual
O:gncBillTermCreate
O:gncBillTermDestroy
O:gncBillTermIncRef
O:gncBillTermDecRef
O:gncBillTermChanged
O:gncBillTermBeginEdit
O:gncBillTermCommitEdit
OO:gncBillTermSetType
OO:gncBillTermSetDueDays
OO:gncBillTermSetDiscountDays
OO:gncBillTermSetDiscount
OO:gncBillTermSetCutoff
O:gncBillTermGetTerms
O:gncBillTermGetType
O:gncBillTermGetDueDays
O:gncBillTermGetDiscountDays
O:gncBillTermGetDiscount
O:gncBillTermGetCutoff
O:gncBillTermIsDirty
O:gncBillTermGetParent
OO:gncBillTermReturnChild
O:gncBillTermGetRefcount
OO:gncBillTermCompare
OO:gncBillTermEqual
OO:gncBillTermIsFamily
OO:gncBillTermComputeDueDate
O:gncInvoiceCreate
O:gncInvoiceDestroy
O:gncInvoiceCopy
OO:gncInvoiceSetOwner
OO:gncInvoiceSetDateOpened
OO:gncInvoiceSetDatePosted
OO:gncInvoiceSetTerms
OO:gncInvoiceSetCurrency
OO:gncInvoiceSetActive
OO:gncInvoiceSetIsCreditNote
OO:gncInvoiceSetBillTo
OO:gncInvoiceAddEntry
OO:gncInvoiceRemoveEntry
OO:gncInvoiceAddPrice
OO:gncBillAddEntry
OO:gncBillRemoveEntry
O:gncInvoiceSortEntries
O:gncInvoiceRemoveEntries
O:gncInvoiceGetOwner
O:gncInvoiceGetDateOpened
O:gncInvoiceGetDatePosted
O:gncInvoiceGetDateDue
O:gncInvoiceGetTerms
O:gncInvoiceGetOwnerType
O:gncInvoiceGetType
O:gncInvoiceGetCurrency
O:gncInvoiceGetBillTo
O:gncInvoiceGetToChargeAmount
O:gncInvoiceGetActive
O:gncInvoiceGetIsCreditNote
O:gncInvoiceGetPostedLot
O:gncInvoiceGetPostedTxn
O:gncInvoiceGetPostedAcc
O:gncInvoiceGetTotal
OO:gncInvoiceGetTotalOf
O:gncInvoiceGetTotalSubtotal
O:gncInvoiceGetTotalTax
O:gncInvoiceGetEntries
OO:gncInvoiceGetPrice
O:gncInvoiceAmountPositive
OO:gncInvoiceUnpost
O:gncInvoiceAutoApplyPayments
O:gncInvoiceGetInvoiceFromTxn
O:gncInvoiceGetInvoiceFromLot
O:gncInvoiceBeginEdit
O:gncInvoiceCommitEdit
OO:gncInvoiceCompare
O:gncInvoiceIsPosted
O:gncInvoiceIsPaid
O:gncInvoiceGetBook
OO:gncInvoiceEqual
OO:gncInvoiceNextID
OO:gncInvoiceSetPostedAcc
OO:gncInvoiceSetPostedTxn
OO:gncInvoiceSetPostedLot
O:gncJobCreate
O:gncJobDestroy
OO:gncJobSetOwner
OO:gncJobSetActive
O:gncJobBeginEdit
O:gncJobCommitEdit
O:gncJobGetOwner
O:gncJobGetActive
OO:gncJobCompare
OO:gncJobEqual
O:gncEntryCreate
O:gncEntryDestroy
OO:gncEntrySetDateGDate
OO:gncEntrySetDate
OO:gncEntrySetDateEntered
OO:gncEntrySetQuantity
OOO:gncEntrySetDocQuantity
OO:gncEntrySetInvAccount
OO:gncEntrySetInvPrice
OO:gncEntrySetInvTaxable
OO:gncEntrySetInvTaxIncluded
OO:gncEntrySetInvTaxTable
OO:gncEntrySetInvDiscount
OO:gncEntrySetInvDiscountType
OO:gncEntrySetInvDiscountHow
OO:gncEntrySetBillAccount
OO:gncEntrySetBillPrice
OO:gncEntrySetBillTaxable
OO:gncEntrySetBillTaxIncluded
OO:gncEntrySetBillTaxTable
OO:gncEntrySetBillable
OO:gncOwnerInitCustomer
OO:gncOwnerInitJob
OO:gncOwnerInitVendor
OO:gncOwnerInitEmployee
O:gncOwnerGetType
O:gncOwnerGetCustomer
O:gncOwnerGetJob
O:gncOwnerGetVendor
O:gncOwnerGetEmployee
O:gncOwnerFree
OO:gncEntrySetBillTo
OO:gncEntrySetBillPayment
O:gncEntryGetDateGDate
O:gncEntryGetDate
O:gncEntryGetDateEntered
O:gncEntryGetQuantity
OO:gncEntryGetDocQuantity
O:gncEntryGetInvAccount
O:gncEntryGetInvPrice
O:gncEntryGetInvDiscount
O:gncEntryGetInvDiscountType
O:gncEntryGetInvDiscountHow
O:gncEntryGetInvTaxable
O:gncEntryGetInvTaxIncluded
O:gncEntryGetInvTaxTable
O:gncEntryGetBillAccount
O:gncEntryGetBillPrice
O:gncEntryGetBillTaxable
O:gncEntryGetBillTaxIncluded
O:gncEntryGetBillTaxTable
O:gncEntryGetBillable
O:gncEntryGetBillTo
O:gncEntryGetBillPayment
OOO:gncEntryCopy
OOOO:gncEntryGetDocValue
OOOO:gncEntryGetDocTaxValue
OOO:gncEntryGetDocTaxValues
OOO:gncEntryGetBalValue
OOO:gncEntryGetBalTaxValue
OO:gncEntryGetBalTaxValues
O:gncEntryGetOrder
O:gncEntryGetInvoice
O:gncEntryGetBill
O:gncEntryIsOpen
O:gncEntryBeginEdit
O:gncEntryCommitEdit
OO:gncEntryCompare
O:gncTaxTableCreate
O:gncTaxTableDestroy
O:gncTaxTableEntryDestroy
O:gncTaxTableIncRef
O:gncTaxTableDecRef
OO:gncTaxTableEntrySetAccount
OO:gncTaxTableEntrySetType
OO:gncTaxTableEntrySetAmount
OO:gncTaxTableAddEntry
OO:gncTaxTableRemoveEntry
O:gncTaxTableChanged
O:gncTaxTableBeginEdit
O:gncTaxTableCommitEdit
OO:gncTaxTableEqual
OO:gncCustomerLookup
OO:gncEmployeeLookup
OO:gncVendorLookup
OO:gncBillTermLookup
OO:gncInvoiceLookup
OO:gncJobLookup
OO:gncEntryLookup
OO:gncTaxTableLookup
O:gncTaxTableGetTables
O:gncTaxTableGetParent
OO:gncTaxTableReturnChild
O:gncTaxTableGetEntries
O:_QofQueryPredData_how_get
O:GncGUID___align_me_get
O:gncTaxTableEntryGetType
OO:gncTaxTableCompare
OO:gncTaxTableEntryCompare
O:gnc_price_get_source
O:_gnc_numeric_num_get
O:_gnc_numeric_denom_get
O:gnc_numeric_num
O:gnc_numeric_denom
O:gncTaxTableGetRefcount
O:gncTaxTableLastModified
O:gncTaxTableEntryGetAccount
O:gncTaxTableEntryGetAmount
OO:gncTaxTableEntryEqual
OOO:gncAccountValueAdd
OO:gncAccountValueAddList
O:gncAccountValueTotal
O:gncAccountValueDestroy
OO:gnc_search_customer_on_id
OO:gnc_search_invoice_on_id
OO:gnc_search_bill_on_id
OO:gnc_search_vendor_on_id
O:gnc_price_create
OO:gnc_price_clone
O:gnc_price_ref
O:gnc_price_unref
O:gnc_price_begin_edit
O:gnc_price_commit_edit
OO:gnc_price_set_commodity
OO:gnc_price_set_currency
OO:gnc_price_set_time
OO:gnc_price_set_source
OO:gnc_price_set_typestr
OO:gncTaxTableLookupByName
OO:gncTaxTableSetName
OO:gncTaxIncludedStringToType
OO:gncAmountStringToType
OO:qofEntrySetInvDiscHow
OO:qofEntrySetInvDiscType
OO:gncEntrySetNotes
OO:gncEntrySetAction
OO:gncEntrySetDescription
OO:gncJobSetReference
OO:gncJobSetName
OO:gncJobSetID
OO:gncInvoiceSetNotes
OO:gncInvoiceSetBillingID
OO:gncInvoiceSetID
OO:gncBillTermLookupByName
OO:gncBillTermSetDescription
OO:gncBillTermSetName
OO:gncAddressSetEmail
OO:gncAddressSetFax
OO:gncAddressSetPhone
OO:gncAddressSetAddr4
OO:gncAddressSetAddr3
OO:gncAddressSetAddr2
OO:gncAddressSetAddr1
OO:gncAddressSetName
OO:gncVendorSetNotes
OO:gncVendorSetName
OO:gncVendorSetID
OO:gncEmployeeSetAcl
OO:gncEmployeeSetLanguage
OO:gncEmployeeSetName
OO:gncEmployeeSetUsername
OO:gncEmployeeSetID
OO:gncCustomerSetNotes
OO:gncCustomerSetName
OO:gncCustomerSetID
OO:gnc_commodity_set_quote_tz
OO:gnc_commodity_set_cusip
OO:gnc_commodity_set_fullname
OO:gnc_commodity_set_mnemonic
OOOOOO:gnc_commodity_new
OO:gnc_quote_source_add_new
O:qof_query_build_param_list
OOOOO:qof_session_begin
OO:gnc_lot_set_notes
OO:gnc_lot_set_title
OO:xaccTransVoid
OO:xaccTransSetReadOnly
OO:xaccTransSetNotes
OO:xaccTransSetAssociation
OO:xaccTransSetDescription
OO:xaccTransSetNum
OO:dxaccAccountSetQuoteTZ
OO:xaccAccountSetTaxUSCode
OO:xaccAccountFindSplitByDesc
OO:xaccAccountFindTransByDesc
O:xaccAccountStringToEnum
OO:xaccAccountStringToType
OO:gnc_account_lookup_by_code
OO:gnc_account_lookup_by_name
OO:dxaccAccountSetPriceSrc
OO:xaccAccountSetLastNum
OO:xaccAccountSetNotes
OO:xaccAccountSetSortOrder
OO:xaccAccountSetFilter
OO:xaccAccountSetColor
OO:xaccAccountSetDescription
OO:xaccAccountSetCode
OO:xaccAccountSetName
OO:xaccSplitSetAction
OO:xaccSplitSetMemo
OO:xaccTransHasSplitsInState
OO:xaccTransSetTxnType
OO:xaccSplitSetReconcile
O:delete_AccountClass
O:delete_GncLotClass
O:delete__QofQueryPredData
O:delete_GncGUID
O:delete__gnc_numeric
O:delete__gnc_monetary
O:delete__gncAccountValue
OO:gnc_price_set_value
OO:gnc_price_lookup
O:gnc_price_get_commodity
O:gnc_price_get_currency
O:gnc_price_get_time
O:gnc_price_get_value
OO:gnc_price_equal
OO:_QofQueryPredData_how_set
OO:GncGUID___align_me_set
OOO:gnc_price_print
OO:_gnc_numeric_num_set
OO:_gnc_numeric_denom_set
OOO:gnc_price_list_insert
OO:gnc_price_list_remove
O:gnc_price_list_destroy
OO:gnc_price_list_equal
O:gnc_pricedb_get_db
O:gnc_collection_get_pricedb
O:gnc_pricedb_destroy
O:gnc_pricedb_begin_edit
O:gnc_pricedb_commit_edit
OO:gnc_pricedb_add_price
OO:gnc_pricedb_remove_price
OOO:gnc_pricedb_lookup_latest
OOO:gnc_pricedb_has_prices
OOO:gnc_pricedb_get_prices
OOOO:gnc_pricedb_lookup_day
swig_ptr: 
!newmemory
OOO:qof_collection_foreach
OOO:qof_session_export
OO:qof_session_safe_save
OO:qof_session_save
OO:qof_session_load
OOOO:xaccAccountFindOpenLots
OOO:xaccAccountForEachLot
OOO:gnc_account_foreach_child
O:gnc_pricedb_get_num_prices
OO:gnc_pricedb_equal
OO:gnc_pricedb_print_contents
OO:gnc_monetary_create
O:gnc_monetary_value
O:xaccSplitGetCapGains
O:xaccAccountHasTrades
O:xaccSplitGetCapGainsSplit
O:xaccSplitAssign
O:GncGUID_data_get
O:_gnc_monetary_commodity_get
O:_gnc_monetary_value_get
O:gnc_monetary_commodity
O:_gncAccountValue_value_get
OO:xaccSplitAssignToLot
OO:xaccSplitComputeCapGains
OO:xaccLotComputeCapGains
O:xaccScrubLot
O:xaccAccountScrubLots
OO:GncGUID_data_set
OO:_gnc_monetary_value_set
OO:_gncAccountValue_value_set
O:xaccAccountTreeScrubLots
O:gncVendorGetName
O:xaccAccountGetFilter
O:xaccAccountGetDescription
O:xaccAccountGetColor
O:xaccSplitGetCorrAccountName
O:xaccSplitGetCorrAccountCode
O:xaccAccountGetName
O:xaccAccountGetCode
O:xaccAccountGetSortOrder
O:gnc_lot_get_title
O:xaccTransGetReadOnly
O:xaccTransGetVoidReason
O:xaccTransGetNum
O:xaccTransGetDescription
O:xaccTransGetAssociation
O:xaccTransGetNotes
O:xaccAccountGetNotes
O:xaccAccountGetLastNum
O:dxaccAccountGetPriceSrc
O:xaccAccountTypeEnumAsString
O:xaccAccountGetTypeStr
O:xaccAccountGetTaxUSCode
O:dxaccAccountGetQuoteTZ
O:gncInvoiceGetNotes
O:gncInvoiceGetTypeString
O:gncCustomerGetID
O:gncCustomerGetNotes
O:gncEmployeeGetID
O:gncEmployeeGetUsername
O:gncEntryGetNotes
O:gnc_commodity_get_cusip
O:gnc_commodity_get_quote_tz
O:gncJobGetReference
O:gncAddressGetAddr4
O:qof_session_get_url
O:qof_session_get_file_path
O:gncEmployeeGetName
O:gnc_commodity_get_namespace
O:gnc_commodity_get_printname
O:gnc_commodity_get_fullname
O:gncVendorGetNotes
O:gncCustomerGetName
O:gnc_commodity_get_mnemonic
O:gnc_price_get_typestr
O:gncEmployeeGetAcl
O:gncAmountTypeToString
O:qofEntryGetInvDiscHow
O:qofEntryGetInvDiscType
O:gncVendorGetID
O:gncBillTermGetName
O:gncBillTermGetDescription
O:gncInvoiceGetID
O:gncAddressGetFax
O:gncJobGetID
O:gncEntryDiscountHowToString
O:gncJobGetName
O:gncInvoiceGetBillingID
O:gncEntryPaymentTypeToString
O:gncEntryGetDescription
O:gncEntryGetAction
O:xaccSplitGetMemo
O:gncAddressGetName
O:gncAddressGetPhone
O:gncAddressGetEmail
O:gncAddressGetAddr1
O:gnc_price_get_source_string
O:gncAddressGetAddr3
O:gncAddressGetAddr2
O:xaccSplitGetAction
O:xaccSplitGetType
O:gncTaxTableGetName
O:gncEmployeeGetLanguage
O:gncTaxIncludedTypeToString
O:gnc_lot_get_notes
O:gncOwnerGetID
O:gncOwnerGetName
_gnucash_core_c
swig_runtime_data4
type_pointer_capsule
CREC
YREC
FREC
NREC
VREC
SPLIT_KVP
date-reconciled
SPLIT_DATE_RECONCILED
SPLIT_BALANCE
cleared-balance
SPLIT_CLEARED_BALANCE
reconciled-balance
SPLIT_RECONCILED_BALANCE
memo
SPLIT_MEMO
SPLIT_ACTION
reconcile-flag
SPLIT_RECONCILE
SPLIT_AMOUNT
share-price
SPLIT_SHARE_PRICE
SPLIT_VALUE
SPLIT_TYPE
voided-amount
SPLIT_VOIDED_AMOUNT
voided-value
SPLIT_VOIDED_VALUE
SPLIT_LOT
trans
SPLIT_TRANS
SPLIT_ACCOUNT
account-guid
SPLIT_ACCOUNT_GUID
SPLIT_ACCT_FULLNAME
corr-acct-fullname
SPLIT_CORR_ACCT_NAME
corr-acct-code
SPLIT_CORR_ACCT_CODE
ACCT_TYPE_INVALID
ACCT_TYPE_NONE
ACCT_TYPE_BANK
ACCT_TYPE_CASH
ACCT_TYPE_CREDIT
ACCT_TYPE_ASSET
ACCT_TYPE_LIABILITY
ACCT_TYPE_STOCK
ACCT_TYPE_MUTUAL
ACCT_TYPE_CURRENCY
ACCT_TYPE_INCOME
ACCT_TYPE_EXPENSE
ACCT_TYPE_EQUITY
ACCT_TYPE_RECEIVABLE
ACCT_TYPE_PAYABLE
ACCT_TYPE_ROOT
ACCT_TYPE_TRADING
NUM_ACCOUNT_TYPES
ACCT_TYPE_CHECKING
ACCT_TYPE_SAVINGS
ACCT_TYPE_MONEYMRKT
ACCT_TYPE_CREDITLINE
ACCT_TYPE_LAST
PLACEHOLDER_NONE
PLACEHOLDER_THIS
PLACEHOLDER_CHILD
ACCOUNT_KVP
ACCOUNT_NAME_
ACCOUNT_CODE_
desc
ACCOUNT_DESCRIPTION_
color
ACCOUNT_COLOR_
filter
ACCOUNT_FILTER_
sort-order
ACCOUNT_SORT_ORDER_
ACCOUNT_NOTES_
ACCOUNT_BALANCE_
cleared
ACCOUNT_CLEARED_
ACCOUNT_RECONCILED_
present
ACCOUNT_PRESENT_
future-minimum
ACCOUNT_FUTURE_MINIMUM_
tax-related-p
ACCOUNT_TAX_RELATED
account-type
ACCOUNT_TYPE_
smallest-commodity-unit
ACCOUNT_SCU
non-standard-scu
ACCOUNT_NSCU
parent-account
ACCOUNT_PARENT
account-match-all
ACCOUNT_MATCH_ALL_TYPE
TXN_TYPE_NONE
TXN_TYPE_INVOICE
TXN_TYPE_PAYMENT
TXN_TYPE_LINK
TRANS_KVP
TRANS_NUM
TRANS_DESCRIPTION
date-entered
TRANS_DATE_ENTERED
date-posted
TRANS_DATE_POSTED
date-due
TRANS_DATE_DUE
trans-imbalance
TRANS_IMBALANCE
trans-balanced?
TRANS_IS_BALANCED
trans-is-closing?
TRANS_IS_CLOSING
TRANS_NOTES
assoc
TRANS_ASSOCIATION
TRANS_TYPE
void-p
TRANS_VOID_STATUS
void-reason
TRANS_VOID_REASON
void-time
TRANS_VOID_TIME
split-list
TRANS_SPLITLIST
reconciled-match
RECONCILED_MATCH_TYPE
is-closed?
LOT_IS_CLOSED
LOT_BALANCE
lot-title
LOT_TITLE
LOT_NOTES
qof.backend
QOF_MOD_BACKEND
ERR_BACKEND_NO_ERR
ERR_BACKEND_NO_HANDLER
ERR_BACKEND_NO_BACKEND
ERR_BACKEND_BAD_URL
ERR_BACKEND_NO_SUCH_DB
ERR_BACKEND_CANT_CONNECT
ERR_BACKEND_CONN_LOST
ERR_BACKEND_LOCKED
ERR_BACKEND_STORE_EXISTS
ERR_BACKEND_READONLY
ERR_BACKEND_TOO_NEW
ERR_BACKEND_DATA_CORRUPT
ERR_BACKEND_SERVER_ERR
ERR_BACKEND_ALLOC
ERR_BACKEND_PERM
ERR_BACKEND_MODIFIED
ERR_BACKEND_MOD_DESTROY
ERR_BACKEND_MISC
ERR_QOF_OVERFLOW
ERR_FILEIO_FILE_BAD_READ
ERR_FILEIO_FILE_EMPTY
ERR_FILEIO_FILE_LOCKERR
ERR_FILEIO_FILE_NOT_FOUND
ERR_FILEIO_FILE_TOO_OLD
ERR_FILEIO_UNKNOWN_FILE_TYPE
ERR_FILEIO_PARSE_ERROR
ERR_FILEIO_BACKUP_ERROR
ERR_FILEIO_WRITE_ERROR
ERR_FILEIO_READ_ERROR
ERR_FILEIO_NO_ENCODING
ERR_FILEIO_FILE_EACCES
ERR_FILEIO_RESERVED_WRITE
ERR_FILEIO_FILE_UPGRADE
ERR_NETIO_SHORT_READ
ERR_NETIO_WRONG_CONTENT_TYPE
ERR_NETIO_NOT_GNCXML
ERR_SQL_MISSING_DATA
ERR_SQL_DB_TOO_OLD
ERR_SQL_DB_TOO_NEW
ERR_SQL_DB_BUSY
ERR_SQL_BAD_DBI
ERR_SQL_DBI_UNTESTABLE
ERR_RPC_HOST_UNK
ERR_RPC_CANT_BIND
ERR_RPC_CANT_ACCEPT
ERR_RPC_NO_CONNECTION
ERR_RPC_BAD_VERSION
ERR_RPC_FAILED
ERR_RPC_NOT_ADDED
qof.session
QOF_MOD_SESSION
QOF_STDOUT
QOF_ID_NULL
QOF_ID_BOOK
QOF_ID_SESSION
qof.query
QOF_MOD_QUERY
QOF_QUERY_AND
QOF_QUERY_OR
QOF_QUERY_NAND
QOF_QUERY_NOR
QOF_QUERY_XOR
QofQueryDefaultSort
QUERY_DEFAULT_SORT
QOF_PARAM_BOOK
QOF_PARAM_GUID
QOF_PARAM_KVP
QOF_PARAM_ACTIVE
version
QOF_PARAM_VERSION
QOF_COMPARE_LT
QOF_COMPARE_LTE
QOF_COMPARE_EQUAL
QOF_COMPARE_GT
QOF_COMPARE_GTE
QOF_COMPARE_NEQ
QOF_STRING_MATCH_NORMAL
QOF_DATE_MATCH_NORMAL
QOF_DATE_MATCH_DAY
QOF_NUMERIC_MATCH_DEBIT
QOF_NUMERIC_MATCH_CREDIT
QOF_NUMERIC_MATCH_ANY
QOF_GUID_MATCH_ANY
QOF_GUID_MATCH_NONE
QOF_GUID_MATCH_NULL
QOF_GUID_MATCH_ALL
QOF_GUID_MATCH_LIST_ANY
QOF_CHAR_MATCH_ANY
QOF_CHAR_MATCH_NONE
GUID_DATA_SIZE
GUID_ENCODING_LENGTH
GNC_NUMERIC_RND_MASK
GNC_NUMERIC_DENOM_MASK
GNC_NUMERIC_SIGFIGS_MASK
GNC_HOW_RND_FLOOR
GNC_HOW_RND_CEIL
GNC_HOW_RND_TRUNC
GNC_HOW_RND_PROMOTE
GNC_HOW_RND_ROUND_HALF_DOWN
GNC_HOW_RND_ROUND_HALF_UP
GNC_HOW_RND_ROUND
GNC_HOW_RND_NEVER
GNC_HOW_DENOM_EXACT
GNC_HOW_DENOM_REDUCE
GNC_HOW_DENOM_LCD
GNC_HOW_DENOM_FIXED
GNC_HOW_DENOM_SIGFIG
GNC_ERROR_OK
GNC_ERROR_ARG
GNC_ERROR_OVERFLOW
GNC_ERROR_DENOM_DIFF
GNC_ERROR_REMAINDER
GNC_DENOM_AUTO
GNC_COMMODITY_TABLE
GNC_LEGACY_CURRENCIES
GNC_COMMODITY_NS_LEGACY
ISO4217
GNC_COMMODITY_NS_ISO
GNC_COMMODITY_NS_CURRENCY
GNC_COMMODITY_NS_NASDAQ
GNC_COMMODITY_NS_NYSE
GNC_COMMODITY_NS_EUREX
FUND
GNC_COMMODITY_NS_MUTUAL
GNC_COMMODITY_NS_AMEX
GNC_COMMODITY_NS_ASX
SOURCE_SINGLE
SOURCE_MULTI
SOURCE_UNKNOWN
SOURCE_MAX
SOURCE_CURRENCY
GNC_ID_OWNER
GNC_OWNER_NONE
GNC_OWNER_UNDEFINED
GNC_OWNER_CUSTOMER
GNC_OWNER_JOB
GNC_OWNER_VENDOR
GNC_OWNER_EMPLOYEE
OWNER_TYPE
type-string
OWNER_TYPE_STRING
customer
vendor
employee
OWNER_PARENT
parent-guid
OWNER_PARENTG
OWNER_NAME
owner-from-lot
OWNER_FROM_LOT
GNC_ID_CUSTOMER
CUSTOMER_ID
CUSTOMER_NAME
CUSTOMER_ADDR
shipaddr
CUSTOMER_SHIPADDR
CUSTOMER_NOTES
amount of discount
CUSTOMER_DISCOUNT
amount of credit
CUSTOMER_CREDIT
tax table override
CUSTOMER_TT_OVER
customer_tax_included
CUSTOMER_TAX_INC
customer_terms
CUSTOMER_TERMS
customer_is_active
CUSTOMER_ACTIVE
customer_values
CUSTOMER_SLOTS
GNC_ID_EMPLOYEE
EMPLOYEE_ID
username
EMPLOYEE_USERNAME
EMPLOYEE_NAME
EMPLOYEE_ADDR
native language
EMPLOYEE_LANGUAGE
EMPLOYEE_ACL
workday
EMPLOYEE_WORKDAY
rate
EMPLOYEE_RATE
credit_card_account
EMPLOYEE_CC
GNC_ID_VENDOR
VENDOR_ID
VENDOR_NAME
VENDOR_ADDR
vendor_notes
VENDOR_NOTES
vendor_terms
VENDOR_TERMS
vendor_tax_included
VENDOR_TAX_INC
vendor_is_active
VENDOR_ACTIVE
override_tax_table
VENDOR_TAX_OVERRIDE
vendor_tax_table
VENDOR_TAX_TABLE
GNC_ADDRESS_MODULE_NAME
GNC_ID_ADDRESS
ADDRESS_NAME
number
ADDRESS_ONE
street
ADDRESS_TWO
locality
ADDRESS_THREE
city
ADDRESS_FOUR
phone
ADDRESS_PHONE
ADDRESS_FAX
email
ADDRESS_EMAIL
owner
ADDRESS_OWNER
GNC_ID_BILLTERM
GNC_BILLTERM_NAME
description
GNC_BILLTERM_DESC
number of days due
GNC_BILLTERM_DUEDAYS
number of discounted days
GNC_BILLTERM_DISCDAYS
cut off
GNC_BILLTERM_CUTOFF
bill type
GNC_BILLTERM_TYPE
GNC_BILLTERM_DISCOUNT
reference count
GNC_BILLTERM_REFCOUNT
GNC_TERM_TYPE_DAYS
GNC_TERM_TYPE_PROXIMO
GNC_ID_INVOICE
GNC_INVOICE_UNDEFINED
GNC_INVOICE_CUST_INVOICE
GNC_INVOICE_VEND_INVOICE
GNC_INVOICE_EMPL_INVOICE
GNC_INVOICE_CUST_CREDIT_NOTE
GNC_INVOICE_VEND_CREDIT_NOTE
GNC_INVOICE_EMPL_CREDIT_NOTE
GNC_INVOICE_NUM_TYPES
INVOICE_ID
INVOICE_OWNER
date_opened
INVOICE_OPENED
date_posted
INVOICE_POSTED
date_due
INVOICE_DUE
is_posted?
INVOICE_IS_POSTED
is_paid?
INVOICE_IS_PAID
INVOICE_TERMS
billing_id
INVOICE_BILLINGID
INVOICE_NOTES
INVOICE_ACC
posted_txn
INVOICE_POST_TXN
posted_lot
INVOICE_POST_LOT
credit_note
INVOICE_IS_CN
INVOICE_TYPE
type_string
INVOICE_TYPE_STRING
bill-to
INVOICE_BILLTO
list_of_entries
INVOICE_ENTRIES
invoice_job
INVOICE_JOB
invoice-from-lot
INVOICE_FROM_LOT
invoice-from-txn
INVOICE_FROM_TXN
GNC_ID_JOB
JOB_ID
JOB_NAME
reference
JOB_REFERENCE
owner_collection
Q_JOB_OWNER
JOB_ACTIVE
GNC_PAYMENT_CASH
GNC_PAYMENT_CARD
GNC_DISC_PRETAX
GNC_DISC_SAMETIME
GNC_DISC_POSTTAX
GNC_ID_ENTRY
ENTRY_DATE
ENTRY_DATE_ENTERED
ENTRY_DESC
ENTRY_ACTION
ENTRY_NOTES
ENTRY_QTY
iprice
ENTRY_IPRICE
invoice-account
ENTRY_IACCT
bill-account
ENTRY_BACCT
bprice
ENTRY_BPRICE
billable?
ENTRY_BILLABLE
ENTRY_BILLTO
ENTRY_ORDER
invoice
ENTRY_INVOICE
bill
ENTRY_BILL
discount-type
ENTRY_INV_DISC_TYPE
discount-method
ENTRY_INV_DISC_HOW
invoice-taxable
ENTRY_INV_TAXABLE
bill-taxable
ENTRY_BILL_TAXABLE
invoice-tax-included
ENTRY_INV_TAX_INC
bill-tax-included
ENTRY_BILL_TAX_INC
invoice-discount
ENTRY_INV_DISCOUNT
bill-payment-type
ENTRY_BILL_PAY_TYPE
GNC_ID_TAXTABLE
GNC_AMT_TYPE_VALUE
GNC_AMT_TYPE_PERCENT
GNC_TAXINCLUDED_YES
GNC_TAXINCLUDED_NO
GNC_TAXINCLUDED_USEGLOBAL
tax table name
GNC_TT_NAME
GNC_TT_REFCOUNT
PRICE_SOURCE_EDIT_DLG
PRICE_SOURCE_FQ
PRICE_SOURCE_USER_PRICE
PRICE_SOURCE_XFER_DLG_VAL
PRICE_SOURCE_SPLIT_REG
PRICE_SOURCE_STOCK_SPLIT
PRICE_SOURCE_INVOICE
PRICE_SOURCE_INVALID
last
PRICE_TYPE_LAST
PRICE_TYPE_UNK
transaction
PRICE_TYPE_TRN
CURRENCY_DENOM
COMMODITY_DENOM_MULT
price-commodity
PRICE_COMMODITY
price-currency
PRICE_CURRENCY
price-date
PRICE_DATE
price-source
PRICE_SOURCE
price-type
PRICE_TYPE
price-value
PRICE_VALUE
gpointer|void *
_p_unsigned_int
guint *|unsigned int *
_p_p_Transaction
Transaction **
_p_p_GList
GList **|PriceList **
_p_int
int *|gint *
_p_gunichar
gunichar *
_p_guint8
guint8 *
_p_guchar
guchar *
_p_gnc_quote_source
gnc_quote_source *
_p_gnc_price_db_s
_p_gnc_commodity_table
gnc_commodity_table *
_p_gnc_commodity_namespace
gnc_commodity_namespace *
_p_gnc_commodity
gnc_commodity *
_p_gint64
gint64 *|time64 *
_p_gint32
gint32 *
_p_gconstpointer
gconstpointer *
_p_gchar
_p_gboolean
gboolean *
_p_float
float *|gfloat *
_p_f_p_GNCLot_p_void__p_void
_p_f_p_Account_p_void__void
_p_f_p_Account_p_void__p_void
_p_double
double *|gdouble *
_p__gnc_numeric
_p__gnc_monetary
_p__gncVendorClass
_p__gncVendor
_p__gncTaxTableEntry
_p__gncTaxTableClass
_p__gncTaxTable
_p__gncOwner
struct _gncOwner *|GncOwner *
_p__gncJobClass
_p__gncJob
struct _gncJob *|GncJob *
_p__gncInvoiceClass
_p__gncInvoice
_p__gncEntryClass
_p__gncEntry
struct _gncEntry *|GncEntry *
_p__gncEmployeeClass
_p__gncEmployee
_p__gncCustomerClass
_p__gncCustomer
_p__gncBillTermClass
_p__gncBillTerm
_p__gncAddressClass
_p__gncAddress
_p__gncAccountValue
_p__TransactionClass
_p__SplitClass
_p__QofSession
_p__QofQueryPredData
_p__QofQuery
struct _QofQuery *|QofQuery *
_p__GncPriceDBClass
_p__GncPriceClass
_p__GncCommodityClass
_p_TransactionCallback
TransactionCallback *
Transaction *
_p_Timespec
Timespec *
_p_SplitList
SplitList *
_p_Split
Split *
_p_QuoteSourceType
_p_QofType
QofType *
_p_QofStringMatch
_p_QofQueryOp
_p_QofQueryCompare
_p_QofParam
QofParam *
_p_QofNumericMatch
_p_QofInstanceClass
QofInstanceClass *
_p_QofInstance
QofInstance *
_p_QofGuidMatch
_p_QofDateMatch
_p_QofCollection_s
_p_QofCharMatch
_p_QofBook
QofBook *
_p_QofBackend_s
_p_QofBackendProvider_s
_p_QofBackendError
_p_PriceSource
_p_LotList
LotList *
_p_KvpValue
KvpValue *
_p_KvpFrame
KvpFrame *
_p_GncTaxIncluded
_p_GncOwnerType
_p_GncOrder
GncOrder *
_p_GncLotClass
GncLotClass *
_p_GncInvoiceType
_p_GncEntryPaymentType
_p_GncDiscountHow
_p_GncBillTermType
_p_GncAmountType
_p_GValue
GValue *
_p_GType
GType *
_p_GSList
GSList *|QofQueryParamList *
_p_GNC_INTERNAL_GUID
_p_GNCPrice
GNCPrice *
_p_GNCPolicy
GNCPolicy *
_p_GNCPlaceholderType
_p_GNCNumericErrorCode
_p_GNCLot
GNCLot *
_p_GNCAccountType
_p_GHashTable
GHashTable *
_p_GFunc
GFunc *
_p_GDate
GDate *
_p_GCompareFunc
GCompareFunc *
_p_FILE
FILE *
_p_AccountList
AccountList *
_p_AccountClass
AccountClass *
_p_Account
Account *
SWIG_PyInstanceMethod_New
gnc_split_get_type() -> GType
xaccSplitSetDateReconciledTS
xaccSplitGetDateReconciledTS
xaccSplitRetDateReconciledTS
xaccSplitGetReconciledBalance
xaccSplitCompareAccountCodes
AccountClass_parent_class_set
AccountClass_parent_class_get
AccountClass_swigregister
gnc_account_set_start_balance
gnc_account_set_balance_dirty
xaccAccountGetClearedBalance
xaccAccountGetPresentBalance
xaccAccountGetBalanceAsOfDate
gnc_account_get_current_depth
xaccAccountForEachTransaction
xaccAccountGetTaxUSCopyNumber
xaccAccountSetTaxUSCopyNumber
xaccTransCopyFromClipBoard
xaccTransFindSplitByAccount
xaccTransInFutureByPostedDate
xaccTransHasReconciledSplits
xaccTransGetRateForCommodity
xaccTransGetAccountConvRate
xaccTransOrder_num_action
xaccTransSetDatePostedGDate
xaccTransSetDateEnteredSecs
GncLotClass_parent_class_set
GncLotClass_parent_class_get
GncLotClass_swigregister
gnc_lot_get_type() -> GType
gnc_lot_get_balance_before
qof_session_get_error_message
qof_session_save_in_progress
qof_session_call_close_hooks
qof_book_use_trading_accounts
qof_collection_lookup_entity
qof_collection_remove_entity
qof_query_init()
qof_query_shutdown()
qof_query_add_guid_list_match
qof_query_add_boolean_match
qof_query_set_sort_options
qof_query_set_sort_increasing
qof_query_string_predicate
qof_query_numeric_predicate
qof_query_boolean_predicate
qof_query_collect_predicate
qof_query_kvp_predicate_path
qof_query_core_predicate_copy
qof_query_core_predicate_free
new_GncGUID() -> GncGUID
delete_GncGUID(GncGUID self)
GncGUID_swigregister
gnc_guid_get_type() -> GType
guid_init()
guid_shutdown()
guid_new(GncGUID guid)
guid_new_return() -> GncGUID
guid_null() -> GncGUID
guid_malloc() -> GncGUID
guid_free(GncGUID guid)
_gnc_numeric_swigregister
gnc_numeric_add_with_error
gnc_numeric_sub_with_error
gnc_numeric_mul_with_error
gnc_numeric_div_with_error
gnc_quote_source_fq_installed
gnc_quote_source_num_entries
gnc_quote_source_lookup_by_ti
gnc_commodity_get_unique_name
gnc_commodity_get_quote_flag
gnc_commodity_get_user_symbol
gnc_commodity_get_nice_symbol
gnc_commodity_set_namespace
gnc_commodity_set_quote_flag
gnc_commodity_set_user_symbol
gnc_commodity_table_get_table
gnc_commodity_table_lookup
gnc_commodity_table_find_full
gnc_commodity_table_get_size
_gnc_monetary_commodity_set
_gnc_monetary_swigregister
gnc_monetary_list_add_value
gncOwnerGetOwnerFromTypeGuid
gncOwnerCreatePaymentLot
gncOwnerApplyPayment
gncOwnerFindOffsettingSplit
gncOwnerGetBalanceInCurrency
gncOwnerNew() -> GncOwner *
gncVendorSetTaxTableOverride
gncVendorGetTaxTableOverride
gncInvoiceSetDateOpenedGDate
gncInvoiceSetToChargeAmount
gncInvoicePostToAccount
gncInvoiceApplyPayment
gnc_job_get_type() -> GType
gncJobDestroy(GncJob * job)
gncJobBeginEdit(GncJob * job)
gnc_entry_get_type() -> GType
gncEntryDiscountStringToHow
gncEntryPaymentStringToType
gncEntryGetDocDiscountValue
gncEntryGetBalDiscountValue
gncEntryComputeValue
_gncAccountValue_account_set
_gncAccountValue_account_get
_gncAccountValue_swigregister
gnc_price_get_type() -> GType
gnc_price_ref(GNCPrice * p)
gnc_price_unref(GNCPrice * p)
gnc_price_set_source_string
gnc_pricedb_set_bulk_update
gnc_pricedb_remove_old_prices
gnc_pricedb_lookup_at_time
gnc_pricedb_foreach_price
xaccAccountFindLatestOpenLot
xaccSplitGetGainsSourceSplit
disown
acquire
append
appends another 'this' object
next
__repr__
returns object representation
<Swig Object of type '%s' at %p>
swig/python detected a memory leak of type '%s', no destructor found.
:qof_finalize_backend_libraries
:gnc_get_account_separator_string
swig_runtime_data4.type_pointer_capsule
in method 'gncOwnerTypeToQofIdType', argument 1 of type 'GncOwnerType'
O:gnc_quote_source_num_entries
in method 'gnc_quote_source_num_entries', argument 1 of type 'QuoteSourceType'
in method 'pwr64', argument 2 of type 'int'
in method 'xaccAccountIsEquityType', argument 1 of type 'GNCAccountType'
function returning gboolean returned a value that wasn't TRUE or FALSE.
in method 'xaccAccountIsAPARType', argument 1 of type 'GNCAccountType'
in method 'xaccAccountIsAssetLiabType', argument 1 of type 'GNCAccountType'
in method 'xaccAccountTypesCompatible', argument 1 of type 'GNCAccountType'
in method 'xaccAccountTypesCompatible', argument 2 of type 'GNCAccountType'
O:xaccParentAccountTypesCompatibleWith
in method 'xaccParentAccountTypesCompatibleWith', argument 1 of type 'GNCAccountType'
:gnc_quote_source_fq_installed
!(flags & SWIG_BUILTIN_TP_INIT)
:qof_backend_get_registered_access_method_list
OOOO:qof_query_string_predicate
in method 'qof_query_string_predicate', argument 1 of type 'QofQueryCompare'
in method 'qof_query_string_predicate', argument 3 of type 'QofStringMatch'
Python object passed to a gboolean argument was not True or False
in method 'qof_query_date_predicate', argument 1 of type 'QofQueryCompare'
in method 'qof_query_date_predicate', argument 2 of type 'QofDateMatch'
in method 'qof_query_int32_predicate', argument 1 of type 'QofQueryCompare'
in method 'qof_query_int64_predicate', argument 1 of type 'QofQueryCompare'
in method 'qof_query_double_predicate', argument 1 of type 'QofQueryCompare'
in method 'qof_query_double_predicate', argument 2 of type 'double'
OO:qof_query_boolean_predicate
in method 'qof_query_boolean_predicate', argument 1 of type 'QofQueryCompare'
in method 'qof_query_char_predicate', argument 1 of type 'QofCharMatch'
in method 'double_to_gnc_numeric', argument 1 of type 'double'
in method 'double_to_gnc_numeric', argument 3 of type 'gint'
in method 'gnc_numeric_error', argument 1 of type 'GNCNumericErrorCode'
OO:gnc_quote_source_lookup_by_ti
in method 'gnc_quote_source_lookup_by_ti', argument 1 of type 'QuoteSourceType'
in method 'gnc_quote_source_lookup_by_ti', argument 2 of type 'gint'
O:gncInvoiceGetTypeListForOwnerType
in method 'gncInvoiceGetTypeListForOwnerType', argument 1 of type 'GncOwnerType'
:gnc_commodity_namespace_get_type
in method 'qof_query_core_to_string', argument 1 of type 'QofType'
invalid null reference in method 'qof_query_core_to_string', argument 1 of type 'QofType'
in method 'qof_query_core_to_string', argument 2 of type 'gpointer'
in method 'qof_query_core_to_string', argument 3 of type 'QofParam *'
in method 'xaccSplitGetReconcile', argument 1 of type 'Split const *'
in method 'xaccTransGetTxnType', argument 1 of type 'Transaction const *'
in method 'gncSplitGetGUID', argument 1 of type 'Split *'
in method 'gncTransGetGUID', argument 1 of type 'Transaction *'
in method 'gncAccountGetGUID', argument 1 of type 'Account *'
in method 'xaccSplitConvertAmount', argument 1 of type 'Split const *'
in method 'xaccSplitConvertAmount', argument 2 of type 'Account const *'
in method 'xaccMallocSplit', argument 1 of type 'QofBook *'
in method 'xaccSplitReinit', argument 1 of type 'Split *'
in method 'xaccSplitDestroy', argument 1 of type 'Split *'
in method 'xaccSplitCopyOnto', argument 1 of type 'Split const *'
in method 'xaccSplitCopyOnto', argument 2 of type 'Split *'
in method 'xaccSplitGetBook', argument 1 of type 'Split const *'
in method 'xaccSplitGetAccount', argument 1 of type 'Split const *'
in method 'xaccSplitSetAccount', argument 1 of type 'Split *'
in method 'xaccSplitSetAccount', argument 2 of type 'Account *'
in method 'xaccSplitGetParent', argument 1 of type 'Split const *'
in method 'xaccSplitSetParent', argument 1 of type 'Split *'
in method 'xaccSplitSetParent', argument 2 of type 'Transaction *'
in method 'xaccSplitGetLot', argument 1 of type 'Split const *'
in method 'xaccSplitSetLot', argument 1 of type 'Split *'
in method 'xaccSplitSetLot', argument 2 of type 'GNCLot *'
in method 'xaccSplitGetSlots', argument 1 of type 'Split const *'
in method 'xaccSplitSetSlots_nc', argument 1 of type 'Split *'
in method 'xaccSplitSetSlots_nc', argument 2 of type 'KvpFrame *'
OO:xaccSplitSetDateReconciledSecs
in method 'xaccSplitSetDateReconciledSecs', argument 1 of type 'Split *'
OO:xaccSplitSetDateReconciledTS
in method 'xaccSplitSetDateReconciledTS', argument 1 of type 'Split *'
OO:xaccSplitGetDateReconciledTS
in method 'xaccSplitGetDateReconciledTS', argument 1 of type 'Split const *'
O:xaccSplitRetDateReconciledTS
in method 'xaccSplitRetDateReconciledTS', argument 1 of type 'Split const *'
in method 'xaccSplitGetDateReconciled', argument 1 of type 'Split const *'
in method 'xaccSplitSetAmount', argument 1 of type 'Split *'
in method 'xaccSplitSetAmount', argument 2 of type 'gnc_numeric'
invalid null reference in method 'xaccSplitSetAmount', argument 2 of type 'gnc_numeric'
in method 'xaccSplitGetAmount', argument 1 of type 'Split const *'
in method 'xaccSplitSetValue', argument 1 of type 'Split *'
in method 'xaccSplitSetValue', argument 2 of type 'gnc_numeric'
invalid null reference in method 'xaccSplitSetValue', argument 2 of type 'gnc_numeric'
in method 'xaccSplitGetValue', argument 1 of type 'Split const *'
OOO:xaccSplitSetSharePriceAndAmount
in method 'xaccSplitSetSharePriceAndAmount', argument 1 of type 'Split *'
in method 'xaccSplitSetSharePriceAndAmount', argument 2 of type 'gnc_numeric'
invalid null reference in method 'xaccSplitSetSharePriceAndAmount', argument 2 of type 'gnc_numeric'
in method 'xaccSplitSetSharePriceAndAmount', argument 3 of type 'gnc_numeric'
invalid null reference in method 'xaccSplitSetSharePriceAndAmount', argument 3 of type 'gnc_numeric'
in method 'xaccSplitGetSharePrice', argument 1 of type 'Split const *'
in method 'xaccSplitSetBaseValue', argument 1 of type 'Split *'
in method 'xaccSplitSetBaseValue', argument 2 of type 'gnc_numeric'
invalid null reference in method 'xaccSplitSetBaseValue', argument 2 of type 'gnc_numeric'
in method 'xaccSplitSetBaseValue', argument 3 of type 'gnc_commodity const *'
in method 'xaccSplitGetBaseValue', argument 1 of type 'Split const *'
in method 'xaccSplitGetBaseValue', argument 2 of type 'gnc_commodity const *'
in method 'xaccSplitGetBalance', argument 1 of type 'Split const *'
in method 'xaccSplitGetClearedBalance', argument 1 of type 'Split const *'
O:xaccSplitGetReconciledBalance
in method 'xaccSplitGetReconciledBalance', argument 1 of type 'Split const *'
in method 'xaccSplitEqual', argument 1 of type 'Split const *'
in method 'xaccSplitEqual', argument 2 of type 'Split const *'
in method 'xaccSplitLookup', argument 1 of type 'GncGUID const *'
in method 'xaccSplitLookup', argument 2 of type 'QofBook *'
O:xaccSplitListGetUniqueTransactions
in method 'xaccSplitListGetUniqueTransactions', argument 1 of type 'GList const *'
in method 'xaccSplitGetOtherSplit', argument 1 of type 'Split const *'
in method 'xaccSplitMakeStockSplit', argument 1 of type 'Split *'
in method 'xaccSplitOrder', argument 1 of type 'Split const *'
in method 'xaccSplitOrder', argument 2 of type 'Split const *'
in method 'xaccSplitOrderDateOnly', argument 1 of type 'Split const *'
in method 'xaccSplitOrderDateOnly', argument 2 of type 'Split const *'
OO:xaccSplitCompareAccountFullNames
in method 'xaccSplitCompareAccountFullNames', argument 1 of type 'Split const *'
in method 'xaccSplitCompareAccountFullNames', argument 2 of type 'Split const *'
OO:xaccSplitCompareAccountCodes
in method 'xaccSplitCompareAccountCodes', argument 1 of type 'Split const *'
in method 'xaccSplitCompareAccountCodes', argument 2 of type 'Split const *'
OO:xaccSplitCompareOtherAccountFullNames
in method 'xaccSplitCompareOtherAccountFullNames', argument 1 of type 'Split const *'
in method 'xaccSplitCompareOtherAccountFullNames', argument 2 of type 'Split const *'
OO:xaccSplitCompareOtherAccountCodes
in method 'xaccSplitCompareOtherAccountCodes', argument 1 of type 'Split const *'
in method 'xaccSplitCompareOtherAccountCodes', argument 2 of type 'Split const *'
in method 'xaccSplitSetSharePrice', argument 1 of type 'Split *'
in method 'xaccSplitSetSharePrice', argument 2 of type 'gnc_numeric'
invalid null reference in method 'xaccSplitSetSharePrice', argument 2 of type 'gnc_numeric'
in method 'xaccSplitVoidFormerAmount', argument 1 of type 'Split const *'
in method 'xaccSplitVoidFormerValue', argument 1 of type 'Split const *'
in method 'gnc_account_get_children', argument 1 of type 'Account const *'
O:gnc_account_get_children_sorted
in method 'gnc_account_get_children_sorted', argument 1 of type 'Account const *'
in method 'gnc_account_get_descendants', argument 1 of type 'Account const *'
O:gnc_account_get_descendants_sorted
in method 'gnc_account_get_descendants_sorted', argument 1 of type 'Account const *'
in method 'xaccMallocAccount', argument 1 of type 'QofBook *'
in method 'gnc_account_create_root', argument 1 of type 'QofBook *'
in method 'xaccCloneAccount', argument 1 of type 'Account const *'
in method 'xaccCloneAccount', argument 2 of type 'QofBook *'
in method 'xaccAccountBeginEdit', argument 1 of type 'Account *'
in method 'xaccAccountCommitEdit', argument 1 of type 'Account *'
in method 'xaccAccountDestroy', argument 1 of type 'Account *'
in method 'xaccAccountEqual', argument 1 of type 'Account const *'
in method 'xaccAccountEqual', argument 2 of type 'Account const *'
in method 'xaccAccountOrder', argument 1 of type 'Account const *'
in method 'xaccAccountOrder', argument 2 of type 'Account const *'
in method 'gnc_book_get_root_account', argument 1 of type 'QofBook *'
in method 'gnc_book_set_root_account', argument 1 of type 'QofBook *'
in method 'gnc_book_set_root_account', argument 2 of type 'Account *'
in method 'xaccAccountLookup', argument 1 of type 'GncGUID const *'
in method 'xaccAccountLookup', argument 2 of type 'QofBook *'
OO:gnc_account_name_violations_errmsg
in method 'gnc_account_name_violations_errmsg', argument 2 of type 'GList *'
OO:gnc_account_list_name_violations
in method 'gnc_account_list_name_violations', argument 1 of type 'QofBook *'
in method 'gnc_account_get_book', argument 1 of type 'Account const *'
in method 'xaccAccountSetType', argument 1 of type 'Account *'
in method 'xaccAccountSetType', argument 2 of type 'GNCAccountType'
in method 'gnc_account_set_policy', argument 1 of type 'Account *'
in method 'gnc_account_set_policy', argument 2 of type 'GNCPolicy *'
in method 'xaccAccountGetType', argument 1 of type 'Account const *'
in method 'xaccAccountIsPriced', argument 1 of type 'Account const *'
OO:gnc_account_set_start_balance
in method 'gnc_account_set_start_balance', argument 1 of type 'Account *'
in method 'gnc_account_set_start_balance', argument 2 of type 'gnc_numeric const'
invalid null reference in method 'gnc_account_set_start_balance', argument 2 of type 'gnc_numeric const'
OO:gnc_account_set_start_cleared_balance
in method 'gnc_account_set_start_cleared_balance', argument 1 of type 'Account *'
in method 'gnc_account_set_start_cleared_balance', argument 2 of type 'gnc_numeric const'
invalid null reference in method 'gnc_account_set_start_cleared_balance', argument 2 of type 'gnc_numeric const'
OO:gnc_account_set_start_reconciled_balance
in method 'gnc_account_set_start_reconciled_balance', argument 1 of type 'Account *'
in method 'gnc_account_set_start_reconciled_balance', argument 2 of type 'gnc_numeric const'
invalid null reference in method 'gnc_account_set_start_reconciled_balance', argument 2 of type 'gnc_numeric const'
O:gnc_account_set_balance_dirty
in method 'gnc_account_set_balance_dirty', argument 1 of type 'Account *'
in method 'gnc_account_set_sort_dirty', argument 1 of type 'Account *'
in method 'gnc_account_insert_split', argument 1 of type 'Account *'
in method 'gnc_account_insert_split', argument 2 of type 'Split *'
in method 'gnc_account_remove_split', argument 1 of type 'Account *'
in method 'gnc_account_remove_split', argument 2 of type 'Split *'
in method 'gnc_account_get_policy', argument 1 of type 'Account *'
in method 'xaccAccountRecomputeBalance', argument 1 of type 'Account *'
in method 'xaccAccountSortSplits', argument 1 of type 'Account *'
in method 'gnc_account_get_full_name', argument 1 of type 'Account const *'
OO:xaccAccountGetAutoInterestXfer
in method 'xaccAccountGetAutoInterestXfer', argument 1 of type 'Account const *'
OO:xaccAccountSetAutoInterestXfer
in method 'xaccAccountSetAutoInterestXfer', argument 1 of type 'Account *'
in method 'xaccAccountSetCommodity', argument 1 of type 'Account *'
in method 'xaccAccountSetCommodity', argument 2 of type 'gnc_commodity *'
in method 'xaccAccountGetCommodity', argument 1 of type 'Account const *'
O:gnc_account_get_currency_or_parent
in method 'gnc_account_get_currency_or_parent', argument 1 of type 'Account const *'
in method 'xaccAccountGetCommoditySCU', argument 1 of type 'Account const *'
in method 'xaccAccountGetCommoditySCUi', argument 1 of type 'Account const *'
in method 'xaccAccountSetCommoditySCU', argument 1 of type 'Account *'
in method 'xaccAccountSetCommoditySCU', argument 2 of type 'int'
in method 'xaccAccountSetNonStdSCU', argument 1 of type 'Account *'
in method 'xaccAccountGetNonStdSCU', argument 1 of type 'Account const *'
in method 'xaccAccountGetBalance', argument 1 of type 'Account const *'
O:xaccAccountGetClearedBalance
in method 'xaccAccountGetClearedBalance', argument 1 of type 'Account const *'
O:xaccAccountGetReconciledBalance
in method 'xaccAccountGetReconciledBalance', argument 1 of type 'Account const *'
O:xaccAccountGetPresentBalance
in method 'xaccAccountGetPresentBalance', argument 1 of type 'Account const *'
O:xaccAccountGetProjectedMinimumBalance
in method 'xaccAccountGetProjectedMinimumBalance', argument 1 of type 'Account const *'
OO:xaccAccountGetBalanceAsOfDate
in method 'xaccAccountGetBalanceAsOfDate', argument 1 of type 'Account *'
OOOO:xaccAccountConvertBalanceToCurrency
in method 'xaccAccountConvertBalanceToCurrency', argument 1 of type 'Account const *'
in method 'xaccAccountConvertBalanceToCurrency', argument 2 of type 'gnc_numeric'
invalid null reference in method 'xaccAccountConvertBalanceToCurrency', argument 2 of type 'gnc_numeric'
in method 'xaccAccountConvertBalanceToCurrency', argument 3 of type 'gnc_commodity const *'
in method 'xaccAccountConvertBalanceToCurrency', argument 4 of type 'gnc_commodity const *'
OOOOO:xaccAccountConvertBalanceToCurrencyAsOfDate
in method 'xaccAccountConvertBalanceToCurrencyAsOfDate', argument 1 of type 'Account const *'
in method 'xaccAccountConvertBalanceToCurrencyAsOfDate', argument 2 of type 'gnc_numeric'
invalid null reference in method 'xaccAccountConvertBalanceToCurrencyAsOfDate', argument 2 of type 'gnc_numeric'
in method 'xaccAccountConvertBalanceToCurrencyAsOfDate', argument 3 of type 'gnc_commodity *'
in method 'xaccAccountConvertBalanceToCurrencyAsOfDate', argument 4 of type 'gnc_commodity *'
OOO:xaccAccountGetBalanceInCurrency
in method 'xaccAccountGetBalanceInCurrency', argument 1 of type 'Account const *'
in method 'xaccAccountGetBalanceInCurrency', argument 2 of type 'gnc_commodity const *'
OOO:xaccAccountGetClearedBalanceInCurrency
in method 'xaccAccountGetClearedBalanceInCurrency', argument 1 of type 'Account const *'
in method 'xaccAccountGetClearedBalanceInCurrency', argument 2 of type 'gnc_commodity const *'
OOO:xaccAccountGetReconciledBalanceInCurrency
in method 'xaccAccountGetReconciledBalanceInCurrency', argument 1 of type 'Account const *'
in method 'xaccAccountGetReconciledBalanceInCurrency', argument 2 of type 'gnc_commodity const *'
OOO:xaccAccountGetPresentBalanceInCurrency
in method 'xaccAccountGetPresentBalanceInCurrency', argument 1 of type 'Account const *'
in method 'xaccAccountGetPresentBalanceInCurrency', argument 2 of type 'gnc_commodity const *'
OOO:xaccAccountGetProjectedMinimumBalanceInCurrency
in method 'xaccAccountGetProjectedMinimumBalanceInCurrency', argument 1 of type 'Account const *'
in method 'xaccAccountGetProjectedMinimumBalanceInCurrency', argument 2 of type 'gnc_commodity const *'
OOOO:xaccAccountGetBalanceAsOfDateInCurrency
in method 'xaccAccountGetBalanceAsOfDateInCurrency', argument 1 of type 'Account *'
in method 'xaccAccountGetBalanceAsOfDateInCurrency', argument 3 of type 'gnc_commodity *'
OOOO:xaccAccountGetBalanceChangeForPeriod
in method 'xaccAccountGetBalanceChangeForPeriod', argument 1 of type 'Account *'
in method 'gnc_account_append_child', argument 1 of type 'Account *'
in method 'gnc_account_append_child', argument 2 of type 'Account *'
in method 'gnc_account_remove_child', argument 1 of type 'Account *'
in method 'gnc_account_remove_child', argument 2 of type 'Account *'
in method 'gnc_account_get_parent', argument 1 of type 'Account const *'
in method 'gnc_account_get_root', argument 1 of type 'Account *'
in method 'gnc_account_is_root', argument 1 of type 'Account const *'
in method 'gnc_account_n_children', argument 1 of type 'Account const *'
in method 'gnc_account_child_index', argument 1 of type 'Account const *'
in method 'gnc_account_child_index', argument 2 of type 'Account const *'
in method 'gnc_account_nth_child', argument 1 of type 'Account const *'
in method 'gnc_account_nth_child', argument 2 of type 'gint'
in method 'gnc_account_n_descendants', argument 1 of type 'Account const *'
O:gnc_account_get_current_depth
in method 'gnc_account_get_current_depth', argument 1 of type 'Account const *'
in method 'gnc_account_get_tree_depth', argument 1 of type 'Account const *'
in method 'gnc_account_join_children', argument 1 of type 'Account *'
in method 'gnc_account_join_children', argument 2 of type 'Account *'
in method 'gnc_account_merge_children', argument 1 of type 'Account *'
OO:xaccAccountSetReconcileChildrenStatus
in method 'xaccAccountSetReconcileChildrenStatus', argument 1 of type 'Account *'
O:xaccAccountGetReconcileChildrenStatus
in method 'xaccAccountGetReconcileChildrenStatus', argument 1 of type 'Account const *'
in method 'xaccAccountHasAncestor', argument 1 of type 'Account const *'
in method 'xaccAccountHasAncestor', argument 2 of type 'Account const *'
OO:gnc_account_lookup_by_full_name
in method 'gnc_account_lookup_by_full_name', argument 1 of type 'Account const *'
in method 'xaccAccountGetSplitList', argument 1 of type 'Account const *'
in method 'xaccAccountMoveAllSplits', argument 1 of type 'Account *'
in method 'xaccAccountMoveAllSplits', argument 2 of type 'Account *'
OOO:xaccAccountForEachTransaction
in method 'xaccAccountForEachTransaction', argument 1 of type 'Account const *'
in method 'xaccAccountForEachTransaction', argument 2 of type 'TransactionCallback'
invalid null reference in method 'xaccAccountForEachTransaction', argument 2 of type 'TransactionCallback'
in method 'xaccAccountForEachTransaction', argument 3 of type 'void *'
in method 'xaccAccountInsertLot', argument 1 of type 'Account *'
in method 'xaccAccountInsertLot', argument 2 of type 'GNCLot *'
in method 'xaccAccountRemoveLot', argument 1 of type 'Account *'
in method 'xaccAccountRemoveLot', argument 2 of type 'GNCLot *'
in method 'xaccAccountGetLotList', argument 1 of type 'Account const *'
OO:xaccAccountGetReconcileLastDate
in method 'xaccAccountGetReconcileLastDate', argument 1 of type 'Account const *'
in method 'xaccAccountGetReconcileLastDate', argument 2 of type 'time64 *'
OO:xaccAccountSetReconcileLastDate
in method 'xaccAccountSetReconcileLastDate', argument 1 of type 'Account *'
OOO:xaccAccountGetReconcileLastInterval
in method 'xaccAccountGetReconcileLastInterval', argument 1 of type 'Account const *'
in method 'xaccAccountGetReconcileLastInterval', argument 2 of type 'int *'
in method 'xaccAccountGetReconcileLastInterval', argument 3 of type 'int *'
OOO:xaccAccountSetReconcileLastInterval
in method 'xaccAccountSetReconcileLastInterval', argument 1 of type 'Account *'
in method 'xaccAccountSetReconcileLastInterval', argument 2 of type 'int'
in method 'xaccAccountSetReconcileLastInterval', argument 3 of type 'int'
OO:xaccAccountGetReconcilePostponeDate
in method 'xaccAccountGetReconcilePostponeDate', argument 1 of type 'Account const *'
in method 'xaccAccountGetReconcilePostponeDate', argument 2 of type 'time64 *'
OO:xaccAccountSetReconcilePostponeDate
in method 'xaccAccountSetReconcilePostponeDate', argument 1 of type 'Account *'
OO:xaccAccountGetReconcilePostponeBalance
in method 'xaccAccountGetReconcilePostponeBalance', argument 1 of type 'Account const *'
in method 'xaccAccountGetReconcilePostponeBalance', argument 2 of type 'gnc_numeric *'
OO:xaccAccountSetReconcilePostponeBalance
in method 'xaccAccountSetReconcilePostponeBalance', argument 1 of type 'Account *'
in method 'xaccAccountSetReconcilePostponeBalance', argument 2 of type 'gnc_numeric'
invalid null reference in method 'xaccAccountSetReconcilePostponeBalance', argument 2 of type 'gnc_numeric'
O:xaccAccountClearReconcilePostpone
in method 'xaccAccountClearReconcilePostpone', argument 1 of type 'Account *'
in method 'xaccAccountGetPlaceholder', argument 1 of type 'Account const *'
in method 'xaccAccountSetPlaceholder', argument 1 of type 'Account *'
O:xaccAccountGetDescendantPlaceholder
in method 'xaccAccountGetDescendantPlaceholder', argument 1 of type 'Account const *'
in method 'xaccAccountGetHidden', argument 1 of type 'Account const *'
in method 'xaccAccountSetHidden', argument 1 of type 'Account *'
in method 'xaccAccountIsHidden', argument 1 of type 'Account const *'
in method 'xaccAccountGetTaxRelated', argument 1 of type 'Account const *'
in method 'xaccAccountSetTaxRelated', argument 1 of type 'Account *'
O:xaccAccountGetTaxUSCopyNumber
in method 'xaccAccountGetTaxUSCopyNumber', argument 1 of type 'Account const *'
OO:xaccAccountSetTaxUSCopyNumber
in method 'xaccAccountSetTaxUSCopyNumber', argument 1 of type 'Account *'
in method 'xaccAccountSetMark', argument 1 of type 'Account *'
in method 'xaccAccountSetMark', argument 2 of type 'short'
in method 'xaccClearMark', argument 1 of type 'Account *'
in method 'xaccClearMark', argument 2 of type 'short'
in method 'xaccClearMarkDown', argument 1 of type 'Account *'
in method 'xaccClearMarkDown', argument 2 of type 'short'
O:gnc_account_tree_begin_staged_transaction_traversals
in method 'gnc_account_tree_begin_staged_transaction_traversals', argument 1 of type 'Account *'
O:xaccSplitsBeginStagedTransactionTraversals
in method 'xaccSplitsBeginStagedTransactionTraversals', argument 1 of type 'SplitList *'
O:xaccAccountBeginStagedTransactionTraversals
in method 'xaccAccountBeginStagedTransactionTraversals', argument 1 of type 'Account const *'
in method 'xaccTransactionTraverse', argument 1 of type 'Transaction *'
in method 'xaccTransactionTraverse', argument 2 of type 'int'
OOOO:xaccAccountStagedTransactionTraversal
in method 'xaccAccountStagedTransactionTraversal', argument 1 of type 'Account const *'
in method 'xaccAccountStagedTransactionTraversal', argument 2 of type 'unsigned int'
in method 'xaccAccountStagedTransactionTraversal', argument 3 of type 'TransactionCallback'
invalid null reference in method 'xaccAccountStagedTransactionTraversal', argument 3 of type 'TransactionCallback'
in method 'xaccAccountStagedTransactionTraversal', argument 4 of type 'void *'
OOOO:gnc_account_tree_staged_transaction_traversal
in method 'gnc_account_tree_staged_transaction_traversal', argument 1 of type 'Account const *'
in method 'gnc_account_tree_staged_transaction_traversal', argument 2 of type 'unsigned int'
in method 'gnc_account_tree_staged_transaction_traversal', argument 3 of type 'TransactionCallback'
invalid null reference in method 'gnc_account_tree_staged_transaction_traversal', argument 3 of type 'TransactionCallback'
in method 'gnc_account_tree_staged_transaction_traversal', argument 4 of type 'void *'
OOO:xaccAccountTreeForEachTransaction
in method 'xaccAccountTreeForEachTransaction', argument 1 of type 'Account *'
in method 'xaccAccountTreeForEachTransaction', argument 2 of type 'TransactionCallback'
invalid null reference in method 'xaccAccountTreeForEachTransaction', argument 2 of type 'TransactionCallback'
in method 'xaccAccountTreeForEachTransaction', argument 3 of type 'void *'
in method 'DxaccAccountSetCurrency', argument 1 of type 'Account *'
in method 'DxaccAccountSetCurrency', argument 2 of type 'gnc_commodity *'
in method 'DxaccAccountGetCurrency', argument 1 of type 'Account const *'
in method 'xaccMallocTransaction', argument 1 of type 'QofBook *'
in method 'xaccTransDestroy', argument 1 of type 'Transaction *'
in method 'xaccTransClone', argument 1 of type 'Transaction const *'
in method 'xaccTransEqual', argument 1 of type 'Transaction const *'
in method 'xaccTransEqual', argument 2 of type 'Transaction const *'
in method 'xaccTransBeginEdit', argument 1 of type 'Transaction *'
in method 'xaccTransCommitEdit', argument 1 of type 'Transaction *'
in method 'xaccTransRollbackEdit', argument 1 of type 'Transaction *'
in method 'xaccTransIsOpen', argument 1 of type 'Transaction const *'
in method 'xaccTransLookup', argument 1 of type 'GncGUID const *'
in method 'xaccTransLookup', argument 2 of type 'QofBook *'
in method 'xaccTransCopyToClipBoard', argument 1 of type 'Transaction const *'
in method 'xaccTransCopyOnto', argument 1 of type 'Transaction const *'
in method 'xaccTransCopyOnto', argument 2 of type 'Transaction *'
OOOOO:xaccTransCopyFromClipBoard
in method 'xaccTransCopyFromClipBoard', argument 1 of type 'Transaction const *'
in method 'xaccTransCopyFromClipBoard', argument 2 of type 'Transaction *'
in method 'xaccTransCopyFromClipBoard', argument 3 of type 'Account const *'
in method 'xaccTransCopyFromClipBoard', argument 4 of type 'Account *'
OO:xaccTransFindSplitByAccount
in method 'xaccTransFindSplitByAccount', argument 1 of type 'Transaction const *'
in method 'xaccTransFindSplitByAccount', argument 2 of type 'Account const *'
in method 'xaccTransScrubGains', argument 1 of type 'Transaction *'
in method 'xaccTransScrubGains', argument 2 of type 'Account *'
in method 'gnc_book_count_transactions', argument 1 of type 'QofBook *'
in method 'xaccTransUseTradingAccounts', argument 1 of type 'Transaction const *'
in method 'xaccTransSortSplits', argument 1 of type 'Transaction *'
in method 'xaccTransSetIsClosingTxn', argument 1 of type 'Transaction *'
in method 'xaccTransGetIsClosingTxn', argument 1 of type 'Transaction const *'
in method 'xaccTransGetSplit', argument 1 of type 'Transaction const *'
in method 'xaccTransGetSplit', argument 2 of type 'int'
in method 'xaccTransGetSplitIndex', argument 1 of type 'Transaction const *'
in method 'xaccTransGetSplitIndex', argument 2 of type 'Split const *'
in method 'xaccTransGetSplitList', argument 1 of type 'Transaction const *'
in method 'xaccTransStillHasSplit', argument 1 of type 'Transaction const *'
in method 'xaccTransStillHasSplit', argument 2 of type 'Split const *'
O:xaccTransGetFirstPaymentAcctSplit
in method 'xaccTransGetFirstPaymentAcctSplit', argument 1 of type 'Transaction const *'
O:xaccTransGetFirstAPARAcctSplit
in method 'xaccTransGetFirstAPARAcctSplit', argument 1 of type 'Transaction const *'
in method 'xaccTransClearReadOnly', argument 1 of type 'Transaction *'
O:xaccTransIsReadonlyByPostedDate
in method 'xaccTransIsReadonlyByPostedDate', argument 1 of type 'Transaction const *'
O:xaccTransInFutureByPostedDate
in method 'xaccTransInFutureByPostedDate', argument 1 of type 'Transaction const *'
in method 'xaccTransCountSplits', argument 1 of type 'Transaction const *'
O:xaccTransHasReconciledSplits
in method 'xaccTransHasReconciledSplits', argument 1 of type 'Transaction const *'
OO:xaccTransHasReconciledSplitsByAccount
in method 'xaccTransHasReconciledSplitsByAccount', argument 1 of type 'Transaction const *'
in method 'xaccTransHasReconciledSplitsByAccount', argument 2 of type 'Account const *'
in method 'xaccTransGetCurrency', argument 1 of type 'Transaction const *'
in method 'xaccTransSetCurrency', argument 1 of type 'Transaction *'
in method 'xaccTransSetCurrency', argument 2 of type 'gnc_commodity *'
in method 'xaccTransGetImbalanceValue', argument 1 of type 'Transaction const *'
in method 'xaccTransGetImbalance', argument 1 of type 'Transaction const *'
in method 'xaccTransIsBalanced', argument 1 of type 'Transaction const *'
in method 'xaccTransGetAccountValue', argument 1 of type 'Transaction const *'
in method 'xaccTransGetAccountValue', argument 2 of type 'Account const *'
in method 'xaccTransGetAccountAmount', argument 1 of type 'Transaction const *'
in method 'xaccTransGetAccountAmount', argument 2 of type 'Account const *'
OOOO:xaccTransGetRateForCommodity
in method 'xaccTransGetRateForCommodity', argument 1 of type 'Transaction const *'
in method 'xaccTransGetRateForCommodity', argument 2 of type 'gnc_commodity const *'
in method 'xaccTransGetRateForCommodity', argument 3 of type 'Split const *'
in method 'xaccTransGetRateForCommodity', argument 4 of type 'gnc_numeric *'
OO:xaccTransGetAccountConvRate
in method 'xaccTransGetAccountConvRate', argument 1 of type 'Transaction const *'
in method 'xaccTransGetAccountConvRate', argument 2 of type 'Account const *'
in method 'xaccTransGetAccountBalance', argument 1 of type 'Transaction const *'
in method 'xaccTransGetAccountBalance', argument 2 of type 'Account const *'
in method 'xaccTransOrder', argument 1 of type 'Transaction const *'
in method 'xaccTransOrder', argument 2 of type 'Transaction const *'
in method 'xaccTransSetDate', argument 1 of type 'Transaction *'
in method 'xaccTransSetDate', argument 2 of type 'int'
in method 'xaccTransSetDate', argument 3 of type 'int'
in method 'xaccTransSetDate', argument 4 of type 'int'
OO:xaccTransSetDatePostedGDate
in method 'xaccTransSetDatePostedGDate', argument 1 of type 'Transaction *'
in method 'xaccTransSetDatePostedGDate', argument 2 of type 'GDate'
invalid null reference in method 'xaccTransSetDatePostedGDate', argument 2 of type 'GDate'
in method 'xaccTransSetDatePostedSecs', argument 1 of type 'Transaction *'
OO:xaccTransSetDatePostedSecsNormalized
in method 'xaccTransSetDatePostedSecsNormalized', argument 1 of type 'Transaction *'
in method 'xaccTransSetDatePostedTS', argument 1 of type 'Transaction *'
OO:xaccTransSetDateEnteredSecs
in method 'xaccTransSetDateEnteredSecs', argument 1 of type 'Transaction *'
in method 'xaccTransSetDateEnteredTS', argument 1 of type 'Transaction *'
in method 'xaccTransSetDateDueTS', argument 1 of type 'Transaction *'
in method 'xaccTransGetDate', argument 1 of type 'Transaction const *'
in method 'xaccTransGetDatePostedTS', argument 1 of type 'Transaction const *'
in method 'xaccTransRetDatePostedTS', argument 1 of type 'Transaction const *'
in method 'xaccTransGetDatePostedGDate', argument 1 of type 'Transaction const *'
in method 'xaccTransGetDateEntered', argument 1 of type 'Transaction const *'
in method 'xaccTransGetDateEnteredTS', argument 1 of type 'Transaction const *'
in method 'xaccTransRetDateEnteredTS', argument 1 of type 'Transaction const *'
in method 'xaccTransRetDateDueTS', argument 1 of type 'Transaction const *'
in method 'xaccTransGetDateDueTS', argument 1 of type 'Transaction const *'
in method 'xaccTransUnvoid', argument 1 of type 'Transaction *'
in method 'xaccTransReverse', argument 1 of type 'Transaction *'
in method 'xaccTransGetReversedBy', argument 1 of type 'Transaction const *'
in method 'xaccTransGetVoidStatus', argument 1 of type 'Transaction const *'
in method 'xaccTransGetVoidTime', argument 1 of type 'Transaction const *'
in method 'gnc_lot_new', argument 1 of type 'QofBook *'
in method 'gnc_lot_destroy', argument 1 of type 'GNCLot *'
in method 'gnc_lot_lookup', argument 1 of type 'GncGUID const *'
in method 'gnc_lot_lookup', argument 2 of type 'QofBook *'
in method 'gnc_lot_get_book', argument 1 of type 'GNCLot *'
in method 'gnc_lot_begin_edit', argument 1 of type 'GNCLot *'
in method 'gnc_lot_commit_edit', argument 1 of type 'GNCLot *'
in method 'gnc_lot_add_split', argument 1 of type 'GNCLot *'
in method 'gnc_lot_add_split', argument 2 of type 'Split *'
in method 'gnc_lot_remove_split', argument 1 of type 'GNCLot *'
in method 'gnc_lot_remove_split', argument 2 of type 'Split *'
in method 'gnc_lot_get_split_list', argument 1 of type 'GNCLot const *'
in method 'gnc_lot_count_splits', argument 1 of type 'GNCLot const *'
in method 'gnc_lot_get_account', argument 1 of type 'GNCLot const *'
in method 'gnc_lot_set_account', argument 1 of type 'GNCLot *'
in method 'gnc_lot_set_account', argument 2 of type 'Account *'
in method 'gnc_lot_get_balance', argument 1 of type 'GNCLot *'
OOOO:gnc_lot_get_balance_before
in method 'gnc_lot_get_balance_before', argument 1 of type 'GNCLot const *'
in method 'gnc_lot_get_balance_before', argument 2 of type 'Split const *'
in method 'gnc_lot_get_balance_before', argument 3 of type 'gnc_numeric *'
in method 'gnc_lot_get_balance_before', argument 4 of type 'gnc_numeric *'
in method 'gnc_lot_is_closed', argument 1 of type 'GNCLot *'
in method 'gnc_lot_get_earliest_split', argument 1 of type 'GNCLot *'
in method 'gnc_lot_get_latest_split', argument 1 of type 'GNCLot *'
in method 'gnc_lot_set_closed_unknown', argument 1 of type 'GNCLot *'
in method 'gnc_lot_get_slots', argument 1 of type 'GNCLot const *'
in method 'gnc_lot_make_default', argument 1 of type 'Account *'
in method 'qof_backend_run_begin', argument 1 of type 'QofBackend *'
in method 'qof_backend_run_begin', argument 2 of type 'QofInstance *'
in method 'qof_backend_begin_exists', argument 1 of type 'QofBackend const *'
in method 'qof_backend_run_commit', argument 1 of type 'QofBackend *'
in method 'qof_backend_run_commit', argument 2 of type 'QofInstance *'
in method 'qof_backend_commit_exists', argument 1 of type 'QofBackend const *'
in method 'qof_backend_set_error', argument 1 of type 'QofBackend *'
in method 'qof_backend_set_error', argument 2 of type 'QofBackendError'
in method 'qof_backend_get_error', argument 1 of type 'QofBackend *'
in method 'qof_backend_check_error', argument 1 of type 'QofBackend *'
in method 'qof_book_get_backend', argument 1 of type 'QofBook const *'
in method 'qof_book_set_backend', argument 1 of type 'QofBook *'
in method 'qof_book_set_backend', argument 2 of type 'QofBackend *'
in method 'qof_session_destroy', argument 1 of type 'QofSession *'
in method 'qof_session_swap_data', argument 1 of type 'QofSession *'
in method 'qof_session_swap_data', argument 2 of type 'QofSession *'
in method 'qof_session_get_error', argument 1 of type 'QofSession *'
in method 'qof_session_pop_error', argument 1 of type 'QofSession *'
in method 'qof_session_get_book', argument 1 of type 'QofSession const *'
O:qof_session_save_in_progress
in method 'qof_session_save_in_progress', argument 1 of type 'QofSession const *'
in method 'qof_session_end', argument 1 of type 'QofSession *'
in method 'qof_session_events_pending', argument 1 of type 'QofSession const *'
in method 'qof_session_process_events', argument 1 of type 'QofSession *'
in method 'qof_session_add_close_hook', argument 1 of type 'GFunc'
invalid null reference in method 'qof_session_add_close_hook', argument 1 of type 'GFunc'
in method 'qof_session_add_close_hook', argument 2 of type 'gpointer'
O:qof_session_call_close_hooks
in method 'qof_session_call_close_hooks', argument 1 of type 'QofSession *'
O:qof_session_ensure_all_data_loaded
in method 'qof_session_ensure_all_data_loaded', argument 1 of type 'QofSession *'
O:qof_book_use_trading_accounts
in method 'qof_book_use_trading_accounts', argument 1 of type 'QofBook const *'
in method 'qof_book_uses_autoreadonly', argument 1 of type 'QofBook const *'
O:qof_book_get_num_days_autoreadonly
in method 'qof_book_get_num_days_autoreadonly', argument 1 of type 'QofBook const *'
O:qof_book_get_autoreadonly_gdate
in method 'qof_book_get_autoreadonly_gdate', argument 1 of type 'QofBook const *'
O:qof_book_use_split_action_for_num_field
in method 'qof_book_use_split_action_for_num_field', argument 1 of type 'QofBook const *'
in method 'qof_book_shutting_down', argument 1 of type 'QofBook const *'
in method 'qof_book_session_not_saved', argument 1 of type 'QofBook const *'
in method 'qof_collection_count', argument 1 of type 'QofCollection const *'
in method 'qof_collection_destroy', argument 1 of type 'QofCollection *'
in method 'qof_collection_get_type', argument 1 of type 'QofCollection const *'
in method 'qof_collection_get_data', argument 1 of type 'QofCollection const *'
in method 'qof_collection_set_data', argument 1 of type 'QofCollection *'
in method 'qof_collection_set_data', argument 2 of type 'gpointer'
in method 'qof_collection_is_dirty', argument 1 of type 'QofCollection const *'
in method 'qof_collection_add_entity', argument 1 of type 'QofCollection *'
in method 'qof_collection_add_entity', argument 2 of type 'QofInstance *'
O:qof_collection_remove_entity
in method 'qof_collection_remove_entity', argument 1 of type 'QofInstance *'
in method 'qof_collection_compare', argument 1 of type 'QofCollection *'
in method 'qof_collection_compare', argument 2 of type 'QofCollection *'
in method 'qof_collection_from_glist', argument 2 of type 'GList const *'
in method 'qof_query_destroy', argument 1 of type 'QofQuery *'
in method 'qof_query_search_for', argument 1 of type 'QofQuery *'
in method 'qof_query_set_book', argument 1 of type 'QofQuery *'
in method 'qof_query_set_book', argument 2 of type 'QofBook *'
in method 'qof_query_add_term', argument 1 of type 'QofQuery *'
in method 'qof_query_add_term', argument 3 of type 'QofQueryPredData *'
in method 'qof_query_add_term', argument 4 of type 'QofQueryOp'
in method 'qof_query_add_guid_match', argument 1 of type 'QofQuery *'
in method 'qof_query_add_guid_match', argument 3 of type 'GncGUID const *'
in method 'qof_query_add_guid_match', argument 4 of type 'QofQueryOp'
OOOOO:qof_query_add_guid_list_match
in method 'qof_query_add_guid_list_match', argument 1 of type 'QofQuery *'
in method 'qof_query_add_guid_list_match', argument 3 of type 'GList *'
in method 'qof_query_add_guid_list_match', argument 4 of type 'QofGuidMatch'
in method 'qof_query_add_guid_list_match', argument 5 of type 'QofQueryOp'
OOOO:qof_query_add_boolean_match
in method 'qof_query_add_boolean_match', argument 1 of type 'QofQuery *'
in method 'qof_query_add_boolean_match', argument 4 of type 'QofQueryOp'
in method 'qof_query_run', argument 1 of type 'QofQuery *'
in method 'qof_query_last_run', argument 1 of type 'QofQuery *'
in method 'qof_query_run_subquery', argument 1 of type 'QofQuery *'
in method 'qof_query_run_subquery', argument 2 of type 'QofQuery const *'
in method 'qof_query_clear', argument 1 of type 'QofQuery *'
in method 'qof_query_purge_terms', argument 1 of type 'QofQuery *'
in method 'qof_query_has_terms', argument 1 of type 'QofQuery *'
in method 'qof_query_num_terms', argument 1 of type 'QofQuery *'
in method 'qof_query_has_term_type', argument 1 of type 'QofQuery *'
in method 'qof_query_get_term_type', argument 1 of type 'QofQuery *'
in method 'qof_query_copy', argument 1 of type 'QofQuery *'
in method 'qof_query_invert', argument 1 of type 'QofQuery *'
in method 'qof_query_merge', argument 1 of type 'QofQuery *'
in method 'qof_query_merge', argument 2 of type 'QofQuery *'
in method 'qof_query_merge', argument 3 of type 'QofQueryOp'
in method 'qof_query_merge_in_place', argument 1 of type 'QofQuery *'
in method 'qof_query_merge_in_place', argument 2 of type 'QofQuery *'
in method 'qof_query_merge_in_place', argument 3 of type 'QofQueryOp'
in method 'qof_query_set_sort_order', argument 1 of type 'QofQuery *'
OOOO:qof_query_set_sort_options
in method 'qof_query_set_sort_options', argument 1 of type 'QofQuery *'
in method 'qof_query_set_sort_options', argument 2 of type 'gint'
in method 'qof_query_set_sort_options', argument 3 of type 'gint'
in method 'qof_query_set_sort_options', argument 4 of type 'gint'
OOOO:qof_query_set_sort_increasing
in method 'qof_query_set_sort_increasing', argument 1 of type 'QofQuery *'
in method 'qof_query_set_max_results', argument 1 of type 'QofQuery *'
in method 'qof_query_set_max_results', argument 2 of type 'int'
in method 'qof_query_equal', argument 1 of type 'QofQuery const *'
in method 'qof_query_equal', argument 2 of type 'QofQuery const *'
in method 'qof_query_print', argument 1 of type 'QofQuery *'
in method 'qof_query_get_search_for', argument 1 of type 'QofQuery const *'
in method 'qof_query_get_books', argument 1 of type 'QofQuery *'
OOO:qof_query_numeric_predicate
in method 'qof_query_numeric_predicate', argument 1 of type 'QofQueryCompare'
in method 'qof_query_numeric_predicate', argument 2 of type 'QofNumericMatch'
in method 'qof_query_numeric_predicate', argument 3 of type 'gnc_numeric'
invalid null reference in method 'qof_query_numeric_predicate', argument 3 of type 'gnc_numeric'
in method 'qof_query_guid_predicate', argument 1 of type 'QofGuidMatch'
in method 'qof_query_guid_predicate', argument 2 of type 'GList *'
OO:qof_query_collect_predicate
in method 'qof_query_collect_predicate', argument 1 of type 'QofGuidMatch'
in method 'qof_query_collect_predicate', argument 2 of type 'QofCollection *'
in method 'qof_query_choice_predicate', argument 1 of type 'QofGuidMatch'
in method 'qof_query_choice_predicate', argument 2 of type 'GList *'
in method 'qof_query_kvp_predicate', argument 1 of type 'QofQueryCompare'
in method 'qof_query_kvp_predicate', argument 3 of type 'KvpValue const *'
OOO:qof_query_kvp_predicate_path
in method 'qof_query_kvp_predicate_path', argument 1 of type 'QofQueryCompare'
in method 'qof_query_kvp_predicate_path', argument 3 of type 'KvpValue const *'
O:qof_query_core_predicate_copy
in method 'qof_query_core_predicate_copy', argument 1 of type 'QofQueryPredData const *'
O:qof_query_core_predicate_free
in method 'qof_query_core_predicate_free', argument 1 of type 'QofQueryPredData *'
OO:qof_query_date_predicate_get_date
in method 'qof_query_date_predicate_get_date', argument 1 of type 'QofQueryPredData const *'
OOOO:qof_string_number_compare_func
in method 'qof_string_number_compare_func', argument 1 of type 'gpointer'
in method 'qof_string_number_compare_func', argument 2 of type 'gpointer'
in method 'qof_string_number_compare_func', argument 3 of type 'gint'
in method 'qof_string_number_compare_func', argument 4 of type 'QofParam *'
in method 'gnc_value_get_guid', argument 1 of type 'GValue const *'
in method 'guid_new', argument 1 of type 'GncGUID *'
in method 'guid_free', argument 1 of type 'GncGUID *'
in method 'guid_copy', argument 1 of type 'GncGUID const *'
in method 'guid_to_string', argument 1 of type 'GncGUID const *'
in method 'guid_to_string_buff', argument 1 of type 'GncGUID const *'
in method 'string_to_guid', argument 2 of type 'GncGUID *'
in method 'guid_equal', argument 1 of type 'GncGUID const *'
in method 'guid_equal', argument 2 of type 'GncGUID const *'
in method 'guid_compare', argument 1 of type 'GncGUID const *'
in method 'guid_compare', argument 2 of type 'GncGUID const *'
in method 'guid_hash_to_guint', argument 1 of type 'gconstpointer'
invalid null reference in method 'guid_hash_to_guint', argument 1 of type 'gconstpointer'
in method 'guid_g_hash_table_equal', argument 1 of type 'gconstpointer'
invalid null reference in method 'guid_g_hash_table_equal', argument 1 of type 'gconstpointer'
in method 'guid_g_hash_table_equal', argument 2 of type 'gconstpointer'
invalid null reference in method 'guid_g_hash_table_equal', argument 2 of type 'gconstpointer'
in method 'string_to_gnc_numeric', argument 2 of type 'gnc_numeric *'
in method 'gnc_numeric_to_double', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_to_double', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_to_string', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_to_string', argument 1 of type 'gnc_numeric'
in method 'gnc_num_dbg_to_string', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_num_dbg_to_string', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_check', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_check', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_compare', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_compare', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_compare', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_compare', argument 2 of type 'gnc_numeric'
in method 'gnc_numeric_zero_p', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_zero_p', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_negative_p', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_negative_p', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_positive_p', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_positive_p', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_eq', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_eq', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_eq', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_eq', argument 2 of type 'gnc_numeric'
in method 'gnc_numeric_equal', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_equal', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_equal', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_equal', argument 2 of type 'gnc_numeric'
in method 'gnc_numeric_same', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_same', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_same', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_same', argument 2 of type 'gnc_numeric'
in method 'gnc_numeric_same', argument 4 of type 'gint'
in method 'gnc_numeric_mul', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_mul', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_mul', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_mul', argument 2 of type 'gnc_numeric'
in method 'gnc_numeric_mul', argument 4 of type 'gint'
in method 'gnc_numeric_div', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_div', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_div', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_div', argument 2 of type 'gnc_numeric'
in method 'gnc_numeric_div', argument 4 of type 'gint'
in method 'gnc_numeric_neg', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_neg', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_abs', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_abs', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_add', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_add', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_add', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_add', argument 2 of type 'gnc_numeric'
in method 'gnc_numeric_add', argument 4 of type 'gint'
in method 'gnc_numeric_add_fixed', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_add_fixed', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_add_fixed', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_add_fixed', argument 2 of type 'gnc_numeric'
in method 'gnc_numeric_sub', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_sub', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_sub', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_sub', argument 2 of type 'gnc_numeric'
in method 'gnc_numeric_sub', argument 4 of type 'gint'
in method 'gnc_numeric_sub_fixed', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_sub_fixed', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_sub_fixed', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_sub_fixed', argument 2 of type 'gnc_numeric'
OOOOO:gnc_numeric_add_with_error
in method 'gnc_numeric_add_with_error', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_add_with_error', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_add_with_error', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_add_with_error', argument 2 of type 'gnc_numeric'
in method 'gnc_numeric_add_with_error', argument 4 of type 'gint'
in method 'gnc_numeric_add_with_error', argument 5 of type 'gnc_numeric *'
OOOOO:gnc_numeric_sub_with_error
in method 'gnc_numeric_sub_with_error', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_sub_with_error', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_sub_with_error', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_sub_with_error', argument 2 of type 'gnc_numeric'
in method 'gnc_numeric_sub_with_error', argument 4 of type 'gint'
in method 'gnc_numeric_sub_with_error', argument 5 of type 'gnc_numeric *'
OOOOO:gnc_numeric_mul_with_error
in method 'gnc_numeric_mul_with_error', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_mul_with_error', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_mul_with_error', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_mul_with_error', argument 2 of type 'gnc_numeric'
in method 'gnc_numeric_mul_with_error', argument 4 of type 'gint'
in method 'gnc_numeric_mul_with_error', argument 5 of type 'gnc_numeric *'
OOOOO:gnc_numeric_div_with_error
in method 'gnc_numeric_div_with_error', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_div_with_error', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_div_with_error', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_div_with_error', argument 2 of type 'gnc_numeric'
in method 'gnc_numeric_div_with_error', argument 4 of type 'gint'
in method 'gnc_numeric_div_with_error', argument 5 of type 'gnc_numeric *'
in method 'gnc_numeric_convert', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_convert', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_convert', argument 3 of type 'gint'
in method 'gnc_numeric_reduce', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_reduce', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_to_decimal', argument 1 of type 'gnc_numeric *'
in method 'gnc_numeric_to_decimal', argument 2 of type 'guint8 *'
in method 'gnc_numeric_invert', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_invert', argument 1 of type 'gnc_numeric'
O:gnc_quote_source_set_fq_installed
in method 'gnc_quote_source_set_fq_installed', argument 1 of type 'GList const *'
O:gnc_quote_source_get_supported
in method 'gnc_quote_source_get_supported', argument 1 of type 'gnc_quote_source const *'
in method 'gnc_quote_source_get_type', argument 1 of type 'gnc_quote_source const *'
in method 'gnc_quote_source_get_index', argument 1 of type 'gnc_quote_source const *'
in method 'gnc_commodity_destroy', argument 1 of type 'gnc_commodity *'
in method 'gnc_commodity_copy', argument 1 of type 'gnc_commodity *'
in method 'gnc_commodity_copy', argument 2 of type 'gnc_commodity const *'
in method 'gnc_commodity_clone', argument 1 of type 'gnc_commodity const *'
in method 'gnc_commodity_clone', argument 2 of type 'QofBook *'
O:gnc_commodity_get_namespace_ds
in method 'gnc_commodity_get_namespace_ds', argument 1 of type 'gnc_commodity const *'
in method 'gnc_commodity_get_fraction', argument 1 of type 'gnc_commodity const *'
O:gnc_commodity_get_quote_flag
in method 'gnc_commodity_get_quote_flag', argument 1 of type 'gnc_commodity const *'
O:gnc_commodity_get_quote_source
in method 'gnc_commodity_get_quote_source', argument 1 of type 'gnc_commodity const *'
O:gnc_commodity_get_default_quote_source
in method 'gnc_commodity_get_default_quote_source', argument 1 of type 'gnc_commodity const *'
in method 'gnc_commodity_set_fraction', argument 1 of type 'gnc_commodity *'
in method 'gnc_commodity_set_fraction', argument 2 of type 'int'
OO:gnc_commodity_user_set_quote_flag
in method 'gnc_commodity_user_set_quote_flag', argument 1 of type 'gnc_commodity *'
OO:gnc_commodity_set_quote_flag
in method 'gnc_commodity_set_quote_flag', argument 1 of type 'gnc_commodity *'
OO:gnc_commodity_set_quote_source
in method 'gnc_commodity_set_quote_source', argument 1 of type 'gnc_commodity *'
in method 'gnc_commodity_set_quote_source', argument 2 of type 'gnc_quote_source *'
O:gnc_commodity_increment_usage_count
in method 'gnc_commodity_increment_usage_count', argument 1 of type 'gnc_commodity *'
O:gnc_commodity_decrement_usage_count
in method 'gnc_commodity_decrement_usage_count', argument 1 of type 'gnc_commodity *'
in method 'gnc_commodity_equiv', argument 1 of type 'gnc_commodity const *'
in method 'gnc_commodity_equiv', argument 2 of type 'gnc_commodity const *'
in method 'gnc_commodity_equal', argument 1 of type 'gnc_commodity const *'
in method 'gnc_commodity_equal', argument 2 of type 'gnc_commodity const *'
in method 'gnc_commodity_compare', argument 1 of type 'gnc_commodity const *'
in method 'gnc_commodity_compare', argument 2 of type 'gnc_commodity const *'
in method 'gnc_commodity_compare_void', argument 1 of type 'void const *'
in method 'gnc_commodity_compare_void', argument 2 of type 'void const *'
in method 'gnc_commodity_is_iso', argument 1 of type 'gnc_commodity const *'
in method 'gnc_commodity_is_currency', argument 1 of type 'gnc_commodity const *'
O:gnc_commodity_table_get_table
in method 'gnc_commodity_table_get_table', argument 1 of type 'QofBook *'
OO:gnc_commodity_find_commodity_by_guid
in method 'gnc_commodity_find_commodity_by_guid', argument 1 of type 'GncGUID const *'
in method 'gnc_commodity_find_commodity_by_guid', argument 2 of type 'QofBook *'
in method 'gnc_commodity_table_insert', argument 1 of type 'gnc_commodity_table *'
in method 'gnc_commodity_table_insert', argument 2 of type 'gnc_commodity *'
in method 'gnc_commodity_table_remove', argument 1 of type 'gnc_commodity_table *'
in method 'gnc_commodity_table_remove', argument 2 of type 'gnc_commodity *'
OO:gnc_commodity_table_add_default_data
in method 'gnc_commodity_table_add_default_data', argument 1 of type 'gnc_commodity_table *'
in method 'gnc_commodity_table_add_default_data', argument 2 of type 'QofBook *'
O:gnc_commodity_namespace_get_commodity_list
in method 'gnc_commodity_namespace_get_commodity_list', argument 1 of type 'gnc_commodity_namespace const *'
O:gnc_commodity_table_get_namespaces
in method 'gnc_commodity_table_get_namespaces', argument 1 of type 'gnc_commodity_table const *'
O:gnc_commodity_table_get_namespaces_list
in method 'gnc_commodity_table_get_namespaces_list', argument 1 of type 'gnc_commodity_table const *'
O:gnc_commodity_table_get_size
in method 'gnc_commodity_table_get_size', argument 1 of type 'gnc_commodity_table const *'
O:gnc_commodity_table_get_quotable_commodities
in method 'gnc_commodity_table_get_quotable_commodities', argument 1 of type 'gnc_commodity_table const *'
in method 'gnc_commodity_table_destroy', argument 1 of type 'gnc_commodity_table *'
in method 'gnc_commodity_obtain_twin', argument 1 of type 'gnc_commodity const *'
in method 'gnc_commodity_obtain_twin', argument 2 of type 'QofBook *'
in method 'gnc_commodity_begin_edit', argument 1 of type 'gnc_commodity *'
in method 'gnc_commodity_commit_edit', argument 1 of type 'gnc_commodity *'
OO:gnc_monetary_list_add_monetary
in method 'gnc_monetary_list_add_monetary', argument 1 of type 'MonetaryList *'
in method 'gnc_monetary_list_add_monetary', argument 2 of type 'gnc_monetary'
invalid null reference in method 'gnc_monetary_list_add_monetary', argument 2 of type 'gnc_monetary'
OOO:gnc_monetary_list_add_value
in method 'gnc_monetary_list_add_value', argument 1 of type 'MonetaryList *'
in method 'gnc_monetary_list_add_value', argument 2 of type 'gnc_commodity *'
in method 'gnc_monetary_list_add_value', argument 3 of type 'gnc_numeric'
invalid null reference in method 'gnc_monetary_list_add_value', argument 3 of type 'gnc_numeric'
O:gnc_monetary_list_delete_zeros
in method 'gnc_monetary_list_delete_zeros', argument 1 of type 'MonetaryList *'
in method 'gnc_monetary_list_free', argument 1 of type 'MonetaryList *'
Python object passed to function with GncOwner * argument couldn't be converted back to pointer of that type
in method 'qofOwnerSetEntity', argument 2 of type 'QofInstance *'
in method 'GNC_IS_OWNER', argument 1 of type 'QofInstance *'
in method 'gncOwnerInitUndefined', argument 2 of type 'gpointer'
in method 'gncOwnerAttachToLot', argument 2 of type 'GNCLot *'
in method 'gncOwnerLotMatchOwnerFunc', argument 1 of type 'GNCLot *'
in method 'gncOwnerLotMatchOwnerFunc', argument 2 of type 'gpointer'
in method 'gncOwnerLotsSortFunc', argument 1 of type 'GNCLot *'
in method 'gncOwnerLotsSortFunc', argument 2 of type 'GNCLot *'
in method 'gncOwnerGetOwnerFromLot', argument 1 of type 'GNCLot *'
in method 'gncOwnerGetOwnerFromTxn', argument 1 of type 'Transaction *'
OOOO:gncOwnerGetOwnerFromTypeGuid
in method 'gncOwnerGetOwnerFromTypeGuid', argument 1 of type 'QofBook *'
in method 'gncOwnerGetOwnerFromTypeGuid', argument 4 of type 'GncGUID *'
OO:gncOwnerAutoApplyPaymentsWithLots
in method 'gncOwnerAutoApplyPaymentsWithLots', argument 2 of type 'GList *'
OO:gncOwnerFindOffsettingSplit
in method 'gncOwnerFindOffsettingSplit', argument 1 of type 'GNCLot *'
in method 'gncOwnerFindOffsettingSplit', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gncOwnerFindOffsettingSplit', argument 2 of type 'gnc_numeric'
in method 'gncOwnerReduceSplitTo', argument 1 of type 'Split *'
in method 'gncOwnerReduceSplitTo', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gncOwnerReduceSplitTo', argument 2 of type 'gnc_numeric'
in method 'gncOwnerSetLotLinkMemo', argument 1 of type 'Transaction *'
OO:gncOwnerGetBalanceInCurrency
in method 'gncOwnerGetBalanceInCurrency', argument 2 of type 'gnc_commodity const *'
in method 'gncCustomerCreate', argument 1 of type 'QofBook *'
in method 'gncCustomerDestroy', argument 1 of type 'GncCustomer *'
in method 'gncCustomerBeginEdit', argument 1 of type 'GncCustomer *'
in method 'gncCustomerCommitEdit', argument 1 of type 'GncCustomer *'
in method 'gncCustomerSetTerms', argument 1 of type 'GncCustomer *'
in method 'gncCustomerSetTerms', argument 2 of type 'GncBillTerm *'
in method 'gncCustomerSetTaxIncluded', argument 1 of type 'GncCustomer *'
in method 'gncCustomerSetTaxIncluded', argument 2 of type 'GncTaxIncluded'
in method 'gncCustomerSetActive', argument 1 of type 'GncCustomer *'
in method 'gncCustomerSetDiscount', argument 1 of type 'GncCustomer *'
in method 'gncCustomerSetDiscount', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gncCustomerSetDiscount', argument 2 of type 'gnc_numeric'
in method 'gncCustomerSetCredit', argument 1 of type 'GncCustomer *'
in method 'gncCustomerSetCredit', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gncCustomerSetCredit', argument 2 of type 'gnc_numeric'
in method 'gncCustomerSetCurrency', argument 1 of type 'GncCustomer *'
in method 'gncCustomerSetCurrency', argument 2 of type 'gnc_commodity *'
OO:gncCustomerSetTaxTableOverride
in method 'gncCustomerSetTaxTableOverride', argument 1 of type 'GncCustomer *'
in method 'gncCustomerSetTaxTable', argument 1 of type 'GncCustomer *'
in method 'gncCustomerSetTaxTable', argument 2 of type 'GncTaxTable *'
in method 'gncCustomerAddJob', argument 1 of type 'GncCustomer *'
in method 'gncCustomerAddJob', argument 2 of type 'GncJob *'
in method 'gncCustomerRemoveJob', argument 1 of type 'GncCustomer *'
in method 'gncCustomerRemoveJob', argument 2 of type 'GncJob *'
in method 'gncCustomerGetAddr', argument 1 of type 'GncCustomer const *'
in method 'gncCustomerGetShipAddr', argument 1 of type 'GncCustomer const *'
in method 'gncCustomerGetTerms', argument 1 of type 'GncCustomer const *'
in method 'gncCustomerGetTaxIncluded', argument 1 of type 'GncCustomer const *'
in method 'gncCustomerGetActive', argument 1 of type 'GncCustomer const *'
in method 'gncCustomerGetDiscount', argument 1 of type 'GncCustomer const *'
in method 'gncCustomerGetCredit', argument 1 of type 'GncCustomer const *'
in method 'gncCustomerGetCurrency', argument 1 of type 'GncCustomer const *'
O:gncCustomerGetTaxTableOverride
in method 'gncCustomerGetTaxTableOverride', argument 1 of type 'GncCustomer const *'
in method 'gncCustomerGetTaxTable', argument 1 of type 'GncCustomer const *'
in method 'gncCustomerCompare', argument 1 of type 'GncCustomer const *'
in method 'gncCustomerCompare', argument 2 of type 'GncCustomer const *'
in method 'gncCustomerEqual', argument 1 of type 'GncCustomer const *'
in method 'gncCustomerEqual', argument 2 of type 'GncCustomer const *'
in method 'gncCustomerGetJoblist', argument 1 of type 'GncCustomer const *'
in method 'gncCustomerIsDirty', argument 1 of type 'GncCustomer *'
in method 'gncCustomerNextID', argument 1 of type 'QofBook *'
in method 'gncEmployeeCreate', argument 1 of type 'QofBook *'
in method 'gncEmployeeDestroy', argument 1 of type 'GncEmployee *'
in method 'gncEmployeeBeginEdit', argument 1 of type 'GncEmployee *'
in method 'gncEmployeeCommitEdit', argument 1 of type 'GncEmployee *'
in method 'gncEmployeeCompare', argument 1 of type 'GncEmployee const *'
in method 'gncEmployeeCompare', argument 2 of type 'GncEmployee const *'
in method 'gncEmployeeSetWorkday', argument 1 of type 'GncEmployee *'
in method 'gncEmployeeSetWorkday', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gncEmployeeSetWorkday', argument 2 of type 'gnc_numeric'
in method 'gncEmployeeSetRate', argument 1 of type 'GncEmployee *'
in method 'gncEmployeeSetRate', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gncEmployeeSetRate', argument 2 of type 'gnc_numeric'
in method 'gncEmployeeSetCurrency', argument 1 of type 'GncEmployee *'
in method 'gncEmployeeSetCurrency', argument 2 of type 'gnc_commodity *'
in method 'gncEmployeeSetActive', argument 1 of type 'GncEmployee *'
in method 'gncEmployeeSetCCard', argument 1 of type 'GncEmployee *'
in method 'gncEmployeeSetCCard', argument 2 of type 'Account *'
in method 'qofEmployeeSetAddr', argument 1 of type 'GncEmployee *'
in method 'qofEmployeeSetAddr', argument 2 of type 'QofInstance *'
in method 'gncEmployeeGetBook', argument 1 of type 'GncEmployee *'
in method 'gncEmployeeGetAddr', argument 1 of type 'GncEmployee const *'
in method 'gncEmployeeGetWorkday', argument 1 of type 'GncEmployee const *'
in method 'gncEmployeeGetRate', argument 1 of type 'GncEmployee const *'
in method 'gncEmployeeGetCurrency', argument 1 of type 'GncEmployee const *'
in method 'gncEmployeeGetActive', argument 1 of type 'GncEmployee const *'
in method 'gncEmployeeGetCCard', argument 1 of type 'GncEmployee const *'
in method 'gncEmployeeEqual', argument 1 of type 'GncEmployee const *'
in method 'gncEmployeeEqual', argument 2 of type 'GncEmployee const *'
in method 'gncEmployeeIsDirty', argument 1 of type 'GncEmployee const *'
in method 'gncVendorCreate', argument 1 of type 'QofBook *'
in method 'gncVendorDestroy', argument 1 of type 'GncVendor *'
in method 'gncVendorSetTerms', argument 1 of type 'GncVendor *'
in method 'gncVendorSetTerms', argument 2 of type 'GncBillTerm *'
in method 'gncVendorSetTaxIncluded', argument 1 of type 'GncVendor *'
in method 'gncVendorSetTaxIncluded', argument 2 of type 'GncTaxIncluded'
in method 'gncVendorSetCurrency', argument 1 of type 'GncVendor *'
in method 'gncVendorSetCurrency', argument 2 of type 'gnc_commodity *'
in method 'gncVendorSetActive', argument 1 of type 'GncVendor *'
OO:gncVendorSetTaxTableOverride
in method 'gncVendorSetTaxTableOverride', argument 1 of type 'GncVendor *'
in method 'gncVendorSetTaxTable', argument 1 of type 'GncVendor *'
in method 'gncVendorSetTaxTable', argument 2 of type 'GncTaxTable *'
in method 'gncVendorAddJob', argument 1 of type 'GncVendor *'
in method 'gncVendorAddJob', argument 2 of type 'GncJob *'
in method 'gncVendorRemoveJob', argument 1 of type 'GncVendor *'
in method 'gncVendorRemoveJob', argument 2 of type 'GncJob *'
in method 'gncVendorBeginEdit', argument 1 of type 'GncVendor *'
in method 'gncVendorCommitEdit', argument 1 of type 'GncVendor *'
in method 'gncVendorGetAddr', argument 1 of type 'GncVendor const *'
in method 'gncVendorGetTerms', argument 1 of type 'GncVendor const *'
in method 'gncVendorGetTaxIncluded', argument 1 of type 'GncVendor const *'
in method 'gncVendorGetCurrency', argument 1 of type 'GncVendor const *'
in method 'gncVendorGetActive', argument 1 of type 'GncVendor const *'
O:gncVendorGetTaxTableOverride
in method 'gncVendorGetTaxTableOverride', argument 1 of type 'GncVendor const *'
in method 'gncVendorGetTaxTable', argument 1 of type 'GncVendor const *'
in method 'gncVendorCompare', argument 1 of type 'GncVendor const *'
in method 'gncVendorCompare', argument 2 of type 'GncVendor const *'
in method 'gncVendorEqual', argument 1 of type 'GncVendor const *'
in method 'gncVendorEqual', argument 2 of type 'GncVendor const *'
in method 'gncVendorIsDirty', argument 1 of type 'GncVendor const *'
in method 'gncVendorNextID', argument 1 of type 'QofBook *'
in method 'gncAddressCreate', argument 1 of type 'QofBook *'
in method 'gncAddressCreate', argument 2 of type 'QofInstance *'
in method 'gncAddressDestroy', argument 1 of type 'GncAddress *'
in method 'gncAddressBeginEdit', argument 1 of type 'GncAddress *'
in method 'gncAddressCommitEdit', argument 1 of type 'GncAddress *'
in method 'gncAddressClearDirty', argument 1 of type 'GncAddress *'
in method 'gncAddressIsDirty', argument 1 of type 'GncAddress const *'
in method 'gncAddressCompare', argument 1 of type 'GncAddress const *'
in method 'gncAddressCompare', argument 2 of type 'GncAddress const *'
in method 'gncAddressEqual', argument 1 of type 'GncAddress const *'
in method 'gncAddressEqual', argument 2 of type 'GncAddress const *'
in method 'gncBillTermCreate', argument 1 of type 'QofBook *'
in method 'gncBillTermDestroy', argument 1 of type 'GncBillTerm *'
in method 'gncBillTermIncRef', argument 1 of type 'GncBillTerm *'
in method 'gncBillTermDecRef', argument 1 of type 'GncBillTerm *'
in method 'gncBillTermChanged', argument 1 of type 'GncBillTerm *'
in method 'gncBillTermBeginEdit', argument 1 of type 'GncBillTerm *'
in method 'gncBillTermCommitEdit', argument 1 of type 'GncBillTerm *'
in method 'gncBillTermSetType', argument 1 of type 'GncBillTerm *'
in method 'gncBillTermSetType', argument 2 of type 'GncBillTermType'
in method 'gncBillTermSetDueDays', argument 1 of type 'GncBillTerm *'
in method 'gncBillTermSetDueDays', argument 2 of type 'gint'
in method 'gncBillTermSetDiscountDays', argument 1 of type 'GncBillTerm *'
in method 'gncBillTermSetDiscountDays', argument 2 of type 'gint'
in method 'gncBillTermSetDiscount', argument 1 of type 'GncBillTerm *'
in method 'gncBillTermSetDiscount', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gncBillTermSetDiscount', argument 2 of type 'gnc_numeric'
in method 'gncBillTermSetCutoff', argument 1 of type 'GncBillTerm *'
in method 'gncBillTermSetCutoff', argument 2 of type 'gint'
in method 'gncBillTermGetTerms', argument 1 of type 'QofBook *'
in method 'gncBillTermGetType', argument 1 of type 'GncBillTerm const *'
in method 'gncBillTermGetDueDays', argument 1 of type 'GncBillTerm const *'
in method 'gncBillTermGetDiscountDays', argument 1 of type 'GncBillTerm const *'
in method 'gncBillTermGetDiscount', argument 1 of type 'GncBillTerm const *'
in method 'gncBillTermGetCutoff', argument 1 of type 'GncBillTerm const *'
in method 'gncBillTermIsDirty', argument 1 of type 'GncBillTerm const *'
in method 'gncBillTermGetParent', argument 1 of type 'GncBillTerm const *'
in method 'gncBillTermReturnChild', argument 1 of type 'GncBillTerm *'
in method 'gncBillTermGetRefcount', argument 1 of type 'GncBillTerm const *'
in method 'gncBillTermCompare', argument 1 of type 'GncBillTerm const *'
in method 'gncBillTermCompare', argument 2 of type 'GncBillTerm const *'
in method 'gncBillTermEqual', argument 1 of type 'GncBillTerm const *'
in method 'gncBillTermEqual', argument 2 of type 'GncBillTerm const *'
in method 'gncBillTermIsFamily', argument 1 of type 'GncBillTerm const *'
in method 'gncBillTermIsFamily', argument 2 of type 'GncBillTerm const *'
in method 'gncBillTermComputeDueDate', argument 1 of type 'GncBillTerm const *'
in method 'gncInvoiceCreate', argument 1 of type 'QofBook *'
in method 'gncInvoiceDestroy', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceCopy', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceSetOwner', argument 1 of type 'GncInvoice *'
OO:gncInvoiceSetDateOpenedGDate
in method 'gncInvoiceSetDateOpenedGDate', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceSetDateOpenedGDate', argument 2 of type 'GDate const *'
in method 'gncInvoiceSetDateOpened', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceSetDatePosted', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceSetTerms', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceSetTerms', argument 2 of type 'GncBillTerm *'
in method 'gncInvoiceSetCurrency', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceSetCurrency', argument 2 of type 'gnc_commodity *'
in method 'gncInvoiceSetActive', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceSetIsCreditNote', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceSetBillTo', argument 1 of type 'GncInvoice *'
OO:gncInvoiceSetToChargeAmount
in method 'gncInvoiceSetToChargeAmount', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceSetToChargeAmount', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gncInvoiceSetToChargeAmount', argument 2 of type 'gnc_numeric'
in method 'gncInvoiceAddEntry', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceAddEntry', argument 2 of type 'GncEntry *'
in method 'gncInvoiceRemoveEntry', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceRemoveEntry', argument 2 of type 'GncEntry *'
in method 'gncInvoiceAddPrice', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceAddPrice', argument 2 of type 'GNCPrice *'
in method 'gncBillAddEntry', argument 1 of type 'GncInvoice *'
in method 'gncBillAddEntry', argument 2 of type 'GncEntry *'
in method 'gncBillRemoveEntry', argument 1 of type 'GncInvoice *'
in method 'gncBillRemoveEntry', argument 2 of type 'GncEntry *'
in method 'gncInvoiceSortEntries', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceRemoveEntries', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceGetOwner', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceGetDateOpened', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceGetDatePosted', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceGetDateDue', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceGetTerms', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceGetOwnerType', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceGetType', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceGetCurrency', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceGetBillTo', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceGetToChargeAmount', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceGetActive', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceGetIsCreditNote', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceGetPostedLot', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceGetPostedTxn', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceGetPostedAcc', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceGetTotal', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceGetTotalOf', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceGetTotalOf', argument 2 of type 'GncEntryPaymentType'
in method 'gncInvoiceGetTotalSubtotal', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceGetTotalTax', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceGetEntries', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceGetPrice', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceGetPrice', argument 2 of type 'gnc_commodity *'
in method 'gncInvoiceAmountPositive', argument 1 of type 'GncInvoice const *'
O:gncInvoiceGetForeignCurrencies
in method 'gncInvoiceGetForeignCurrencies', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceUnpost', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceAutoApplyPayments', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceGetInvoiceFromTxn', argument 1 of type 'Transaction const *'
in method 'gncInvoiceGetInvoiceFromLot', argument 1 of type 'GNCLot *'
in method 'gncInvoiceBeginEdit', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceCommitEdit', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceCompare', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceCompare', argument 2 of type 'GncInvoice const *'
in method 'gncInvoiceIsPosted', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceIsPaid', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceGetBook', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceEqual', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceEqual', argument 2 of type 'GncInvoice const *'
in method 'gncInvoiceNextID', argument 1 of type 'QofBook *'
in method 'gncInvoiceSetPostedAcc', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceSetPostedAcc', argument 2 of type 'Account *'
in method 'gncInvoiceSetPostedTxn', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceSetPostedTxn', argument 2 of type 'Transaction *'
in method 'gncInvoiceSetPostedLot', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceSetPostedLot', argument 2 of type 'GNCLot *'
in method 'gncJobCreate', argument 1 of type 'QofBook *'
in method 'gncJobDestroy', argument 1 of type 'GncJob *'
in method 'gncJobSetOwner', argument 1 of type 'GncJob *'
in method 'gncJobSetActive', argument 1 of type 'GncJob *'
in method 'gncJobBeginEdit', argument 1 of type 'GncJob *'
in method 'gncJobCommitEdit', argument 1 of type 'GncJob *'
in method 'gncJobGetOwner', argument 1 of type 'GncJob *'
in method 'gncJobGetActive', argument 1 of type 'GncJob const *'
in method 'gncJobCompare', argument 1 of type 'GncJob const *'
in method 'gncJobCompare', argument 2 of type 'GncJob const *'
in method 'gncJobEqual', argument 1 of type 'GncJob const *'
in method 'gncJobEqual', argument 2 of type 'GncJob const *'
in method 'gncEntryCreate', argument 1 of type 'QofBook *'
in method 'gncEntryDestroy', argument 1 of type 'GncEntry *'
in method 'gncEntrySetDateGDate', argument 1 of type 'GncEntry *'
in method 'gncEntrySetDateGDate', argument 2 of type 'GDate const *'
in method 'gncEntrySetDate', argument 1 of type 'GncEntry *'
in method 'gncEntrySetDateEntered', argument 1 of type 'GncEntry *'
in method 'gncEntrySetQuantity', argument 1 of type 'GncEntry *'
in method 'gncEntrySetQuantity', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gncEntrySetQuantity', argument 2 of type 'gnc_numeric'
in method 'gncEntrySetDocQuantity', argument 1 of type 'GncEntry *'
in method 'gncEntrySetDocQuantity', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gncEntrySetDocQuantity', argument 2 of type 'gnc_numeric'
in method 'gncEntrySetInvAccount', argument 1 of type 'GncEntry *'
in method 'gncEntrySetInvAccount', argument 2 of type 'Account *'
in method 'gncEntrySetInvPrice', argument 1 of type 'GncEntry *'
in method 'gncEntrySetInvPrice', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gncEntrySetInvPrice', argument 2 of type 'gnc_numeric'
in method 'gncEntrySetInvTaxable', argument 1 of type 'GncEntry *'
in method 'gncEntrySetInvTaxIncluded', argument 1 of type 'GncEntry *'
in method 'gncEntrySetInvTaxTable', argument 1 of type 'GncEntry *'
in method 'gncEntrySetInvTaxTable', argument 2 of type 'GncTaxTable *'
in method 'gncEntrySetInvDiscount', argument 1 of type 'GncEntry *'
in method 'gncEntrySetInvDiscount', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gncEntrySetInvDiscount', argument 2 of type 'gnc_numeric'
in method 'gncEntrySetInvDiscountType', argument 1 of type 'GncEntry *'
in method 'gncEntrySetInvDiscountType', argument 2 of type 'GncAmountType'
in method 'gncEntrySetInvDiscountHow', argument 1 of type 'GncEntry *'
in method 'gncEntrySetInvDiscountHow', argument 2 of type 'GncDiscountHow'
in method 'gncEntrySetBillAccount', argument 1 of type 'GncEntry *'
in method 'gncEntrySetBillAccount', argument 2 of type 'Account *'
in method 'gncEntrySetBillPrice', argument 1 of type 'GncEntry *'
in method 'gncEntrySetBillPrice', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gncEntrySetBillPrice', argument 2 of type 'gnc_numeric'
in method 'gncEntrySetBillTaxable', argument 1 of type 'GncEntry *'
in method 'gncEntrySetBillTaxIncluded', argument 1 of type 'GncEntry *'
in method 'gncEntrySetBillTaxTable', argument 1 of type 'GncEntry *'
in method 'gncEntrySetBillTaxTable', argument 2 of type 'GncTaxTable *'
in method 'gncEntrySetBillable', argument 1 of type 'GncEntry *'
in method 'gncOwnerInitCustomer', argument 2 of type 'GncCustomer *'
in method 'gncOwnerInitJob', argument 2 of type 'GncJob *'
in method 'gncOwnerInitVendor', argument 2 of type 'GncVendor *'
in method 'gncOwnerInitEmployee', argument 2 of type 'GncEmployee *'
in method 'gncEntrySetBillTo', argument 1 of type 'GncEntry *'
in method 'gncEntrySetBillPayment', argument 1 of type 'GncEntry *'
in method 'gncEntrySetBillPayment', argument 2 of type 'GncEntryPaymentType'
in method 'gncEntryGetDateGDate', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetDate', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetDateEntered', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetQuantity', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetDocQuantity', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetInvAccount', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetInvPrice', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetInvDiscount', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetInvDiscountType', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetInvDiscountHow', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetInvTaxable', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetInvTaxIncluded', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetInvTaxTable', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetBillAccount', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetBillPrice', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetBillTaxable', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetBillTaxIncluded', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetBillTaxTable', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetBillable', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetBillTo', argument 1 of type 'GncEntry *'
in method 'gncEntryGetBillPayment', argument 1 of type 'GncEntry const *'
in method 'gncEntryCopy', argument 1 of type 'GncEntry const *'
in method 'gncEntryCopy', argument 2 of type 'GncEntry *'
in method 'gncEntryGetDocValue', argument 1 of type 'GncEntry *'
in method 'gncEntryGetDocTaxValue', argument 1 of type 'GncEntry *'
in method 'gncEntryGetDocTaxValues', argument 1 of type 'GncEntry *'
OOOO:gncEntryGetDocDiscountValue
in method 'gncEntryGetDocDiscountValue', argument 1 of type 'GncEntry *'
in method 'gncEntryGetBalValue', argument 1 of type 'GncEntry *'
in method 'gncEntryGetBalTaxValue', argument 1 of type 'GncEntry *'
in method 'gncEntryGetBalTaxValues', argument 1 of type 'GncEntry *'
OOO:gncEntryGetBalDiscountValue
in method 'gncEntryGetBalDiscountValue', argument 1 of type 'GncEntry *'
OOOOOOOOOOO:gncEntryComputeValue
in method 'gncEntryComputeValue', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gncEntryComputeValue', argument 1 of type 'gnc_numeric'
in method 'gncEntryComputeValue', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gncEntryComputeValue', argument 2 of type 'gnc_numeric'
in method 'gncEntryComputeValue', argument 3 of type 'GncTaxTable const *'
in method 'gncEntryComputeValue', argument 5 of type 'gnc_numeric'
invalid null reference in method 'gncEntryComputeValue', argument 5 of type 'gnc_numeric'
in method 'gncEntryComputeValue', argument 6 of type 'GncAmountType'
in method 'gncEntryComputeValue', argument 7 of type 'GncDiscountHow'
in method 'gncEntryComputeValue', argument 8 of type 'int'
in method 'gncEntryComputeValue', argument 9 of type 'gnc_numeric *'
in method 'gncEntryComputeValue', argument 10 of type 'gnc_numeric *'
in method 'gncEntryComputeValue', argument 11 of type 'GList **'
in method 'gncEntryGetOrder', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetInvoice', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetBill', argument 1 of type 'GncEntry const *'
in method 'gncEntryIsOpen', argument 1 of type 'GncEntry const *'
in method 'gncEntryBeginEdit', argument 1 of type 'GncEntry *'
in method 'gncEntryCommitEdit', argument 1 of type 'GncEntry *'
in method 'gncEntryCompare', argument 1 of type 'GncEntry const *'
in method 'gncEntryCompare', argument 2 of type 'GncEntry const *'
in method 'gncTaxTableCreate', argument 1 of type 'QofBook *'
in method 'gncTaxTableDestroy', argument 1 of type 'GncTaxTable *'
in method 'gncTaxTableEntryDestroy', argument 1 of type 'GncTaxTableEntry *'
in method 'gncTaxTableIncRef', argument 1 of type 'GncTaxTable *'
in method 'gncTaxTableDecRef', argument 1 of type 'GncTaxTable *'
in method 'gncTaxTableEntrySetAccount', argument 1 of type 'GncTaxTableEntry *'
in method 'gncTaxTableEntrySetAccount', argument 2 of type 'Account *'
in method 'gncTaxTableEntrySetType', argument 1 of type 'GncTaxTableEntry *'
in method 'gncTaxTableEntrySetType', argument 2 of type 'GncAmountType'
in method 'gncTaxTableEntrySetAmount', argument 1 of type 'GncTaxTableEntry *'
in method 'gncTaxTableEntrySetAmount', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gncTaxTableEntrySetAmount', argument 2 of type 'gnc_numeric'
in method 'gncTaxTableAddEntry', argument 1 of type 'GncTaxTable *'
in method 'gncTaxTableAddEntry', argument 2 of type 'GncTaxTableEntry *'
in method 'gncTaxTableRemoveEntry', argument 1 of type 'GncTaxTable *'
in method 'gncTaxTableRemoveEntry', argument 2 of type 'GncTaxTableEntry *'
in method 'gncTaxTableChanged', argument 1 of type 'GncTaxTable *'
in method 'gncTaxTableBeginEdit', argument 1 of type 'GncTaxTable *'
in method 'gncTaxTableCommitEdit', argument 1 of type 'GncTaxTable *'
in method 'gncTaxTableEqual', argument 1 of type 'GncTaxTable const *'
in method 'gncTaxTableEqual', argument 2 of type 'GncTaxTable const *'
OO:qof_collection_lookup_entity
in method 'qof_collection_lookup_entity', argument 1 of type 'QofCollection const *'
in method 'qof_collection_lookup_entity', argument 2 of type 'GncGUID const *'
in method 'gncCustomerLookup', argument 1 of type 'QofBook const *'
in method 'gncCustomerLookup', argument 2 of type 'GncGUID const *'
in method 'gncEmployeeLookup', argument 1 of type 'QofBook const *'
in method 'gncEmployeeLookup', argument 2 of type 'GncGUID const *'
in method 'gncVendorLookup', argument 1 of type 'QofBook const *'
in method 'gncVendorLookup', argument 2 of type 'GncGUID const *'
in method 'gncBillTermLookup', argument 1 of type 'QofBook const *'
in method 'gncBillTermLookup', argument 2 of type 'GncGUID const *'
in method 'gncInvoiceLookup', argument 1 of type 'QofBook const *'
in method 'gncInvoiceLookup', argument 2 of type 'GncGUID const *'
in method 'gncJobLookup', argument 1 of type 'QofBook const *'
in method 'gncJobLookup', argument 2 of type 'GncGUID const *'
in method 'gncEntryLookup', argument 1 of type 'QofBook const *'
in method 'gncEntryLookup', argument 2 of type 'GncGUID const *'
in method 'gncTaxTableLookup', argument 1 of type 'QofBook const *'
in method 'gncTaxTableLookup', argument 2 of type 'GncGUID const *'
in method 'gncTaxTableGetTables', argument 1 of type 'QofBook *'
in method 'gncTaxTableGetParent', argument 1 of type 'GncTaxTable const *'
in method 'gncTaxTableReturnChild', argument 1 of type 'GncTaxTable *'
in method 'gncTaxTableGetEntries', argument 1 of type 'GncTaxTable const *'
in method '_QofQueryPredData_how_get', argument 1 of type 'struct _QofQueryPredData *'
in method 'GncGUID___align_me_get', argument 1 of type 'union GNC_INTERNAL_GUID *'
in method 'gncTaxTableEntryGetType', argument 1 of type 'GncTaxTableEntry const *'
in method 'gncTaxTableCompare', argument 1 of type 'GncTaxTable const *'
in method 'gncTaxTableCompare', argument 2 of type 'GncTaxTable const *'
in method 'gncTaxTableEntryCompare', argument 1 of type 'GncTaxTableEntry const *'
in method 'gncTaxTableEntryCompare', argument 2 of type 'GncTaxTableEntry const *'
in method 'gnc_price_get_source', argument 1 of type 'GNCPrice const *'
in method '_gnc_numeric_num_get', argument 1 of type 'struct _gnc_numeric *'
in method '_gnc_numeric_denom_get', argument 1 of type 'struct _gnc_numeric *'
in method 'gnc_numeric_num', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_num', argument 1 of type 'gnc_numeric'
in method 'gnc_numeric_denom', argument 1 of type 'gnc_numeric'
invalid null reference in method 'gnc_numeric_denom', argument 1 of type 'gnc_numeric'
in method 'gncTaxTableGetRefcount', argument 1 of type 'GncTaxTable const *'
in method 'gncTaxTableLastModified', argument 1 of type 'GncTaxTable const *'
in method 'gncTaxTableEntryGetAccount', argument 1 of type 'GncTaxTableEntry const *'
in method 'gncTaxTableEntryGetAmount', argument 1 of type 'GncTaxTableEntry const *'
in method 'gncTaxTableEntryEqual', argument 1 of type 'GncTaxTableEntry const *'
in method 'gncTaxTableEntryEqual', argument 2 of type 'GncTaxTableEntry const *'
in method 'gncAccountValueAdd', argument 1 of type 'GList *'
in method 'gncAccountValueAdd', argument 2 of type 'Account *'
in method 'gncAccountValueAdd', argument 3 of type 'gnc_numeric'
invalid null reference in method 'gncAccountValueAdd', argument 3 of type 'gnc_numeric'
in method 'gncAccountValueAddList', argument 1 of type 'GList *'
in method 'gncAccountValueAddList', argument 2 of type 'GList *'
in method 'gncAccountValueTotal', argument 1 of type 'GList *'
in method 'gncAccountValueDestroy', argument 1 of type 'GList *'
in method 'gnc_search_customer_on_id', argument 1 of type 'QofBook *'
in method 'gnc_search_invoice_on_id', argument 1 of type 'QofBook *'
in method 'gnc_search_bill_on_id', argument 1 of type 'QofBook *'
in method 'gnc_search_vendor_on_id', argument 1 of type 'QofBook *'
in method 'gnc_price_create', argument 1 of type 'QofBook *'
in method 'gnc_price_clone', argument 1 of type 'GNCPrice *'
in method 'gnc_price_clone', argument 2 of type 'QofBook *'
in method 'gnc_price_ref', argument 1 of type 'GNCPrice *'
in method 'gnc_price_unref', argument 1 of type 'GNCPrice *'
in method 'gnc_price_begin_edit', argument 1 of type 'GNCPrice *'
in method 'gnc_price_commit_edit', argument 1 of type 'GNCPrice *'
in method 'gnc_price_set_commodity', argument 1 of type 'GNCPrice *'
in method 'gnc_price_set_commodity', argument 2 of type 'gnc_commodity *'
in method 'gnc_price_set_currency', argument 1 of type 'GNCPrice *'
in method 'gnc_price_set_currency', argument 2 of type 'gnc_commodity *'
in method 'gnc_price_set_time', argument 1 of type 'GNCPrice *'
in method 'gnc_price_set_source', argument 1 of type 'GNCPrice *'
in method 'gnc_price_set_source', argument 2 of type 'PriceSource'
in method 'gnc_price_set_typestr', argument 1 of type 'GNCPrice *'
in method 'gnc_price_set_typestr', argument 2 of type 'char const *'
OO:gnc_price_set_source_string
in method 'gnc_price_set_source_string', argument 1 of type 'GNCPrice *'
in method 'gnc_price_set_source_string', argument 2 of type 'char const *'
in method 'gncTaxTableLookupByName', argument 1 of type 'QofBook *'
in method 'gncTaxTableLookupByName', argument 2 of type 'char const *'
in method 'gncTaxTableSetName', argument 1 of type 'GncTaxTable *'
in method 'gncTaxTableSetName', argument 2 of type 'char const *'
in method 'gncTaxIncludedStringToType', argument 1 of type 'char const *'
in method 'gncTaxIncludedStringToType', argument 2 of type 'GncTaxIncluded *'
in method 'gncAmountStringToType', argument 1 of type 'char const *'
in method 'gncAmountStringToType', argument 2 of type 'GncAmountType *'
in method 'qofEntrySetInvDiscHow', argument 1 of type 'GncEntry *'
in method 'qofEntrySetInvDiscHow', argument 2 of type 'char const *'
in method 'qofEntrySetInvDiscType', argument 1 of type 'GncEntry *'
in method 'qofEntrySetInvDiscType', argument 2 of type 'char const *'
in method 'gncEntrySetNotes', argument 1 of type 'GncEntry *'
in method 'gncEntrySetNotes', argument 2 of type 'char const *'
in method 'gncEntrySetAction', argument 1 of type 'GncEntry *'
in method 'gncEntrySetAction', argument 2 of type 'char const *'
in method 'gncEntrySetDescription', argument 1 of type 'GncEntry *'
in method 'gncEntrySetDescription', argument 2 of type 'char const *'
OO:gncEntryPaymentStringToType
in method 'gncEntryPaymentStringToType', argument 1 of type 'char const *'
in method 'gncEntryPaymentStringToType', argument 2 of type 'GncEntryPaymentType *'
OO:gncEntryDiscountStringToHow
in method 'gncEntryDiscountStringToHow', argument 1 of type 'char const *'
in method 'gncEntryDiscountStringToHow', argument 2 of type 'GncDiscountHow *'
in method 'gncJobSetReference', argument 1 of type 'GncJob *'
in method 'gncJobSetReference', argument 2 of type 'char const *'
in method 'gncJobSetName', argument 1 of type 'GncJob *'
in method 'gncJobSetName', argument 2 of type 'char const *'
in method 'gncJobSetID', argument 1 of type 'GncJob *'
in method 'gncJobSetID', argument 2 of type 'char const *'
OOOOOOOO:gncInvoiceApplyPayment
in method 'gncInvoiceApplyPayment', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceApplyPayment', argument 2 of type 'Transaction *'
in method 'gncInvoiceApplyPayment', argument 3 of type 'Account *'
in method 'gncInvoiceApplyPayment', argument 4 of type 'gnc_numeric'
invalid null reference in method 'gncInvoiceApplyPayment', argument 4 of type 'gnc_numeric'
in method 'gncInvoiceApplyPayment', argument 5 of type 'gnc_numeric'
invalid null reference in method 'gncInvoiceApplyPayment', argument 5 of type 'gnc_numeric'
in method 'gncInvoiceApplyPayment', argument 7 of type 'char const *'
in method 'gncInvoiceApplyPayment', argument 8 of type 'char const *'
OOOOOOO:gncInvoicePostToAccount
in method 'gncInvoicePostToAccount', argument 1 of type 'GncInvoice *'
in method 'gncInvoicePostToAccount', argument 2 of type 'Account *'
in method 'gncInvoicePostToAccount', argument 5 of type 'char const *'
in method 'gncInvoiceSetNotes', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceSetNotes', argument 2 of type 'char const *'
in method 'gncInvoiceSetBillingID', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceSetBillingID', argument 2 of type 'char const *'
in method 'gncInvoiceSetID', argument 1 of type 'GncInvoice *'
in method 'gncInvoiceSetID', argument 2 of type 'char const *'
in method 'gncBillTermLookupByName', argument 1 of type 'QofBook *'
in method 'gncBillTermLookupByName', argument 2 of type 'char const *'
in method 'gncBillTermSetDescription', argument 1 of type 'GncBillTerm *'
in method 'gncBillTermSetDescription', argument 2 of type 'char const *'
in method 'gncBillTermSetName', argument 1 of type 'GncBillTerm *'
in method 'gncBillTermSetName', argument 2 of type 'char const *'
in method 'gncAddressSetEmail', argument 1 of type 'GncAddress *'
in method 'gncAddressSetEmail', argument 2 of type 'char const *'
in method 'gncAddressSetFax', argument 1 of type 'GncAddress *'
in method 'gncAddressSetFax', argument 2 of type 'char const *'
in method 'gncAddressSetPhone', argument 1 of type 'GncAddress *'
in method 'gncAddressSetPhone', argument 2 of type 'char const *'
in method 'gncAddressSetAddr4', argument 1 of type 'GncAddress *'
in method 'gncAddressSetAddr4', argument 2 of type 'char const *'
in method 'gncAddressSetAddr3', argument 1 of type 'GncAddress *'
in method 'gncAddressSetAddr3', argument 2 of type 'char const *'
in method 'gncAddressSetAddr2', argument 1 of type 'GncAddress *'
in method 'gncAddressSetAddr2', argument 2 of type 'char const *'
in method 'gncAddressSetAddr1', argument 1 of type 'GncAddress *'
in method 'gncAddressSetAddr1', argument 2 of type 'char const *'
in method 'gncAddressSetName', argument 1 of type 'GncAddress *'
in method 'gncAddressSetName', argument 2 of type 'char const *'
in method 'gncVendorSetNotes', argument 1 of type 'GncVendor *'
in method 'gncVendorSetNotes', argument 2 of type 'char const *'
in method 'gncVendorSetName', argument 1 of type 'GncVendor *'
in method 'gncVendorSetName', argument 2 of type 'char const *'
in method 'gncVendorSetID', argument 1 of type 'GncVendor *'
in method 'gncVendorSetID', argument 2 of type 'char const *'
in method 'gncEmployeeSetAcl', argument 1 of type 'GncEmployee *'
in method 'gncEmployeeSetAcl', argument 2 of type 'char const *'
in method 'gncEmployeeSetLanguage', argument 1 of type 'GncEmployee *'
in method 'gncEmployeeSetLanguage', argument 2 of type 'char const *'
in method 'gncEmployeeSetName', argument 1 of type 'GncEmployee *'
in method 'gncEmployeeSetName', argument 2 of type 'char const *'
in method 'gncEmployeeSetUsername', argument 1 of type 'GncEmployee *'
in method 'gncEmployeeSetUsername', argument 2 of type 'char const *'
in method 'gncEmployeeSetID', argument 1 of type 'GncEmployee *'
in method 'gncEmployeeSetID', argument 2 of type 'char const *'
in method 'gncCustomerSetNotes', argument 1 of type 'GncCustomer *'
in method 'gncCustomerSetNotes', argument 2 of type 'char const *'
in method 'gncCustomerSetName', argument 1 of type 'GncCustomer *'
in method 'gncCustomerSetName', argument 2 of type 'char const *'
in method 'gncCustomerSetID', argument 1 of type 'GncCustomer *'
in method 'gncCustomerSetID', argument 2 of type 'char const *'
OOOOOOOOOOO:gncOwnerApplyPayment
in method 'gncOwnerApplyPayment', argument 2 of type 'Transaction **'
in method 'gncOwnerApplyPayment', argument 3 of type 'GList *'
in method 'gncOwnerApplyPayment', argument 4 of type 'Account *'
in method 'gncOwnerApplyPayment', argument 5 of type 'Account *'
in method 'gncOwnerApplyPayment', argument 6 of type 'gnc_numeric'
invalid null reference in method 'gncOwnerApplyPayment', argument 6 of type 'gnc_numeric'
in method 'gncOwnerApplyPayment', argument 7 of type 'gnc_numeric'
invalid null reference in method 'gncOwnerApplyPayment', argument 7 of type 'gnc_numeric'
in method 'gncOwnerApplyPayment', argument 9 of type 'char const *'
in method 'gncOwnerApplyPayment', argument 10 of type 'char const *'
OOOOOOOOO:gncOwnerCreatePaymentLot
in method 'gncOwnerCreatePaymentLot', argument 2 of type 'Transaction **'
in method 'gncOwnerCreatePaymentLot', argument 3 of type 'Account *'
in method 'gncOwnerCreatePaymentLot', argument 4 of type 'Account *'
in method 'gncOwnerCreatePaymentLot', argument 5 of type 'gnc_numeric'
invalid null reference in method 'gncOwnerCreatePaymentLot', argument 5 of type 'gnc_numeric'
in method 'gncOwnerCreatePaymentLot', argument 6 of type 'gnc_numeric'
invalid null reference in method 'gncOwnerCreatePaymentLot', argument 6 of type 'gnc_numeric'
in method 'gncOwnerCreatePaymentLot', argument 8 of type 'char const *'
in method 'gncOwnerCreatePaymentLot', argument 9 of type 'char const *'
OO:gnc_commodity_table_get_commodities
in method 'gnc_commodity_table_get_commodities', argument 1 of type 'gnc_commodity_table const *'
in method 'gnc_commodity_table_get_commodities', argument 2 of type 'char const *'
OO:gnc_commodity_table_delete_namespace
in method 'gnc_commodity_table_delete_namespace', argument 1 of type 'gnc_commodity_table *'
in method 'gnc_commodity_table_delete_namespace', argument 2 of type 'char const *'
OO:gnc_commodity_table_find_namespace
in method 'gnc_commodity_table_find_namespace', argument 1 of type 'gnc_commodity_table const *'
in method 'gnc_commodity_table_find_namespace', argument 2 of type 'char const *'
OOO:gnc_commodity_table_add_namespace
in method 'gnc_commodity_table_add_namespace', argument 1 of type 'gnc_commodity_table *'
in method 'gnc_commodity_table_add_namespace', argument 2 of type 'char const *'
in method 'gnc_commodity_table_add_namespace', argument 3 of type 'QofBook *'
OO:gnc_commodity_table_has_namespace
in method 'gnc_commodity_table_has_namespace', argument 1 of type 'gnc_commodity_table const *'
in method 'gnc_commodity_table_has_namespace', argument 2 of type 'char const *'
OOO:gnc_commodity_table_find_full
in method 'gnc_commodity_table_find_full', argument 1 of type 'gnc_commodity_table const *'
in method 'gnc_commodity_table_find_full', argument 2 of type 'char const *'
in method 'gnc_commodity_table_find_full', argument 3 of type 'char const *'
OO:gnc_commodity_table_lookup_unique
in method 'gnc_commodity_table_lookup_unique', argument 1 of type 'gnc_commodity_table const *'
in method 'gnc_commodity_table_lookup_unique', argument 2 of type 'char const *'
OOO:gnc_commodity_table_lookup
in method 'gnc_commodity_table_lookup', argument 1 of type 'gnc_commodity_table const *'
in method 'gnc_commodity_table_lookup', argument 2 of type 'char const *'
in method 'gnc_commodity_table_lookup', argument 3 of type 'char const *'
O:gnc_commodity_namespace_is_iso
in method 'gnc_commodity_namespace_is_iso', argument 1 of type 'char const *'
OO:gnc_commodity_set_user_symbol
in method 'gnc_commodity_set_user_symbol', argument 1 of type 'gnc_commodity *'
in method 'gnc_commodity_set_user_symbol', argument 2 of type 'char const *'
in method 'gnc_commodity_set_quote_tz', argument 1 of type 'gnc_commodity *'
in method 'gnc_commodity_set_quote_tz', argument 2 of type 'char const *'
in method 'gnc_commodity_set_cusip', argument 1 of type 'gnc_commodity *'
in method 'gnc_commodity_set_cusip', argument 2 of type 'char const *'
in method 'gnc_commodity_set_fullname', argument 1 of type 'gnc_commodity *'
in method 'gnc_commodity_set_fullname', argument 2 of type 'char const *'
OO:gnc_commodity_set_namespace
in method 'gnc_commodity_set_namespace', argument 1 of type 'gnc_commodity *'
in method 'gnc_commodity_set_namespace', argument 2 of type 'char const *'
in method 'gnc_commodity_set_mnemonic', argument 1 of type 'gnc_commodity *'
in method 'gnc_commodity_set_mnemonic', argument 2 of type 'char const *'
in method 'gnc_commodity_new', argument 1 of type 'QofBook *'
in method 'gnc_commodity_new', argument 2 of type 'char const *'
in method 'gnc_commodity_new', argument 3 of type 'char const *'
in method 'gnc_commodity_new', argument 4 of type 'char const *'
in method 'gnc_commodity_new', argument 5 of type 'char const *'
in method 'gnc_commodity_new', argument 6 of type 'int'
O:gnc_quote_source_lookup_by_internal
in method 'gnc_quote_source_lookup_by_internal', argument 1 of type 'char const *'
in method 'gnc_quote_source_add_new', argument 1 of type 'char const *'
in method 'qof_query_build_param_list', argument 1 of type 'char const *'
in method 'qof_session_begin', argument 1 of type 'QofSession *'
in method 'qof_session_begin', argument 2 of type 'char const *'
in method 'gnc_lot_set_notes', argument 1 of type 'GNCLot *'
in method 'gnc_lot_set_notes', argument 2 of type 'char const *'
in method 'gnc_lot_set_title', argument 1 of type 'GNCLot *'
in method 'gnc_lot_set_title', argument 2 of type 'char const *'
in method 'xaccTransVoid', argument 1 of type 'Transaction *'
in method 'xaccTransVoid', argument 2 of type 'char const *'
OOOO:xaccTransOrder_num_action
in method 'xaccTransOrder_num_action', argument 1 of type 'Transaction const *'
in method 'xaccTransOrder_num_action', argument 2 of type 'char const *'
in method 'xaccTransOrder_num_action', argument 3 of type 'Transaction const *'
in method 'xaccTransOrder_num_action', argument 4 of type 'char const *'
in method 'xaccTransSetReadOnly', argument 1 of type 'Transaction *'
in method 'xaccTransSetReadOnly', argument 2 of type 'char const *'
in method 'xaccTransSetNotes', argument 1 of type 'Transaction *'
in method 'xaccTransSetNotes', argument 2 of type 'char const *'
in method 'xaccTransSetAssociation', argument 1 of type 'Transaction *'
in method 'xaccTransSetAssociation', argument 2 of type 'char const *'
in method 'xaccTransSetDescription', argument 1 of type 'Transaction *'
in method 'xaccTransSetDescription', argument 2 of type 'char const *'
in method 'xaccTransSetNum', argument 1 of type 'Transaction *'
in method 'xaccTransSetNum', argument 2 of type 'char const *'
in method 'dxaccAccountSetQuoteTZ', argument 1 of type 'Account *'
in method 'dxaccAccountSetQuoteTZ', argument 2 of type 'char const *'
OO:xaccAccountSetTaxUSPayerNameSource
in method 'xaccAccountSetTaxUSPayerNameSource', argument 1 of type 'Account *'
in method 'xaccAccountSetTaxUSPayerNameSource', argument 2 of type 'char const *'
in method 'xaccAccountSetTaxUSCode', argument 1 of type 'Account *'
in method 'xaccAccountSetTaxUSCode', argument 2 of type 'char const *'
in method 'xaccAccountFindSplitByDesc', argument 1 of type 'Account const *'
in method 'xaccAccountFindSplitByDesc', argument 2 of type 'char const *'
in method 'xaccAccountFindTransByDesc', argument 1 of type 'Account const *'
in method 'xaccAccountFindTransByDesc', argument 2 of type 'char const *'
in method 'xaccAccountStringToEnum', argument 1 of type 'char const *'
in method 'xaccAccountStringToType', argument 1 of type 'char const *'
in method 'xaccAccountStringToType', argument 2 of type 'GNCAccountType *'
in method 'gnc_account_lookup_by_code', argument 1 of type 'Account const *'
in method 'gnc_account_lookup_by_code', argument 2 of type 'char const *'
in method 'gnc_account_lookup_by_name', argument 1 of type 'Account const *'
in method 'gnc_account_lookup_by_name', argument 2 of type 'char const *'
in method 'dxaccAccountSetPriceSrc', argument 1 of type 'Account *'
in method 'dxaccAccountSetPriceSrc', argument 2 of type 'char const *'
in method 'xaccAccountSetLastNum', argument 1 of type 'Account *'
in method 'xaccAccountSetLastNum', argument 2 of type 'char const *'
in method 'xaccAccountSetNotes', argument 1 of type 'Account *'
in method 'xaccAccountSetNotes', argument 2 of type 'char const *'
in method 'xaccAccountSetSortOrder', argument 1 of type 'Account *'
in method 'xaccAccountSetSortOrder', argument 2 of type 'char const *'
in method 'xaccAccountSetFilter', argument 1 of type 'Account *'
in method 'xaccAccountSetFilter', argument 2 of type 'char const *'
in method 'xaccAccountSetColor', argument 1 of type 'Account *'
in method 'xaccAccountSetColor', argument 2 of type 'char const *'
in method 'xaccAccountSetDescription', argument 1 of type 'Account *'
in method 'xaccAccountSetDescription', argument 2 of type 'char const *'
in method 'xaccAccountSetCode', argument 1 of type 'Account *'
in method 'xaccAccountSetCode', argument 2 of type 'char const *'
in method 'xaccAccountSetName', argument 1 of type 'Account *'
in method 'xaccAccountSetName', argument 2 of type 'char const *'
in method 'xaccSplitSetAction', argument 1 of type 'Split *'
in method 'xaccSplitSetAction', argument 2 of type 'char const *'
in method 'xaccSplitSetMemo', argument 1 of type 'Split *'
in method 'xaccSplitSetMemo', argument 2 of type 'char const *'
OOO:xaccTransHasSplitsInStateByAccount
in method 'xaccTransHasSplitsInStateByAccount', argument 1 of type 'Transaction const *'
in method 'xaccTransHasSplitsInStateByAccount', argument 2 of type 'char'
in method 'xaccTransHasSplitsInStateByAccount', argument 3 of type 'Account const *'
in method 'xaccTransHasSplitsInState', argument 1 of type 'Transaction const *'
in method 'xaccTransHasSplitsInState', argument 2 of type 'char'
in method 'xaccTransSetTxnType', argument 1 of type 'Transaction *'
in method 'xaccTransSetTxnType', argument 2 of type 'char'
in method 'xaccSplitSetReconcile', argument 1 of type 'Split *'
in method 'xaccSplitSetReconcile', argument 2 of type 'char'
in method 'delete_AccountClass', argument 1 of type 'AccountClass *'
in method 'delete_GncLotClass', argument 1 of type 'GncLotClass *'
in method 'delete__QofQueryPredData', argument 1 of type 'struct _QofQueryPredData *'
in method 'delete_GncGUID', argument 1 of type 'union GNC_INTERNAL_GUID *'
in method 'delete__gnc_numeric', argument 1 of type 'struct _gnc_numeric *'
in method 'delete__gnc_monetary', argument 1 of type 'struct _gnc_monetary *'
in method 'delete__gncAccountValue', argument 1 of type 'struct _gncAccountValue *'
in method 'gnc_price_set_value', argument 1 of type 'GNCPrice *'
in method 'gnc_price_set_value', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_price_set_value', argument 2 of type 'gnc_numeric'
in method 'gnc_price_lookup', argument 1 of type 'GncGUID const *'
in method 'gnc_price_lookup', argument 2 of type 'QofBook *'
in method 'gnc_price_get_commodity', argument 1 of type 'GNCPrice const *'
in method 'gnc_price_get_currency', argument 1 of type 'GNCPrice const *'
in method 'gnc_price_get_time', argument 1 of type 'GNCPrice const *'
in method 'gnc_price_get_value', argument 1 of type 'GNCPrice const *'
in method 'gnc_price_equal', argument 1 of type 'GNCPrice const *'
in method 'gnc_price_equal', argument 2 of type 'GNCPrice const *'
in method '_QofQueryPredData_how_set', argument 1 of type 'struct _QofQueryPredData *'
in method '_QofQueryPredData_how_set', argument 2 of type 'QofQueryCompare'
in method 'GncGUID___align_me_set', argument 1 of type 'union GNC_INTERNAL_GUID *'
in method 'GncGUID___align_me_set', argument 2 of type 'gint'
in method 'gnc_price_print', argument 1 of type 'GNCPrice *'
in method 'gnc_price_print', argument 2 of type 'FILE *'
in method 'gnc_price_print', argument 3 of type 'int'
in method '_gnc_numeric_num_set', argument 1 of type 'struct _gnc_numeric *'
in method '_gnc_numeric_denom_set', argument 1 of type 'struct _gnc_numeric *'
in method 'gnc_price_list_insert', argument 1 of type 'PriceList **'
in method 'gnc_price_list_insert', argument 2 of type 'GNCPrice *'
in method 'gnc_price_list_remove', argument 1 of type 'PriceList **'
in method 'gnc_price_list_remove', argument 2 of type 'GNCPrice *'
in method 'gnc_price_list_destroy', argument 1 of type 'PriceList *'
in method 'gnc_price_list_equal', argument 1 of type 'PriceList *'
in method 'gnc_price_list_equal', argument 2 of type 'PriceList *'
in method 'gnc_pricedb_get_db', argument 1 of type 'QofBook *'
in method 'gnc_collection_get_pricedb', argument 1 of type 'QofCollection *'
in method 'gnc_pricedb_destroy', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_begin_edit', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_commit_edit', argument 1 of type 'GNCPriceDB *'
OO:gnc_pricedb_set_bulk_update
in method 'gnc_pricedb_set_bulk_update', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_add_price', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_add_price', argument 2 of type 'GNCPrice *'
in method 'gnc_pricedb_remove_price', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_remove_price', argument 2 of type 'GNCPrice *'
OOOO:gnc_pricedb_remove_old_prices
in method 'gnc_pricedb_remove_old_prices', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_lookup_latest', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_lookup_latest', argument 2 of type 'gnc_commodity const *'
in method 'gnc_pricedb_lookup_latest', argument 3 of type 'gnc_commodity const *'
OO:gnc_pricedb_lookup_latest_any_currency
in method 'gnc_pricedb_lookup_latest_any_currency', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_lookup_latest_any_currency', argument 2 of type 'gnc_commodity const *'
in method 'gnc_pricedb_has_prices', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_has_prices', argument 2 of type 'gnc_commodity const *'
in method 'gnc_pricedb_has_prices', argument 3 of type 'gnc_commodity const *'
in method 'gnc_pricedb_get_prices', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_get_prices', argument 2 of type 'gnc_commodity const *'
in method 'gnc_pricedb_get_prices', argument 3 of type 'gnc_commodity const *'
OOOO:gnc_pricedb_lookup_at_time
in method 'gnc_pricedb_lookup_at_time', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_lookup_at_time', argument 2 of type 'gnc_commodity const *'
in method 'gnc_pricedb_lookup_at_time', argument 3 of type 'gnc_commodity const *'
in method 'gnc_pricedb_lookup_day', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_lookup_day', argument 2 of type 'gnc_commodity const *'
in method 'gnc_pricedb_lookup_day', argument 3 of type 'gnc_commodity const *'
OOOO:gnc_pricedb_lookup_nearest_in_time
in method 'gnc_pricedb_lookup_nearest_in_time', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_lookup_nearest_in_time', argument 2 of type 'gnc_commodity const *'
in method 'gnc_pricedb_lookup_nearest_in_time', argument 3 of type 'gnc_commodity const *'
OOO:gnc_pricedb_lookup_nearest_in_time_any_currency
in method 'gnc_pricedb_lookup_nearest_in_time_any_currency', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_lookup_nearest_in_time_any_currency', argument 2 of type 'gnc_commodity const *'
OOOO:gnc_pricedb_lookup_latest_before
in method 'gnc_pricedb_lookup_latest_before', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_lookup_latest_before', argument 2 of type 'gnc_commodity *'
in method 'gnc_pricedb_lookup_latest_before', argument 3 of type 'gnc_commodity *'
OOO:gnc_pricedb_lookup_latest_before_any_currency
in method 'gnc_pricedb_lookup_latest_before_any_currency', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_lookup_latest_before_any_currency', argument 2 of type 'gnc_commodity *'
OOOO:gnc_pricedb_convert_balance_latest_price
in method 'gnc_pricedb_convert_balance_latest_price', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_convert_balance_latest_price', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_pricedb_convert_balance_latest_price', argument 2 of type 'gnc_numeric'
in method 'gnc_pricedb_convert_balance_latest_price', argument 3 of type 'gnc_commodity const *'
in method 'gnc_pricedb_convert_balance_latest_price', argument 4 of type 'gnc_commodity const *'
OOOOO:gnc_pricedb_convert_balance_nearest_price
in method 'gnc_pricedb_convert_balance_nearest_price', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_convert_balance_nearest_price', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_pricedb_convert_balance_nearest_price', argument 2 of type 'gnc_numeric'
in method 'gnc_pricedb_convert_balance_nearest_price', argument 3 of type 'gnc_commodity const *'
in method 'gnc_pricedb_convert_balance_nearest_price', argument 4 of type 'gnc_commodity const *'
OOOO:gnc_pricedb_foreach_price
in method 'gnc_pricedb_foreach_price', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_foreach_price', argument 2 of type 'gboolean (*)(GNCPrice *,gpointer)'
in method 'gnc_pricedb_foreach_price', argument 3 of type 'gpointer'
OOO:gnc_commodity_table_foreach_commodity
in method 'gnc_commodity_table_foreach_commodity', argument 1 of type 'gnc_commodity_table const *'
in method 'gnc_commodity_table_foreach_commodity', argument 2 of type 'gboolean (*)(gnc_commodity *,gpointer)'
in method 'gnc_commodity_table_foreach_commodity', argument 3 of type 'gpointer'
in method 'qof_collection_foreach', argument 1 of type 'QofCollection const *'
in method 'qof_collection_foreach', argument 2 of type 'QofInstanceForeachCB'
in method 'qof_collection_foreach', argument 3 of type 'gpointer'
in method 'qof_session_export', argument 1 of type 'QofSession *'
in method 'qof_session_export', argument 2 of type 'QofSession *'
in method 'qof_session_export', argument 3 of type 'QofPercentageFunc'
in method 'qof_session_safe_save', argument 1 of type 'QofSession *'
in method 'qof_session_safe_save', argument 2 of type 'QofPercentageFunc'
in method 'qof_session_save', argument 1 of type 'QofSession *'
in method 'qof_session_save', argument 2 of type 'QofPercentageFunc'
in method 'qof_session_load', argument 1 of type 'QofSession *'
in method 'qof_session_load', argument 2 of type 'QofPercentageFunc'
in method 'xaccAccountFindOpenLots', argument 1 of type 'Account const *'
in method 'xaccAccountFindOpenLots', argument 2 of type 'gboolean (*)(GNCLot *,gpointer)'
in method 'xaccAccountFindOpenLots', argument 3 of type 'gpointer'
in method 'xaccAccountFindOpenLots', argument 4 of type 'GCompareFunc'
invalid null reference in method 'xaccAccountFindOpenLots', argument 4 of type 'GCompareFunc'
in method 'xaccAccountForEachLot', argument 1 of type 'Account const *'
in method 'xaccAccountForEachLot', argument 2 of type 'gpointer (*)(GNCLot *,gpointer)'
in method 'xaccAccountForEachLot', argument 3 of type 'gpointer'
OOO:gnc_account_foreach_descendant_until
in method 'gnc_account_foreach_descendant_until', argument 1 of type 'Account const *'
in method 'gnc_account_foreach_descendant_until', argument 2 of type 'AccountCb2'
in method 'gnc_account_foreach_descendant_until', argument 3 of type 'gpointer'
OOO:gnc_account_foreach_descendant
in method 'gnc_account_foreach_descendant', argument 1 of type 'Account const *'
in method 'gnc_account_foreach_descendant', argument 2 of type 'AccountCb'
in method 'gnc_account_foreach_descendant', argument 3 of type 'gpointer'
in method 'gnc_account_foreach_child', argument 1 of type 'Account const *'
in method 'gnc_account_foreach_child', argument 2 of type 'AccountCb'
in method 'gnc_account_foreach_child', argument 3 of type 'gpointer'
in method 'gnc_pricedb_get_num_prices', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_equal', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_equal', argument 2 of type 'GNCPriceDB *'
in method 'gnc_pricedb_print_contents', argument 1 of type 'GNCPriceDB *'
in method 'gnc_pricedb_print_contents', argument 2 of type 'FILE *'
O:AccountClass_parent_class_get
in method 'AccountClass_parent_class_get', argument 1 of type 'AccountClass *'
O:GncLotClass_parent_class_get
in method 'GncLotClass_parent_class_get', argument 1 of type 'GncLotClass *'
O:_QofQueryPredData_type_name_get
in method '_QofQueryPredData_type_name_get', argument 1 of type 'struct _QofQueryPredData *'
in method 'gnc_monetary_create', argument 1 of type 'gnc_commodity *'
in method 'gnc_monetary_create', argument 2 of type 'gnc_numeric'
invalid null reference in method 'gnc_monetary_create', argument 2 of type 'gnc_numeric'
in method 'gnc_monetary_value', argument 1 of type 'gnc_monetary'
invalid null reference in method 'gnc_monetary_value', argument 1 of type 'gnc_monetary'
in method 'xaccSplitGetCapGains', argument 1 of type 'Split *'
in method 'xaccAccountHasTrades', argument 1 of type 'Account const *'
OOO:xaccAccountFindEarliestOpenLot
in method 'xaccAccountFindEarliestOpenLot', argument 1 of type 'Account *'
in method 'xaccAccountFindEarliestOpenLot', argument 2 of type 'gnc_numeric'
invalid null reference in method 'xaccAccountFindEarliestOpenLot', argument 2 of type 'gnc_numeric'
in method 'xaccAccountFindEarliestOpenLot', argument 3 of type 'gnc_commodity *'
OOO:xaccAccountFindLatestOpenLot
in method 'xaccAccountFindLatestOpenLot', argument 1 of type 'Account *'
in method 'xaccAccountFindLatestOpenLot', argument 2 of type 'gnc_numeric'
invalid null reference in method 'xaccAccountFindLatestOpenLot', argument 2 of type 'gnc_numeric'
in method 'xaccAccountFindLatestOpenLot', argument 3 of type 'gnc_commodity *'
OO:xaccAccountGetDefaultGainAccount
in method 'xaccAccountGetDefaultGainAccount', argument 1 of type 'Account const *'
in method 'xaccAccountGetDefaultGainAccount', argument 2 of type 'gnc_commodity const *'
OO:xaccAccountSetDefaultGainAccount
in method 'xaccAccountSetDefaultGainAccount', argument 1 of type 'Account *'
in method 'xaccAccountSetDefaultGainAccount', argument 2 of type 'Account const *'
in method 'xaccSplitGetCapGainsSplit', argument 1 of type 'Split const *'
O:xaccSplitGetGainsSourceSplit
in method 'xaccSplitGetGainsSourceSplit', argument 1 of type 'Split const *'
in method 'xaccSplitAssign', argument 1 of type 'Split *'
in method 'GncGUID_data_get', argument 1 of type 'union GNC_INTERNAL_GUID *'
in method '_gnc_monetary_commodity_get', argument 1 of type 'struct _gnc_monetary *'
in method '_gnc_monetary_value_get', argument 1 of type 'struct _gnc_monetary *'
in method 'gnc_monetary_commodity', argument 1 of type 'gnc_monetary'
invalid null reference in method 'gnc_monetary_commodity', argument 1 of type 'gnc_monetary'
O:_gncAccountValue_account_get
in method '_gncAccountValue_account_get', argument 1 of type 'struct _gncAccountValue *'
in method '_gncAccountValue_value_get', argument 1 of type 'struct _gncAccountValue *'
in method 'xaccSplitAssignToLot', argument 1 of type 'Split *'
in method 'xaccSplitAssignToLot', argument 2 of type 'GNCLot *'
in method 'xaccSplitComputeCapGains', argument 1 of type 'Split *'
in method 'xaccSplitComputeCapGains', argument 2 of type 'Account *'
in method 'xaccLotComputeCapGains', argument 1 of type 'GNCLot *'
in method 'xaccLotComputeCapGains', argument 2 of type 'Account *'
in method 'xaccScrubLot', argument 1 of type 'GNCLot *'
in method 'xaccAccountScrubLots', argument 1 of type 'Account *'
OO:AccountClass_parent_class_set
in method 'AccountClass_parent_class_set', argument 1 of type 'AccountClass *'
in method 'AccountClass_parent_class_set', argument 2 of type 'QofInstanceClass'
invalid null reference in method 'AccountClass_parent_class_set', argument 2 of type 'QofInstanceClass'
OO:GncLotClass_parent_class_set
in method 'GncLotClass_parent_class_set', argument 1 of type 'GncLotClass *'
in method 'GncLotClass_parent_class_set', argument 2 of type 'QofInstanceClass'
invalid null reference in method 'GncLotClass_parent_class_set', argument 2 of type 'QofInstanceClass'
OO:_QofQueryPredData_type_name_set
in method '_QofQueryPredData_type_name_set', argument 1 of type 'struct _QofQueryPredData *'
in method '_QofQueryPredData_type_name_set', argument 2 of type 'QofType'
invalid null reference in method '_QofQueryPredData_type_name_set', argument 2 of type 'QofType'
in method 'GncGUID_data_set', argument 1 of type 'union GNC_INTERNAL_GUID *'
in method 'GncGUID_data_set', argument 2 of type 'guchar [16]'
invalid null reference in variable 'data' of type 'guchar [16]'
OO:_gnc_monetary_commodity_set
in method '_gnc_monetary_commodity_set', argument 1 of type 'struct _gnc_monetary *'
in method '_gnc_monetary_commodity_set', argument 2 of type 'gnc_commodity *'
in method '_gnc_monetary_value_set', argument 1 of type 'struct _gnc_monetary *'
in method '_gnc_monetary_value_set', argument 2 of type 'gnc_numeric *'
OO:_gncAccountValue_account_set
in method '_gncAccountValue_account_set', argument 1 of type 'struct _gncAccountValue *'
in method '_gncAccountValue_account_set', argument 2 of type 'Account *'
in method '_gncAccountValue_value_set', argument 1 of type 'struct _gncAccountValue *'
in method '_gncAccountValue_value_set', argument 2 of type 'gnc_numeric *'
in method 'xaccAccountTreeScrubLots', argument 1 of type 'Account *'
in method 'gncVendorGetName', argument 1 of type 'GncVendor const *'
O:xaccSplitGetCorrAccountFullName
in method 'xaccSplitGetCorrAccountFullName', argument 1 of type 'Split const *'
in method 'xaccAccountGetFilter', argument 1 of type 'Account const *'
in method 'xaccAccountGetDescription', argument 1 of type 'Account const *'
in method 'xaccAccountGetColor', argument 1 of type 'Account const *'
in method 'xaccSplitGetCorrAccountName', argument 1 of type 'Split const *'
in method 'xaccSplitGetCorrAccountCode', argument 1 of type 'Split const *'
in method 'xaccAccountGetName', argument 1 of type 'Account const *'
in method 'xaccAccountGetCode', argument 1 of type 'Account const *'
in method 'xaccAccountGetSortOrder', argument 1 of type 'Account const *'
in method 'gnc_lot_get_title', argument 1 of type 'GNCLot const *'
in method 'xaccTransGetReadOnly', argument 1 of type 'Transaction const *'
in method 'xaccTransGetVoidReason', argument 1 of type 'Transaction const *'
in method 'xaccTransGetNum', argument 1 of type 'Transaction const *'
in method 'xaccTransGetDescription', argument 1 of type 'Transaction const *'
in method 'xaccTransGetAssociation', argument 1 of type 'Transaction const *'
in method 'xaccTransGetNotes', argument 1 of type 'Transaction const *'
in method 'xaccAccountGetNotes', argument 1 of type 'Account const *'
in method 'xaccAccountGetLastNum', argument 1 of type 'Account const *'
in method 'dxaccAccountGetPriceSrc', argument 1 of type 'Account const *'
in method 'xaccAccountTypeEnumAsString', argument 1 of type 'GNCAccountType'
in method 'xaccAccountGetTypeStr', argument 1 of type 'GNCAccountType'
in method 'xaccAccountGetTaxUSCode', argument 1 of type 'Account const *'
O:xaccAccountGetTaxUSPayerNameSource
in method 'xaccAccountGetTaxUSPayerNameSource', argument 1 of type 'Account const *'
in method 'dxaccAccountGetQuoteTZ', argument 1 of type 'Account const *'
in method 'gncInvoiceGetNotes', argument 1 of type 'GncInvoice const *'
in method 'gncInvoiceGetTypeString', argument 1 of type 'GncInvoice const *'
in method 'gncCustomerGetID', argument 1 of type 'GncCustomer const *'
O:gnc_commodity_get_user_symbol
in method 'gnc_commodity_get_user_symbol', argument 1 of type 'gnc_commodity const *'
in method 'gncCustomerGetNotes', argument 1 of type 'GncCustomer const *'
in method 'gncEmployeeGetID', argument 1 of type 'GncEmployee const *'
in method 'gncEmployeeGetUsername', argument 1 of type 'GncEmployee const *'
in method 'gncEntryGetNotes', argument 1 of type 'GncEntry const *'
in method 'gnc_commodity_get_cusip', argument 1 of type 'gnc_commodity const *'
O:gnc_commodity_get_unique_name
in method 'gnc_commodity_get_unique_name', argument 1 of type 'gnc_commodity const *'
in method 'gnc_commodity_get_quote_tz', argument 1 of type 'gnc_commodity const *'
in method 'gncJobGetReference', argument 1 of type 'GncJob const *'
O:gnc_commodity_get_default_symbol
in method 'gnc_commodity_get_default_symbol', argument 1 of type 'gnc_commodity const *'
O:gnc_commodity_get_nice_symbol
in method 'gnc_commodity_get_nice_symbol', argument 1 of type 'gnc_commodity const *'
O:gnc_commodity_namespace_get_name
in method 'gnc_commodity_namespace_get_name', argument 1 of type 'gnc_commodity_namespace const *'
in method 'gncAddressGetAddr4', argument 1 of type 'GncAddress const *'
O:gnc_numeric_errorCode_to_string
in method 'gnc_numeric_errorCode_to_string', argument 1 of type 'GNCNumericErrorCode'
in method 'qof_session_get_url', argument 1 of type 'QofSession const *'
in method 'qof_session_get_file_path', argument 1 of type 'QofSession const *'
in method 'gncEmployeeGetName', argument 1 of type 'GncEmployee const *'
in method 'gnc_commodity_get_namespace', argument 1 of type 'gnc_commodity const *'
in method 'gnc_commodity_get_printname', argument 1 of type 'gnc_commodity const *'
in method 'gnc_commodity_get_fullname', argument 1 of type 'gnc_commodity const *'
in method 'gncVendorGetNotes', argument 1 of type 'GncVendor const *'
O:gnc_quote_source_get_internal_name
in method 'gnc_quote_source_get_internal_name', argument 1 of type 'gnc_quote_source const *'
O:gnc_commodity_get_namespace_compat
in method 'gnc_commodity_get_namespace_compat', argument 1 of type 'gnc_commodity const *'
O:qof_session_get_error_message
in method 'qof_session_get_error_message', argument 1 of type 'QofSession const *'
in method 'gncCustomerGetName', argument 1 of type 'GncCustomer const *'
O:gnc_quote_source_get_user_name
in method 'gnc_quote_source_get_user_name', argument 1 of type 'gnc_quote_source const *'
in method 'gnc_commodity_get_mnemonic', argument 1 of type 'gnc_commodity const *'
in method 'gnc_price_get_typestr', argument 1 of type 'GNCPrice const *'
in method 'gncEmployeeGetAcl', argument 1 of type 'GncEmployee const *'
in method 'gncAmountTypeToString', argument 1 of type 'GncAmountType'
in method 'qofEntryGetInvDiscHow', argument 1 of type 'GncEntry const *'
in method 'qofEntryGetInvDiscType', argument 1 of type 'GncEntry const *'
in method 'gncVendorGetID', argument 1 of type 'GncVendor const *'
in method 'gncBillTermGetName', argument 1 of type 'GncBillTerm const *'
in method 'gncBillTermGetDescription', argument 1 of type 'GncBillTerm const *'
in method 'gncInvoiceGetID', argument 1 of type 'GncInvoice const *'
in method 'gncAddressGetFax', argument 1 of type 'GncAddress const *'
in method 'gncJobGetID', argument 1 of type 'GncJob const *'
in method 'gncEntryDiscountHowToString', argument 1 of type 'GncDiscountHow'
in method 'gncJobGetName', argument 1 of type 'GncJob const *'
in method 'gncInvoiceGetBillingID', argument 1 of type 'GncInvoice const *'
in method 'gncEntryPaymentTypeToString', argument 1 of type 'GncEntryPaymentType'
in method 'gncEntryGetDescription', argument 1 of type 'GncEntry const *'
in method 'gncEntryGetAction', argument 1 of type 'GncEntry const *'
in method 'xaccSplitGetMemo', argument 1 of type 'Split const *'
in method 'gncAddressGetName', argument 1 of type 'GncAddress const *'
in method 'gncAddressGetPhone', argument 1 of type 'GncAddress const *'
in method 'gncAddressGetEmail', argument 1 of type 'GncAddress const *'
in method 'gncAddressGetAddr1', argument 1 of type 'GncAddress const *'
in method 'gnc_price_get_source_string', argument 1 of type 'GNCPrice const *'
in method 'gncAddressGetAddr3', argument 1 of type 'GncAddress const *'
in method 'gncAddressGetAddr2', argument 1 of type 'GncAddress const *'
in method 'xaccSplitGetAction', argument 1 of type 'Split const *'
in method 'xaccSplitGetType', argument 1 of type 'Split const *'
in method 'gncTaxTableGetName', argument 1 of type 'GncTaxTable const *'
in method 'gncEmployeeGetLanguage', argument 1 of type 'GncEmployee const *'
in method 'gncTaxIncludedTypeToString', argument 1 of type 'GncTaxIncluded'
in method 'gnc_lot_get_notes', argument 1 of type 'GNCLot const *'
QOF_STRING_MATCH_CASEINSENSITIVE
GNCPriceDB *|struct gnc_price_db_s *
gchar *|QofIdTypeConst|QofIdType
_p_f_p_q_const__char_double__void
QofPercentageFunc|void (*)(char const *,double)
_p_f_p_gnc_commodity_p_void__gboolean
gboolean (*)(gnc_commodity *,void *)|gboolean (*)(gnc_commodity *,gpointer)
_p_f_p_QofInstance_p_void__void
QofInstanceForeachCB|void (*)(QofInstance *,void *)
_p_f_p_GNCPrice_p_void__gboolean
gboolean (*)(GNCPrice *,void *)|gboolean (*)(GNCPrice *,gpointer)
void *(*)(GNCLot *,void *)|gpointer (*)(GNCLot *,gpointer)
_p_f_p_GNCLot_p_void__gboolean
gboolean (*)(GNCLot *,void *)|gboolean (*)(GNCLot *,gpointer)
AccountCb|void (*)(Account *,void *)
void *(*)(Account *,void *)|AccountCb2
struct _gnc_numeric *|gnc_numeric *|_gnc_numeric *
struct _gnc_monetary *|gnc_monetary *|_gnc_monetary *
struct _gncVendorClass *|GncVendorClass *
struct _gncVendor *|GncVendor *
struct _gncTaxTableEntry *|GncTaxTableEntry *
struct _gncTaxTableClass *|GncTaxTableClass *
struct _gncTaxTable *|GncTaxTable *
struct _gncJobClass *|GncJobClass *
struct _gncInvoiceClass *|GncInvoiceClass *
struct _gncInvoice *|GncInvoice *
struct _gncEntryClass *|GncEntryClass *
struct _gncEmployeeClass *|GncEmployeeClass *
struct _gncEmployee *|GncEmployee *
struct _gncCustomerClass *|GncCustomerClass *
struct _gncCustomer *|GncCustomer *
struct _gncBillTermClass *|GncBillTermClass *
struct _gncBillTerm *|GncBillTerm *
struct _gncAddressClass *|GncAddressClass *
struct _gncAddress *|GncAddress *
struct _gncAccountValue *|GncAccountValue *|_gncAccountValue *
struct _TransactionClass *|TransactionClass *
struct _SplitClass *|SplitClass *
struct _QofSession *|QofSession *
struct _QofQueryPredData *|QofQueryPredData *|_QofQueryPredData *
struct _GncPriceDBClass *|GNCPriceDBClass *
struct _GncPriceClass *|GNCPriceClass *
_p__GncCommodityNamespaceClass
struct _GncCommodityNamespaceClass *|gnc_commodity_namespaceClass *
struct _GncCommodityClass *|gnc_commodityClass *
enum QuoteSourceType *|QuoteSourceType *
enum QofStringMatch *|QofStringMatch *
enum QofQueryOp *|QofQueryOp *
enum QofQueryCompare *|QofQueryCompare *
enum QofNumericMatch *|QofNumericMatch *
enum QofGuidMatch *|QofGuidMatch *
enum QofDateMatch *|QofDateMatch *
QofCollection *|struct QofCollection_s *
enum QofCharMatch *|QofCharMatch *
QofBackend *|struct QofBackend_s *
QofBackendProvider *|struct QofBackendProvider_s *
enum QofBackendError *|QofBackendError *
enum PriceSource *|PriceSource *
enum GncTaxIncluded *|GncTaxIncluded *
enum GncOwnerType *|GncOwnerType *
enum GncInvoiceType *|GncInvoiceType *
enum GncEntryPaymentType *|GncEntryPaymentType *
enum GncDiscountHow *|GncDiscountHow *
enum GncBillTermType *|GncBillTermType *
enum GncAmountType *|GncAmountType *
union GNC_INTERNAL_GUID *|GncGUID *|GNC_INTERNAL_GUID *
enum GNCPlaceholderType *|GNCPlaceholderType *
enum GNCNumericErrorCode *|GNCNumericErrorCode *
enum GNCAccountType *|GNCAccountType *
GList *|CommodityList *|AccountValueList *|MonetaryList *|EntryList *|GncTaxTableEntryList *|GncInvoiceList *|PriceList *
gncSplitGetGUID(Split * x) -> GncGUID
gncTransGetGUID(Transaction * x) -> GncGUID
gncAccountGetGUID(Account * x) -> GncGUID
xaccSplitConvertAmount(Split const * split, Account const * account) -> _gnc_numeric
xaccMallocSplit(QofBook * book) -> Split *
xaccSplitReinit(Split * split)
xaccSplitDestroy(Split * split) -> gboolean
xaccSplitCopyOnto(Split const * from_split, Split * to_split)
xaccSplitGetBook(Split const * split) -> QofBook *
xaccSplitGetAccount(Split const * split) -> Account *
xaccSplitSetAccount(Split * s, Account * acc)
xaccSplitGetParent(Split const * split) -> Transaction *
xaccSplitSetParent(Split * split, Transaction * trans)
xaccSplitGetLot(Split const * split) -> GNCLot *
xaccSplitSetLot(Split * split, GNCLot * lot)
xaccSplitGetSlots(Split const * split) -> KvpFrame *
xaccSplitSetSlots_nc(Split * s, KvpFrame * frm)
xaccSplitSetMemo(Split * split, char const * memo)
xaccSplitGetMemo(Split const * split) -> char const *
xaccSplitSetAction(Split * split, char const * action)
xaccSplitGetAction(Split const * split) -> char const *
xaccSplitSetReconcile(Split * split, char reconciled_flag)
xaccSplitGetReconcile(Split const * split) -> char
xaccSplitSetDateReconciledSecs
xaccSplitSetDateReconciledSecs(Split * split, time64 time)
xaccSplitSetDateReconciledTS(Split * split, Timespec * ts)
xaccSplitGetDateReconciledTS(Split const * split, Timespec * ts)
xaccSplitRetDateReconciledTS(Split const * split) -> Timespec
xaccSplitGetDateReconciled(Split const * split) -> time64
xaccSplitSetAmount(Split * split, _gnc_numeric amount)
xaccSplitGetAmount(Split const * split) -> _gnc_numeric
xaccSplitSetValue(Split * split, _gnc_numeric value)
xaccSplitGetValue(Split const * split) -> _gnc_numeric
xaccSplitSetSharePriceAndAmount
xaccSplitSetSharePriceAndAmount(Split * split, _gnc_numeric price, _gnc_numeric amount)
xaccSplitGetSharePrice(Split const * split) -> _gnc_numeric
xaccSplitSetBaseValue(Split * split, _gnc_numeric value, gnc_commodity const * base_currency)
xaccSplitGetBaseValue(Split const * split, gnc_commodity const * base_currency) -> _gnc_numeric
xaccSplitGetBalance(Split const * split) -> _gnc_numeric
xaccSplitGetClearedBalance(Split const * split) -> _gnc_numeric
xaccSplitGetReconciledBalance(Split const * split) -> _gnc_numeric
xaccSplitEqual(Split const * sa, Split const * sb, gboolean check_guids, gboolean check_balances, 
    gboolean check_txn_splits) -> gboolean
xaccSplitLookup(GncGUID guid, QofBook * book) -> Split *
xaccSplitListGetUniqueTransactions
xaccSplitListGetUniqueTransactions(GList const * splits) -> GList *
xaccSplitGetOtherSplit(Split const * split) -> Split *
xaccSplitGetType(Split const * s) -> char const *
xaccSplitMakeStockSplit(Split * s)
xaccSplitOrder(Split const * sa, Split const * sb) -> gint
xaccSplitOrderDateOnly(Split const * sa, Split const * sb) -> gint
xaccSplitCompareAccountFullNames
xaccSplitCompareAccountFullNames(Split const * sa, Split const * sb) -> int
xaccSplitCompareAccountCodes(Split const * sa, Split const * sb) -> int
xaccSplitCompareOtherAccountFullNames
xaccSplitCompareOtherAccountFullNames(Split const * sa, Split const * sb) -> int
xaccSplitCompareOtherAccountCodes
xaccSplitCompareOtherAccountCodes(Split const * sa, Split const * sb) -> int
xaccSplitGetCorrAccountFullName
xaccSplitGetCorrAccountFullName(Split const * sa) -> char *
xaccSplitGetCorrAccountName(Split const * sa) -> char const *
xaccSplitGetCorrAccountCode(Split const * sa) -> char const *
xaccSplitSetSharePrice(Split * split, _gnc_numeric price)
xaccSplitVoidFormerAmount(Split const * split) -> _gnc_numeric
xaccSplitVoidFormerValue(Split const * split) -> _gnc_numeric
gnc_account_get_children(Account const * account) -> AccountList *
gnc_account_get_children_sorted
gnc_account_get_children_sorted(Account const * account) -> AccountList *
gnc_account_get_descendants(Account const * account) -> AccountList *
gnc_account_get_descendants_sorted
gnc_account_get_descendants_sorted(Account const * account) -> AccountList *
AccountClass_parent_class_set(AccountClass self, QofInstanceClass parent_class)
AccountClass_parent_class_get(AccountClass self) -> QofInstanceClass
new_AccountClass() -> AccountClass
delete_AccountClass(AccountClass self)
gnc_account_get_type() -> GType
xaccMallocAccount(QofBook * book) -> Account *
gnc_account_create_root(QofBook * book) -> Account *
xaccCloneAccount(Account const * source, QofBook * book) -> Account *
xaccAccountBeginEdit(Account * account)
xaccAccountCommitEdit(Account * account)
xaccAccountDestroy(Account * account)
xaccAccountEqual(Account const * a, Account const * b, gboolean check_guids) -> gboolean
xaccAccountOrder(Account const * account_1, Account const * account_2) -> int
gnc_get_account_separator_string
gnc_get_account_separator_string() -> gchar const *
gnc_get_account_separator() -> gunichar
gnc_set_account_separator(gchar const * separator)
gnc_book_get_root_account(QofBook * book) -> Account *
gnc_book_set_root_account(QofBook * book, Account * root)
xaccAccountLookup(GncGUID guid, QofBook * book) -> Account *
gnc_account_name_violations_errmsg
gnc_account_name_violations_errmsg(gchar const * separator, GList * invalid_account_names) -> gchar *
gnc_account_list_name_violations
gnc_account_list_name_violations(QofBook * book, gchar const * separator) -> GList *
gnc_account_get_book(Account const * account) -> QofBook *
xaccAccountSetType(Account * account, GNCAccountType arg2)
xaccAccountSetName(Account * account, char const * name)
xaccAccountSetCode(Account * account, char const * code)
xaccAccountSetDescription(Account * account, char const * desc)
xaccAccountSetColor(Account * account, char const * color)
xaccAccountSetFilter(Account * account, char const * filter)
xaccAccountSetSortOrder(Account * account, char const * sortorder)
xaccAccountSetNotes(Account * account, char const * notes)
xaccAccountSetLastNum(Account * account, char const * num)
gnc_account_set_policy(Account * account, GNCPolicy * policy)
xaccAccountGetType(Account const * account) -> GNCAccountType
xaccAccountIsPriced(Account const * acc) -> gboolean
gnc_account_set_start_balance(Account * acc, _gnc_numeric start_baln)
gnc_account_set_start_cleared_balance
gnc_account_set_start_cleared_balance(Account * acc, _gnc_numeric start_baln)
gnc_account_set_start_reconciled_balance
gnc_account_set_start_reconciled_balance(Account * acc, _gnc_numeric start_baln)
gnc_account_set_balance_dirty(Account * acc)
gnc_account_set_sort_dirty(Account * acc)
gnc_account_insert_split(Account * acc, Split * s) -> gboolean
gnc_account_remove_split(Account * acc, Split * s) -> gboolean
xaccAccountGetName(Account const * account) -> char const *
xaccAccountGetCode(Account const * account) -> char const *
xaccAccountGetDescription(Account const * account) -> char const *
xaccAccountGetColor(Account const * account) -> char const *
xaccAccountGetFilter(Account const * account) -> char const *
xaccAccountGetSortOrder(Account const * account) -> char const *
xaccAccountGetNotes(Account const * account) -> char const *
xaccAccountGetLastNum(Account const * account) -> char const *
gnc_account_get_policy(Account * account) -> GNCPolicy *
xaccAccountRecomputeBalance(Account * arg1)
xaccAccountSortSplits(Account * acc, gboolean force)
gnc_account_get_full_name(Account const * account) -> gchar *
dxaccAccountSetPriceSrc(Account * account, char const * src)
dxaccAccountGetPriceSrc(Account const * account) -> char const *
xaccAccountGetAutoInterestXfer
xaccAccountGetAutoInterestXfer(Account const * account, gboolean default_value) -> gboolean
xaccAccountSetAutoInterestXfer
xaccAccountSetAutoInterestXfer(Account * account, gboolean value)
xaccAccountSetCommodity(Account * account, gnc_commodity * comm)
xaccAccountGetCommodity(Account const * account) -> gnc_commodity *
gnc_account_get_currency_or_parent
gnc_account_get_currency_or_parent(Account const * account) -> gnc_commodity *
xaccAccountGetCommoditySCU(Account const * account) -> int
xaccAccountGetCommoditySCUi(Account const * account) -> int
xaccAccountSetCommoditySCU(Account * account, int frac)
xaccAccountSetNonStdSCU(Account * account, gboolean flag)
xaccAccountGetNonStdSCU(Account const * account) -> gboolean
xaccAccountGetBalance(Account const * account) -> _gnc_numeric
xaccAccountGetClearedBalance(Account const * account) -> _gnc_numeric
xaccAccountGetReconciledBalance
xaccAccountGetReconciledBalance(Account const * account) -> _gnc_numeric
xaccAccountGetPresentBalance(Account const * account) -> _gnc_numeric
xaccAccountGetProjectedMinimumBalance
xaccAccountGetProjectedMinimumBalance(Account const * account) -> _gnc_numeric
xaccAccountGetBalanceAsOfDate(Account * account, time64 date) -> _gnc_numeric
xaccAccountConvertBalanceToCurrency
xaccAccountConvertBalanceToCurrency(Account const * account, _gnc_numeric balance, gnc_commodity const * balance_currency, 
    gnc_commodity const * new_currency) -> _gnc_numeric
xaccAccountConvertBalanceToCurrencyAsOfDate
xaccAccountConvertBalanceToCurrencyAsOfDate(Account const * account, _gnc_numeric balance, gnc_commodity * balance_currency, 
    gnc_commodity * new_currency, time64 date) -> _gnc_numeric
xaccAccountGetBalanceInCurrency
xaccAccountGetBalanceInCurrency(Account const * account, gnc_commodity const * report_commodity, gboolean include_children) -> _gnc_numeric
xaccAccountGetClearedBalanceInCurrency
xaccAccountGetClearedBalanceInCurrency(Account const * account, gnc_commodity const * report_commodity, gboolean include_children) -> _gnc_numeric
xaccAccountGetReconciledBalanceInCurrency
xaccAccountGetReconciledBalanceInCurrency(Account const * account, gnc_commodity const * report_commodity, gboolean include_children) -> _gnc_numeric
xaccAccountGetPresentBalanceInCurrency
xaccAccountGetPresentBalanceInCurrency(Account const * account, gnc_commodity const * report_commodity, gboolean include_children) -> _gnc_numeric
xaccAccountGetProjectedMinimumBalanceInCurrency
xaccAccountGetProjectedMinimumBalanceInCurrency(Account const * account, gnc_commodity const * report_commodity, gboolean include_children) -> _gnc_numeric
xaccAccountGetBalanceAsOfDateInCurrency
xaccAccountGetBalanceAsOfDateInCurrency(Account * account, time64 date, gnc_commodity * report_commodity, gboolean include_children) -> _gnc_numeric
xaccAccountGetBalanceChangeForPeriod
xaccAccountGetBalanceChangeForPeriod(Account * acc, time64 date1, time64 date2, gboolean recurse) -> _gnc_numeric
gnc_account_append_child(Account * new_parent, Account * child)
gnc_account_remove_child(Account * parent, Account * child)
gnc_account_get_parent(Account const * account) -> Account *
gnc_account_get_root(Account * account) -> Account *
gnc_account_is_root(Account const * account) -> gboolean
gnc_account_n_children(Account const * account) -> gint
gnc_account_child_index(Account const * parent, Account const * child) -> gint
gnc_account_nth_child(Account const * parent, gint num) -> Account *
gnc_account_n_descendants(Account const * account) -> gint
gnc_account_get_current_depth(Account const * account) -> gint
gnc_account_get_tree_depth(Account const * account) -> gint
gnc_account_foreach_child(Account const * account, AccountCb func, gpointer user_data)
gnc_account_foreach_descendant
gnc_account_foreach_descendant(Account const * account, AccountCb func, gpointer user_data)
gnc_account_foreach_descendant_until
gnc_account_foreach_descendant_until(Account const * account, AccountCb2 func, gpointer user_data) -> gpointer
gnc_account_join_children(Account * to_parent, Account * from_parent)
gnc_account_merge_children(Account * parent)
xaccAccountSetReconcileChildrenStatus
xaccAccountSetReconcileChildrenStatus(Account * account, gboolean status)
xaccAccountGetReconcileChildrenStatus
xaccAccountGetReconcileChildrenStatus(Account const * account) -> gboolean
xaccAccountHasAncestor(Account const * acc, Account const * ancestor) -> gboolean
gnc_account_lookup_by_name(Account const * parent, char const * name) -> Account *
gnc_account_lookup_by_full_name
gnc_account_lookup_by_full_name(Account const * any_account, gchar const * name) -> Account *
gnc_account_lookup_by_code(Account const * parent, char const * code) -> Account *
xaccAccountTypeEnumAsString(GNCAccountType type) -> char const *
xaccAccountStringToType(char const * str, GNCAccountType * type) -> gboolean
xaccAccountStringToEnum(char const * str) -> GNCAccountType
xaccAccountGetTypeStr(GNCAccountType type) -> char const *
xaccParentAccountTypesCompatibleWith
xaccParentAccountTypesCompatibleWith(GNCAccountType type) -> guint32
xaccAccountTypesCompatible(GNCAccountType parent_type, GNCAccountType child_type) -> gboolean
xaccAccountTypesValid() -> guint32
xaccAccountIsAssetLiabType(GNCAccountType t) -> gboolean
xaccAccountIsAPARType(GNCAccountType t) -> gboolean
xaccAccountIsEquityType(GNCAccountType t) -> gboolean
xaccAccountGetSplitList(Account const * account) -> SplitList *
xaccAccountMoveAllSplits(Account * accfrom, Account * accto)
xaccAccountForEachTransaction(Account const * account, TransactionCallback proc, void * data) -> gint
xaccAccountFindTransByDesc(Account const * account, char const * description) -> Transaction *
xaccAccountFindSplitByDesc(Account const * account, char const * description) -> Split *
xaccAccountInsertLot(Account * arg1, GNCLot * arg2)
xaccAccountRemoveLot(Account * arg1, GNCLot * arg2)
xaccAccountGetLotList(Account const * account) -> LotList *
xaccAccountForEachLot(Account const * acc, gpointer (*)(GNCLot *,gpointer) proc, gpointer user_data) -> gpointer
xaccAccountFindOpenLots(Account const * acc, gboolean (*)(GNCLot *,gpointer) match_func, gpointer user_data, 
    GCompareFunc sort_func) -> LotList *
xaccAccountGetReconcileLastDate
xaccAccountGetReconcileLastDate(Account const * account, time64 * last_date) -> gboolean
xaccAccountSetReconcileLastDate
xaccAccountSetReconcileLastDate(Account * account, time64 last_date)
xaccAccountGetReconcileLastInterval
xaccAccountGetReconcileLastInterval(Account const * account, int * months, int * days) -> gboolean
xaccAccountSetReconcileLastInterval
xaccAccountSetReconcileLastInterval(Account * account, int months, int days)
xaccAccountGetReconcilePostponeDate
xaccAccountGetReconcilePostponeDate(Account const * account, time64 * postpone_date) -> gboolean
xaccAccountSetReconcilePostponeDate
xaccAccountSetReconcilePostponeDate(Account * account, time64 postpone_date)
xaccAccountGetReconcilePostponeBalance
xaccAccountGetReconcilePostponeBalance(Account const * account, _gnc_numeric balance) -> gboolean
xaccAccountSetReconcilePostponeBalance
xaccAccountSetReconcilePostponeBalance(Account * account, _gnc_numeric balance)
xaccAccountClearReconcilePostpone
xaccAccountClearReconcilePostpone(Account * account)
xaccAccountGetPlaceholder(Account const * account) -> gboolean
xaccAccountSetPlaceholder(Account * account, gboolean val)
xaccAccountGetDescendantPlaceholder
xaccAccountGetDescendantPlaceholder(Account const * account) -> GNCPlaceholderType
xaccAccountGetHidden(Account const * acc) -> gboolean
xaccAccountSetHidden(Account * acc, gboolean val)
xaccAccountIsHidden(Account const * acc) -> gboolean
xaccAccountGetTaxRelated(Account const * account) -> gboolean
xaccAccountSetTaxRelated(Account * account, gboolean tax_related)
xaccAccountGetTaxUSCode(Account const * account) -> char const *
xaccAccountSetTaxUSCode(Account * account, char const * code)
xaccAccountGetTaxUSPayerNameSource
xaccAccountGetTaxUSPayerNameSource(Account const * account) -> char const *
xaccAccountSetTaxUSPayerNameSource
xaccAccountSetTaxUSPayerNameSource(Account * account, char const * source)
xaccAccountGetTaxUSCopyNumber(Account const * account) -> gint64
xaccAccountSetTaxUSCopyNumber(Account * account, gint64 copy_number)
xaccAccountSetMark(Account * account, short mark)
xaccClearMark(Account * account, short val)
xaccClearMarkDown(Account * account, short val)
gnc_account_tree_begin_staged_transaction_traversals
gnc_account_tree_begin_staged_transaction_traversals(Account * acc)
xaccSplitsBeginStagedTransactionTraversals
xaccSplitsBeginStagedTransactionTraversals(SplitList * splits)
xaccAccountBeginStagedTransactionTraversals
xaccAccountBeginStagedTransactionTraversals(Account const * account)
xaccTransactionTraverse(Transaction * trans, int stage) -> gboolean
xaccAccountStagedTransactionTraversal
xaccAccountStagedTransactionTraversal(Account const * a, unsigned int stage, TransactionCallback thunk, void * data) -> int
gnc_account_tree_staged_transaction_traversal
gnc_account_tree_staged_transaction_traversal(Account const * account, unsigned int stage, TransactionCallback thunk, void * data) -> int
xaccAccountTreeForEachTransaction
xaccAccountTreeForEachTransaction(Account * acc, TransactionCallback proc, void * data) -> int
DxaccAccountSetCurrency(Account * account, gnc_commodity * currency)
DxaccAccountGetCurrency(Account const * account) -> gnc_commodity *
dxaccAccountSetQuoteTZ(Account * account, char const * tz)
dxaccAccountGetQuoteTZ(Account const * account) -> char const *
gnc_transaction_get_type() -> GType
xaccMallocTransaction(QofBook * book) -> Transaction *
xaccTransDestroy(Transaction * trans)
xaccTransClone(Transaction const * t) -> Transaction *
xaccTransEqual(Transaction const * ta, Transaction const * tb, gboolean check_guids, gboolean check_splits, 
    gboolean check_balances, gboolean assume_ordered) -> gboolean
xaccTransBeginEdit(Transaction * trans)
xaccTransCommitEdit(Transaction * trans)
xaccTransRollbackEdit(Transaction * trans)
xaccTransIsOpen(Transaction const * trans) -> gboolean
xaccTransLookup(GncGUID guid, QofBook * book) -> Transaction *
xaccTransCopyToClipBoard(Transaction const * from_trans) -> Transaction *
xaccTransCopyOnto(Transaction const * from_trans, Transaction * to_trans)
xaccTransCopyFromClipBoard(Transaction const * from_trans, Transaction * to_trans, Account const * from_acc, 
    Account * to_acc, gboolean no_date)
xaccTransFindSplitByAccount(Transaction const * trans, Account const * acc) -> Split *
xaccTransScrubGains(Transaction * trans, Account * gain_acc)
gnc_book_count_transactions(QofBook * book) -> guint
xaccTransUseTradingAccounts(Transaction const * trans) -> gboolean
xaccTransSortSplits(Transaction * trans)
xaccTransSetTxnType(Transaction * trans, char type)
xaccTransGetTxnType(Transaction const * trans) -> char
xaccTransSetNum(Transaction * trans, char const * num)
xaccTransSetDescription(Transaction * trans, char const * desc)
xaccTransSetAssociation(Transaction * trans, char const * assoc)
xaccTransSetNotes(Transaction * trans, char const * notes)
xaccTransGetNum(Transaction const * trans) -> char const *
xaccTransGetDescription(Transaction const * trans) -> char const *
xaccTransGetAssociation(Transaction const * trans) -> char const *
xaccTransGetNotes(Transaction const * trans) -> char const *
xaccTransSetIsClosingTxn(Transaction * trans, gboolean is_closing)
xaccTransGetIsClosingTxn(Transaction const * trans) -> gboolean
xaccTransGetSplit(Transaction const * trans, int i) -> Split *
xaccTransGetSplitIndex(Transaction const * trans, Split const * split) -> int
xaccTransGetSplitList(Transaction const * trans) -> SplitList *
xaccTransStillHasSplit(Transaction const * trans, Split const * s) -> gboolean
xaccTransGetFirstPaymentAcctSplit
xaccTransGetFirstPaymentAcctSplit(Transaction const * trans) -> Split *
xaccTransGetFirstAPARAcctSplit
xaccTransGetFirstAPARAcctSplit(Transaction const * trans) -> Split *
xaccTransSetReadOnly(Transaction * trans, char const * reason)
xaccTransClearReadOnly(Transaction * trans)
xaccTransGetReadOnly(Transaction const * trans) -> char const *
xaccTransIsReadonlyByPostedDate
xaccTransIsReadonlyByPostedDate(Transaction const * trans) -> gboolean
xaccTransInFutureByPostedDate(Transaction const * trans) -> gboolean
xaccTransCountSplits(Transaction const * trans) -> int
xaccTransHasReconciledSplits(Transaction const * trans) -> gboolean
xaccTransHasReconciledSplitsByAccount
xaccTransHasReconciledSplitsByAccount(Transaction const * trans, Account const * account) -> gboolean
xaccTransHasSplitsInState(Transaction const * trans, char const state) -> gboolean
xaccTransHasSplitsInStateByAccount
xaccTransHasSplitsInStateByAccount(Transaction const * trans, char const state, Account const * account) -> gboolean
xaccTransGetCurrency(Transaction const * trans) -> gnc_commodity *
xaccTransSetCurrency(Transaction * trans, gnc_commodity * curr)
xaccTransGetImbalanceValue(Transaction const * trans) -> _gnc_numeric
xaccTransGetImbalance(Transaction const * trans) -> MonetaryList *
xaccTransIsBalanced(Transaction const * trans) -> gboolean
xaccTransGetAccountValue(Transaction const * trans, Account const * account) -> _gnc_numeric
xaccTransGetAccountAmount(Transaction const * trans, Account const * account) -> _gnc_numeric
xaccTransGetRateForCommodity(Transaction const * trans, gnc_commodity const * split_com, Split const * split_to_exclude, 
    _gnc_numeric rate) -> gboolean
xaccTransGetAccountConvRate(Transaction const * txn, Account const * acc) -> _gnc_numeric
xaccTransGetAccountBalance(Transaction const * trans, Account const * account) -> _gnc_numeric
xaccTransOrder(Transaction const * ta, Transaction const * tb) -> int
xaccTransOrder_num_action(Transaction const * ta, char const * actna, Transaction const * tb, char const * actnb) -> int
xaccTransSetDate(Transaction * trans, int day, int mon, int year)
xaccTransSetDatePostedGDate(Transaction * trans, GDate date)
xaccTransSetDatePostedSecs(Transaction * trans, time64 time)
xaccTransSetDatePostedSecsNormalized
xaccTransSetDatePostedSecsNormalized(Transaction * trans, time64 time)
xaccTransSetDatePostedTS(Transaction * trans, Timespec const * ts)
xaccTransSetDateEnteredSecs(Transaction * trans, time64 time)
xaccTransSetDateEnteredTS(Transaction * trans, Timespec const * ts)
xaccTransSetDateDueTS(Transaction * trans, Timespec const * ts)
xaccTransGetDate(Transaction const * trans) -> time64
xaccTransGetDatePostedTS(Transaction const * trans, Timespec * ts)
xaccTransRetDatePostedTS(Transaction const * trans) -> Timespec
xaccTransGetDatePostedGDate(Transaction const * trans) -> GDate
xaccTransGetDateEntered(Transaction const * trans) -> time64
xaccTransGetDateEnteredTS(Transaction const * trans, Timespec * ts)
xaccTransRetDateEnteredTS(Transaction const * trans) -> Timespec
xaccTransRetDateDueTS(Transaction const * trans) -> Timespec
xaccTransGetDateDueTS(Transaction const * trans, Timespec * ts)
xaccTransVoid(Transaction * transaction, char const * reason)
xaccTransUnvoid(Transaction * transaction)
xaccTransReverse(Transaction * transaction) -> Transaction *
xaccTransGetReversedBy(Transaction const * trans) -> Transaction *
xaccTransGetVoidStatus(Transaction const * transaction) -> gboolean
xaccTransGetVoidReason(Transaction const * transaction) -> char const *
xaccTransGetVoidTime(Transaction const * tr) -> Timespec
GncLotClass_parent_class_set(GncLotClass self, QofInstanceClass parent_class)
GncLotClass_parent_class_get(GncLotClass self) -> QofInstanceClass
new_GncLotClass() -> GncLotClass
delete_GncLotClass(GncLotClass self)
gnc_lot_new(QofBook * arg1) -> GNCLot *
gnc_lot_destroy(GNCLot * arg1)
gnc_lot_lookup(GncGUID guid, QofBook * book) -> GNCLot *
gnc_lot_get_book(GNCLot * arg1) -> QofBook *
gnc_lot_begin_edit(GNCLot * lot)
gnc_lot_commit_edit(GNCLot * lot)
gnc_lot_add_split(GNCLot * arg1, Split * arg2)
gnc_lot_remove_split(GNCLot * arg1, Split * arg2)
gnc_lot_get_split_list(GNCLot const * arg1) -> SplitList *
gnc_lot_count_splits(GNCLot const * arg1) -> gint
gnc_lot_get_account(GNCLot const * arg1) -> Account *
gnc_lot_set_account(GNCLot * arg1, Account * arg2)
gnc_lot_get_balance(GNCLot * arg1) -> _gnc_numeric
gnc_lot_get_balance_before(GNCLot const * arg1, Split const * arg2, _gnc_numeric arg3, _gnc_numeric arg4)
gnc_lot_is_closed(GNCLot * arg1) -> gboolean
gnc_lot_get_earliest_split(GNCLot * lot) -> Split *
gnc_lot_get_latest_split(GNCLot * lot) -> Split *
gnc_lot_set_closed_unknown(GNCLot * arg1)
gnc_lot_get_title(GNCLot const * arg1) -> char const *
gnc_lot_get_notes(GNCLot const * arg1) -> char const *
gnc_lot_set_title(GNCLot * arg1, char const * arg2)
gnc_lot_set_notes(GNCLot * arg1, char const * arg2)
gnc_lot_get_slots(GNCLot const * arg1) -> KvpFrame *
gnc_lot_make_default(Account * acc) -> GNCLot *
qof_backend_run_begin(QofBackend * be, QofInstance * inst)
qof_backend_begin_exists(QofBackend const * be) -> gboolean
qof_backend_run_commit(QofBackend * be, QofInstance * inst)
qof_backend_commit_exists(QofBackend const * be) -> gboolean
qof_backend_set_error(QofBackend * be, QofBackendError err)
qof_backend_get_error(QofBackend * be) -> QofBackendError
qof_backend_check_error(QofBackend * be) -> gboolean
qof_load_backend_library(gchar const * directory, gchar const * module_name) -> gboolean
qof_finalize_backend_libraries
qof_finalize_backend_libraries()
qof_book_get_backend(QofBook const * book) -> QofBackend *
qof_book_set_backend(QofBook * book, QofBackend * arg2)
qof_session_new() -> QofSession *
qof_session_destroy(QofSession * session)
qof_session_swap_data(QofSession * session_1, QofSession * session_2)
qof_session_begin(QofSession * session, char const * book_id, gboolean ignore_lock, gboolean create, 
    gboolean force)
qof_session_load(QofSession * session, QofPercentageFunc percentage_func)
qof_session_get_error(QofSession * session) -> QofBackendError
qof_session_get_error_message(QofSession const * session) -> char const *
qof_session_pop_error(QofSession * session) -> QofBackendError
qof_session_get_book(QofSession const * session) -> QofBook *
qof_session_get_file_path(QofSession const * session) -> char const *
qof_session_get_url(QofSession const * session) -> char const *
qof_session_save_in_progress(QofSession const * session) -> gboolean
qof_session_save(QofSession * session, QofPercentageFunc percentage_func)
qof_session_safe_save(QofSession * session, QofPercentageFunc percentage_func)
qof_session_end(QofSession * session)
qof_session_events_pending(QofSession const * session) -> gboolean
qof_session_process_events(QofSession * session) -> gboolean
qof_session_add_close_hook(GFunc fn, gpointer data)
qof_session_call_close_hooks(QofSession * session)
qof_session_export(QofSession * tmp_session, QofSession * real_session, QofPercentageFunc percentage_func) -> gboolean
qof_backend_get_registered_access_method_list
qof_backend_get_registered_access_method_list() -> GList *
qof_session_ensure_all_data_loaded
qof_session_ensure_all_data_loaded(QofSession * session)
qof_book_use_trading_accounts(QofBook const * book) -> gboolean
qof_book_uses_autoreadonly(QofBook const * book) -> gboolean
qof_book_get_num_days_autoreadonly
qof_book_get_num_days_autoreadonly(QofBook const * book) -> gint
qof_book_get_autoreadonly_gdate
qof_book_get_autoreadonly_gdate(QofBook const * book) -> GDate *
qof_book_use_split_action_for_num_field
qof_book_use_split_action_for_num_field(QofBook const * book) -> gboolean
qof_book_shutting_down(QofBook const * book) -> gboolean
qof_book_session_not_saved(QofBook const * book) -> gboolean
qof_collection_new(QofIdType type) -> QofCollection *
qof_collection_count(QofCollection const * col) -> guint
qof_collection_destroy(QofCollection * col)
qof_collection_get_type(QofCollection const * arg1) -> QofIdType
qof_collection_lookup_entity(QofCollection const * arg1, GncGUID arg2) -> QofInstance *
qof_collection_foreach(QofCollection const * arg1, QofInstanceForeachCB arg2, gpointer user_data)
qof_collection_get_data(QofCollection const * col) -> gpointer
qof_collection_set_data(QofCollection * col, gpointer user_data)
qof_collection_is_dirty(QofCollection const * col) -> gboolean
qof_collection_add_entity(QofCollection * coll, QofInstance * ent) -> gboolean
qof_collection_remove_entity(QofInstance * ent)
qof_collection_compare(QofCollection * target, QofCollection * merge) -> gint
qof_collection_from_glist(QofIdType type, GList const * glist) -> QofCollection *
qof_query_build_param_list(char const * param) -> QofQueryParamList *
qof_query_create() -> QofQuery *
qof_query_create_for(QofIdTypeConst obj_type) -> QofQuery *
qof_query_destroy(QofQuery * q)
qof_query_search_for(QofQuery * query, QofIdTypeConst obj_type)
qof_query_set_book(QofQuery * q, QofBook * book)
qof_query_add_term(QofQuery * query, QofQueryParamList * param_list, _QofQueryPredData pred_data, QofQueryOp op)
qof_query_add_guid_match(QofQuery * q, QofQueryParamList * param_list, GncGUID guid, QofQueryOp op)
qof_query_add_guid_list_match(QofQuery * q, QofQueryParamList * param_list, GList * guid_list, QofGuidMatch options, 
    QofQueryOp op)
qof_query_add_boolean_match(QofQuery * q, QofQueryParamList * param_list, gboolean value, QofQueryOp op)
qof_query_run(QofQuery * query) -> GList *
qof_query_last_run(QofQuery * query) -> GList *
qof_query_run_subquery(QofQuery * subquery, QofQuery const * primary_query) -> GList *
qof_query_clear(QofQuery * query)
qof_query_purge_terms(QofQuery * q, QofQueryParamList * param_list)
qof_query_has_terms(QofQuery * q) -> int
qof_query_num_terms(QofQuery * q) -> int
qof_query_has_term_type(QofQuery * q, QofQueryParamList * term_param) -> gboolean
qof_query_get_term_type(QofQuery * q, QofQueryParamList * term_param) -> GSList *
qof_query_copy(QofQuery * q) -> QofQuery *
qof_query_invert(QofQuery * q) -> QofQuery *
qof_query_merge(QofQuery * q1, QofQuery * q2, QofQueryOp op) -> QofQuery *
qof_query_merge_in_place(QofQuery * q1, QofQuery * q2, QofQueryOp op)
qof_query_set_sort_order(QofQuery * q, QofQueryParamList * primary_sort_params, QofQueryParamList * secondary_sort_params, 
    QofQueryParamList * tertiary_sort_params)
qof_query_set_sort_options(QofQuery * q, gint prim_op, gint sec_op, gint tert_op)
qof_query_set_sort_increasing(QofQuery * q, gboolean prim_inc, gboolean sec_inc, gboolean tert_inc)
qof_query_set_max_results(QofQuery * q, int n)
qof_query_equal(QofQuery const * q1, QofQuery const * q2) -> gboolean
qof_query_print(QofQuery * query)
qof_query_get_search_for(QofQuery const * q) -> QofIdType
qof_query_get_books(QofQuery * q) -> GList *
_QofQueryPredData_type_name_set
_QofQueryPredData_type_name_set(_QofQueryPredData self, QofType type_name)
_QofQueryPredData_type_name_get
_QofQueryPredData_type_name_get(_QofQueryPredData self) -> QofType
_QofQueryPredData_how_set(_QofQueryPredData self, QofQueryCompare how)
_QofQueryPredData_how_get(_QofQueryPredData self) -> QofQueryCompare
new__QofQueryPredData() -> _QofQueryPredData
delete__QofQueryPredData(_QofQueryPredData self)
_QofQueryPredData_swigregister
qof_query_string_predicate(QofQueryCompare how, gchar const * str, QofStringMatch options, gboolean is_regex) -> _QofQueryPredData
qof_query_date_predicate(QofQueryCompare how, QofDateMatch options, Timespec date) -> _QofQueryPredData
qof_query_numeric_predicate(QofQueryCompare how, QofNumericMatch options, _gnc_numeric value) -> _QofQueryPredData
qof_query_guid_predicate(QofGuidMatch options, GList * guids) -> _QofQueryPredData
qof_query_int32_predicate(QofQueryCompare how, gint32 val) -> _QofQueryPredData
qof_query_int64_predicate(QofQueryCompare how, gint64 val) -> _QofQueryPredData
qof_query_double_predicate(QofQueryCompare how, double val) -> _QofQueryPredData
qof_query_boolean_predicate(QofQueryCompare how, gboolean val) -> _QofQueryPredData
qof_query_char_predicate(QofCharMatch options, gchar const * chars) -> _QofQueryPredData
qof_query_collect_predicate(QofGuidMatch options, QofCollection * coll) -> _QofQueryPredData
qof_query_choice_predicate(QofGuidMatch options, GList * guids) -> _QofQueryPredData
qof_query_kvp_predicate(QofQueryCompare how, QofQueryParamList * path, KvpValue const * value) -> _QofQueryPredData
qof_query_kvp_predicate_path(QofQueryCompare how, gchar const * path, KvpValue const * value) -> _QofQueryPredData
qof_query_core_predicate_copy(_QofQueryPredData pdata) -> _QofQueryPredData
qof_query_core_predicate_free(_QofQueryPredData pdata)
qof_query_date_predicate_get_date
qof_query_date_predicate_get_date(_QofQueryPredData pd, Timespec * date) -> gboolean
qof_query_core_to_string(QofType arg1, gpointer object, QofParam * getter) -> char *
qof_string_number_compare_func
qof_string_number_compare_func(gpointer a, gpointer b, gint options, QofParam * this_param) -> int
GncGUID_data_set(GncGUID self, guchar [16] data)
GncGUID_data_get(GncGUID self) -> guchar [16]
GncGUID___align_me_set(GncGUID self, gint __align_me)
GncGUID___align_me_get(GncGUID self) -> gint
gnc_value_get_guid(GValue const * value) -> GncGUID
guid_copy(GncGUID guid) -> GncGUID
guid_to_string(GncGUID guid) -> gchar const *
guid_to_string_buff(GncGUID guid, gchar * buff) -> gchar *
string_to_guid(gchar const * string, GncGUID guid) -> gboolean
guid_equal(GncGUID guid_1, GncGUID guid_2) -> gboolean
guid_compare(GncGUID g1, GncGUID g2) -> gint
guid_hash_to_guint(gconstpointer ptr) -> guint
guid_g_hash_table_equal(gconstpointer guid_a, gconstpointer guid_b) -> gint
guid_hash_table_new() -> GHashTable *
_gnc_numeric_num_set(_gnc_numeric self, gint64 num)
_gnc_numeric_num_get(_gnc_numeric self) -> gint64
_gnc_numeric_denom_set(_gnc_numeric self, gint64 denom)
_gnc_numeric_denom_get(_gnc_numeric self) -> gint64
new__gnc_numeric() -> _gnc_numeric
delete__gnc_numeric(_gnc_numeric self)
gnc_numeric_create(gint64 num, gint64 denom) -> _gnc_numeric
gnc_numeric_zero() -> _gnc_numeric
double_to_gnc_numeric(double n, gint64 denom, gint how) -> _gnc_numeric
string_to_gnc_numeric(gchar const * str, _gnc_numeric n) -> gboolean
gnc_numeric_error(GNCNumericErrorCode error_code) -> _gnc_numeric
gnc_numeric_errorCode_to_string
gnc_numeric_errorCode_to_string(GNCNumericErrorCode error_code) -> char const *
gnc_numeric_num(_gnc_numeric a) -> gint64
gnc_numeric_denom(_gnc_numeric a) -> gint64
gnc_numeric_to_double(_gnc_numeric n) -> gdouble
gnc_numeric_to_string(_gnc_numeric n) -> gchar *
gnc_num_dbg_to_string(_gnc_numeric n) -> gchar *
gnc_numeric_check(_gnc_numeric a) -> GNCNumericErrorCode
gnc_numeric_compare(_gnc_numeric a, _gnc_numeric b) -> gint
gnc_numeric_zero_p(_gnc_numeric a) -> gboolean
gnc_numeric_negative_p(_gnc_numeric a) -> gboolean
gnc_numeric_positive_p(_gnc_numeric a) -> gboolean
gnc_numeric_eq(_gnc_numeric a, _gnc_numeric b) -> gboolean
gnc_numeric_equal(_gnc_numeric a, _gnc_numeric b) -> gboolean
gnc_numeric_same(_gnc_numeric a, _gnc_numeric b, gint64 denom, gint how) -> gint
gnc_numeric_add(_gnc_numeric a, _gnc_numeric b, gint64 denom, gint how) -> _gnc_numeric
gnc_numeric_sub(_gnc_numeric a, _gnc_numeric b, gint64 denom, gint how) -> _gnc_numeric
gnc_numeric_mul(_gnc_numeric a, _gnc_numeric b, gint64 denom, gint how) -> _gnc_numeric
gnc_numeric_div(_gnc_numeric x, _gnc_numeric y, gint64 denom, gint how) -> _gnc_numeric
gnc_numeric_neg(_gnc_numeric a) -> _gnc_numeric
gnc_numeric_abs(_gnc_numeric a) -> _gnc_numeric
gnc_numeric_add_fixed(_gnc_numeric a, _gnc_numeric b) -> _gnc_numeric
gnc_numeric_sub_fixed(_gnc_numeric a, _gnc_numeric b) -> _gnc_numeric
gnc_numeric_add_with_error(_gnc_numeric a, _gnc_numeric b, gint64 denom, gint how, _gnc_numeric error) -> _gnc_numeric
gnc_numeric_sub_with_error(_gnc_numeric a, _gnc_numeric b, gint64 denom, gint how, _gnc_numeric error) -> _gnc_numeric
gnc_numeric_mul_with_error(_gnc_numeric a, _gnc_numeric b, gint64 denom, gint how, _gnc_numeric error) -> _gnc_numeric
gnc_numeric_div_with_error(_gnc_numeric a, _gnc_numeric b, gint64 denom, gint how, _gnc_numeric error) -> _gnc_numeric
gnc_numeric_convert(_gnc_numeric n, gint64 denom, gint how) -> _gnc_numeric
gnc_numeric_reduce(_gnc_numeric n) -> _gnc_numeric
gnc_numeric_to_decimal(_gnc_numeric a, guint8 * max_decimal_places) -> gboolean
gnc_numeric_invert(_gnc_numeric num) -> _gnc_numeric
gnc_numeric_get_type() -> GType
pwr64(gint64 op, int exp) -> gint64
gnc_commodity_get_type() -> GType
gnc_commodity_namespace_get_type
gnc_commodity_namespace_get_type() -> GType
gnc_quote_source_fq_installed() -> gboolean
gnc_quote_source_set_fq_installed
gnc_quote_source_set_fq_installed(GList const * sources_list)
gnc_quote_source_num_entries(QuoteSourceType type) -> gint
gnc_quote_source_add_new(char const * name, gboolean supported) -> gnc_quote_source *
gnc_quote_source_lookup_by_internal
gnc_quote_source_lookup_by_internal(char const * internal_name) -> gnc_quote_source *
gnc_quote_source_lookup_by_ti(QuoteSourceType type, gint index) -> gnc_quote_source *
gnc_quote_source_get_supported
gnc_quote_source_get_supported(gnc_quote_source const * source) -> gboolean
gnc_quote_source_get_type(gnc_quote_source const * source) -> QuoteSourceType
gnc_quote_source_get_index(gnc_quote_source const * source) -> gint
gnc_quote_source_get_user_name
gnc_quote_source_get_user_name(gnc_quote_source const * source) -> char const *
gnc_quote_source_get_internal_name
gnc_quote_source_get_internal_name(gnc_quote_source const * source) -> char const *
gnc_commodity_new(QofBook * book, char const * fullname, char const * commodity_namespace, char const * mnemonic, 
    char const * cusip, int fraction) -> gnc_commodity *
gnc_commodity_destroy(gnc_commodity * cm)
gnc_commodity_copy(gnc_commodity * dest, gnc_commodity const * src)
gnc_commodity_clone(gnc_commodity const * src, QofBook * dest_book) -> gnc_commodity *
gnc_commodity_get_mnemonic(gnc_commodity const * cm) -> char const *
gnc_commodity_get_namespace(gnc_commodity const * cm) -> char const *
gnc_commodity_get_namespace_compat
gnc_commodity_get_namespace_compat(gnc_commodity const * cm) -> char const *
gnc_commodity_get_namespace_ds
gnc_commodity_get_namespace_ds(gnc_commodity const * cm) -> gnc_commodity_namespace *
gnc_commodity_get_fullname(gnc_commodity const * cm) -> char const *
gnc_commodity_get_printname(gnc_commodity const * cm) -> char const *
gnc_commodity_get_cusip(gnc_commodity const * cm) -> char const *
gnc_commodity_get_unique_name(gnc_commodity const * cm) -> char const *
gnc_commodity_get_fraction(gnc_commodity const * cm) -> int
gnc_commodity_get_quote_flag(gnc_commodity const * cm) -> gboolean
gnc_commodity_get_quote_source
gnc_commodity_get_quote_source(gnc_commodity const * cm) -> gnc_quote_source *
gnc_commodity_get_default_quote_source
gnc_commodity_get_default_quote_source(gnc_commodity const * cm) -> gnc_quote_source *
gnc_commodity_get_quote_tz(gnc_commodity const * cm) -> char const *
gnc_commodity_get_user_symbol(gnc_commodity const * cm) -> char const *
gnc_commodity_get_default_symbol
gnc_commodity_get_default_symbol(gnc_commodity const * cm) -> char const *
gnc_commodity_get_nice_symbol(gnc_commodity const * cm) -> char const *
gnc_commodity_set_mnemonic(gnc_commodity * cm, char const * mnemonic)
gnc_commodity_set_namespace(gnc_commodity * cm, char const * new_namespace)
gnc_commodity_set_fullname(gnc_commodity * cm, char const * fullname)
gnc_commodity_set_cusip(gnc_commodity * cm, char const * cusip)
gnc_commodity_set_fraction(gnc_commodity * cm, int smallest_fraction)
gnc_commodity_user_set_quote_flag
gnc_commodity_user_set_quote_flag(gnc_commodity * cm, gboolean const flag)
gnc_commodity_set_quote_flag(gnc_commodity * cm, gboolean const flag)
gnc_commodity_set_quote_source
gnc_commodity_set_quote_source(gnc_commodity * cm, gnc_quote_source * src)
gnc_commodity_set_quote_tz(gnc_commodity * cm, char const * tz)
gnc_commodity_set_user_symbol(gnc_commodity * cm, char const * user_symbol)
gnc_commodity_increment_usage_count
gnc_commodity_increment_usage_count(gnc_commodity * cm)
gnc_commodity_decrement_usage_count
gnc_commodity_decrement_usage_count(gnc_commodity * cm)
gnc_commodity_equiv(gnc_commodity const * a, gnc_commodity const * b) -> gboolean
gnc_commodity_equal(gnc_commodity const * a, gnc_commodity const * b) -> gboolean
gnc_commodity_compare(gnc_commodity const * a, gnc_commodity const * b) -> int
gnc_commodity_compare_void(void const * a, void const * b) -> int
gnc_commodity_namespace_is_iso
gnc_commodity_namespace_is_iso(char const * commodity_namespace) -> gboolean
gnc_commodity_is_iso(gnc_commodity const * cm) -> gboolean
gnc_commodity_is_currency(gnc_commodity const * cm) -> gboolean
gnc_commodity_table_get_table(QofBook * book) -> gnc_commodity_table *
gnc_commodity_table_lookup(gnc_commodity_table const * table, char const * commodity_namespace, char const * mnemonic) -> gnc_commodity *
gnc_commodity_table_lookup_unique
gnc_commodity_table_lookup_unique(gnc_commodity_table const * table, char const * unique_name) -> gnc_commodity *
gnc_commodity_table_find_full(gnc_commodity_table const * t, char const * commodity_namespace, char const * fullname) -> gnc_commodity *
gnc_commodity_find_commodity_by_guid
gnc_commodity_find_commodity_by_guid(GncGUID guid, QofBook * book) -> gnc_commodity *
gnc_commodity_table_insert(gnc_commodity_table * table, gnc_commodity * comm) -> gnc_commodity *
gnc_commodity_table_remove(gnc_commodity_table * table, gnc_commodity * comm)
gnc_commodity_table_add_default_data
gnc_commodity_table_add_default_data(gnc_commodity_table * table, QofBook * book) -> gboolean
gnc_commodity_namespace_get_name
gnc_commodity_namespace_get_name(gnc_commodity_namespace const * ns) -> char const *
gnc_commodity_namespace_get_commodity_list
gnc_commodity_namespace_get_commodity_list(gnc_commodity_namespace const * ns) -> GList *
gnc_commodity_table_has_namespace
gnc_commodity_table_has_namespace(gnc_commodity_table const * table, char const * commodity_namespace) -> int
gnc_commodity_table_get_namespaces
gnc_commodity_table_get_namespaces(gnc_commodity_table const * t) -> GList *
gnc_commodity_table_get_namespaces_list
gnc_commodity_table_get_namespaces_list(gnc_commodity_table const * t) -> GList *
gnc_commodity_table_add_namespace
gnc_commodity_table_add_namespace(gnc_commodity_table * table, char const * commodity_namespace, QofBook * book) -> gnc_commodity_namespace *
gnc_commodity_table_find_namespace
gnc_commodity_table_find_namespace(gnc_commodity_table const * table, char const * commodity_namespace) -> gnc_commodity_namespace *
gnc_commodity_table_delete_namespace
gnc_commodity_table_delete_namespace(gnc_commodity_table * table, char const * commodity_namespace)
gnc_commodity_table_get_size(gnc_commodity_table const * tbl) -> guint
gnc_commodity_table_get_commodities
gnc_commodity_table_get_commodities(gnc_commodity_table const * table, char const * commodity_namespace) -> CommodityList *
gnc_commodity_table_get_quotable_commodities
gnc_commodity_table_get_quotable_commodities(gnc_commodity_table const * table) -> CommodityList *
gnc_commodity_table_foreach_commodity
gnc_commodity_table_foreach_commodity(gnc_commodity_table const * table, gboolean (*)(gnc_commodity *,gpointer) f, gpointer user_data) -> gboolean
gnc_commodity_table_new() -> gnc_commodity_table *
gnc_commodity_table_destroy(gnc_commodity_table * table)
gnc_commodity_obtain_twin(gnc_commodity const * findlike, QofBook * book) -> gnc_commodity *
gnc_commodity_table_register() -> gboolean
gnc_commodity_begin_edit(gnc_commodity * cm)
gnc_commodity_commit_edit(gnc_commodity * cm)
_gnc_monetary_commodity_set(_gnc_monetary self, gnc_commodity * commodity)
_gnc_monetary_commodity_get(_gnc_monetary self) -> gnc_commodity *
_gnc_monetary_value_set(_gnc_monetary self, _gnc_numeric value)
_gnc_monetary_value_get(_gnc_monetary self) -> _gnc_numeric
new__gnc_monetary() -> _gnc_monetary
delete__gnc_monetary(_gnc_monetary self)
gnc_monetary_create(gnc_commodity * commod, _gnc_numeric val) -> _gnc_monetary
gnc_monetary_commodity(_gnc_monetary a) -> gnc_commodity *
gnc_monetary_value(_gnc_monetary a) -> _gnc_numeric
gnc_monetary_list_add_monetary
gnc_monetary_list_add_monetary(MonetaryList * list, _gnc_monetary mon) -> MonetaryList *
gnc_monetary_list_add_value(MonetaryList * list, gnc_commodity * commod, _gnc_numeric value) -> MonetaryList *
gnc_monetary_list_delete_zeros
gnc_monetary_list_delete_zeros(MonetaryList * list) -> MonetaryList *
gnc_monetary_list_free(MonetaryList * list)
qofOwnerGetType(GncOwner const * owner) -> QofIdTypeConst
qofOwnerGetOwner(GncOwner const * owner) -> QofInstance *
qofOwnerSetEntity(GncOwner * owner, QofInstance * ent)
GNC_IS_OWNER(QofInstance * ent) -> gboolean
gncOwnerTypeToQofIdType(GncOwnerType t) -> QofIdTypeConst
gncOwnerRegister() -> gboolean
gncOwnerInitUndefined(GncOwner * owner, gpointer obj)
gncOwnerInitCustomer(GncOwner * owner, GncCustomer * customer)
gncOwnerInitJob(GncOwner * owner, GncJob * job)
gncOwnerInitVendor(GncOwner * owner, GncVendor * vendor)
gncOwnerInitEmployee(GncOwner * owner, GncEmployee * employee)
gncOwnerGetType(GncOwner const * owner) -> GncOwnerType
gncOwnerIsValid(GncOwner const * owner) -> gboolean
gncOwnerGetUndefined(GncOwner const * owner) -> gpointer
gncOwnerGetCustomer(GncOwner const * owner) -> GncCustomer *
gncOwnerGetJob(GncOwner const * owner) -> GncJob *
gncOwnerGetVendor(GncOwner const * owner) -> GncVendor *
gncOwnerGetEmployee(GncOwner const * owner) -> GncEmployee *
gncOwnerGetID(GncOwner const * owner) -> char const *
gncOwnerGetName(GncOwner const * owner) -> char const *
gncOwnerGetAddr(GncOwner const * owner) -> GncAddress *
gncOwnerGetActive(GncOwner const * owner) -> gboolean
gncOwnerGetCurrency(GncOwner const * owner) -> gnc_commodity *
gncOwnerSetActive(GncOwner const * owner, gboolean active)
gncOwnerCopy(GncOwner const * src, GncOwner * dest)
gncOwnerEqual(GncOwner const * a, GncOwner const * b) -> gboolean
gncOwnerGCompareFunc(GncOwner const * a, GncOwner const * b) -> int
gncOwnerCompare(GncOwner const * a, GncOwner const * b) -> int
gncOwnerGetGUID(GncOwner const * owner) -> GncGUID
gncOwnerRetGUID(GncOwner * owner) -> GncGUID
gncOwnerGetEndOwner(GncOwner const * owner) -> GncOwner const *
gncOwnerGetEndGUID(GncOwner const * owner) -> GncGUID
gncOwnerAttachToLot(GncOwner const * owner, GNCLot * lot)
gncOwnerLotMatchOwnerFunc(GNCLot * lot, gpointer user_data) -> gboolean
gncOwnerLotsSortFunc(GNCLot * lotA, GNCLot * lotB) -> gint
gncOwnerGetOwnerFromLot(GNCLot * lot, GncOwner * owner) -> gboolean
gncOwnerGetOwnerFromTxn(Transaction * txn, GncOwner * owner) -> gboolean
gncOwnerGetOwnerFromTypeGuid(QofBook * book, GncOwner * owner, QofIdType type, GncGUID guid) -> gboolean
gncOwnerGetSlots(GncOwner * owner) -> KvpFrame *
gncOwnerCreatePaymentLot(GncOwner const * owner, Transaction ** preset_txn, Account * posted_acc, Account * xfer_acc, 
    _gnc_numeric amount, _gnc_numeric exch, Timespec date, char const * memo, 
    char const * num) -> GNCLot *
gncOwnerAutoApplyPaymentsWithLots
gncOwnerAutoApplyPaymentsWithLots(GncOwner const * owner, GList * lots)
gncOwnerApplyPayment(GncOwner const * owner, Transaction ** preset_txn, GList * lots, Account * posted_acc, 
    Account * xfer_acc, _gnc_numeric amount, _gnc_numeric exch, Timespec date, 
    char const * memo, char const * num, gboolean auto_pay)
gncOwnerFindOffsettingSplit(GNCLot * pay_lot, _gnc_numeric target_value) -> Split *
gncOwnerReduceSplitTo(Split * split, _gnc_numeric target_value) -> gboolean
gncOwnerSetLotLinkMemo(Transaction * ll_txn)
gncOwnerGetAccountTypesList(GncOwner const * owner) -> GList *
gncOwnerGetCommoditiesList(GncOwner const * owner) -> GList *
gncOwnerGetBalanceInCurrency(GncOwner const * owner, gnc_commodity const * report_currency) -> _gnc_numeric
gncOwnerFree(GncOwner * owner)
gncOwnerBeginEdit(GncOwner * owner)
gncOwnerDestroy(GncOwner * owner)
gnc_customer_get_type() -> GType
gncCustomerCreate(QofBook * book) -> GncCustomer *
gncCustomerDestroy(GncCustomer * customer)
gncCustomerBeginEdit(GncCustomer * customer)
gncCustomerCommitEdit(GncCustomer * customer)
gncCustomerSetID(GncCustomer * customer, char const * id)
gncCustomerSetName(GncCustomer * customer, char const * name)
gncCustomerSetNotes(GncCustomer * customer, char const * notes)
gncCustomerSetTerms(GncCustomer * customer, GncBillTerm * term)
gncCustomerSetTaxIncluded(GncCustomer * customer, GncTaxIncluded taxincl)
gncCustomerSetActive(GncCustomer * customer, gboolean active)
gncCustomerSetDiscount(GncCustomer * customer, _gnc_numeric discount)
gncCustomerSetCredit(GncCustomer * customer, _gnc_numeric credit)
gncCustomerSetCurrency(GncCustomer * customer, gnc_commodity * currency)
gncCustomerSetTaxTableOverride
gncCustomerSetTaxTableOverride(GncCustomer * customer, gboolean override)
gncCustomerSetTaxTable(GncCustomer * customer, GncTaxTable * table)
gncCustomerAddJob(GncCustomer * customer, GncJob * job)
gncCustomerRemoveJob(GncCustomer * customer, GncJob * job)
gncCustomerLookup(QofBook const * book, GncGUID guid) -> GncCustomer *
gncCustomerGetID(GncCustomer const * customer) -> char const *
gncCustomerGetName(GncCustomer const * customer) -> char const *
gncCustomerGetAddr(GncCustomer const * customer) -> GncAddress *
gncCustomerGetShipAddr(GncCustomer const * customer) -> GncAddress *
gncCustomerGetNotes(GncCustomer const * customer) -> char const *
gncCustomerGetTerms(GncCustomer const * customer) -> GncBillTerm *
gncCustomerGetTaxIncluded(GncCustomer const * customer) -> GncTaxIncluded
gncCustomerGetActive(GncCustomer const * customer) -> gboolean
gncCustomerGetDiscount(GncCustomer const * customer) -> _gnc_numeric
gncCustomerGetCredit(GncCustomer const * customer) -> _gnc_numeric
gncCustomerGetCurrency(GncCustomer const * customer) -> gnc_commodity *
gncCustomerGetTaxTableOverride
gncCustomerGetTaxTableOverride(GncCustomer const * customer) -> gboolean
gncCustomerGetTaxTable(GncCustomer const * customer) -> GncTaxTable *
gncCustomerCompare(GncCustomer const * a, GncCustomer const * b) -> int
gncCustomerEqual(GncCustomer const * a, GncCustomer const * b) -> gboolean
gncCustomerGetJoblist(GncCustomer const * customer, gboolean show_all) -> GList *
gncCustomerIsDirty(GncCustomer * customer) -> gboolean
gncCustomerRegister() -> gboolean
gncCustomerNextID(QofBook * book) -> gchar *
gnc_employee_get_type() -> GType
gncEmployeeCreate(QofBook * book) -> GncEmployee *
gncEmployeeDestroy(GncEmployee * employee)
gncEmployeeBeginEdit(GncEmployee * employee)
gncEmployeeCommitEdit(GncEmployee * employee)
gncEmployeeCompare(GncEmployee const * a, GncEmployee const * b) -> int
gncEmployeeSetID(GncEmployee * employee, char const * id)
gncEmployeeSetUsername(GncEmployee * employee, char const * username)
gncEmployeeSetName(GncEmployee * employee, char const * name)
gncEmployeeSetLanguage(GncEmployee * employee, char const * language)
gncEmployeeSetAcl(GncEmployee * employee, char const * acl)
gncEmployeeSetWorkday(GncEmployee * employee, _gnc_numeric workday)
gncEmployeeSetRate(GncEmployee * employee, _gnc_numeric rate)
gncEmployeeSetCurrency(GncEmployee * employee, gnc_commodity * currency)
gncEmployeeSetActive(GncEmployee * employee, gboolean active)
gncEmployeeSetCCard(GncEmployee * employee, Account * ccard_acc)
qofEmployeeSetAddr(GncEmployee * employee, QofInstance * addr_ent)
gncEmployeeGetBook(GncEmployee * employee) -> QofBook *
gncEmployeeGetID(GncEmployee const * employee) -> char const *
gncEmployeeGetUsername(GncEmployee const * employee) -> char const *
gncEmployeeGetName(GncEmployee const * employee) -> char const *
gncEmployeeGetAddr(GncEmployee const * employee) -> GncAddress *
gncEmployeeGetLanguage(GncEmployee const * employee) -> char const *
gncEmployeeGetAcl(GncEmployee const * employee) -> char const *
gncEmployeeGetWorkday(GncEmployee const * employee) -> _gnc_numeric
gncEmployeeGetRate(GncEmployee const * employee) -> _gnc_numeric
gncEmployeeGetCurrency(GncEmployee const * employee) -> gnc_commodity *
gncEmployeeGetActive(GncEmployee const * employee) -> gboolean
gncEmployeeGetCCard(GncEmployee const * employee) -> Account *
gncEmployeeLookup(QofBook const * book, GncGUID guid) -> GncEmployee *
gncEmployeeEqual(GncEmployee const * e1, GncEmployee const * e2) -> gboolean
gncEmployeeIsDirty(GncEmployee const * employee) -> gboolean
gnc_vendor_get_type() -> GType
gncVendorCreate(QofBook * book) -> GncVendor *
gncVendorDestroy(GncVendor * vendor)
gncVendorSetID(GncVendor * vendor, char const * id)
gncVendorSetName(GncVendor * vendor, char const * name)
gncVendorSetNotes(GncVendor * vendor, char const * notes)
gncVendorSetTerms(GncVendor * vendor, GncBillTerm * terms)
gncVendorSetTaxIncluded(GncVendor * vendor, GncTaxIncluded taxincl)
gncVendorSetCurrency(GncVendor * vendor, gnc_commodity * currency)
gncVendorSetActive(GncVendor * vendor, gboolean active)
gncVendorSetTaxTableOverride(GncVendor * vendor, gboolean override)
gncVendorSetTaxTable(GncVendor * vendor, GncTaxTable * table)
gncVendorAddJob(GncVendor * vendor, GncJob * job)
gncVendorRemoveJob(GncVendor * vendor, GncJob * job)
gncVendorBeginEdit(GncVendor * vendor)
gncVendorCommitEdit(GncVendor * vendor)
gncVendorGetID(GncVendor const * vendor) -> char const *
gncVendorGetName(GncVendor const * vendor) -> char const *
gncVendorGetAddr(GncVendor const * vendor) -> GncAddress *
gncVendorGetNotes(GncVendor const * vendor) -> char const *
gncVendorGetTerms(GncVendor const * vendor) -> GncBillTerm *
gncVendorGetTaxIncluded(GncVendor const * vendor) -> GncTaxIncluded
gncVendorGetCurrency(GncVendor const * vendor) -> gnc_commodity *
gncVendorGetActive(GncVendor const * vendor) -> gboolean
gncVendorGetTaxTableOverride(GncVendor const * vendor) -> gboolean
gncVendorGetTaxTable(GncVendor const * vendor) -> GncTaxTable *
gncVendorCompare(GncVendor const * a, GncVendor const * b) -> int
gncVendorLookup(QofBook const * book, GncGUID guid) -> GncVendor *
gncVendorEqual(GncVendor const * a, GncVendor const * b) -> gboolean
gncVendorIsDirty(GncVendor const * vendor) -> gboolean
gncVendorRegister() -> gboolean
gncVendorNextID(QofBook * book) -> gchar *
gnc_address_get_type() -> GType
gncAddressCreate(QofBook * book, QofInstance * parent) -> GncAddress *
gncAddressDestroy(GncAddress * addr)
gncAddressBeginEdit(GncAddress * addr)
gncAddressCommitEdit(GncAddress * addr)
gncAddressSetName(GncAddress * addr, char const * name)
gncAddressSetAddr1(GncAddress * addr, char const * addr1)
gncAddressSetAddr2(GncAddress * addr, char const * addr2)
gncAddressSetAddr3(GncAddress * addr, char const * addr3)
gncAddressSetAddr4(GncAddress * addr, char const * addr4)
gncAddressSetPhone(GncAddress * addr, char const * phone)
gncAddressSetFax(GncAddress * addr, char const * fax)
gncAddressSetEmail(GncAddress * addr, char const * email)
gncAddressClearDirty(GncAddress * address)
gncAddressGetName(GncAddress const * addr) -> char const *
gncAddressGetAddr1(GncAddress const * addr) -> char const *
gncAddressGetAddr2(GncAddress const * addr) -> char const *
gncAddressGetAddr3(GncAddress const * addr) -> char const *
gncAddressGetAddr4(GncAddress const * addr) -> char const *
gncAddressGetPhone(GncAddress const * addr) -> char const *
gncAddressGetFax(GncAddress const * addr) -> char const *
gncAddressGetEmail(GncAddress const * addr) -> char const *
gncAddressIsDirty(GncAddress const * addr) -> gboolean
gncAddressCompare(GncAddress const * a, GncAddress const * b) -> int
gncAddressEqual(GncAddress const * a, GncAddress const * b) -> gboolean
gnc_billterm_get_type() -> GType
gncBillTermCreate(QofBook * book) -> GncBillTerm *
gncBillTermDestroy(GncBillTerm * term)
gncBillTermIncRef(GncBillTerm * term)
gncBillTermDecRef(GncBillTerm * term)
gncBillTermChanged(GncBillTerm * term)
gncBillTermBeginEdit(GncBillTerm * term)
gncBillTermCommitEdit(GncBillTerm * term)
gncBillTermSetName(GncBillTerm * term, char const * name)
gncBillTermSetDescription(GncBillTerm * term, char const * name)
gncBillTermSetType(GncBillTerm * term, GncBillTermType type)
gncBillTermSetDueDays(GncBillTerm * term, gint days)
gncBillTermSetDiscountDays(GncBillTerm * term, gint days)
gncBillTermSetDiscount(GncBillTerm * term, _gnc_numeric discount)
gncBillTermSetCutoff(GncBillTerm * term, gint cutoff)
gncBillTermLookup(QofBook const * book, GncGUID guid) -> GncBillTerm *
gncBillTermLookupByName(QofBook * book, char const * name) -> GncBillTerm *
gncBillTermGetTerms(QofBook * book) -> GList *
gncBillTermGetName(GncBillTerm const * term) -> char const *
gncBillTermGetDescription(GncBillTerm const * term) -> char const *
gncBillTermGetType(GncBillTerm const * term) -> GncBillTermType
gncBillTermGetDueDays(GncBillTerm const * term) -> gint
gncBillTermGetDiscountDays(GncBillTerm const * term) -> gint
gncBillTermGetDiscount(GncBillTerm const * term) -> _gnc_numeric
gncBillTermGetCutoff(GncBillTerm const * term) -> gint
gncBillTermIsDirty(GncBillTerm const * term) -> gboolean
gncBillTermGetParent(GncBillTerm const * term) -> GncBillTerm *
gncBillTermReturnChild(GncBillTerm * term, gboolean make_new) -> GncBillTerm *
gncBillTermGetRefcount(GncBillTerm const * term) -> gint64
gncBillTermCompare(GncBillTerm const * a, GncBillTerm const * b) -> int
gncBillTermEqual(GncBillTerm const * a, GncBillTerm const * b) -> gboolean
gncBillTermIsFamily(GncBillTerm const * a, GncBillTerm const * b) -> gboolean
gncBillTermComputeDueDate(GncBillTerm const * term, Timespec post_date) -> Timespec
gnc_invoice_get_type() -> GType
gncInvoiceCreate(QofBook * book) -> GncInvoice *
gncInvoiceDestroy(GncInvoice * invoice)
gncInvoiceCopy(GncInvoice const * other_invoice) -> GncInvoice *
gncInvoiceSetID(GncInvoice * invoice, char const * id)
gncInvoiceSetOwner(GncInvoice * invoice, GncOwner * owner)
gncInvoiceSetDateOpenedGDate(GncInvoice * invoice, GDate const * date)
gncInvoiceSetDateOpened(GncInvoice * invoice, Timespec date)
gncInvoiceSetDatePosted(GncInvoice * invoice, Timespec date)
gncInvoiceSetTerms(GncInvoice * invoice, GncBillTerm * terms)
gncInvoiceSetBillingID(GncInvoice * invoice, char const * billing_id)
gncInvoiceSetNotes(GncInvoice * invoice, char const * notes)
gncInvoiceSetCurrency(GncInvoice * invoice, gnc_commodity * currency)
gncInvoiceSetActive(GncInvoice * invoice, gboolean active)
gncInvoiceSetIsCreditNote(GncInvoice * invoice, gboolean credit_note)
gncInvoiceSetBillTo(GncInvoice * invoice, GncOwner * billto)
gncInvoiceSetToChargeAmount(GncInvoice * invoice, _gnc_numeric amount)
gncInvoiceAddEntry(GncInvoice * invoice, GncEntry * entry)
gncInvoiceRemoveEntry(GncInvoice * invoice, GncEntry * entry)
gncInvoiceAddPrice(GncInvoice * invoice, GNCPrice * price)
gncBillAddEntry(GncInvoice * bill, GncEntry * entry)
gncBillRemoveEntry(GncInvoice * bill, GncEntry * entry)
gncInvoiceSortEntries(GncInvoice * invoice)
gncInvoiceRemoveEntries(GncInvoice * invoice)
gncInvoiceGetID(GncInvoice const * invoice) -> char const *
gncInvoiceGetOwner(GncInvoice const * invoice) -> GncOwner const *
gncInvoiceGetDateOpened(GncInvoice const * invoice) -> Timespec
gncInvoiceGetDatePosted(GncInvoice const * invoice) -> Timespec
gncInvoiceGetDateDue(GncInvoice const * invoice) -> Timespec
gncInvoiceGetTerms(GncInvoice const * invoice) -> GncBillTerm *
gncInvoiceGetBillingID(GncInvoice const * invoice) -> char const *
gncInvoiceGetNotes(GncInvoice const * invoice) -> char const *
gncInvoiceGetOwnerType(GncInvoice const * invoice) -> GncOwnerType
gncInvoiceGetTypeListForOwnerType
gncInvoiceGetTypeListForOwnerType(GncOwnerType const type) -> GList *
gncInvoiceGetType(GncInvoice const * invoice) -> GncInvoiceType
gncInvoiceGetTypeString(GncInvoice const * invoice) -> char const *
gncInvoiceGetCurrency(GncInvoice const * invoice) -> gnc_commodity *
gncInvoiceGetBillTo(GncInvoice * invoice) -> GncOwner *
gncInvoiceGetToChargeAmount(GncInvoice const * invoice) -> _gnc_numeric
gncInvoiceGetActive(GncInvoice const * invoice) -> gboolean
gncInvoiceGetIsCreditNote(GncInvoice const * invoice) -> gboolean
gncInvoiceGetPostedLot(GncInvoice const * invoice) -> GNCLot *
gncInvoiceGetPostedTxn(GncInvoice const * invoice) -> Transaction *
gncInvoiceGetPostedAcc(GncInvoice const * invoice) -> Account *
gncInvoiceGetTotal(GncInvoice * invoice) -> _gnc_numeric
gncInvoiceGetTotalOf(GncInvoice * invoice, GncEntryPaymentType type) -> _gnc_numeric
gncInvoiceGetTotalSubtotal(GncInvoice * invoice) -> _gnc_numeric
gncInvoiceGetTotalTax(GncInvoice * invoice) -> _gnc_numeric
gncInvoiceGetEntries(GncInvoice * invoice) -> EntryList *
gncInvoiceGetPrice(GncInvoice * invoice, gnc_commodity * commodity) -> GNCPrice *
gncInvoiceAmountPositive(GncInvoice const * invoice) -> gboolean
gncInvoiceGetForeignCurrencies
gncInvoiceGetForeignCurrencies(GncInvoice const * invoice) -> GHashTable *
gncInvoicePostToAccount(GncInvoice * invoice, Account * acc, Timespec * posted_date, Timespec * due_date, 
    char const * memo, gboolean accumulatesplits, gboolean autopay) -> Transaction *
gncInvoiceUnpost(GncInvoice * invoice, gboolean reset_tax_tables) -> gboolean
gncInvoiceAutoApplyPayments(GncInvoice * invoice)
gncInvoiceApplyPayment(GncInvoice const * invoice, Transaction * txn, Account * xfer_acc, _gnc_numeric amount, 
    _gnc_numeric exch, Timespec date, char const * memo, char const * num)
gncInvoiceGetInvoiceFromTxn(Transaction const * txn) -> GncInvoice *
gncInvoiceGetInvoiceFromLot(GNCLot * lot) -> GncInvoice *
gncInvoiceLookup(QofBook const * book, GncGUID guid) -> GncInvoice *
gncInvoiceBeginEdit(GncInvoice * invoice)
gncInvoiceCommitEdit(GncInvoice * invoice)
gncInvoiceCompare(GncInvoice const * a, GncInvoice const * b) -> int
gncInvoiceIsPosted(GncInvoice const * invoice) -> gboolean
gncInvoiceIsPaid(GncInvoice const * invoice) -> gboolean
gncInvoiceGetBook(GncInvoice * x) -> QofBook *
gncInvoiceEqual(GncInvoice const * a, GncInvoice const * b) -> gboolean
gncInvoiceRegister() -> gboolean
gncInvoiceNextID(QofBook * book, GncOwner const * owner) -> gchar *
gncInvoiceSetPostedAcc(GncInvoice * invoice, Account * acc)
gncInvoiceSetPostedTxn(GncInvoice * invoice, Transaction * txn)
gncInvoiceSetPostedLot(GncInvoice * invoice, GNCLot * lot)
gncJobCreate(QofBook * book) -> GncJob *
gncJobSetID(GncJob * job, char const * id)
gncJobSetName(GncJob * job, char const * jobname)
gncJobSetReference(GncJob * job, char const * owner_reference)
gncJobSetOwner(GncJob * job, GncOwner * owner)
gncJobSetActive(GncJob * job, gboolean active)
gncJobCommitEdit(GncJob * job)
gncJobGetID(GncJob const * job) -> char const *
gncJobGetName(GncJob const * job) -> char const *
gncJobGetReference(GncJob const * job) -> char const *
gncJobGetOwner(GncJob * job) -> GncOwner *
gncJobGetActive(GncJob const * job) -> gboolean
gncJobLookup(QofBook const * book, GncGUID guid) -> GncJob *
gncJobCompare(GncJob const * a, GncJob const * b) -> int
gncJobEqual(GncJob const * a, GncJob const * b) -> gboolean
gncEntryDiscountHowToString(GncDiscountHow how) -> char const *
gncEntryDiscountStringToHow(char const * str, GncDiscountHow * how) -> gboolean
gncEntryPaymentTypeToString(GncEntryPaymentType type) -> char const *
gncEntryPaymentStringToType(char const * str, GncEntryPaymentType * type) -> gboolean
gncEntryCreate(QofBook * book) -> GncEntry *
gncEntryDestroy(GncEntry * entry)
gncEntrySetDateGDate(GncEntry * entry, GDate const * date)
gncEntrySetDate(GncEntry * entry, Timespec date)
gncEntrySetDateEntered(GncEntry * entry, Timespec date)
gncEntrySetDescription(GncEntry * entry, char const * desc)
gncEntrySetAction(GncEntry * entry, char const * action)
gncEntrySetNotes(GncEntry * entry, char const * notes)
gncEntrySetQuantity(GncEntry * entry, _gnc_numeric quantity)
gncEntrySetDocQuantity(GncEntry * entry, _gnc_numeric quantity, gboolean is_cn)
gncEntrySetInvAccount(GncEntry * entry, Account * acc)
gncEntrySetInvPrice(GncEntry * entry, _gnc_numeric price)
gncEntrySetInvTaxable(GncEntry * entry, gboolean taxable)
gncEntrySetInvTaxIncluded(GncEntry * entry, gboolean tax_included)
gncEntrySetInvTaxTable(GncEntry * entry, GncTaxTable * table)
gncEntrySetInvDiscount(GncEntry * entry, _gnc_numeric discount)
gncEntrySetInvDiscountType(GncEntry * entry, GncAmountType type)
gncEntrySetInvDiscountHow(GncEntry * entry, GncDiscountHow how)
qofEntrySetInvDiscType(GncEntry * entry, char const * type)
qofEntrySetInvDiscHow(GncEntry * entry, char const * type)
gncEntrySetBillAccount(GncEntry * entry, Account * acc)
gncEntrySetBillPrice(GncEntry * entry, _gnc_numeric price)
gncEntrySetBillTaxable(GncEntry * entry, gboolean taxable)
gncEntrySetBillTaxIncluded(GncEntry * entry, gboolean tax_included)
gncEntrySetBillTaxTable(GncEntry * entry, GncTaxTable * table)
gncEntrySetBillable(GncEntry * entry, gboolean billable)
gncEntrySetBillTo(GncEntry * entry, GncOwner * billto)
gncEntrySetBillPayment(GncEntry * entry, GncEntryPaymentType type)
gncEntryGetDateGDate(GncEntry const * entry) -> GDate
gncEntryGetDate(GncEntry const * entry) -> Timespec
gncEntryGetDateEntered(GncEntry const * entry) -> Timespec
gncEntryGetDescription(GncEntry const * entry) -> char const *
gncEntryGetAction(GncEntry const * entry) -> char const *
gncEntryGetNotes(GncEntry const * notes) -> char const *
gncEntryGetQuantity(GncEntry const * entry) -> _gnc_numeric
gncEntryGetDocQuantity(GncEntry const * entry, gboolean is_cn) -> _gnc_numeric
gncEntryGetInvAccount(GncEntry const * entry) -> Account *
gncEntryGetInvPrice(GncEntry const * entry) -> _gnc_numeric
gncEntryGetInvDiscount(GncEntry const * entry) -> _gnc_numeric
gncEntryGetInvDiscountType(GncEntry const * entry) -> GncAmountType
gncEntryGetInvDiscountHow(GncEntry const * entry) -> GncDiscountHow
qofEntryGetInvDiscType(GncEntry const * entry) -> char *
qofEntryGetInvDiscHow(GncEntry const * entry) -> char *
gncEntryGetInvTaxable(GncEntry const * entry) -> gboolean
gncEntryGetInvTaxIncluded(GncEntry const * entry) -> gboolean
gncEntryGetInvTaxTable(GncEntry const * entry) -> GncTaxTable *
gncEntryGetBillAccount(GncEntry const * entry) -> Account *
gncEntryGetBillPrice(GncEntry const * entry) -> _gnc_numeric
gncEntryGetBillTaxable(GncEntry const * entry) -> gboolean
gncEntryGetBillTaxIncluded(GncEntry const * entry) -> gboolean
gncEntryGetBillTaxTable(GncEntry const * entry) -> GncTaxTable *
gncEntryGetBillable(GncEntry const * entry) -> gboolean
gncEntryGetBillTo(GncEntry * entry) -> GncOwner *
gncEntryGetBillPayment(GncEntry const * entry) -> GncEntryPaymentType
gncEntryCopy(GncEntry const * src, GncEntry * dest, gboolean add_entry)
gncEntryGetDocValue(GncEntry * entry, gboolean round, gboolean is_cust_doc, gboolean is_cn) -> _gnc_numeric
gncEntryGetDocTaxValue(GncEntry * entry, gboolean round, gboolean is_cust_doc, gboolean is_cn) -> _gnc_numeric
gncEntryGetDocTaxValues(GncEntry * entry, gboolean is_cust_doc, gboolean is_cn) -> AccountValueList *
gncEntryGetDocDiscountValue(GncEntry * entry, gboolean round, gboolean is_cust_doc, gboolean is_cn) -> _gnc_numeric
gncEntryGetBalValue(GncEntry * entry, gboolean round, gboolean is_cust_doc) -> _gnc_numeric
gncEntryGetBalTaxValue(GncEntry * entry, gboolean round, gboolean is_cust_doc) -> _gnc_numeric
gncEntryGetBalTaxValues(GncEntry * entry, gboolean is_cust_doc) -> AccountValueList *
gncEntryGetBalDiscountValue(GncEntry * entry, gboolean round, gboolean is_cust_doc) -> _gnc_numeric
gncEntryComputeValue(_gnc_numeric qty, _gnc_numeric price, GncTaxTable const * tax_table, gboolean tax_included, 
    _gnc_numeric discount, GncAmountType discount_type, GncDiscountHow discount_how, 
    int SCU, _gnc_numeric value, _gnc_numeric discount_value, 
    GList ** tax_values)
gncEntryGetOrder(GncEntry const * entry) -> GncOrder *
gncEntryGetInvoice(GncEntry const * entry) -> GncInvoice *
gncEntryGetBill(GncEntry const * entry) -> GncInvoice *
gncEntryLookup(QofBook const * book, GncGUID guid) -> GncEntry *
gncEntryIsOpen(GncEntry const * entry) -> gboolean
gncEntryBeginEdit(GncEntry * entry)
gncEntryCommitEdit(GncEntry * entry)
gncEntryCompare(GncEntry const * a, GncEntry const * b) -> int
gnc_taxtable_get_type() -> GType
gncAmountTypeToString(GncAmountType type) -> char const *
gncAmountStringToType(char const * str, GncAmountType * type) -> gboolean
gncTaxIncludedTypeToString(GncTaxIncluded type) -> char const *
gncTaxIncludedStringToType(char const * str, GncTaxIncluded * type) -> gboolean
gncTaxTableCreate(QofBook * book) -> GncTaxTable *
gncTaxTableDestroy(GncTaxTable * table)
gncTaxTableEntryCreate() -> GncTaxTableEntry *
gncTaxTableEntryDestroy(GncTaxTableEntry * entry)
gncTaxTableSetName(GncTaxTable * table, char const * name)
gncTaxTableIncRef(GncTaxTable * table)
gncTaxTableDecRef(GncTaxTable * table)
gncTaxTableEntrySetAccount(GncTaxTableEntry * entry, Account * account)
gncTaxTableEntrySetType(GncTaxTableEntry * entry, GncAmountType type)
gncTaxTableEntrySetAmount(GncTaxTableEntry * entry, _gnc_numeric amount)
gncTaxTableAddEntry(GncTaxTable * table, GncTaxTableEntry * entry)
gncTaxTableRemoveEntry(GncTaxTable * table, GncTaxTableEntry * entry)
gncTaxTableChanged(GncTaxTable * table)
gncTaxTableBeginEdit(GncTaxTable * table)
gncTaxTableCommitEdit(GncTaxTable * table)
gncTaxTableEqual(GncTaxTable const * a, GncTaxTable const * b) -> gboolean
gncTaxTableLookup(QofBook const * book, GncGUID guid) -> GncTaxTable *
gncTaxTableLookupByName(QofBook * book, char const * name) -> GncTaxTable *
gncTaxTableGetTables(QofBook * book) -> GList *
gncTaxTableGetName(GncTaxTable const * table) -> char const *
gncTaxTableGetParent(GncTaxTable const * table) -> GncTaxTable *
gncTaxTableReturnChild(GncTaxTable * table, gboolean make_new) -> GncTaxTable *
gncTaxTableGetEntries(GncTaxTable const * table) -> GncTaxTableEntryList *
gncTaxTableGetRefcount(GncTaxTable const * table) -> gint64
gncTaxTableLastModified(GncTaxTable const * table) -> Timespec
gncTaxTableEntryGetAccount(GncTaxTableEntry const * entry) -> Account *
gncTaxTableEntryGetType(GncTaxTableEntry const * entry) -> GncAmountType
gncTaxTableEntryGetAmount(GncTaxTableEntry const * entry) -> _gnc_numeric
gncTaxTableCompare(GncTaxTable const * a, GncTaxTable const * b) -> int
gncTaxTableEntryCompare(GncTaxTableEntry const * a, GncTaxTableEntry const * b) -> int
gncTaxTableEntryEqual(GncTaxTableEntry const * a, GncTaxTableEntry const * b) -> gboolean
_gncAccountValue_account_set(_gncAccountValue self, Account * account)
_gncAccountValue_account_get(_gncAccountValue self) -> Account *
_gncAccountValue_value_set(_gncAccountValue self, _gnc_numeric value)
_gncAccountValue_value_get(_gncAccountValue self) -> _gnc_numeric
new__gncAccountValue() -> _gncAccountValue
delete__gncAccountValue(_gncAccountValue self)
gncAccountValueAdd(GList * list, Account * acc, _gnc_numeric value) -> GList *
gncAccountValueAddList(GList * l1, GList * l2) -> GList *
gncAccountValueTotal(GList * list) -> _gnc_numeric
gncAccountValueDestroy(GList * list)
gnc_search_customer_on_id(QofBook * book, gchar const * id) -> GncCustomer *
gnc_search_invoice_on_id(QofBook * book, gchar const * id) -> GncInvoice *
gnc_search_bill_on_id(QofBook * book, gchar const * id) -> GncInvoice *
gnc_search_vendor_on_id(QofBook * book, gchar const * id) -> GncVendor *
gnc_pricedb_get_type() -> GType
gnc_price_create(QofBook * book) -> GNCPrice *
gnc_price_clone(GNCPrice * p, QofBook * book) -> GNCPrice *
gnc_price_begin_edit(GNCPrice * p)
gnc_price_commit_edit(GNCPrice * p)
gnc_price_set_commodity(GNCPrice * p, gnc_commodity * c)
gnc_price_set_currency(GNCPrice * p, gnc_commodity * c)
gnc_price_set_time(GNCPrice * p, Timespec t)
gnc_price_set_source(GNCPrice * p, PriceSource source)
gnc_price_set_source_string(GNCPrice * p, char const * s)
gnc_price_set_typestr(GNCPrice * p, char const * type)
gnc_price_set_value(GNCPrice * p, _gnc_numeric value)
gnc_price_lookup(GncGUID guid, QofBook * book) -> GNCPrice *
gnc_price_get_commodity(GNCPrice const * p) -> gnc_commodity *
gnc_price_get_currency(GNCPrice const * p) -> gnc_commodity *
gnc_price_get_time(GNCPrice const * p) -> Timespec
gnc_price_get_source(GNCPrice const * p) -> PriceSource
gnc_price_get_source_string(GNCPrice const * p) -> char const *
gnc_price_get_typestr(GNCPrice const * p) -> char const *
gnc_price_get_value(GNCPrice const * p) -> _gnc_numeric
gnc_price_equal(GNCPrice const * p1, GNCPrice const * p2) -> gboolean
gnc_price_print(GNCPrice * db, FILE * f, int indent)
gnc_price_list_insert(PriceList ** prices, GNCPrice * p, gboolean check_dupl) -> gboolean
gnc_price_list_remove(PriceList ** prices, GNCPrice * p) -> gboolean
gnc_price_list_destroy(PriceList * prices)
gnc_price_list_equal(PriceList * prices1, PriceList * prices2) -> gboolean
gnc_pricedb_get_db(QofBook * book) -> GNCPriceDB *
gnc_collection_get_pricedb(QofCollection * col) -> GNCPriceDB *
gnc_pricedb_destroy(GNCPriceDB * db)
gnc_pricedb_begin_edit(GNCPriceDB * arg1)
gnc_pricedb_commit_edit(GNCPriceDB * arg1)
gnc_pricedb_set_bulk_update(GNCPriceDB * db, gboolean bulk_update)
gnc_pricedb_add_price(GNCPriceDB * db, GNCPrice * p) -> gboolean
gnc_pricedb_remove_price(GNCPriceDB * db, GNCPrice * p) -> gboolean
gnc_pricedb_remove_old_prices(GNCPriceDB * db, Timespec cutoff, gboolean const delete_user, gboolean delete_last) -> gboolean
gnc_pricedb_lookup_latest(GNCPriceDB * db, gnc_commodity const * commodity, gnc_commodity const * currency) -> GNCPrice *
gnc_pricedb_lookup_latest_any_currency
gnc_pricedb_lookup_latest_any_currency(GNCPriceDB * db, gnc_commodity const * commodity) -> PriceList *
gnc_pricedb_has_prices(GNCPriceDB * db, gnc_commodity const * commodity, gnc_commodity const * currency) -> gboolean
gnc_pricedb_get_prices(GNCPriceDB * db, gnc_commodity const * commodity, gnc_commodity const * currency) -> PriceList *
gnc_pricedb_lookup_at_time(GNCPriceDB * db, gnc_commodity const * commodity, gnc_commodity const * currency, 
    Timespec t) -> PriceList *
gnc_pricedb_lookup_day(GNCPriceDB * db, gnc_commodity const * commodity, gnc_commodity const * currency, 
    Timespec t) -> GNCPrice *
gnc_pricedb_lookup_nearest_in_time
gnc_pricedb_lookup_nearest_in_time(GNCPriceDB * db, gnc_commodity const * c, gnc_commodity const * currency, Timespec t) -> GNCPrice *
gnc_pricedb_lookup_nearest_in_time_any_currency
gnc_pricedb_lookup_nearest_in_time_any_currency(GNCPriceDB * db, gnc_commodity const * c, Timespec t) -> PriceList *
gnc_pricedb_lookup_latest_before
gnc_pricedb_lookup_latest_before(GNCPriceDB * db, gnc_commodity * c, gnc_commodity * currency, Timespec t) -> GNCPrice *
gnc_pricedb_lookup_latest_before_any_currency
gnc_pricedb_lookup_latest_before_any_currency(GNCPriceDB * db, gnc_commodity * c, Timespec t) -> PriceList *
gnc_pricedb_convert_balance_latest_price
gnc_pricedb_convert_balance_latest_price(GNCPriceDB * pdb, _gnc_numeric balance, gnc_commodity const * balance_currency, gnc_commodity const * new_currency) -> _gnc_numeric
gnc_pricedb_convert_balance_nearest_price
gnc_pricedb_convert_balance_nearest_price(GNCPriceDB * pdb, _gnc_numeric balance, gnc_commodity const * balance_currency, gnc_commodity const * new_currency, 
    Timespec t) -> _gnc_numeric
gnc_pricedb_foreach_price(GNCPriceDB * db, gboolean (*)(GNCPrice *,gpointer) f, gpointer user_data, gboolean stable_order) -> gboolean
gnc_pricedb_get_num_prices(GNCPriceDB * db) -> guint
gnc_pricedb_equal(GNCPriceDB * db1, GNCPriceDB * db2) -> gboolean
gnc_pricedb_print_contents(GNCPriceDB * db, FILE * f)
xaccSplitGetCapGains(Split * arg1) -> _gnc_numeric
xaccAccountHasTrades(Account const * arg1) -> gboolean
xaccAccountFindEarliestOpenLot
xaccAccountFindEarliestOpenLot(Account * acc, _gnc_numeric sign, gnc_commodity * currency) -> GNCLot *
xaccAccountFindLatestOpenLot(Account * acc, _gnc_numeric sign, gnc_commodity * currency) -> GNCLot *
xaccAccountGetDefaultGainAccount
xaccAccountGetDefaultGainAccount(Account const * acc, gnc_commodity const * currency) -> Account *
xaccAccountSetDefaultGainAccount
xaccAccountSetDefaultGainAccount(Account * acc, Account const * gains_acct)
xaccSplitGetCapGainsSplit(Split const * arg1) -> Split *
xaccSplitGetGainsSourceSplit(Split const * arg1) -> Split *
xaccSplitAssign(Split * split) -> gboolean
xaccSplitAssignToLot(Split * split, GNCLot * lot) -> Split *
xaccSplitComputeCapGains(Split * split, Account * gain_acc)
xaccLotComputeCapGains(GNCLot * lot, Account * gain_acc)
xaccScrubLot(GNCLot * lot) -> gboolean
xaccAccountScrubLots(Account * acc)
xaccAccountTreeScrubLots(Account * acc)
releases ownership of the pointer
acquires ownership of the pointer
returns/sets ownership of the pointer
returns the next 'this' object
;*3$"
Swig object carries a C/C++ instance pointer
Swig object carries a C/C++ instance pointer
_gnucash_core_c.so.debug
7zXZ
CO7PL
iaNTb
LjeU
ja[#
*$4Bg.
TXYt
i3A>'tO
+9-#
y`HW
5Ma/E
aC(7
&h6l
G7x*
<j	\S
bEua
9?i:
OWnd
Mf{A#+
4zg`h
__)T
Z1[6
/Y-!
st4]
X#9:
g>?G
Vb}-7
"%X,#
j]Kb
r#~{
y#503x
m'xzu
wbnb
ZVl(%m
rSO98
m'jzV9
w#6`
{!I38
HVuL
cJi	I
B8rT
R%\k
Vg9M
(Vmr
&jz7q
g@tq
zRvA
#5O>
)wa^T|
h%bD
^R#p
>(6u
NiHx
]L^7
g+8X
AkF 
 T.EB
|;H~
I}(@
's\@
K8]yA3
ID9f
yB\Y
iv Z
c]j/5p
[!;S
Mo`i<p
o{Hv
X_h;*
6(Po
9mZLWJ
FE;~
OY%fK
#'k7f!
7q37
})KJ
!*ev
	XZj
#%|d
%%9`8
J66+&
v2tBDu|
T4q.
O2{t
j;Lz
:"*	
sV{`
ONu+s
DG1w!
1D2&
eAx:,D
6a ?
(~#^
N.+j
i`Fh!
I~A$
o>)J
dos Dn
P|Sx
}0E=
z7lW|
q<`c
~$o\
4$5Wg
"+8r
sXB`
"qnR
mHdO
3Z.!
XW<,1
VA\5bCB
$CEa
C:gZ
>F(9/
b9B~
Iq~zw
=Ao	
^*R.
B?2	?r
qn\4
{{i_
]-O9XX
zON4
iU[zL
%<V8
<(]a
BVI/f
=LVB
,>aM
6cAI
N3vC
,gLa
Vm6$
Z}'8Y
Wx	}
\msNi
,q4Wz
BGQH
u^,),M
\3FZxu
B[p43
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.init
.plt
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.data
.bss
.gnu_debuglink
.gnu_debugdata
