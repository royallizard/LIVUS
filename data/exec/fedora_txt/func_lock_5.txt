__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
__ast_pthread_mutex_lock
__ast_pthread_mutex_unlock
__ast_pthread_mutex_destroy
ao2_container_count
__ao2_ref
ast_custom_function_unregister
pthread_cancel
pthread_kill
pthread_join
ast_channel_datastore_find
strcmp
option_debug
ast_log
ast_options
ast_debug_get_by_module
ast_channel_name
strcasecmp
__ctype_tolower_loc
calloc
__ao2_link
gettimeofday
__ao2_unlink
strlen
memcpy
__ast_pthread_mutex_init
__ast_cond_init
__ao2_container_alloc
__ast_cond_timedwait
__ast_datastore_alloc
ast_channel_datastore_add
strerror
ast_datastore_free
__ast_cond_destroy
ast_autoservice_start
ast_autoservice_stop
pthread_testcancel
nanosleep
sched_yield
__ast_cond_signal
__ast_custom_function_register
ast_pthread_create_stack
ast_register_file_version
ast_unregister_file_version
ast_module_register
ast_module_unregister
libpthread.so.0
libc.so.6
GLIBC_2.2.5
GLIBC_2.3
GLIBC_2.14
5B- 
%D- 
%B- 
%:- 
%2- 
%*- 
%"- 
%z, 
%r, 
%j, 
%b, 
%Z, 
%R, 
%J, 
%B, 
%:, 
%2, 
%*, 
%", 
=Y, 
ffff.
=), 
=g) 
=R' 
fffff.
=?* 
=H( 
ffffff.
AUATUH
[]A\A]H
[]A\A]
AWAVAUATI
[]A\A]A^A_
AWAVI
5"  
ATUH
=." 
|$ 1
D$ H
t$(H
8[]A\A]A^A_
[]A\A]A^A_
AUATI
[]A\A]
fff.
AUATI
[]A\A]
AUATUSH
[]A\
[]A\
&(oldlist)->lock
func_lock.c
&(&locklist)->lock
&current->mutex
&(list)->lock
This should NEVER happen
func_lock
&current->cond
&frame->mutex
&frame->cond
lock_broker
$Revision: 370187 $
Dialplan mutexes
UNLOCK
TRYLOCK
MUTEX
No datastore for dialplan locks.  Nothing was ever locked!
Channel %s has no lock datastore, so we're allocating one.
Unable to allocate new datastore.  No locks will be obtained.
Memory Allocation Failure in function %s at line %d of %s
/builddir/build/BUILD/asterisk-11.4.0/include/asterisk/utils.h
Unable to allocate datastore list head.  %sLOCK will fail.
Unable to initialize mutex: %s
Unable to initialize condition variable: %s
Unable to allocate channel lock frame.  %sLOCK will fail.
Failed to start lock broker thread. Unloading func_lock module.
This paragraph is copyright (c) 2006 by Digium, Inc. In order for your module to load, it must return this key via a function called "key".  Any code which includes this paragraph must be licensed under the GNU General Public License version 2 or later (at your option).  In addition to Digium's general reservations of rights, Digium expressly reserves the right to allow other parties to license this paragraph under different terms. Any use of Digium, Inc. trademarks or logos (including "Asterisk" or "Digium") without express written permission of Digium, Inc. is prohibited.
lock_broker
load_module
load_module
_ast_calloc
get_lock
lock_free
lock_fixup
unlock_read
unload_module
;*3$"
7e188f7e8f4d83eb438971816ebcf5e0
func_lock.so.debug
7zXZ
ADnD
[xYW
 BmPh
^}1@Tw
q1$iRn
3]l=
SegO
IW	i
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
