LCU8^
0KCC
id&8g3;
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
free
memset
floor
__assert_fail
realloc
memmove
__stack_chk_fail
_Unwind_Resume
__gxx_personality_v0
malloc
memcpy
_ZTVN10__cxxabiv120__si_class_type_infoE
__cxa_pure_virtual
_ZdlPv
fseek
fread
feof
ftell
fclose
fopen
_ZTVN10__cxxabiv117__class_type_infoE
fmod
gme_type_list
__cxa_guard_acquire
__cxa_guard_release
gme_identify_header
gme_identify_extension
strrchr
__ctype_toupper_loc
strcmp
gme_new_emu
gme_load_file
gme_load_data
gme_open_data
gme_load_custom
gme_delete
gme_type
gme_warning
gme_track_count
gme_free_info
gme_track_info
gme_set_stereo_depth
gme_user_data
gme_set_user_data
gme_set_user_cleanup
gme_start_track
gme_play
gme_set_fade
gme_track_ended
gme_tell
gme_seek
gme_voice_count
gme_ignore_silence
gme_set_tempo
gme_mute_voice
gme_mute_voices
gme_enable_accuracy
gme_clear_playlist
gme_type_multitrack
gme_set_equalizer
gme_equalizer
gme_voice_name
gme_type_system
gme_identify_file
gme_open_file
gme_load_m3u_data
gme_load_m3u
log10
memcmp
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_Znwm
strncpy
__memcpy_chk
libstdc++.so.6
libm.so.6
libgcc_s.so.1
libc.so.6
_edata
__bss_start
_end
libgme.so.0
GCC_3.0
GLIBCXX_3.4
CXXABI_1.3
GLIBC_2.14
GLIBC_2.4
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.2.5
%zN$
%rN$
%jN$
%bN$
%ZN$
%RN$
%JN$
%BN$
%:N$
%2N$
%*N$
%"N$
%zM$
%rM$
%jM$
%bM$
%ZM$
%RM$
=	M$
=zJ$
=JJ$
=OH$
fffff.
fffff.
fffff.
AUATUSH
C4t	A9
[]A\A]
fffff.
w0~1
7HcG
fff.
fffff.
[]A\
[]A\1
ATUS
Yd$ 
D$(f
L$8f
T$@f
YT$ 
Y\$H
|$ f
Y\$0
$$Hc
X[]A\A]
AVAUATA
Lco$
~cf.
[]A\A]A^A_
fffff.
D$81
D$8dH3
D$ D
AVAUATI
D$ H
l$ H
D$ A
z%u#H
[]A\A]A^
 t4L
D$(1
D$(dH3
AVAUA
ATUH
 []A\A]A^
fffff.
ATUH
]A\H
[]A\
AWAVAUATI
PHH)
[]A\A]A^A_
ATLc
P I9
[]A\A]A^A_
[]A\A]A^H
[]A\A]A^A_
S H)
fff.
ATUH
[]A\
P H9
[]A\
ATUSH
fffff.
fff.
fff.
fffff.
fffff.
Sx+t"H
P H9
[]A\A]
fff.
fffff.
|$([]
t$$A\
fff.
txATA
AWAVAUI
ATUH
Hc{L
H;{0H
HcD$
[]A\A]A^A_
AWAVAUI
HcO 
t;H9
t$ IcD$
IcD$
[]A\A]A^A_
\$ I
[]A\A]A^A_
AWAVAUI
ATUSH
?IcM
Icu,
H+D$
([]A\A]A^H
gfff
VUUU
[]A\A]
o S1
[]A\A]
AVAUI
ATUS
[]A\A
A]A^
l$ SH
fffff.
[]A\
fff.
\$ E
[]A\A]A^
D$TI
T$@[]A
A\A]A^
uB[]A\A]H
D$H1
T$0H
D$HdH3
AUATU
[]A\A]A^
fff.
G4AUA
g(US
[]A\A]
G4A^
GtAVD
AUATL
g(UH
ohSH
[]A\A]A^D
G4A_
fffff.
AUATUH
[]A\A]A^
AUATU
H;D$
HcT$
[]A\A]A^
AWAVAUATUSH
[]A\A]A^H
t%HcW$H9
AWAVAUATI
T$(f
D$ A
l$xf
|$Xf
|$XA
|$(E1
l$hf
D$pf.
|$ I
YD$X
D$HD
Yl$h
XT$P
YT$pu 
t$(f
\$8f
|$PA
D$0A
X|$`A
D$0f
|$Pr)
|$PD
A	T$(A
|$PA
E9l$
D$8H
[]A\A]A^A_
fffff.
O,E1
fffff.
A H)
=9	$
=!	$
ffff.
MSEN
SENSH
t%wc
EFSNH
PASH
MSEHH
SBGH
XMYGH
 mgVH
YAXZH
CCSKt
XSSKu
[]A\
AUATUH
u)Ic
[]A\A]
[]A\A]
[]A\A]
ffff.
D$(1
L$(dH3
[]A\A]
[]A\A]
D$(1
|$(dH3<%(
fffff.
fff.
[]A\A]
ffff.
D$X1
D$ H
D$(H
D$0H
D$8H
D$@H
D$XdH3
AUATI
$t H
([]A\A]
AVAUATI
D$81
L$8dH3
@[]A\A]A^
tXHc
t$0H
fffff.
fffff.
D$(1
L$(dH3
fffff.
[]A\
@ A\
fffff.
[]A\
fffff.
D$(1
|$(dH3<%(
s`H9
AUATLc
[]A\A]
L;e8wqJ
IcD$ 
IcD$$
IcD$(
 []A\
	w11
fff.
gffff.
Problem A
in m3u aA
t liI
AVE1
ATUS1
E0E1
([]A\A]A^A_
	w(f
} E1
U(E1
E(Hc
fff.
[]A\
D$(1
L$(dH3
[]A\A]
[]A\A]
 []A\
fff.
[]A\
fff.
[]A\A]
o SH
fff.
fffff.
g UH
[]A\A]A^
fffff.
fff.
o SH
fffff.
ATUH
o SH
[]A\A]
O4AUATL
g(UH
[]A\A]A^D
GtA_
AUATA
[]A\D
GtA]
G4tSS
fff.
fffff.
fffff.
fffff.
fffff.
fffff.
[]A\
[]A\
fffff.
fffff.
fffff.
[]A\A]A^A_
fff.
AVAUATI
<lM)
[]A\A]A^
tZHc
ATUH
[]A\A]
AWAVAUATUH
h9wH
T$Pu
l$(H
D$4H
|$4L
t$0H
UpHc
t$$E
D$TD
D$<E
t$\E
T$4E
D$(D
ET$$
D;L$
D+T$$
J4A9
P4E9
D;L$
T$$H
D$(A
T$DE
t$8D
D$0H
|$$H
L$(D
t$8D
D$(fD
+|$8H
D+L$8
L$8+MH+Mh
h[]A\A]A^A_
|$$D
t$$E
D$4	
D$8D
D$8D
D$(A
fD3p
fff.
fffff.
y0HcA
y@HcA
y8HcA
	w0H
ATUSH
t2Hc
([]A\A]
/~0Hc
G SD
AWAVAUATUS
u(E1
HczHLcB(A
+J8A
@`D9XtD
XtMc
[]A\A]A^A_
fffff.
AVAUATUSH
T$XL
T$`L
T$hL
T$pI
H;T$(
L$ A
y|Hc
\$$A
\$ E
|$XH
T$PL
L$HH
D$@L
T$8L
D$0D
L$HH
T$PH
D$@L
T$8L
D$0D
|$pH
T$PL
L$HH
D$@L
T$8L
D$0D
T$PL
L$HH
D$@L
T$8L
D$0D
|$hH
T$PL
L$HH
D$@L
T$8L
D$0D
T$PL
L$HH
D$@L
T$8L
D$0D
|$`H
T$PL
L$HH
D$@L
T$8L
D$0D
T$PL
L$HH
D$@L
T$8L
D$0D
x[]A\A]A^A_
AVAUATUSH
\$PL
L$XL
T$`I
\$hI
D$ H
H;T$(
4$Hc
D$ E
|$$D
|$PH
T$HL
D$@L
T$8L
T$HL
D$@L
T$8L
|$hH
T$HL
D$@L
T$8L
T$HL
D$@L
T$8L
|$`H
T$HL
D$@L
T$8L
T$HL
D$@L
T$8L
|$XH
T$HL
D$@L
T$8L
T$HL
D$@L
T$8L
p[]A\A]A^A_
AVAUATUSH
T$XL
T$`L
T$hL
T$pI
H;T$(
L$ A
y|Hc
\$$A
\$ E
|$XH
T$PL
L$HH
D$@L
T$8L
D$0D
L$HH
T$PH
D$@L
T$8L
D$0D
|$pH
T$PL
L$HH
D$@L
T$8L
D$0D
T$PL
L$HH
D$@L
T$8L
D$0D
|$hH
T$PL
L$HH
D$@L
T$8L
D$0D
T$PL
L$HH
D$@L
T$8L
D$0D
|$`H
T$PL
L$HH
D$@L
T$8L
D$0D
T$PL
L$HH
D$@L
T$8L
D$0D
x[]A\A]A^A_
AVAUATUSH
|$XH
|$`H
|$hH
|$pH
H;T$(
\$ D
|$XH
T$PH
D$HL
D$@L
T$8L
L$0D
D$HH
T$PL
D$@L
T$8L
L$0D
|$pH
T$PH
D$HL
D$@L
T$8L
L$0D
T$PH
D$HL
D$@L
T$8L
L$0D
|$hH
T$PH
D$HL
D$@L
T$8L
L$0D
T$PH
D$HL
D$@L
T$8L
L$0D
|$`H
T$PH
D$HL
D$@L
T$8L
L$0D
T$PH
D$HL
D$@L
T$8L
L$0D
x[]A\A]A^A_
AVAUATUSH
T$ L
\$XL
\$`L
\$hL
H;T$(
L$ D
|$$E
|$ D
|$XH
T$PH
t$HH
D$@L
L$8L
D$0D
t$HH
T$PH
D$@L
L$8L
D$0D
|$pH
T$PH
t$HH
D$@L
L$8L
D$0D
T$PH
t$HH
D$@L
L$8L
D$0D
|$hH
T$PH
t$HH
D$@L
L$8L
D$0D
T$PH
t$HH
D$@L
L$8L
D$0D
|$`H
T$PH
t$HH
D$@L
L$8L
D$0D
T$PH
t$HH
D$@L
L$8L
D$0D
x[]A\A]A^A_
AVAUATUSH
\$0H
\$XL
T$pH
L$(D
\$`L
\$hI
|$ H
H;T$(
l$0E
|$ D
|$XH
T$PH
L$HL
\$@D
T$PL
L$HL
\$@D
|$pH
T$PH
t$HL
L$@L
\$8D
T$PH
t$HL
L$@L
\$8D
|$hH
T$PH
t$HL
L$@L
\$8D
T$PH
t$HL
L$@L
\$8D
|$`H
T$PH
t$HL
L$@L
\$8D
T$PH
t$HL
L$@L
\$8D
x[]A\A]A^A_
AVAUATUSH
\$ M
\$XH
\$`H
\$hH
\$pH
H;T$(
L$ D
~|Mc
|$XH
T$PH
t$HL
D$@L
L$8L
\$0D
t$HH
T$PL
D$@L
L$8L
\$0D
|$pH
T$PH
t$HL
D$@L
L$8L
\$0D
T$PH
t$HL
D$@L
L$8L
\$0D
|$hH
T$PH
t$HL
D$@L
L$8L
\$0D
T$PH
t$HL
D$@L
L$8L
\$0D
|$`H
T$PH
t$HL
D$@L
L$8L
\$0D
T$PH
t$HL
D$@L
L$8L
\$0D
x[]A\A]A^A_
AVAUATUSH
|$$D
|$0H
|$PH
|$XH
|$`H
|$hH
|$ H
H;T$(
D3v|D+
|$$D!
|$PH
T$HH
t$@H
D$8L
t$@H
T$HH
D$8L
|$hH
T$HH
t$@H
D$8L
T$HH
t$@H
D$8L
|$`H
T$HH
t$@H
D$8L
T$HH
t$@H
D$8L
|$XH
T$HH
t$@H
D$8L
T$HH
t$@H
D$8L
p[]A\A]A^A_
_4UE
O,A\
G0[]
O,A\
O,A\
G4AUATU
#OD1
LOPE
[]A\A]
G,A^
DOPD
DOPA
fffff.
u5Hc
HcP(L
[]A\A]A^
ATUH
q}ML
[]A\A]
[]A\
AVAUL
ATUSH
D$H1
D$0L
d$0I
T$GD
d$4fA
|$HdH3<%(
D$@I
D$0I
X[]A\A]A^A_
D$F%
t$DE
L$DA
D$ E
T$FA
L$DA
t$FA
L<(D
T$DA
D$FD
|$FD
|$FE
D2|$FD
|$FE
D"|$FD
|$FE
L$FA
L$FA
L$FD
D	|$
L$FA
L$FD
t$DA
|$FD
L$FD
43A	
|$FD
L$FD
t$FD
|$FA
L$FD
L$FD
|$DA
t$Df
L$BD
D$DA
|$DH
D$FL
T$ L
t$BA
t$DA
L$DD
t$0L
T$ L
T$ E
t$Ff@
t$FD
t$FD
D$ L
|$DD
L<8D
D$ A
D$ D
D$ I
L<8D
D$DD
D$DD
D$DD
D$DD
D$DD
 D4@
D$DD
D$DD
D$DD
D$DD
T$@A
T$,B
L<8D
L$ D
L$ L
T$,D
L$DA
D$AA
t$A@
T$@L
T$ L
D$FD
D$FD
t$@L
T$,D
L$ L
T$,L
D<8H
L$ D
t$BA
D$BA
D$FD
D$DA
L$DA
D$F@
t$@L
L$,H
T$ L
|$AL
T$ D
L$,A
t$A@
T$FA
D$FA
D$FD
L$FA
D$FD
|$FD
@t=D
fffff.
ATUH
[]A\
w!Hc
ffff.
AUMc
ATUH
]A\A]A^
AUATUSH
[]A\A]
]A\A]
[]A\A]
fff.
AWAVAUATU
([]A\A]A^A_
D$ I
D$(I
D$0I
D$8I
D$@I
D$HI
D$PI
D$XI
D$`I
D$hI
D$pI
D$xI
u5Hc
HcP(L
[]A\A]A^
AVAUATU
(9w$
G8tk
([]A\A]A^A_
fff.
9w$| 
AWAVAUATU
[]A\A]A^A_
[]A\A]A^A_
gfff
[]A\
A]A^A_
p D!HH
P(Hc
[]A\
/wdH
W Hc
AUATUSH
D$@H
D$@I
D$HI
D$PI
D$XI
D$`I
D$hI
D$pI
D$xI
D$0M
D$@I
D$HI
D$PI
D$XI
D$`I
D$hI
D$pI
D$xI
dH3<%(
[]A\A]A^A_
L$(L
D$4D
|$ L
D$6L
t$4H
l$4H
d$4L
t$4H
t$4L
D$4A
|$ L
D$0L
D<0I
t$4H
T$6A
t$4H
t$4H
l$61
T$6A
t$4H
"T$6
t$4H
t$4H
t$4H
D$4D
D$4f.
D	d$
D$4D
D$4D
T$2D
t$2D
T$0D
D$6D
t$0D
D$4A
T$0D
\$4A
t$0D
t$4H
L$(L
D,0A
|$ L
B D,0
|$4H
t$4H
t$4H
GPu7H
fffff.
fffff.
O`uf
Gdx&=
AUAT
D;_hA
D+O<
OhD)
g<[]A\)
w8A^
[]A\1
w8A^
AVAUATUS
[]A\A]A^A_
ATUSH
HcGX
D+W<
_ D)
D+O<t
,$M)
[]A\A]
[]A\A]
D+W<
fffff.
fffff.
fff.
uP[]
fffff.
D$X1
D$XdH3
fff.
fff.
tIH=
AWAVAUATU
[]A\A]A^A_
fffff.
fffff.
AVAUL
ATUH
t$ H
D$81
L$8dH3
@[]A\A]A^
fffff.
[]A\
[]A\
ffffff.
VUUUUUUUUH
ATUH
AUATUSH
[]A\A]
AVAUATUSD
J,I9
[]A\A]A^
AVAUATUSH
[]A\A]A^A_
[]A\
fffff.
ATUH
fffff.
AWAVAUATUSH
D+O(
O,D9
([]A\A]A^A_
OhtB
~ D)
wHHc
fffff.
AUATU
tjHc
[]A\A]
[]A\A]
[]A\A]
[]A\A]
C8tFH
[]A\A]
tQ|7
AVAUATUSH
D$PI
D$XI
D$`I
D$hI
D$pI
D$xI
D$PI
D$$A
D$0A
D$4A
D$ D
L$ D
D$ A
\$0E
\$$E
\$4E
3D$$E
#D$$E
D$$E
\$0A
\$$A
\$4A
D$$L
D$4A
D$0E
\$4A
D$01
L$(L
L$(D
\$4A
D$0L
T$$E
l$<D
|$HL
D$@A
|$4D
t$8L
|$0A
t$(D
t$8D
l$<D
|$HL
D$4E
D$(D
\$4E
\$0E
D$$E
D$$E
D$$E
\$$A
L$$I
L$$D
\$4E
\$ A
\$0A
D$$L
D$0D
D$$E
l$$D
D$$E
D$0A
D$0L
L	\$
D$$E
D$0E
D$4E
D$0E
\$0A
D$0E
D$4E
l$ E
D$$A
D$0D	
D$4A
D$PH
D$XI
D$`I
D$hI
D$pI
D$xI
[]A\A]A^A_
T$$H
T$$H
fffff.
fff.
 ~>H
fffff.
AUATL
[]A\A]A^
[]A\A]A^
[]A\A]A^
fffff.
	w:H
AUATU
[]A\A]
fffff.
AVAUATUSH
|$ H
\$`H
t$8H
|$0D
x	A9
\$ D
L$(D
D$(D
L$VD
t$ A
D	D$
|$TH
(	|$
t$TH
|$ A
D$TH
|$ D
D$TH
|$ D
D$(A
T$VA
|$ D
L$(D
|$8H
D$WH
D$ f
\$0f
D$PH
D$7H
[]A\A]A^A_
t$TH
|$ A
T4HD
T4PD
(	D$
|$VE
D$(A
D$VD
T48D
T$TH
t$TI
L$ D
D$VD
D$VE
t$ I
t$TI
t$ D2D$VD
D$VE
t$TI
L$ D"D$VD
D$VE
t$VI
T$VD
)	t$
|4PL
|4PD
l4PE
|4PD
l4PE
t$HE
T$VH
	D$(D
T$VD
|$TE
T$TL
|$VD
T$VD
47	t$
D$QA
T$VD
t$HE
T$VD
D$TA
D$VA
t$ I
|$(I
t$RI
t$Tf
T$RD
D$TE
D$(A
D$TE
D$VD
|$ A
D$VD
t$PI
t$Rf
t$Tf
T$TD
L$VD
|$ A
T$VH
T$VD
DD$0
DD$0
DD$0
D$TD
D4HD
|$ D
\$ E
\$(D
|$ A
|$ A
D$(1
T4HD
L4HD
t$TE
\$ @
t$TE
t$TE
\$ H
\$ E
t$TE
\$ E
D4(D
t$TE
\$ E
t$TE
T$TE
D	D$
 D<PD
D<PD
\$ E
t$TE
t$TE
\$ E
T$PA
|$ B
L4HD
T$PA
D4HH
D$VH
L$ A
|$ D
T$Pf
L$QH
|$ D
T$TH
D$TH
T$PH
|$ D
D$ A
D$VH
L$ A
D	t$
D$ A
T$VH
D$ A
L$VL
D$TL
t$ L
D$VD
	D$(D
L$TH
|$ D
T$TH
T$RD
D$VD
D	d$
D$TH
D	D$
fffff.
fffff.
fffff.
fff.
w0Hc
ffffff.
AUATL
[]A\A]
fff.
AVAUI
ATUSH
[]A\A]A^A_
[]A\I
A]A^A_I
te[]A\
[]A\
[]A\
[]A\
[]A\
[]A\
fff.
AUATU
[]A\A]
G|E1
AVAUA
ATUSH
([]A\A]A^A_
Z,A9
fffff.
AWAVI
AUATU
[]A\A]A^A_
fffff.
fff.
 AUATUS
[]A\A]A^
A\A]A^
]A\A]A^
fff.
[]A\
wOH9
AWAVAUI
ATUSH
D$0E
t$ H
|$ A
dH3<%(
[]A\A]A^A_
$$@	
D	<$
HcD$
0HcT$
HcT$
HcD$
HcD$
HcD$
fff.
AWAVAUATUSH
89wH
A+S 
GHD9
l$(D+t$
\$ H
P4D9
\$ H
l$(D)
H;\$
8[]A\A]A^A_
fffff.
ATUSH
D;\$
l$ D
t$,D
d$(A
d$(H
l$ D
t$,fD
8[]A\A]A^A_
fffff.
AVAUATUSH
G(D)
P4A9
[]A\A]A^A_
fffff.
[]A\A]A^
\_0D
TW0A
fff.
9G<t2
9G<u
HcO8
C u$
AVAUATUSH
K,D)
([]A\A]A^A_
LKhD
|ChD
AVAUATA
([]A\A]A^A_
LG8F
DG8E
O<I)
\w8D
([]A\A]A^A_
[]A\
fffff.
AVAUATUSH
P4E1
[]A\A]A^A_
AWAVAUATUSH
WtL)
tGpD
[]A\A]A^A_
GPA9
lopD
Z,D9
O\A)
AUATLc
[]A\A]
fffff.
fff.
fffff.
fffff.
ATUH
|$hH
P]A\
[]A\
AUATL
[]A\A]
fff.
wQHc
ATUSH
[]A\
[]A\
fffff.
[]A\
[]A\
[]A\
AUATU
[]A\A]
ffff.
ffffff.
AWAVI
[]A\A]A^A_
1~4I
AWAVAUATI
tEH;
[]A\A]A^A_
l$ H
t$0L
T$$	
=INFO
~e=auth
=tlbl
=plstucH
=NEND
=BANK
=DATA
=timeu
<$Ic
|$`H
|$`H
fffff.
fff.
fffff.
AVAUATUSH
D$PH
|$LH
\$0H
\$8H
D$ H
D$0H
L;t$8
h[]A\A]A^A_
A;D$
\$ H
D9L$
)D$H
+D$HA
t$XA
\$,D
L$(H
\$@D
E;T$
D$@H
\$,;|$
D;L$
t$XE
E;T$
\$ A
t$PH
fff.
[]A\
[]A\
ex[]A\
AVAUATUSH
D$81
D$0A
D$ A
L$4D
T$0H
\$8dH3
H[]A\A]A^A_
|$ L
T$4L
L$4A
L$4A
D$4D
|$ L
T$4L
L$4A
L$0E
L$4A
T$0E
D$0A
L$4A
L$4A
T$0E
L$0)
L$0A
|$0)
fffff.
t(A)
"t"H
8"t	H
ffffff.
AWAVI
AUATUSH
~;Mc
[]A\A]A^A_
ujH9
	w81
[]A\A]A^A_
ucH9
[]A\
[]A\
fffff.
AUATU
[]A\A]
CuhH
Gl uB
fff.
AUATUH
"~.I
[]A\A]
D$&A
T$%I
D$'A
D$(A
D$)A
D$*A
D$+A
s%H9
wKI9
r	I9
fff.
[]A\
fffff.
Gl uH
fffff.
whAVH
[]A\A]A^
D;0|
[]A\A]A^
[]A\A]A^
 ufI
[]A\A]A^
fff.
fffff.
AWAVAUATI
t$D)
D$0A
D$ A
D$(Ic
D$8A
D$8H
T$@H-
D$ A
D$(A
9D$DA
[]A\A]A^A_
|$ D
|$ E)
|$ D
D$HL
|$ D
L$PL
D$HA
L$PA
	D$@
@	D$@E
D$HL
|$ D
|$ D
D$HA
D!L$
|$ D
D$HA
D	L$
|$ D
D$HA
D1L$
D$HD
|$0L
D$ E
L$PL
L$PL
L$PL
D$HA
L$XL
D$PD
L$HL
D$ E
D$HH
D$(E
D$HH
D$ L
D$ A
L$ I
D$ E
D$HA
D$PD
L$HA
D$ E
D$HL
D$HD)
D$HA
D$PD
L$HA
T$ H
D$0L
D$0H
D$ E
D$ E
D$(E
|$ A
D$ E
|$(A
D$ E
D$ E
D$HA
D$PD
L$HA
D$ E
D$HH
D$ D
D$ E
|$(D
t$ M
D$ D
D$ D
D$HH
T$@H
H+D$0H=
L$8L
L$PL
L$PD
D$HL
D$HH
D$H	D$
t$ M
D$ D
|$ D
l$ A
D$HA
D$PH
L$HA)
D$PD
H+T$0H
D$8L
|$(D
D$8H
|$8D
T$@H
H+D$0
D$(J
D$HD
D$HH
|$8H
H+T$0H
|$@L
|$@D
D$8H
|$@H
T$ L
D$HH
D$(A	
|$(D
D$ A
l$ A
D$HA
L$HH
L$HD
D$HH
D$H!D$
L$(H
H+T$0H
D$8L
D$PL
L$HL
D$PE
|$8H
H+D$0
|$0H
D$@@J
t$ M
D$ D
|$(A
D$PA
D$HD
D$PH
#D$H
L$PD
t$ M
D$ D
L$PL
D$HL
L$PL
D$8H
|$8D
|$0I)
D$8D
L+|$0D
L$@D
D$@C
D$HH
|$8H
H+T$0H
L$0A
L$HL
|$(H
	D$@
D$(	T$@A	
|$(D
|$ D
|$0I)
|$8H
l$ A
D$HA
L$PL
D$HD
|$ A
L$PE
D$(H
|$(D
D$@@J
|$(D
L$ H
H+T$0H
D$8L
D$8I)
|$8H
H+T$0H
|$(L
D$ A
|$(D
|$8H
H+T$0H
|$ L
D$(D
|$(A	
D$ D
D$HH
t$ M
t$ M
D$HH
|$(D
D$(D
|$(D
T$ M
D$ D
D$PA
D$HD
D$PH
L$PL
D$HL
L$PL
HcD$ H
|$0D
|$0D
D$(A
|$0A
|$0D
D$ A
D$HA
D$8A
D$ H
D$(A
D$8A
D$HL
D$(A
D$HH
D$ A
D$8D
D$8D
D$HH
D$8D
D$8D
D$HL
D$(A
D$(A
ATUH
tb[H
[]A\
t&Hc
AWAVAUI
ATUSH
G=	D$
T$,H
\$8H
D$4I
D$HI
D$PI
D$@I
T$8L
HcBlD
A u|
<0Hc
F,H9
B0H9
H;D$HH
CD$PI
 ukA
L$,D
\$XI
h[]A\A]A^A_
fff.
@`H-
fffff.
fff.
fffff.
AWAVI
AUATUSH
D$%L
D$$ 
gfffH
[]A\A]A^A_
[]A\A]
[]A\L
fff.
ATUSH
[]A\
[]A\
AWAVAUI
[]A\A]A^A_
[]A\A]A^A_
AUATI
P H=
[]A\A]
Y[]A\A]
AWAVAUATUSH
Hcw,I
H+D$
([]A\A]A^H
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
fffff.
fffff.
fff.
S~iH
fffff.
AWAVAUATUSH
D$X1
D$XdH3
h[]A\A]A^A_
fffff.
Hct$
dH34%(
fffff.
[]A\
[]A\
AUATI
([]A\A]
fffff.
AVAUATI
([]A\A
A]A^
bt2@
AVAUATA
[]A\A]D
fffff.
fffff.
fffff.
fffff.
fffff.
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Blip_Buffer.cpp
buffer_size_ != silent_buf_size
samples_avail() <= (long) buffer_size_
factor > 0 || !sample_rate_
Out of memory
length_ == msec
count <= samples_avail()
kernel_unit > 0
void Blip_Buffer::mix_samples(const blip_sample_t*, long int)
void Blip_Synth_::volume_unit(double)
blip_time_t Blip_Buffer::count_clocks(long int) const
void Blip_Buffer::remove_silence(long int)
void Blip_Buffer::end_frame(blip_time_t)
blip_resampled_time_t Blip_Buffer::clock_rate_factor(long int) const
const char* Blip_Buffer::set_sample_rate(long int, int)
MbP?+
b@333333
?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Classic_Emu.cpp
(ch.center && ch.left && ch.right) || (!ch.center && !ch.left && !ch.right)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Classic_Emu.h
/builddir/build/BUILD/game-music-emu-0.6.0/gme/blargg_common.h
clocks_emulated
!buf && new_buf
n <= size_
T& blargg_vector<T>::operator[](size_t) const [with T = unsigned char; size_t = long unsigned int]
virtual const char* Classic_Emu::play_(long int, Music_Emu::sample_t*)
virtual void Classic_Emu::mute_voices_(int)
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
11Classic_Emu
13Silent_Buffer
Read error
Error seeking in file
Couldn't read from file
n >= 0
Couldn't open file
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Data_Reader.cpp
virtual const char* File_Reader::skip(long int)
Unexpected end of file
11Data_Reader
11File_Reader
15Std_File_Reader
15Mem_File_Reader
13Subset_Reader
16Remaining_Reader
15Callback_Reader
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Dual_Resampler.cpp
blip_buf.samples_avail() == pair_count
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Fir_Resampler.h
count == (long) sample_buf_size
new_count < resampler_size
write_pos <= buf.end()
void Fir_Resampler_::write(long int)
T& blargg_vector<T>::operator[](size_t) const [with T = short int; size_t = long unsigned int]
void Dual_Resampler::play_frame_(Blip_Buffer&, Dual_Resampler::dsample_t*)
14Dual_Resampler
total_samples % 2 == 0
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Effects_Buffer.cpp
virtual long int Effects_Buffer::read_samples(blip_sample_t*, long int)
14Effects_Buffer
Mb@?
MbP?
T& blargg_vector<T>::operator[](size_t) const [with T = short int; size_t = long unsigned int]
NSFE
(data || !size) && out
path && out
/builddir/build/BUILD/game-music-emu-0.6.0/gme/gme.cpp
(unsigned) i < (unsigned) me->voice_count()
const char* gme_type_system(gme_type_t)
const char* gme_voice_name(const Music_Emu*, int)
const char* gme_open_file(const char*, Music_Emu**, int)
const char* gme_open_data(const void*, long int, Music_Emu**, int)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Gme_File.cpp
/builddir/build/BUILD/game-music-emu-0.6.0/gme/blargg_endian.h
Wrong file type for this emulator
data != file_data.begin()
*(volatile char*) &i != 0
< ? >
Invalid track
Invalid track in m3u playlist
T& blargg_vector<T>::operator[](size_t) const [with T = M3u_Playlist::entry_t; size_t = long unsigned int]
virtual const char* Gme_File::load_mem_(const byte_*, long int)
void blargg_verify_byte_order()
8Gme_File
/builddir/build/BUILD/game-music-emu-0.6.0/gme/M3u_Playlist.cpp
raw_track_count_
Not an m3u playlist
Composer
Engineer
Ripping
Tagging
T& blargg_vector<T>::operator[](size_t) const [with T = M3u_Playlist::entry_t; size_t = long unsigned int]
const char* Gme_File::load_m3u_(blargg_err_t)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Multi_Buffer.cpp
!(count & 1)
virtual long int Stereo_Buffer::read_samples(blip_sample_t*, long int)
12Multi_Buffer
11Mono_Buffer
13Stereo_Buffer
Use full emulator for playback
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Music_Emu.cpp
(unsigned) index < (unsigned) voice_count()
!sample_rate()
current_track() >= 0
!buf_remain
out_count % stereo == 0
emu_time >= out_time
Voice 1
Voice 2
Voice 3
Voice 4
Voice 5
Voice 6
Voice 7
Voice 8
const char* Music_Emu::play(long int, Music_Emu::sample_t*)
void Music_Emu::fill_buf()
const char* Music_Emu::skip(long int)
void Music_Emu::set_tempo(double)
void Music_Emu::mute_voices(int)
void Music_Emu::mute_voice(int, bool)
virtual void Music_Emu::pre_load()
const char* Music_Emu::set_sample_rate(long int)
9Music_Emu
9Gme_Info_
N@/builddir/build/BUILD/game-music-emu-0.6.0/gme/Ay_Apu.cpp
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Blip_Buffer.h
(blip_long) (time >> 16) < blip_buf->buffer_size_
(unsigned) addr < reg_count
final_end_time >= last_time
-remain <= env_period
env.delay > 0
env.pos < 0
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void Ay_Apu::run_until(blip_time_t)
void Ay_Apu::write_data_(int, int)
=*>&
 -@Z
M?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Ym2612_Emu.cpp
(unsigned) data <= 0xFF
clock_rate > sample_rate
void Ym2612_Impl::write0(int, int)
void Ym2612_Impl::write1(int, int)
void Ym2612_Impl::set_rate(double, double)
!Y?H
0?xwwwww
'	UA
B/builddir/build/BUILD/game-music-emu-0.6.0/gme/Sms_Apu.cpp
(center && left && right) || (!center && !left && !right)
(unsigned) index < osc_count
void Sms_Apu::write_data(blip_time_t, int)
void Sms_Apu::write_ggstereo(blip_time_t, int)
void Sms_Apu::end_frame(blip_time_t)
void Sms_Apu::run_until(blip_time_t)
void Sms_Apu::osc_output(int, Blip_Buffer*, Blip_Buffer*, Blip_Buffer*)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
333333[?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Ay_Cpu.cpp
false
bool Ay_Cpu::run(cpu_time_t)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Ay_Apu.h
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Ay_Emu.cpp
(unsigned long) pos <= (unsigned long) file_size - 2
last_time >= time
(unsigned) i < osc_count
Missing track data
ZXAYEMUL
Unknown file version
File data missing
Bad data block size
Missing file data
Wave 1
Wave 2
Wave 3
Beeper
ZX Spectrum
void Ay_Apu::end_frame(blip_time_t)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void Ay_Apu::osc_output(int, Blip_Buffer*)
const byte_* get_data(const Ay_Emu::file_t&, const byte_*, int)
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
6Ay_Cpu
6Ay_Emu
7Ay_File
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Gb_Apu.cpp
(unsigned) index < register_count
next_frame_time >= end_time
(unsigned) data < 0x100
int Gb_Apu::read_register(blip_time_t, unsigned int)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Gb_Apu::write_register(blip_time_t, unsigned int, int)
void Gb_Apu::end_frame(blip_time_t)
void Gb_Apu::run_until(blip_time_t)
<`YY
void Gb_Apu::osc_output(int, Blip_Buffer*, Blip_Buffer*, Blip_Buffer*)
zD?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Gb_Cpu.cpp
start % page_size == 0
size % page_size == 0
bool Gb_Cpu::run(blargg_long)
void Gb_Cpu::map_code(gb_addr_t, unsigned int, void*)
void blargg_verify_byte_order()
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
 0@P`p
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
Invalid timer mode
Square 1
Square 2
Noise
Game Boy
Invalid load/init/play address
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Music_Emu.h
Emulation error (illegal/unsupported instruction)
T& blargg_vector<T>::operator[](size_t) const [with T = unsigned char; size_t = long unsigned int]
void Music_Emu::set_gain(double)
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
H6Gb_Cpu
7Gbs_Emu
8Gbs_File
333333
r@Packed GYM file not supported
GYMX
Unknown Song
Unknown Game
Unknown Publisher
Unknown Person
Header added by YMAMP
FM 1
FM 2
FM 3
FM 4
FM 5
FM 6
Sega Genesis
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
7Gym_Emu
8Gym_File
@/builddir/build/BUILD/game-music-emu-0.6.0/gme/Hes_Apu.cpp
noise_lfsr
osc->last_time >= end_time
void Hes_Apu::end_frame(blip_time_t)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Hes_Osc::run_until(Hes_Osc::synth_t&, blip_time_t)
void Hes_Apu::osc_output(int, Blip_Buffer*, Blip_Buffer*, Blip_Buffer*)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Hes_Cpu.cpp
(unsigned) reg <= page_count
(unsigned) bank < 0x100
T& blargg_vector<T>::operator[](size_t) const [with T = unsigned char; size_t = long unsigned int]
void Hes_Cpu::set_mmr(int, int)
void blargg_verify_byte_order()
HESM
DATA
Data header missing
Unknown header data
Invalid address
Invalid size
Extra file data
Multiple DATA not supported
state == &state_
Wave 4
Multi 1
Multi 2
PC Engine
void Hes_Cpu::end_frame(hes_time_t)
void Music_Emu::set_gain(double)
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
Emulation error (illegal instruction)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Hes_Cpu.h
Scanline interrupt unsupported
7Hes_Cpu
7Hes_Emu
8Hes_File
@333333
?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Kss_Cpu.cpp
addr % page_size == 0
bool Kss_Cpu::run(cpu_time_t)
void Kss_Cpu::map_mem(unsigned int, blargg_ulong, void*, const void*)
KSCC
KSSX
Unknown data in header
FM sound not supported
Sega Master System
Game Gear
last_time >= 0
Excessive data size
Bank data missing
Square 3
Wave 5
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Kss_Scc_Apu.h
void Scc_Apu::end_frame(blip_time_t)
void Ay_Apu::end_frame(blip_time_t)
T& blargg_vector<T>::operator[](size_t) const [with T = unsigned char; size_t = long unsigned int]
void Ay_Apu::osc_output(int, Blip_Buffer*)
void Scc_Apu::osc_output(int, Blip_Buffer*)
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
7Kss_Cpu
7Kss_Emu
8Kss_File
@ffffff
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Apu.cpp
end_time >= last_dmc_time
last_dmc_time >= 0
addr > 0x20
void Nes_Apu::write_register(nes_time_t, nes_addr_t, int)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void Nes_Apu::end_frame(nes_time_t)
void Nes_Apu::run_until_(nes_time_t)
void Nes_Apu::run_until(nes_time_t)
2]?!
;t?S
uqk?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Cpu.cpp
start + size <= 0x10000
Invalid bank
void Nes_Cpu::map_code(nes_addr_t, unsigned int, const void*, bool)
void blargg_verify_byte_order()
T& blargg_vector<T>::operator[](size_t) const [with T = unsigned char; size_t = long unsigned int]
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Fme7_Apu.cpp
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void Nes_Fme7_Apu::run_until(blip_time_t)
"0D`
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Namco_Apu.cpp
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 15; blip_resampled_time_t = unsigned int]
void Nes_Namco_Apu::end_frame(blip_time_t)
NK?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Oscs.cpp
prg_reader
void Nes_Dmc::fill_buffer()
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
 !!"#$$%&&'())*++,--.//0012234455677889::;;<<==>??@@AABBCCDDEFFGGHHIIJJKKKLLMMNNOOPPQQRRRS
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Vrc6_Apu.cpp
(unsigned) osc_index < osc_count
(unsigned) reg < reg_count
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void Nes_Vrc6_Apu::end_frame(blip_time_t)
void Nes_Vrc6_Apu::write_osc(blip_time_t, int, int, int)
void Nes_Vrc6_Apu::run_until(blip_time_t)
gz?Famicom
NESM
(unsigned) osc < osc_count
Triangle
Square 4
Square 5
Saw Wave
Wave 6
Wave 7
Wave 8
Nintendo NES
Uses unsupported audio expansion hardware
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Fme7_Apu.h
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Apu.h
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Vrc6_Apu.h
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Namco_Apu.h
Corrupt file (invalid load/init/play address)
void Nes_Fme7_Apu::end_frame(blip_time_t)
void Nes_Namco_Apu::osc_output(int, Blip_Buffer*)
void Nes_Vrc6_Apu::osc_output(int, Blip_Buffer*)
void Nes_Apu::osc_output(int, Blip_Buffer*)
void Music_Emu::set_gain(double)
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
7Nes_Cpu
7Nsf_Emu
8Nsf_File
LO;A
^9AUUUUUX
Corrupt file
T& blargg_vector<T>::operator[](size_t) const [with T = char [4]; size_t = long unsigned int]
T& blargg_vector<T>::operator[](size_t) const [with T = char; size_t = long unsigned int]
T& blargg_vector<T>::operator[](size_t) const [with T = const char*; size_t = long unsigned int]
T& blargg_vector<T>::operator[](size_t) const [with T = unsigned char; size_t = long unsigned int]
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
8Nsfe_Emu
9Nsfe_File
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void blargg_verify_byte_order()
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Sap_Apu.h
Invalid init address
Invalid play address
Invalid music address
Invalid track count
Digimusic not supported
Unsupported player type
Invalid fastplay value
ROM data missing
INIT
PLAYER
MUSIC
SONGS
TYPE
STEREO
FASTPLAY
AUTHOR
NAME
DATE
Invalid file data block
Atari XL
void Sap_Apu::osc_output(int, Blip_Buffer*)
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
7Sap_Cpu
7Sap_Emu
8Sap_File
?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Spc_Dsp.h
(unsigned) addr < register_count
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Snes_Spc.cpp
out <= &m.extra_buf [extra_size]
Not an SPC file
Corrupt SPC file
(size & 1) == 0
out <= out_end
(count & 1) == 0
void Spc_Dsp::write(int, int)
const char* Snes_Spc::play(int, Snes_Spc::sample_t*)
void Snes_Spc::save_extra()
void Snes_Spc::set_output(Snes_Spc::sample_t*, int)
(G46&TThHGEVUe"F(G46&TTtHGEVUe"8(G46&DTfHGEVUE"C(G46&DTuHGEVUU"6(G46&TREHGEVUU"
8G46&DRDHGEVUU"48GEG%dRIHGVgEU"
(G46$SC@HGEV4T"`SNES-SPC700 Sound File Data v0.30
BOOST::uint8_t* Snes_Spc::run_until_(Snes_Spc::time_t)
void Snes_Spc::end_frame(Snes_Spc::time_t)
int Snes_Spc::cpu_read(int, Snes_Spc::rel_time_t)
void Snes_Spc::cpu_write_high(int, int, Snes_Spc::rel_time_t)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Spc_Cpu.cpp
(m.ram.ram) [i + rom_addr] == (uint8_t) data
reg + (r_t0out + 0xF0 - 0x10000) < 0x100
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Spc_Cpu.h
-cpu_lag_max <= m.spc_time && m.spc_time <= 0
rel_time <= 0
SPC emulation error
m.spc_time <= end_time
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Spc_Dsp.cpp
brr_offset == brr_block_size
m.ram
void Spc_Dsp::soft_reset_common()
void blargg_verify_byte_order()
void Spc_Dsp::run(int)
void Spc_Dsp::set_output(Spc_Dsp::sample_t*, int)
gRWF=Y
xid6
SNES-SPC700 Sound File Data
DSP 1
DSP 2
DSP 3
DSP 4
DSP 5
DSP 6
DSP 7
DSP 8
Super Nintendo
void Fir_Resampler_::write(long int)
T& blargg_vector<T>::operator[](size_t) const [with T = short int; size_t = long unsigned int]
void Music_Emu::set_gain(double)
7Spc_Emu
8Spc_File
@/builddir/build/BUILD/game-music-emu-0.6.0/gme/Spc_Filter.cpp
void SPC_Filter::run(short int*, int)
YM2413 FM sound isn't supported
Gd3 
Vgm 
Sega SMS/Genesis
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
7Vgm_Emu
8Vgm_File
rhU?
R@/builddir/build/BUILD/game-music-emu-0.6.0/gme/Vgm_Emu_Impl.cpp
to_fm_time( vgm_time ) <= min_pairs
Stream lacked end event
Unknown stream event
virtual int Vgm_Emu_Impl::play_frame(blip_time_t, int, Vgm_Emu_Impl::sample_t*)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
12Vgm_Emu_Impl
;*3$"
zPLR
libgme.so.0.6.0.debug
7zXZ
:w~/
_Y~!
C6Ib
-V e
l_e-
[IP<p
ZpKh%
fv[Vy
,S?m
TS}|`
$|;~
OH!x
@"n	M
T$xk
xWf'
"dGg
:v6%
#X!/
5CGy?
Z>C_ziS
	uBB
uskab
b`RD.
R	"Gjf
KCy	O#
~|"9t
)+eJ
Af"G"]
cgOVz$U
%H2 
TQ.\A
&&LCu)
Mc~hf
n:<}
"n~f
xgh+	@
->$#
.ofZ
V''t<
n(IdL
2(t&?
KD}H{
8ij@
bj^_)
NQ)!
XC_U
3[)S
01@Q
QGWg"B2
CBjyA
_&fk5
DnMfr
:jN;
_V%M@
(:i	
`;8sRz
~Jl0p
k=r$
0QO<!
A*77
:\,:M
n<<#2n
I.}1U
$}L(/U
91T\
]3?Uz
F9.E
8~(	g
I\yZ
knCV
jR*4h
~Ji"6
Rosw
4o">i
xP)Y
Tvc)u
oo02PmT
w$r-
G_"X
&#EA
o:`=
Df'^-w
apF!B
"R9.
).+!
c9F.
KlwP
W)oR
!JNt%O;x
mU*K
+RsI
iC=<
cT+0
3Xg&
 lfw
 $=B
15sK
?"vb
0DH#
e5e&"L
+A3W
8x\o~>
B$ae
=+L{:
{poN
u{{c6^
"xt4
c&xf
b:I{Ac
F1N7P:
SaWN
.V!Bc
yJy`
[4qx
`*p%
V%:'
#ONP
lK(`
s@^)0
Rx<5
"	G-
pb2m
"ncT
e]'N
tu*v
#c(if
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
