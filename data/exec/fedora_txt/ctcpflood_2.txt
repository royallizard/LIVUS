__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
_ZNSsC2EPKcRKSaIcE
_ZN7CModuleD2Ev
_ZdlPv
_Znwm
_ZN7CModuleC2EPvP5CUserP11CIRCNetworkRK7CStringS7_
_Unwind_Resume
__gxx_personality_v0
__assert_fail
_ZNSs6assignERKSs
_ZNSs4_Rep20_S_empty_rep_storageE
_ZNSs4_Rep10_M_destroyERKSaIcE
_ZNSs4_Rep10_M_disposeERKSaIcE
_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_
_ZNSsC1ERKSs
_ZNSs6appendERKSs
_ZNK7CString5TokenEmbRKS_b
_ZNK7CString6ToUIntEv
_ZN7CStringC1El
_ZN7CModule5SetNVERK7CStringS2_b
_ZN7CStringC1Ej
_ZNSs6appendEPKcm
_ZNSsC2ERKSs
_ZNK7CModule5GetNVERK7CString
_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_
strlen
_ZNSs7reserveEm
_ZNK7CString6EqualsERKS_bm
time
_ZNK5CNick11GetHostMaskEv
_ZNSt8_Rb_treeIN8CModInfo11EModuleTypeES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE16_M_insert_uniqueERKS1_
_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
ZNCModInfo
_ZNSt8ios_base4InitC1Ev
_ZNSt8ios_base4InitD1Ev
__cxa_atexit
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTI7CModule
_ZN7CModule6OnBootEv
_ZN7CModule10GetWebPathEv
_ZN7CModule15GetWebFilesPathEv
_ZN7CModule15OnWebPreRequestER8CWebSockRK7CString
_ZN7CModule12OnWebRequestER8CWebSockRK7CStringR9CTemplate
_ZN7CModule20OnEmbeddedWebRequestER8CWebSockRK7CStringR9CTemplate
_ZN7CModule11OnPreRehashEv
_ZN7CModule12OnPostRehashEv
_ZN7CModule17OnIRCDisconnectedEv
_ZN7CModule14OnIRCConnectedEv
_ZN7CModule15OnIRCConnectingEP8CIRCSock
_ZN7CModule20OnIRCConnectionErrorEP8CIRCSock
_ZN7CModule17OnIRCRegistrationER7CStringS1_S1_S1_
_ZN7CModule11OnBroadcastER7CString
_ZN7CModule16OnChanPermissionERK5CNickS2_R5CChanhbb
_ZN7CModule4OnOpERK5CNickS2_R5CChanb
_ZN7CModule6OnDeopERK5CNickS2_R5CChanb
_ZN7CModule7OnVoiceERK5CNickS2_R5CChanb
_ZN7CModule9OnDevoiceERK5CNickS2_R5CChanb
_ZN7CModule6OnModeERK5CNickR5CChancRK7CStringbb
_ZN7CModule9OnRawModeERK5CNickR5CChanRK7CStringS7_
_ZN7CModule5OnRawER7CString
_ZN7CModule15OnStatusCommandER7CString
_ZN7CModule19OnUnknownModCommandERK7CString
_ZN7CModule11OnModNoticeERK7CString
_ZN7CModule9OnModCTCPERK7CString
_ZN7CModule6OnQuitERK5CNickRK7CStringRKSt6vectorIP5CChanSaIS8_EE
_ZN7CModule6OnNickERK5CNickRK7CStringRKSt6vectorIP5CChanSaIS8_EE
_ZN7CModule6OnKickERK5CNickRK7CStringR5CChanS5_
_ZN7CModule6OnJoinERK5CNickR5CChan
_ZN7CModule6OnPartERK5CNickR5CChanRK7CString
_ZN7CModule8OnInviteERK5CNickRK7CString
_ZN7CModule20OnChanBufferStartingER5CChanR7CClient
_ZN7CModule18OnChanBufferEndingER5CChanR7CClient
_ZN7CModule20OnChanBufferPlayLineER5CChanR7CClientR7CString
_ZN7CModule20OnPrivBufferPlayLineER7CClientR7CString
_ZN7CModule13OnClientLoginEv
_ZN7CModule18OnClientDisconnectEv
_ZN7CModule9OnUserRawER7CString
_ZN7CModule15OnUserCTCPReplyER7CStringS1_
_ZN7CModule10OnUserCTCPER7CStringS1_
_ZN7CModule12OnUserActionER7CStringS1_
_ZN7CModule9OnUserMsgER7CStringS1_
_ZN7CModule12OnUserNoticeER7CStringS1_
_ZN7CModule10OnUserJoinER7CStringS1_
_ZN7CModule10OnUserPartER7CStringS1_
_ZN7CModule11OnUserTopicER7CStringS1_
_ZN7CModule18OnUserTopicRequestER7CString
_ZN7CModule11OnCTCPReplyER5CNickR7CString
_ZN7CModule12OnPrivActionER5CNickR7CString
_ZN7CModule12OnChanActionER5CNickR5CChanR7CString
_ZN7CModule9OnPrivMsgER5CNickR7CString
_ZN7CModule9OnChanMsgER5CNickR5CChanR7CString
_ZN7CModule12OnPrivNoticeER5CNickR7CString
_ZN7CModule12OnChanNoticeER5CNickR5CChanR7CString
_ZN7CModule7OnTopicER5CNickR5CChanR7CString
_ZN7CModule20OnServerCapAvailableERK7CString
_ZN7CModule17OnServerCapResultERK7CStringb
_ZN7CModule15OnTimerAutoJoinER5CChan
_ZN7CModule6PutIRCERK7CString
_ZN7CModule7PutUserERK7CString
_ZN7CModule9PutStatusERK7CString
_ZN7CModule9PutModuleERK7CString
_ZN7CModule9PutModuleERK6CTable
_ZN7CModule12PutModNoticeERK7CString
_ZN7CModule10ListTimersEv
_ZN7CModule11ListSocketsEv
_ZN7CModule9OnAddUserER5CUserR7CString
_ZN7CModule12OnDeleteUserER5CUser
_ZN7CModule15OnClientConnectEP8CZNCSockRK7CStringt
_ZN7CModule14OnLoginAttemptE9CSmartPtrI9CAuthBaseE
_ZN7CModule13OnFailedLoginERK7CStringS2_
_ZN7CModule16OnUnknownUserRawEP7CClientR7CString
_ZN7CModule13OnClientCapLsEP7CClientRSt3setI7CStringSt4lessIS3_ESaIS3_EE
_ZN7CModule20IsClientCapSupportedEP7CClientRK7CStringb
_ZN7CModule18OnClientCapRequestEP7CClientRK7CStringb
_ZN7CModule15OnModuleLoadingERK7CStringS2_N8CModInfo11EModuleTypeERbRS0_
_ZN7CModule17OnModuleUnloadingEPS_RbR7CString
_ZN7CModule12OnGetModInfoER8CModInfoRK7CStringRbRS2_
_ZN7CModule18OnGetAvailableModsERSt3setI8CModInfoSt4lessIS1_ESaIS1_EENS1_11EModuleTypeE
__pthread_key_create
libstdc++.so.6
libm.so.6
libgcc_s.so.1
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
GCC_3.0
GLIBC_2.2.5
CXXABI_1.3
GLIBCXX_3.4
%zO 
%rO 
%jO 
%bO 
%ZO 
%RO 
%JO 
%BO 
%:O 
%2O 
%*O 
%"O 
=IM 
=bN 
=)N 
=bG 
fffff.
= G 
ATUH
([]A\A]
ffff.
[]A\
[]A\A]A^A_
ATUSH
[]A\A]
AVAUATI
\$`L
l$PH
D$`H
t$@H
D$PH
D$`H
D$PH
D$PH
D$`H
D$PH
D$`H
D$ A
|$0H
D$`H
D$PH
D$0H
D$ H
D$@H
[]A\A]A^A_
D$`H
D$PH
D$`H
D$PH
=uD 
=ED 
=_C 
=1C 
=yB 
=KB 
D$PL
D$`L
t$@L
D$0H
D$ H
D$@H
D$0H
D$`H
D$PH
D$`H
t$0H
D$`L
D$PL
AUATI
[]A\A]
AVAUATUH
\$@L
d$PH
t$ L
l$0H
T$@H
H;=7> 
T$0H
H;=!> 
T$PH
[]A\A]A^A_
[]A\A]A^A_
D$PH
D$@H
D$0H
D$ H
=R< 
=l; 
D$PH
D$@H
D$0H
D$ H
D$@H
D$0L
D$PH
D$@L
AVAUATUH
d$0H
t$@H
D$PE1
D$@H
|$`H
D$PH
D$`H
d$pL
D$pH
T$%H
T$$H
D$PH
D$0H
[]A\A]A^A_
D$PH
T$,H
T$+H
=z0 
=L0 
=d/ 
=6/ 
=~. 
=P. 
=". 
=j- 
=<- 
=V, 
=", 
=h+ 
=:+ 
=z* 
=P* 
D$PL
D$0H
t$/H
t$.H
D$@L
D$`L
D$pL
t$ H
t$#H
t$!H
t$"H
t$&H
t$'H
t$(H
t$-H
t$)H
t$*H
AVAUATUH
\$@L
d$PH
t$ L
l$0H
T$@H
T$0H
T$PH
[]A\A]A^A_
[]A\A]A^A_
D$PH
D$@H
D$0H
D$ H
=8  
D$PH
D$@H
D$0H
D$ H
D$@H
D$0L
D$PH
D$@L
AWAVI
AUATI
C E9
u!E9
[]A\A]A^A_
tUE1
E A9
[]A\A]A^
AWAVI
ATUSH
([]A\A]A^A_
([]A\A]A^A_
t3H9
t3H9
t4L9
t/H9
./../include/znc/Utils.h
m_puCount
ctcpflood
msgs
ACTION
Limit reached by [
], blocking all CTCP
Set seconds limit to [
lines
Set lines limit to [
show
Current limit is 
 CTCPs in 
 secs
This user module takes none to two arguments. The first argument is the number of lines after which the flood-protection is triggered. The second argument is the time (s) to in which the number of lines is reached. The default setting is 4 CTCPs in 2 seconds
Commands: show, secs [limit], lines [limit]
Don't forward CTCP floods to clients
void CSmartPtr<T>::Release() [with T = CWebSubPage]
CSmartPtr<T>& CSmartPtr<T>::operator=(const CSmartPtr<T>&) [with T = CWebSubPage]
13CCtcpFloodMod
;*3$"
zPLR
ctcpflood.so.debug
7zXZ
12T+
q?$E
onOl
JIO:	T
T|F$
\gEfEp
hZV2	
jp8g
VATw
?+	Z
gUl7)
)3U(
x*s4
3~(B6
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
