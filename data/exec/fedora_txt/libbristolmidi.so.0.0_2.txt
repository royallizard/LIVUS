~{x?
6(bHQ
4fsPz
,]7.^(8
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
initControlPort
gethostname
__strcpy_chk
__printf_chk
index
strtol
gethostbyname
socket_descriptor
__memmove_chk
connect
__sprintf_chk
perror
__stack_chk_fail
recvFlag
bristolMidiTCPPassive
strlen
open_remote_socket
bmidi
unlink
fcntl
puts
snprintf
bind
listen
chmod
__snprintf_chk
acceptConnection
bristolMidiFindDev
accept
bristolMidiFindFreeHandle
setsockopt
bristolMidiOpen
initMidiLib
bristolMidiALSAOpen
bristolMidiJackOpen
bristolMidiSeqOpen
bristolMidiTCPOpen
bristolMidiOSSOpen
bristolMidiRegisterForwarder
bristolMidiOption
bristolMidiSanity
bristolMidiClose
bristolMidiALSAClose
bristolMidiJackClose
bristolMidiSeqClose
bristolMidiTCPClose
bristolMidiOSSClose
bristolMidiDevRead
bristolMidiDevSanity
bristolMidiSeqRead
bristolMidiALSARead
bristolGetMidiFD
bristolMidiPost
memmove
bristolMidiRead
usleep
bristolMidiTerminate
bristolMidiRawWrite
bristolPhysWrite
bristolMidiWrite
bristolMidiControl
bristolMidiSeqCCEvent
bristolPitchEvent
bristolKeyEvent
bristolMidiSeqKeyEvent
bristolPolyPressureEvent
bristolMidiSeqPPressureEvent
bristolPressureEvent
bristolMidiSeqPressureEvent
bristolMidiSendControlMsg
bristolMidiSendNRP
bristolMidiSendRP
bristolMidiSendKeyMsg
bristolMidiSendMsg
snd_rawmidi_open
snd_seq_port_info_sizeof
memset
snd_seq_port_info_set_name
snd_seq_port_info_set_capability
snd_seq_port_info_set_type
snd_seq_create_port
snd_rawmidi_poll_descriptors_count
malloc
snd_rawmidi_poll_descriptors
bristolFreeHandle
snd_rawmidi_close
bristolFreeDevice
checkcallbacks
__fdelt_chk
select
bristolMidiRawToMsg
snd_rawmidi_read
midiCheck
midiMode
bristolMidiOSSRead
gettimeofday
databytes
bristolMidiPrintGM2
bristolMsgPrint
bristolMidiPrint
putchar
bristolMidiToGM2
strcmp
bristolMidiPrintHandle
snd_seq_open
snd_seq_set_client_name
snd_seq_client_id
snd_seq_alloc_queue
snd_seq_nonblock
snd_seq_poll_descriptors_count
snd_seq_poll_descriptors
free
snd_strerror
snd_seq_close
translate_event
snd_seq_free_event
snd_seq_event_input
snd_seq_event_output_direct
bristolMidiTCPActive
address
bristolMidiTCPRead
local_socket_addr
logf
logthread
logInput
fgets
__syslog_chk
localtime
strftime
fsync
closelog
pthread_exit
getenv
mkdir
resetBristolCache
setenv
getBristolCache
calloc
__xstat
strcpy
bristolGetMap
fopen
strncmp
strtod
fclose
bristolGetFreqMap
bristolMidiValueMappingTable
bristolOpenStdio
pipe
dup2
fdopen
lthread
pthread_create
pthread_cancel
openlog
jack_midi_shutdown
jackMidiRoutine
jack_port_get_buffer
jack_midi_get_event_count
jack_midi_event_get
jackMidiRegisterPort
jack_port_register
jack_client_open
jack_set_process_callback
jack_on_shutdown
jack_activate
stderr
fwrite
bristolJackSetMidiHandle
jack_client_close
__ctype_b_loc
bristolParseScala
libasound.so.2
libjack.so.0
libm.so.6
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
libbristolmidi.so.0
GLIBC_2.2.5
GLIBC_2.15
GLIBC_2.4
GLIBC_2.3
GLIBC_2.3.4
ALSA_0.9
fffff.
AUATI
l$ dH
IcT$
[]A\A]
l$@H
AUATE1
Lcl$PL
Lcl$PL
/tmp/.br
istoH
D$XC
D,L 
([]A\A]
fffff.
AWAVA
AUATUSH
D$81
t$ Lc
D96u
|#PH
\$8dH3
H[]A\A]A^A_
t$ Hi
AWAVAUA
T(@A
L$ L
T$8D
\$0L
D$(H
T$PA
\$ D
H[]A\A]A^A_
t$8H
T$0H
T$0H
L$(Hi
D$ H
[]A\A]A^A_
T$8D
\$0L
T$8urA
L$ L
T$8D
\$0L
T$(Hi
L$ L
T$8D
\$0L
L$ L
T$8D
\$0L
fffff.
[]A\
@t+v$=
[]A\
[]A\
[]A\
ffffff.
taHi
[]A\
[]A\
ATLc
t6Ii
[]A\A]
AWAVI
ATUS
[]A\A]A^A_
ffff.
fff.
([]A\A]
([]A\A]
([]A\A]
ffffff.
fff.
[]A\A]
fffff.
[]A\A]
fffff.
AULc
D$(1
t$(dH34%(
8[]A\A]A^A_
AWAVAUATSH
FPMi
L,L@H
[A\A]A^A_]
ffff.
ukHc
IcD$
AUATUSH
N'Hc
n'Hc
[]A\A]A^A_
([]A\A]A^A_
AWAVAUATA
t$ L
[]A\A]A^A_
@O uGIi
AWAVAUATUSH
[]A\A]A^A_
xrf.
uSIc
HcT$
ffffff.
ffffff.
t]vK<
[]A\A]
[]A\A]
[]A\A]
ffff.
ffff.
ADv{<
vo<-
AWAVAUATUSH
LcUhA
P$D9
[]A\A]A^A_
?t7F
 LcUh
fffff.
 w3Hc
=Zz 
ATHc
[]A\
 wKH
w&Hc@
w-Hi
ATUH
-vw 
@uXA
[]A\
AVAUATA
[A\A]A^A_]
AULc
ATUH
%Zr 
O tv
O t"
E!Mi
[]A\A]A^
D,O 
D,O 
D,O 
D,O 
D,O 
D,O 
D,O 
D,O 
D,O 
AVAUATA
EO H
[]A\A]A^
D$(1
L$(dH3
8[]A\A]A^A_
D$(1
O u^Hi
L$(dH3
8[]A\A]A^A_
D$(1
O u[Hi
L$(dH3
0[]A\A]A^
D$(1
O ucHi
L$(dH3
0[]A\A]A^
ATHc
IcL$
=!o 
AWE1
AVAUI
ATUSH
t$`u8H
- f 
/tmp/.br
istoH
\$hx(H
([]A\A]A^A_
AVAUATUH
|$ dH
 t-Hc
~0D)
[]A\A]A^A_
 []A\
AVAUI
ATUSH
\$0dH
l$ 1
D$ L
=.h 
L$ +
L$ +
=Lf 
ATUSH
[]A\
=Ad 
5#d 
=gc 
5Ic 
=1g 
=yb 
=ab 
=Fb 
=.b 
=aa 
5Ca 
ffffff.
AWAVI
AUATI
=m` 
[]A\A]A^A_
=|] 
ffffff.
ATUSH
[]A\A]
AVAUI
ATUH
tgE1
[]A\A]A^A_
bristol
disynthe
gratH
5MT 
brighton
=.T 
AWAVAUATUSH
l$0A
|$ I
D$ H
[]A\A]A^A_
=!V 
D$(H
=fU 
=PU 
=BU 
= U 
fffff.
fff.
AWAVAUATUSH
\$ L
|$ !t
[]A\A]A^A_
hostname is %s, %s
localhost
socket failed
TCP port: %i
Unknown host?!
%s: %s
connect failed on %i
could not resolve %s, defaulting to localhost
unix
Could not get control socket
Could not set non-blocking
/tmp/br.%s
Could not bind name: %s
Bound name to socket: %s
Could not configure listens
Activated listens on socket
No dev available for accept()
server linger failed
Could not open control socket, count %i
No controlling socket available: anticipating MIDI
Opened listening control socket: %i
Opened Unix named control socket
Accepted connection from %i (%i) onto %i (%i)
Did not find related accept socket
bristolMidiOpen(%s, %x)
reusing connection %x
conn type %x not supported
register message forwarder
bristolMidiClose(%i) %x
DID NOT CLOSE A HANDLE!!!
bristolMidiDevRead(%i)
post %i bytes
bristolMidiRead(%i): %i/%i
reading type %x
MIDI/TCP read failure
closing down TCP sockets
terminate MIDI signalling
bristolMidiWrite %i/%i, %i
%i %i %i
velocity %i
returning handle %i, flags %x, fd %i
	Requested forward on handle %i %i %x %i
bristolMidiRawWrite (%x) %x/%i
key event ch: %i, key: %i over fd %i
pressure ch: %i, pressure: %i over fd %i
bristolMidiSendMsg(%i, %i, %i, %i, %i)
controller %i/%i value %i outside range
bristolMidiALSAOpen(%s)
bristol input port
error creating alsa port
created alsa port
bristolMidiALSAClose()
forward failed
null callback
callback non sysex: %i %x
bristolMidiALSARead(%i)
%i-%02x 
Device buffer exhausted
parsed %i
Could not open the MIDI interface.
issue getting descriptors: %i
msg from %i, chan %i, %i bytes
candidate for forwarding: %i: %i -> %i (%x %x: %i %i)
no data in alsa buffer for %i (close)
Issue with buffer capacity going negative
midi write error, fd %i, size %i
Last open conn, exiting
Could not open OSS midi interface
libbristolmidi - should not be in OSS read routines
GM2: base %i from %i/%i
	%i/%i = %i %f
ID  0x%x%x%x%x
    msgLen  %i
    msgType %i
    channel %i
    from    %i
    op      %i
    cont    %i
    MSB     %i
    LSB     %i
    value   %i/%x
system
 bristol (%i)
%s (%i) ch %i: %s, value %i
%s (%i) ch %i: p_id %i
%s (%i) ch %i: pressure %i
bad SLab SYSEX message length
BankSelectCoarse
ModulationWheelCoarse
BreathcontrollerCoarse
FootPedalCoarse
PortamentoTimeCoarse
DataEntryCoarse
VolumeCoarse
BalanceCoarse
PanpositionCoarse
ExpressionCoarse
EffectControl1Coarse
EffectControl2Coarse
GeneralPurposeSlider1
GeneralPurposeSlider2
GeneralPurposeSlider3
GeneralPurposeSlider4
BankSelectFine
ModulationWheelFine
BreathcontrollerFine
FootPedalFine
PortamentoTimeFine
DataEntryFine
VolumeFine
BalanceFine
PanpositionFine
ExpressionFine
EffectControl1Fine
EffectControl2Fine
HoldPedal
Portamento
SustenutoPedal
SoftPedal
LegatoPedal
Hold2Pedal
SoundVariation
SoundTimbre
SoundReleaseTime
SoundAttackTime
SoundBrightness
SoundControl6
SoundControl7
SoundControl8
SoundControl9
SoundControl10
GeneralPurposeButton1
GeneralPurposeButton2
GeneralPurposeButton3
GeneralPurposeButton4
EffectsLevel
TremuloLevel
ChorusLevel
CelesteLevel
PhaserLevel
DataButtonincrement
DataButtondecrement
Non-registeredParameter
RegisteredParameter
AllSoundOff
AllControllersOff
LocalKeyboard
AllNotesOff
OmniModeOff
OmniModeOn
MonoOperation
PolyOperation
%s (%i) ch %i: %i, velocity %i
%s (%i) ch %i: key %i, pressure %i
%s (%i) ch %i: c_id %i, c_val %i
%s (%i) ch %i: msb %i, lsb %i
unrecognised SYSEX ID %x %x %x %x (%i)
F	Handle:	 %i
	State:   %i
	Channel: %i
	Dev:     %i
	Flags:   %x
		devfd:  %i
		state:  %i
		hcount: %i
bristolMidiSeqOpen(%s)
default
Set client info error: %s
Client ID = %i
Cannot allocate queue: %s
Queue ID = %i
Cannot set nonblock mode: %s
%s io
%s output
Cannot create input port: %s
%s input
bristolMidiSeqClose()
, time = %d ticks
, time = %d.%09d
c%i-%02x/%02x/%02x 
c%i-%02x/%02x 
; len=%d [
%02x%s
; frame=0x%02x
%02i%s
; client=%i
; client=%i, port = %i
; %i:%i -> %i:%i
; not implemented
bristolMidiSeqRead()
msg->command = %02x
SeqSend failed: %p
Cannot determine client number: %s
EVENT>>> Type = %d, flags = 0x%x
%sSource = %d.%d, dest = %d.%d, queue = %d
; ch=%d, note=%d, velocity=%d, off_velocity=%d, duration=%d
; ch=%d, note=%d, velocity=%d
bristol does not support active sensing
bristolMidiSeqKeyEvent(%i, %i, %i, %i)
bristolMidiPressureEvent(%i, %i, %i)
bristolMidiCCKeyEvent(%i, %i, %i, %i)
connfailed
Could not get a socket
client linger failed
Could not connect to the bristol control socket
Connected to the bristol control socket: %i (dev=%i)
no data in tcp buffer for %i (close)
remote_socket_descriptor
open_remote_socket
socket id %i
Cannot listen to socket
/var/log/%s.log
HOME
%s/.bristol/log/%s.log
%s/.bristol/log
/dev/null
%b %e %T
%s %-8s [%05.6f] %s
BRISTOL_CACHE
%s/memory/profiles/%s
%s/memory
%s/memory/profiles
%s/memory/%s
%s/.bristol
%s/.bristol/memory/%s
BRISTOL
%s.mcm
controllerMap
inverseLinear
inverseLog
exponential
inverseExponential
parabola
inverseParabola
Could not fdopen() log fd
(suppressed excess message %i bytes)
%s/.bristol/memory/profiles/%s
%i frequency mappings: %f %f, %f %f
starting file logging [@%i.%i]
starting logging thread [@%i.%i]
starting console logging [@%i.%i]
_@unknown jack midi event
jack server not running?
registered jack midi name %s
8 bit raw midi
midi_in
cannot activate client
reused jack registration
bristolMidiJackOpen(%s, %i, %x)
Could not resolve cache
Could not find scala file
%s/memory/profiles/%s.scl
Scale info: %s
Will not open stupidly named file: %s
Could not open named scala file %s
Scala: cannot converge %i notes
Could not parse named scala file %s
Converged %i notes from scala file %s
;*3$"
localhost
midiNoteOff
midiNoteOn
midiPolyPressure
midiControl
midiProgram
midiChannelPressure
midiPitchWheel
midiSystem
libbristolmidi.so.0.0.611.debug
7zXZ
U!S!X
MD:+9
>K|\
PU\R
3#eU
lt:i
I;Hzy$k
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
