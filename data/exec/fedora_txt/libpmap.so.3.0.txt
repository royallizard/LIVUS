%_x	
b]Z=
`<W43
hTGk
y79z
__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
_Z12logfile_readP9logfile_t
fgets
strlen
isspace
strtol
strtod
__assert_fail
_Z12logfile_freeP9logfile_t
fclose
_ZdlPv
_Z13logfile_allocPKc
_Znwm
fopen
_Znam
__errno_location
strerror
__printf_chk
__gxx_personality_v0
omap_draw_map
glPixelZoom
glPixelTransferf
glPixelStorei
glRasterPos2f
glDrawPixels
omap_save_pgm
__fprintf_chk
fwrite
stderr
omap_add
sincos
pose2_add_pos
omap_clear
memset
omap_free
_ZdaPv
omap_alloc
_Z15pmap_sort_nborsP11pmap_nbor_tS0_
pmap_set_pose
pmap_draw_sample_map
pmap_draw_map
pmap_draw_sample
glBegin
glVertex3f
glEnd
pmap_draw_samples
glColor3f
pmap_draw_scan
glPushMatrix
glTranslatef
glRotatef
glutSolidSphere
glPopMatrix
pmap_add_scan_sample
pmap_add_scan
memcpy
pmap_resample
gsl_ran_discrete_preproc
gsl_ran_discrete
gsl_ran_discrete_free
pmap_entropy
pmap_apply_sensor_sample
matrix33_set
matrix33_mul_3
pmap_apply_sensor
pmap_apply_action
matrix44_mul_4
gsl_ran_gaussian
pose2_add
pmap_update
pose2_sub
pmap_init_nbors
qsort
pmap_free
gsl_rng_free
pmap_alloc
gsl_rng_taus
gsl_rng_alloc
rmap_draw_cons
glVertex2f
rmap_draw_map
rmap_interpolate
rmap_add
_Z12rmap_fit_fdfPK10gsl_vectorP6rmap_tPdPS_
gsl_vector_set_zero
gsl_vector_get
vector2_sub
vector2_dot
vector2_set
gsl_vector_set
_Z10rmap_fit_fPK10gsl_vectorP6rmap_t
_Z11rmap_fit_dfPK10gsl_vectorP6rmap_tPS_
rmap_relax
gsl_vector_alloc
gsl_multimin_fdfminimizer_vector_bfgs
gsl_multimin_fdfminimizer_alloc
gsl_multimin_fdfminimizer_set
gsl_multimin_fdfminimizer_iterate
gsl_multimin_fdfminimizer_minimum
gsl_multimin_fdfminimizer_x
gsl_multimin_fdfminimizer_free
gsl_vector_free
rmap_match_prepare
rmap_match_scan
vector2_mag
rmap_match
rmap_free
rmap_alloc
vector2_add
vector2_scale
vector3_set
vector3_add
vector3_sub
vector3_scale
vector3_dot
vector3_cross
vector4_set
vector4_add
vector4_sub
vector4_scale
vector4_dot
matrix33_setv
matrix33_ident
matrix33_add
matrix33_sub
matrix33_mul
matrix33_trans
matrix33_inv
matrix33_mul_33
matrix44_set
matrix44_setv
matrix44_ident
matrix44_add
matrix44_sub
matrix44_mul
matrix44_trans
matrix44_inv
matrix44_mul_44
pose2_set
pose2_sub_pos
pose2_sub_rot
atan2
pose2_inv
pose2_add_rot
matrix44_isnan
__isnan
matrix33_isnan
vector4_dist
vector4_mag
vector4_unit
vector3_dist
vector3_mag
vector3_unit
vector2_dist
vector2_unit
libGLU.so.1
libGL.so.1
libSM.so.6
libICE.so.6
libX11.so.6
libXext.so.6
libglut.so.3
libXmu.so.6
libXi.so.6
libgsl.so.0
libgslcblas.so.0
libstdc++.so.6
libm.so.6
libgcc_s.so.1
libc.so.6
_edata
__bss_start
_end
libpmap.so.3.0
/usr/lib64
GLIBC_2.2.5
CXXABI_1.3
GLIBCXX_3.4
GLIBC_2.3.4
ATSubH
AWAVAUATUSH
[]A\A]A^A_
AVAUATUSH
C(E1
S Mc
[]A\A]A^
AWAVAUATUH
([]A\A]A^A_
AWAVAUATUSH
D$XA
d$Pf.
$$E1
|$XL
L$xH
D$pH
D$`H
\$ H
YD$P
x.A9
~)A9
[]A\A]A^A_
HcW0H
{0Hc
fffff.
AWAVAULc
ATUH
E(E1
U Mc
[]A\A]A^A_
AUATUHc
~@E1
[]A\A]
AVAUATI
 []A\A]A^
ATHc
_,x@A
x.D9
[]A\
ATUH
~pE1
[]A\
fff.
AWAVAUATI
D$(A
L$ f
D$ H
@D9l$
Hc|$
IcT$4H
IcT$0H
8[]A\A]A^A_
AVAUATUSH
YD$@
XD$0D9
D$0u
YD$@
L$ D9
P[]A\A]f
AWHc
AUATUSH
L$pH
D$HH
D$PH
D$XH
D$ H
D$(H
D$0H
D$8H
M8Mc
[]A\A]A^A_
[]A\
?ATUH
D$ H
D$(H
D$0H
D$8H
D$@H
D$HH
D$PH
D$XH
D$`H
D$hH
D$pH
D$ H
D$(H
[]A\A]
fffff.
AVAUATUH
P97L
|$0L
D$ H
D$(H
L$0H
D$8L
D$8H
D$@f
P[]A\A]A^
fff.
YC f
ATUSH
~PE1
[]A\A]
ffff.
AWAVAUA
D$PD
~eE1
Hc;N
D$(HcC0H
Hc{4I
333333
[]A\A]A^A_
~rE1
[]A\
ffffff.
AWAVAUI
ATUSH
A9m0
[]A\A]A^A_
[]A\A]
Q8D9
AWAVAUATI
(93H
T$`H
L$hH
C0;C4
([]A\A]A^A_
AWAVI
AUATI
4vHc
4vHc
t$@H
Y%8=
D$pf
d$ t
L$pL
[]A\A]A^A_
fffff.
AWAVAUA
ATUSH
$dMc
D9{0
d$(H
\$0H
D$ H
~#E1
4vHc
\E A
\E(A
D9s0
H[]A\A]A^A_
AUATUH
\$hf
T$`H
\$0H
D$@H
L$HH
D$PH
T$ f
~zA9
ChD;ClL
ChHc
x[]A\A]
fff.
AVAUATI
Ic|$0H
D$0f
HcD$hH
D$XH
L$XH
D$pH
D$pH
L$xH
IcT$0
D$TH
l$lL
D$<D
\$<E
BP;D$<
T$PE
L$P9JT
D$<H
D$pH
L$xH
T$0H
L$XH
L$@H
L$`H
d$@A
L$h9
l$0H
[]A\A]A^A_
[]A\A]A^A_
USHcWXH
~fE1
~2E1
[]A\
D$@H
L$0H
T$ H
CTHc
C`tt
fffff.
ffffff.
ffffff.
fffff.
L$(H
\L$(
\D$0
\T$ 
t$0H
fffff.
T$0H
XD$ 
\T$0
\L$8
\D$@
\\$(
YL$ 
fff.
ffff.
|$XH
Xl$ 
Xd$(
X\$0
XT$8
XL$@
XD$H
\|$X
\t$`
\l$h
\d$p
\\$x
\D$P
|$PH
Yl$`
Y|$8
Yt$H
Yd$8
YT$`
Y\$H
YD$8
YD$H
t$PH
fffff.
T$ H
T$(H
T$0H
T$8H
T$@H
T$HH
fff.
l$HH
D$(fD
\$0fA
\$8fE
|$ fD
ffff.
|$PH
Yl$`
Y|$8
Yt$H
Yd$8
YT$`
Y\$H
YD$8
YD$H
T$ H
T$(H
T$0H
T$8H
T$@H
ffff.
fffff.
Xd$ 
X\$(
XT$0
XL$8
XD$@
X|$H
Xt$P
Xl$X
Xd$`
X\$h
XT$p
XL$x
YL$h
YT$p
YD$x
YD$p
YL$h
YL$x
YL$h
YD$p
YL$x
YL$h
YD$p
YL$x
Y|$ 
fffff.
T$ H
T$(H
T$0H
T$8H
T$@H
T$HH
T$PH
T$XH
T$`H
T$hH
T$pH
T$xH
O0fD
fff.
YL$h
YT$p
YD$x
YD$p
YL$h
YL$x
YL$h
YD$p
YL$x
YL$h
YD$p
YL$x
fffff.
D$0H
|$(H
\D$h
D$@H
|$8H
XD$p
L$xH
ffff.
\D$0H
D$@H
T$ H
D$hH
D$`H
D$hH
D$0H
D$8H
D$@H
D$`H
D$hH
D$ H
D$pH
XD$0H
D$@H
T$ H
D$hH
D$`H
D$hH
D$8	
D$@	
D$H	
D$P	
D$X	
D$`	
D$h	
D$p	
D$x	
D$8	
D$@	
D$H	
D$P	
D$X	
D$`	
fff.
\L$(
\D$0
\L$8
\L$@
ffffff.
D$0H
D$8H
D$@H
D$HH
D$8H
D$@H
D$HH
\L$ 
\D$(
\L$0
D$0H
D$8H
D$@H
D$8H
D$@H
ffffff.
D$ H
D$ H
L$(H
/builddir/build/BUILD/player-3.0.1/utils/pmap/logfile.cpp
self->token_count < (int) (sizeof(self->tokens) / sizeof(self->tokens[i]))
self->token_count >= 13 + self->laser_range_count * 2
unable to open log file [%s]: %s
self->token_count >= 3
sync
self->token_count >= 5
position2d
self->token_count >= 14
laser
self->token_count >= 13
int logfile_read(logfile_t*)
error writing %s : %s
P5 %d %d 255
self->grid
/builddir/build/BUILD/player-3.0.1/utils/pmap/omap.cpp
omap_t* omap_alloc(int, double, double, double, double, double, double)
?/builddir/build/BUILD/player-3.0.1/utils/pmap/pmap.cpp
self->step_count < self->step_max_count
num_ranges == self->num_ranges
allocating %d bytes for scans
allocating %d Mb of map space (estimated lower bound)
best_i >= 0
dist
self->rng
entropy %f
void pmap_draw_scan(pmap_t*, double*)
void pmap_add_scan(pmap_t*, double*)
void pmap_resample(pmap_t*, int)
void pmap_update(pmap_t*, pose2_t, int, double*)
pmap_t* pmap_alloc(int, double, double, double, int, double, double, double)
?es-8R
/builddir/build/BUILD/player-3.0.1/utils/pmap/rmap.cpp
self->num_scans < self->max_scans
self->num_items < self->max_items
self->num_cons < self->max_cons
scan_a->index >= 0
scan_b->index >= 0
scan->num_hits < 1024
num-scans = %d
con->scan_b == scan_b
void rmap_interpolate(rmap_t*)
void rmap_match_scan(rmap_t*, rmap_scan_t*)
void rmap_match_prepare(rmap_t*, rmap_scan_t*)
void rmap_add(rmap_t*, pose2_t, int, double*)
rmap_t* rmap_alloc(int, double, double, double, double, double)
333?fff?
MbP?{
libpmap.so.3.0.1.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rela.plt
.got.plt
.got
.text
