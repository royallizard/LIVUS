.G1P03%
Of~G|EM
IX"q
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
_ZN14bx_param_num_c3getEv
_ZN24bx_simulator_interface_c9get_paramEPKcP10bx_param_c
_ZN24bx_simulator_interface_c16get_param_stringEPKcP10bx_param_c
_ZN24bx_simulator_interface_c14get_param_boolEPKcP10bx_param_c
_ZN24bx_simulator_interface_c14get_param_enumEPKcP10bx_param_c
_ZN24bx_simulator_interface_c21register_addon_optionEPKcPFiS1_iPPcEPFiP8_IO_FILEE
_ZN24bx_simulator_interface_c23unregister_addon_optionEPKc
_ZN24bx_simulator_interface_c14get_bochs_rootEv
_ZN24bx_simulator_interface_c21parse_param_from_listEPKcS1_P9bx_list_c
_ZN24bx_simulator_interface_c16write_param_listEP8_IO_FILEP9bx_list_cPKcj
_ZN13bx_devmodel_c4initEv
_ZN13bx_devmodel_c5resetEj
_ZN13bx_devmodel_c14register_stateEv
_ZN13bx_devmodel_c19after_restore_stateEv
_ZN11bx_serial_c5resetEj
_ZN13bx_pic_stub_c9raise_irqEj
pluginlog
_ZN12logfunctions5panicEPKcz
_ZN13bx_pic_stub_c9lower_irqEj
_ZN13bx_devmodel_cD2Ev
_ZTV13bx_devmodel_c
_ZN12logfunctionsD2Ev
_ZN13bx_devmodel_cD1Ev
_ZN13bx_devmodel_cD0Ev
_ZdlPvm
_Z19serial_options_saveP8_IO_FILE
__sprintf_chk
__stack_chk_fail
_Z21serial_options_parserPKciPPc
strlen
theSerialDevice
_ZN12logfunctions5errorEPKcz
_ZN11bx_serial_c14register_stateEv
_Znwm
_ZN9bx_list_cC1EP10bx_param_cPKcS3_
_ZN9bx_list_cC1EP10bx_param_cPKc
_ZN16bx_shadow_bool_cC1EP10bx_param_cPKcPjh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPhihh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPiihh
_Unwind_Resume
__gxx_personality_v0
_ZN11bx_serial_cD2Ev
_ZTV11bx_serial_c
fclose
_ZN12logfunctions6ldebugEPKcz
tcsetattr
_ZN11bx_serial_cD1Ev
_ZN11bx_serial_cD0Ev
_ZN11bx_serial_c4initEv
pluginRegisterIOReadHandler
pluginRegisterIOWriteHandler
_ZN11bx_serial_c12read_handlerEPvjj
_ZN11bx_serial_c13write_handlerEPvjjj
_ZN12logfunctions4infoEPKcz
fopen64
pluginRegisterIRQ
tcgetattr
_ZN11bx_serial_c16mouse_enq_staticEPviiijj
bx_devices
_ZN12bx_devices_c22register_default_mouseEPvPFvS0_iiijjEPFvS0_jE
_ZN9bx_list_c11get_by_nameEPKc
bx_pc_system
_ZN11bx_serial_c16rx_timer_handlerEPv
_ZN14bx_pc_system_c14register_timerEPvPFvS0_EjjjPKc
_ZN11bx_serial_c18fifo_timer_handlerEPv
_ZN11bx_serial_c16tx_timer_handlerEPv
__strcpy_chk
strtok
strtol
gethostbyname
__memcpy_chk
socket
connect
bind
listen
accept
_Z19serial_init_optionsv
_ZN15bx_param_bool_cC1EP10bx_param_cPKcS3_S3_lj
_ZN15bx_param_enum_cC1EP10bx_param_cPKcS3_S3_PS3_ll
_ZN10bx_param_c14set_ask_formatEPKc
_ZN19bx_param_filename_cC1EP10bx_param_cPKcS3_S3_S3_i
_ZN9bx_list_cC1EP10bx_param_c
_ZN9bx_list_c3addEP10bx_param_c
_ZN14bx_param_num_c18set_dependent_listEP9bx_list_c
libserial_LTX_plugin_fini
_ZN11bx_serial_cC2Ev
_ZN12logfunctionsC2Ev
_ZN12logfunctions3putEPKcS1_
_ZN11bx_serial_cC1Ev
libserial_LTX_plugin_init
pluginRegisterDeviceDevmodel
_ZN11bx_serial_c15lower_interruptEh
_ZN11bx_serial_c15raise_interruptEhi
_ZN11bx_serial_c11rx_fifo_enqEhh
_ZN14bx_pc_system_c16deactivate_timerEj
_ZN14bx_pc_system_c14activate_timerEjjj
_ZN11bx_serial_c8tx_timerEv
write
fputc
fflush
_ZN11bx_serial_c8rx_timerEv
select
__fdelt_chk
read
_ZN11bx_serial_c10fifo_timerEv
_ZN11bx_serial_c9mouse_enqEiiijj
_ZTS12logfunctions
_ZTI12logfunctions
_ZTVN10__cxxabiv117__class_type_infoE
_ZTS13bx_devmodel_c
_ZTI13bx_devmodel_c
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTS11bx_serial_c
_ZTI11bx_serial_c
_ZTVN10__cxxabiv120__si_class_type_infoE
libstdc++.so.6
libm.so.6
libc.so.6
libgcc_s.so.1
_edata
__bss_start
_end
libbx_serial.so.0
GCC_3.0
GLIBCXX_3.4
CXXABI_1.3
CXXABI_1.3.9
GLIBC_2.15
GLIBC_2.4
GLIBC_2.3.4
GLIBC_2.2.5
%*q 
%*q 
%:q 
%:q 
%Bq 
%Bq 
%Jq 
%Jq 
%Jq 
%Rq 
%Rq 
%Rq 
%bq 
%rq 
%zq 
%zq 
=qq 
AWAVAUATUS1
D$81
l$ L
@0L9
L$8dH3
H[]A\A]A^A_
AWAV
AUATA
D$h1
L$hdH3
x[]A\A]A^A_
@0H;
AWAVAUATS1
A[A\
AYAZ
A[A\
AYAZ
A[A_u
AYAZu
A]A_
A[A\
AYAZ
0Y^u
[A\A]A^A_]
AWAVAUATL
A0H;
IHH;
J0H;
([]A\A]A^A_
AWAVA
AUATUSH
|$0fD
|$`f
D$fH
D$ H
D$`H
D$@H
D$pH
D$PH
D$tH
D$XH
|$ D
H0H;
@HH;
J0H;
T$8H
[]A\A]A^A_
\$<9
l$HL
l$HH
@PH;
J0H;
@@H;
L$<H
|$(H
t$01
='O 
@0H;
@PH;
B0H;
t$@1
AZA[H
t$@1
AXAYH
=oO 
t$@1
[A^H
D$PH
AWAVAUATSH
@0H;
_AXH
[A\A]A^A_]
AUATUSH
@0H;
[]A\A]
ATUH
[]A\
ATUH
-~C 
uAH9
uaH9
R8H;
-y@ 
-!? 
R0H;
AVAUA
ATU@
=N; 
[]A\A]A^
[]A\
A]A^f
AVAUAT%
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
A\A]A^A_f
[]A\A]A^A_
AVAUE1
ATUH
-7- 
;P\t.;
[]A\
p\A]A^f
[]A\A]A^
AWAVAUATE1
A;@dt1A;
t"A;
[]A\A]A^A_
t$0L
Kc|0p
t$0H
D$ D
;PhtD;
raise_irq
%s called in %s stub. you must not have loaded the %s plugin
lower_irq
ports.serial.%d
com%d
%s: comX directive malformed.
%s: unknown directive '%s'
Serial Port State
ls_interrupt
ms_interrupt
rx_interrupt
tx_interrupt
fifo_interrupt
ls_ipending
ms_ipending
rx_ipending
fifo_ipending
rx_fifo_end
tx_fifo_end
baudrate
rx_pollstate
rxbuffer
thrbuffer
int_enable
rxdata_enable
txhold_enable
rxlstat_enable
modstat_enable
int_ident
int_ID
fifo_cntl
rxtrigger
line_cntl
wordlen_sel
stopbits
parity_enable
evenparity_sel
stick_parity
break_cntl
dlab
modem_cntl
out1
out2
local_loopback
line_status
rxdata_ready
overrun_error
parity_error
framing_error
break_int
thr_empty
tsr_empty
fifo_error
modem_status
delta_cts
delta_dsr
ri_trailedge
delta_dcd
scratch
tsrbuffer
rx_fifo
0x%02x
tx_fifo
divisor_lsb
divisor_msb
detect_mouse
mouse_delayed_dx
mouse_delayed_dy
mouse_delayed_dz
mouse_internal_buffer
num_elements
head
Exit
Serial Port %d
serial.tx
serial.rx
serial.fifo
mode
open of com%d (%s) failed
com%d tty_id: %d
keyboard_mouse.mouse.type
com%d: socket() failed
unknown serial i/o mode %d
com%d at 0x%04x irq %d
serial ports disabled
general.plugin_ctrl
ports.serial
com1
com2
com3
com4
com%d: receive FIFO overflow
com%d: overrun error
com%d: transmit FIFO overflow
com%d: FIFO enabled
com%d: baud rate set - %d
com%d: write: '%c'
 -- COM %d : read byte [%d]
com%d: read: '%c'
null
file
term
socket-client
socket-server
pipe-client
pipe-server
%s: comX port number out of range.
%s: unknown parameter for com%d ignored.
com%d initialize register for read/write: 0x%04x
raw serial support not present
com%d: inet address is wrong (%s)
com%d: gethostbyname failed (%s)
com%d: accept() failed (host:%s, port:%d)
com%d: connect() failed (host:%s, port:%d)
com%d - inet %s - socket_id: %d, ip:%s, port:%d
support for serial mode 'pipe-%s' not available
com%d: bind() or listen() failed (host:%s, port:%d)
com%d: waiting for client to connect (host:%s, port:%d)
Enable serial port #%d (COM%d)
Controls whether COM%d is installed or not
I/O mode of the serial device for COM%d
The mode can be one these: 'null', 'file', 'term', 'raw', 'mouse', 'socket*', 'pipe*'
Choose I/O mode of the serial device [%s] 
Pathname of the serial device for COM%d
The path can be a real serial device or a pty (X/Unix only)
com%d register read from address: 0x%04x = 0x%02x
com%d register write to  address: 0x%04x = 0x%02x
com%d: write to tx hold register when not empty
com%d: write to line status register ignored
com%d: write to MODEM status register ignored
com%d: write to mouse ignored: 0x%02x
mouse not connected to a serial port
12logfunctions
13bx_devmodel_c
11bx_serial_c
;*3$"
zPLR
libbx_serial.so.0.0.0.debug
7zXZ
(Cq|
ZQ6eS
Sze4v
3uV$
;?=K
yk pKaD
R>F*
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.init
.plt
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.data
.bss
.gnu_debuglink
.gnu_debugdata
