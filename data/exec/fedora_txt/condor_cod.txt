/lib64/ld-linux-x86-64.so.2
$J	@
|j	C
-tIW
libdl.so.2
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
libcondor_utils_8_3_8.so
_ZN7classad7ClassAd10InsertAttrERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiNS_5Value12NumberFactorE
_ZN14compat_classad7ClassAdC1Ev
_ZN11DCCollectorC1EPKcNS_10UpdateTypeE
_ZN8DCStartd17delegateX509ProxyEPKclPl
install_sig_handler
_ZN8DCStartd12releaseClaimE10VacateTypePN14compat_classad7ClassAdEi
_ZN8DCStartd12suspendClaimEPN14compat_classad7ClassAdEi
safe_fopen_wrapper_follow
_ZN8DCStartd13activateClaimEPKN14compat_classad7ClassAdEPS1_i
_EXCEPT_File
_EXCEPT_
_ZN8DCStartd12requestClaimE9ClaimTypePKN14compat_classad7ClassAdEPS2_i
_ZN8DCStartdC1EPKcS1_
__wrap_exit
_ZN14compat_classad8fPrintAdEP8_IO_FILERKN7classad7ClassAdEbP10StringList
_ZN8MyStringC1EPKc
_ZNK14compat_classad7ClassAd12LookupStringEPKcPPc
_ZN14compat_classad7ClassAd6InsertEPKc
_ZN8DCStartd18renewLeaseForClaimEPN14compat_classad7ClassAdEi
_ZN8MyStringpLEc
_ZN8MyStringpLEi
get_daemon_name
_ZN8MyStringD1Ev
_ZN8DCStartd11resumeClaimEPN14compat_classad7ClassAdEi
condor_basename
is_valid_sinful
_ZN8MyStringpLEPKc
get_host_part
_ZN8MyStringaSEPKc
dprintf_config_tool
_Z13param_booleanPKcbbPN14compat_classad7ClassAdES3_b
config
_ZN8DCStartdD1Ev
_ZN8MyStringC1Ev
_Z23get_x509_proxy_filenamev
myDistro
_EXCEPT_Line
_ZN8DCStartd15deactivateClaimE10VacateTypePN14compat_classad7ClassAdEi
_Z16getCommandStringi
_ZN6Daemon4addrEv
_ZN8MyStringpLERKS_
_ZN14compat_classad7ClassAdD1Ev
_ZN12Distribution4InitEiPPc
chomp
_ZN8DCStartd10setClaimIdEPKc
CondorPlatform
CondorVersion
_EXCEPT_Errno
getAddrFromClaimId
_ZN6Daemon6locateEv
librt.so.1
libclassad.so.7
libvomsapi.so.1
libglobus_gss_assist.so.3
libglobus_gssapi_gsi.so.4
libglobus_gsi_proxy_core.so.0
libglobus_gsi_credential.so.1
libglobus_gsi_callback.so.0
libglobus_gsi_sysconfig.so.1
libglobus_oldgaa.so.0
libglobus_gsi_cert_utils.so.0
libglobus_openssl.so.0
libglobus_openssl_error.so.0
libglobus_proxy_ssl.so.1
libglobus_callout.so.0
libglobus_common.so.0
libltdl.so.7
libexpat.so.1
libpcre.so.1
libssl.so.10
libcrypto.so.10
libkrb5.so.3
libcom_err.so.2
libk5crypto.so.3
libkrb5support.so.0
libgssapi_krb5.so.2
libstdc++.so.6
__gxx_personality_v0
_ZdlPv
_Znwm
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
libm.so.6
libgcc_s.so.1
_Unwind_Resume
libpthread.so.0
__errno_location
libc.so.6
__printf_chk
strncmp
strrchr
__stack_chk_fail
stdin
strdup
strtol
fgets
strlen
__fprintf_chk
stdout
fclose
malloc
__ctype_b_loc
sscanf
stderr
strncasecmp
__cxa_finalize
__sprintf_chk
strcmp
strerror
__libc_start_main
free
_edata
__bss_start
_end
$ORIGIN/../lib:/lib64:/usr/lib64:$ORIGIN/../lib/condor:/usr/lib64/condor
timeout
__libc_csu_fini
vacate_type
_Z9printFastv
JOBAD_PATH
jobad_path
my_name
proc_id
__data_start
_Z9parseArgviPPc
_Z7versionv
_Z7anotherPKc
CA_PATH
_Z13fillRequestAdPN14compat_classad7ClassAdE
requirements
proxy_file
_Z9ambiguousPKc
addr
_Z5usagePKci
_Z8printCmdi
lease_time
needs_id
_Z14fillActivateAdPN14compat_classad7ClassAdE
pool
__libc_csu_init
_Z17dumpAdIntoRequestPN14compat_classad7ClassAdE
_Z9parsePOptPcS_
_Z9parseCOptPcS_
job_keyword
_Z7invalidPKc
classad_path
_Z18getCommandFromArgviPPc
_Z11printOutputPN14compat_classad7ClassAdEP8DCStartd
claim_id
_IO_stdin_used
_Z16fillRequirementsPN14compat_classad7ClassAdE
target
cluster_id
GLIBC_2.2.5
GCC_3.0
GLIBCXX_3.4.21
CXXABI_1.3
GLIBCXX_3.4
GLIBC_2.4
GLIBC_2.3.4
GLIBC_2.3
%zD 
%rD 
%jD 
%bD 
%ZD 
%RD 
%JD 
%BD 
%:D 
%2D 
%*D 
%"D 
%zC 
%rC 
%jC 
%bC 
%ZC 
%RC 
%JC 
%BC 
%:C 
%2C 
%*C 
%"C 
AWAVAUATUSH
%yC 
[]A\A]A^A_
fffff.
fffff.
fffff.
=Y8 
AUATI
[]A\A]
AVAUH
ATUI
\$@H
54< 
->< 
D$@H
p[]A\A]A^
ATUI
D$81
JobLeaseH
T$ H
DurationH
D$8dH3
@[]A\
ffff.
AVAUI
ATUS1
[]A\A]A^
ATUH
%a7 
%L7 
0[]A\
fffff.
AVAUA
ATUS
%m5 
AUATI
[]A\A]
<vt4<ht
ATUI
D$(1
-classad
-clusterH
D$(dH3
0[]A\
<uuZH
$-poo
-prof
 []A\
th<o
<rulL
AVAUATUSH
[]A\A]A^
AWAVA
AUATL
[]A\A]A^A_
ClaimId
Result ClassAd written to %s
ID of new claim is: "%s"
LastClaimState
TARGET.
HasJICLocalStdin
==TRUE
HasJICLocalConfig
Requirements
)&&(
slot%d@
SlotID
vm%d@
VirtualMachineID
ALLOW_VM_CRUFT
ClusterId
ProcId
JobKeyword
HasJobAd
 [command-opts]
Where [command] is one of:
 [claimid] 
_cod
my_name != __null
Assertion ERROR on (%s)
%s %s
request
release
deactivate
suspend
resume
renew
delegate_proxy
ERROR: unknown command "%s"
%s: '%s' is invalid
%s: '%s' is ambiguous
%s: %s
-version
-help
-debug
TOOL
-address
-name
%s: unknown host %s
-fast
-requirements
-jobad
-keyword
-lease
-timeout
-x509proxy
ERROR: %s
Successfully sent %s to startd at %s
WARNING: You did not specify -classad, printing to STDOUT
/builddir/build/BUILD/htcondor-8_3_8/src/condor_tools/cod_tool.cpp
Already handled CA_REQUEST_CLAIM!
State of claim when it was released: "%s"
Warning: reply ClassAd did not contain attribute "%s"
ERROR: can't parse requirements '%s'
Failed to insert "%s" into ClassAd, ignoring this line
   request		Create a new COD claim
   activate		Start a job on a given claim
   deactivate		Kill the current job, but keep the claim
   release		Relinquish a claim, and kill any running job
   suspend		Suspend the job on a given claim
   resume		Resume the job on a given claim
   renew		Renew the lease for this claim
   delegate_proxy	Delegate an x509 proxy to the claim
   -fast		Quickly kill any running job
Use "-help" to see usage information
Usage: %s [command] [options]
use %s [command] -help for more information on a given command
Where [target] can be zero or one of:
   -name hostname	Contact the startd on the given host
   -pool hostname	Use the given central manager to find the startd
			requested with -name
   -addr <ip_addr:port>	Contact the startd at the given "sinful string"
   (If no target or claimid is specified, the local host is used)
Where [general-opts] can either be one of:
   -help		Print this usage information and exit
   -version		Print the version of this tool and exit
 or it may be zero or more of:
   -debug		Print verbose debugging information
   -classad file	Print the reply ClassAd to the given file
   -timeout N		Timeout all network operations after N seconds
Where [command-opts] can be zero or more of:
   -requirements expr	Find a resource that matches the boolean expression
   -lease N		Number of seconds to wait for lease renewal
   -keyword string	Use the keyword to find the job in the config file
   -jobad filename	Use the ClassAd in filename to define the job
			(if filename is "-", read from STDIN)
   -cluster N		Start the job with the given cluster ID
   -proc N		Start the job with the given proc ID
   -requirements expr	Find a starter that matches the boolean expression
   -x509proxy filename	Delegate the proxy in the specified file
Usage: %s %s[target] [general-opts]%s
Where [claimid] must be specified as:
   -id ClaimId		Act on the given COD claim
   (The startd address may be inferred from this in most cases, but it is better
to specify the address explicitly.
%s: '%s' requires another argument
%s: '%s' is not a valid address
ERROR: You must specify a ClaimID with -id for %s
ERROR: You cannot specify both -name and -address
ERROR: You must specify -keyword or -jobad for %s
ERROR: can't determine proxy filename to delegate
ERROR: failed to open '%s': errno %d (%s)
Attempt to send %s to startd %s failed
$CondorVersion: 8.3.8 Oct 01 2015 BuildID: RH-8.3.8-1.fc23 $
$CondorPlatform: X86_64-RedHat_ $
;*3$"
zPLR
condor_cod.debug
	}8]
7zXZ
^$Ke
D=X:
w&nMP
v#41W\
B.f6
.Skh
525OJ<
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
