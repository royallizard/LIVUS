ZvxG?
stW-\l
+S[`J{-'dd[X
NdB`h
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
gvplugin_core_LTX_library
gvdevice_dot_types
gvdevice_fig_types
gvdevice_map_types
gvdevice_mp_types
gvdevice_ps_types
gvdevice_svg_types
gvdevice_json_types
gvdevice_tk_types
gvdevice_vml_types
gvdevice_pic_types
gvdevice_pov_types
gvrender_dot_types
gvrender_fig_types
gvrender_map_types
gvrender_mp_types
gvrender_ps_types
gvrender_svg_types
gvrender_json_types
gvrender_tk_types
gvrender_vml_types
gvrender_pic_types
gvrender_pov_types
gvloadimage_core_types
strchr
__sprintf_chk
agxbput
yDir
__stack_chk_fail
strlen
agxbmore
agxset
write_plain
agsafeset
agxbfree
agwrite
AgIoDisc
gvputs
gvflush
safe_dcl
__ctype_b_loc
strtol
agerr
attach_attrs
attach_attrs_and_arrows
agxbinit
undoClusterEdges
agget
get_gradient_points
agxbpop
sincos
core_loadimage_xdot
device_features_dot
device_features_canon
render_features_dot
xdot_engine
render_features_xdot
agroot
aggetrec
agnameof
agfstsubg
agnxtsubg
calloc
strdup
gvprintf
latin1ToUTF8
agnxtattr
agxget
parseXDot
freeXDot
agfstnode
agnxtnode
agfstout
agnxtout
agisdirected
agisstrict
Dtoset
dtopen
aginit
dtclose
gvCloneGVC
gvRender
gvFreeCloneGVC
device_features_json
device_features_json_nop
json_engine
render_features_json
render_features_json1
Bezier
__assert_fail
strcmp
device_features_fig
fig_engine
render_features_fig
xml_string
xml_url_string
mp_engine
gvprintdouble
gvprintpointf
gvprintpointflist
ps_string
cat_libfile
epsf_define
xml_string0
strcasecmp
strdup_and_subst_obj
device_features_svg
device_features_svgz
svg_engine
render_features_svg
device_features_tk
tkgen_engine
render_features_tk
graphWidth
graphHeight
html_string
grealloc
stderr
fwrite
exit
gmalloc
device_features_vml
device_features_vmlz
vml_engine
render_features_vml
atanf
__vsnprintf_chk
__vsprintf_chk
__errno_location
strerror
__fprintf_chk
device_features_pov
pov_engine
render_features_pov
strrchr
log10
pic_engine
core_loadimage_null
munmap
gvusershape_file_access
fileno
gvusershape_file_release
epsf_emit_body
__fxstat
mmap
libgvc.so.6
libltdl.so.7
libxdot.so.4
libpathplan.so.4
libexpat.so.1
libz.so.1
libm.so.6
libcgraph.so.6
libcdt.so.5
libc.so.6
_edata
__bss_start
_end
libgvplugin_core.so.6
GLIBC_2.2.5
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.4
u+UH
AUATUSH
[]A\A]
AUATUSH
[]A\A]
t1H;
t1H;
t1H;
t1H;
t1H;
t1H;
t1H;
t-H;
AUATUSH
[]A\A]A^
AUATUSH
[]A\A]
AVAUATUSH
[]A\A]A^
AWAVAUATUSH
D$ H
D$ H
[]A\A]A^A_
H;D$ s
H;D$ 
H;D$ s|H
H;D$ s{
D$ H
t7PH
AWAVAUATUSH
l$ dH
<lt	E1
XK(H
[]A\A]A^A_
[]A\
ATUSH
[]A\
AWAVAUATUSL
\$@A
t$`A
Zd$x
T$hf
H;D$P
D$HA
H;D$P
D$HH;D$P
D$ H
T$HH
[]A\A]A^A_
D$HH;D$P
L$xH
H;D$P
D$HH;D$P
|$8H
Yl$8
L$(f
~L$(
~D$ 
AUATUSH
[]A\A]
[]A\A]
[]A\A]
AVAUATUSH
[]A\A]A^
AWAVAUA
[]A\A]A^A_
t$D;p
A]A^
AVAUI
[]A\A]A^
[]A\A]A^
[]A\A]A^A_
AWAVAUI
8_tGL
8[]A\A]A^A_
|$ H
|$ H
l$(A
AWAVI
AUATI
[]A\A]A^A_
\$ L
d$(I
\$ L
d$(H
[]A\A]
[]A\
[]A\
AUATUSH
ASARVH
ASARj
AUATU
x[]A\A]
AWAVA
ATUSH
[]A\A]A^A_
[]A\
ARWH
[]A\
AVAUATUSH
T$ D
L$$dH
D$ I
\$(H
d$PH
)t$PHc
D;t$ 
D$hPj
D$dP
t$(1
[]A\A]A^A_
l$0f
AWAVAUATUSH
[]A\A]A^A_
AVAUATUH
T$ I
D$0H
G@E1
L$PD
L$\D
D$Xf
x[]A\A]A^A_
AUATA
l$PL
[]A\A]A^A_
t$XH
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
]A\A]A^A_
ASAR
AUATUSH
ASARVH
ASARj
AUATU
x[]A\A]
AWAVA
ATUSH
[]A\A]A^A_
[]A\
ARWH
[]A\
AUATUSH
T$ D
L$$dH
\$(H
d$PL
D$0H
D;|$ 
)t$PHc
D$hPj
D$dP
t$(1
[]A\A]A^A_
l$0f
AWAVAUATUSH
[]A\A]A^A_
AVAUATUSH
D$4H
T$(H
F@E1
T$'Ic
T$'H
D$hD
L$dD
x[]A\A]A^A_
AUATUSH
[]A\A]A^
]A\A]A^
AWAVAUATUH
[]A\A]A^A_
AWAVAUA
ATUH
[]A\A]A^A_
[]A\A]A^A_
AWAVAUA
[]A\A]A^A_
[]A\A]A^A_
D$(1
D$(dH3
/X8v	
ATUH
p SH
E@<lt	<ruT
XM(f
ATUSL
[]A\
o dH
[]A\A]
]A\A]
[]A\A]
AWAVAUATI
D$@<l
XT$(
[]A\A]A^A_
[]A\A]A^
[]A\A]A^
[]A\A]
AUATA
[]A\A]
k dH
D$(1
L$(dH3
0[]A\
[]A\
AWAVAUE
~rE1
[]A\A]A^A_
AUATA
[]A\A]A^
AUATA
[]A\A]
AUATUSH
[]A\A]
[]A\A]
AVAUATUSH
[]A\A]A^
[]A\A]A^
AUATUSH
[]A\A]
[]A\A]
AUATUSH
[]A\A]
t$@H
t$8A
t$0A
t$(A
E@<lt9<ru
[]A\A]
AUATUSH
[]A\A]
[]A\A]
tLUH
z.u,
AWAVI
AUATA
[]A\A]A^A_
AWAVE
[]A\A]A^A_
AWE1
[]A\A]A^A_
[]A\
AWAVAUI
ATUSH
D$(1
\$(dH3
8[]A\A]A^A_
<;tRA
<$ M
AUATUH
V0<lt
T$ H
[]A\A]
[]A\A]
ATUSH
]A\A]
^5|9
AUATUSH
\$ I
[]A\A]
D$"f
AWAVI
D$8H
[]A\A]A^A_
AUATI
D$ L
D$0I
D$@H
D9t$
D9t$
D9t$
d$(L
l$ L
[]A\A]A^A_
AUATUH
D$(I
D$0H
d$ L
8[]A\A]A^A_
D$ L
D$@H
t$,1
l$ L
[]A\A]A^A_
AVAUATUH
Z4$I
d$ u
8[]A\A]A^A_
D$(I
[]A\A]A^A_
AWAVAUATUH
AUAVH
[]A\A]A^A_
AWAVA
ATUSH
[]A\A]A^A_
AWAVI
AUATUSH
|$x1
D$(f
\$(H
d$0L
D$0H
D;|$
ot$`H
)t$0Hc
t$(H
|$ A
t$ E
|$ H
D$xdH3
[]A\A]A^A_
AWAVAUATI
^0<lt
^%tk
[]A\A]A^A_
AVAUATUSH
[]A\A]A^
L$8H
XL$(
D$0H
XD$ 
AWAVAUATUSH
D$X1
)l$0
D$XdH3
]A\A]A^A_
D$XdH3
h[]A\A]A^A_
AVAUATUS
T$HH
UAUATAU
0[]A\A]A^
T$Hf
W%X6
ATUSH
*K8H
[]A\
t$0E1
core
%.02f
%s%d -
 %d 
_draw_
xdotversion
xdot version "%s" too long
_ldraw_
_hdraw_
_tdraw_
_hldraw_
_tldraw_
setlinewidth(
filled
bold
setlinewidth
#%02x%02x%02x
#%02x%02x%02x%02x
t %u 
%.03f
dot:dot
gv:dot
canon:dot
plain:dot
plain-ext:dot
xdot:xdot
xdot1.2:xdot
xdot1.4:xdot
?cluster
Duplicate cluster name "%s"
"points": [
[%.03f,%.03f]
"stops": [
"%s": 
Could not parse xdot "%s"
"op": "%c",
"op": "L",
"op": "T",
"pt": [%.03f,%.03f],
"align": "%c",
"width": %.03f,
"text": "%s"
"grad": "none",
"color": "%s"
"grad": "linear",
"p0": [%.03f,%.03f],
"p1": [%.03f,%.03f],
"grad": "radial",
"p0": [%.03f,%.03f,%.03f],
"p1": [%.03f,%.03f,%.03f],
"op": "F",
"size": %.03f,
"face": "%s"
"op": "S",
"style": "%s"
"op": "t",
"fontchar": %d
true
false
"name": "%s"
"directed": %s,
"strict": %s
"_subgraph_cnt": %d
"_gvid": %d
"objects": [
"subgraphs": [
"nodes": [
"_gvid": %d,
"edges": [
"tail": %d,
"head": %d
json0:json
xdot_json:json
json0
xdot_json
{"frac": %.03f, "color": "%s"}
"rect": [%.03f,%.03f,%.03f,%.03f]
# %s
 %d %d
# end of FIG file
gvrender_core_fig.c
n >= 4
black
%d %d #%02x%02x%02x
%03o
#FIG 3.2
# Title: %s
# Pages: %d
Portrait
Center
Inches
Letter
100.00
Single
1200
fig:fig
%d %d %d %d %d %d %d %d %d %.3f %d %.4f %d %d %d %d %d %d %d %d
%d %d %d %d %d %d %d %d %d %.1f %d %d %d %d %d %d
%d %d %d %d %d %d %d %d %d %.1f %d %d %d %d
%d %d %d %d %d %d %.1f %.4f %d %.1f %.1f %d %d %s\001
# Generated by %s version %s (%s)
fig_resolve_color
fig_bezier
R@base referer
default 
<map id="
" name="
rect %s %d,%d %d,%d
circle %s %d,%d,%d
poly %s
 %d,%d
gvrender_core_map.c
<area shape="circle"
<area shape="rect"
<area shape="poly"
 target="
 title="
 alt=""
 coords="
%d,%d,%d,%d
</map>
ismap:map
cmap:map
imap:map
cmapx:map
imap_np:map
cmapx_np:map
rectangle (%d,%d) (%d,%d) %s %s
map_output_shape
gvrender_core_mp.c
mp:mp
mp_resolve_color
gsave
sethsb
graph
edge
node
%.5g %.5g %.5g %scolor
Landscape
Portrait
%%%%Page: %d %d
%%%%PageOrientation: %s
%d %d %d beginpage
%d %d setlayer
%%Trailer
%%%%Pages: %d
%%%%BoundingBox: %d %d %d %d
restore
%%EOF
%!PS-Adobe-3.0
 EPSF-3.0
 setlinewidth
invis
newpath 
 moveto
closepath fill
 curveto
 lineto
closepath stroke
 ellipse_path fill
 ellipse_path stroke
 /%s set_font
 moveto 
 %s alignedtext
[ /Rect [ 
%% %s
0 0 0 edgecolor
endpage
showpage
grestore
%%PageTrailer
%%%%EndPage: %d
%%%%Title: %s
%%Pages: (atend)
%%Pages: 1
%%BoundingBox: (atend)
%%EndComments
save
setupLatin1
 ]  %d true %s
 ]  %d false %s
ps2:ps
eps:ps
%%BeginProlog
/DotDict 200 dict def
DotDict begin
/setupLatin1 {
/EncodingVector 256 array def
 EncodingVector 0
EncodingVector 45 /hyphen put
/starnetISO {
        } forall
/Times-Roman starnetISO def
/Times-Italic starnetISO def
/Times-Bold starnetISO def
/Helvetica starnetISO def
/Courier starnetISO def
/Courier-Bold starnetISO def
cleartomark
/InvScaleFactor 1.0 def
/set_scale {
       scale
% styles
/filled { } bind def
/unfilled { } bind def
/rounded { } bind def
/diagonals { } bind def
/tapered { } bind def
% hooks for setting color 
/beginpage {	% i j npages
	/npages exch def
	/j exch def
	/i exch def
	/str 10 string def
	npages 1 gt {
		gsave
			coordfont setfont
			0 0 moveto
		grestore
/set_font {
	findfont exch
	scalefont setfont
/alignedtext {			% width text
	/text exch def
	/width exch def
		width 0 gt {
			[] 0 setdash
		} if
		4 2 roll
		moveto
		2 copy
		exch 0 rlineto
		0 exch rlineto
		pop neg 0 rlineto
		closepath
/ellipse_path {
	/ry exch def
	/rx exch def
	/y exch def
	/x exch def
	matrix currentmatrix
	newpath
	x y translate
	rx ry scale
	0 0 1 0 360 arc
	setmatrix
/showpage { } def
/layercolorseq
		[0 0 0]
		[.2 .8 .8]
		[.4 .8 .8]
		[.6 .8 .8]
		[.8 .8 .8]
	aload pop sethsbcolor
	/nodecolor {nopcolor} def
	/edgecolor {nopcolor} def
	/graphcolor {nopcolor} def
/onlayers {
	/myupper exch def
	/mylower exch def
	curlayer mylower lt
	curlayer myupper gt
	{invis} if
/curlayer 0 def
%%EndResource
%%EndProlog
%%BeginSetup
% /arrowlength 10 def
% /arrowwidth 5 def
2 lt {
%%EndSetup
%%%%PageBoundingBox: %d %d %d %d
<< /PageSize [%d %d] >> setpagedevice
gsave
%d %d %d %d boxprim clip newpath
%g %g set_scale %d rotate %g %g translate
canvas size (%d,%d) exceeds PDF limit (%d)
	(suggest setting a bounding box size, see dot(1))
[ /CropBox [%d %d %d %d] /PAGES pdfmark
%%%%Creator: %s version %s (%s)
  /Border [ 0 0 0 ]
  /Action << /Subtype /URI /URI %s >>
  /Subtype /Link
/ANN pdfmark
[ {Catalog} << /URI << /Base %s >> >>
/PUT pdfmark
ISOLatin1Encoding 0 255 getinterval putinterval
% Set up ISO Latin 1 character encoding
        dup dup findfont dup length dict begin
        { 1 index /FID ne { def }{ pop pop } ifelse
        /Encoding EncodingVector def
        currentdict end definefont
/Times-BoldItalic starnetISO def
/Helvetica-Oblique starnetISO def
/Helvetica-Bold starnetISO def
/Helvetica-BoldOblique starnetISO def
/Courier-Oblique starnetISO def
/Courier-BoldOblique starnetISO def
%%BeginResource: procset graphviz 0 0
/coord-font-family /Times-Roman def
/default-font-family /Times-Roman def
/coordfont coord-font-family findfont 8 scalefont def
       dup 1 exch div /InvScaleFactor exch def
/solid { [] 0 setdash } bind def
/dashed { [9 InvScaleFactor mul dup ] 0 setdash } bind def
/dotted { [1 InvScaleFactor mul 6 InvScaleFactor mul] 0 setdash } bind def
/invis {/fill {newpath} def /stroke {newpath} def /show {pop newpath} def} bind def
/bold { 2 setlinewidth } bind def
/nodecolor { sethsbcolor } bind def
/edgecolor { sethsbcolor } bind def
/graphcolor { sethsbcolor } bind def
/nopcolor {pop pop pop} bind def
			(\() show i str cvs show (,) show j str cvs show (\)) show
% draw text fitted to its expected width
			text stringwidth pop width exch sub text length div 0 text ashow
/boxprim {				% xcorner ycorner xsize ysize
/endpage { showpage } bind def
	[	% layer color sequence - darkest to lightest
/layerlen layercolorseq length def
/setlayer {/maxlayer exch def /curlayer exch def
	layercolorseq curlayer 1 sub layerlen mod get
/onlayer { curlayer ne {invis} if } def
14 default-font-family set_font
% make sure pdfmark is harmless for PS-interpreters other than Distiller
/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
% make '<<' and '>>' safe on PS Level 1 devices
/languagelevel where {pop languagelevel}{1} ifelse
    userdict (<<) cvn ([) cvn load put
    userdict (>>) cvn ([) cvn load put
</a>
</g>
</svg>
<text
 text-anchor="start"
 text-anchor="end"
 text-anchor="middle"
 x="
" y="
 font-family="%s
 font-weight="%s"
 font-stretch="%s"
 font-style="%s"
 font-family="%s"
 font-weight="bold"
 font-style="italic"
 text-decoration="
underline
%soverline
%sline-through
 baseline-shift="super"
 baseline-shift="sub"
 font-size="%.2f"
 fill="%s"
 fill="#%02x%02x%02x"
gvrender_core_svg.c
<tspan x="0" dy="
</tspan></textPath>
</text>
 id="a_
 xlink:title="
<g id="
" class="%s
class
<title>
</title>
layer
stylesheet
<?xml-stylesheet href="
" type="text/css"?>
 version 
 transform="scale(
) rotate(%d) translate(
<!--
 Title: 
transparent
 fill="
url(#l_%d)
url(#r_%d)
" fill-opacity="%f
none
" stroke="
" stroke-width="
" stroke-dasharray="%s
" stroke-opacity="%f
<polyline
 points="
x1="
" y1="
" x2="
" y2="
;stop-opacity:
;"/>
<path
_p" 
 d="
<polygon
<ellipse
 cx="
" cy="
" rx="
" ry="
svg:svg
svgz:svg
aliceblue
antiquewhite
aqua
azure
beige
bisque
blanchedalmond
blueviolet
burlywood
cadetblue
chartreuse
chocolate
cornflowerblue
cornsilk
crimson
darkblue
darkcyan
darkgoldenrod
darkgray
darkgreen
darkgrey
darkkhaki
darkmagenta
darkolivegreen
darkorange
darkorchid
darkred
darksalmon
darkseagreen
darkslateblue
darkslategray
darkslategrey
darkturquoise
darkviolet
deeppink
deepskyblue
dimgray
dimgrey
dodgerblue
firebrick
floralwhite
fuchsia
gainsboro
ghostwhite
greenyellow
honeydew
hotpink
indianred
indigo
ivory
lavender
lavenderblush
lawngreen
lemonchiffon
lightblue
lightcoral
lightcyan
lightgoldenrodyellow
lightgray
lightgreen
lightgrey
lightpink
lightsalmon
lightseagreen
lightskyblue
lightslategray
lightslategrey
lightsteelblue
lightyellow
lime
limegreen
linen
maroon
mediumaquamarine
mediumblue
mediumorchid
mediumpurple
mediumseagreen
mediumslateblue
mediumspringgreen
mediumturquoise
mediumvioletred
mintcream
mistyrose
moccasin
navajowhite
navy
oldlace
olive
olivedrab
orangered
palegoldenrod
palegreen
paleturquoise
palevioletred
papayawhip
peachpuff
peru
plum
powderblue
rosybrown
royalblue
saddlebrown
sandybrown
seashell
sienna
silver
snow
teal
thistle
tomato
wheat
whitesmoke
yellowgreen
<textPath xlink:href="#%s_p" startOffset="50%%">
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg width="%dpt" height="%dpt"
 viewBox="%.2f %.2f %.2f %.2f"
 xmlns="http://www.w3.org/2000/svg"
 xmlns:xlink="http://www.w3.org/1999/xlink"
<defs>
<linearGradient id="l_%d" gradientUnits="userSpaceOnUse" 
<stop offset="%.03f" style="stop-color:
<stop offset="0" style="stop-color:
<stop offset="1" style="stop-color:
;"/>
</linearGradient>
</defs>
<defs>
<radialGradient id="r_%d" cx="50%%" cy="50%%" r="75%%" fx="%d%%" fy="%d%%">
;"/>
</radialGradient>
</defs>
svg_textspan
svg_print_color
MbP?
# Generated by 
graph label
gvrender_core_tk.c
 -tags {%d%s%p}
 create line 
 -fill 
 -width 
 -dash 5
 -dash 2
 -smooth bezier 
 create polygon 
 -outline 
 create oval 
 create text 
 -text {
 -font {
 %d}
 -anchor w
 -anchor e
tk:tk
tkgen_print_tags
tkgen_print_color
?</v:group>
</DIV>
</BODY>
</HTML>
gvrender_core_vml.c
 filled="true" fillcolor="
 filled="false" 
<v:stroke color="
" weight="%.0fpt
" dashstyle="dash
" dashstyle="dot
" />
<v:path v="
 width: %d; height: %d"
<v:path  v="
%s%.0f,%.0f 
/></v:shape>
%.0f %.0f 
x e "/>
 left: %.2f; top: %.2f;
 width: %.2f; height: %.2f"
</v:oval>
&lt;
&quot;
&amp;
&#39;
&gt;
&#45;
&#160;
      <!-- 
font-family: '%s';
font-weight: %s;
font-stretch: %s;
font-style: %s;
 font-size: %.2fpt;
color:%s;
color:#%02x%02x%02x;
"><center>
</center></v:textbox>
</v:rect>
 href="%s"
 title="%s"
 target="%s"
<HEAD>
<TITLE>
</TITLE>
<!-- Pages: %d -->
   function browsercheck()
   {
      var ievers;
      var item;
      if (ievers>=5){
       for (x in VMLyes){
         if (item) {
         }
       for (x in VMLno){
     }else{
   </SCRIPT>
</HEAD>
 width: %dpt; height: %dpt">
<STYLE>
</STYLE>
 width: %dpt; height: %dpt"
<HTML>
<!-- Generated by 
vml:vml
vmlz:vml
<DIV id='_VML2_' style="position:relative;visibility:hidden">
<!-- insert any other html content here -->
<DIV id='_notVML1_' style="position:relative;">
<!-- this should only display on NON-IE browsers -->
<H2>Sorry, this diagram will only display correctly on Internet Explorer 5 (and up) browsers.</H2>
<DIV id='_notVML2_' style="position:relative;">
<!-- insert any other NON-IE html content here -->
 <v:shape style="position:absolute; 
 width: %d; height: %d" filled="false">
  <v:oval style="position:absolute;
Error during conversion to "UTF-8".  Quiting.
<v:rect style="position:absolute; 
 stroked="false" filled="false">
<v:textbox inset="0,0,0,0" style="position:absolute; v-text-wrapping:'false';padding:'0';
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <SCRIPT LANGUAGE='Javascript'>
      var ua = window.navigator.userAgent
      var msie = ua.indexOf ( 'MSIE ' )
      var VMLyes=new Array('_VML1_','_VML2_');
      var VMLno=new Array('_notVML1_','_notVML2_');
      if ( msie > 0 ){      // If Internet Explorer, return version number
         ievers= parseInt (ua.substring (msie+5, ua.indexOf ('.', msie )))
         item = document.getElementById(VMLyes[x]);
           item.style.visibility='visible';
         item = document.getElementById(VMLno[x]);
           item.style.visibility='hidden';
<BODY onload='browsercheck();'>
<DIV id='_VML1_' style="position:relative; display:inline; visibility:hidden
v\:* { behavior: url(#default#VML);display:inline-block}
<xml:namespace ns="urn:schemas-microsoft-com:vml" prefix="v" />
 <v:group style="position:relative; 
 coordorigin="0,0" coordsize="%d,%d" >
vml_textspan
vml_print_color
(@ffffff
@//*** comment: %s
//*** begin_layer: %s, %d/%d
//*** end_edge
//*** begin_edge
//*** end_node
//*** end_cluster
//*** begin_cluster
//*** end_page
//*** begin_page
//*** end_layer
//*** end_graph
#version 3.6;
Black
#declare %s = %s;
White
//*** begin_node: %s
//*** begin_graph %s
pov renderer:el - %s
%s transmit %.3f
Green
Blue
gvrender_core_pov.c
pigment { color %s }
//*** polyline
linear_spline
<%9.3f, %9.3f, %9.3f>, %.3f
%s    %s
%s%s
//*** bezier
b_spline
//*** polygon
polygon { %d,
<%9.3f, %9.3f, %9.3f>
    %s
    %s    %s    %s    %s}
//*** ellipse
scale %.3f
    no_shadow
pov:pov
bakerschoc
brass
brightgold
bronze
bronze2
clear
coolcopper
darkpurple
darktan
darkwood
dkgreencopper
dustyrose
feldspar
flesh
gray05
gray10
gray15
gray20
gray25
gray30
gray35
gray40
gray45
gray50
gray55
gray60
gray65
gray70
gray75
gray80
gray85
gray90
gray95
huntersgreen
lightwood
mandarinorange
mediumforestgreen
mediumgoldenrod
mediumwood
med_purple
mica
navyblue
neonblue
neonpink
newmidnightblue
newtan
oldgold
quartz
richblue
scarlet
semiSweetChoc
spicypink
summersky
verydarkbrown
very_light_purple
global_settings { assumed_gamma 1.0 }
#default { finish { ambient 0.1 diffuse 0.9 } }
#include "colors.inc"
#include "textures.inc"
#include "shapes.inc"
camera { location <%.3f , %.3f , %.3f>
         look_at  <%.3f , %.3f , %.3f>
         right x * image_width / image_height
         angle %.3f
//sky
plane { <0, 1, 0>, 1 hollow
    texture {
        pigment { bozo turbulence 0.95
            color_map {
                [0.00 rgb <0.05, 0.20, 0.50>]
                [0.50 rgb <0.05, 0.20, 0.50>]
                [0.75 rgb <1.00, 1.00, 1.00>]
                [0.75 rgb <0.25, 0.25, 0.25>]
                [1.00 rgb <0.50, 0.50, 0.50>]
            }
            scale <1.00, 1.00, 1.50> * 2.50
            translate <0.00, 0.00, 0.00>
        }
        finish { ambient 1 diffuse 0 }
    }
    scale 10000
//mist
fog { fog_type 2
    distance 50
    color rgb <1.00, 1.00, 1.00> * 0.75
    fog_offset 0.10
    fog_alt 1.50
    turbulence 1.75
//gnd
plane { <0.00, 1.00, 0.00>, 0
    texture {
        pigment{ color rgb <0.25, 0.45, 0.00> }
        normal { bumps 0.75 scale 0.01 }
        finish { phong 0.10 }
    }
light_source { <1500,3000,-2500> color White }
rgb<%9.3f, %9.3f, %9.3f> transmit %.3f
oops, internal error: unhandled color type=%d %s
scale    <%9.3f, %9.3f, %9.3f>
rotate   <%9.3f, %9.3f, %9.3f>
translate<%9.3f, %9.3f, %9.3f>
sphere_sweep {
    %s
    %d,
    tolerance 0.01
    %s    %s    %s    %s}
        tolerance 0.01
    %s    %s    %s    %s}
    tolerance 0.1
    %s    %s    %s    %s}
torus { %.3f, %.3f
    %s    %s    %s    %s}
sphere {<%9.3f, %9.3f, %9.3f>, 1.0
    %s    %s    %s    %s}
//*** textspan: %s, fontsize = %.3f, fontname = %s
text {
    ttf "%s",
    "%s", %.3f, %.3f
    %s    %s    %s    %s    %s}
pov_color_as_str
A333333
V@.\" 
%s %s
.ft %s
.ps %d*\n(SFu/%.0fu
"%s" at (%.5f,%.5f);
%s%s is not a troff font
rotation
%s%s unsupported
.PS %.5f %.5f
reset %s set to known state
maxpsht = %f
maxpswid = %f
Dot: [
%s Title: %s
pic:pic
AvantGarde-Demi
AvantGarde-BookOblique
AvantGarde-Book
AvantGarde-DemiOblique
Times-Bold
Times-BoldItalic
Courier-Bold
Courier
Courier-BoldOblique
Helvetica
Helvetica-Bold
Helvetica-Oblique
Helvetica-BoldOblique
Helvetica-Narrow-Bold
Helvetica-Narrow-Oblique
Helvetica-Narrow
Helvetica-Narrow-BoldOblique
Times-Italic
Bookman-Demi
Bookman-LightItalic
Bookman-Light
Bookman-DemiItalic
NewCenturySchlbk-Bold
NewCenturySchlbk-Italic
NewCenturySchlbk-Roman
NewCenturySchlbk-BoldItalic
Palatino-Roman
Palatino-Bold
Palatino-Italic
Palatino-BoldItalic
Times-Roman
Symbol
ZapfDingbats
ellipse attrs%d %swid %.5f ht %.5f at (%.5f,%.5f);
%s restore point size and font
.ps \n(.S
.ft \n(DF
%s to change drawing size, multiply the width and height on the .PS line above and the number on the two lines below (rounded to the nearest integer) by a scale factor
.nr SF %.0f
scalethickness = %.0f
%s don't change anything below this line in this drawing
%s non-fatal run-time pic version determination, version 2
boxrad=2.0 %s will be reset to 0.0 by gpic only
scale=1.0 %s required for comparisons
%s boxrad is now 0.0 in gpic, else it remains 2.0
%s dashwid is 0.1 in 10th Edition, 0.05 in DWB 2 and in gpic
%s fillval is 0.3 in 10th Edition (fill 0 means black), 0.5 in gpic (fill 0 means white), undefined in DWB 2
%s fill has no meaning in DWB 2, gpic can use fill or filled, 10th Edition uses fill only
%s DWB 2 doesn't use fill and doesn't define fillval
%s reset works in gpic and 10th edition, but isn't defined in DWB 2
%s DWB 2 compatibility definitions
if boxrad > 1.0 && dashwid < 0.075 then X
	fillval = 1;
	define fill Y Y;
	define solid Y Y;
	define reset Y scale=1.0 Y;
%s GNU pic vs. 10th Edition d\(e'tente
if fillval > 0.4 then X
	define setfillval Y fillval = 1 - Y;
	define bold Y thickness 2 Y;
	%s if you use gpic and it barfs on encountering "solid",
	%s	install a more recent version of gpic or switch to DWB or 10th Edition pic;
	%s	sorry, the groff folks changed gpic; send any complaint to them;
X else Z
	define setfillval Y fillval = Y;
	define bold Y Y;
	define filled Y fill Y;
%s arrowhead has no meaning in DWB 2, arrowhead = 7 makes filled arrowheads in gpic and in 10th Edition
%s arrowhead is undefined in DWB 2, initially 1 in gpic, 2 in 10th Edition
arrowhead = 7 %s not used by graphviz
%s GNU pic supports a boxrad variable to draw boxes with rounded corners; DWB and 10th Ed. do not
boxrad = 0 %s no rounded corners in graphviz
%s GNU pic supports a linethick variable to set line thickness; DWB and 10th Ed. do not
linethick = 0; oldlinethick = linethick
%s .PS w/o args causes GNU pic to scale drawing to fit 8.5x11 paper; DWB does not
%s maxpsht and maxpswid have no meaning in DWB 2.0, set page boundaries in gpic and in 10th Edition
%s maxpsht and maxpswid are predefined to 11.0 and 8.5 in gpic
define attrs0 %% %%; define unfilled %% %%; define rounded %% %%; define diagonals %% %%
%s Creator: %s version %s (%s)
%s save point size and font
.nr .S \n(.s
.nr DF \n(.f
dot pic plugin: 
b@image create photo "photo_%s" -file "%s"
$c create image %.2f %.2f -image "photo_%s"
<v:image src="%s" style=" position:absolute; width:%.2f; height:%.2f; left:%.2f ; top:%.2f"
    texture ImageTexture { url "%s" }
%d %d %d %d %d %d %d %d %d %.1f %d %d %d %d %d %d
 %d %s
 %d %d %d %d %d %d %d %d %d %d
" width="%gpx" height="%gpx" preserveAspectRatio="xMidYMid meet" x="%g" y="%g"
" width="%gpx" height="%gpx" preserveAspectRatio="xMinYMin meet" x="%g" y="%g"
gsave %g %g translate newpath
gvloadimage_core.c
us->name
%g %g 
Shape {
  appearance Appearance {
    material Material {
      ambientIntensity 0.33
        diffuseColor 1 1 1
<image xlink:href="
 transform="rotate(%d %g %g)"
user_shape_%d
png:svg
gif:svg
jpeg:svg
jpe:svg
jpg:svg
png:fig
gif:fig
jpeg:fig
jpe:fig
jpg:fig
png:vrml
gif:vrml
jpeg:vrml
jpe:vrml
jpg:vrml
(lib):ps
png:map
gif:map
jpeg:map
jpe:map
jpg:map
eps:map
svg:map
png:dot
gif:dot
jpeg:dot
jpe:dot
jpg:dot
eps:dot
svg:dot
png:xdot
gif:xdot
jpeg:xdot
jpe:xdot
jpg:xdot
eps:xdot
svg:xdot
png:vml
gif:vml
jpeg:vml
jpe:vml
jpg:vml
gif:tk
core_loadimage_svg
core_loadimage_fig
core_loadimage_vrml
core_loadimage_ps
core_loadimage_pslib
;*3$"
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA!stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA!stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA!stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA!stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA!stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA!stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA!stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA!stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA!stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA!stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA!stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA!stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA!stack_realign
libgvplugin_core.so.6.0.0-2.40.1-36.fc29.x86_64.debug
7zXZ
)o	v]
`mqB
J8)bz
@=fAFj
*Db=
M{wX3
qN^U
XU\J
)N2B
gO/q
}TWwF
2L.3
zn)J
5"+`|
dpq~
"p*QT
vUs@
H{*S
EJBf
TM/!
$047v
N(U)
^;7">
oSU.
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.note.gnu.property
.init_array
.fini_array
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu.build.attributes
.gnu_debuglink
.gnu_debugdata
