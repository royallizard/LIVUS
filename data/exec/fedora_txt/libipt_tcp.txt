__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
my_init
register_match
__printf_chk
putchar
getservbyport
__strdup
strchr
free
parse_port
exit_error
strtok
strcasecmp
optarg
optind
check_inverse
string_to_number
libc.so.6
_edata
__bss_start
_end
GLIBC_2.2.5
GLIBC_2.3.4
ATSubH
ffffff.
fffff.
[]A\A]
[]A\A]1
l$ H
l$ H
ffffff.
AWAVAUE1
ATUSH
[]A\A]A^A_
d$(L
l$0H
<-tw<!ts
n SH
[]A\A]
[]A\A]1
n SH
NONE
invalid portrange (min > max)
Unknown TCP flag `%s'
SYN,RST,ACK,FIN
Bad TCP option `%s'
1.3.8
tcp 
option=%s%u 
flags:%s
0x%02X/0x%02X 
Unknown invflags: 0x%X 
--sport %u:%u 
--sport %u 
--dport %u:%u 
--dport %u 
--tcp-option %u 
--tcp-flags 
source-port
sport
destination-port
dport
tcp-flags
tcp-option
Only one `--source-port' allowed
Only one `--destination-port' allowed
Only one of `--syn' or `--tcp-flags'  allowed
--tcp-flags requires two args.
Only one `--tcp-option' allowed
TCP v%s options:
 --tcp-flags [!] mask comp	match when TCP flags & mask == comp
				(Flags: SYN ACK FIN RST URG PSH ALL NONE)
[!] --syn			match when only SYN flag set
				(equivalent to --tcp-flags SYN,RST,ACK SYN)
 --source-port [!] port[:port]
 --sport ...
				match source port(s)
 --destination-port [!] port[:port]
 --dport ...
				match destination port(s)
 --tcp-option [!] number       match if TCP option set
libipt_tcp.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
