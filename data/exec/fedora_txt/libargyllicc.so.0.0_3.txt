4$( 
#nGZ
W{(`
__gmon_start__
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
__stack_chk_fail
icmLut_tune_value_sx
calloc
free
realloc
malloc
fclose
fflush
__vfprintf_chk
fwrite
fread
fseek
memmove
floor
__sprintf_chk
strlen
icmLut_tune_value_nl
memset
strcpy
localtime
__vsnprintf_chk
__stpcpy_chk
__ctype_b_loc
new_icmAllocStd
new_icmFileStd_fp_a
fileno
__fxstat
new_icmFileStd_fp
new_icmFileStd_name_a
__strcpy_chk
fopen
new_icmFileStd_name
new_icmFileMem_a
new_icmFileMem
new_icmFileMem_d
new_icmFileMem_ad
read_Primitive
write_Primitive
tag2str
str2tag
icmCSSig2nchan
icmCSSig2chanNames
icm2str
psh_init
psh_reset
psh_inc
icmSetMultiLutTables
memcpy
sqrt
icmClamp3
icmAdd3
icmSub3
icmDiv3
icmMul3
icmSetUnity3x3
icmCpy3x3
icmScale3x3
icmMulBy3x3
icmAdd3x3
icmTensMul3
icmMul3x3
icmMul3x3_2
icmDet3x3
icmInverse3x3
icmTranspose3x3
icmDot3
icmCross3
icmNorm3sq
icmNorm3
icmScale3
icmBlend3
icmClip3
icmNormalize3
icmNorm33sq
icmNorm33
icmScale33
icmNormalize33
icmRotMat
icmMulBy2x2
icmCpy3x4
icmMul3By3x4
icmVecRotMat
icmVecPlaneIsect
icmLineLineClosest
icmPlaneEqn3
icmPlaneDist3
icmPlaneEqn2
icmPlaneDist2
icmLineIntersect2
icmY2L
icmL2Y
icmXYZ2Lab
icmD50
__snprintf_chk
icmLab2XYZ
icmLCh2Lab
sincos
icmLab2LCh
atan2
icmXYZ2Yxy
icmYxy2XYZ
icmXYZ2Luv
icmLuv2XYZ
icmXYZ21976UCS
icm1976UCS2XYZ
icmXYZ21960UCS
icm1960UCS2XYZ
icmXYZ21964WUV
icm1964WUV2XYZ
icm1960UCS21964WUV
icmLabDE
icmLabDEsq
icmXYZLabDE
icmCIE94sq
icmCIE94
icmXYZCIE94
icmCIE2Ksq
icmCIE2K
icmXYZCIE2K
icmChromAdaptMatrix
icmBlack
icc_new_icmLuLut
icmRGBprim2matrix
quantizeRGBprimsS15Fixed16
icmClipLab
icmClipXYZ
icmLut2YPbPr
icmYPbPr2Lut
icmRec601_RGBd_2_YPbPr
icmRec601_YPbPr_2_RGBd
icmRec709_RGBd_2_YPbPr
icmRec709_YPbPr_2_RGBd
icmRec709_50_RGBd_2_YPbPr
icmRec709_50_YPbPr_2_RGBd
icmRec2020_NCL_RGBd_2_YPbPr
icmRec2020_NCL_YPbPr_2_RGBd
icmRec2020_CL_RGBd_2_YPbPr
icmRec2020_CL_YPbPr_2_RGBd
icmRecXXX_YPbPr_2_YCbCr
icmRecXXX_YCbCr_2_YPbPr
icmRGB_2_VidRGB
icmVidRGB_2_RGB
icmDICOM_fwd
icmDICOM_bwd
log10
new_icmMD5
new_icmFileMD5_a
new_icc_a
new_icc
icmPiv
icmPdv
icmPfv
icmPLab
icmD65_100_ary3
icmD65_ary3
icmD65_100
icmD65
icmD50_100_ary3
icmD50_ary3
icmD50_100
libpthread.so.0
libz.so.1
libm.so.6
libc.so.6
_edata
__bss_start
_end
libargyllicc.so.0
GLIBC_2.2.5
GLIBC_2.3
GLIBC_2.14
GLIBC_2.4
GLIBC_2.3.4
fffff.
fffff.
fffff.
G`H+GP
H;w`s
ffff.
G`H+GPH
ATUS
U [1
fff.
ffff.
 VSH
RLCA
RLCD
RLCC
 YMC
KYMC
RLC5
RLC7
RLC8
RLC9
5HCM
 baL
2  Lt$
4  Lt
8  L
RLCF
YARGt
 SLH
RLC3
RLC4
RLC2
 BGR
7HCM
8HCM
   Y
rbCYtV
 yxYtN
RLC6
4baLt 
8baLt
 vuL
   L
RLCB
RLCE
 SCP
2baL
 ZYX
80iu
61iu
23iu
46iu
23fu
23fs
 ZYX
vruc
atad
txet
ffff.
fff.
z2u0H
AVAUATUSH
D$H1
4$roL
rdH9
D$HdH3
P[]A\A]A^
?1tfm
AWAVAUATA
D$H1
?1tfmH
U D9
U D9
v,f.
U D9
U D9
U D9
U D9
D$HdH3
X[]A\A]A^A_
fffff.
2tfmH
ffff.
fff.
saem
AWAVAUATUSH
?locn
E9uP
2lcn
U A9]Tv
U E9uP
[]A\A]A^A_
@@= baLtO= ZYXu0
T$8H
T$8H
L$0H
2lcn
AVAUA
 baLATUSH
x8knilt
=clrt
=trlc
=trlctI
A9nL
T$ 1
T$ A
=clrtu
 baLtGA
 ZYXun
T$ A9nLw
[]A\A]A^
trlc
AWAVAUATUSH
E9eL
[]A\A]A^A_
AUATI
A9mLw
[]A\A]
qesp
ffff.
fff.
 gis
nrcs
 dfb
AUATI
[]A\A]H
t}E1
[]A\A]
[]A\A]
tgcv
ffff.
ffff.
fff.
weiv
AUATUSH
[]A\A]
idrc
fff.
97tfH
trlct(H
AVAUI
ATUSH
tVE1
[]A\A]A^
]A\A]A^
ffffff.
ffffff.
ffffff.
ffffff.
ffffff.
ffffff.
ffffff.
ffffff.
ffffff.
ffffff.
ffffff.
ffffff.
ffff.
ffffff.
AWAVAUATUS
p $D
n;A!
QZ^&
7D")
Y[e1
A\A]A^A_
fffff.
H;G`v
ffff.
ATUSH
]XH;]`
[]A\
ffff.
ffff.
fff.
[]A\A]A^
ffffff.
l$Pt
[]A\A]A^A_
fff.
AWAVA
AUATA
D$@= baLt
= ZYX
CRTkH
8vruc
[]A\A]A^A_
[]A\A]A^A_
fff.
u/H9
ATUH
[]A\
AUATUSH
D$x1
L$xdH3
[]A\A]
ATUH
[]A\
AVAUATUH
D$x1
L$xdH3
[]A\A]A^
AUATI
D$x1
L$xdH3
[]A\A]
AVAUI
ATUI
[]A\A]A^
fff.
AWAVI
AUATI
B8=rtrp@
=rtnm
t>=knilt7
[]A\A]A^A_
B<= baLt
= ZYXt
= vuLt
= BGRt
L$ H
T$$j
D$(L
L$LL
D$HH
=YARG
=RLC2
=RLC3
= SLH
= VSH
=rbCY
= yxY
L$0H
L$0H
D;d$
ATUH
u'E1
[]A\
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
dH34%(
t$XI
D$`H)
t$XL
D$X]A\
t$XH
AWAVAUATUSf
D$LH
D$0H
\$(H
t$ H
\$(9
*D$@
L;t$8O
L$P1
H9T$0u
;\$Hu
HcT$P
tAIc
;\$H
dH3<%(
[]A\A]A^A_
HcT$PM
AWAVAUATUSH
[]A\A]A^A_
T$(H
D$ E1
D$ H
*D$(
D9d$
AWAVI
AUATUSH
D$0H
D$8H
D$@H
|$(H
*D$(
L;|$
l$HH
L$@H
T$PI
D$8A
t$Lc
HcD$PIcL
[]A\A]A^A_
HcD$PIcL
ffffff.
AWAVAUATUSH
[]A\A]A^A_
T$(H
D$ E1
D$ H
*D$(
D9d$
AWAVAUATUSH
icmUnkno
wn_read:
 fseek()H
 or freaH
d() failH
[]A\A]A^A_
icmUnkno
wn_read:f
 Tag too
 small t
o be legH
icmUnknoH
 malloc(
wn_read:H
) failed
l$PA
D$Lt
L$X@
AVAUATUA
9SPw
icmUnknoI
wn_write
 fseek()I
 or fwriH
te() faiI
[]A\A]A^
icmUnkno
wn_writefA
 get_sizA
e overflA
[]A\A]A^
icmUnkno
wn_writeA
 malloc(
) failedI
[]A\A]A^
GP;GHH
CXt%
icmUnkno
iled
wn_alloc
: malloc
() of icH
mUnknownH
 data faH
AWAVAUATUSH
icmUInt8
aileL
Array_re
ad: fseeH
k() or fH
read() fH
[]A\A]A^A_
icmUInt8
legaH
Array_ref
ad: Tag 
too smal
l to be H
icmUInt8H
oc() fai
Array_reH
ad: mall
l$LA
$ukE
D$P1
icmUInt8H
cmUInt8A
rrayH
Array_reH
ad: Wron
g tag ty
pe for iH
AVAUATI
D$P1
A9T$L
D$PA
icmUInt8H
ite: wrifA
te_UInt8I
Array_wrI
umber() I
failL
]A\A]A^
icmUInt8H
ite fseeI
Array_wrH
k() or fI
write() 
failL
[]A\A]A^
icmUInt8H
Array_wr
size oveH
ite get_I
rflo
[]A\A]A^
icmUInt8
Array_wrI
ite mallH
oc() faiI
[]A\A]A^
GL;GHH
?wSH
icmUInt8
loc: sizH
Array_alf
e overflH
icmUInt8H
loc: malH
 icmUIntH
Array_alH
loc() ofH
8Array dH
ata fail
AWAVAUATUSH
icmUInt1
failH
6Array_rf
ead: fse
ek() or H
fread() H
[]A\A]A^A_
icmUInt1
 leg
6Array_r
ead: TagA
 too smaH
ll to beH
icmUInt1H
loc() fa
iledH
6Array_rH
ead: mal
l$LA
t$P1
icmUInt1H
6Array_r
ead: WroH
ng tag tH
ype for H
icmUInt1H
6Arrf
AVAUATI
D$PE1
w=f.
E9L$L
D$PD
icmUInt1I
rite: wrI
6Array_wI
) failedH
ite_UIntH
16umber(I
]A\A]A^
icmUInt1H
6Array_wI
rite fseH
ek() or H
fwrite()H
 failed
[]A\A]A^
icmUInt1
6Array_wI
rite getH
_size ov
erfl
[]A\A]A^
icmUInt1H
6Array_w
rite malH
loc() faI
iledI
[]A\A]A^
fffff.
GL;GHH
?wSH
icmUInt1H
lloc:: s
flowH
6Array_aH
ize over
icmUInt1H
lloc: maH
f icmUInH
6Array_aH
lloc() oH
t16ArrayH
 data faH
iled
AWAVAUATUSH
icmUInt3
failH
2Array_rf
ead: fse
ek() or H
fread() H
[]A\A]A^A_
icmUInt3
 leg
2Array_r
ead: Tag
 too smaH
ll to beH
icmUInt3H
2Array_rH
ead: malH
loc() faH
iled
l$LA
t$PK
icmUInt3
2ArrH
2Array_rf
ead: Wro
ng tag tH
ype for H
icmUInt3H
AVAUATUA
D9KLw
icmUInt3H
2Array_wI
rite fseH
ek() or I
fwrite()I
 failed
[]A\A]A^
icmUInt3
_size ovI
2Array_w
rite getI
erfl
[]A\A]A^
icmUInt3
rite malI
2Array_wI
loc() faA
iledI
[]A\A]A^
fffff.
GL;GHH
?wSH
icmUInt3H
lloc: si
2Array_aH
ze overf
icmUInt3H
lloc: maH
f icmUInH
2Array_aH
lloc() oH
t32ArrayH
 data faH
iled
fff.
AWAVAUATUSH
icmUInt6
failH
4Array_rf
ead: fse
ek() or H
fread() H
[]A\A]A^A_
icmUInt6
 leg
4Array_r
ead: TagA
 too smaH
ll to beH
icmUInt6
iled
4Array_r
ead: malA
loc() faH
l$LA
|$PL
L;|$
icmUInt6
4ArrH
4Array_rf
ead: Wro
ng tag tH
ype for H
icmUInt6H
AUATU
E9NLw
icmUInt6I
rite fseI
4Array_wI
ek() or H
 failed
fwrite()I
]A\A]A^
icmUInt6H
4Array_w
rite getH
_size ov
erfl
[]A\A]A^
icmUInt6
4Array_wI
rite malH
loc() faI
iledA
[]A\A]A^
fffff.
GL;GHH
icmUInt6H
lloc: si
4Array_aH
ze overf
icmUInt6H
lloc: maH
f icmUInH
4Array_aH
lloc() oH
t64ArrayH
 data faH
iled
fff.
AWAVAUATUSH
icmU16Fi
xed16Arrf
ay_read:H
 fseek()H
 or freaH
d() failH
[]A\A]A^A_
icmU16FiH
o be leg
xed16ArrH
ay_read:
 Tag too
 small tH
icmU16FiH
xed16Arr
ay_read:H
 malloc(H
) failedH
l$LA
t$PK
icmU16FiH
ay_read:
xed16ArrH
ag type H
 Wrong tH
for icmUH
16Fixed1H
6ArrH
AVAUATI
A9L$L
icmU16FiI
xed16ArrI
: write_H
ay_writeI
U16FixedI
16umber(H
) failedI
]A\A]A^
icmU16FiH
xed16ArrI
ay_writeI
 fseek()H
 or fwriH
te() fai
[]A\A]A^
icmU16FiH
xed16Arr
ay_writeH
e overflH
 get_siz
[]A\A]A^
icmU16FiH
xed16ArrH
) failedI
ay_writeH
 malloc(I
[]A\A]A^
GL;GHH
icmU16FiH
ay_alloc
xed16ArrH
verflow
: size oH
icmU16FiH
xed16ArrH
 data faH
ay_allocH
: mallocH
() of icH
mU16FixeH
d16ArrayH
iled
AWAVAUATUSH
icmS15Fi
xed16Arrf
ay_read:H
 fseek()H
 or freaH
d() failH
[]A\A]A^A_
icmS15FiH
o be leg
xed16ArrH
ay_read:
 Tag too
 small tH
icmS15FiH
xed16Arr
ay_read:H
 malloc(H
) failedH
l$LA
t$PK
icmS15FiH
ay_read:
xed16ArrH
ag type H
 Wrong tH
for icmSH
15Fixed1H
6ArrH
GL;GHH
icmS15FiH
ay_alloc
xed16ArrH
verflow
: size oH
icmS15FiH
xed16ArrH
 data faH
ay_allocH
: mallocH
() of icH
mS15FixeH
d16ArrayH
iled
AWAVAUATUSH
icmXYZArH
ad() fai
ray_readH
: fseek(H
) or freH
[]A\A]A^A_
icmXYZArH
ray_read
: Tag toH
o small H
to be leH
icmXYZArH
ray_readH
: mallocH
() faileH
T$LA
|$PL
L;|$
icmXYZArH
 for icm
ray_readH
: Wrong H
tag typeH
XYZArrayH
fffff.
GL;GHH
icmXYZArH
c: size 
ray_alloH
overflow
icmXYZArH
c() of i
ray_alloH
c: malloH
ay data H
cmXYZArrf
fail
AWAVAUATUSH
icmCurveH
seek() o
_read: fH
) failedH
r fread(H
[]A\A]A^A_
icmCurve
_read: TA
ag too sH
mall to H
be legalH
icmCurveH
_read: m
failH
alloc() 
icmCurveH
r icmCur
_read: WH
rong tagf
 type fo
icmCurveH
_read: DH
short foH
ata too H
r curve 
valuf
icmCurveH
_read: DH
ata too H
short foH
r curve 
gammf
icmCurveH
_read: sH
ize overH
flow
AVAUA
ATUH
icmCurveH
r fwritefA
() faileI
_write fI
seek() oI
]A\A]A^
[]A\A]A^
icmCurve
et_size I
_write gI
overflowA
[]A\A]A^
icmCurve
_write mI
alloc() I
failfE
[]A\A]A^
_write: H
icmCurveH
Must be I
0 entry I
exactly I
for Line
icmCurveH
_write: H
1 entry I
Must be I
for GammH
exactly I
icmCurveH
s for Sp
_write: I
Must be A
curvI
2 or morfA
e entrieI
ecified I
fff.
9GHtMH
;GHt
icmCurve
_alloc: H
size ovef
rflo
icmCurveH
_alloc: 
 setH
flag notH
icmCurveH
_alloc: 
malloc()H
 of icmCH
urve datH
a failedH
AWAVAUATUSH
icmData_H
read: fsH
 failed
eek() orH
 fread()H
[]A\A]A^A_
icmData_
read: TaH
g too smH
all to bH
e legal
lloc() fH
icmData_H
read: maH
aileA
l$PA
icmData_H
SII is n
read: ACH
terminatH
ot null H
T$PI
|$XL
icmData_H
read: Wr
ong tag H
type forH
 icmDataH
AVAUA
ATUH
icmData_H
ata Flag
write: UI
nknown DA
 valI
]A\A]A^
icmData_H
write: AH
SCII is I
not nullH
 terminaI
icmData_I
write fsA
eek() orH
 fwrite(H
) failedI
[]A\A]A^
icmData_
write geI
verflow
t_size oI
[]A\A]A^
icmData_H
write ma
lloc() f
ailefA
[]A\A]A^
GP;GHH
CXt%
icmData_
failH
alloc: mf
alloc() 
of icmDa
ta data 
AWAVAUATUSH
icmText_H
read: fsH
eek() orH
 failed
 fread()H
[]A\A]A^A_
icmText_
read: TaH
g too shH
ort to bH
e legal
icmText_H
read: maH
lloc() fH
aile
D$LA
icmText_H
read: teH
erminateH
xt is noH
t null t
T$LI
|$PL
icmText_H
ong tag 
read: WrH
 icmTextH
type forH
ffffff.
ATUSH
icmText_H
ext is nf
write: tH
terminatH
ot null H
[]A\A]A^
icmText_H
write fsH
eek() orA
 fwrite(H
) failedH
]A\A]A^
icmText_H
write geA
t_size oH
verflow
[]A\A]A^
icmText_H
write maA
lloc() fH
ailef
[]A\A]A^
GL;GHH
CPt%
icmText_
failH
alloc: mf
alloc() 
of icmTe
xt data 
WHAP
VQRH
AVAUATUSH
icmDateT
imeNumbef
r_read: H
fseek() H
or freadH
() faileH
]A\A]A^
icmDateTA
imeNumbeD
r_read: H
Tag too H
small toH
 be legaH
[]A\A]A^
icmDateTH
imeNumbeA
r_read: H
malloc()H
 failed
[]A\A]A^
icmDateTH
imeNumbeH
r_read: H
Wrong taH
g type fH
or icmDaH
teTimeNuH
mber
icmDateTH
r_read: f
imeNumbeH
d DateTiH
CorrupteH
AWAVAUATUSH
icmLut_rH
ead: fseH
ek() or H
fread() H
failf
[]A\A]A^A_
icmLut_rH
 too sma
 legH
ead: TagH
ll to beH
icmLut_rH
ead: mal
iledH
loc() faH
1tfm
1tfm
1tfm
icmLut_rH
ead: TagH
 too smaH
ll to be
 legH
icmLut_rH
ng tag t
icmLH
ead: WroH
ype for 
1tfm
<$1tfm
icmLut_rH
 wrong sH
ize for H
ead: TagH
contentsH
icmLut_rH
ead: TagH
 too smaH
fffff.
AUATUSH
icmLut_aH
lloc siz
e overfl
icmLut_aH
lloc: si
ze overfH
]A\A]
[]A\A]
icmLut_aA
lloc sizfD
e overfl
[]A\A]
icmLut_aH
lloc: si
ze overfH
]A\A]
[]A\A]
icmLut_a
iled
lloc: ca
lloc() o
f Lut inH
putTableH
 data faH
icmLut_aH
lloc: ca
lloc() oH
f Lut ouH
tputTablH
e data fH
aile
icmLut_aH
lloc: ca
lloc() oH
f Lut clH
utTable H
data faiH
#AVAUATUSH
icmMeasuH
rement_rH
ek() or H
ead: fseH
fread() 
failf
]A\A]A^
icmMeasuA
ll to beH
rement_rH
ead: Tag
 legH
 too sma
[]A\A]A^
icmMeasuA
ead: malH
loc() faH
rement_rH
iled
[]A\A]A^
icmMeasuH
rement_rH
ead: WroH
ng tag tH
ype for H
icmMeasu
remef
D$hA
D$pA
D$xH
icmMeasuH
Number eH
rement: H
read_XYZ
rrorH
ffff.
GP;GHH
icmNamedH
Color_al
loc: sizH
e overflf
icmNamedH
loc() of
Color_alH
loc: malH
dColor dH
 icmNameH
ata failf
GLD;GHH
icmColor
antTable
_alloc: H
malloc()H
 of icmCH
olorantTH
able datH
a failedH
AVAUI
ATUSH
icmTextD
escripti
on_read:H
 fseek()H
 or freaH
d() failH
[]A\A]A^
icmTextDH
 Tag too
escriptiH
on_read:H
o be legH
 small tH
icmTextDH
escriptiH
on_read:H
 malloc(H
) failedH
AVAUA
ATUSH
icmTextDH
on_writeH
escriptiH
 fseek()H
 or fwriH
te() faiH
[]A\A]A^
icmTextDH
escriptiH
) failedH
on_writeH
 malloc(H
icmTextDH
escriptiH
on_writeH
 get_sizH
e overfl
ffffff.
G`;GHH
Ct;CL
icmTextDH
: size o
escriptiH
on_alloc
verflow
icmTextDH
escripti
on_allocH
: mallocH
() of AsH
cii descH
ription f
fail
icmTextDH
escriptiH
on_allocH
: mallocH
() of UnH
icode deH
scriptioH
n failedH
ffff.
AWAVAUATI
D$(1
D$ H
t$ H
icmProfi
failH
leSequenf
ceDesc_r
ead: fseH
ek() or H
fread() H
L$(dH3
8[]A\A]A^A_
leSequenH
icmProfi
 legH
ead: TagH
ceDesc_rH
ll to beH
 too sma
icmProfiH
leSequenH
loc() faH
ceDesc_rH
ead: malH
iled
icmProfiH
leSequenH
ceDesc_rH
ead: WroH
ng tag tH
icmProfiH
ype for H
leSequen
ceDef
t$ O
ePM9
icmDescSH
truct_reH
 too shoH
ad: DataH
rt read 
headf
D$ 1
t$ Mi
ePM9
|$(L
D$ A
A9ML
AWAVAUATI
D$(1
T$LH
T$LH
l$ 1
D$ L
A9\$LM
|$(dH3<%(
8[]A\A]A^A_
icmProfi
erflH
leSequenf
ceDesc_w
rite get
_size ovH
icmProfiH
leSequenH
ceDesc_wH
rite fseH
ek() or H
fwrite()H
 failed
icmProfiH
leSequen
iledH
ceDesc_w
rite mal
loc() faH
fff.
AVAUATUSH
icmSignaH
ture_reaH
ead() faH
d: fseekH
() or frH
iled
]A\A]A^
icmSignaA
oo smallH
ture_reaH
d: Tag t
egalH
 to be l
[]A\A]A^
icmSigna
d: malloH
ture_reaH
c() failf
[]A\A]A^
icmSignaH
turSignaH
for icmSH
tureng tH
ag type H
ignatureH
fff.
AVAUA
icmSigna
() or fwH
ture_wriH
te fseekH
rite() fH
aileH
]A\A]A^
icmSignaH
ture_wriA
te malloH
c() fail
[]A\A]A^
icmSignaA
ture_wriH
te get_sH
ize overH
flow
[]A\A]A^
ffffff.
AWAVAUATUSH
icmScreeH
ning_reaH
ead() faH
d: fseekH
() or frH
iled
[]A\A]A^A_
icmScree
egal
ning_rea
d: Tag tA
oo smallH
 to be lH
icmScreeH
ning_reaH
c() failH
d: malloH
icmScreeH
ning_reaH
mScreeniH
d: WrongH
 tag typH
e for ic
icmScreeH
t to reaH
d ScreenH
ning_reaH
d: Data H
too shor
ing DataH
ffff.
icmScree
 overfloH
ning_allf
oc: sizeH
icmScreeH
oc: mallH
a failedH
ning_allH
oc() of H
icmScreeH
ning datH
fffff.
AVAUATUA
icmUcrBg
_write: fA
write_UII
nt16umbeI
r() failI
[]A\A]A^
icmUcrBg
_write gA
et_size 
overflowI
[]A\A]A^
icmUcrBgA
_write: I
text is I
not nullI
 terminaI
icmUcrBgI
_write f
seek() ofA
r fwriteH
() faileI
[]A\A]A^
icmUcrBg
_write mA
failI
alloc() fA
[]A\A]A^
icmUcrBgA
_write: I
text is I
shorter I
than lenI
GT;GHH
C`;CL
icmUcrBgH
e: size H
overflowH
_allocatH
Cp;CP
icmUcrBgH
overflow
_allocatH
e: size 
icmUcrBgH
_allocatH
CR curveH
e: malloH
c() of UH
 data faH
iled
icmUcrBgH
_allocatH
e: mallo
c() of sH
tring daH
ta failef
icmUcrBgH
_allocatH
e: malloH
c() of BH
G curve H
data faiH
fff.
AWAVAUATUSH
icmVideoH
CardGammH
fseek() H
a_read: H
or freadH
() faile
[]A\A]A^A_
icmVideo
CardGammf
a_read: A
Tag too H
small toH
 be legaH
icmVideoH
CardGammH
malloc()H
a_read: H
 failed
t$PA
D$RA
icmVideoH
CardGammH
a_read: H
Tag too H
small toH
 be lega
D$PA
L$XA
L$`A
L$hA
L$pA
L$xA
icmVideoH
CardGammH
Wrong taH
a_read: H
g type fH
or icmViH
deoCardGH
amma
L$PA
T$RI
T$Tf
D$PA
icmVideoH
CardGammH
ted tablH
a_read: H
unsupporH
e entry H
size
icmVideoH
CardGammH
aTable_rH
ead: UnkH
nown gamH
ma formaH
t for icH
mVideoCaH
rdGamma
icmVideoH
CardGammH
small toH
a_read: H
 be legaH
Tag too H
ffff.
ATUS
icmVideo
 size ovI
CardGammfA
a_alloc:I
erfl
[]A\
icmVideoH
rted tabH
 unsuppoI
CardGammI
a_alloc:I
le entryA
 sizI
[]A\
icmVideoH
CardGammH
a_alloc:I
 malloc(I
) of tabH
le data 
fail
#AVAUATUSH
icmViewi
iled
ngConditH
ions_reaH
d: fseekH
() or frH
ead() faH
]A\A]A^
icmViewiA
egalH
ngCondit
ions_rea
d: Tag tD
oo smallH
 to be lH
[]A\A]A^
icmViewiH
ngConditH
c() failH
ions_reaH
d: mallo
[]A\A]A^
icmViewiH
ngConditH
 tag typH
ions_reaH
d: WrongH
ConditioH
e for icH
mViewingH
icmViewiH
mber errH
ngConditH
ions: reH
ad_XYZNuH
icmViewiH
ngConditH
ions: reH
ad_XYZNuH
mber errH
AWAVAUATUSH
fo_read:H
icmCrdInH
d() failH
 or freaH
 fseek()
[]A\A]A^A_
icmCrdInH
fo_read:
 Tag tooH
 small tH
o be legH
icmCrdInH
fo_read:H
 malloc(H
) failedH
icmCrdInH
fo_read:H
ipt prodH
 PostscrH
uct nameH
 is not H
terminat
icmCrdInH
fo_read:H
 Data toH
o short H
to read H
PostscriH
pt produH
ct name
icmCrdInH
ag type H
fo_read:H
 Wrong tH
for icmC
rdInf
T$\I
|$`H
D$\H
htdH
icmCrdInH
fo_read:H
 Data toH
 short tH
o read PH
ostscripH
t producH
t stringH
AWAVI
AUATA
icmCrdInH
te() faiH
fo_writeH
 fseek()
 or fwriL
[]A\A]A^A_
icmCrdInH
: Postsc
fo_writeH
duct namH
ript proH
e is notH
 terminaH
icmCrdInH
 get_siz
fo_writeH
e overflf
icmCrdInH
fo_write
 malloc(H
) failedH
AVAUATUI
G\;GHL
D$\I
D$\A
D$HI
\$h1
[]A\A]A^
[]A\A]A^
icmCrdInA
fo_alloc
: mallocI
() of stI
ring datI
a failedI
AUATUSH
icmHeadeH
to be 12
r_read: H
Length e
xpected f
[]A\A]
psca
icmHeade
rtedH
r_read: f
ICC V4 n
ot suppoA
icmHeadeH
r_read: H
or freadH
fseek() H
() faile
[]A\A]
icmHeadeH
r_read: H
malloc()H
 failed
icmHeade
r_read: 
upteH
read_Datf
eTimeNumH
ber corrH
icmHeade
rrorH
r_read: 
read_XYZH
Number eH
AUATI
[]A\A]
icc_get_A
size: InI
ternal eI
rror - NI
ULL tag I
element
[]A\A]
icc_get_A
size: si
ze overfI
icc_get_
size: NoH
 header H
defined
AUATUSH
[]A\A]
trlc
[]A\A]
icc_lookH
p_fwd() 
up: Curv
e->lookuH
fail
AVAUI
ATUI
icc_look
fail
up: Curv
e->lookuH
p_fwd() H
[]A\A]A^
fff.
AVAUI
ATUI
icc_look
fail
up: Curv
e->lookuH
p_bwd() H
[]A\A]A^
fff.
gfff
Default 
ScreH
, Lines H
Per 
No Defau
lt Screef
Per Inch
gfffUS
Transpar
ency
, Matte
, Negati
, Color
[]A\
Reflecti
, PositiA
, GlossyA
, BlackAH
ndWhite
[]A\
gfff
Embedded
 ProfileH
, Use an
ywheH
Not Embe
file
dded ProH
, Use wiH
ded data
th embedH
 onlf
ffff.
AWAVAUATUSH
icmUcrBgH
_read: fH
seek() oH
r fread(H
) failedH
[]A\A]A^A_
icmUcrBgH
_read: T
ag too sH
mall to H
be legalH
icmUcrBgH
alloc() 
_read: mH
failA
icmUcrBgH
_read: sH
tring isH
 not nulH
l terminH
ated
icmUcrBgH
ata too H
 read UCH
_read: DH
short toH
R Daf
icmUcrBgH
rong tagH
r icmUcrH
_read: WH
 type foH
icmData_H
read: DaH
hort to H
ta too sH
read BlaH
ck Gen cH
ount
D$pA
T$pI
|$xL
icmUcrBgH
_read: DH
ata too H
short toH
 read BG
 Datf
AWAVA
AUATUSH
icmVideoH
CardGammH
rite: UnI
aTable_wI
known gaH
mma formI
at for iI
cmVideoCH
ardGammaI
[]A\A]A^A_
icmVideoH
 unsuppo
CardGammI
a_write:H
le entryI
rted tabI
 sizfA
icmViewiH
ngConditH
te get_sI
ions_wriH
ize overI
flow
icmViewiH
ngConditfA
() or fwI
ions_wriI
te fseekH
rite() fI
aileH
icmVideoI
CardGammH
a_write:D
 write_SH
15Fixed1I
6Number(I
) failedI
ngConditH
icmViewiH
c() failI
te malloI
ions_wri
icmVideoI
CardGammA
a_write:H
 write_SH
15Fixed1I
6Number(I
) failedI
AWAVAUATI
icmScreeH
ning_wriL
te: writD
e_ScreenH
ingData(H
) failedH
[]A\A]A^A_
A9EP
icmScree
aileH
ning_wrif
te fseekH
() or fwL
rite() f
icmScree
flow
ning_wri
te get_s
ize overH
icmScree
ning_wri
te malloH
c() failH
ffff.
AWAVAUATI
E9uL
icmS15FiH
xed16Arr
ay_writeH
: write_H
S15FixedH
16umber(H
) failedH
[]A\A]A^A_
icmS15FiH
te() faiH
xed16ArrH
ay_write
 fseek()H
 or fwriH
icmS15FiH
xed16Arr
ay_writeH
 get_sizH
e overflH
icmS15FiH
ay_write
xed16ArrH
) failedH
 malloc(H
ffffff.
AWAVAUATUSH
icmLut_wA
rite: wrI
ite_UIntI
8Number(I
) failedI
[]A\A]A^A_
icmLut_wH
ite_UIntA
rite: wrI
) failedH
8Number(I
1tfm
1tfm
icmLut_wH
rite: wrA
ite_UIntI
8Number(H
) failedI
icmLut_wH
rite getA
_size ovI
erfl
icmLut_wH
rite malA
iledI
loc() faI
icmLut_wH
rite: 16A
 bit InpH
ut and OI
utput taI
bles musI
t each bH
e less tI
han 4096H
 entriesI
icmLut_wI
rite: wr
ite_S15FfA
ixed16NuA
aileI
mber() fH
icmLut_wH
rite: in
putTableH
 write_DI
CS8NumbeI
r() failI
icmLut_wH
bit InpuI
rite: 8 I
t and OuH
tput tabI
les mustI
 be 256 H
entries
icmLut_wH
rite: wrI
ite_UIntH
16NumberI
() faileI
1tfm
1tfm
icmLut_wH
rite: cl
utTable H
write_DCI
S8NumberI
() faileI
icmLut_wI
ek() or I
rite fseI
 failed
fwrite()I
icmLut_wH
rite: ouA
tputTablH
e write_I
DCS8NumbI
er() faiI
ffff.
AWAVI
AUATI
L$,1
D$,H
D$@A
\$,f
|$PL
l$XH
D$0I
\$HH
\$ H
\$`I
*D$0
L;|$ M
|$PH
D$HL
L$,E
L;|$@t
D$8L
dH34%(
[]A\A]A^A_
D$@I
t$8H
icmLut_l
ookup_cl
ut: mall
oc() faiH
ffffff.
AWAVAUATI
D$$vMH
L$$1
D$$H
D$0I
|$$f
\$PE1
|$@A
l$HH
|$8H
H;\$
|$@H
D$8L
l$HM
L;|$0t
D$(L
D$ H
dH3<%(
[]A\A]A^A_
|$(H
icmLut_l
ookup_cl
ut: mall
oc() faiH
csed
AUATUSH
GL;GHL
[]A\A]
icmProfi
erflI
leSequenfA
ceDesc_aA
llocate:A
 size ov
[]A\A]
[]A\A]
icmProfi
aileI
leSequenfA
ceDesc_aA
llocate 
AllocatiI
on of DeI
scStructI
 array fI
ATUH
[]A\
AUATI
icmTextDH
escriptiI
on_writeI
: ascii H
string iI
s not teH
rminatedI
]A\A]
icmTextDH
escriptiI
on_writeI
: UnicodH
e stringI
 is not H
terminat
[]A\A]
icmTextDH
escriptiH
on_writeH
: ScriptH
Code strI
ing is nH
ot termi
nate
[]A\A]
icmTextDH
: write_H
escriptiI
on_writeH
ber() faI
UInt8NumI
iled
[]A\A]
icmTextDH
escriptiI
on_writeI
: ascii H
string iI
s shorteH
r than lfA
engtA
[]A\A]
icmTextDH
escriptiH
on_writeI
: UnicodH
e stringI
 is shorH
ter thanH
 length
[]A\A]
[]A\A]
icmTextDH
escriptiH
on_writeI
: ScriptH
Code strH
ing too I
long
fffff.
mitd
AUATH
g`H)
[]A\A]
fff.
AUATI
uPH9
H;]`H
]`[L
]A\A]A^
EhH)
ffffff.
AVAUI
ATUSH
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
VhHc
dH3<%(
[]A\A]A^
M;n`M
fffff.
fffff.
=L:"
=?9"
fffff.
~mATI
T$LH
U A;\$Lr
[]A\
ffff.
~mATI
T$LH
U A;\$Lr
[]A\
ffff.
~mATI
T$LH
U A;\$Lr
[]A\
ffff.
~tATI
T$LH
U A;\$Lr
[]A\
~rATI
T$LH
U A;\$Lr
[]A\
~rATI
T$LH
U A;\$Lr
[]A\
AWAVAUATUSH
([]A\A]A^A_
D;t$
ffff.
AVAUATUI
[]A\A]A^H
U A;
[]A\
[]A\
X;w~
\;wx
AVAUA
icmDateT
imeNumbef
r_write H
fseek() H
or fwritA
e() failH
]A\A]A^
icmDateTH
imeNumbeH
r_write:H
 write_DH
ateTimeNH
umber() 
failf
[]A\A]A^
icmDateTH
imeNumbeA
r_write H
malloc()H
 failed
[]A\A]A^
imeNumbeH
icmDateTA
 overfloH
r_write H
get_size
[]A\A]A^
~DATU1
clrtt
trlct
fffff.
t{rA
tTSH
icc_set_H
version:
 Header H
is missif
AWAVAUATUS
dH3<%(
([]A\A]A^A_
icc_readH
: fseek(H
) or freH
ad() faiH
led on tH
ag countH
icc_read
: size oH
verflow
icc_readH
: No heaH
der defiH
=UUU
icc_readH
ag tableH
: fseek(H
) or freH
ad() faiH
led on t
icc_readH
: Tag taH
ble readH
 buffer H
malloc()H
 failed
J,E1
;B(w-A
icc_readH
: Tag taH
ble mallH
oc() faiH
 SCP
 baL
8baL
4baL
 ZYX
2baL
4baL
AWAVA
 baLAUATUSH
x8knilt
icmColorH
antTableH
_read: fH
seek() oH
r fread(H
) failedH
[]A\A]A^A_
icmColorH
_read: T
antTableH
ag too sH
mall to H
be legalH
_read: mH
icmColorH
antTableH
alloc() 
failf
=clrt
=trlc
=clrt
8clrt
HPM9
D$(L
\$ H
 baLL
\$ L
 ZYX
icmColorH
_read: WH
rong tagH
antTableH
 type foH
r icmColH
orantTab
icmColorH
antTableH
: Data tI
Val_readH
oo shortH
 to readI
HPM9
icmColorH
antTableH
: Name sI
Val_readH
tring noH
t terminI
atedA
&D9pL
icmColorH
antTableH
_read: TH
ag too sH
mall to H
be legalH
ffffff.
 SCP
 baL
4baL
8baL
 ZYX
dH34%(
2baL
AWAVI
AUATUSH
 baLI
x8knilt
= baL
= ZYX
icmColorH
antTableH
e: UnknoH
Val_writH
wn Pf
[]A\A]A^A_
icmColorH
antTable
Val_writH
e: Name H
string iH
s untermH
inatf
&E9wL
icmColor
antTablefA
_write fI
seek() oI
r fwriteI
() faileH
icmColorH
antTableH
e: writeH
Val_writH
 of PCS H
coord faH
iled
icmColorA
antTableI
_write gI
et_size I
overflowI
icmColor
failI
antTablefA
_write mA
alloc() A
 baL
1tfm
8baLH
 ZYXu
2tfm
2baL
4baL
 baL
1tfm
8baLH
 ZYXu
2tfm
2baL
4baL
AUATA
]A\A]H
AUATA
]A\A]H
AVAUI
ATUI
]A\A]A^
[]A\A]A^
AVAUATUI
?v=D
|$ L
]A\A]A^
[]A\A]A^
]A\A]A^
ffff.
AVAU1
|$LL
T$PH
D$XH
D$XL
A;l$P
[]A\A]A^
AWAVI
AUATUSH
t$DA
D$HH
:locn
@@Hi
L$0H
T$(D
\$ A
 baL
 ZYX
d$(H
L$ M
D$ L
 ZYX
icmNamed
aileH
ColorValf
2_write:
 write oH
f deviceH
 coord fH
[]A\A]A^A_
icmNamedH
ColorValH
2_write:H
 Root stH
ring namH
es is unH
terminatA
icmNamedH
2_write:H
 UnknownH
ColorValH
 PCS
d$(L
L$ H
2baL
D-&I
A9ZP
t$DH
icmNamedI
Color_wrI
k() or fI
ite fseeI
write() 
failL
icmNamedH
2_write:H
 write oH
ColorValH
ord failH
f PCS coH
icmNamedH
Color_wrH
ite: ColI
or prefiI
x is notH
 null teH
rminatedI
icmNamedH
Color_wrH
ite: ColI
or sufixI
 is not H
null terH
minated
icmNamedH
Color_wrH
ite get_I
size oveI
rflofE
l$HI
t$(H
L$0L
T$(H
\$ H
icmNamedH
ColorValH
_write: I
write ofH
 device H
coord faI
iledA
icmNamedH
ColorValH
_write: I
Root strI
ing nameH
s is untH
erminateA
d$ L
d$ H
A9ZP
icmNamedH
oc() faiH
Color_wrI
ite mallI
icmNamedH
Color_wrH
ite: ColI
or prefiI
x is notH
 null teH
rminatedI
icmNamedH
Color_wrH
ite: ColI
or sufixI
 is not H
null terH
minated
AWAVAUATUSH
icmNamedH
Color_reH
ad: fseeH
k() or fH
read() fA
ailefD
[]A\A]A^A_
icmNamedH
too smalA
Color_reH
ad: Tag 
legaH
l to be fD
icmNamedH
Color_reH
oc() faiH
ad: mallH
2lcn
locn
locn
L$	M
locn
t$4H
L$8L
D$0D
L$ L
L$ L
\$(L
 baL
 ZYX
 ZYX
L$ D
D9]P
ColorValH
icmNamedH
Data tooI
 short tI
2_read: 
o refA
icmNamedH
Color_reH
ad: WronH
g tag tyH
pe for iH
cmNamedCH
olor
icmNamedH
ad: ColoH
r prefixH
Color_reH
 is not H
null terH
minated
icmNamedH
Color_reH
ad: Tag H
too smalH
l to be A
legafD
icmNamedH
ColorValH
Root namI
2_read: I
e stringH
 not terH
minated
icmNamedH
Color_reH
ad: ColoH
r suffixH
icmNamedH
Color_reH
 is not H
ad: ColoH
r prefixH
null terH
minated
2baL
L$ D
icmNamedH
Color_reH
ad: Tag H
too smalH
l to be 
legaf
icmNamedH
ColorValH
not termI
_read: RI
oot nameH
 string 
inatfA
T$(L
L$8L
D$ L
T$(L)
L$8t)
ColorValH
icmNamedH
_read: DI
short toI
ata too 
 reafA
icmNamedH
_read: DH
ata too I
ColorValI
short toH
 read deH
vice cooI
icmNamedH
Color_reH
 too shoH
ad: DataH
rt to reA
icmNamedH
Color_reH
ad: DataH
 too shoH
rt to reA
AUATUSH
?locntN
[]A\A]
[]A\A]
mTHi
[]A\A]
AWAVI
AUATUSH
A9_L
icmXYZArI
ray_writA
e: writeL
_XYZumbeH
r() failI
[]A\A]A^A_
icmXYZArI
iledI
ray_writA
e fseek(L
) or fwrH
ite() fa
icmXYZArA
ray_writ
e get_siI
ze overfI
icmXYZAr
ray_writfA
e malloc
() faileI
AWAVA
AUATUSH
icmViewi
aileI
ngConditfA
ions_wriI
te fseekH
() or fw
rite() fH
icmViewiI
ngConditH
ions: wrD
ite_XYZNH
umber erI
[]A\A]A^A_
icmViewi
ngConditfA
ions_wriA
te mallo
c() failI
icmViewiH
ions_wriA
flowI
ngConditI
ize overH
te get_sI
AVAUA
ATUH
icmMeasuH
rement_wH
rite fseI
ek() or H
fwrite()H
 failed
[]A\A]A^
icmMeasu
aileI
rementa_fA
write, fI
lare: wrH
ite_U16F
ixed16NuH
mber() fI
[]A\A]A^
icmMeasuH
rement_wA
iledI
rite malH
loc() faI
[]A\A]A^
icmMeasu
rement, fA
backing:I
 write_XA
 errI
YZNumberA
]A\A]A^
icmMeasuH
rement_wH
rite getI
_size ovI
erflfA
]A\A]A^
AWAVA
AUATA
gfff
SRu)A
icmHeadeI
fseek() I
r_write H
or fwritI
e() failI
icmHeadeH
r_write:H
 number
 versionI
[]A\A]A^A_
icmHeadeH
 overfloA
r_write I
get_sizeI
icmHeadeH
r_write H
 failed
calloc()I
icmHeadeH
 Uint8NuH
mber minI
r_write:
or/bug fI
icmHeadeA
r_write:I
 DateTimI
eNumber I
creationI
icmHeade
r_write:A
inanI
 XYZNumbfA
er illumI
zZuXf
AWAVAUATI
icc_Lut_
inv_inpuf
t: MalloD
c failurH
e in invH
erse looH
kup initH
[]A\A]A^A_
fffff.
AWAVAUATI
icc_Lut_
inv_inpuf
t: MalloD
c failurH
e in invH
erse looH
kup initH
[]A\A]A^A_
fffff.
AUATUSH
[]A\A]
[]A\A]
icmCurveH
se looku
_lookup:H
 Malloc H
failure H
in reverH
p init.
fffff.
AWAV1
AUATA
t5E1
S D;eTr
t8E1
S D;e`r
S E9
Hw<E9
[]A\A]A^A_
AWAV1
AUATI
T$LH
S D9
Jw=D9
T$PD
[]A\A]A^A_
fffff.
AWAV1
AUATI
U D9
Jw=D9
T$hD
U D9
Jw(I
D$xD
U D9
U A9
U A9
[]A\A]A^A_
~}AWAV1
AUATI
T$ A
T$ H
[]A\A]A^A_
T$ A
T$ E
T$ E
T$ D94$
JwRD9
T$ H
ffffff.
AWAV1
AUATUSH
S E1
S D9<$vy
Hw>D9<$v8J
D9<$w/H
[]A\A]A^A_
S E9
Hw<E9
AWAV1
AUATE1
sJE9
S D;uP
[]A\A]A^A_
AUATI
[]A\A]
[]A\A]
fff.
icc_lookH
p_bwd() 
up: Curv
e->lookuH
fail
ATUH
[]A\H
fffff.
ffff.
ATUI
[]A\
D$0H
ATUI
D$81
L$8dH3
@[]A\
ATUH
ph[]A\
ATUI
[]A\
2baL
4baL
 SCP
 ZYX
8baL
 baL
fff.
2baL
4baL
 SCP
 ZYX
8baL
 baL
AWAVA
AUATA
gfff
ATAUH
dH34%(
[]A\A]A^A_
ffffff.
saem
3dsp
2erp
0dspH
i2spH
s2spH
tlac
1A2B
ZYXbH
2A2BH
CRTbH
grat
ZYXrH
qespH
CRTrH
dnmd
tmagH
CRTgH
ZYXgH
weivH
hcetH
tgcvH
idrcH
csedH
ddmdH
1B2AH
2B2AH
0A2BH
locnH
0erpH
1erpH
1dspH
2dspH
 dfbH
tpkbH
deuvH
tptwH
drcsH
nrcsH
CRTkH
imulH
0B2AH
trpcH
2lcnH
ATUH
92tbH
[]A\
[]A\
98tgH
A91t]I
0B2AH
icc_rena
type
me_tag: 
wrong si
gnature H
for tag H
fff.
90tTH
90tTH
ncsf
ohpr
sgmiH
vargH
tejiH
macd
atseH
busdH
ohpeH
xawtH
ncsrH
klisH
 TRCH
DCPKH
 DMPH
cdivH
mdivH
xelfH
nrpfH
sffoH
vtjpH
 DMAH
~DATUH
[]A\H
 VSH
5HCM
 baL
2  LH
4  Lt
8  L
RLCA
RLCD
RLCCH
 YMCH
KYMCH
 BGRH
   YH
rbCYH
 yxYH
4baLt|~n
8baLtr
 vuLH
RLCFH
YARGH
 SLHH
2baL
RLC5
RLC3H
RLC4H
RLC2H
7HCM
8HCM
 SCPH
RLC7
RLC8
RLC9H
RLC6u
RLCBH
   L
 ZYXH
RLCEH
lcmn
rncsH
capsH
rtrpH
knilH
rtnmH
tsbaH
TFSMH
t]~c
WNUSH
TNGTH
 IGSH
xin*H
LPPAH
AUATI
icmTextDH
escriptiM
on_read:H
 ascii sH
 not terH
tring isH
minated
icmTextDH
o short A
escriptiH
on_read:H
descriptH
 Data toH
to type fD
[]A\A]
icmTextDI
Ascii heH
escriptiH
on_read:
aderH
 Data to
o short 
to read 
[]A\A]
[]A\A]
icmTextDM
 UnicodeH
escripti
on_read:H
 string H
is not tH
erminatef
icmTextDM
o short H
escriptiH
Unicode H
on_read:H
 Data toH
to read H
stri
icmTextDM
escriptiH
on_read:H
 Data toH
o short H
to read H
Ascii stH
ring
icmTextDH
escriptiM
on_read:H
 Data toH
o short H
to read H
ScriptCoH
de heade
icmTextDH
escriptiM
on_read:H
 Data toH
o short H
to read H
Unicode H
icmTextDI
escriptiH
on_read:H
 Data toH
o short H
to read H
ScriptCoH
de strin
icmTextDH
escriptiH
on_read:H
 ScriptCH
ode striH
ng too lH
AWAV1
AUATI
S E;uL
[]A\A]A^A_
AUATUSH
0B2AH
 D9$
[]A\A]
icc_link
_tag: wrf
ong tag 
type forE1
 signatuH
]A\A]
icc_link
_tag: TaE1
g table H
realloc(H
) failedH
fffff.
AUATUSH
0B2AH
trlc
icc_add_
tag: unsf
upportedH
 tag typH
[]A\A]
[]A\A]
[]A\A]
icc_add_
tag: wrof
ng tag t1
ype for H
signaturH
icc_add_
tag: sizfA
e overflA
icc_add_A
tag: TagI
 table rI
ealloc()I
 failed
AWAV1
AUATI
S E;
[]A\A]A^A_
P8E9
ffffff.
 baL
 ZYX
rbCY
 yxY
   Y
 SLH
 VSH
   Lu
 YMC
KYMCu
 vuL
 BGR
gfff
Ascif
locn
23fu
23iuH
tgcvH
weivH
46iuH
csed
idrcH
 ZYXH
 dfbH
Bina
23fsH
qespH
nrcsH
1tfmH
mitdH
saemH
vrucH
atadH
 gisH
txetH
2tfmH
2lcnH
80iuH
61iuH
AWAVAUATUSH
D	"H
~QE1
A]A^A_
D	"H
AWAV
AUATD
T$@H
L$8D
L$ H
|$0H
|$HH
|$pH
|$PH
|$XH
|$`H
|$hH
|$(dH
[]A\A]A^A_
icmSetMuA
ointH
ltiLutTafD
bles Tab
les have
 differeH
nt clutPH
icmSetMuA
tChaH
ltiLutTafD
bles Tab
les have
 differeH
nt outpuH
icmSetMu
ltiLutTafA
bles Tab
les baseI
 icc is I
differenI
icmSetMu
Type
ltiLutTa
bles Tab
les haveH
 differeH
nt Tage H
icmSetMu
Chan
ltiLutTa
bles Tab
les haveH
 differeH
nt inputH
t$ L
t$ L
t$pH
|$  baL
d$HH
D$`H
\$ I
D$ L
d$xL
d$xt6
d$xL
\$pH
|$8H
d$xL
\$pE
D$ L9
l$0L
HcT$
l$ H
t*Hc
icmLut_sH
et_tableA
iledI
s mallocA
 of cubeA
 center 
array faI
icmLut_sA
et_tablefE
s index A
to input
 colorspI
ace funcI
tion looI
kup failI
icmLut_sI
et_tableI
s input I
colorspaI
ce to taI
ble entrI
y functiI
on lookuA
p failedA
icmLut_sI
et_tableI
s table I
entry toI
 output I
colorspaI
ce functI
ion lookA
up failefE
icmLut_sI
et_tableI
s outputI
 colorspI
ace to tI
able entI
ry funct
icmLut_sI
et_tableI
s table I
entry toI
 input cI
olorspacI
e functi
t$`H
<$1tfmH
 baL
icmLut_sA
iledA
et_tableI
s mallocI
 of cubeI
 center I
array faI
T$XH
t$xM
|$HM
\$@E
D$PL
\$ Hc
D$XH
T$0L
T$@E
L;L$`H
l$0D
D$(;
\$(I
\$XL
|$8H
D$PL
\$XH
D$XH
L$0L
D$HD
L$0H
|$pL
|$HM
t$xM
D$HH
icmLut_rA
iledA
ead: malA
loc() fa
?wZA
<$1tfmH
icmLut_sH
et_tableA
s malloc
 of vertI
ex smootI
hing valI
ue arrayI
 failed
D$@E1
icmLut_a
lloc sizfA
e overfl
D$`H
D$@1
D$p9t$H
H;D$Pu
HcD$pL
|$@f
t$xI
L$x1
|$X9
H;D$`
D$(L
t$`H
D$PH
D$@H
D$XA
|$(L
\$xH
D$XH
l$xL
d$x1
d$xD
L$PH
|$(E
D$@9D$
|$(L
t$`L
d$01
\$ L
\$ t*
\$ L
|$8H
\$ L
\$ E
t$ H
icmLut_sH
et_tableA
iledI
s mallocA
 of gridA
 copy fa
t$ 1
t$pAQE
fffff.
D$H1
T$HI
D$HdH3
D$H1
\$HI
D$HdH3
ffffff.
e@fD
U0fD
[0fD
c fA
fffff.
AUATUSH
[]A\A]
[]A\A]
icc_new_
tablI
iccLuMatfA
rix: MatA
rix wasn
't inverI
fffff.
AWAVA
AUATA
|$hH
CRTrH
8vruc
CRTgH
8vruc
CRTbH
8vruc
ZYXrH
8 ZYX
ZYXgH
8 ZYX
ZYXbH
8 ZYX
icc_new_
tablH
iccLuMatf
rix: Mat
rix wasnH
't inverH
[]A\A]A^A_
ffffff.
D$H1
D$HdH3
t$HH
ffff.
fffff.
ffff.
fff.
fffff.
ffff.
AVAUI
ATUM
T$ I
l$@L
[]A\A]A^
w_fA
ffffff.
AWAVI
AUATI
d$0H
l$PL
\$pH
[]A\A]A^A_
\$ L
YT$@
D$P1
YL$`
fff.
wWfA
ATUI
G dH
 baL
 []A\
 baLu
 baL
 baLt*H
 baLu
ATUI
[]A\
ATUI
=2!!
=m9!
ffffff.
AUATI
T$LH
D$PH
A;\$Lr
[]A\A]
fffff.
ATUH
[]A\H
fffff.
ATUH
[]A\1
fff.
= baLtM= ZYXu
 baLtZH
 baLtEH
 ZYXu
fffff.
= baLt>= ZYXu
 baLtKH
 baLtEH
 ZYXu
fffff.
= baLtM= ZYXu
 baLtZH
 baLtEH
 ZYXu
fffff.
= baLt>= ZYXu
 baLtKH
 baLtEH
 ZYXu
fffff.
ATUH
= baL
= ZYXu
 baLtbf
 []A\
 baLu
t4= baL
 ZYX
= baL
AUATI
([]A\A]
AUATI
icc_lookH
p_bwd() 
up: CurvA
e->lookuI
fail
dH3<%(
([]A\A]
= baLtf= ZYXuV
 baLuJ
 baLtDH
 baLt
 ZYXu
ffffff.
ATUI
[]A\
ATUI
 baLt?
ATUI
[]A\
ATUI
ffff.
fffff.
L$ H
fff.
t$0H
t$(H
ffff.
ffff.
ffff.
D$81
|$ H
YD$ 
D$8dH3
D$X1
|$ H
YD$ H
Xd$(
XT$0
D$XdH3
ffffff.
fffff.
AUATI
l$ H
D$81
D$8dH3
H[]A\A]
t$ f
\$ f
AUATI
l$ H
D$81
D$8dH3
H[]A\A]
fffff.
L$(f
D$ fD
D$8f
T$Xf
\$`f
T$Xf
l$@f
AUATI
l$ H
D$81
D$8dH3
H[]A\A]
fffff.
t$@H
t$@H
|$ H
ffff.
tptwSH
8 ZYX
x8knilt
tpkbH
8 ZYX
[]A\
icc_look
 Tag
up: Prof
ile is m
issing MH
edia WhiH
te PointH
[]A\
AWAVE
AUATA
 ZYX
= baL
= BGRt1
=rbCY
= yxY
= ZYX
icc_get_H
nknown eH
luobj: UH
 colorspH
ffectiveH
[]A\A]A^A_
=YARG
= YMC
=KYMC
icc_get_H
luobj: UH
nknown cH
olorspacH
= vuL
=6HCM
= baL
=YARG
= SLH
= VSH
\$ H
= SLHt
= VSH
icc_get_H
luobj: UH
= BGR
=rbCY
= yxY
= ZYX
icc_get_H
luobj: UH
 colorspH
nknown eH
ffectiveH
= YMCt
=KYMC
= vuLt
=6HCM
AWAVAUATA
=lcmn
=knil
=rtnm
=tsba
AUSSA
0A2BH
[]A\A]A^A_
=rncs
=caps
=rtrpus
1erp
icc_get_H
nknown p
lassH
luobj: UH
rofile c
]A\A]A^A_
icc_get_H
luobj: UH
nknown i
ntenH
BDA9
PATQ
icc_get_
luobj: IH
ntent is
 inapproH
priate fH
or NamedH
 Color pH
rofi1
luobj: NH
amed Col
ors not H
handled H
icc_get_H
luobj: IH
naproptiH
ate funcH
tion reqH
uest
]A\A]A^A_
icc_get_H
luobj: UH
nknown iA
nten1
icc_get_H
luobj: IH
ate funcH
naproptiH
tion reqH
AUSSE
0B2AH
icc_get_H
luobj: IH
naproptiH
ate funcH
tion reqH
PATATA
icc_get_H
luobj: IH
ate funcH
naproptiH
tion reqH
0B2AA
AUSD
0B2A
AWSSA
AUSA
AUSA
0A2BA
AUSE
0A2B
AWSQ
AUSA
AUSA
ShYARGE
YARGD
tmagH
icc_get_H
luobj: UH
icc_get_H
luobj: UH
nknown i
ntenH
icc_get_H
luobj: U
nable toH
 locate H
usable cH
onversiof
AUSD
AUSA
AUSQ
AWSQ
AUSD
AUSA
AUSSA
AWSSA
icc_get_H
luobj: IH
ntent isH
 inapproH
or Link H
priate fH
profile
1A2BA
1B2AA
icc_get_H
luobj: UH
0B2AA
0A2BA
icc_get_H
luobj: IH
ntent isH
priate fH
or AbstrH
 inapproH
act profH
1B2A
1A2B
2A2B
2B2A
2B2A
0B2A
2A2B
0A2B
AUSA
AUSSA
AUSA
AUSQ
1A2B
icc_get_H
luobj: IH
ntent isH
 inapproH
priate fH
or previH
ew tableH
0erp
2B2AA
2erp
1B2A
2A2BA
fff.
AWAVAUATI
D$81
[Lc|$
D$8dH3
H[]A\A]A^A_
fffff.
ffffff.
ffffff.
ffffff.
ffffff.
AUATI
D$(1
YL$ 
D$(dH3
8[]A\A]
ATUH
D$H1
T$81
L$@v$
YL$ 
D$HdH3
P[]A\
ffffff.
AWAVI
AUATI
[]A\A]A^A_
icc_checH
eek() orA
k_id: fsI
 failed
 fread()I
icc_checH
k_id: NoH
defined
 header H
icc_checH
k_id: neH
 failed
w_icmMD5I
icc_checH
k_id: frA
iledI
ead() faI
AWAVI
AUATUSH
D$(1
rncs
9,$t
= SCP
= SCP
= baL
= ZYX
 L;@
icc_writA
e: corrufE
pted lin
\$(dH3
8[]A\A]A^A_
= baL
= ZYX
icc_writA
e get_si
ze overfI
icc_writ
e: size I
overflowA
icc_writA
mentA
e: InterI
nal erroI
r - NULLI
 tag eleI
icc_writA
e: seek(I
) or wriI
te() faiI
icc_writA
inedA
e: No heA
ader def
icc_writ
e callocfA
() faile
T$8H
icc_writA
iledA
e: new_iI
cmMD5 faI
icc_chec
k_legal:fA
 Header A
is missiI
icc_writA
e: new_iI
cmFileMDI
5 failedI
D$ E1
icc_writ
e: writefA
() faile
icc_writA
e: writefE
() faileI
icc_writA
e flush(I
) failedI
icc_writA
e flush(I
) failedI
TFSMH
[]A\
AVAUATUS
[]A\A]A^
AVAUATUS
[]A\A]A^
AVAUATUS
[]A\A]A^
AWAVH
AUATUSH
dH34%(
([]A\A]A^A_
Lut8:
Lut16:
  Input Channels = %u
  Output Channels = %u
  CLUT resolution = %u
  Input Table entries = %u
  Output Table entries = %u
  XYZ matrix =  %f, %f, %f
                %f, %f, %f
  Input table:
  CLUT table:
    %3u: 
 %1.10f
 %2u
  Output table:
NamedColor:
NamedColor2:
  Vendor Flag = 0x%x
  No. colors  = %u
  No. dev. coords = %u
  Name prefix = '%s'
  Name suffix = '%s'
    Color %lu:
      Name root = '%s'
      XYZ = %f, %f, %f
      Lab = %f, %f, %f
      Unexpected PCS
      Device Coords = 
ColorantTable:
  No. colorants  = %u
    Colorant %lu:
      Name = '%s'
VideoCardGammaTable:
  channels  = %d
  entries   = %d
  entrysize = %d
  channel #%d
    %d: %d
VideoCardGammaFormula:
  red gamma   = %f
  red min     = %f
  red max     = %f
  green gamma = %f
  green min   = %f
  green max   = %f
  blue gamma  = %f
  blue min    = %f
  blue max    = %f
  Unknown tag format
%d %s %4d, %d:%02d:%02d
Unknown
0/45 or 45/0
0/d or d/0
Unrecognized - 0x%x
Relative Colorimetric
Absolute Colorimetric
Absolute Perceptual
Absolute Saturation
Default Intent
Printer Default
Round
Diamond
Ellipse
Line
Square
Cross
1931 Two Degrees
1964 Ten Degrees
Equi-Power(E)
UInt8Array:
  No. elements = %lu
    %lu:  %u
UInt16Array:
UInt32Array:
UInt64Array:
    %lu:  h=%lu, l=%lu
U16Fixed16Array:
    %lu:  %f
S15Fixed16Array:
Curve:
  Curve is linear
  Curve is gamma of %f
    %3lu:  %f
DateTimeNumber:
  Date = %s
Screening:
  Flags = %s
  No. channels = %u
    %lu:
      Frequency:  %f
      Angle:      %f
      Spot shape: %s
  UCR: Not specified
  UCR: %f%%
  BG: Not specified
  BG: %f%%
  BG curve no. elements = %u
  Description:
    No. chars = %lu
\%03o
      0x%04lx: 
Text:
TextDescription:
  No ASCII data
%04x 
  No Unicode data
%02x 
  No ScriptCode data
Data:
  ASCII data
  Binary data
  Undefined data
 %c 
  Product name:
  CRD%ld name:
Unknown:
  Payload size in bytes = %u
            
%c  
    ...
Viewing Conditions:
%f, %f, %f
  Illuminant type = %s
'%c%c%c%c'
Blue Colorant
Blue Tone Reproduction Curve
Calibration Date & Time
Characterization Target
Copyright
CRD Info
Device Model Description
Gamut
Gray Tone Reproduction Curve
Green Colorant
Green Tone Reproduction Curve
Luminance
Measurement
Media Black Point
Media White Point
Named Color
Named Color 2
Preview0
Preview1
Preview2
Profile Description
Profile Sequence
PS Level 2 CRD perceptual
PS Level 2 CRD colorimetric
PS Level 2 CRD saturation
PS Level 2 CRD absolute
PS Level 2 color space array
PS Level 2 Rendering Intent
Red Colorant
Red Tone Reproduction Curve
Screening Description
Screening Attributes
Device Technology
Video Card Gamma Curve
Viewing Condition Description
Viewing Condition Paramaters
Unrecognized - %s
Digital Camera
Film Acquisition device
Reflective Acquisition device
InkJet Printer
Thermal WaxPrinter
Electrophotographic Printer
Electrostatic Printer
DyeSublimation Printer
Photographic Paper Printer
Film Writer
Video Monitor
Video Camera
Projection Television
Cathode Ray Tube Display
Passive Matrix Display
Active Matrix Display
Photo CD
Photo ImageSetter
Gravure
Offset Lithography
Silkscreen
Flexography
Signature
  Technology = %s
YCbCr
Gray
CMYK
6 Color
7 Color
8 Color
9 Color
10 Color
11 Color
12 Color
13 Color
14 Color
15 Color
Input
Output
Link
Abstract
Color Space
Macintosh
Microsoft
Solaris
Taligent
*nix
ProfileSequenceDesc:
  No. elements = %u
DescStruct %u:
  Dev. Mnfctr.    = %s
  Dev. Model      = %s
  Dev. Attrbts    = %s
  Dev. Technology = %s
icc:
tag %d:
  sig      %s
  type     %s
  offset   %d
  size     %d
Unable to read: %d, %s
CIE X
CIE Y
CIE Z
CIE L*
CIE a*
CIE b*
CIE u*
CIE v*
ITU Y
ITU Cb
ITU Cr
CIE x
CIE y
RGB Hue
RGB Saturation
RGB Value
RGB Lightness
Cyan
Magenta
Yellow
Green
Blue
Black
Data
Backward
MonoBwd
enum2str got unknown type
MonoFwd
MatrixBwd
MatrixFwd
Forward
Preview
XYZ (Array?)
Viewing Conditions
Video Card Gamma
UInt8 Array
UInt64 Array
UInt32 Array
UInt16 Array
U16Fixed16 Array
Text Description
Text
Signature
Screening
S15Fixed16 Array
Profile Sequence Desc
Lut8
Lut16
DateTime
Unrecognized - %d
KCMS
XYZArray:
    %lu:  %s
Measurement:
  Standard Observer = %s
  Measurement Geometry = %s
  Standard Illuminant = %s
Header:
  size         = %d bytes
  CMM          = %s
  Version      = %d.%d.%d
  Device Class = %s
  Color Space  = %s
  Conn. Space  = %s
  Date, Time   = %s
  Platform     = %s
  Flags        = %s
  Dev. Mnfctr. = %s
  Dev. Model   = %s
  Dev. Attrbts = %s
  Rndrng Intnt = %s
  Illuminant   = %s
  Creator      = %s
  ID           = <Not set>
argl
  !!Can't dump > %d input channel CLUT table!!
icmCurve_write: write_U8Fixed8umber(%f) failed
icmCurve_write: write_UInt16umber(%f) failed
icmData_read: Unknown flag value 0x%x
icmLut_alloc: Can't handle %d input channels
icmLut_alloc: Can't handle > %d input channels
icmLut_alloc: Can't handle > %d output channels
icmColorantTable_alloc: count overflow (%d of %lu bytes)
icmUcrBg_write: write_DCS16umber(%f) failed
icmCrdInfo_read: Data too short to read CRD%d name
icmCrdInfo_read: Data to short to read CRD%d string
icmCrdInfo_read: CRD%d name is not terminated
icmCrdInfo_write: CRD%d name is not terminated
icmCrdInfo_alloc: malloc() of CRD%d name string failed
icmHeader_read: wrong magic number 0x%x
icmHeader_read: file size %d too small to be legal
icc_read_tag_ix: index %d is out of range
icmVideoCardGamma_write: write_S15Fixed16Number() failed
icmLut_write: inputTable write_DCS16Number(%f) failed
icmLut_write: clutTable write_DCS16Number(%f) failed
icmLut_write: outputTable write_DCS16Number(%f) failed
icc_set_version: Unsupported version 0x%x
icc_read: tag count %d is too large to be legal
icc_read: tag %d is out of range of the nominated file size
icc_read: fseek() or fread() failed on tag headers
icmColorantTable_read count overflow, count %x, len %d
icmNamedColor_read: Can't handle more than %d device channels
Undercolor Removal Curve & Black Generation:
  UCR curve no. elements = %u
  ASCII data, length %lu chars:
  Unicode Data, Language code 0x%x, length %lu chars
  ScriptCode Data, Code 0x%x, length %lu chars
PostScript Product name and CRD names:
  XYZ value of illuminant in cd/m^2 = %s
  XYZ value of surround in cd/m^2   = %s
AToB0 Multidimentional Transform
AToB1 Multidimentional Transform
AToB2 Multidimentional Transform
BToA0 Multidimentional Transform
BToA1 Multidimentional Transform
BToA2 Multidimentional Transform
Device Manufacturer Description
Under Color Removal & Black Generation
icc_delete_tag: Tag '%s' not found
icc_unread_tag: Tag '%s' not found
icc_rename_tag: Tag '%s' not found
icc_read_tag: Tag '%s' not found
icmTextDescription_read: Wrong tag type ('%s') for icmTextDescription
icc_link_tag: Can't find existing tag '%s'
icc_link_tag: Existing tag '%s' isn't loaded
icc_link_tag: Already have tag '%s' in profile
icc_add_tag: Already have tag '%s' in profile
icc_unread_tag_ix: index %d is out of range
icc_unread_tag: Tag '%s' not currently loaded
icmSetMultiLutTables has illegal number of tables %d
%f, %f, %f    [Lab %f, %f, %f]
  XYZ for Measurement Backing = %s
  Measurement Flare = %5.1f%%
  ID           = %02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X
icc_get_luobj: Unknown intent (0x%x)
icc_check_legal: deviceClass %s is missing required tag %s
icc_write compute ID failed with code %d
 ZYX
8baL
_@2baL
_@4baL
_@   Y
8  L
2  L
4  L
 vuL
_@rbCY
? yxY
 BGR
YARG
 VSH
 SLH
KYMC
 YMC
6HCM
RLC2
RLC3
RLC4
RLC5
RLC6
RLC7
RLC8
5HCM
6HCM
7HCM
8HCM
RLC9
RLCA
RLCB
RLCC
RLCD
RLCE
RLCF
rncs
 SCPcsedCRTktptwtrpc
rncs
 ZYXcsedZYXrZYXgZYXbCRTrCRTgCRTbtptwtrpc
rncs
 SCPcsed0B2Atptwtrpc
rtnm
 SCPcsedCRTktptwtrpc
rtnm
 BGR ZYXcsedZYXrZYXgZYXbCRTrCRTgCRTbtptwtrpc
rtnm
 SCPcsed0B2Atptwtrpc
rtrp
 SCPcsedCRTktptwtrpc
rtrp
 SCPcsed0B2A0A2Btmag1B2A1A2B2B2A2A2Btptwtrpc
rtrp
 SCPcsed0B2A0A2Btmag1B2A1A2B2B2A2A2Btptwtrpc
rtrp
 SCPcsed0B2A0A2Btmag1B2A1A2B2B2A2A2Btptwtrpc
rtrp
 SCPcsed0B2A0A2Btmag1B2A1A2B2B2A2A2Btptwtrpc
rtrp
 SCPcsed0A2B1A2B2A2Btptwtrpc
knil
csed0B2Aqesptrpc
caps
 SCPcsed0A2B0B2Atptwtrpc
tsba
 SCP SCPcsed0B2Atptwtrpc
lcmn8
csed2lcntptwtrpc
lcmn
csedlocntptwtrpc
0B2A1tfm2tfm
1B2A1tfm2tfm
2B2A1tfm2tfm
ZYXb ZYX
CRTbvruc
0A2B1tfm2tfm
1A2B1tfm2tfm
2A2B1tfm2tfm
tlacmitd
grattxet
trlctrlcclrt
tolctrlcclrt
trpctxet
idrcidrc
dnmdcsed
ddmdcsed
tmag1tfm2tfm
CRTkvruc
ZYXg ZYX
CRTgvruc
imul ZYX
saemsaem
tpkb ZYX
tptw ZYX
locnlocn
2lcn2lcn
0erp1tfm2tfm
1erp1tfm2tfm
2erp1tfm2tfm
csedcsed
qespqesp
0dspatad
1dspatad
2dspatad
3dspatad
s2spatad
i2spatad
ZYXr ZYX
CRTrvruc
drcscsed
nrcsnrcs
hcet gis
 dfb dfb
tgcvtgcv
deuvcsed
weivweiv
2Az2j
=8#]
?UUUUUU
(@^Cy
?j)o3T
8(W4
?[G'
-W?6
?U0*
?etu
@$(~
?Y6sHj
;*3$"
 ZYX
   Y
8baL
2baL
4baL
8  L
2  L
4  L
 vuL
rbCY
 yxY
 BGR
YARG
 VSH
 SLH
KYMC
 YMC
6HCM
RLC2
RLC3
RLC4
RLC5
RLC6
RLC7
5HCM
6HCM
7HCM
8HCM
RLC8
RLC9
RLCA
RLCB
RLCC
RLCD
RLCE
RLCF
trlc
clrt
idrc
vruc
atad
mitd
2tfm
1tfm
saem
locn
2lcn
qesp
23fs
nrcs
 gis
csed
txet
23fu
 dfb
tgcv
61iu
23iu
46iu
80iu
weiv
 ZYX
33333
33333
?libargyllicc.so.0.0.0.debug
7zXZ
ab7;
7G+-
W}H,
U}N~
|v 9
V8}T
,AC!7
sVLB
]2RN
dw'MXb
vARZ
O7p]
N>"XF
l9*$
XAJ.
Ys9WPI~
b_,	
ny1C
/	~.JA
ww /
n+?N
^5ka
U"V>
EAsk|R&DY
9HoZJE
T6\9z
6g]*
4#e"2CK
l;-L
;!iB
e_Di
em_JO
u5s&}
eMx3
TPo{
*bF^
O7`?
oLsM
ASjD
8g+a5
LW@~
=/@0E
G\S/<noN
UgB[(
{;W{
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
