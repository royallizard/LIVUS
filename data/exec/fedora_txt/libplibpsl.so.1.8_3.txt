F01PA8
 03D
bB .
+U7iD
xgS<
5]hW~
	TRu
h_=<
	C%T|
^	IU4k
$l7Z
PAj7A 
E;+Z
ZDl\
qhvl
7R.q
UPr1
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
_Z7pslInitv
_pslInitialised
_Z13pslScriptPathPKc
_ZdaPv
_Z8ulStrDupPKc
_Z18_pslMakeScriptPathPcPKc
_Z20ulIsAbsolutePathNamePKc
strcpy
stpcpy
_ZN11pslCompiler11genCodeByteEh
_ZN11pslCompiler5errorEPKcz
_ZN11pslCompiler11genCodeAddrEt
_ZN11pslCompiler13genLineNumberEi
_ZN11pslCompiler15genCharConstantEc
_ZN11pslCompiler17genStringConstantEPKc
_ZN11pslCompiler14genIntConstantEi
_ZN11pslCompiler14genIntConstantEPKc
strtol
_ZN11pslCompiler16genFloatConstantEPKc
strtod
_ZN11pslCompiler11genConstantEPKc
_ZN11pslCompiler15genGetParameterEti
_ZN11pslCompiler15genMakeIntArrayEPKc
_ZN11pslCompiler12getVarSymbolEPKc
_ZN11pslCompiler17genMakeFloatArrayEPKc
_ZN11pslCompiler18genMakeStringArrayEPKc
_ZN11pslCompiler18genMakeIntVariableEPKc
_ZN11pslCompiler20genMakeFloatVariableEPKc
_ZN11pslCompiler21genMakeStringVariableEPKc
_ZN11pslCompiler11genVariableEPKci
_ZN11pslCompiler8genFetchEv
_ZN11pslCompiler17genIncrementFetchEv
_ZN11pslCompiler17genDecrementFetchEv
_ZN11pslCompiler18genIncrementLValueEv
_ZN11pslCompiler18genDecrementLValueEv
_ZN11pslCompiler13genAssignmentEv
_ZN11pslCompiler16genAddAssignmentEv
_ZN11pslCompiler16genSubAssignmentEv
_ZN11pslCompiler16genMulAssignmentEv
_ZN11pslCompiler16genModAssignmentEv
_ZN11pslCompiler16genDivAssignmentEv
_ZN11pslCompiler16genAndAssignmentEv
_ZN11pslCompiler15genOrAssignmentEv
_ZN11pslCompiler16genXorAssignmentEv
_ZN11pslCompiler16genSHLAssignmentEv
_ZN11pslCompiler16genSHRAssignmentEv
_ZN11pslCompiler7genCallEPKci
_ZNK11pslCompiler18getExtensionSymbolEPKc
_ZN11pslCompiler13getCodeSymbolEPKct
_ZN11pslCompiler11genExchangeEv
_ZN11pslCompiler9genReturnEv
_ZN11pslCompiler6genPopEv
_ZN11pslCompiler11genSubtractEv
_ZN11pslCompiler6genAddEv
_ZN11pslCompiler9genDivideEv
_ZN11pslCompiler11genMultiplyEv
_ZN11pslCompiler9genModuloEv
_ZN11pslCompiler9genNegateEv
_ZN11pslCompiler6genNotEv
_ZN11pslCompiler10genTwiddleEv
_ZN11pslCompiler7genOrOrEv
_ZN11pslCompiler9genAndAndEv
_ZN11pslCompiler5genOrEv
_ZN11pslCompiler6genAndEv
_ZN11pslCompiler6genXorEv
_ZN11pslCompiler12genShiftLeftEv
_ZN11pslCompiler13genShiftRightEv
_ZN11pslCompiler7genLessEv
_ZN11pslCompiler12genLessEqualEv
_ZN11pslCompiler10genGreaterEv
_ZN11pslCompiler15genGreaterEqualEv
_ZN11pslCompiler11genNotEqualEv
_ZN11pslCompiler8genEqualEv
_ZN11pslCompiler11genStackDupEv
_ZN11pslCompiler17genPeekJumpIfTrueEi
_ZN11pslCompiler18genPeekJumpIfFalseEi
_ZN11pslCompiler13genJumpIfTrueEi
_ZN11pslCompiler14genJumpIfFalseEi
_ZN11pslCompiler7genJumpEi
_ZN11pslCompiler17genPauseStatementEv
_ZN9pslNumberD2Ev
_ZTV9pslNumber
_ZN9pslNumberD1Ev
_ZN11pslVariableD2Ev
_ZN11pslVariableD1Ev
_ZN11pslVariable3setEi
_ZN11pslVariable3setEf
_ZN11pslVariable3setEii
_ZN11pslVariable3setEfi
_ZN11pslVariable3setEPKci
_ZN11pslVariable3setEPK9pslNumberi
_ZN8pslValueD2Ev
_ZN8pslValueD1Ev
_ZN8pslValue3setEv
_ZN8pslValue3setEi
_ZN8pslValue3setEf
_ZN9pslNumberD0Ev
_ZdlPv
_ZN11pslVariableD0Ev
_ZN8pslValueD0Ev
_ZN11pslVariable3setEPKc
_ZN8pslValue3setEPKc
_ZN11pslVariable3setEPK9pslNumber
_ZN8pslValue3setEPK9pslNumber
_ZN10pslContext10peekLValueEv
_ZN10pslContext9popLValueEv
_ZN10pslContext4stepEv
_ZN10pslContext7warningEPKcz
_ZTV8pslValue
strlen
_Znam
memcpy
_ZTV11pslVariable
_ZN10pslContext5errorEPKcz
_Unwind_Resume
__gxx_personality_v0
_ZNK10pslContext10printStackEP8_IO_FILE
__fprintf_chk
fwrite
fputc
stderr
_ZTI9pslNumber
_ZTVN10__cxxabiv117__class_type_infoE
_ZTS9pslNumber
_ZTI11pslVariable
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTS11pslVariable
_ZTI8pslValue
_ZTS8pslValue
__cxa_pure_virtual
_ZN11pslCompiler7cleanupEv
getenv
_Z10ulStrEqualPKcS0_
_ZNK11pslCompiler4dumpEv
_ZN11pslCompiler18genReturnStatementEv
_ZN11pslCompiler8getTokenEPci
_ZN11pslCompiler10ungetTokenEPKc
_ZN11pslCompiler13genExpressionEv
__stack_chk_fail
_ZN11pslCompiler16pushBreakToLabelEv
_ZN11pslCompiler14pushNoContinueEv
_ZN11pslCompiler19pushContinueToLabelEv
_ZN11pslCompiler18setContinueToLabelEi
__sprintf_chk
_ZN11pslCompiler13setCodeSymbolEPKct
_ZN11pslCompiler15popBreakToLabelEv
_ZN11pslCompiler18popContinueToLabelEv
_ZN11pslCompiler17genBreakStatementEv
_ZN11pslCompiler20genContinueStatementEv
_ZN11pslCompiler15genFunctionCallEPKc
_ZN11pslCompiler15genLocalVarDeclE7pslType
_ZN11pslCompiler12setVarSymbolEPKc
_ZN11pslCompiler16genStaticVarDeclEv
_ZN11pslCompiler12genStatementEv
_Z13_pslGetLineNov
_ZN11pslCompiler14genIfStatementEv
_ZN11pslCompiler15genForStatementEv
_ZN11pslCompiler19genDoWhileStatementEv
_ZN11pslCompiler18genSwitchStatementEv
_ZN11pslCompiler17genWhileStatementEv
_ZN11pslCompiler20genCompoundStatementEv
_ZN11pslCompiler7warningEPKcz
_ZN11pslCompiler16genGlobalVarDeclEPKc7pslType
_ZN11pslCompiler22genFunctionDeclarationEPKc
_ZN11pslCompiler20genGlobalDeclarationEv
_ZN11pslCompiler10genProgramEv
_ZN11pslCompiler22checkUnresolvedSymbolsEv
_ZN11pslCompiler7compileEPKcS1_
_Z19_pslPushDefaultFilePKcS0_
_Z18_pslPopDefaultFilev
_ZN11pslCompiler7compileEP8_IO_FILEPKc
_Z19_pslPushDefaultFileP8_IO_FILEPKc
_ZN11pslCompiler7compileEPKc
fopen
perror
_Z10ulSetError10ulSeverityPKcz
strcmp
_ZN11pslCompiler9addFwdRefEPKct
_ZN11pslCompiler5fixupEPKct
_ZNK11pslCompiler13searchDefinesEPKc
__ctype_b_loc
_ZN11pslCompiler7getCharEv
_Z13_pslUnGetChari
_ZN11pslCompiler18doIncludeStatementEv
_ZN11pslCompiler9skipToEOLEv
_Z19_pslPushDefaultFilePKc
_ZN11pslCompiler21doPreProcessorCommandEv
_ZN11pslCompiler16doUndefStatementEv
_ZN11pslCompiler17doDefineStatementEv
_ZN11pslCompiler17doIfndefStatementEv
_ZN11pslCompiler15doElseStatementEv
_ZN11pslCompiler16doIfdefStatementEv
_ZN11pslCompiler16doEndifStatementEv
_Z11_pslGetCharv
exit
_ZN11pslCompiler17genBoolExpressionEv
_ZN11pslCompiler9genLValueEv
_ZN11pslCompiler12genPrimitiveEv
_ZN11pslCompiler17genMultExpressionEv
_ZN11pslCompiler16genAddExpressionEv
_ZN11pslCompiler18genShiftExpressionEv
_ZN11pslCompiler20genBitwiseExpressionEv
_ZN11pslCompiler16genRelExpressionEv
_ZN10pslProgramC2EPK12pslExtensionPKc
_Znwm
_ZN10pslProgramC1EPK12pslExtensionPKc
_ZN10pslProgramC2EPS_PKc
_ZN10pslProgramC1EPS_PKc
_ZN10pslProgramD2Ev
_ZN10pslProgramD1Ev
_ZNK10pslProgram4dumpEv
_ZN10pslProgram5resetEv
_ZN10pslProgram4stepEv
stdout
_ZNK11pslCompiler16printInstructionEP8_IO_FILEi
fflush
_ZN10pslProgram5traceEv
_ZN10pslProgram7compileEPKcS1_
_ZN10pslProgram7compileEPKc
_ZN10pslProgram7compileEP8_IO_FILE
_ZNK11pslCompiler11printOpcodeEP8_IO_FILEi
putchar
puts
__printf_chk
_Z19pslSetErrorCallbackPFvP10pslProgramiPKciS2_E
_pslErrorCB
__vsprintf_chk
_Z12_pslGetFnamev
fclose
_IO_getc
libplibul.so.1.8.5
libgcc_s.so.1
libc.so.6
_edata
__bss_start
_end
libplibpsl.so.1.8.5
GCC_3.0
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.14
GLIBC_2.4
GLIBC_2.2.5
%z	!
%r	!
%j	!
%b	!
%Z	!
%R	!
%J	!
%B	!
%:	!
%2	!
%*	!
%"	!
fffff.
t/<.t5
<Ft.H
[]A\
fffff.
fff.
fff.
fff.
fff.
fff.
fff.
[]A\
[]A\A]
9h(~
9h(~
AWAVAUATUSH
[]A\A]A^A_
4$D!
4$D!
G L9
G(E1
A;o(|
G L9
G(E1
A;o(|
G L9
G(E1
A;o(|
L$8L
t$0H
,$Ic
,$Ic
,$Ic
[]A\A]
;o(|2H
]A\H
;o(|@H
;o(|2H
]A\H
;o(|2H
]A\H
<$;H
fff.
fff.
ATUSH
<$(t<H
[]A\A]
<$)u!
<,ud
<$)t/H
$<)u
ATUSH
[]A\A]
AWAVAUATUSH
<${H
[]A\A]A^A_
<$;t
<$:t
ATUSH
[]A\
AWAVAUATUH
[]A\A]A^A_
}HHc
}HHc
}Rf.
ATUSH
[]A\
fff.
ATUSH
<$;tsH
[]A\
fff.
AUATUSH
[]A\A]
}Qf.
ATUH
<$[I
<$;tMH
[]A\A]
fffff.
AVAUATUSH
(tAH
[]A\A]A^A_
t[<)tW
fffff.
ATUH
<;t{H
[]A\A]
[]A\A]A^A_
[]A\A]A^A_
[]A\
AWAVI
ATUSH
[]A\A]A^A_
[]A\A]A^A_
t8Hc
[]A\A]
[]A\A]
[]A\
fffff.
ATUSLc
[]A\
[]A\H
[]A\A]A^A_
[]A\
AUATI
[]A\A]A^A_
[]A\A]A^A_
AVAUI
ATUH
[]A\A]A^A_H
[]A\A]A^A
ATUH
[]A\A]
[]A\A]
AWAVAUI
ATUSH
[]A\A]A^A_
.u:Ic
[]A\A]A^A_H
\t,A
<<uwH
[]A\
fffff.
fff.
vC<_t?H
fff.
ATUH
vG<_tCH
[]A\A]
fffff.
=]u 
[urH
[]A\
fff.
AUATI
[]A\A]A^
fff.
[]A\A]
fff.
[]A\A]
fff.
[]A\A]
fff.
[]A\A]
fff.
AUATI
[]A\A]
dH34%(
AVAUATUSH
\,HH
\$0A
([]A\A]A^A_
L9|$
L9l$
ATUSH
l4HI
\,HH
[]A\A]A^
AVAUI
ATUSH
[]A\A]A^
fffff.
\$0f
[]A\
-gU 
fff.
AULc
[]A\A]A^A_
[]A\A]A^A_
AUATA
=wDA
[]A\A]
- P 
[]A\
[]A\
[]A\
ATUSH
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
=OT!
[]A\
ATUSH
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
[]A\
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
H(x<H
fff.
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
H(x<H
[]A\
-!H 
[]A\
ffff.
[]A\
-!G 
[]A\
ffff.
-8P!
fff.
Program too big!
Suspicious opcode 0x00?!
Integer Divide by Zero!
Integer Modulo Zero!
Integer Modulo by Zero!
Floating Point Modulo!
Suspicious opcode 0x02x?!
STACK [%d deep] : 
%gf 
'%s' 
<void> 
Wrong number of parameters for function %s
Floating Point Divide by Zero!
9pslNumber
11pslVariable
8pslValue
PSL_DUMP
on_error
always
Missing '(' in call to '%s'
static
string
float
return
break
continue
pause
switch
while
case
default
Missing '{' after 'switch'
Missing ':' after 'default'.
Missing semicolon.
Too many nested {}'s
Locality stack underflow !!
Missing '(' for 'for' loop
Missing initialiser for 'if'
Missing test for 'for' loop
Missing statement for 'while'
Missing expression for 'if'
Missing statement for 'if'
else
Missing statement for 'else'
Missing '{' in function '%s'
Missing '}' in function '%s'
extern
void
main
PSL:
PSL: '%s' Compiled with %d Warnings, %d Fatal Errors
Too many nested 'break' contexts
Too many nested 'continue' contexts
'break' statement is not inside a 'switch' or a loop.
'continue' statement is not inside a loop.
'continue' statement not allowed inside a 'switch'.
Missing ')' or ',' in call to '%s'
Missing ']' after array declaration
Static Local Variables are Not Supported Yet.
'%s' encountered - not inside 'switch' statement
Missing control expression for 'switch'
Missing expression after 'case'.
Missing ':' after 'case' expression.
Missing statement within switch.
Missing statement for 'do/while'
Missing 'while' for 'do/while'
Missing expression for 'while' in a 'do/while'
Missing ';' after 'for' loop initialisation
Missing ';' after 'for' loop test
Too many tokens in 'increment' part of 'for' loop
Missing action body for 'for' loop
Missing 'increment' part of 'for' loop
Missing expression for 'while'
Missing ';' or 'else' after 'if' statement
Unexpected '%s' in Compound statement
Missing ';' after declaration of '%s'
Missing '(' in declaration of '%s'
Missing ')' in declaration of '%s'
Missing ',' or ')' in declaration of '%s'
Expected declaration - but got '%s'
Expected a declaration - but got '%s'
PSL: Failed while opening '%s' for reading.
Multiple definition of '%s'.
Too many variables.
Undefined symbol '%s'.
'%s' does not exist.
Too many labels.
Too many unresolved forward references.
Input string is bigger than %d characters!
Illegal character after '#include'
Unrecognised preprocessor directive '%s'
#undef token is not a legal identifier
Too many levels of #ifdef/#ifndef processing.
#else without prior matching #ifdef/#ifndef.
#endif without prior matching #ifdef/#ifndef.
#define token is not a legal identifier
Too many ungetTokens! This must be an *UGLY* PSL program!
Missing \' character
Missing \" character
include
undef
define
ifndef
ifdef
endif
Attempt to re-#define %s
Too many #define's
Missing expression after '('
Missing ')' (found '%s')
Illegal expression.
Missing expression for array index.
Missing ']' after array index.
Structures are not supported yet.
Missing expression following '&&' or '||'
PSLprogram
PSL_TRACE
PSL_STACK
PSL: You didn't call pslInit() before using PSL functions.
**BAD_INSTRUCTION**
%3d: 0x%02x 
     
%d =====================
		[%d]
		[%d],off=%d
	"%s"
			%s,nargs=%d
			%d,nargs=%d
			%d
Bytecode:
Global Variables:
	%5s => %4d
Functions:
PROGRAM COMPILED OK
SOURCE LINE NUMBER:
PUSH_INT_CONSTANT
PUSH_FLOAT_CONSTANT
PUSH_STRING_CONSTANT
PUSH_VARIABLE
STACK_DUPLICATE
POP_VARIABLE
INCREMENT_FETCH
DECREMENT_FETCH
INCREMENT_LVALUE
DECREMENT_LVALUE
SET_INT_ARRAY
SET_FLOAT_ARRAY
SET_STRING_ARRAY
SET_INT_VARIABLE
SET_FLOAT_VARIABLE
SET_STRING_VARIABLE
GET_PARAMETER
CALLEXT
CALL
RETURN
PEEK_JUMP_FALSE
PEEK_JUMP_TRUE
JUMP
PAUSE
HALT
MULT
EXCHG
TWIDDLE
OROR
ANDAND
SHIFT_LEFT
SHIFT_RIGHT
LESS
LESSEQUAL
GREATER
GREATEREQUAL
NOTEQUAL
POP_ADD_VARIABLE
POP_SUB_VARIABLE
POP_MUL_VARIABLE
POP_MOD_VARIABLE
POP_DIV_VARIABLE
POP_AND_VARIABLE
POP_OR_VARIABLE
POP_XOR_VARIABLE
POP_SHL_VARIABLE
POP_SHR_VARIABLE
**** UNRECOGNISED OPCODE **** 
PROGRAM FAILED TO COMPILE WITH %d WARNINGS AND %d ERRORS
PROGRAM COMPILED WITH %d WARNINGS
PSL: "%s" line %3d: WARNING - %s
PSL: "%s" line %3d: *ERROR* - %s
PSL: "%s" Line %d: WARNING - %s
PSL: "%s" Line %d: *ERROR* - %s
PSL: "%s": WARNING - %s
PSL: "%s": *ERROR* - %s
PSL: ERROR - #include stack underflow?!?
PSL: ERROR - Too many nested #includes
PSL: ERROR - Too many ungotten characters?!?
PSL: ERROR - Can't open #include'ed file '%s'
;*3$"
zPLR
libplibpsl.so.1.8.5.debug
7zXZ
+T`(f
:7/7
	)p 1jY*
+X9>
9{S	6i
UWm2
9~xuQ
H">O
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
