__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
passphrase_transition
ecryptfs_passphrase_ops
passphrase_get_key_mod_ops
__asprintf_chk
__syslog_chk
stack_push
stack_pop_val
malloc
from_hex
ecryptfs_add_passphrase_key_to_keyring
free
__stack_chk_fail
open
parse_options_file
close
strtol
free_name_val_pairs
__errno_location
passphrase_param_nodes
libdl.so.2
libc.so.6
_edata
__bss_start
_end
libecryptfs_key_mod_passphrase.so
GLIBC_2.4
GLIBC_2.8
GLIBC_2.2.5
ATSubH
ffff.
ffff.
fffff.
vXdH
D$(1
d$ H
T$(dH3
\$0H
l$8L
d$@H
ATUSH
[]A\A]A^
passphrase
Out of memory
ecryptfs_sig=%s
passphrase_passwd_file
passphrase_passwd_fd
passphrase_passwd
passphrase_type
Provide passphrase directly
Passphrase
passphrase_salt
default
passfile
Passphrase File
passfd
Passphrase File Discriptor
0011223344556677
%s: Error whilst attempting to open [%s]; errno = [%m]
%s: Invalid file descriptor qualifier
%s: Error parsing file for passwd; rc = [%d]
%s: Cannot find [passwd] directive
Method for providing the passphrase
File containing passphrase (only use secure media)
File descriptor for file containing passphrase
Salt (hexadecimal representation)
tf_pass_file
libecryptfs_key_mod_passphrase.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
