__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
ast_module_unregister
strstr
__snprintf_chk
fopen
MD5Init
feof
fgets
MD5Update
MD5Final
strcasecmp
rewind
PEM_read_RSAPrivateKey
fclose
RSA_size
option_verbose
__ast_verbose
option_debug
ast_options
ast_log
stderr
ERR_print_errors_fp
PEM_read_RSA_PUBKEY
ast_verbose_get_by_file
ast_debug_get_by_file
__errno_location
strerror
__stack_chk_fail
calloc
write
ast_hide_password
memset
read
ast_restore_tty
strlen
pthread_rwlock_wrlock
ast_config_AST_KEY_DIR
opendir
readdir
closedir
RSA_free
pthread_rwlock_unlock
SSL_library_init
ERR_load_crypto_strings
ast_cli_register_multiple
ast_key_get
ast_check_signature
ast_check_signature_bin
ast_sign
ast_sign_bin
ast_encrypt_bin
ast_decrypt_bin
pthread_rwlock_rdlock
strcmp
ast_cli
__sprintf_chk
RSA_private_decrypt
RSA_public_encrypt
SHA1
RSA_sign
ast_base64encode
RSA_verify
ast_base64decode
ast_module_register
ast_unregister_file_version
ast_register_file_version
libssl.so.8
libcrypto.so.8
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
GLIBC_2.2.5
GLIBC_2.3.4
GLIBC_2.4
%z+ 
%r+ 
%j+ 
%b+ 
%Z+ 
%R+ 
%J+ 
%B+ 
%:+ 
%2+ 
%*+ 
%"+ 
%z* 
%r* 
%j* 
%b* 
%Z* 
%R* 
=x, 
ATSubH
=y) 
AWAVAUATUH
L$0L
\$HL
t$@A
|$(L
t$(L
T$$L
[]A\A]A^A_
pPE1
ATUH
[]A\A]
AVAUA
=	! 
 []A\A]A^
u	D9
[]A\
AWAVAUATUSH
D$81
T$8dH3
H[]A\A]A^A_
fff.
AVAUA
[]A\A]D
AWAVI
teHc
[]A\A]A^A_
D$81
l$ Hc
T$8dH3
\$@H
l$HL
d$PH
\$ H
l$(L
d$0H
.pub
.key
%s/%s
res_crypto.c
PRIVATE
PUBLIC
    -- Loaded %s key '%s'
Key '%s' loaded OK
Key load %s '%s' failed
Key '%s' needs passcode.
write() failed: %s
Deleting key %s type %d
keys init
keys show
Status
Type
Key Name
%-18s %-8s %-16s %-33s
------------------
%02x
[Loaded]
[Needs Passcode]
%d known RSA keys.
Key failed verification: %s
$Revision: 153710 $
res_crypto
Displays RSA key information
Initialize RSA key passcodes
Unable to open key file %s: %s
Memory Allocation Failure in function %s at line %d of %s
/builddir/build/BUILD/asterisk-1.6.1-rc1/include/asterisk/utils.h
Key '%s' is not expected size.
Add the '-i' flag to the asterisk command line if you want to automatically initialize passcodes at launch.
>>>> passcode for %s key '%s': 
Unable to open key directory '%s'
Please run the command 'init keys' to enter the passcodes for the keys
Usage: keys init
       Initializes private keys (by reading in pass code from
       the user)
Usage: keys show
       Displays information about RSA keys known by Asterisk
--------------------------------
Cannot decrypt with a public key
Tried to decrypt something not a multiple of 128 bytes
Cannot encrypt with a private key
How odd, encrypted size is %d
Cannot sign with a public key
RSA Signature (key %s) failed
Unexpected signature length %d, expecting %d
Cannot check message signature with a private key
Signature improper length (expect %d, got %d)
Cryptographic Digital Signatures
This paragraph is copyright (c) 2006 by Digium, Inc. In order for your module to load, it must return this key via a function called "key".  Any code which includes this paragraph must be licensed under the GNU General Public License version 2 or later (at your option).  In addition to Digium's general reservations of rights, Digium expressly reserves the right to allow other parties to license this paragraph under different terms. Any use of Digium, Inc. trademarks or logos (including "Asterisk" or "Digium") without express written permission of Digium, Inc. is prohibited.
crypto_load
try_load_key
_ast_calloc
pw_cb
__ast_decrypt_bin
__ast_encrypt_bin
__ast_sign_bin
__ast_check_signature_bin
__ast_check_signature
a9c98e5d177805051735cb5b0b16b0a0
res_crypto.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
