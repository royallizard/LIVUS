/lib64/ld-linux-x86-64.so.2
libgimpui-2.0.so.0
g_free
gtk_box_get_type
__gmon_start__
_Jv_RegisterClasses
gimp_drawable_get
gtk_widget_destroy
gtk_dialog_get_type
g_malloc
_ITM_deregisterTMCloneTable
gimp_pixel_rgn_get_rect
gtk_container_get_type
_ITM_registerTMCloneTable
gimp_image_insert_layer
gimp_dialog_new
gtk_window_get_type
gtk_box_new
gtk_dialog_get_content_area
gtk_dialog_set_alternative_button_order
gimp_standard_help_func
gimp_pixel_rgn_init
gimp_dialog_run
g_signal_connect_data
g_type_check_instance_cast
gtk_widget_show
gtk_toggle_button_set_active
gtk_toggle_button_get_type
gimp_drawable_mask_bounds
gimp_procedural_db_get_data
gtk_box_pack_start
gimp_procedural_db_set_data
gimp_dialog_get_type
gtk_container_set_border_width
gimp_layer_new
gimp_ui_init
_fini
gimp_window_set_transient
libgimpwidgets-2.0.so.0
g_snprintf
gtk_check_button_new_with_mnemonic
gimp_radio_button_update
gimp_toggle_button_update
gimp_int_radio_group_new
libgimpmodule-2.0.so.0
libgimp-2.0.so.0
gimp_locale_directory
gimp_drawable_update
gimp_progress_init
gimp_drawable_merge_shadow
gimp_drawable_fill
gimp_install_procedure
gimp_plugin_menu_register
gimp_main
gimp_displays_flush
gimp_pixel_rgn_set_rect
gimp_drawable_flush
gimp_progress_update
libgimpmath-2.0.so.0
libm.so.6
hypot
libgimpconfig-2.0.so.0
libgimpcolor-2.0.so.0
libgimpbase-2.0.so.0
libgtk-x11-2.0.so.0
libgdk-x11-2.0.so.0
libpangocairo-1.0.so.0
libatk-1.0.so.0
libcairo.so.2
libgdk_pixbuf-2.0.so.0
libgio-2.0.so.0
libpangoft2-1.0.so.0
libpango-1.0.so.0
libgobject-2.0.so.0
libfontconfig.so.1
libfreetype.so.6
libgthread-2.0.so.0
libglib-2.0.so.0
libpthread.so.0
libc.so.6
dcgettext
__stack_chk_fail
bind_textdomain_codeset
__cxa_finalize
bindtextdomain
__libc_start_main
_edata
__bss_start
_end
/usr/lib64
GLIBC_2.2.5
GLIBC_2.4
5"% 
%$% 
%"% 
%z$ 
%r$ 
%j$ 
%b$ 
%Z$ 
%R$ 
%J$ 
%B$ 
%:$ 
%2$ 
%*$ 
%"$ 
%z# 
%r# 
fffff.
=a# 
5Z# 
fffff.
=I# 
fffff.
AWAVI
AUATUSH
t$`L
d$xH
D$pH
]A\E
L$|D
AZA[
L$lH
t$pE1
YD$X
\$`1
D$`L
;Hc="
D$`I
D$P9
L$lD
\$xH
[]A\A]A^A_
|$(@8|$
@:l$ 
@8|$H
L$8D
D$0f
D$@f
T$(f
L$8f
l$ H
XL$@
YD$(
D$0A
D$8A
D$@A
l$ I
\d$@
T$XH
\$8H
L$ f
\$8H
D$(H
l$0f
d$HH
YD$ 
D$0IcG
D$8IcG
l$ I
l$ I
D$0A
D$8A
D$@A
*D$P
L$|D
AXAY
AWAVAUATA
D$(1
D$(dH3
8[]A\A]A^A_
L$XD
D$ f
AWAVA
AUATL
[]A\A]A^A_
ntsc
lum redux
sat redux
flag
hot mask (%s, %s)
1997
Eric L. Hernes
Eric L. Hernes, Alan Wm Paeth
plug-in-hot
_Hot...
<Image>/Colors/Modify
gimp20-std-plug-ins
UTF-8
gimp-hot
gtk-ok
gtk-cancel
Mode
N_TSC
_PAL
Create _new layer
toggled
_Blacken
Reduce _Saturation
Reduce _Luminance
Action
run-mode
image
The Image
drawable
The Drawable
Mode { NTSC (0), PAL (1) }
action
The action to perform
new-layer
hot scans an image for pixels that will give unsave values of chrominance or composite signale amplitude when encoded into an NTSC or PAL signal.  Three actions can be performed on these ``hot'' pixels. (0) reduce luminance, (1) reduce saturation, or (2) Blacken.
Find and fix pixels that may be unsafely bright
The run mode { RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1) }
Create a new layer { TRUE, FALSE }
1w-!
ffffff
1w-!
;*3$"
hot.debug
7zXZ
h.5`
ge%~
iq_!
YwfN
xzxr0
u6[}
te};
x(_T
pC9i
<9`L
yPX"g
g6<2
kW!sj|
	x>rFd
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
