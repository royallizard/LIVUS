W'rY
0KCC
`)5P
Gy8g3;
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
__assert_fail
memmove
memset
free
floor
realloc
malloc
_Unwind_Resume
__gxx_personality_v0
_ZTVN10__cxxabiv120__si_class_type_infoE
__cxa_pure_virtual
_ZdlPvj
fseek
fread
feof
ftell
fclose
fopen
_ZTVN10__cxxabiv117__class_type_infoE
fmod
gme_type_list
__cxa_guard_acquire
__cxa_guard_release
gme_identify_header
gme_identify_extension
strrchr
toupper
strcmp
gme_new_emu
gme_load_file
gme_load_data
gme_open_data
gme_load_custom
gme_delete
gme_type
gme_warning
gme_track_count
gme_free_info
gme_track_info
gme_set_stereo_depth
gme_user_data
gme_set_user_data
gme_set_user_cleanup
gme_start_track
gme_play
gme_set_fade
gme_track_ended
gme_tell
gme_seek
gme_voice_count
gme_ignore_silence
gme_set_tempo
gme_mute_voice
gme_mute_voices
gme_enable_accuracy
gme_clear_playlist
gme_type_multitrack
gme_set_equalizer
gme_equalizer
gme_voice_name
gme_type_system
gme_identify_file
gme_open_file
gme_load_m3u_data
gme_load_m3u
log10
memcmp
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_Znwj
strncpy
__memcpy_chk
libstdc++.so.6
libm.so.6
libgcc_s.so.1
libc.so.6
__stack_chk_fail
_edata
__bss_start
_end
libgme.so.0
GCC_3.0
GLIBC_2.0
GLIBC_2.1
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.1.3
CXXABI_1.3.9
CXXABI_1.3
GLIBCXX_3.4
[^_]
d$$[^
UWVS
d$,[^_]
A ~)
UWVS
D$(v|
d$|[^_]
[^_]
D$(f
[^_]
D$<1
D$<e3
d$L[^_]
D$4D
UWVS
[^_]
T$4f
T$4f
UWVS
d$,[^_]
T$Te
D$<1
D$4D
D$<e3
d$H[
[^_]
D$,e
D$<1
D$8tg
D$<e3
d$L[^_]
D$,1
L$T)
\$,e3
d$<[^_]
d$$[^
UWVS
9D$H
d$,[
t$T+t$H
d$,[
D$H)E
|$Lsm1
+D$T
d$,[
UWVS
[^_]
[^_]
UWVS
[^_]
\$(9X
x4t(
t);D$
UWVS
[^_]
[^_]
d$([
d$([
UWVS
[^_]
[^_]
UWVS
[^_]
UWVS
d$,[^_]
d$,[^_]
d$,[^_]
t$,)
D$<)
9|$$
D$<)
T$,+T$
+D$d
d$L[
D$<+D$
gfff
VUUU
UWVS
[^_]
UWVS
[^_]
UWVS
[^_]
d$ [^_
UWVS
d$,[^_]
d$,[^_]
UWVS
[^_]
[^_]
\$(e
L$\1
D$\e3
d$,[^_]
UWVS
[^_]
[^_]
UWVS
[^_]
UWVS
t$ )
d$0[^_]
UWV1
|$d)
T$$)
|$L%
\$<)
\$$)
\$h9
\$hf
;t$l
d$P[^_]
UWVS
d$,[
d$,[
d$,[
d$,[
D$(w
D$t9E
[^_]
d$,[^_]
UWVS
[^_]
UWVS
[^_]
MSEN
SENStwwU
EFSN
MSEH
XMYG
 mgV
YAXZ
CCSKt
XSSKu
UWVS
d$,[^_]
l$Dtx
[^_]
d$,1
d$,[^_]
D$,1
T$,e3
d$0[^_
UWVS
d$,[^_]
d$,[^_]
d$,[^_]
D$,1
T$,e3
d$0[^_
UWVS
[^_]
L$l1
D$le3
d$p[^_
d$T^_
D$$9
D$,1
L$,e3
d$<[^_]
D$de
L$<1
T$<e3
d$L[^_]
UWVS
[^_]
UWVS
[^_]
D$De
L$,1
L$,e3
d$0[^_
t$@e
d$,[^_]
D$,1
T$,e3
d$0[^_
s9;J s@
UWVS
|$Pe
D$,1
L$,e3
d$<[^_]
G 9D$X
t$$e
D$,1
L$,e3
d$<[^_]
	w91
UWVS
[^_]
gfff
Prob
lem 
in m
3u a
t lif
[^_]
D$$e
|$L1
|$Le3=
d$\[^_]
9D$ 
9D$ 
D$<1
1< u
t%<:
D$<1
D$<1
D$<1
UWVS
[^_]
[^_]
D$,1
T$,e3
d$0[^_
UWVS
[^_]
8sK1
d$,[^_]
D$,1
T$,e3
d$<[^_]
UWVS
[^_]
UWVS
[^_]
UWVS
[^_]
[^_]
d$,[^_]
UWVS
[^_]
UWVS
[^_]
<$tg
UWVS
@$tF
[^_]
\$(9
d$,[^_]
d$,[^_]
[^_]
UWVS
[^_]
|$De
D$,1
L$,e3
d$0[^_
[^_]
[^_]
UWVS
D$D)
;T$D
\$D)
d$,[1
\$D)
[^_]
d$<[^_]
D$T	
t$X)
T$4f
T$49
t$8;
D$89
+t$L
L$D9
T$49
\$09\$$
H49\$$
D$49
D$49
9D$8
D$,f
t$8;
T$t+
D$4+
+H0+HL
[^_]
L$4)
;|$$
P4;l$$
UWVS
[^_]
[^_]
[^_]
[^_]
[^_]
Vp[^_]
09P@t2
[^_]
[^_]
[^_]
UWVS
[^_]
UWVS
D$8=
D$8f
D$8f
D$8f
D$8f
;|$ t
d$L[^_]
d$4[^
d$41
D$(=
L$ ~
D$$w[
T$(~!
UWVS
[^_]
P<t1
p\u'
t9D$
d$,[^_]
D$@1
UWVS
|$0%
L$\!
d$H[^_]
UWVS
d$H[^_]
UWVS
|$4%
L$$3
\$\+
d$H[^_]
UWVS
|$4%
d$H[^_]
UWVS
d$H[^_]
UWVS
D$ +
d$H[^_]
UWVS
L$ 1
d$H[^_]
UWVS
\$$+]|
d$L[^_]
9L$H
+\$H
d$,[^_]
;\$H
9D$H
V +D$H
d$,[^_]
|$@)
+\$H
d$,[^_]
+\$H
;L$X
9L$X
#V,1
Z,9L$X
+L$X
d$<[^_]
d$$[^
L$@wx
[^_]
UWVS1
d$,[^_]
UWVS
d$,[^_]
UWVS
l$49
[^_]
D$@1
d$,[^_]
UWVS
D$Le
D$|1
t$8x
|$4f
D$D@
D$D@
D$D@
D$D@
D$D@
D$D@
l$pf
\$Tf
\$|e3
[^_]
t$L2T$z
t$L"T$z
D$D@
|$L1
L$z	
D$D@
T$z	
T$ %
D$D%
T$ 	
T$vf
D$4f
L$xf
L$vf
L$xf
L$D@
D$ f
D$0f
D$0f-
D$01
D$D%
t$8f
D$ f
|$P 
D$0%
l$01
D$z1
L$D@
[^_]
UWVS
T$D)
d$,[1
+T$ 
d$,[^_]
d$,[^_]
d$,[^_]
[^_]
[^_]
UWVS
D$H%
d$,[^_]
D$L%
d$,[^_]
[^_]
[^_]
UWVS
[^_]
T$`f
L$@wx
[^_]
UWVS1
d$,[^_]
d$$[^
UWVS
D$D9E
9T$D
9D$D
9D$D
d$,[^_]
|$$9~
d$<[^_]
9D$\
d$<[^_]
gfff
l$X!
D$$!B,
UWVS
[^_]
L$4e
d$$[^
D$De
t$(f
D$<f
D$b)
+T$ 
D$b3D$ 
D$ "D$b
+T$ 
L$8`
D$<f
[^_]
T$8!
|$,!
D$b	
D$<1
D$c%
P0u3
P<x(
X8[^
;L$X
9L$X
P49L$X
G +L$X
d$<[^_]
;\$X
9\$X
B +\$X
d$<[^_]
;D$X
9\$X
+O t
+t$X
d$<[^_]
+t$X
[^_]
d$([
d$ [^_
d$ [^_
D$l1
D$le3
d$|[^_]
[^_]
[^_]
UWVS
[^_]
UWVS
[^_]
[^_]
UWVS
T$8e
D$L1
D$@@
L$Le3
d$\[^_]
D$ f
UWVS
[^_]
T$(e
d$([
d$([
d$([
VUUUS
d$,[^_]
[^_]
d$,[^_]
[^_]
P,;l$$
d$<[^_]
UWVS
d$,[^_]
UWVS
[^_]
UWVS
[^_]
d$L[^_]
D$$+U$
D$ t
E8;D$h
D$0f
\$89\$h
D$(t
L$8)
+D$h
d$L[^_]
L$0f
\$09\$h
D$$9L$4
EPtD
P([^_]
d$,[^_]
d$,[^_]
d$,[^_]
d$,[^_]
F8tO
d$,[^_]
d$([
t6|,=
D$(e
D$4	
l$,	
l$,+D$
l$,+D$
l$,+D$
l$,1L$\
l$,!L$\
l$,	L$\
L$$	
l$,	
l$,	
D$ @
L$ )
D$ +
\$(	
l$,%
l$,	
D$P1
D$ @
D$P1
D$(y 
D$\	
D$d	
[^_]
[^_]
UWVS
d$<[^_]
L$,9
d$<[^_]
d$([
[^_]
[^_]
@u~9
s([^_
UWVS
[^_]
|$0uW
|$`%
|$Hx
D$\@
|$`f
[^_]
D$\%
D$0!
\$<	
D$\@
D$\@
D$\@
D$\@
D$\@
T$82
T$8"
D$\@
\$d1
D$\@
\$<	
L$<	
L$<f
D$@f
L$\@
D$8f
D$81
D$8f-
D$H%
T$81
D$ @
L$\@
[^_]
d$,[^_]
d$$[^
[^_]
[^_]
d$$[^
UWVS
d$,1
[^_]
ML}{
T$X)
D$ 1
9t$ vX
d$<[^_]
T$8=
d$ [^_
d$ [^_
d$ [^_
d$,[^_]
d$,[^_]
d$,[^_]
d$,[^_]
d$,[^_]
UWVS
[^_]
D$,)
9D$d
L$ )
+D$d
D$0 
d$L[^_]
CP9D$d
9D$ 
CP9D$d
CP;D$d
\$ 9\$d
|$$t
Q,9\$d
BP9D$d
CP9D$d
d$$[^
UWVS
;T$D
9D$D
9|$D
9|$D
d$,[^_]
d$,[^_]
d$,[^_]
d$,[^_]
D$4<
d$ [^_
UWVS
[^_]
\$0ua
L$,1
D$,e3
d$4[^
d$ [^_
\$8%
d$ [^_
d$ [^_
D$D	
D$Pf
[^_]
	t$4
T$@	
D$D+D$
1t$4
!t$4
t$8	
T$D1
D$D1
D$L@
T$T	
t$L1
D$D=
D$P=
T$D1
D$L@
D$DwH
D$Pv
t$T9p0
p09t$T
P49t$T
D$$)
f+t$Tf
d$<[^_]
|$ )
\$<)
;t$<
9\$0
;D$ 
l$(f
+D$ 
;|$$
d$\[^_]
u[[^_
X$[^_
D$$1
L$$1
9L$h
S(+D$(
9T$$t
9L$h
X49L$h
S +L$h
d$L[^_]
S +L$h
d$L[^_]
S +L$h
d$L[^_]
d$<[^_]
9\$X
9\$X
+D$X
D$X)
+\$X
u!;P4t
UWVS
@u$9
B8 B9
;l$X
9l$X~o
9l$X
+D$X
d$<[^_]
9l$X~
9D$h
+D$h
d$L[^_]
+T$$
9\$h
T$8;U
+L$h
d$L[^_]
UWVS
[^_]
UWVS
[^_]
;T$X
9T$X
9T$X
+T$X
d$<[^_]
d$<[^_]
]8;\$T
9\$T
+D$T
|$$9~H
UWVS
|$<w,
[^_]
[^_]
d$ [^_
UWVS
[^_]
d$,1
[^_]
[^_]
[^_]
d$,[^_]
d$,[
UWVS
d$<[^_]
d$<[^_]
d$ [^_
d$ [^_
d$ [^_
UWVS
[^_]
D$T)
UWVS
[^_]
[^_]
[^_]
[^_]
9l$ 
9l$ 
T$ u
D$ e
D$|1
L$|e3
[^_]
D$$u
T$`=INFO
=auth
=tlbl
=plst
T$,u
=NEND
=BANK
=DATA
=timeu
T$0u
|$$;
[^_]
\$Ht?
T$ +P
t$(+
d$l[^_]
\$ )X
D$ )C
D$,9
;t$,
#D$ 
D$,9
d$([
D$He
D$l1
D$L	
t$ x!9
\$$+D$
|$$+D$
	T$@
!\$@
\$$+D$
1t$@
D$@f
D$T	
t$le35
d$|[^_]
D$4=
D$4=
D$Pw]
D$Tv
|$d+
D$,@
|$P1
D$d)
\$d9
D$,@
D$,1
l$$	
|$D	
|$P1
D$d+
D$d)
[^_]
DT$(
T$,w
d$<[^_]
d$<[^_]
D$ 9
D$ 9
d$<[^
d$<[^
D$ 9
D$ 9
D$ 9
D$ 9
D$ 9
D$ 9
UWVS
d$,[^_]
|$D)
d$,[^_]
[^_]
[^_]
UWVS
T$4f
[^_]
UWVS
[^_]
UWVS
[^_]
D$ 1
@l u
d$,[^_]
d$,[^_]
d$,[^_]
UWVS
d$,[^_]
Bl u=
|$0wH
[^_]
[^_]
[^_]
[^_]
UWVS
D$Ht 
d$,[^_]
d$,[^_]
UWVS
[^_]
[^_]
[^_]
D$D	
D$<+D$
1|$<
!|$<
	\$<
|$X)
L$T%
D$\-
[^_]
D$L+D$
T$H1
;L$<
+T$X
	D$H
D$D1
L$\+D$X=
D$T$\	
L$\	
+D$X=
	D$H
!D$H
+T$X
+T$X
1D$H
+T$X
D$\-
+D$X
\$<9
L$T9
D$T@
+T$X
|$@u
|$@t
+T$X
|$4)
D$P,
D$T@
!D$H
+T$X
\$P)
L$X)
l$<`
D$<`
L$<-
D$4-
D$\-
D$\-
D$\-
D$\-
\$<	
#T$<	
UWVS
[^_]
T$$u-
S,9\$ 
;|$4
;D$x
P tS
[^_]
[^_]
t$0e
d$$[^
D$K 
gfff
[^_]
|$@1
d$,[^_]
d$,[
[^_]
d$([
d$ [^_
d$4[^
d$,[^_]
[^_]
UWVS
d$,[^_]
d$,[^_]
d$,[^_]
UWVS
[^_]
|$,)
9|$$
D$<)
T$,+T$
+D$d
d$L[
D$<+D$
UWVS
D$,f
;D$(
d$<[^_]
9\$Ts
d$<[^_]
[^_]
d$4[^
d$([
D$|1
D$|e3
[^_]
[^_]
t$4e
d$$[^
t$Pe
D$<1
L$8t
L$<e3
d$D[^
|$(@
d$$[^
UWVS
l$Pe
D$,1
L$,e3
d$<[^_]
+D$D
d$,[
;D$D}
9D$D
?[^_]
UWVS
[^_]
[^_]
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Blip_Buffer.cpp
buffer_size_ != silent_buf_size
samples_avail() <= (long) buffer_size_
count <= samples_avail()
factor > 0 || !sample_rate_
Out of memory
length_ == msec
kernel_unit > 0
void Blip_Buffer::mix_samples(const blip_sample_t*, long int)
void Blip_Synth_::volume_unit(double)
blip_time_t Blip_Buffer::count_clocks(long int) const
void Blip_Buffer::remove_silence(long int)
void Blip_Buffer::end_frame(blip_time_t)
blip_resampled_time_t Blip_Buffer::clock_rate_factor(long int) const
const char* Blip_Buffer::set_sample_rate(long int, int)
MbP?+
?333333
!	@clocks_emulated
n <= size_
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Classic_Emu.h
!buf && new_buf
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Classic_Emu.cpp
(ch.center && ch.left && ch.right) || (!ch.center && !ch.left && !ch.right)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/blargg_common.h
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
T& blargg_vector<T>::operator[](size_t) const [with T = unsigned char; size_t = unsigned int]
virtual const char* Classic_Emu::play_(long int, Music_Emu::sample_t*)
virtual void Classic_Emu::mute_voices_(int)
11Classic_Emu
13Silent_Buffer
Read error
Error seeking in file
Couldn't read from file
n >= 0
Couldn't open file
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Data_Reader.cpp
virtual const char* File_Reader::skip(long int)
Unexpected end of file
11Data_Reader
11File_Reader
15Std_File_Reader
15Mem_File_Reader
13Subset_Reader
16Remaining_Reader
15Callback_Reader
new_count < resampler_size
write_pos <= buf.end()
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Dual_Resampler.cpp
blip_buf.samples_avail() == pair_count
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Fir_Resampler.h
count == (long) sample_buf_size
void Fir_Resampler_::write(long int)
T& blargg_vector<T>::operator[](size_t) const [with T = short int; size_t = unsigned int]
void Dual_Resampler::play_frame_(Blip_Buffer&, Dual_Resampler::dsample_t*)
14Dual_Resampler
total_samples % 2 == 0
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Effects_Buffer.cpp
virtual long int Effects_Buffer::read_samples(blip_sample_t*, long int)
14Effects_Buffer
Mb@?
MbP?T& blargg_vector<T>::operator[](size_t) const [with T = short int; size_t = unsigned int]
?GBS
NSFE
(data || !size) && out
path && out
/builddir/build/BUILD/game-music-emu-0.6.0/gme/gme.cpp
(unsigned) i < (unsigned) me->voice_count()
const char* gme_type_system(gme_type_t)
const char* gme_voice_name(const Music_Emu*, int)
const char* gme_open_file(const char*, Music_Emu**, int)
const char* gme_open_data(const void*, long int, Music_Emu**, int)
< ? >
data != file_data.begin()
*(volatile char*) &i != 0
Invalid track
Invalid track in m3u playlist
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Gme_File.cpp
/builddir/build/BUILD/game-music-emu-0.6.0/gme/blargg_endian.h
Wrong file type for this emulator
T& blargg_vector<T>::operator[](size_t) const [with T = M3u_Playlist::entry_t; size_t = unsigned int]
virtual const char* Gme_File::load_mem_(const byte_*, long int)
void blargg_verify_byte_order()
8Gme_File
/builddir/build/BUILD/game-music-emu-0.6.0/gme/M3u_Playlist.cpp
raw_track_count_
Not an m3u playlist
Composer
Engineer
Ripping
Tagging
T& blargg_vector<T>::operator[](size_t) const [with T = M3u_Playlist::entry_t; size_t = unsigned int]
const char* Gme_File::load_m3u_(blargg_err_t)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Multi_Buffer.cpp
!(count & 1)
virtual long int Stereo_Buffer::read_samples(blip_sample_t*, long int)
12Multi_Buffer
11Mono_Buffer
13Stereo_Buffer
Use full emulator for playback
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Music_Emu.cpp
(unsigned) index < (unsigned) voice_count()
!sample_rate()
current_track() >= 0
!buf_remain
out_count % stereo == 0
emu_time >= out_time
Voice 1
Voice 2
Voice 3
Voice 4
Voice 5
Voice 6
Voice 7
Voice 8
const char* Music_Emu::play(long int, Music_Emu::sample_t*)
void Music_Emu::fill_buf()
const char* Music_Emu::skip(long int)
void Music_Emu::set_tempo(double)
void Music_Emu::mute_voices(int)
void Music_Emu::mute_voice(int, bool)
virtual void Music_Emu::pre_load()
const char* Music_Emu::set_sample_rate(long int)
9Music_Emu
9Gme_Info_
?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Ay_Apu.cpp
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Blip_Buffer.h
(blip_long) (time >> BLIP_BUFFER_ACCURACY) < blip_buf->buffer_size_
(unsigned) addr < reg_count
final_end_time >= last_time
-remain <= env_period
env.delay > 0
env.pos < 0
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void Ay_Apu::run_until(blip_time_t)
void Ay_Apu::write_data_(int, int)
=*>&
 -@Z
void Ym2612_Impl::write0(int, int)
void Ym2612_Impl::write1(int, int)
void Ym2612_Impl::set_rate(double, double)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Ym2612_Emu.cpp
clock_rate > sample_rate
(unsigned) data <= 0xFF
!Y?H
@xwwwww
B/builddir/build/BUILD/game-music-emu-0.6.0/gme/Sms_Apu.cpp
(center && left && right) || (!center && !left && !right)
(unsigned) index < osc_count
void Sms_Apu::write_data(blip_time_t, int)
void Sms_Apu::write_ggstereo(blip_time_t, int)
void Sms_Apu::end_frame(blip_time_t)
void Sms_Apu::run_until(blip_time_t)
void Sms_Apu::osc_output(int, Blip_Buffer*, Blip_Buffer*, Blip_Buffer*)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
333333[?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Ay_Cpu.cpp
false
bool Ay_Cpu::run(cpu_time_t)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Ay_Apu.h
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Ay_Emu.cpp
(unsigned long) pos <= (unsigned long) file_size - 2
last_time >= time
(unsigned) i < osc_count
Missing track data
ZXAYEMUL
Unknown file version
File data missing
Bad data block size
Missing file data
ZX Spectrum
Wave 1
Wave 2
Wave 3
Beeper
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
void Ay_Apu::end_frame(blip_time_t)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void Ay_Apu::osc_output(int, Blip_Buffer*)
const byte_* get_data(const Ay_Emu::file_t&, const byte_*, int)
6Ay_Cpu
6Ay_Emu
7Ay_File
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Gb_Apu.cpp
(unsigned) index < register_count
next_frame_time >= end_time
(unsigned) data < 0x100
int Gb_Apu::read_register(blip_time_t, unsigned int)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Gb_Apu::write_register(blip_time_t, unsigned int, int)
void Gb_Apu::end_frame(blip_time_t)
void Gb_Apu::run_until(blip_time_t)
void Gb_Apu::osc_output(int, Blip_Buffer*, Blip_Buffer*, Blip_Buffer*)
<`YY
zD?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Gb_Cpu.cpp
start % page_size == 0
size % page_size == 0
bool Gb_Cpu::run(blargg_long)
void Gb_Cpu::map_code(gb_addr_t, unsigned int, void*)
void blargg_verify_byte_order()
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
 0@P`p
Invalid timer mode
Game Boy
Square 1
Square 2
Noise
Invalid load/init/play address
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Music_Emu.h
Emulation error (illegal/unsupported instruction)
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
T& blargg_vector<T>::operator[](size_t) const [with T = unsigned char; size_t = unsigned int]
void Music_Emu::set_gain(double)
6Gb_Cpu
7Gbs_Emu
8Gbs_File
333333
CPacked GYM file not supported
GYMX
Unknown Song
Unknown Game
Unknown Publisher
Unknown Person
Header added by YMAMP
Sega Genesis
FM 1
FM 2
FM 3
FM 4
FM 5
FM 6
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
7Gym_Emu
8Gym_File
?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Hes_Apu.cpp
noise_lfsr
osc->last_time >= end_time
void Hes_Apu::end_frame(blip_time_t)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Hes_Osc::run_until(Hes_Osc::synth_t&, blip_time_t)
void Hes_Apu::osc_output(int, Blip_Buffer*, Blip_Buffer*, Blip_Buffer*)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Hes_Cpu.cpp
(unsigned) reg <= page_count
(unsigned) bank < 0x100
T& blargg_vector<T>::operator[](size_t) const [with T = unsigned char; size_t = unsigned int]
void Hes_Cpu::set_mmr(int, int)
void blargg_verify_byte_order()
HESM
DATA
Data header missing
Unknown header data
Invalid address
Invalid size
Extra file data
Multiple DATA not supported
state == &state_
PC Engine
Wave 4
Multi 1
Multi 2
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
void Hes_Cpu::end_frame(hes_time_t)
void Music_Emu::set_gain(double)
Emulation error (illegal instruction)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Hes_Cpu.h
Scanline interrupt unsupported
7Hes_Cpu
7Hes_Emu
8Hes_File
333333
?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Kss_Cpu.cpp
addr % page_size == 0
bool Kss_Cpu::run(cpu_time_t)
void Kss_Cpu::map_mem(unsigned int, blargg_ulong, void*, const void*)
Sega Master System
Game Gear
KSCC
KSSX
Unknown data in header
FM sound not supported
last_time >= 0
Excessive data size
Bank data missing
Square 3
Wave 5
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Kss_Scc_Apu.h
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
void Scc_Apu::end_frame(blip_time_t)
void Ay_Apu::end_frame(blip_time_t)
T& blargg_vector<T>::operator[](size_t) const [with T = unsigned char; size_t = unsigned int]
void Ay_Apu::osc_output(int, Blip_Buffer*)
void Scc_Apu::osc_output(int, Blip_Buffer*)
7Kss_Cpu
7Kss_Emu
8Kss_File
?ffffff
>void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Apu.h
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Apu.cpp
(unsigned) osc < osc_count
end_time >= last_dmc_time
last_dmc_time >= 0
addr > 0x20
void Nes_Apu::write_register(nes_time_t, nes_addr_t, int)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void Nes_Apu::end_frame(nes_time_t)
void Nes_Apu::run_until_(nes_time_t)
void Nes_Apu::run_until(nes_time_t)
void Nes_Apu::osc_output(int, Blip_Buffer*)
2]?!
;t?S
uqk?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Cpu.cpp
start + size <= 0x10000
Invalid bank
void Nes_Cpu::map_code(nes_addr_t, unsigned int, const void*, bool)
void blargg_verify_byte_order()
T& blargg_vector<T>::operator[](size_t) const [with T = unsigned char; size_t = unsigned int]
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Fme7_Apu.cpp
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void Nes_Fme7_Apu::run_until(blip_time_t)
"0D`
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Namco_Apu.h
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Namco_Apu.cpp
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 15; blip_resampled_time_t = unsigned int]
void Nes_Namco_Apu::end_frame(blip_time_t)
void Nes_Namco_Apu::osc_output(int, Blip_Buffer*)
NK?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Oscs.cpp
prg_reader
void Nes_Dmc::fill_buffer()
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
 !!"#$$%&&'())*++,--.//0012234455677889::;;<<==>??@@AABBCCDDEFFGGHHIIJJKKKLLMMNNOOPPQQRRRS
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Vrc6_Apu.h
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Vrc6_Apu.cpp
(unsigned) osc_index < osc_count
(unsigned) reg < reg_count
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void Nes_Vrc6_Apu::end_frame(blip_time_t)
void Nes_Vrc6_Apu::write_osc(blip_time_t, int, int, int)
void Nes_Vrc6_Apu::run_until(blip_time_t)
void Nes_Vrc6_Apu::osc_output(int, Blip_Buffer*)
gz?Famicom
Triangle
Square 4
Square 5
Saw Wave
Wave 6
Wave 7
Wave 8
Nintendo NES
Uses unsupported audio expansion hardware
NESM
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Nes_Fme7_Apu.h
Corrupt file (invalid load/init/play address)
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
void Nes_Fme7_Apu::end_frame(blip_time_t)
void Nes_Namco_Apu::osc_output(int, Blip_Buffer*)
void Nes_Vrc6_Apu::osc_output(int, Blip_Buffer*)
void Nes_Apu::osc_output(int, Blip_Buffer*)
void Music_Emu::set_gain(double)
7Nes_Cpu
7Nsf_Emu
8Nsf_File
LO;AUUUUUX
Corrupt file
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
T& blargg_vector<T>::operator[](size_t) const [with T = char; size_t = unsigned int]
T& blargg_vector<T>::operator[](size_t) const [with T = const char*; size_t = unsigned int]
NESM
8Nsfe_Emu
9Nsfe_File
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 12; int range = 1; blip_resampled_time_t = unsigned int]
void blargg_verify_byte_order()
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Sap_Apu.h
Invalid play address
Invalid init address
Invalid music address
ROM data missing
Invalid fastplay value
Unsupported player type
Digimusic not supported
Invalid track count
INIT
PLAYER
MUSIC
SONGS
TYPE
STEREO
FASTPLAY
AUTHOR
NAME
DATE
Invalid file data block
Atari XL
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
void Sap_Apu::osc_output(int, Blip_Buffer*)
7Sap_Cpu
7Sap_Emu
8Sap_File
?Not an SPC file
Corrupt SPC file
(size & 1) == 0
out <= out_end
(count & 1) == 0
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Snes_Spc.cpp
out <= &m.extra_buf [extra_size]
const char* Snes_Spc::play(int, Snes_Spc::sample_t*)
void Snes_Spc::save_extra()
void Snes_Spc::set_output(Snes_Spc::sample_t*, int)
SNES-SPC700 Sound File Data v0.30
(G46&TThHGEVUe"F(G46&TTtHGEVUe"8(G46&DTfHGEVUE"C(G46&DTuHGEVUU"6(G46&TREHGEVUU"
8G46&DRDHGEVUU"48GEG%dRIHGVgEU"
(G46$SC@HGEV4T"`;#
BOOST::uint8_t* Snes_Spc::run_until_(Snes_Spc::time_t)
void Snes_Spc::end_frame(Snes_Spc::time_t)
int Snes_Spc::cpu_read(int, Snes_Spc::rel_time_t)
void Snes_Spc::cpu_write_high(int, int, Snes_Spc::rel_time_t)
void Spc_Dsp::write(int, int)
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Spc_Dsp.h
(unsigned) addr < register_count
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Spc_Cpu.cpp
RAM [i + rom_addr] == (uint8_t) data
reg + (r_t0out + 0xF0 - 0x10000) < 0x100
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Spc_Cpu.h
-cpu_lag_max <= m.spc_time && m.spc_time <= 0
rel_time <= 0
SPC emulation error
m.spc_time <= end_time
/builddir/build/BUILD/game-music-emu-0.6.0/gme/Spc_Dsp.cpp
brr_offset == brr_block_size
m.ram
void Spc_Dsp::soft_reset_common()
void blargg_verify_byte_order()
void Spc_Dsp::run(int)
void Spc_Dsp::set_output(Spc_Dsp::sample_t*, int)
gRWF=Y
xid6
SNES-SPC700 Sound File Data
Super Nintendo
DSP 1
DSP 2
DSP 3
DSP 4
DSP 5
DSP 6
DSP 7
DSP 8
void Fir_Resampler_::write(long int)
T& blargg_vector<T>::operator[](size_t) const [with T = short int; size_t = unsigned int]
void Music_Emu::set_gain(double)
7Spc_Emu
8Spc_File
?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Spc_Filter.cpp
void SPC_Filter::run(short int*, int)
Gd3 
Sega SMS/Genesis
Vgm 
YM2413 FM sound isn't supported
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
7Vgm_Emu
8Vgm_File
rhU?/builddir/build/BUILD/game-music-emu-0.6.0/gme/Vgm_Emu_Impl.cpp
to_fm_time( vgm_time ) <= min_pairs
Stream lacked end event
Unknown stream event
virtual void Classic_Emu::set_buffer(Multi_Buffer*)
virtual int Vgm_Emu_Impl::play_frame(blip_time_t, int, Vgm_Emu_Impl::sample_t*)
void Blip_Synth<quality, range>::offset_resampled(blip_resampled_time_t, int, Blip_Buffer*) const [with int quality = 8; int range = 1; blip_resampled_time_t = unsigned int]
12Vgm_Emu_Impl
;*2$"$
zPLR
libgme.so.0.6.0.debug
7zXZ
h2sUM
1Y P"c8
590glb
eq*HY@
Hr8M
Xjt<n
7^s/
wNjJ
GnOa
7-4~xJY
"WYR
ia;-
;{Ju
Pzp+
\hDk
,],l
<p,K
8!CFE
~wiw
|pf:
;[3N?b
p>0>
zdwc
F2Fq
![Pt
a`^@
dxl`
e*	w
eJAX
I!n;x|;
 d5F
NrM|
nK	a3:
M1y:
D0G)x
!br|
Afr7.
"P~ Bs;G!{
A4y\v(K
Dk,r
(	+B|
~&w}e4
~gJEz3
?E]	
z=K#
\'{K
0(	;S`%]G
B1PC
)]> 
}^sK
^/mh
*-(L:
yo1W
~3h2
,?!,
VWy-
{(cK&
#LT}
R`fL
g]<"
{P57
0:k}z'
)v+I
U;Lj
S.pXCV
{G9.
S7qi
P2 ]
2PY0
|=n`
m%3_
2n~B
btc>
a4\M
$bTJk
>-:b
|.+!
F3}u
?nS4e
ugT(X
x_q{
S[:&
h(OT
4r_nn
+i/"
3?95j
'k;F
^cu#
oaA8
RPrC
{V d_
O;?@z
]Z\F
4Otn
vw}mM
,t!j
2)oC
U,s 6
"]29
m"_K{
sy4k|Bm|E
q6\1
!sFq?
A/<+T
YTA}
X_S[
=Pd3
6r7d
y{q~
la6$
`iFv
\En)P
dcd!;
Ji/!
MK%|
z8&=
PIOo
2<(x_
AChG
og53
CdI?
o({}.
:!6w
t]aE
=lAlx-
 /<V
a?k~
}Vp2~
H)Y8m`
kNcT7
W@EE
)`W&pH
^	^\
GO2<8
1t7B
|9{1
1)?}
uH9s
:IAL8
W 6"
kB',
?PTB l
|Bok
;e>uL
m1"o
uDWX
5Hbyi
BTuP
l]Pa
%wmS
pI[~
lC~|h
xeM.U
j3Q?
neyu
GfPk
|hgw
w$"q
5F;(cg{sL
t8)wJ
QRI0
tL>^
S|h>?
, {zN
JtXB:
S6fn
fC rU
cjN"
v9QV;
!D<nH
~@oS
dzBy
Mx64"
r/$0
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.init
.plt
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.data
.bss
.gnu_debuglink
.gnu_debugdata
