__gmon_start__
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
g_hash_table_lookup
gnm_style_ref
sheet_style_default
gnm_style_unref
gnm_style_new_default
gnm_style_set_font_italic
gnm_style_set_contents_hidden
gnm_style_set_font_uline
gnm_style_set_font_bold
gnm_style_set_align_h
g_hash_table_insert
gnm_style_get_align_h
gnm_style_get_contents_locked
g_string_new
gnm_conventions_default
cellref_as_string
g_string_free
__stack_chk_fail
pln_file_probe
gsf_input_seek
gsf_input_read
memcmp
pln_file_open
wb_view_get_workbook
workbook_sheet_get_free_name
sheet_new
workbook_sheet_attach
sheet_flag_recompute_spans
g_direct_equal
g_direct_hash
g_hash_table_new_full
gnm_sheet_get_size
range_init
parse_pos_init_sheet
sheet_col_set_size_pts
sheet_style_apply_range
g_return_if_fail_warning
gnm_expr_parse_str
gnm_cell_set_expr_and_value
gnm_expr_top_unref
g_log
ldexp
value_new_float
gnm_cell_set_value
sheet_style_set_pos
sheet_cell_fetch
value_new_error_NA
value_new_error_VALUE
pln_get_str
value_new_string_nocopy
g_string_append
gnm_cell_set_expr
g_dgettext
go_error_info_new_str
g_hash_table_destroy
workbook_sheet_delete
go_io_error_info_set
g_string_append_len
go_string_append_c_n
go_strescape
g_string_insert_c
go_error_info_new_printf
value_release
go_plugin_header
go_plugin_depends
g_string_sized_new
g_utf8_validate
g_string_append_unichar
g_strdup
libm.so.6
libc.so.6
_edata
__bss_start
_end
plan_perfect.so
GLIBC_2.2.5
GLIBC_2.4
%z= 
%r= 
%j= 
%b= 
%Z= 
%R= 
%J= 
%B= 
%:= 
%2= 
%*= 
%"= 
%z< 
%r< 
%j< 
%b< 
%Z< 
%R< 
%J< 
%B< 
%:< 
%2< 
%*< 
%"< 
=G9 
fffff.
=H3 
=23 
AVAUI
ATUS
]A\A]A^
tVwF
D$81
tof=
D$ H
|$ H
\$(H
|$ 1
\$8dH3
AUATUSH
D$x1
|$@H
|$@D
D$`H
t$@H
l$@f.
|$@1
d$XD
|$@H
9l$8
t$`H
t$`H
l$(L
t$ L
t$ H
l$(L
D$xdH3
[]A\A]A^A_
D$0H
T$0I
D$0M
L$	I
L$0M
L$0M
D$0H
t$0H
D$?H
|$0M
T$8H
dH3<%(
[]A\A]
ERROR
PlanPerfect
gnumeric-1.12.8
SUM(
_MOD_
_NOT_
_AND_
_OR_
_XOR_
??ERROR??
_unknown31_
_unknown32_
_unknown33_
_unknown34_
FACTORIAL
LOOKUP<
LOOKUP>
datalen >= 2
ui <= datalen - 2
?bad1?(
POWER(
LOG(
SQRT(
EXP(
MOD(
ASIN(
ACOS(
ATAN(
TERM(
PMT(
NPV(
LOOKUP(
INDEX(
ROUND(
STDEV(
CONCAT(
MID(
LENGTH(
MDY(
MONTH(
YEAR(
DATETEXT(
DATEVALUE(
VAR(
RANDOM(
CURRENCY(
ITERATION(
ISVALUE(
ISTEXT(
REPLACE(
RADIANS(
CELL(
SUBTRACT(
IRR(
FIND(
LEFT(
RIGHT(
UPPER(
LOWER(
PROPER(
CHAR(
CODE(
TRIM(
REPEAT(
BLOCK(
CURSOR(
DDB(
SLN(
SYD(
RATE(
STATUS(
FOREACH(
DEGREES(
HOUR(
MINUTE(
SECOND(
HMS(
TIMETEXT(
TIMEVALUE(
PRODUCT(
QUOTIENT(
VARP(
STDEVP(
ATAN2(
MATCH(
MATCH2(
LOOKUP2(
LINK(
ISERR(
ISERR2(
CHOOSE(
ABS(
INT(
SIGN(
NOT(
TRUE(
FALSE(
AND(
AVERAGE(
COUNT(
MIN(
MAX(
ISNA(
NOW(
TODAY(
FACT(
ROW(
COLUMN(
goffice
gnumeric
PLN : Spreadsheet is password encrypted
Ignoring data that claims to be in row %u which is > max row %u
Ignoring data that claims to be in column %u which is > max column %u
an empty unformated cell has an expression ?
unknown comparative operator %u
PLN: Undefined formula code %d
0 < i && i < G_N_ELEMENTS (formula1)
0 < i && i < G_N_ELEMENTS (formula2)
pln_get_func_table2
pln_get_func_table1
pln_convert_expr
munG
g_utf8_validate (buf->str, -1, &test)
pln_get_str
 #!#
d"e"
#")#*#<"H"a"
")"%"
#j"k" "
"'"("
`"b"5"4"7"."
!-!(!
"C"E"z"|"{"}"
"##"#V
"'!!"""
"P"R"S"N"M"
&n"p"o"q"A"D"G"I"
"&"$"m"
"	"Z
0!1!
!r"s"a
a&b&g&d&B&@&<&:&;&j&l&
&9&o&m&n&
' '!'"'#'$'%'&'''
&*'+','-'.'/'0'1'2'3'4'5'6'7'8'9':';'<'='>'?'@'A'B'C'D'E'F'G'H'I'J'K'
%O'P'Q'R'
%X'Y'Z'['\']'^'6 3 '
)#*#[
a'b'c'd'e'f'g'c&f&e&`&
'v'w'x'y'z'{'|'}'~'
 9 : 
%  ! "! !
 S!T![!\!]!^!
;*3$"
plan_perfect.so.debug
7zXZ
3][IM'
}fm<
k=,/vP
Mr/s!
AC}o
M6*I
5RD+
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.bss
.gnu_debuglink
.gnu_debugdata
