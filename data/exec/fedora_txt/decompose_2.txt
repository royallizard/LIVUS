/lib64/ld-linux-x86-64.so.2
libgimpui-2.0.so.0
gtk_box_get_type
gimp_drawable_width
gimp_drawable_detach
__gmon_start__
_Jv_RegisterClasses
g_strdup
gimp_drawable_get
gtk_widget_destroy
gtk_dialog_get_type
g_malloc
g_string_new
_ITM_deregisterTMCloneTable
gimp_image_undo_disable
gimp_layer_add_alpha
gimp_pixel_rgn_get_rect
g_object_new
gtk_container_get_type
gimp_context_get_foreground
_ITM_registerTMCloneTable
g_strdup_printf
gimp_image_insert_layer
g_string_free
gimp_drawable_height
gimp_dialog_new
gimp_drawable_has_alpha
gtk_window_get_type
gtk_box_new
gtk_dialog_get_content_area
gtk_dialog_set_alternative_button_order
gimp_standard_help_func
gtk_label_get_type
gimp_pixel_rgn_init
gimp_dialog_run
g_signal_connect_data
gtk_window_set_resizable
g_type_check_instance_cast
gtk_widget_show
gtk_label_new_with_mnemonic
gtk_container_add
gimp_frame_new
gtk_toggle_button_set_active
gtk_toggle_button_get_type
gimp_procedural_db_get_data
gtk_box_pack_start
g_string_insert_c
gtk_misc_get_type
gimp_procedural_db_set_data
gimp_dialog_get_type
g_string_append
g_log
gimp_int_combo_box_get_type
gtk_container_set_border_width
gimp_layer_new
gtk_misc_set_alignment
gimp_ui_init
gimp_window_set_transient
libgimpwidgets-2.0.so.0
gimp_rgb_get_uchar
gimp_parasite_new
gtk_label_set_mnemonic_widget
gtk_check_button_new_with_mnemonic
g_string_append_printf
g_ascii_strcasecmp
gimp_int_combo_box_append
gimp_toggle_button_update
gimp_help_set_help_data
gimp_int_combo_box_connect
gimp_int_combo_box_get_active
libgimpmodule-2.0.so.0
libgimp-2.0.so.0
gimp_parasite_free
gimp_locale_directory
gimp_tile_height
gimp_image_set_filename
gimp_image_new
gimp_image_undo_enable
gimp_drawable_update
gimp_progress_init
gimp_image_get_filename
gimp_image_attach_parasite
gimp_progress_end
gimp_drawable_type_with_alpha
gimp_install_procedure
gimp_display_new
gimp_plugin_menu_register
gimp_main
gimp_image_set_resolution
gimp_pixel_rgn_set_rect
gimp_progress_update
gimp_image_get_resolution
gimp_image_clean_all
libgimpmath-2.0.so.0
libm.so.6
cbrt
libgimpconfig-2.0.so.0
libgimpcolor-2.0.so.0
gimp_cmyk_set
gimp_cmyk_get_uchar
gimp_rgb_to_cmyk
gimp_rgb_to_hsl
gimp_rgb_to_hsv4
gimp_rgb_set_uchar
libgimpbase-2.0.so.0
g_string_printf
libgtk-x11-2.0.so.0
libgdk-x11-2.0.so.0
libatk-1.0.so.0
libgio-2.0.so.0
libpangoft2-1.0.so.0
libpangocairo-1.0.so.0
libgdk_pixbuf-2.0.so.0
libcairo.so.2
libpango-1.0.so.0
libfreetype.so.6
libfontconfig.so.1
libgobject-2.0.so.0
libgthread-2.0.so.0
librt.so.1
libglib-2.0.so.0
libpthread.so.0
libc.so.6
dcgettext
strncpy
bind_textdomain_codeset
strlen
__cxa_finalize
bindtextdomain
__libc_start_main
_edata
__bss_start
/usr/lib64
__libc_csu_init
__libc_csu_fini
GLIBC_2.2.5
%zL 
%rL 
%jL 
%bL 
%ZL 
%RL 
%JL 
%BL 
%:L 
%2L 
%*L 
%"L 
%zK 
%rK 
%jK 
%bK 
%ZK 
%RK 
%JK 
%BK 
%:K 
%2K 
%*K 
%"K 
%zJ 
%rJ 
%jJ 
%bJ 
%ZJ 
%RJ 
%JJ 
%BJ 
%:J 
%2J 
%*J 
%"J 
=YJ 
=BB 
fffff.
=z; 
~9Hc
~EHc
ffff.
ffff.
ffff.
~?Hc
ffff.
~)Hc
~%Hc
~%Hc
[]A\
fff.
[]A\
fff.
ATUSL
[]A\A]
ATUSL
[]A\A]
AWAVAUATUSH
t$HI
T$ f
Y%M&
.%H&
H;\$H
X[]A\A]A^A_
|$ E1
P[]A\A]A^
|$ E1
P[]A\A]A^
|$ E1
P[]A\A]A^
|$PH
l$(L
d$ A
|$0A
|$PL
t$(L
L;|$ L
[]A\A]A^A_
AUATUSH
t$ H
YD$0
H[]A\A]
AUATUSH
t$ H
YD$(
H[]A\A]
AUATUSH
t$ H
YD$ 
H[]A\A]
AWAVAUATUSH
|$ A
t$@H
H;\$
h[]A\A]A^A_
AUATUSH
[]A\A]
AUATUSH
[]A\A]
AUATUSH
[]A\A]
AWAVAUATUSH
T$0H
L$8H
t$(L
H;\$
H[]A\A]A^A_
|$PD
l$0H
\$(L
d$8L
l$@H
fff.
-Q* 
D$0H
D$(H
D$0H
D$(H
[]A\
AWAVAUATL
|$XH
=U5 
l$hH
D$`H
L$pD
t$`1
T$hH
D$PH
OT$D
t$HH
T$xH
|$XD
|$XH
\$81
D9l$D
L$pE
T$hH
D$h1
*D$pH
D$hD
T$XH
D9t$pH
d$pE
t$pA)
t$PH
D$`H
t$HL
9\$D
^D$h
D9t$p
t$tA
D9t$p
T$xH
D$`H
D$8E
Hc|$H8
L$HD
D$p1
|$DH
T$DH
D$DH
[]A\A]A^A_
L$HD
fffff.
AWAVM
T$XH
d$lH
|$8H
|$8H
|$8L
|$@H
|$8H
t$@E1
|$@I
t$HE1
|$PH
|$HL
t$PE1
|$HL
|$PH
\$lL
L$lH
|$@L
-A' 
|$@L
|$8H
HcD$lH
=u& 
5D& 
[]A\A]A^A_
|$\L
L$lH
T$XH
9T$l
\$pA
=\% 
5I$ 
l$ L
t$(L
|$0H
Background
What to decompose: 
1997
Peter Kirchgessner
plug-in-decompose
RGB*
_Decompose...
plug-in-decompose-registered
<Image>/Colors/Components
Not an RGB image.
No alpha channel available.
%s-%s.%s
%s-%s
gimp20-std-plug-ins
UTF-8
Decompose
gimp-decompose
gtk-ok
gtk-cancel
Extract Channels
Color _model:
_Decompose to layers
toggled
Can only work on RGB images.
Decomposing
source=%d type=%s 
decompose-data
green
blue
Green
Blue
RGBA
alpha
saturation
value
Saturation
Value
hue_l
saturation_l
lightness
Hue (HSL)
Saturation (HSL)
Lightness
cyan
magenta
yellow
Cyan
Magenta
Yellow
CMYK
cyan-k
magenta-k
yellow-k
black
Cyan_K
Magenta_K
Yellow_K
Alpha
YCbCr_ITU_R470
luma-y470
blueness-cb470
redness-cr470
YCbCr_ITU_R709
luma-y709
blueness-cb709
redness-cr709
YCbCr ITU R470 256
luma-y470f
blueness-cb470f
redness-cr470f
YCbCr ITU R709 256
luma-y709f
blueness-cb709f
redness-cr709f
run-mode
Input image (unused)
Input drawable
decompose-type
layers-mode
new-image
Output gray image
This function creates new gray images with different channel information in each of them
Decompose an image into separate colorspace components
Peter Kirchgessner, Clarence Risher
This function creates new gray images with different channel information in each of them. Pixels in the foreground color will appear black in all output images.  This can be used for things like crop marks that have to show up on all channels.
_Foreground as registration color
Pixels in the foreground color will appear black in all output images.  This can be used for things like crop marks that have to show up on all channels.
The run mode { RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1) }
Create channels as layers in a single image
Output gray image (N/A for single channel extract)
??5^
0@fffff:
;*3$"
decompose.debug
7zXZ
/1`(
*!g_f
~^7	
r&DF
M`Jz
QM\{
/AaV
c$T(2A
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
