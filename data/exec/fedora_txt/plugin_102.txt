__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
find_column_of_field
sheet_cell_get
cell_is_empty
value_new_error_REF
value_get_as_float
value_new_float
cell_eval_content
g_slist_reverse
g_slist_length
g_malloc
g_slist_free
g_slist_prepend
g_log
parse_database_criteria
free_criterias
g_free
value_new_error_std
value_new_error_NUM
range_var_pop
range_var_est
range_sum
range_stddev_pop
range_stddev_est
range_product
range_min
range_max
range_count
range_average
value_dup
go_plugin_depends
go_plugin_header
database_functions
libm.so.6
libc.so.6
_edata
__bss_start
_end
plugin.so
GLIBC_2.2.5
52u 
%4u 
%2u 
%*u 
%"u 
=xt 
ATSubH
=ps 
=gj 
=Oj 
 uAH
fffff.
AWAVAUATUSH
T$$H
\$LA9
t$$H
|$(D
|$(D
D9l$L
D$@H
D$01
T$8Hc
T$0Hc
D$@H
X[]A\A]A^A_
|$PL
D9l$LH
D$@H
ffffff.
\$ H
l$(L
d$0L
l$8L
t$@H
D$ L
L$4H
t$pH
D$ H
\$8H
l$@L
d$HL
l$PL
t$XL
|$`H
T$(H
t$xH
fff.
unsupported flags in database_find_values %x
@FUNCTION=DAVERAGE
@SYNTAX=DAVERAGE(database,field,criteria)
@DESCRIPTION=DAVERAGE function returns the average of the values in a list or database that match conditions specified.
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criteria are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifying a value, e.g. ``3'' or ``John''. 
Each row in @criteria specifies a separate condition. If a row in @database matches a row in @criteria, then that row is counted. Technically speaking, this a boolean OR operation between the rows in @criteria.
If @criteria specifies more than one column, then each of the conditions in the specified columns must be true for the row in @database to match. Technically speaking, this is a boolean AND operation between the columns in @criteria.
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324
In addition, the cells A9:B11 contain the following values:
Age     Salary
>40     >46000
DAVERAGE(A1:C7, "Salary", A9:A11) equals 42296.3333.
DAVERAGE(A1:C7, "Age", A9:A11) equals 39.
DAVERAGE(A1:C7, "Salary", A9:B11) equals 40782.5.
DAVERAGE(A1:C7, "Age", A9:B11) equals 36.
@SEEALSO=DCOUNT
@FUNCTION=DCOUNT
@SYNTAX=DCOUNT(database,field,criteria)
@DESCRIPTION=DCOUNT function counts the cells that contain numbers in a database that match conditions specified.
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criteria are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifying a value, e.g. ``3'' or ``John''. 
Each row in @criteria specifies a separate condition. If a row in @database matches a row in @criteria, then that row is counted. Technically speaking, this a boolean OR operation between the rows in @criteria.
If @criteria specifies more than one column, then each of the conditions in the specified columns must be true for the row in @database to match. Technically speaking, this is a boolean AND operation between the columns in @criteria.
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324
In addition, the cells A9:B11 contain the following values:
Age     Salary
>40     >46000
DCOUNT(A1:C7, "Salary", A9:A11) equals 3.
DCOUNT(A1:C7, "Salary", A9:B11) equals 2.
DCOUNT(A1:C7, "Name", A9:B11) equals 0.
@SEEALSO=DAVERAGE
@FUNCTION=DCOUNTA
@SYNTAX=DCOUNTA(database,field,criteria)
@DESCRIPTION=DCOUNTA function counts the cells that contain data in a database that match conditions specified.
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criteria are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifying a value, e.g. ``3'' or ``John''. 
Each row in @criteria specifies a separate condition. If a row in @database matches a row in @criteria, then that row is counted. Technically speaking, this a boolean OR operation between the rows in @criteria.
If @criteria specifies more than one column, then each of the conditions in the specified columns must be true for the row in @database to match. Technically speaking, this is a boolean AND operation between the columns in @criteria.
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324
In addition, the cells A9:B11 contain the following values:
Age     Salary
>40     >46000
DCOUNTA(A1:C7, "Salary", A9:A11) equals 3.
DCOUNTA(A1:C7, "Salary", A9:B11) equals 2.
DCOUNTA(A1:C7, "Name", A9:B11) equals 2.
@SEEALSO=DCOUNT
@FUNCTION=DGET
@SYNTAX=DGET(database,field,criteria)
@DESCRIPTION=DGET function returns a single value from a column that match conditions specified.
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criteria are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifying a value, e.g. ``3'' or ``John''. 
Each row in @criteria specifies a separate condition. If a row in @database matches a row in @criteria, then that row is counted. Technically speaking, this a boolean OR operation between the rows in @criteria.
If @criteria specifies more than one column, then each of the conditions in the specified columns must be true for the row in @database to match. Technically speaking, this is a boolean AND operation between the columns in @criteria.
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324
In addition, the cells A9:B11 contain the following values:
Age     Salary
>40     >46000
* If none of the items match the conditions, DGET returns #VALUE! error.
* If more than one items match the conditions, DGET returns #NUM! error.
DGET(A1:C7, "Salary", A9:A10) equals 34323.
DGET(A1:C7, "Name", A9:A10) equals "Clark".
@SEEALSO=DCOUNT
@FUNCTION=DMAX
@SYNTAX=DMAX(database,field,criteria)
@DESCRIPTION=DMAX function returns the largest number in a column that match conditions specified.
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criteria are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifying a value, e.g. ``3'' or ``John''. 
Each row in @criteria specifies a separate condition. If a row in @database matches a row in @criteria, then that row is counted. Technically speaking, this a boolean OR operation between the rows in @criteria.
If @criteria specifies more than one column, then each of the conditions in the specified columns must be true for the row in @database to match. Technically speaking, this is a boolean AND operation between the columns in @criteria.
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324
In addition, the cells A9:B11 contain the following values:
Age     Salary
>40     >46000
DMAX(A1:C7, "Salary", A9:A11) equals 47242.
DMAX(A1:C7, "Age", A9:A11) equals 45.
DMAX(A1:C7, "Age", A9:B11) equals 43.
@SEEALSO=DMIN
@FUNCTION=DMIN
@SYNTAX=DMIN(database,field,criteria)
@DESCRIPTION=DMIN function returns the smallest number in a column that match conditions specified.
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criteria are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifying a value, e.g. ``3'' or ``John''. 
Each row in @criteria specifies a separate condition. If a row in @database matches a row in @criteria, then that row is counted. Technically speaking, this a boolean OR operation between the rows in @criteria.
If @criteria specifies more than one column, then each of the conditions in the specified columns must be true for the row in @database to match. Technically speaking, this is a boolean AND operation between the columns in @criteria.
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324
In addition, the cells A9:B11 contain the following values:
Age     Salary
>40     >46000
DMIN(A1:C7, "Salary", A9:B11) equals 34323.
DMIN(A1:C7, "Age", A9:B11) equals 29.
@SEEALSO=DMAX
@FUNCTION=DPRODUCT
@SYNTAX=DPRODUCT(database,field,criteria)
@DESCRIPTION=DPRODUCT function returns the product of numbers in a column that match conditions specified.
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criteria are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifying a value, e.g. ``3'' or ``John''. 
Each row in @criteria specifies a separate condition. If a row in @database matches a row in @criteria, then that row is counted. Technically speaking, this a boolean OR operation between the rows in @criteria.
If @criteria specifies more than one column, then each of the conditions in the specified columns must be true for the row in @database to match. Technically speaking, this is a boolean AND operation between the columns in @criteria.
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324
In addition, the cells A9:B11 contain the following values:
Age     Salary
>40     >46000
DPRODUCT(A1:C7, "Age", A9:B11) equals 1247.
@SEEALSO=DSUM
@FUNCTION=DSTDEV
@SYNTAX=DSTDEV(database,field,criteria)
@DESCRIPTION=DSTDEV function returns the estimate of the standard deviation of a population based on a sample. The population consists of numbers that match conditions specified.
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criteria are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifying a value, e.g. ``3'' or ``John''. 
Each row in @criteria specifies a separate condition. If a row in @database matches a row in @criteria, then that row is counted. Technically speaking, this a boolean OR operation between the rows in @criteria.
If @criteria specifies more than one column, then each of the conditions in the specified columns must be true for the row in @database to match. Technically speaking, this is a boolean AND operation between the columns in @criteria.
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324
In addition, the cells A9:B11 contain the following values:
Age     Salary
>40     >46000
DSTDEV(A1:C7, "Age", A9:B11) equals 9.89949.
DSTDEV(A1:C7, "Salary", A9:B11) equals 9135.112506.
@SEEALSO=DSTDEVP
@FUNCTION=DSTDEVP
@SYNTAX=DSTDEVP(database,field,criteria)
@DESCRIPTION=DSTDEVP function returns the standard deviation of a population based on the entire population. The population consists of numbers that match conditions specified.
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criteria are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifying a value, e.g. ``3'' or ``John''. 
Each row in @criteria specifies a separate condition. If a row in @database matches a row in @criteria, then that row is counted. Technically speaking, this a boolean OR operation between the rows in @criteria.
If @criteria specifies more than one column, then each of the conditions in the specified columns must be true for the row in @database to match. Technically speaking, this is a boolean AND operation between the columns in @criteria.
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324
In addition, the cells A9:B11 contain the following values:
Age     Salary
>40     >46000
DSTDEVP(A1:C7, "Age", A9:B11) equals 7.
DSTDEVP(A1:C7, "Salary", A9:B11) equals 6459.5.
@SEEALSO=DSTDEV
@FUNCTION=DSUM
@SYNTAX=DSUM(database,field,criteria)
@DESCRIPTION=DSUM function returns the sum of numbers in a column that match conditions specified.
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criteria are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifying a value, e.g. ``3'' or ``John''. 
Each row in @criteria specifies a separate condition. If a row in @database matches a row in @criteria, then that row is counted. Technically speaking, this a boolean OR operation between the rows in @criteria.
If @criteria specifies more than one column, then each of the conditions in the specified columns must be true for the row in @database to match. Technically speaking, this is a boolean AND operation between the columns in @criteria.
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324
In addition, the cells A9:B11 contain the following values:
Age     Salary
>40     >46000
DSUM(A1:C7, "Age", A9:B11) equals 72.
DSUM(A1:C7, "Salary", A9:B11) equals 81565.
@SEEALSO=DPRODUCT
@FUNCTION=DVAR
@SYNTAX=DVAR(database,field,criteria)
@DESCRIPTION=DVAR function returns the estimate of variance of a population based on a sample. The population consists of numbers that match conditions specified.
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criteria are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifying a value, e.g. ``3'' or ``John''. 
Each row in @criteria specifies a separate condition. If a row in @database matches a row in @criteria, then that row is counted. Technically speaking, this a boolean OR operation between the rows in @criteria.
If @criteria specifies more than one column, then each of the conditions in the specified columns must be true for the row in @database to match. Technically speaking, this is a boolean AND operation between the columns in @criteria.
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324
In addition, the cells A9:B11 contain the following values:
Age     Salary
>40     >46000
DVAR(A1:C7, "Age", A9:B11) equals 98.
DVAR(A1:C7, "Salary", A9:B11) equals 83450280.5.
@SEEALSO=DVARP
@FUNCTION=DVARP
@SYNTAX=DVARP(database,field,criteria)
@DESCRIPTION=DVARP function returns the variance of a population based on the entire population. The population consists of numbers that match conditions specified.
@database is a range of cells in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column. 
@field specifies which column is used in the function.  If @field is an integer, for example 2, the second column is used. Field can also be the label of a column.  For example, ``Age'' refers to the column with the label ``Age'' in @database range. 
@criteria is the range of cells which contains the specified conditions.  The first row of a @criteria should contain the labels of the fields for which the criteria are for.  Cells below the labels specify conditions, for example, ``>3'' or ``<9''.  Equality condition can be given simply by specifying a value, e.g. ``3'' or ``John''. 
Each row in @criteria specifies a separate condition. If a row in @database matches a row in @criteria, then that row is counted. Technically speaking, this a boolean OR operation between the rows in @criteria.
If @criteria specifies more than one column, then each of the conditions in the specified columns must be true for the row in @database to match. Technically speaking, this is a boolean AND operation between the columns in @criteria.
@EXAMPLES=
Let us assume that the range A1:C7 contain the following values:
Name    Age     Salary
John    34      54342
Bill    35      22343
Clark   29      34323
Bob     43      47242
Susan   37      42932
Jill    45      45324
In addition, the cells A9:B11 contain the following values:
Age     Salary
>40     >46000
DVARP(A1:C7, "Age", A9:B11) equals 49.
DVARP(A1:C7, "Salary", A9:B11) equals 41725140.25.
@SEEALSO=DVAR
@FUNCTION=GETPIVOTDATA
@SYNTAX=GETPIVOTDATA(pivot_table,field_name)
@DESCRIPTION=GETPIVOTDATA function fetches summary data from a pivot table. @pivot_table is a cell range containing the pivot table. @field_name is the name of the field of which you want the summary data.
* If the summary data is unavailable, GETPIVOTDATA returns #REF! error.
@EXAMPLES=
@SEEALSO=
goffice
gnumeric
1.6.3
daverage
database,field,criteria
dcount
dcounta
dget
dmax
dmin
dproduct
dstdev
dstdevp
dsum
dvar
dvarp
getpivotdata
pivot_table,field_name
munG
plugin.so.debug
m?'o
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.bss
.gnu_debuglink
