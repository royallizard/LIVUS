/lib64/ld-linux-x86-64.so.2
libgcrypt.so.11
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
gcry_randomize
gcry_mpi_copy
gcry_cipher_encrypt
gcry_md_hash_buffer
gcry_cipher_close
gcry_md_setkey
gcry_sexp_find_token
gcry_md_read
gcry_check_version
gcry_cipher_setiv
gcry_mpi_get_nbits
gcry_md_get_algo_dlen
gcry_free
gcry_sexp_build
gcry_cipher_algo_info
gcry_sexp_release
gcry_pk_encrypt
gcry_cipher_setkey
gcry_sexp_nth_mpi
gcry_md_write
gcry_mpi_add_ui
gcry_md_close
gcry_mpi_aprint
gcry_mpi_release
gcry_create_nonce
gcry_control
gcry_mpi_scan
gcry_mpi_mul_2exp
gcry_md_ctl
gcry_md_open
gcry_mpi_new
gcry_cipher_decrypt
gcry_cipher_open
gcry_mpi_set_ui
gcry_mpi_powm
libdl.so.2
libgpg-error.so.0
_fini
libgnutls.so.28
gnutls_x509_crt_check_issuer
gnutls_x509_crt_export
gnutls_x509_crt_deinit
gnutls_x509_crt_import
gnutls_x509_crt_get_pk_algorithm
gnutls_x509_crt_init
gnutls_malloc
gnutls_x509_crt_get_expiration_time
gnutls_free
gnutls_calloc
gnutls_global_init
gnutls_x509_crt_get_pk_rsa_raw
gnutls_x509_crt_get_activation_time
gnutls_x509_crt_verify
gnutls_x509_crt_list_import
libc.so.6
socket
fflush
strcpy
__printf_chk
exit
fopen
strncmp
inet_aton
__strdup
connect
__fdelt_chk
inet_ntoa
error
inet_ntop
signal
strncpy
puts
fork
__stack_chk_fail
unlink
putchar
select
realloc
abort
stdin
getpid
strftime
__assert_fail
strtol
feof
strlen
send
openlog
memset
__errno_location
bind
chdir
memcmp
__syslog_chk
unsetenv
poll
__fprintf_chk
stdout
recv
memcpy
fclose
__memmove_chk
__vsnprintf_chk
setsockopt
getpass
strcasecmp
getenv
recvfrom
stderr
ioctl
system
gethostbyname
index
strncasecmp
__fxstat
__getdelim
fwrite
sigaction
__memcpy_chk
localtime
strchr
getsockname
sendto
__cxa_finalize
setsid
fcntl
memmove
uname
__asprintf_chk
__libc_start_main
stpcpy
_edata
__bss_start
_end
GNUTLS_1_4
GLIBC_2.14
GLIBC_2.3.4
GLIBC_2.8
GLIBC_2.15
GLIBC_2.4
GLIBC_2.2.5
GCRYPT_1.2
AVAUA
ATUSH
X[]A\A]A^A_H
AWAVAUATUH
\$HI
|$Hf
L$HH
D$HH
D$PH
D$xH
D$`H
\$HH
|$PH
|$PH
D$8f.
L$pH
D$h1
\$01
t$0H
t$8H
t$(H
t$@H
D$XH
t$HH
t$P1
t$xL
\$HH
t$HH
T$PH
|$HH
|$PH
|$PH
|$PH
t$PH
t$PH
|$PH
|$PH
\$HE1
|$PH
[]A\A]A^A_
D$ A
L$HI
T$"I
D$(H
|$PH
L$0H
L$8H
L$@H
L$Xf
|$PH
\$0H
t$xH
|$H1
|$PH
t$8H
|$HH
|$PH
\$@H
D$$A
w0f=
|$HH
|$PH
t$XH
D$HH
|$HE1
L$(H
D$$u
L$`H
|$PH
|$PH
|$HE1
|$PH
t$PH
|$H1
|$HH
|$PH
|$PH
|$HE1
|$PH
|$PH
|$HH
\$HE1
t$x1
|$HH
|$HH
fffff.
AUATA
D$(1
L$(dH3
8[]A\A]
ffffff.
ffffff.
D$(1
L$(dH3
8[]A\A]
AUATI
[]A\A]
ffff.
ATUH
[]A\
AWAVAUATUH
[]A\A]A^A_
E E1
ATUSH
w?f.
t$E1
[]A\A]
AWAVI
ATUSH
([]A\A]A^A_
	w#f=
	wGf
@t?f
[]A\A]A^A_
AWAVI
AUATI
D$(H
t$'H
D$(H
T$(H
H[]A\A]A^A_
D$8H
D$8H
T$8L9
[]A\A]A^A_
D$(H
D$(L
D$8H
t$8L
D$(H
|$'D
T$(I
D$(H
D$(I
T$(I
H;D$8
t$(H
T$(H
T$(I
D$(H
D$(I
T$(H
H;T$8
t$(H
D$(L
D$8A
t$(H
T$(I
|$0L
D$0A
D$(I
t$(H
T$(H)
D$(H
D$(I
T$(I
t$(H
T$(H)
t$(H
T$(H
D$(I
D$(H
D$(I
D$(H
t$01
t$(H
\$(L
t$(H
H)D$8
t$0t*
T$(I
t$(H
T$(H
D$(I
T$(L
T$(I
D$8L
t$(A
fffff.
ffff.
[]A\
[]A\A]
ffffff.
fffff.
AUATUH
[]A\A]
[]A\A]
L;d$
ffffff.
ATUH
L+d$
D$ H)
D$ H)
D$ H)
D$ H)
D$ I
t$ 1
8[]A\A]A^A_
D$ H+D$
AVAUA
[]A\A]A^A_
D$81
|$$;{$uy
L$8dH3
H[]A\A]
AWAVAUATUSH
[]A\A]A^A_
D$(1
L$(dH3
0[]A\A]A^
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
tWHc
t"[H
ffffff.
D$81
D$	2
FIE1
D$ 1
t$ H
|$"H
D$8dH3
AWAVAUATUSH
D$hH
C49C0
Hc{4
t0Hc
C49C0
D$8 
D$0	
D$0H
D$8H
D$pH
T$`D
L$,D
T$`H
L$,D
t$0H
{49{0t
T$HH
t$@1
gfffH
Hc{4
Hc{09
T$dE
C49C0t
H;t$X
D$XH9
L$ H
gfffH
L$ Hc
D$PH9
|$hH
[]A\A]A^A_
H;L$P
5c`!
L$ L
L$ L
t$pH
\$ L
\$ A
T$ D
T$ D
H;t$P
L$ H
L$ H
D$8 
D$0	
L$ H
D$0H
L$ H
D$8H
L$XH
K fA
L$hH
[]A\
ffff.
ATUHc
t$Lc
[]A\
[]A\
fff.
AWAVAUATU
|$(H
D$ t
stdif
D$8E1
D$0H
t$0~
-QC!
L$ H
t$0H
8-tuH
H[]A\A]A^A_
|$(1
L$ H
H[]A\A]A^A_
H[]A\A]A^A_
=At!
[]A\A]
[]A\A]
fffff.
AWAVAUATUSH
D9$$
D9,$
l$ f
D9$$
=Hq!
D$(H
D$ H
8[]A\A]A^A_
8pu!
T$ H
T$ K
D$ H
-w?!
fff.
ATUH
[]A\A]
]A\A]
fff.
ATU1
[]A\A]
[]A\
-wB!
ATUSH
[]A\A]
AUATUSH
D$ H
[]A\A]
tdrrA
[]A\A]A^A_
AVAUI
ATUSH
[]A\A]A^A_
ffff.
AWAVAUI
l$0H
t$PI
D$0H
t$pH
D$PH
D$XH
|$(1
|$(L
|$(I
[]A\A]A^A_
fffff.
D$PL
L$Xt:
)D$`
)L$p
[]A\
t$ H
fffff.
AUATUSH
d$0I
3txI9
T$0H)
[]A\A]A^A_
UStd
~%f.
[]A\
[]A\
AUATI
([]A\A]
t$ H
T$(1
AWAVAUATI
t$(H
D$HH
|$@H
t$$E1
-N.!
D$$D
|$@H
D$PH
D$@%
h[]A\A]A^A_
-$,!
[]A\A]A^A_
t$8H
D$8H
D$PH
D$0I
|$01
AWAVAUATUL
T$`H
t$PH
L$XH
T$PH
|$0E1
|$(H
|$ H
|$@H
|$0H
|$8H
|$PH
|$`L
x[]A\A]A^A_
L$hH
T$`H
|$8E1
L$0L
D$8H
|$@E1
L$@H
|$ H
t$ H
|$(H
T$HH
l$HI
[]A\A]A^A_
HcD$HH
AWAVAUATI
D$(L
|$(H
|$(1
[]A\A]A^A_
|$(H
|$(1
D$(A
|$(1
|$(M
|$(M
|$(A
H[]A\A]A^A_
D$4u
T$4L
T$(L
L$ H
|$8H
L$ L
T$(t.H
|$8L
L$(L
T$ L
L$(L
T$ L
|$8H
|$81
|$81
AUATUSH
[]A\A]A^
AUATA
D$(1
L$(dH3
0[]A\A]A^
[]A\A]
AWAVAUATUSH
t$ L
8[]A\A]A^A_
t$ H
-}?!
-W>!
t$ H
T$(H
t$(H
T$(H
t$(H
T$(H
t$(H
T$(H
t$(H
T$(H
t$(H
T$(H
t$(H
t$ H
-'8!
t$ H
AUATUSH
[]A\A]
[]A\A]
AVAUATUSH
D$@H
L$(I
D$(L
D$`H
D$`H
D$`H
D$`H
L$hH
D$`H
D$xI
d$PE
T$PE1
T$\1
T$\1
T$PE1
T$PE1
T$\1
t$xH
L$8H
\$0H
8b~+H
T$0H
t$PHc
|$ H
D$8I
D$8L
\$0H
WhI;
t$ I
[]A\A]A^A_
D$HH
L$hH
|$@H
D$HL
L$hH
|$@A
|$ H
l$0H
L$tH
GHf=
t$ H
t$ H
AWAVAUM
L$ H
t$,L
D$7H
D$,H
|$8H
T$ H
|$8L
|$8L
|$81
|$81
L;4$
[]A\A]A^A_
AWAVA
ATUH
D$h1
t$ H
HcD$
d$@E1
H;D$
L$(H
L9l$ t
Hc\$4
L9|$8}5L+|$8Ai
\$hdH3
x[]A\A]A^A_
t$ H
|$HH
L9|$8
Hc\$4
5j	!
[]A\A]A^A_
`ucH
D$H1
|$8H
|$8H
D$@D
D$AD
|$8L
T$0H
t$(L
T$0H
t$(H
|$(H
T$01
|$81
|$81
T$ H
T$ H
D$HdH3
X[]A\A]A^A_
|$8H
ffff.
ATUH
D$H1
\$(L
D$HdH3
P[]A\
|$,H
8[]A\A]
AWAVAUATUSH
\$LI
D$X1
L$ H
t$@H
L$0I
t$LH
D$PH
|$hH
L$ H
D$8M)
D$0H
T$(L
D$0L
L$ H
|$hH
|$`I
t$pHc
t$hE1
|$ E1
|$ H
D$ 1
l$LH
L$(H
L$0H
D$@H
|$ H
|$`H
l$hH
l$xE
T$PE
D$ H
L$PH
|$ H
L$XH
D$ D
D$hH
D$`H
\$`H
|$ A
|$`L
|$ Hc
\$ f
D$ H
[]A\A]A^A_
|$ A
D$ H
t$(H
|$ H
L$81
D$ H
L$@1
L$ H
tPfD9
[]A\A]
[]A\A]
fffff.
ffffff.
gfff
AWAVAUI
D$h1
L$@E1
|$@t3H
D$hdH3
x[]A\A]A^A_
D$ f=(
u2fA
D$HA
|$@H
D$(D
T$0u
T$ E1
|$8D
D$(1
D$(1
L$8D;H
T$ E1
T$ M
T$(H
D$ H
t$ H
D$(L
L$0Hc
D$(H
T$ H
L$0L
L$0L
D$(Hc
T$ H
T$0H
L$<;H
D$<f
T$ E1
t$(H
L$HH
[]A\A]A^A_
/dev/net/tun
can't open /dev/net/tun, check that it is either device char 10 200 or (with DevFS) a symlink to ../misc/net/tun (not misc/net/tun)
 (ISAKMP_MODECFG_CFG_REQUEST)
 (ISAKMP_MODECFG_CFG_REPLY)
 (ISAKMP_MODECFG_CFG_SET)
 (ISAKMP_MODECFG_CFG_ACK)
 (IPSEC_AUTH_HMAC_MD5)
 (IPSEC_AUTH_HMAC_SHA)
 (IPSEC_AUTH_DES_MAC)
 (IPSEC_AUTH_KPDK)
 (IPSEC_ENCAP_TUNNEL)
 (IPSEC_ENCAP_TRANSPORT)
 (IPSEC_ENCAP_UDP_TUNNEL)
 (IPSEC_ENCAP_UDP_TRANSPORT)
 (IPSEC_ENCAP_UDP_TUNNEL_OLD)
 (IPSEC_LIFE_SECONDS)
 (IPSEC_LIFE_K)
 (ISAKMP_IPSEC_IPCOMP_OUI)
 (ISAKMP_IPSEC_IPCOMP_LZS)
 (ISAKMP_IPSEC_IPCOMP_V42BIS)
 (ISAKMP_IPSEC_ESP_RESERVED)
 (ISAKMP_IPSEC_ESP_DES_IV64)
 (ISAKMP_IPSEC_ESP_DES)
 (ISAKMP_IPSEC_ESP_3DES)
 (ISAKMP_IPSEC_ESP_RC5)
 (ISAKMP_IPSEC_ESP_IDEA)
 (ISAKMP_IPSEC_ESP_CAST)
 (ISAKMP_IPSEC_ESP_BLOWFISH)
 (ISAKMP_IPSEC_ESP_3IDEA)
 (ISAKMP_IPSEC_ESP_DES_IV32)
 (ISAKMP_IPSEC_ESP_RC4)
 (ISAKMP_IPSEC_ESP_NULL)
 (ISAKMP_IPSEC_ESP_AES)
 (ISAKMP_IPSEC_ESP_AES_MARS)
 (ISAKMP_IPSEC_ESP_AES_RC6)
 (ISAKMP_IPSEC_AH_RESERVED)
 (ISAKMP_IPSEC_AH_MD5)
 (ISAKMP_IPSEC_AH_SHA)
 (ISAKMP_IPSEC_AH_DES)
 (ISAKMP_IPSEC_AH_SHA2_256)
 (ISAKMP_IPSEC_AH_SHA2_384)
 (ISAKMP_IPSEC_AH_SHA2_512)
 (ISAKMP_IPSEC_AH_RIPEMD)
 (ISAKMP_IPSEC_KEY_RESERVED)
 (ISAKMP_IPSEC_KEY_IKE)
 (ISAKMP_IPSEC_PROTO_ISAKMP)
 (ISAKMP_IPSEC_PROTO_IPCOMP)
 (ISAKMP_IPSEC_PROTO_MODECFG)
 (ISAKMP_IPSEC_ID_RESERVED)
 (ISAKMP_IPSEC_ID_IPV4_ADDR)
 (ISAKMP_IPSEC_ID_FQDN)
 (ISAKMP_IPSEC_ID_USER_FQDN)
 (ISAKMP_IPSEC_ID_IPV6_ADDR)
 (ISAKMP_IPSEC_ID_KEY_ID)
 (ISAKMP_IPSEC_SIT_SECRECY)
 (ISAKMP_IPSEC_SIT_INTEGRITY)
 (IKE_LIFE_TYPE_SECONDS)
 (IKE_LIFE_TYPE_K)
 (IKE_GROUP_TYPE_MODP)
 (IKE_GROUP_TYPE_ECP)
 (IKE_GROUP_TYPE_EC2N)
 (IKE_GROUP_MODP_768)
 (IKE_GROUP_MODP_1024)
 (IKE_GROUP_EC2N_155)
 (IKE_GROUP_EC2N_185)
 (IKE_GROUP_MODP_1536)
 (IKE_GROUP_EC2N_163sect)
 (IKE_GROUP_EC2N_163K)
 (IKE_GROUP_EC2N_283sect)
 (IKE_GROUP_EC2N_283K)
 (IKE_GROUP_EC2N_409sect)
 (IKE_GROUP_EC2N_409K)
 (IKE_GROUP_EC2N_571sect)
 (IKE_GROUP_EC2N_571K)
 (IKE_AUTH_PRESHARED)
 (IKE_AUTH_DSS)
 (IKE_AUTH_RSA_SIG)
 (IKE_AUTH_RSA_ENC)
 (IKE_AUTH_RSA_ENC_2)
 (IKE_AUTH_EL_GAMAL_ENC)
 (IKE_AUTH_EL_GAMAL_ENC_REV)
 (IKE_AUTH_ECDSA_SIG)
 (IKE_AUTH_HybridInitRSA)
 (IKE_AUTH_HybridRespRSA)
 (IKE_AUTH_HybridInitDSS)
 (IKE_AUTH_HybridRespDSS)
 (IKE_AUTH_XAUTHInitDSS)
 (IKE_AUTH_XAUTHRespDSS)
 (IKE_AUTH_XAUTHInitRSA)
 (IKE_AUTH_XAUTHRespRSA)
 (IKE_HASH_MD5)
 (IKE_HASH_SHA)
 (IKE_HASH_TIGER)
 (IKE_HASH_SHA2_256)
 (IKE_HASH_SHA2_384)
 (IKE_HASH_SHA2_512)
 (IKE_ENC_NO_CBC)
 (IKE_ENC_DES_CBC)
 (IKE_ENC_IDEA_CBC)
 (IKE_ENC_BLOWFISH_CBC)
 (IKE_ENC_RC5_R16_B16_CBC)
 (IKE_ENC_3DES_CBC)
 (IKE_ENC_CAST_CBC)
 (IKE_ENC_AES_CBC)
 (IKE_ATTRIB_ENC)
 (IKE_ATTRIB_HASH)
 (IKE_ATTRIB_AUTH_METHOD)
 (IKE_ATTRIB_GROUP_DESC)
 (IKE_ATTRIB_GROUP_TYPE)
 (IKE_ATTRIB_GROUP_PRIME)
 (IKE_ATTRIB_GROUP_GEN_1)
 (IKE_ATTRIB_GROUP_GEN_2)
 (IKE_ATTRIB_GROUP_CURVE_A)
 (IKE_ATTRIB_GROUP_CURVE_B)
 (IKE_ATTRIB_LIFE_TYPE)
 (IKE_ATTRIB_LIFE_DURATION)
 (IKE_ATTRIB_PRF)
 (IKE_ATTRIB_KEY_LENGTH)
 (IKE_ATTRIB_FIELD_SIZE)
 (IKE_ATTRIB_GROUP_ORDER)
 (IKE_ATTRIB_BLOCK_SIZE)
 (IKE_ATTRIB_NORTEL_UNKNOWN)
 (ISAKMP_CERT_NONE)
 (ISAKMP_CERT_PKCS7_X509)
 (ISAKMP_CERT_PGP)
 (ISAKMP_CERT_DNS_SIG_KEY)
 (ISAKMP_CERT_X509_SIG)
 (ISAKMP_CERT_CRL)
 (ISAKMP_CERT_ARL)
 (ISAKMP_CERT_SPKI)
 (ISAKMP_CERT_X509_ATTRIBUTE)
 (IKE_DELETE_SERVER_SHUTDOWN)
 (IKE_DELETE_SERVER_REBOOT)
 (IKE_DELETE_BY_USER_COMMAND)
 (IKE_DELETE_BY_ERROR)
 (IKE_DELETE_NO_ERROR)
 (IKE_DELETE_IDLE_TIMEOUT)
 (IKE_DELETE_CERT_EXPIRED)
 (DEL_REASON_RESET_SADB)
 (ISAKMP_N_DOI_NOT_SUPPORTED)
 (ISAKMP_N_INVALID_COOKIE)
 (ISAKMP_N_INVALID_FLAGS)
 (ISAKMP_N_INVALID_SPI)
 (ISAKMP_N_PAYLOAD_MALFORMED)
 (ISAKMP_N_INVALID_SIGNATURE)
 (ISAKMP_N_CONNECTED)
 (ISAKMP_N_CISCO_HELLO)
 (ISAKMP_N_CISCO_WWTEBR)
 (ISAKMP_N_CISCO_SHUT_UP)
 (ISAKMP_N_R_U_THERE)
 (ISAKMP_N_R_U_THERE_ACK)
 (ISAKMP_DOI_GENERIC)
 (ISAKMP_DOI_IPSEC)
 (ISAKMP_EXCHANGE_NONE)
 (ISAKMP_EXCHANGE_BASE)
 (ISAKMP_EXCHANGE_IDENTITY)
 (ISAKMP_EXCHANGE_AUTH_ONLY)
 (ISAKMP_EXCHANGE_AGGRESSIVE)
 (ISAKMP_EXCHANGE_IKE_QUICK)
 (ISAKMP_PAYLOAD_NONE)
 (ISAKMP_PAYLOAD_SA)
 (ISAKMP_PAYLOAD_P)
 (ISAKMP_PAYLOAD_T)
 (ISAKMP_PAYLOAD_KE)
 (ISAKMP_PAYLOAD_ID)
 (ISAKMP_PAYLOAD_CERT)
 (ISAKMP_PAYLOAD_CR)
 (ISAKMP_PAYLOAD_HASH)
 (ISAKMP_PAYLOAD_SIG)
 (ISAKMP_PAYLOAD_NONCE)
 (ISAKMP_PAYLOAD_N)
 (ISAKMP_PAYLOAD_D)
 (ISAKMP_PAYLOAD_VID)
 (ISAKMP_PAYLOAD_SAK)
 (ISAKMP_PAYLOAD_SAT)
 (ISAKMP_PAYLOAD_KD)
 (ISAKMP_PAYLOAD_SEQNO)
 (ISAKMP_PAYLOAD_POP)
 (ISAKMP_PAYLOAD_NAT_D)
 (ISAKMP_PAYLOAD_NAT_OA)
 (ISAKMP_PAYLOAD_NAT_D_OLD)
 (ISAKMP_PAYLOAD_FRAG)
 (ISAKMP_MODECFG_ATTRIB_INTERNAL_IP4_ADDRESS)
 (ISAKMP_MODECFG_ATTRIB_INTERNAL_IP4_NETMASK)
 (ISAKMP_MODECFG_ATTRIB_INTERNAL_IP4_DNS)
 (ISAKMP_MODECFG_ATTRIB_INTERNAL_IP4_NBNS)
 (ISAKMP_MODECFG_ATTRIB_INTERNAL_ADDRESS_EXPIRY)
 (ISAKMP_MODECFG_ATTRIB_INTERNAL_IP4_DHCP)
 (ISAKMP_MODECFG_ATTRIB_APPLICATION_VERSION)
 (ISAKMP_MODECFG_ATTRIB_INTERNAL_IP6_ADDRESS)
 (ISAKMP_MODECFG_ATTRIB_INTERNAL_IP6_NETMASK)
 (ISAKMP_MODECFG_ATTRIB_INTERNAL_IP6_DNS)
 (ISAKMP_MODECFG_ATTRIB_INTERNAL_IP6_NBNS)
 (ISAKMP_MODECFG_ATTRIB_INTERNAL_IP6_DHCP)
 (ISAKMP_MODECFG_ATTRIB_INTERNAL_IP4_SUBNET)
 (ISAKMP_MODECFG_ATTRIB_SUPPORTED_ATTRIBUTES)
 (ISAKMP_MODECFG_ATTRIB_INTERNAL_IP6_SUBNET)
 (ISAKMP_XAUTH_06_ATTRIB_TYPE)
 (ISAKMP_XAUTH_06_ATTRIB_USER_NAME)
 (ISAKMP_XAUTH_06_ATTRIB_USER_PASSWORD)
 (ISAKMP_XAUTH_06_ATTRIB_PASSCODE)
 (ISAKMP_XAUTH_06_ATTRIB_MESSAGE)
 (ISAKMP_XAUTH_06_ATTRIB_CHALLENGE)
 (ISAKMP_XAUTH_06_ATTRIB_DOMAIN)
 (ISAKMP_XAUTH_06_ATTRIB_STATUS)
 (ISAKMP_XAUTH_06_ATTRIB_NEXT_PIN)
 (ISAKMP_XAUTH_06_ATTRIB_ANSWER)
 (ISAKMP_MODECFG_ATTRIB_CISCO_BANNER)
 (ISAKMP_MODECFG_ATTRIB_CISCO_SAVE_PW)
 (ISAKMP_MODECFG_ATTRIB_CISCO_DEF_DOMAIN)
 (ISAKMP_MODECFG_ATTRIB_CISCO_SPLIT_DNS)
 (ISAKMP_MODECFG_ATTRIB_CISCO_SPLIT_INC)
 (ISAKMP_MODECFG_ATTRIB_CISCO_UDP_ENCAP_PORT)
 (ISAKMP_MODECFG_ATTRIB_CISCO_UNKNOWN)
 (ISAKMP_MODECFG_ATTRIB_CISCO_DO_PFS)
 (ISAKMP_MODECFG_ATTRIB_CISCO_FW_TYPE)
 (ISAKMP_MODECFG_ATTRIB_CISCO_BACKUP_SERVER)
 (ISAKMP_MODECFG_ATTRIB_CISCO_DDNS_HOSTNAME)
 (ISAKMP_XAUTH_ATTRIB_CISCOEXT_VENDOR)
 (IPSEC_ENCAP_UDP_TRANSPORT_OLD)
 (ISAKMP_IPSEC_IPCOMP_RESERVED)
 (ISAKMP_IPSEC_IPCOMP_DEFLATE)
 (ISAKMP_IPSEC_ATTRIB_SA_LIFE_TYPE)
 (ISAKMP_IPSEC_ATTRIB_SA_LIFE_DURATION)
 (ISAKMP_IPSEC_ATTRIB_GROUP_DESC)
 (ISAKMP_IPSEC_ATTRIB_ENCAP_MODE)
 (ISAKMP_IPSEC_ATTRIB_AUTH_ALG)
 (ISAKMP_IPSEC_ATTRIB_KEY_LENGTH)
 (ISAKMP_IPSEC_ATTRIB_KEY_ROUNDS)
 (ISAKMP_IPSEC_ATTRIB_COMP_DICT_SIZE)
 (ISAKMP_IPSEC_ATTRIB_COMP_PRIVATE_ALG)
 (ISAKMP_IPSEC_ATTRIB_ECN_TUNNEL)
 (ISAKMP_IPSEC_ESP_AES_128_CTR)
 (ISAKMP_IPSEC_ESP_AES_RIJNDAEL)
 (ISAKMP_IPSEC_ESP_AES_SERPENT)
 (ISAKMP_IPSEC_ESP_AES_TWOFISH)
 (ISAKMP_IPSEC_PROTO_RESERVED)
 (ISAKMP_IPSEC_PROTO_IPSEC_AH)
 (ISAKMP_IPSEC_PROTO_IPSEC_ESP)
 (ISAKMP_IPSEC_ID_IPV4_ADDR_SUBNET)
 (ISAKMP_IPSEC_ID_IPV6_ADDR_SUBNET)
 (ISAKMP_IPSEC_ID_IPV4_ADDR_RANGE)
 (ISAKMP_IPSEC_ID_IPV6_ADDR_RANGE)
 (ISAKMP_IPSEC_ID_DER_ASN1_DN)
 (ISAKMP_IPSEC_ID_DER_ASN1_GN)
 (ISAKMP_IPSEC_SIT_IDENTITY_ONLY)
 (IKE_AUTH_XAUTHInitPreShared)
 (IKE_AUTH_XAUTHRespPreShared)
 (IKE_AUTH_XAUTHInitRSAEncryption)
 (IKE_AUTH_XAUTHRespRSAEncryption)
 (IKE_AUTH_XAUTHInitRSARevisedEncryption)
 (IKE_AUTH_XAUTHRespRSARevisedEncryption)
 (ISAKMP_CERT_X509_KEX_EXCHANGE)
 (ISAKMP_CERT_KERBEROS_TOKENS)
 (IKE_DELETE_MAX_CONNECT_TIME)
 (IKE_DELETE_P2_PROPOSAL_MISMATCH)
 (IKE_DELETE_FIREWALL_MISMATCH)
 (IKE_DELETE_BY_EXPIRED_LIFETIME)
 (ISAKMP_N_INVALID_PAYLOAD_TYPE)
 (ISAKMP_N_SITUATION_NOT_SUPPORTED)
 (ISAKMP_N_INVALID_MAJOR_VERSION)
 (ISAKMP_N_INVALID_MINOR_VERSION)
 (ISAKMP_N_INVALID_EXCHANGE_TYPE)
 (ISAKMP_N_INVALID_MESSAGE_ID)
 (ISAKMP_N_INVALID_PROTOCOL_ID)
 (ISAKMP_N_INVALID_TRANSFORM_ID)
 (ISAKMP_N_ATTRIBUTES_NOT_SUPPORTED)
 (ISAKMP_N_NO_PROPOSAL_CHOSEN)
 (ISAKMP_N_BAD_PROPOSAL_SYNTAX)
 (ISAKMP_N_INVALID_KEY_INFORMATION)
 (ISAKMP_N_INVALID_ID_INFORMATION)
 (ISAKMP_N_INVALID_CERT_ENCODING)
 (ISAKMP_N_INVALID_CERTIFICATE)
 (ISAKMP_N_CERT_TYPE_UNSUPPORTED)
 (ISAKMP_N_INVALID_CERT_AUTHORITY)
 (ISAKMP_N_INVALID_HASH_INFORMATION)
 (ISAKMP_N_AUTHENTICATION_FAILED)
 (ISAKMP_N_ADDRESS_NOTIFICATION)
 (ISAKMP_N_NOTIFY_SA_LIFETIME)
 (ISAKMP_N_CERTIFICATE_UNAVAILABLE)
 (ISAKMP_N_UNSUPPORTED_EXCHANGE_TYPE)
 (ISAKMP_N_UNEQUAL_PAYLOAD_LENGTHS)
 (ISAKMP_N_IPSEC_RESPONDER_LIFETIME)
 (ISAKMP_N_IPSEC_REPLAY_STATUS)
 (ISAKMP_N_IPSEC_INITIAL_CONTACT)
 (ISAKMP_N_IOS_KEEP_ALIVE_REQ)
 (ISAKMP_N_IOS_KEEP_ALIVE_ACK)
 (ISAKMP_N_CISCO_LOAD_BALANCE)
 (ISAKMP_N_CISCO_PRESHARED_KEY_HASH)
 (ISAKMP_EXCHANGE_INFORMATIONAL)
 (ISAKMP_EXCHANGE_MODECFG_TRANSACTION)
 (ISAKMP_EXCHANGE_IKE_NEW_GROUP)
 (ISAKMP_PAYLOAD_MODECFG_ATTR)
alloc of %lud bytes failed
malloc of %lu bytes failed
t.attributes.type
(not dumping xauth data)
t.attributes.u.attr_16
t.attributes.u.lots.length
t.attributes.u.acl.addr
t.attributes.u.acl.mask
t.attributes.u.acl.protocol
t.attributes.u.acl.sport
t.attributes.u.acl.dport
t.attributes.u.lots.data
next_type
sa.doi
sa.situation
p.number
p.prot_id
p.spi_size
p.spi
t.number
t.id
ke.data
id.type
id.protocol
id.port
id.data
cert.encoding
cert.data
n.doi
n.protocol
n.spi_length
n.type
n.spi
n.data
d.doi
d.spi_length
d.num_spi
d.spi
modecfg.type
modecfg.id
UNKNOWN.data
DONE PARSING PAYLOAD type
BEGIN_PARSE
Recieved Packet Len: %zu
i_cookie
r_cookie
payload
isakmp_version
exchange_type
flags
message_id
PARSE_OK
isakmp-pkt.c
blksz != 0
|S5v
flatten_isakmp_packet
(not dumping xauth data length)
packet to short: len = %lld < min = %lld
isakmp length does not match packet length: isakmp = %lld != datalen = %lld
size = %ld, blksz = %ld, padding = %ld
 sending: ========================>
tunip.c
md_ctx != ((void *)0)
ret == 0
recvfrom: %m
packet from unknown host %s
Packet too short
HMAC mismatch in ESP mode
Inconsistent padlen
Inconsistent next_header %d
pad len: %d, next_header: %d
Bad padding
%F %T
 [%s]
sending ESP packet (after ah)
udp sendto: %m
esp sendto: %m
rx.key_cry
rx.key_md
tx.key_cry
tx.key_md
remote -> local spi: %#08x
local -> remote spi: %#08x
/dev/null
VPNC started in foreground...
vpnc
keepalive sendto: %m
select: %m
Rx pkt
ARP reply
read: %m
routing loop to %s
unknown spi %#08x from peer
truncated in: %d -> %d
Tx pkt
connection terminated by peer
terminated by signal: %d
packet too short. got %zd, expected %d
payload len %d not a multiple of algorithm block size %lu
receiving ESP packet (before decrypt)
receiving ESP packet (after decrypt)
UDP NAT keepalive packet received
packet too short from %s. got %zd, expected %d
sending packet: len = %d, padding = %lu
sending ESP packet (before crypt)
sending ESP packet (after crypt)
udp truncated out (%lld out of %d)
esp truncated out (%lld out of %d)
Warning, could not fork the child process!
VPNC started in background (pid: %d)...
can't open pidfile %s for writing
lifetime status: %ld of %u seconds used, %u|%u of %u kbytes used
received something on ike fd..
connection terminated by dead peer detection
received update probe from peer
hmac_compute
server
10000
/etc/ssl/certs
/etc/vpnc/vpnc-script
/var/run/vpnc/pid
cisco
0.0.0.0/0.0.0.0
/etc/vpnc/
%s%s%s
(configfile only option)
Options:
  %s %s
      
%s%.*s
    Default: %s
  conf-variable: %s%s
IPSec gateway 
couldn't open `%s'
can't allocate memory
reading `%s'
%s: %02x%s
%s: %04x%s
%s: %08x%s
%s:%s
%02x
Supported DH-Groups:
Supported Hash-Methods:
Supported Encryptions:
Supported Auth-Methods:
--print-config
--long-help
%s: unknown option %s
/etc/vpnc/default.conf
/etc/vpnc.conf
cert
hybrid
none
force-natt
cisco-udp
netscreen
Enter IPSec gateway address: 
Enter IPSec ID for %s: 
Enter username for %s: 
Enter password for %s@%s: 
vpnc.conf:
missing IPSec gatway address
missing IPSec ID
missing IPSec secret
missing Xauth username
missing Xauth password
--help
--version
--gateway
<ip/hostname>
IP/name of your IPSec gateway
--id
IPSec ID 
<ASCII string>
your group name
IPSec secret 
IPSec obfuscated secret 
<hex string>
--username
Xauth username 
your username
Xauth password 
your password (cleartext)
Xauth obfuscated password 
your password (obfuscated)
--domain
Domain 
--xauth-inter
Xauth interactive
--vendor
Vendor 
<cisco/netscreen>
vendor of your IPSec gateway
--natt-mode
NAT Traversal Mode 
--script
Script 
<command>
--dh
IKE DH Group 
<dh1/dh2/dh5>
name of the IKE DH Group
--pfs
Perfect Forward Secrecy 
<nopfs/dh1/dh2/dh5/server>
--enable-1des
Enable Single DES
--enable-no-encryption
Enable no encryption
--application-version
Application version 
--ifname
Interface name 
--ifmode
Interface mode 
<tun/tap>
--debug
Debug 
<0/1/2/3/99>
--no-detach
No Detach
--pid-file
Pidfile 
<filename>
--local-addr
Local Addr 
--local-port
Local Port 
<0-65535>
--udp-port
Cisco UDP Encapsulation Port 
--dpd-idle
DPD idle timeout (our side) 
<0,10-86400>
--non-inter
Noninteractive
--auth-mode
IKE Authmode 
<psk/cert/hybrid>
--ca-file
CA-File 
--ca-dir
CA-Dir 
<directory>
--target-network
IPSEC target network 
<target network/netmask>
Cisco Systems VPN Client %s:%s
warning: ignoring obfuscated password because cleartext password set
error: deobfuscating of password failed (input not a hex string)
error: deobfuscating of password failed
Usage: %s [--version] [--print-config] [--help] [--long-help] [options] [config files]
Use --long-help to see all options
Report bugs to vpnc@unix-ag.uni-kl.de
warning: unknown configuration directive in %s at line %d
Copyright (C) 2002-2006 Geoffrey Keating, Maurice Massar, others
vpnc comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of vpnc under the terms of the GNU General
Public License.  For more information about these matters, see the files
named COPYING.
Built with certificate support.
%s: unknown authentication mode %s
known modes: psk cert hybrid
%s: unknown nat traversal mode %s
known modes: natt none force-natt cisco-udp
%s: unknown interface mode %s
known modes: tun tap
%s: unknown vendor %s
known vendors: cisco netscreen
WARNING! active debug level is >= 99, output includes username and password (hex encoded)
WARNING! active debug level is >= 99, output includes username and password (hex encoded)
Enter IPSec secret for %s@%s: 
IKE DH Group "%s" unsupported
Perfect Forward Secrecy "%s" unsupported
IKE DH Group must not be nopfs
your group password (cleartext)
your group password (obfuscated)
(NT-) Domain name for authentication
enable interactive extended authentication (for challenge response auth)
<natt/none/force-natt/cisco-udp>
Which NAT-Traversal Method to use:
 * natt -- NAT-T as defined in RFC3947
 * none -- disable use of any NAT-T method
 * force-natt -- always use NAT-T encapsulation even
                 without presence of a NAT device
                 (useful if the OS captures all ESP traffic)
 * cisco-udp -- Cisco proprietary UDP encapsulation, commonly over Port 10000
Note: cisco-tcp encapsulation is not yet supported
command is executed using system() to configure the interface,
routing and so on. Device name, IP, etc. are passed using enviroment
variables, see README. This script is executed right after ISAKMP is
done, but before tunneling is enabled. It is called when vpnc
terminates, too
Diffie-Hellman group to use for PFS
enables weak single DES encryption
enables using no encryption for data traffic (key exchanged must be encrypted)
Application Version to report. Note: Default string is generated at runtime.
visible name of the TUN/TAP interface
mode of TUN/TAP interface:
 * tun: virtual point to point interface (default)
 * tap: virtual ethernet interface
Show verbose debug messages
 *  0: Do not print debug information.
 *  1: Print minimal debug information.
 *  2: Show statemachine and packet/payload type information.
 *  3: Dump everything exluding authentication data.
 * 99: Dump everything INCLUDING AUTHENTICATION data (e.g. PASSWORDS).
Don't detach from the console after login
store the pid of background process in <filename>
local IP to use for ISAKMP / ESP / ... (0.0.0.0 == automatically assign)
local ISAKMP port number to use (0 == use random port)
Local UDP port number to use (0 == use random port).
This is only relevant if cisco-udp nat-traversal is used.
This is the _local_ port, the remote udp port is discovered automatically.
It is especially not the cisco-tcp port.
Send DPD packet after not receiving anything for <idle> seconds.
Use 0 to disable DPD completely (both ways).
Don't ask anything, exit on missing options
Authentication mode:
 * psk:    pre-shared key (default)
 * cert:   server + client certificate (not implemented yet)
 * hybrid: server certificate + xauth (if built with openssl support)
filename and path to the CA-PEM-File
path of the trusted CA-Directory
Target network in dotted decimal or CIDR notation
math_group.c
groups[i].type == MODP
id >= 1
clone->type == MODP
new_grp
grp->type == MODP
id <= (int)(sizeof(groups) / sizeof(groups[0]))
FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A63A3620FFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE65381FFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA237327FFFFFFFFFFFFFFFF
group_free
modp_clone
group_get
modp_init
group_init
nopfs
psk+xauth
hybrid(rsa)
3des
aes128
aes192
aes256
sha1
%s: called with non-NULL *error
%s: not enough memory for error message
not enough memory to read file '%s'
unknown error
failed to open file '%s'
failed to stat file '%s'
invalid file '%s' length %ld
failed to read file '%s'
crypto_error_set
error initializing gnutls globals
not enough memory for crypto context
not enough memory for crypto certificate stack
not enough memory for certificate
certificate (%s) format unknown
certificate could not be exported
invalid crypto context or data
too many certificates in the chain.
not enough memory for certificate list
failed to verify against issuer
certificate activation in the future
failed to verify against CA list
certificate public key algorithm not RSA
error getting certificate public key
(public-key (rsa (n %m) (e %m)))
could not create public-key expression
could not create signature expression
could not get decrypted signature result
could not get extract decrypted signature
hash doesn't conform to PKCS#1 padding
could not get extract decrypted padded signature
failed to decode certificate
not enough memory for CA list
importing CA list (%d)
ca_dir not yet supported
certificate signer not found
certificate signer not a CA
certificate expired
invalid crypto context
no certificates in the stack
invalid RSA key 'n' format
invalid RSA key 'e' format
invalid signature format
(data (flags raw) (value %m))
could not decrypt signature
PKCS#1 padding too short
unknown padding mechanism %d
got packet with wrong cookies
Payload
hashlen: %lu
u.hash.length: %d
expected_hash
h->u.hash.data
seconds
kilobyte
vpnc.c
a->af == isakmp_attr_16
a->next != ((void *)0)
a != ((void *)0)
making socket
connecting to port %d
disconnect
reason
CISCO_BANNER
CISCO_DEF_DOMAIN
CISCO_SPLIT_INC
INTERNAL_IP4_NBNS
INTERNAL_IP4_DNS
INTERNAL_IP4_NETMASK
INTERNAL_IP4_ADDRESS
ignoring zero length netmask
INTERNAL_IP4_NETMASKLEN
INTERNAL_IP4_NETADDR
Banner: 
Remote Application Version: 
got pfs setting: %d
acl %d: 
CISCO_SPLIT_INC_%d_ADDR
addr: %s/
CISCO_SPLIT_INC_%d_MASK
CISCO_SPLIT_INC_%d_MASKLEN
(%s), 
CISCO_SPLIT_INC_%d_PROTOCOL
protocol: %s, 
CISCO_SPLIT_INC_%d_SPORT
sport: %s, 
CISCO_SPLIT_INC_%d_DPORT
dport: %s
unknown attribute %d / 0x%X
S4.4 AM_packet2
IKE SA selected %s-%s-%s
peer is DPD capable (RFC3706)
unknown ISAKMP_PAYLOAD_VID
(not dumping psk hash)
psk_skeyid
shared-key: %s
expected hash
received hash
received signature
Decrypted-Size: %zd
    decr_hash
Signature MATCH!!
returned_hash
psk_hash
dh_shared_secret
skeyid_d
skeyid_a
skeyid_e
enc-key
s->ike.ivlen <= s->ike.md_len
current_iv
NAT status: no NAT-T VID seen
unknown host `%s'
can't send packet
receiving packet
no response from target
can't poll socket
reject != 0
malformed loadbalance target
authing NULL package!
S7.1 QM_packet1
len = %d
dh_public
S7.2 QM_packet2 send_receive
S7.3 QM_packet2 validate type
IPSEC SA selected %s-%s
S7.7 QM_packet3 sent
S7.8 setup ipsec tunnel
   (%s)
   (unknown)
everything fine so far...
do_rekey returned: %d
got r-u-there ack
Answer
Passcode
Password
1.1.90
vpnc version 0.5.3
hex_test
S1 init_sockaddr
S2 make_socket
S3 setup_tunnel
pre-init
using interface %s
TUNDEV
can't get tunnel HW address
interface HW addr
S4 do_phase1_am
S4.1 create_nonce
i_nonce
S4.2 dh setup
S4.3 AM packet_1
S4.5 AM_packet3
initial_iv
S4.6 cleanup
S5 do_phase2_xauth
S5.1 xauth_request
S5.2 notice_check
S5.3 type-is-xauth check
S5.4 xauth type check
%c%c
%.*s%s
S5.5 do xauth reply
%s for VPN %s@%s: 
S5.6 process xauth set
S5.7 send xauth ack
authentication unsuccessful
S5.8 xauth done
S6 do_phase2_config
got address %s
VPNGATEWAY
S8 close_tunnel
S9 cleanup
Xauth
Cisco Unity
Nat-T 00
Nat-T 01
Nat-T 02
Nat-T 02N
Nat-T RFC
Delete With Reason
Cisco Fragmentation
Netscreen 15
Nortel Contivity
Heartbeat Notify
payload too short or not padded: len=%lld, min=%d (ivlen=%lld)
a->u.attr_16 == IPSEC_LIFE_SECONDS || a->u.attr_16 == IPSEC_LIFE_K
a->next->type == ISAKMP_IPSEC_ATTRIB_SA_LIFE_DURATION
a->type == ISAKMP_IPSEC_ATTRIB_SA_LIFE_TYPE
got ipsec lifetime attributes: %d %s
Error binding to source port. Try '--local-port 0'
Failed to bind to %s:%d
reading local address from socket %d
got peer udp encapsulation port: %hu
got %d acls for split include
got save password setting: %d
a->type == IKE_ATTRIB_LIFE_TYPE
a->u.attr_16 == IKE_LIFE_TYPE_SECONDS || a->u.attr_16 == IKE_LIFE_TYPE_K
a->next->type == IKE_ATTRIB_LIFE_DURATION
got ike lifetime attributes: %d %s
unknown attribute %d, arborting..
peer selected (single) DES as "encryption" method.
This algorithm is considered too weak today
If your vpn concentrator admin still insists on using DES
use the "--enable-1des" option.
peer is NAT-T capable (RFC 3947)
peer is NAT-T capable (draft-02)\n
peer is NAT-T capable (draft-02)
peer is NAT-T capable (draft-01)
peer is NAT-T capable (draft-00)
ignoring that peer is DPD capable (RFC3706)
peer is using ScreenOS 5.3, 5.4 or 6.0
peer sent Heartbeat Notify payload
peer is using type %d%s for NAT-Discovery payloads
rejecting invalid payload type %d
the selected authentication method is not supported
SKEYID could not be computed: %s
hash comparison failed: %s(%d)
check group password!
The hash-value, which was decrypted from the received signature, and the expected hash-value differ in size.
The hash-value, which was decrypted from the received signature, and the expected hash-value differ.
NAT status: this end behind NAT? %s -- remote end behind NAT? %s
NAT status: NAT-T VID seen, no NAT device detected
response was invalid [1]: %s(%d)
response was invalid [2]: %s(%d)
response was invalid [3]: %s(%d)
generating %d bytes keymat (cnt=%d)
NAT-T mode, adding non-esp marker
received packet too large for buffer
Received UDP NAT-Keepalive bug nat active mode incorrect: %d
Received duplicated packet, dropping it!
 receiving: <========================
got cisco loadbalancing notice, diverting to %s
got unknown lifetime notice, ignoring..
got initial contact notice, ignoring..
received notice of type %s(%d), giving up
got delete for old connection, ignoring..
S7.11 send isakmp termination message
---!!!!!!!!! entering phase2_fatal !!!!!!!!!---
S7.5 QM_packet2 check reject offer
quick mode response rejected: %s(%d)
this means the concentrator did not like what we had to offer.
Possible reasons are:
  * concentrator configured to require a firewall
     this locks out even Cisco clients on any platform except windows
     which is an obvious security improvement. There is no workaround (yet).
  * concentrator configured to require IP compression
     this is not yet supported by vpnc.
     Note: the Cisco Concentrator Documentation recommends against using
     compression, except on low-bandwith (read: ISDN) links, because it
     uses much CPU-resources on the concentrator
S7.6 QM_packet2 check and process proposal
peer selected (single) DES as "encrytion" method.
This algorithm is considered to weak today
If your vpn concentrator admin still insists on using DES
use the "--enable-1des" option.
peer selected NULL as "encrytion" method.
This is _no_ encryption at all.
Your traffic is still protected against modification with %s
If your vpn concentrator admin still insists on not using encryption
use the "--enable-no-encryption" option.
quick mode response rejected [2]: %s(%d)
Couldn't open socket of ESP. Maybe something registered ESP already.
Please try '--natt-mode force-natt' or disable whatever is using ESP.
socket(PF_INET, SOCK_RAW, IPPROTO_ESP)
setsockopt(esp_fd, IPPROTO_IP, IP_HDRINCL, 1)
dead peer detected, terminating
got late ike packet: %zd bytes
FIXME: vpnc doesn't support change of algorightms during rekeying
got non isakmp-notify, ignoring...
ignoring bad data length R-U-THERE request
got r-u-there request sent ack
ignoring bad data length R-U-THERE-ACK
ignoring r-u-there ack %u (expecting %u)
got isakmp delete with bogus spi (expected %d, received %d), ignoring...
got non isakmp-delete, ignoring...
got isakmp-delete, terminating...
can't initialise tunnel interface
server requested domain, but none set (use "Domain ..." in config or --domain
noninteractive can't reuse password
S5.5.1 do netscreen modecfg extra
xauth SET message rejected: %s(%d)
S6.1 phase2_config send modecfg
S6.2 phase2_config receive modecfg
configuration response rejected: %s(%d)
S7 setup_link (phase 2 + main_loop)
S7.0 run interface setup script
S7.9 main loop (receive and transmit ipsec packets)
S7.10 send ipsec termination message
expected xauth packet; rejected: %s(%d)
xauth packet unsupported: %s(%d)
do_phase1_am_packet2
lifetime_ike_process
do_phase2_notice_check
lifetime_ipsec_process
do_rekey
BNES
HeartBeat_Notify8k
XE\W(
`FC5
; H_
;*3$"
vpnc.debug
7zXZ
4aTQ
p	|^
ca<"
/FKA
Xi8I
]1_7
8{P7r\
HF}*PP
u`|v
%914
Dh^e
a?%i
:gl$
@rg}9t
L)3R
y0?;
tvnt
5;Q\
v*ORC
b``.&
xf&d
0[}Q
Mb"6
]v&1:
|\nc
R:m,<
d1i[
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
