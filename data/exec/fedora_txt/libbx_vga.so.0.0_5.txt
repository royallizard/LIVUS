NTGDH
m(!6
f4l)-H
SfMV
k`oKr
y3h>2
;Xsv
wa7s
_"Hl
o$IV
 kKrE#?*
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
_ZN13bx_devmodel_c4initEv
_ZN13bx_devmodel_c5resetEj
_ZN13bx_devmodel_c14register_stateEv
_ZN13bx_devmodel_c19after_restore_stateEv
_ZN13bx_vga_stub_c20get_actl_palette_idxEh
_ZN13bx_vga_stub_c17vbe_set_base_addrEPjPh
_ZN8bx_vga_c5resetEj
_ZN8bx_vga_c16mem_read_handlerEmjPvS0_
theVga
_ZN8bx_vga_c17mem_write_handlerEmjPvS0_
_ZN8bx_vga_c17get_snapshot_modeEv
_ZN8bx_vga_c17get_text_snapshotEPPhPjS2_
_ZN8bx_vga_c20get_actl_palette_idxEh
_ZN8bx_vga_c17vbe_set_base_addrEPjPh
bx_devices
_ZN8bx_vga_c16vbe_read_handlerEPvjj
_ZN12logfunctions5panicEPKcz
_ZN13bx_vga_stub_c13trigger_timerEPv
pluginlog
_ZN13bx_vga_stub_c16get_gfx_snapshotEPPhS1_PjS2_S2_
_ZN13bx_vga_stub_c17get_text_snapshotEPPhPjS2_
_ZN13bx_vga_stub_c17get_snapshot_modeEv
_ZN13bx_vga_stub_c9mem_writeEmh
_ZN13bx_vga_stub_c8mem_readEm
_ZN13bx_vga_stub_c11redraw_areaEjjjj
_ZN8bx_vga_c11redraw_areaEjjjj
memset
_ZN8bx_vga_c12read_handlerEPvjj
_ZN12logfunctions6ldebugEPKcz
_ZN12logfunctions4infoEPKcz
bx_pc_system
_ZN14bx_pc_system_c9time_usecEv
_ZN12logfunctions5errorEPKcz
_ZN8bx_vga_c14register_stateEv
_Znwm
_ZN9bx_list_cC1EP10bx_param_cPKcS3_i
_ZN9bx_list_cC1EP10bx_param_cPKci
_ZN16bx_shadow_bool_cC1EP10bx_param_cPKcPjh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPhihh
__sprintf_chk
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPjihh
_ZN16bx_shadow_data_cC1EP10bx_param_cPKcPhj
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPtihh
_ZdlPv
_Unwind_Resume
__stack_chk_fail
__gxx_personality_v0
_ZN13bx_devmodel_cD2Ev
_ZTV13bx_devmodel_c
_ZN12logfunctionsD2Ev
_ZN13bx_devmodel_cD1Ev
_ZN8bx_vga_c17vbe_write_handlerEPvjjj
bx_gui
_ZN13bx_vga_stub_cD2Ev
_ZN13bx_vga_stub_cD1Ev
_ZN13bx_devmodel_cD0Ev
_ZN8bx_vga_cD2Ev
_ZTV8bx_vga_c
_ZdaPv
_ZN14bx_param_num_c11set_handlerEPFlP10bx_param_cilE
_ZN8bx_vga_cD1Ev
_ZN8bx_vga_cD0Ev
_ZN13bx_vga_stub_cD0Ev
_Z22bx_vga_set_smf_pointerP8bx_vga_c
_ZN8bx_vga_cC2Ev
_ZN12logfunctionsC2Ev
_ZN12logfunctions3putEPKc
_ZN8bx_vga_cC1Ev
_ZN8bx_vga_c17init_standard_vgaEv
_ZN8BX_MEM_C22registerMemoryHandlersEPvPFjmjS0_S0_ES2_PFPhmjS0_Emm
strlen
_ZN8bx_gui_c4initEiPPcjj
_Znam
strcpy
strtok
__ctype_b_loc
free
strdup
_ZN8bx_vga_c4initEv
_ZN8BX_MEM_C8load_ROMEPKcmh
_ZN8bx_vga_c15init_iohandlersEPFjPvjjEPFvS0_jjjE
pluginRegisterIOReadHandler
pluginRegisterIOWriteHandler
_ZN8bx_vga_c16init_systemtimerEPFvPvEPFlP10bx_param_cilE
bx_virt_timer
_ZN15bx_virt_timer_c14register_timerEPvPFvS0_EjjjPKc
_ZN8bx_vga_c18init_vga_extensionEv
_ZN8bx_vga_c13write_handlerEPvjjj
_ZN8bx_vga_c17vga_param_handlerEP10bx_param_cil
_ZN8bx_vga_c13timer_handlerEPv
_ZN8bx_vga_c27determine_screen_dimensionsEPjS0_
_ZN8bx_vga_c5writeEjjjj
_ZN8bx_vga_c20write_handler_no_logEPvjjj
_ZN8bx_gui_c16set_text_charmapEPh
_ZN8bx_vga_c13get_vga_pixelEttttPPh
_ZN8bx_vga_c6updateEv
old_MSL
memcpy
_ZN8bx_vga_c13trigger_timerEPv
_ZN15bx_virt_timer_c14activate_timerEjjj
_ZN8bx_vga_c19after_restore_stateEv
_ZN8bx_vga_c15get_dac_paletteEPPhh
malloc
_ZN8bx_vga_c16get_gfx_snapshotEPPhS1_PjS2_S2_
_ZN8bx_vga_c12vbe_mem_readEm
_ZN8bx_vga_c8mem_readEm
_ZN8bx_vga_c13vbe_mem_writeEmh
_ZN8bx_vga_c9mem_writeEmh
_ZN8bx_gui_c17set_text_charbyteEth
_ZTS8bx_vga_c
_ZTI8bx_vga_c
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTI13bx_vga_stub_c
_ZTI13bx_devmodel_c
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTS13bx_devmodel_c
_ZTI12logfunctions
_ZTVN10__cxxabiv117__class_type_infoE
_ZTS12logfunctions
_ZTS13bx_vga_stub_c
_ZTV13bx_vga_stub_c
_ZN20bx_pci_device_stub_c16pci_read_handlerEhj
_ZN20bx_pci_device_stub_c17pci_write_handlerEhjj
_ZN16bx_svga_cirrus_c23cirrus_mem_read_handlerEmjPvS0_
_ZN16bx_svga_cirrus_c24cirrus_mem_write_handlerEmjPvS0_
_ZN16bx_svga_cirrus_c30svga_colorexpand_transp_memsrcEv
_ZN16bx_svga_cirrus_c16pci_read_handlerEhj
_ZThn175992_N16bx_svga_cirrus_c16pci_read_handlerEhj
_ZN16bx_svga_cirrus_c17pci_write_handlerEhjj
_ZThn175992_N16bx_svga_cirrus_c17pci_write_handlerEhjj
_ZN16bx_svga_cirrus_c20get_actl_palette_idxEh
_ZN16bx_svga_cirrus_c13trigger_timerEPv
_ZN16bx_svga_cirrus_c16get_gfx_snapshotEPPhS1_PjS2_S2_
_ZN16bx_svga_cirrus_c17get_text_snapshotEPPhPjS2_
_ZN16bx_svga_cirrus_c17get_snapshot_modeEv
_ZN16bx_svga_cirrus_c11redraw_areaEjjjj
_ZN16bx_svga_cirrus_c14register_stateEv
_ZN20bx_pci_device_stub_c18register_pci_stateEP9bx_list_c
_ZN20bx_pci_device_stub_cD2Ev
_ZTV20bx_pci_device_stub_c
_ZN20bx_pci_device_stub_cD1Ev
_ZN20bx_pci_device_stub_cD0Ev
_ZN16bx_svga_cirrus_cD2Ev
_ZTV16bx_svga_cirrus_c
_ZN16bx_svga_cirrus_cD1Ev
_ZThn175992_N16bx_svga_cirrus_cD1Ev
_ZN16bx_svga_cirrus_cD0Ev
_ZThn175992_N16bx_svga_cirrus_cD0Ev
libvga_LTX_plugin_fini
_ZN16bx_svga_cirrus_cC2Ev
_ZN16bx_svga_cirrus_cC1Ev
libvga_LTX_plugin_init
pluginRegisterDeviceDevmodel
_ZN16bx_svga_cirrus_c24mem_write_mode4and5_8bppEhjh
_ZN16bx_svga_cirrus_c25mem_write_mode4and5_16bppEhjh
_ZN16bx_svga_cirrus_c15svga_modeupdateEv
_ZN16bx_svga_cirrus_c20draw_hardware_cursorEjjP18bx_svga_tileinfo_t
_ZN16bx_svga_cirrus_c11svga_updateEv
_ZN16bx_svga_cirrus_c18svga_timer_handlerEPv
_ZN16bx_svga_cirrus_c18svga_param_handlerEP10bx_param_cil
_ZN16bx_svga_cirrus_c19after_restore_stateEv
_ZN16bx_svga_cirrus_c15update_bank_ptrEh
_ZN16bx_svga_cirrus_c14svga_read_crtcEjj
_ZN16bx_svga_cirrus_c15svga_write_crtcEjjh
_ZN16bx_svga_cirrus_c19svga_read_sequencerEjj
_ZN16bx_svga_cirrus_c20svga_write_sequencerEjjh
_ZN16bx_svga_cirrus_c17svga_read_controlEjj
_ZN16bx_svga_cirrus_c17svga_read_handlerEPvjj
_ZN16bx_svga_cirrus_c18svga_mmio_vga_readEj
_ZN16bx_svga_cirrus_c18svga_mmio_blt_readEj
_ZN16bx_svga_cirrus_c21svga_init_pcihandlersEv
_ZN20bx_pci_device_stub_c12load_pci_romEPKc
_ZN16bx_svga_cirrus_c17svga_reset_bitbltEv
_ZN16bx_svga_cirrus_c17svga_init_membersEv
_ZN16bx_svga_cirrus_c5resetEj
_ZN16bx_svga_cirrus_c18init_vga_extensionEv
_ZN16bx_svga_cirrus_c18svga_write_handlerEPvjjj
_ZN16bx_svga_cirrus_c28svga_setup_bitblt_cputovideoEjj
_ZN16bx_svga_cirrus_c23svga_patterncopy_memsrcEv
_ZN16bx_svga_cirrus_c24svga_simplebitblt_memsrcEv
_ZN16bx_svga_cirrus_c28svga_setup_bitblt_videotocpuEjj
_ZN16bx_svga_cirrus_c30svga_setup_bitblt_videotovideoEjj
_ZN16bx_svga_cirrus_c17svga_simplebitbltEv
_ZN16bx_svga_cirrus_c16svga_patterncopyEv
_ZN16bx_svga_cirrus_c18svga_colorexpand_8EPhPKhi
_ZN16bx_svga_cirrus_c19svga_colorexpand_16EPhPKhi
_ZN16bx_svga_cirrus_c19svga_colorexpand_24EPhPKhi
_ZN16bx_svga_cirrus_c19svga_colorexpand_32EPhPKhi
_ZN16bx_svga_cirrus_c16svga_colorexpandEPhPKhii
_ZN16bx_svga_cirrus_c14svga_solidfillEv
_ZN16bx_svga_cirrus_c21svga_asyncbitblt_nextEv
memmove
_ZN16bx_svga_cirrus_c8mem_readEm
_ZN16bx_svga_cirrus_c24svga_get_fwd_rop_handlerEh
_ZN16bx_svga_cirrus_c25svga_get_bkwd_rop_handlerEh
_ZN16bx_svga_cirrus_c11svga_bitbltEv
_ZN16bx_svga_cirrus_c18svga_write_controlEjjh
_ZN16bx_svga_cirrus_c19svga_mmio_blt_writeEjh
_ZN16bx_svga_cirrus_c19svga_mmio_vga_writeEjh
_ZN16bx_svga_cirrus_c9mem_writeEmh
_ZTS16bx_svga_cirrus_c
_ZTI16bx_svga_cirrus_c
_ZTI20bx_pci_device_stub_c
_ZTS20bx_pci_device_stub_c
libstdc++.so.6
libm.so.6
libc.so.6
libgcc_s.so.1
_edata
__bss_start
_end
libbx_vga.so.0
GCC_3.0
CXXABI_1.3
GLIBCXX_3.4
GLIBC_2.14
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.3
GLIBC_2.2.5
%zf!
%rf!
%jf!
%bf!
%Zf!
%Rf!
%Jf!
%Bf!
%:f!
%2f!
%*f!
%"f!
%ze!
%re!
%je!
%be!
%Ze!
%Re!
%Je!
%Be!
%:e!
%2e!
%*e!
%"e!
%zd!
%rd!
%jd!
%bd!
%Zd!
%Rd!
%Jd!
%Bd!
%:d!
%2d!
%*d!
%"d!
%zc!
%rc!
%jc!
%bc!
%Zc!
=:c!
=rX!
fffff.
=8X!
="X!
tVAU
[]A\A]
tWAU
%j]!
P@L9
[]A\A]
fffff.
fff.
fff.
fffff.
l$ H
%v<I
fffff.
AWAVAUATUSH
([]A\A]A^A_
AUATUS
t#[]A\A]A^
[]A\A]A^
	v#H
[]A\A]A^1
[]A\A]A^
[]A\A]A^1
[]A\A]A^
[]A\A]A^
[]A\A]A^1
[]A\A]A^1
fff.
fffff.
fffff.
AWAVAUATUSH
5.,!
T$ 1
D$ H
[]A\A]A^A_
\$(H
fff.
AVAUATUH
5X(!
D$(1
D$(dH3
]A\A]A^A_
-P%!
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
fff.
l$ L
d$(L
l$0L
t$8L
|$@H
-R#!
5:"!
yU@u
yJAu
-% !
&vIH
l$ L
d$(L
l$0H
l$ H
l$ L
d$(1
l$0H
H`E1
l$ H
d$(L
l$0H
fff.
fffff.
A"A}
lu5A
AWAVAUATUSH
[]A\A]A^A_
|$@L
|$0H
|$XAD
D$pL
|$`1
T$Hw
|$8H
|$`J
t$HL
T$PE
|$0L
l$@I
T$PI
D$8L
|$8I
|$`J
|$xD
|$h;L$P
|$8AD
|$8D
D$pL
|$h1
T$Pw
|$hL
t$PH
T$`H
|$XA
T$`I
|$hI
|$xD
|$HD9
\$`D
|$HA
l$hD
|$8D
D$x1
D$80
T$Xw
|$pH
D$0D
|$8L
|$@H
t$XH
|$`A
T$hI
|$pI
|$P9
|$HAD
D$xL
|$p1
T$`w
|$PH
|$pJ
t$`F
|$0L
d$@I
T$8I
D$PL
|$PI
|$pJ
L$$D
+L$$I
|$X;L$8
|$HAD
D$xL
|$p1
T$`w
|$PH
|$pJ
t$`F
|$0L
d$@I
T$8I
D$PL
|$PI
|$pJ
L$$D
+L$$I
|$X;L$8
|$PAD
|$PH
T$Xw
|$`H
|$xJ
t$XL
T$HE
|$0L
l$@I
t$pA
T$HI
D$`L
|$`I
|$xJ
+L$$A
|$h;L$H
T$@A
T$Hu
|$HA
D$8=
D$0H
\$(fA
|$0fD
|$@L
T$8H
|$8A
D$PH
L$0L
D$HH
L$@H
D$@H
L$@I
D$HH
|$8A
D$PH
L$0L
D$HH
L$@H
D$@H
L$@I
D$HH
|$8A
D$PH
L$0L
D$HH
L$@H
D$@H
L$@I
D$HH
|$8A
D$PH
D$H1
D$0L
D$HH
D$@H
T$@H
L7lA
D$@H
T$@I
l$@D
|$`A
D$xH
L$XH
t$pH
L$hH
l$PE
T$@L
T$hL
|$hI
L$PH
|$pH
T$0L
D$P9
|$@A
D$PH
t$0L
D$HH
t$8H
L7lA
D$8H
D$HH
l$ H
fffff.
<$[]H
fffff.
fffff.
AWAVAUI
ATUSH
T$(L
L$ H
t$8H
t$@A	
t6E1
D$0D
X[]A\A]A^A_
t$8H
t<Lc
D$ A
BU@u
BX@A
fff.
tCfA
\$XH
d$hL
l$pL
t$xL
t5H9
\$XH
l$`L
d$hL
l$pL
t$xL
t$ H
t$(H
D$@A
t$NA
L$0A
D$OA!
|$0!
t$O"
D$ H
L$(H
L$MA
D$0E1
D$0E	
T$0D
L$NA
L$NE
|$0D
D"<$D
|$0@
D"4$D
T$M"
D"4$
|$0@
L$0D
D$ME	
D$NE	
L$0D!
"L$0
D$0D	
D"|$0
D$0E	
D"t$0
D$0D
t$M!
D"L$0
D"\$0
D$0A
D"T$0D	
@"t$0A
D$0E	
@"|$0A
D$0D!
D"T$0E
@"t$0E	
D"4$1
|$0@
t$O"D$M
D"4$
D"<$
2T$M"
T$M"
D"4$
D"<$
tCAT
tDAT
P@L9
ffffff.
fffff.
ffffff.
ffffff.
~KUE
fffff.
~OUE
~KUE
ffffff.
~MUE
~KUE
~KUE
~OUE
~OUE
~OUE
~MUE
~MUE
~OUE
AVAUATUSH
[]A\A]A^A_
VUUU
fffff.
ffffff.
AUATA
[]A\A]A^
[]A\A]A^1
t5E1
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
l$0H
\$(L
d$8L
l$@L
t$HL
|$PH
fffff.
fffff.
AVAUATI
([]A\A]A^A_
fffff.
fffff.
u*D9
t$ H
AWAVAUATA
D$XH
D$8H
@t-H
|$8H
[]A\A]A^A_
L$8D
L$xI!
L$8I!
L$xH
L$8I!
L$8L	
L$PA9
D9\$DD
F\$D
\$PL
\$8A
l$HL
l$`;D$P
D9T$@D
FT$@D)
d$XD
D$@E
t$XD
t$HH
t$8A
D9T$D
T$DtF
\$HH
l$HI
D$P9D$@
t$8D
L$ H
+L$h
L$8D
+L$P
D$oH
+L$h
D$nH
+L$P
tPAWAVAUATUSH
[]A\A]A^A_
|$<D
t$`H
D$@L
\$ H
|$0H
L$(L
D$\H
D$XE1
D$`H
D9L$Xw
D$bA
D9\$\
Aw'H
|$0H
;D$<
L$HD
|$8D
L$(D9|$
|$<D
t$<H
T$8L
L$<1
D9L$XH
D$0L
L$(E1
L$(H
D$\D
t$XE1
L$eD#L$p
#T$x
L$fD	
T$`H
D9D$X
D$bL
|$ A
D9T$\
T$`D
D$\D
Aw*D
L$(H
;D$<
|$@D
D;l$8
L$`A
D9D$XJ
|$8E
D$HD
L$<E
D$@L
L$0D
|$ w.
L$0H
D$\H
|$XE1
L$eD#L$p
#T$x
L$fD	
T$`H
D9D$X
D$bL
|$(A
D9T$\
|$ H
T$`D
D$\D
t$ H
Aw'L
L$0H
;D$<
|$HD
D;d$8
L$`A
D9D$XJ
t$8E
D$HL
L$@D
|$ w1
L$@H
|$ D
L$(L
D$\H
T$\E
L$XE1
L$eA!
#T$x
#t$p	
T$`H
D9D$X
D$bL
|$0A
D9d$\
|$ H
t$ H
L$@H
;D$<
|$(D
|$8D9|$
L$`A
D9D$XJ
l$8E
D$LD
d$<E
D$HL
D$ H
L$@H
|$ D
L$(L
D$\H
L$XG
|$XE1
L$eA!
#T$x
#t$p	
T$`H
D9D$X
D$bL
|$0A
D9d$\
|$ H
t$ H
L$@H
;D$<
|$(D
|$8D9|$
L$`A
D9D$XJ
d$8E
D$@L
|$0D
L$0H
L$ L
D$\H
T$\E
L$XL
L$dH
L$eL
R#t$pG
D#L$x
L$fH
T$`H
9T$X
D$bL
L$(A
D9\$\
T$`D
D$\D
Aw'L
|$0H
;D$<
L$HD
L$ D;l$8
L$`A
9T$XJ
fffff.
ATUSH
[]A\
|$(H
|$(H
|$(H
M	Hc
fffff.
t$ H
'w%H
t$ H
l$ H
l$ H
@vSH
fffff.
fffff.
l$ H
=P} 
l$ 1
l$ H
l$ H
l$ H
=y| 
|rt7H
4$Hc
AWAVAUATUSH
[]A\A]A^A_
VUUUD
D$ A
D$!A
D$"A
D$#A
t$ L
t$ Ic
AWAVAUATUSH
HcD$
T$ H
|$(E
l$ D;d$
[]A\A]A^A_
VUUU
D$0A
D$1A
D$2A
D$3A
HcD$
Lct$
l$ M
<2A1
D9d$
t$0L
=Et 
fffff.
~sE1
[]A\
fff.
tgvm@
tgvm@
=hl 
[]A\
=[i 
[]A\
[]A\
[]A\
[]A\
fffff.
3vTH
=mg 
l$ L
t$(L
|$0H
=	g 
l$ L
t$(L
|$0H
l$ L
t$(L
|$0H
l$ L
t$(L
|$0H
=Ae 
t?A1
l$ H
t$(L
|$01
@v2H
=kd 
=!d 
fff.
=_a 
!w*H
=La 
=p_ 
VBE unknown data read index 0x%x
%s called in %s stub. you must not have loaded the %s plugin
io read: 0x3c0: flip_flop != 0
io read: 0x3c1: unknown register 0x%02x
io read 0x3c2: input status #0: ignoring
io read 0x3c5: sequencer reset
io read 0x3c5: sequencer clocking mode
io read 0x3c5: index %u unhandled
io read 0x3cf: reg 05 = 0x%02x
io read: 0x3cf: index %u unhandled
io read: invalid CRTC register 0x%02x
8-bit read from 0x%04x = 0x%02x
16-bit read from 0x%04x = 0x%04x
VBE unknown Display Interface %x
VBE known Display Interface %x
VBE set xres more then max xres (%d)
VBE set xres during vbe enabled!
VBE set yres more then max yres (%d)
VBE set yres during vbe enabled!
VBE set bpp with unknown bpp (%d)
VBE set bpp during vbe enabled!
VBE set bank in LFB mode ignored
VBE requested virtual width %d
VBE recalc virtual width %d height %d
VBE: write to virtual height register ignored
VBE: write unsupported register at index 0x%x
VBE enabling x %d, y %d, bpp %d, %u bytes visible
too many parameters, max is 16
VBE Bochs Display Extension Enabled
io write 0x3c0: address mode reg=0x%02x
io write 0x3c0: data-write mode 0x%02x
char map select: map #2 in block #%d unused
io write 0x3c5: index 0x%02x unhandled
io write 0x3c6: PEL mask=0x%02x != 0xFF
io write: 0x3cf: mode reg: value = 0x%02x
io write: 0x3cf: index %u unhandled
write: invalid CRTC register 0x%02x selected
write: invalid CRTC register 0x%02x ignored
io write: 3da: ignoring: feature ctrl & vert sync
unsupported io write to port 0x%04x, val=0x%02x
current guest pixel format is unsupported on indexed colour host displays
update(): text mode: out of memory
VBE_mem_write out of video memory write at %x
vga_mem_write: write mode 0: op = %u
vga_mem_write: write mode %u ?
VBE_read shouldn't reach this
trigger_timer
get_gfx_snapshot
get_text_snapshot
get_snapshot_mode
mem_write
mem_read
redraw_area
io read from 03cd
io read from vga port 0x%04x
display.vga_extension
svga_cirrus
VGA Adapter State
misc_output
color_emulation
enable_ram
select_high_bank
horiz_sync_pol
vert_sync_pol
CRTC
write_protect
attribute_ctrl
flip_flop
video_enabled
palette_reg
overscan_color
color_plane_enable
horiz_pel_panning
color_select
mode_ctrl
graphics_alpha
display_type
enable_line_graphics
blink_intensity
pixel_panning_compat
pixel_clock_select
internal_palette_size
write_data_register
write_data_cycle
read_data_register
read_data_cycle
dac_state
pel_data
graphics_ctrl
enable_set_reset
color_compare
data_rotate
raster_op
read_map_select
write_mode
read_mode
chain_odd_even
shift_reg
memory_mapping
color_dont_care
bitmask
latch0
latch1
latch2
latch3
sequencer
map_mask
reset1
reset2
char_map_select
extended_mem
chain_four
line_offset
line_compare
vertical_display_end
charmap_address
x_dotclockdiv2
y_doublescan
last_bpp
memory
cur_dispi
curindex
visible_screen_size
offset_x
offset_y
virtual_xres
virtual_yres
virtual_start
bpp_multiplier
lfb_enabled
get_capabilities
dac_8bit
VBE set xres (%d)
VBE set yres (%d)
VBE set bpp (%d)
VBE set bank to %d
VBE set invalid bank (%d)
VBE disabling
DAC in 8 bit mode
DAC in standard mode
VBE offset x %d
VBE offset y %d
VBE offset y %d out of bounds
VBE decent virtual height %d
display.vga_update_frequency
Exit
none
bochs
display.displaylib_options
unknown display extension: %s
memory.standard.vgarom.path
vga video
interval=%lu
pcivga
BXVGA
8-bit write to %04x = %02x
16-bit write to %04x = %04x
Weird VGA write size
io write 3c4: value > 4
io write to 0x3cd = 0x%02x
io write: 0x3ce: value > 8
cannot draw 4bpp SVGA
cannot get svga tile info
update: select_high_bank != 1
update: shift_reg == %u
Changing timer interval to %d
8bx_vga_c
13bx_devmodel_c
12logfunctions
13bx_vga_stub_c
BLT, cpu-to-video, transparent
pci_read:  address 0x%02x, io_len 0x%02x, value 0x%x
pci_write: address 0x%02x, io_len 0x%02x, value 0x%x
unknown bpp - seqencer.reg[0x07] = %02x
unsupported hardware cursor size
current guest pixel format is unsupported on indexed colour host displays, svga_dispbpp=%d
CRTC index 0x%02x is unknown(read)
crtc: index 0x%02x write 0x%02x
CRTC index 0x%02x is unknown(write 0x%02x)
sequencer index 0x%02x is unknown(read)
sequencer: index 0x%02x write 0x%02x
sequencer index 0x%02x is unknown(write 0x%02x)
control index 0x%02x is unknown(read)
MMIO vga read - address 0x%04x, value 0x%02x
CLGD543x_MMIO_BLTTRANSPARENTCOLOR
CLGD543x_MMIO_BLTTRANSPARENTCOLORMASK
MMIO blt read - address 0x%04x
MMIO blt read - address 0x%04x, value 0x%02x
BLT: MEMSYSDEST is not implemented
COLOREXPAND: unknown pixelwidth %u
svga_cirrus: BLT, cpu-to-video
cpu-to-video BLT: unknown bltmode %02x
SIMPLE BLT: unknown bltmode %02x
PATTERNCOPY: unknown bltmode %02x
svga_patterncopy_memsrc() - not tested
svga_asyncbitblt_next: unexpected call
BLT: src:0x%08x,dst 0x%08x,block %ux%u,mode 0x%02x,ROP 0x%02x
BLT: srcpitch:0x%08x,dstpitch 0x%08x,modeext 0x%02x,writemask 0x%02x
BLT: memory-to-memory copy is requested, ROP %02x
BLT redraw: x = %d, y = %d, w = %d, h = %d
control: index 0x%02x write 0x%02x
BLT WRITE MASK support is not complete (value = 0x%02x)
BLT MODE EXTENSION support is not complete (value = 0x%02x)
BLT MODE EXTENSION not available
control index 0x%02x is unknown (write 0x%02x)
MMIO blt write - address 0x%04x, value 0x%02x
MMIO vga write - address 0x%04x, value 0x%02x
mem_write 0x%08x, value 0x%02x
new pci_memaddr: 0x%04x
new pci_mmioaddr = 0x%08x
new ROM address: 0x%08x
Cirrus SVGA State
crtc
control
shadow_reg0
shadow_reg1
hidden_dac
lockindex
palette
svga_unlock_special
svga_xres
svga_yres
svga_pitch
svga_bpp
svga_dispbpp
bank_base0
bank_base1
bank_limit0
bank_limit1
hw_cursor
switched to %u x %u x %u
bank offset %08x is invalid
SVGA read: io_len != 1
SVGA Cirrus PCI
CLVGA
CL-GD5446 PCI initialized
CL-GD5430 ISA initialized
svga_cirrus: COLOR EXPAND
svga_cirrus: BITBLT
svga_cirrus: PATTERN COPY
BLT: SOLIDFILL
mem_read 0x%08x
unknown ROP %02x
unknown pixel width
SVGA write: io_len != 1
16bx_svga_cirrus_c
20bx_pci_device_stub_c
;*3$"
zPLR
libbx_vga.so.0.0.0.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.gcc_except_table
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.bss
.init
.rela.plt
.got.plt
.got
.text
.fini_array
.init_array
