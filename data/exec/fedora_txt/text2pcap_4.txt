/lib64/ld-linux-x86-64.so.2
.YjF
|k	C
libglib-2.0.so.0
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
g_free
g_strdup
g_ascii_table
g_malloc
g_strerror
g_snprintf
g_strlcpy
libpthread.so.0
__errno_location
libc.so.6
exit
fopen
strncmp
optind
__isoc99_sscanf
__stack_chk_fail
realloc
stdin
inet_pton
__assert_fail
strtol
isatty
calloc
strlen
memcmp
getopt
clearerr
strptime
__fprintf_chk
stdout
fclose
__memmove_chk
strtoul
optarg
stderr
__memset_chk
fileno
fwrite
fread
gettimeofday
localtime
strchr
mktime
__cxa_finalize
_IO_getc
__libc_start_main
ferror
_edata
__bss_start
_end
__libc_csu_fini
__data_start
_IO_stdin_used
__libc_csu_init
GLIBC_2.2.5
GLIBC_2.7
GLIBC_2.3.4
GLIBC_2.4
AVAUATUI
D$x1
Aw+Hc
L$xdH3
[]A\A]A^
AXAY
fffff.
fffff.
fffff.
AUATI
[]A\A]
AWAVAUATUSH
[]A\A]A^A_
fffff.
fffff.
AVAUM
ATUH
d$PL
 []A\A]A^
AWAVM
AUATI
D$H1
L$<H
t$>H
D$8M<+
L$HdH3
X[]A\A]A^A_
t$ 1
T$"M
t$,M
fff.
AWAVE1
AUATM
D$ H
D$$dH
D$X1
L$8H
L$DL
T$Jf
T$XdH3
h[]A\A]A^A_
t$01
t$8H
<$fD
D$0L
t$0A
t$(H
|$2H
t$0H
t$$H
t$<H
L$0H
\$<L
<$H)
ffffff.
AWAVAUATI
D$,dH
D$h1
D$(D
\$$D
L$,A
\$$E
D$(D
L$ D
t$DH
t$@M
\$TH
L$XH
|$hdH3<%(
x[]A\A]A^A_
D$,E1
D$,E
t$0f
T$0f
L$2M
t$8M
t$<M
t$0H
t$0f
|$2L
t$,M
AWAVM
AUATI
D$(H
D$ dH
D$h1
HiL$@@B
L$HH
D$TH
L$`M
D$XH
\$hdH3
x[]A\A]A^A_
t$0f
|$0fD
D$2L
t$(M
t$2H
t$0f
t$ M
t$01
T$2M
t$4M
t$0A
\$0f
D$8D
t$8M
t$<M
t$0A
L$0H
\$<H
t$8M
t$<M
dH34%(
D=_x 
ffff.
fff.
AWAVAUATUSH
=}v 
=X~ 
5<}!
=F| 
=cr 
Ph@B
([]A\A]A^A_
5Dz!
=]z!
5ho 
=io 
5Oo 
=Po 
=mo 
AXAY
=)n 
=yl 
=yl 
=Yk 
ATUS
D$H1
=Uj 
=:k 
D$ H
D$(H
D$0H
D$8H
=Nj 
=xh 
==h 
D$HdH3
P[]A\
=.i 
=Xg 
D$0H
='g 
D$$P
D$0PD
L$D1
<Iu&
5Eh 
$tBH
fffff.
5Ho 
ffff.
=Pn!
AWAVAUATUS
D$(1
=2c 
=Vm!
D$(dH3
8[]A\A]A^A_
|$ A)
L;l$
T$ A
~1Hc|$
AWAVAUATUSH
-Di!
[]A\A]A^A_
%(h!
=R] 
-og!
H;8t7
H;8t
fff.
AUATUSH
[]A\A]
ATUI
tJHc
[]A\
AWAVAUATUSH
5db!
D$H1
5Yb!
-Fb!
,$Hc
-8a!
-=a!
Hc5+a!
\$HdH3
X[]A\A]A^A_
5r`!
-_`!
5@`!
-v_!
4+H9
5;_!
=j^!
-G^!
5>^!
l$8E1
L$(D
\$ L
\$ H
L$(tDHc
l$8D
D$(H
HcD$
|$ L
D$(H
D$ H
D$ H
5y[!
5>[!
H;t$
5xZ!
=!Z!
T$(D
L$ L
T$(D
L$ I
=(Y!
5-Y!
t4HcD$4L
Lcl$4L
-EX!
)tFH
=KW!
ffffff.
ATUSH
[]A\
fffff.
ATUSH
[]A\
ATUH
dH34%(
[]A\
ffffff.
fff.
fff.
fff.
==R!
fff.
fff.
fffff.
fffff.
fffff.
AWAVA
AUATL
[]A\A]A^A_
1.12.7
File write error [%s] : %s
Wrote packet of %u bytes.
TRUE
FALSE
[[parse_preamble: "%s"]]
FATAL ERROR: str is NULL
[[append_to_preamble: "%s"]]
(%s, %s "%s") -> (
FATAL ERROR: Bad state (%d)
, %s)
PCAP-NG
PCAP
Bad argument for '-o': %s
Bad argument for '-e': %s
Bad argument for '-i': %s
Bad src port for '-%c'
Bad dest port for '-s'
No tag specified for '-%c'
Bad tag for '-%c'
No ppi specified for '-%c'
Bad ppi for '-%c'
Bad src port for '-u'
Bad dest port for '-u'
Bad src port for '-T'
Bad dest port for '-T'
Bad src addr -%c '%s'
Bad dest addr for -%c '%s'
Standard input
Standard output
Input from: %s
Output to: %s
Output format: %s
text2pcap.c
input_file != ((void *)0)
output_file != ((void *)0)
Generated from input file %s.
-------------------------
Byte
Offset
Directive
Text
End-of-line
Init
Start-of-line
Text2pcap %s (Git Rev Unknown from unknown)
Generate a capture file from an ASCII hexdump of packets.
See http://www.wireshark.org for more information.
Usage: text2pcap [options] <infile> <outfile>
where  <infile> specifies input  filename (use - for standard input)
      <outfile> specifies output filename (use - for standard output)
Input:
  -o hex|oct|dec         parse offsets as (h)ex, (o)ctal or (d)ecimal;
                         default is hex.
  -t <timefmt>           treat the text before the packet as a date/time code;
                         the specified argument is a format string of the sort
                         supported by strptime.
                         Example: The time "10:15:14.5476" has the format code
                         "%%H:%%M:%%S."
                         NOTE: The subsecond component delimiter, '.', must be
                         given, but no pattern is required; the remaining
                         number is assumed to be fractions of a second.
                         NOTE: Date/time fields from the current date/time are
                         used as the default for unspecified fields.
  -D                     the text before the packet starts with an I or an O,
                         indicating that the packet is inbound or outbound.
                         This is only stored if the output format is PCAP-NG.
  -a                     enable ASCII text dump identification.
                         The start of the ASCII text dump can be identified
                         and excluded from the packet data, even if it looks
                         like a HEX dump.
                         NOTE: Do not enable it if the input file does not
                         contain the ASCII text dump.
Output:
  -l <typenum>           link-layer type number; default is 1 (Ethernet).  See
                         http://www.tcpdump.org/linktypes.html for a list of
                         numbers.  Use this option if your dump is a complete
                         hex dump of an encapsulated packet and you wish to
                         specify the exact type of encapsulation.
                         Example: -l 7 for ARCNet packets.
  -m <max-packet>        max packet length in output; default is %d
Prepend dummy header:
  -e <l3pid>             prepend dummy Ethernet II header with specified L3PID
                         (in HEX).
                         Example: -e 0x806 to specify an ARP packet.
  -i <proto>             prepend dummy IP header with specified IP protocol
                         (in DECIMAL).
                         Automatically prepends Ethernet header as well.
                         Example: -i 46
  -4 <srcip>,<destip>    prepend dummy IPv4 header with specified
                         dest and source address.
                         Example: -4 10.0.0.1,10.0.0.2
  -6 <srcip>,<destip>    replace IPv6 header with specified
                         dest and source address.
                         Example: -6 fe80:0:0:0:202:b3ff:fe1e:8329,2001:0db8:85a3:0000:0000:8a2e:0370:7334
  -u <srcp>,<destp>      prepend dummy UDP header with specified
                         source and destination ports (in DECIMAL).
                         Automatically prepends Ethernet & IP headers as well.
                         Example: -u 1000,69 to make the packets look like
                         TFTP/UDP packets.
  -T <srcp>,<destp>      prepend dummy TCP header with specified
                         source and destination ports (in DECIMAL).
                         Automatically prepends Ethernet & IP headers as well.
                         Example: -T 50,60
  -s <srcp>,<dstp>,<tag> prepend dummy SCTP header with specified
                         source/dest ports and verification tag (in DECIMAL).
                         Automatically prepends Ethernet & IP headers as well.
                         Example: -s 30,40,34
  -S <srcp>,<dstp>,<ppi> prepend dummy SCTP header with specified
                         source/dest ports and verification tag 0.
                         Automatically prepends a dummy SCTP DATA
                         chunk header with payload protocol identifier ppi.
                         Example: -S 30,40,34
Miscellaneous:
  -h                     display this help and exit.
  -d                     show detailed debug of parser states.
  -q                     generate no output at all (automatically disables -d).
  -n                     use PCAP-NG instead of PCAP as output format.
Start new packet (cont = %s).
Failure processing time "%s" using time format "%s"
   (defaulting to Jan 1,1970 00:00:00 GMT)
timecode: %02d/%02d/%d %02d:%02d:%02d %d
Format(%s), time(%u), subsecs(%u)
FATAL ERROR: Bad hex number? [%s]
--- Directive [%s] currently unsupported ---
Inconsistent offset. Expecting %0X, got %0X. Ignoring rest of packet
FATAL ERROR: got NULL str pointer in state (%d)
No dest port specified for '-%c'
No dest port specified for '-u'
Bad source param addr for '-%c'
No dest addr specified for '-%c'
aDdhqe:i:l:m:no:u:s:S:t:T:4:6:
Must specify input and output filename
Cannot open file [%s] for reading: %s
Cannot open file [%s] for writing: %s
Dummy headers (-e, -i, -u, -s, -S -T) cannot be specified with link type override (-l)
Generate dummy Ethernet header: Protocol: 0x%0X
Generate dummy IP header: Protocol: %ld
Generate dummy UDP header: Source port: %u. Dest port: %u
Generate dummy TCP header: Source port: %u. Dest port: %u
Generate dummy SCTP header: Source port: %u. Dest port: %u. Tag: %u
Generate dummy DATA chunk header: TSN: %u. SID: %d. SSN: %d. PPID: %u
text2pcap (Git Rev Unknown from unknown)
Counters provided by text2pcap
Read %u potential packet%s, wrote %u packet%s (%lu byte%s).
main
')uB
*	5|z
lEd/
6 PQ
pCRF
Yg:a
JZJ{.
#FLR
_QS}
input in flex scanner failed
bad buffer in yy_scan_bytes()
out of dynamic memory in yyensure_buffer_stack()
out of dynamic memory in yy_create_buffer()
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
out of dynamic memory in yy_get_next_buffer()
fatal flex scanner internal error--no action found
out of dynamic memory in yy_scan_buffer()
out of dynamic memory in yy_scan_bytes()
;*3$"
text2pcap.debug
7zXZ
WogJ
$oA	
&u\v6V
mQbH
q&>P
-McS
V<gX
0I,{XO
w\N?
8%F3+}
ZJ)X
;$;V
NhG*
'?h!.$Z
~va{
<?vcZ
JJO~
8z>n
vzmn
n8W~
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
