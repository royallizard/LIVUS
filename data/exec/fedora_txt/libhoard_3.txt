I%gB
	Dc1O
J	)3
.j&'
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
__malloc_hook
__free_hook
__realloc_hook
__memalign_hook
hoardmemalign
hoardrealloc
hoardfree
hoardmalloc
__malloc_initialize_hook
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_ED2Ev
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_ED1Ev
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_E6unlockEv
anyThreadCreated
_ZN17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEED2Ev
_ZN17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEED1Ev
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_ED2Ev
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_ED1Ev
_ZN5Hoard11ProcessHeapILm65536ELi8EN2HL12SpinLockTypeENS_10GlobalHeapILm65536ELi8ES2_E27bogusThresholdFunctionClassEED2Ev
_ZN5Hoard11ProcessHeapILm65536ELi8EN2HL12SpinLockTypeENS_10GlobalHeapILm65536ELi8ES2_E27bogusThresholdFunctionClassEED1Ev
_ZN5Hoard14LockMallocHeapINS_9SmallHeapEED2Ev
_ZN5Hoard14LockMallocHeapINS_9SmallHeapEED1Ev
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_E6unlockEv
_ZN17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE4lockEv
_ZN17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE6unlockEv
pthread_key_create
_ZN17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE4freeEPv
_ZN17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEED0Ev
_ZdlPvm
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_ED0Ev
_ZN5Hoard14LockMallocHeapINS_9SmallHeapEED0Ev
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_ED0Ev
_ZN5Hoard11ProcessHeapILm65536ELi8EN2HL12SpinLockTypeENS_10GlobalHeapILm65536ELi8ES2_E27bogusThresholdFunctionClassEED0Ev
__assert_fail
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_E4freeEPv
_ZN2HL4binsIN5Hoard21HoardSuperblockHeaderINS_12SpinLockTypeELi65536ENS1_11ProcessHeapILm65536ELi8ES3_NS1_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEELi65536EE5_binsE
_ZN2HL12SpinLockType13contendedLockEv
sched_yield
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_E4lockEv
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_E4lockEv
__cxa_guard_acquire
_ZTVN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_EE
_ZGVZN5Hoard10GlobalHeapILm65536ELi8EN2HL12SpinLockTypeEE7getHeapEvE7theHeap
_ZZN5Hoard10GlobalHeapILm65536ELi8EN2HL12SpinLockTypeEE7getHeapEvE7theHeap
_ZTVN5Hoard14LockMallocHeapINS_9SmallHeapEEE
__cxa_guard_release
_ZZN5Hoard10GlobalHeapILm65536ELi8EN2HL12SpinLockTypeEE7getHeapEvE10theHeapBuf
_ZTV17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE
_ZTVN5Hoard11ProcessHeapILm65536ELi8EN2HL12SpinLockTypeENS_10GlobalHeapILm65536ELi8ES2_E27bogusThresholdFunctionClassEEE
_ZN2HL11MmapWrapper3mapEm
mmap
stderr
fwrite
pthread_once
hoardmallopt
_ZN5Hoard27ThreadLocalAllocationBufferILi55EXadL_ZN2HL4binsINS_21HoardSuperblockHeaderINS1_12SpinLockTypeELi65536ENS_9SmallHeapEEELi65536EE12getSizeClassEmEEXadL_ZNS7_12getClassSizeEiEELi256ELi262144ENS_15HoardSuperblockIS4_Li65536ES5_EELi65536ENS_13HoardHeapTypeEE5clearEv
_ZN2HL4binsIN5Hoard21HoardSuperblockHeaderINS_12SpinLockTypeELi65536ENS1_9SmallHeapEEELi65536EE5_binsE
_ZGVZN5Hoard10ExactlyOneIN2HL10LockedHeapINS1_12SpinLockTypeENS_19AlignedMmapInstanceILm65536EEEEEEclEvE21theOneTrueInstancePtr
_ZZN5Hoard10ExactlyOneIN2HL10LockedHeapINS1_12SpinLockTypeENS_19AlignedMmapInstanceILm65536EEEEEEclEvE21theOneTrueInstancePtr
pthread_self
munmap
_ZZN5Hoard10ExactlyOneIN2HL10LockedHeapINS1_12SpinLockTypeENS_19AlignedMmapInstanceILm65536EEEEEEclEvE3buf
__cxa_guard_abort
_Unwind_Resume
__gxx_personality_v0
_ZN2HL10HybridHeapILi32656EN5Hoard14ThreadPoolHeapILi1024ELi128ENS1_18PerThreadHoardHeapEEENS1_7BigHeapEE8slowPathEm
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_E9getObjectEim
_ZN5Hoard10EmptyClassINS_15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS_9SmallHeapEEELi8EE3putEPS5_
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_E12unlocked_putEPS9_m
_ZN5Hoard10EmptyClassINS_15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS_9SmallHeapEEELi8EE3getEv
_ZN5Hoard10EmptyClassINS_15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEELi8EE3getEv
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_E3getEmPSB_
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_E20getAnotherSuperblockEm
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_E14slowPathMallocEm
_ZN5Hoard27ThreadLocalAllocationBufferILi55EXadL_ZN2HL4binsINS_21HoardSuperblockHeaderINS1_12SpinLockTypeELi65536ENS_9SmallHeapEEELi65536EE12getSizeClassEmEEXadL_ZNS7_12getClassSizeEiEELi256ELi262144ENS_15HoardSuperblockIS4_Li65536ES5_EELi65536ENS_13HoardHeapTypeEE6mallocEm
pthread_getspecific
pthread_setspecific
_ZdaPv
_ZdlPv
pthread_exit
dlsym
hoardmalloc_usable_size
hoardcalloc
memset
hoardrecalloc
_Znam
__cxa_allocate_exception
_ZTVSt9bad_alloc
_ZTISt9bad_alloc
_ZNSt9bad_allocD1Ev
__cxa_throw
_Znwm
hoardstrdup
strlen
strcpy
_ZnamRKSt9nothrow_t
__cxa_call_unexpected
_ZnwmRKSt9nothrow_t
hoardstrndup
strnlen
strncpy
memcpy
posix_memalign
hoardvalloc
hoardpvalloc
hoardgetcwd
pthread_create
__stack_chk_fail
_ZN5Hoard10EmptyClassINS_15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEELi8EE3putEPS9_
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_E12unlocked_putEPSC_m
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_E3putEPSC_m
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_E12slowPathFreeEiii
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_E4freeEPv
_ZTSN5Hoard10GlobalHeapILm65536ELi8EN2HL12SpinLockTypeEE27bogusThresholdFunctionClassE
_ZTIN5Hoard10GlobalHeapILm65536ELi8EN2HL12SpinLockTypeEE27bogusThresholdFunctionClassE
_ZTVN10__cxxabiv117__class_type_infoE
_ZTSN5Hoard27hoardThresholdFunctionClassE
_ZTIN5Hoard27hoardThresholdFunctionClassE
_ZTS16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_9SmallHeapEEEE
_ZTI16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_9SmallHeapEEEE
_ZTSN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_EE
_ZTIN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_EE
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTSN5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES4_EENS_15HoardSuperblockIS4_Li65536ENS_9SmallHeapEEELi8ES4_NS_27hoardThresholdFunctionClassES9_EEEE
_ZTIN5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES4_EENS_15HoardSuperblockIS4_Li65536ENS_9SmallHeapEEELi8ES4_NS_27hoardThresholdFunctionClassES9_EEEE
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTSN5Hoard9SmallHeapE
_ZTIN5Hoard9SmallHeapE
_ZTSN5Hoard14LockMallocHeapINS_9SmallHeapEEE
_ZTIN5Hoard14LockMallocHeapINS_9SmallHeapEEE
_ZTS16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE
_ZTI16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE
_ZTS17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE
_ZTI17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE
_ZTSN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_EE
_ZTIN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_EE
_ZTSN5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS4_Li65536ENS_11ProcessHeapILm65536ELi8ES4_NS_10GlobalHeapILm65536ELi8ES4_E27bogusThresholdFunctionClassEEEEEESD_Li8ES4_SB_SC_EEEE
_ZTIN5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS4_Li65536ENS_11ProcessHeapILm65536ELi8ES4_NS_10GlobalHeapILm65536ELi8ES4_E27bogusThresholdFunctionClassEEEEEESD_Li8ES4_SB_SC_EEEE
_ZTSN5Hoard11ProcessHeapILm65536ELi8EN2HL12SpinLockTypeENS_10GlobalHeapILm65536ELi8ES2_E27bogusThresholdFunctionClassEEE
_ZTIN5Hoard11ProcessHeapILm65536ELi8EN2HL12SpinLockTypeENS_10GlobalHeapILm65536ELi8ES2_E27bogusThresholdFunctionClassEEE
libdl.so.2
libpthread.so.0
libstdc++.so.6
libm.so.6
libgcc_s.so.1
libc.so.6
_edata
__bss_start
_end
GLIBC_2.2.5
GCC_3.0
CXXABI_1.3.9
GLIBCXX_3.4
CXXABI_1.3
GLIBC_2.4
GLIBC_2.14
AWAVH
AUATUSH
[]A\A]A^A_
AWAVAUATUSH
GpH9
I+G@A
5e	!
t\H;
t*H;
5|C!
=}0!
[]A\A]A^A_
I9G H
R H;
R H;
AUATUSH
H9E 
H9E 
@ H;
[]A\A]
H9E 
AWAVAUATUSH
H+A@
ApH9
w4H9
w	H9
BpH9
H+B@
[]A\A]A^A_
W H9
R H;
I+G@A
t_H;*u
t-H;)
[]A\A]A^A_
v H;5
AWAVAUATUSH
D$$6
D$(H
;L$$
GpH9
M9o 
@ H;
R H;
H+D$
D$(H
D$(H
I+G@A
tgH;*u
t,H;)
8[]A\A]A^A_
pthread_
exit
JpH9
H+B@
t[USH
ATUSH
[]A\
tkATUI
[]A\
AUATUSH
tUL9
[]A\A]
[]A\A]
AUATI
pthread_
crea
([]A\A]
AUAT
H9G 
I;z 
BpL9
tpL9	
t/L9	
[]A\A]
AWAVH
AUATH
D$$6
9L$$
GpH9
I+G@A
H9*u
H+D$
D$(H
D$(H
M9o 
@ H;
R H;
8[]A\A]A^A_
AWAVI
AUATUSH
<#H)
[]A\A]A^A_
wCE1
AWAV
AUATUSH
(H9G 
FpH9
H+F@
H9G 
[]A\A]A^A_
FpH9
t/H9
D;d$
t+I9
|ID9
trI9
t+I9
t-I9
t-L9
t+H9
t#L9	uL
USH9
H9G 
I9D$ uT[]A\
AWAVE1
AUATA
t/L9	
oHE1
tlL9
t'L9
Lct$
t*L9
t0L9
[]A\A]A^A_
AWAVE1
AUATA
t/L9	
oHE1
tlL9
t'L9
Lct$
t*L9
t0L9
[]A\A]A^A_
ATUH
H9E 
H9U 
[]A\
AWAVAUATUSH
[]A\A]A^A_
tjL;0u
L90u
AWAVAUATUSH
H9E H
ApH9
H+A@
H9E 
[]A\A]A^A_
l$0L
L$(L
l$ H
ApH9
t.H9
\$<H
D;T$<
tnH9
t*H9
tsH9
t*H9
tuH9
t*H9
H9E L
l$0u"L
t*H9E 
H9E 
H9U u
t.H9
AUATUSH
[]A\A]
[]A\A]
H9C 
H9S 
R H;
[]A\A]
WpH9
H+G@
H9C 
t-L9
t+H9
t#L9	uL
USH9
H9G 
I9D$ uT[]A\
H;n 
H9E 
PwtL
H9E 
AVAU
ATUSH
H9G 
I9D$ 
[]A\A]A^
AWAV
AUATUSH
H9G 
I;z I
zpH9
t.H99
I9D$ 
[]A\A]A^A_
statistics.h
_inUse >= 0
_allocated >= 0
heaplayers/util/dllist.h
p != NULL
simtls.cpp
getcwd
hoardmanager.h
h->isValid()
hoardsuperblock.h
_header.isValid()
s->getOwner() == this
s->normalize (ptr) == ptr
heaplayers/bins64k.h
sz <= _bins[NUM_BINS-1]
ind < NUM_BINS
_header.getObjectsFree() >= 0
emptyclass.h
getFullness(s) == i
f != this
array.h
index >= 0
index < N
prev == 0
inRange (ptr)
inRange (ptr2)
_header.getObjectsFree() <= _header.getTotalObjects()
Virtual memory exhausted.
getSizeClass(_bins[i]) == i
redirectfree.h
owner != NULL
owner->isValid()
addheaderheap.h
(size_t) (p + 1) == (size_t) ptr + headerSize
hoardsuperblockheader.h
_position
_objectsFree >= 1
manageonesuperblock.h
_current->getSize(ptr) >= sz
p != s
s != sNew
(size_t) ptr % sizeof(double) == 0
u >= 0
a >= 0
o != NULL
realSize >= sz
tlab.h
_localHeapBytes >= sz
pthread_getspecific (theHeapKey) == NULL
getSize(ptr) >= sizeof(HL::DLList::Entry *)
s->getOwner() != this
void Hoard::ThreadLocalAllocationBuffer<NumBins, getSizeClass, getClassSize, LargestObject, LocalHeapThreshold, SuperblockType, SuperblockSize, ParentHeap>::free(void*) [with int NumBins = 55; int (* getSizeClass)(size_t) = HL::bins<Header, 65536>::getSizeClass<Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::SmallHeap> >; size_t (* getClassSize)(int) = HL::bins<Header, 65536>::getClassSize<Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::SmallHeap> >; int LargestObject = 256; int LocalHeapThreshold = 262144; SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int SuperblockSize = 65536; ParentHeap = Hoard::HoardHeapType]
void* Hoard::ThreadLocalAllocationBuffer<NumBins, getSizeClass, getClassSize, LargestObject, LocalHeapThreshold, SuperblockType, SuperblockSize, ParentHeap>::malloc(size_t) [with int NumBins = 55; int (* getSizeClass)(size_t) = HL::bins<Header, 65536>::getSizeClass<Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::SmallHeap> >; size_t (* getClassSize)(int) = HL::bins<Header, 65536>::getClassSize<Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::SmallHeap> >; int LargestObject = 256; int LocalHeapThreshold = 262144; SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int SuperblockSize = 65536; ParentHeap = Hoard::HoardHeapType; size_t = long unsigned int]
void* Hoard::AddHeaderHeap<SuperblockType, SuperblockSize, SuperHeap>::malloc(size_t) [with SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::BigHeap>; long unsigned int SuperblockSize = 65536ul; SuperHeap = Hoard::AlignedMmap<65536ul, HL::SpinLockType>; size_t = long unsigned int]
void* Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::slowPathMalloc(size_t) [with SourceHeap = Hoard::AlignedSuperblockHeap<HL::SpinLockType, 65536ul>; ParentHeap = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8; LockType = HL::SpinLockType; thresholdFunctionClass = Hoard::hoardThresholdFunctionClass; HeapType = Hoard::SmallHeap; size_t = long unsigned int]
void* Hoard::HoardSuperblockHeader<LockType, SuperblockSize, HeapType>::freeListAlloc() [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
void* Hoard::HoardSuperblockHeader<LockType, SuperblockSize, HeapType>::reapAlloc() [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
void* Hoard::HoardSuperblockHeader<LockType, SuperblockSize, HeapType>::malloc() [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
void* Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::malloc(size_t) [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap; size_t = long unsigned int]
void* Hoard::ManageOneSuperblock<SuperHeap>::malloc(size_t) [with SuperHeap = Hoard::EmptyClass<Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>, 8>; size_t = long unsigned int]
void* Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::malloc(size_t) [with SourceHeap = Hoard::AlignedSuperblockHeap<HL::SpinLockType, 65536ul>; ParentHeap = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8; LockType = HL::SpinLockType; thresholdFunctionClass = Hoard::hoardThresholdFunctionClass; HeapType = Hoard::SmallHeap; size_t = long unsigned int]
TheCustomHeapType* initializeCustomHeap()
T& Hoard::Array<N, T>::operator()(int) [with int N = 128; T = int]
void HL::DLList::Entry::setPrev(HL::DLList::Entry*)
Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType* Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::get() [with SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; int EmptinessClasses = 8; Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >]
void Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::transfer(Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType*, int, int) [with SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; int EmptinessClasses = 8; Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >]
void* Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::normalize(void*) const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
void Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::free(void*) [with SourceHeap = Hoard::AlignedSuperblockHeap<HL::SpinLockType, 65536ul>; ParentHeap = EmptyHoardManager<Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> > >; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; int EmptinessClasses = 8; LockType = HL::SpinLockType; thresholdFunctionClass = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
void Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::unlock() [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
HeapType* Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::getOwner() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
bool Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::isValidSuperblock() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
T& Hoard::Array<N, T>::operator()(int) [with int N = 10; T = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >*]
void Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::setPrev(Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>*) [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
void Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::setNext(Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>*) [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>* Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::getNext() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
void Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::sanityCheck() [with SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; int EmptinessClasses = 8]
void Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::put(Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType*) [with SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; int EmptinessClasses = 8; Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >]
void Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::setOwner(HeapType*) [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
int Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::getObjectsFree() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
int Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::getTotalObjects() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
static int HL::bins<Header, 65536>::slowGetSizeClass(size_t) [with Header = Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; size_t = long unsigned int]
static int HL::bins<Header, 65536>::getSizeClass(size_t) [with Header = Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; size_t = long unsigned int]
static void Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::sanityCheck::checkInvariant(Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>*) [with SourceHeap = Hoard::AlignedSuperblockHeap<HL::SpinLockType, 65536ul>; ParentHeap = EmptyHoardManager<Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> > >; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; int EmptinessClasses = 8; LockType = HL::SpinLockType; thresholdFunctionClass = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
HeapType* Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::getOwner() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
void Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::put(Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::SuperblockType*, size_t) [with SourceHeap = Hoard::AlignedSuperblockHeap<HL::SpinLockType, 65536ul>; ParentHeap = EmptyHoardManager<Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> > >; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; int EmptinessClasses = 8; LockType = HL::SpinLockType; thresholdFunctionClass = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>; Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; size_t = long unsigned int]
bool Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::isValidSuperblock() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>]
void Hoard::Statistics::setAllocated(int)
void Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::put(Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType*) [with SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8; Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>]
Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType* Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::get() [with SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8; Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>]
void Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::slowPathFree(int, int, int) [with SourceHeap = Hoard::AlignedSuperblockHeap<HL::SpinLockType, 65536ul>; ParentHeap = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8; LockType = HL::SpinLockType; thresholdFunctionClass = Hoard::hoardThresholdFunctionClass; HeapType = Hoard::SmallHeap]
void Hoard::Statistics::setInUse(int)
int Hoard::Statistics::getAllocated() const
int Hoard::Statistics::getInUse() const
void Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::setPrev(Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>*) [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
void Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::setNext(Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>*) [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
void Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::transfer(Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType*, int, int) [with SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8; Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>]
int Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::getObjectsFree() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
int Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::getTotalObjects() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>* Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::getNext() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
T& Hoard::Array<N, T>::operator()(int) [with int N = 10; T = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>*]
void Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::sanityCheck() [with SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8]
T& Hoard::Array<N, T>::operator()(int) [with int N = 55; T = Hoard::ManageOneSuperblock<Hoard::EmptyClass<Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>, 8> >]
void* Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::normalize(void*) const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
static void Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::sanityCheck::checkInvariant(Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>*) [with SourceHeap = Hoard::AlignedSuperblockHeap<HL::SpinLockType, 65536ul>; ParentHeap = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8; LockType = HL::SpinLockType; thresholdFunctionClass = Hoard::hoardThresholdFunctionClass; HeapType = Hoard::SmallHeap]
void Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::free(void*) [with SourceHeap = Hoard::AlignedSuperblockHeap<HL::SpinLockType, 65536ul>; ParentHeap = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8; LockType = HL::SpinLockType; thresholdFunctionClass = Hoard::hoardThresholdFunctionClass; HeapType = Hoard::SmallHeap]
static void Hoard::RedirectFree<Heap, SuperblockType_>::free(void*) [with Heap = Hoard::LockMallocHeap<Hoard::SmallHeap>; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>]
T& Hoard::Array<N, T>::operator()(int) [with int N = 128; T = Hoard::PerThreadHoardHeap]
bool Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::isValidSuperblock() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
static int HL::bins<Header, 65536>::slowGetSizeClass(size_t) [with Header = Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::SmallHeap>; size_t = long unsigned int]
static int HL::bins<Header, 65536>::getSizeClass(size_t) [with Header = Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::SmallHeap>; size_t = long unsigned int]
static size_t HL::bins<Header, 65536>::getClassSize(int) [with Header = Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::SmallHeap>; size_t = long unsigned int]
N5Hoard10GlobalHeapILm65536ELi8EN2HL12SpinLockTypeEE27bogusThresholdFunctionClassE
N5Hoard27hoardThresholdFunctionClassE
16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_9SmallHeapEEEE
N5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_EE
N5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES4_EENS_15HoardSuperblockIS4_Li65536ENS_9SmallHeapEEELi8ES4_NS_27hoardThresholdFunctionClassES9_EEEE
N5Hoard9SmallHeapE
N5Hoard14LockMallocHeapINS_9SmallHeapEEE
16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE
17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE
N5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_EE
N5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS4_Li65536ENS_11ProcessHeapILm65536ELi8ES4_NS_10GlobalHeapILm65536ELi8ES4_E27bogusThresholdFunctionClassEEEEEESD_Li8ES4_SB_SC_EEEE
N5Hoard11ProcessHeapILm65536ELi8EN2HL12SpinLockTypeENS_10GlobalHeapILm65536ELi8ES2_E27bogusThresholdFunctionClassEEE
;*3$"
zPLR
libhoard.so.debug
7zXZ
hV2J
ZBb3
33]>
>XT(
g0$%V
jm07
ZfEVP
is`P
@-xy
	SnEa
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
