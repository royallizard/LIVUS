/lib64/ld-linux-x86-64.so.2
DD};2
libcrmcommon.so.3
g_hash_table_destroy
__gmon_start__
_Jv_RegisterClasses
qb_log_callsite_get
g_hash_table_insert
g_list_free
g_list_free_full
g_hash_table_remove
_ITM_deregisterTMCloneTable
g_list_length
_ITM_registerTMCloneTable
qb_ipcs_destroy
g_hash_table_size
g_hash_table_iter_next
g_hash_table_iter_init
g_hash_table_new_full
g_hash_table_foreach
g_list_remove_link
g_list_sort
qb_log_real_
g_list_append
g_source_remove
g_hash_table_replace
g_hash_table_lookup
g_list_prepend
g_timeout_add
g_list_remove
g_str_equal
qb_log_from_external_source
crm_xml_add_int
crm_strcase_hash
mainloop_destroy_trigger
mainloop_set_trigger
add_message_xml
g_hash_destroy_str
crm_xml_add
first_named_child
crm_element_value_copy
mainloop_add_trigger
crm_element_value_int
free_xml
crm_exit
crm_strdup_printf
score2char
crm_set_options
xpath_search
crm_add_logfile
pcmk_panic
create_xml_node
crm_system_name
crm_ipcs_send
xml_log_patchset
g_str_hash_traditional
crm_element_value
string2xml
crm_generate_uuid
client_connections
crm_client_name
crm_ipcs_recv
crm_ipcs_send_ack
safe_str_neq
crm_time_new
crm_log_output_fn
crm_get_option
crm_log_preinit
get_xpath_object
crm_abort
crm_bump_log_level
crm_log_init
xml_apply_patchset
freeXpathObject
stonith_ipc_server_init
crm_get_msec
_fini
get_message_xml
crm_ipcs_client_pid
find_library_function
daemon_option_enabled
pcmk_strerror
crm_client_cleanup
crm_is_true
crm_parse_int
hash2field
getXpathResult
xml2list
crm_client_destroy
crm_client_get_by_id
xml_patch_versions
crm_help
copy_xml
crm_str_eq
mainloop
crm_is_callsite_active
crm_client_new
crm_client_get
log_data_element
mainloop_add_signal
libcrmcluster.so.4
crm_get_peer
is_openais_cluster
crm_peer_cache
crm_set_status_callback
pcmk_cpg_membership
pcmk_message_common_cs
crm_peer_init
get_cluster_type
crm_peer_destroy
send_cluster_message
reap_crm_member
crm_cluster_connect
libstonithd.so.2
g_list_find_custom
stonith_api_delete
stonith_create_op
create_level_registration_xml
stonith_api_new
stonith_key_value_freeall
stonith_action_execute_async
stonith_action_create
stonith_key_value_add
create_device_registration_xml
libpe_status.so.4
g_list_insert_sorted
g_list_nth_data
get_meta_attributes
set_working_set_defaults
get_rsc_attributes
cluster_status
libpengine.so.4
cleanup_alloc_calculations
do_calculations
libncurses.so.5
libtinfo.so.5
libcib.so.4
libpe_rules.so.2
libcpg.so.4
libcfg.so.6
libcmap.so.4
libquorum.so.5
libgnutls.so.30
libcorosync_common.so.4
libbz2.so.1
libxslt.so.1
libxml2.so.2
libc.so.6
__printf_chk
optind
strrchr
regexec
__strdup
puts
regfree
time
__stack_chk_fail
strtol
calloc
strlen
strstr
memcpy
rand
malloc
__ctype_b_loc
sscanf
regcomp
optarg
__snprintf_chk
strchr
sleep
__cxa_finalize
strcmp
__libc_start_main
snprintf
libuuid.so.1
libpam.so.0
libglib-2.0.so.0
g_main_loop_run
g_main_loop_new
g_list_free_1
g_main_loop_quit
g_main_loop_is_running
libltdl.so.7
libqb.so.0
libdl.so.2
librt.so.1
libpthread.so.0
__start___verbose
__stop___verbose
_edata
__bss_start
_end
GLIBC_2.14
GLIBC_2.4
GLIBC_2.3
GLIBC_2.3.4
GLIBC_2.2.5
AUATH
D$ H
D$(H
Vt5~
ct4A
_AXH
localhosf
[]A\A]
D$XH
D$@H
W8Q1
fffff.
fffff.
fffff.
fff.
AUATI
([]A\A]
D$$P
D$(P1
ATUS1
D$81
L$8dH3
@[]A\
AWAVI
AUATUSH
D$X1
D$XdH3
h[]A\A]A^A_
\$0L
l$ L
t$(H
T$ H
t$ H
t$0H
D$ H
\$0H
\$hH
ffff.
 []A\
ffffff.
AUATA
[]A\A]
[]A\A]
[]A\A]H
AVAUATUSH
[]A\A]A^
[]A\A]A^H
PATE1
[]A\A]A^
]A\A]A^H
ffff.
AVAUATUA
[]A\A]A^
[]A\A]A^
SATE1
fff.
AUAT1
[]A\A]
[]A\A]H
AUATA
[]A\A]
AWAVAUATUSH
T$81
T$,H
d$,1
t$0H
T$0H
D$8dH3
H[]A\A]A^A_
ATPH
D$<H
t$(1
t$,H
ATUSH
[]A\
=Ht!
AWAVAUATUSH
D$H1
D$HdH3
X[]A\A]A^A_
AYAZ
=ho!
=#o!
T$0H
t$ H
D$8H
D$<P
D$@PAT1
L$$H
=Fl!
T$ 1
5V|!
=b|!
D$8A
D$<P
D$@PATH
=dy!
D$<P
D$@PAT
=%f!
L$$H
=Xd!
T$ 1
L$$H
T$ 1
F<9G<
fffff.
=Et!
5v]!
=ms!
fff.
ATUSH
[]A\
=zt!
QPRH
QPRH
uXE1
=Sf!
=Uf!
=Pe!
AVAUA
ATUH
[]A\A]A^
3UE1
AWAVAUATUSH
D$H1
tfHcL$
|$HdH3<%(
X[]A\A]A^A_
AYAZ
\$3H
l$ D
d$4L
|$8E
l$(H
L$ H
T$3w
l$ L
l$(D
d$4L
AWAVA
AUATM
SXATAWPU1
AQAPE1
AVRH
[]A\A]A^A_
AWPU
s`AVE1
[]A\A]A^A_
AUATH
([]A\A]
AYAZH
=H`!
ffffff.
fffff.
AWAVAUATUSH
=>]!
D$h1
L$(L
d$@H
|$8L
t$01
|$8H
D$hdH3
x[]A\A]A^A_
L$ I
D$(H
=m\!
t$,H
t$,H
fffff.
AUATI
D$H1
\$HdH3
X[]A\A]
fff.
ATUSH
[]A\
[]A\
ffff.
ATUSH
u#9C
[]A\
[]A\
UPE1
AUATA
=6S!
[]A\A]
ATUI
[]A\H
fff.
dH3<%(
AUATA
=fO!
[]A\A]
AWAVA
AUATI
=bM!
="M!
[]A\A]A^A_
AXAY
=yJ!
AZA[
ATUH
fHdH
=j9!
[]A\
[]A\
AWAVAUATUSH
\$xH
|$01
D$8I
u:f.
=!D!
D$xI
L$`L
[]A\A]A^A_
t$`A
t$XE1
D$xH
=6C!
D$xH
|$XH
|$XH
|$XH
[]A\A]A^A_H
ffff.
AUATUSH
=6A!
A\A]
[]A\A]H
AUE1
[]A\A]
AUE1
AVAUE
ATUI
[]A\A]A^
[]A\A]A^
fffff.
AWAVAUATI
|$ H
t$ A
|$ H
t$(I
([]A\A]A^A_
AWE1
=a9!
ATUI
l$XH
=1-!
[]A\
AWAVI
AUAT
[]A\A]A^A_
AVAUI
ATUI
ATSE1
[]A\A]A^
AWAVAUATUSH
Q<H9
AWE1
_AXH
[]A\A]A^A_
[]A\A]A^A_
=]$!
=X1!
AWE1
=!#!
AVAUA
ATUH
=x#!
C(u8H
[]A\A]A^
stat
pcmk_hosH
t_check
AWAVAUATUSH
t$8H
D$x1
T$(D)
Hct$(H
|$ H
|$PH
|$0H
=+'!
L$8H
L$xdH3
[]A\A]A^A_
AWAU
AXAYH
l$PL
l$HL
d$@H
t$@H
t$HH
t$PH
t$XE1
Hct$
AXAY
=I$!
D$PH
l$PH
=0!!
ATUH
oXSH
[]A\
ffff.
AWAV
AUATUSH
HcT$
[]A\A]A^A_
PAU1
AUATI
HcT$
HcD$
[]A\A]
uUHcT$
AVAUA
ATUA
[]A\A]A^
[]A\A]A^
ffffff.
AWAVI
AUATI
D$81
D$ H
t$0H
L$8dH3
H[]A\A]A^A_
ffffff.
AWAVAUATUSH
T$HH
L$ E1
;E0t6H
T$LH
ATPE1
[]A\A]A^A_
D$LH
T$`H
L$ I
L$(I
T$`H
;E0tIH
T$PD
L$(H
t$LH
T$`H
T$`L
t$4PRH
D$ H
D$TPU1
AYAZ
H	E(H
H	E(E1
ATE1
t$PH
t$`1
|$ H
T$`H
|$ H
|$LH
L$ D
L$ L
T$`H
T$ H
d$`H
D$XH
D$ H
T$ 1
L$XH
L$8t
D$XH
D$XH
D$XQH
t$XL
|$81
|$ H
T$8H
T$ 1
D$XH
t$`H
T$`H
|$ H
|$ H
L$ H
t$`H
|$ H
T$`H
t$HH
T$ H
T$`H
|$`H
fff.
ffff.
ATUA
[]A\
ATUS1
D$81
L$8dH3
@[]A\
fffff.
AWAVA
AUATI
D$H1
D$0E
D$X@
d$0H
D$X@
d$0H
T$0H
D$DH
L$HdH3
X[]A\A]A^A_
rebof
AWAVAUATA
[]A\A]A^A_
dH3<%(
AWAVAUATUSH
[]A\A]A^A_
]A\A]A^A_
AWAVE
AUATI
|$`H
([]A\A]A^A_
PAT1
C(ATH
PAU1
ffff.
AVAUH
ATUH
[]A\A]A^
\$@L
AWAVAUATI
D$81
D$X@
D$<E1
tSf.
D$<A
H;D$
D$<H
L$8dH3
H[]A\A]A^A_
T$ H
d$ H
l$0E
fff.
AVAUATUH
dH34%(
[]A\A]A^
Pj@1
AVAUH
ATPH
ffff.
AUATE1
D9k(D
FC(9C$
[]A\A]
CX@t
ATUH
a human
[]A\
AWAVI
AUATH
D$81
L$8dH3
H[]A\A]A^A_
HcD$
AWE1
AXAY
GhP1
ffffff.
ATUA
[]A\
AVAUI
ATUSH
A[XH
 []A\A]A^
AYAZH
k$;k(
0t	M
ffff.
fff.
AUATI
t;UH
[]A\A]
[]A\A]
AWAVH
AUATI
D$H1
T$,H
D$4L
D$ ^_
D$0H
d$0M
AZA[
d$0M
CX@H
L$HdH3
X[]A\A]A^A_
CX@u
T$0H
d$<E
AYAZ
D$XH
$H9D$
AVAUH
ATUH
[]A\A]A^
ChATH
^_t0
AVAUI
ATUH
D$81
L$8dH3
@[]A\A]A^
ffffff.
AWAVI
AUATA
D$H1
l$ L
GPH9
L$HdH3
X[]A\A]A^A_
AWAVA
AUATL
[]A\A]A^A_
Connection %p closed
main.c
Connection %p destroyed
unknown
nack
crm_task
rm_node_cache
stonith-ng
st_op
st_clientid
st_clientname
st_clientnode
%s.%u
st_callopt
log-assert
c->request_id == 0
xml-blob
Client[inbound]
class
stonith
target-role
stopped
Available: %s = %d
type
provider
 %s=%s
num_updates
admin_epoch
Connection created for %p
stonith_command
__name__
poke
Peer[inbound]
Sending response
client_obj->request_id
Sending response %d to %s %s
Sending an event to %s %s
st_notify_fence
st_device_register
st_device_remove
check-assert
update_msg != NULL
subt
type != NULL
st-async-timeout-value
st_callid
st_timeout
st_notify
st_calldata
Notifying clients
Notify complete
st_level_remove
st_origin
st_active
match != NULL
target-pattern
Updating %s[%d] (%s) to %s
st_level_add
index
Full topology refresh
//fencing-level
none
new location constraint
new resource
Missing %s update
cib_rc
cib_update_result
Config update
Re-requesting the full cib
local_cib != NULL
patchset
format
operation
create
modify
change-result
delete
/fencing-topology
/configuration
new constraint
primitive
primitive[@id='
/resources
shortpath
rsc_location
__crm_diff_marker__
reboot
monitor
status
mode [options]
metadata
 <version>1.0</version>
 <parameters>
  </parameter>
pcmk_host_argument
pcmk_host_map
pcmk_host_list
pcmk_host_check
pcmk_delay_max
 </parameters>
</resource-agent>
cib_new
libcib.so.4
crmd
cib_diff_notify
init_cib_cache_cb
#watchdog
internal
Done
Starting %s mainloop
No connection to the CIB
stand-alone
stand-alone-w-cpg
logfile
verbose
version
help
Connection to the CIB closed.
Terminating with  %d clients
[%s] ABORTED: %s (%d)
[%s] Patch aborted: %s (%d)
Unknown patch format: %d
Device %s has been disabled
%sSync reply to %s failed: %s
Invalid XML: '%.120s'
Invalid client: %p
Flags %u/%u for command %u from %s
flags & crm_ipc_client_response
Only processing one copy of the clone %s
Device %s is allowed on %s: score=%d
Broadcasting our uname because of node %u
(originator of delegated request)
Sending callback to request originator
No client to sent the response to.  F_STONITH_CLIENTID not set.
Skipping client with NULL channel
Sent %s notification to client %s.%.6s
timeout update is %d for client %s and call id %s
Skipping updates until we get a full dump
//nvpair[@name='stonith-enabled']
//nvpair[@name='stonith-watchdog-timeout']
Ignoring cib updates while stonith is disabled
//cib_update_result//diff-removed//fencing-level
//cib_update_result//diff-added//fencing-level
Handling %s operation %d.%d.%d for %s
Nothing for us in %s operation %d.%d.%d for %s.
Nothing for us in %s operation %d.%d.%d for %s
//cib_update_result//rsc_location
//cib_update_result//diff-removed//primitive
//cib_update_result//diff-added//primitive
Fencing resource %s was added or modified
Provides a summary of cluster's current state.
Outputs varying levels of detail in a number of different formats.
<?xml version="1.0"?><!DOCTYPE resource-agent SYSTEM "ra-api-1.dtd">
<resource-agent name="stonithd">
 <longdesc lang="en">This is a fake resource that details the instance attributes handled by stonithd.</longdesc>
 <shortdesc lang="en">Options available for all stonith resources</shortdesc>
  <parameter name="priority" unique="0">
    <shortdesc lang="en">The priority of the stonith resource. Devices are tried in order of highest priority to lowest.</shortdesc>
    <content type="integer" default="0"/>
  <parameter name="%s" unique="0">
    <shortdesc lang="en">Advanced use only: An alternate parameter to supply instead of 'port'</shortdesc>
    <longdesc lang="en">Some devices do not support the standard 'port' parameter or may provide additional ones.
Use this to specify an alternate, device-specific, parameter that should indicate the machine to be fenced.
A value of 'none' can be used to tell the cluster not to supply any additional parameters.
     </longdesc>
    <content type="string" default="port"/>
    <shortdesc lang="en">A mapping of host names to ports numbers for devices that do not support host names.</shortdesc>
    <longdesc lang="en">Eg. node1:1;node2:2,3 would tell the cluster to use port 1 for node1 and ports 2 and 3 for node2</longdesc>
    <content type="string" default=""/>
    <shortdesc lang="en">A list of machines controlled by this device (Optional unless %s=static-list).</shortdesc>
    <shortdesc lang="en">How to determine which machines are controlled by the device.</shortdesc>
    <longdesc lang="en">Allowed values: dynamic-list (query the device), static-list (check the %s attribute), none (assume every device can fence every machine)</longdesc>
    <content type="string" default="dynamic-list"/>
    <shortdesc lang="en">Enable random delay for stonith actions and specify the maximum of random delay</shortdesc>
    <longdesc lang="en">This prevents double fencing when using slow devices such as sbd.
Use this to enable random delay for stonith actions and specify the maximum of random delay.</longdesc>
    <content type="time" default="0s"/>
  <parameter name="pcmk_%s_action" unique="0">
    <shortdesc lang="en">Advanced use only: An alternate command to run instead of '%s'</shortdesc>
    <longdesc lang="en">Some devices do not support the standard commands or may provide additional ones.
Use this to specify an alternate, device-specific, command that implements the '%s' action.</longdesc>
    <content type="string" default="%s"/>
  <parameter name="pcmk_%s_timeout" unique="0">
    <shortdesc lang="en">Advanced use only: Specify an alternate timeout to use for %s actions instead of stonith-timeout</shortdesc>
    <longdesc lang="en">Some devices need much more/less time to complete than normal.
Use this to specify an alternate, device-specific, timeout for '%s' actions.</longdesc>
    <content type="time" default="60s"/>
  <parameter name="pcmk_%s_retries" unique="0">
    <shortdesc lang="en">Advanced use only: The maximum number of times to retry the '%s' command within the timeout period</shortdesc>
    <longdesc lang="en">Some devices do not support multiple connections. Operations may 'fail' if the device is busy with another task so Pacemaker will automatically retry the operation, if there is time remaining. Use this option to alter the number of times Pacemaker retries '%s' actions before giving up.</longdesc>
    <content type="integer" default="2"/>
Cannot sign in to the cluster... terminating
Watching for stonith topology changes
Could not set CIB notification callback
Could not connect to the CIB service: %s (%d)
Connection to the CIB terminated. Shutting down.
Updating device list from the cib: init
Updating stonith device and topology lists now that stonith is enabled
New watchdog timeout %lds (was %lds)
Couldnt retrieve the CIB: %s (%d)
Re-initializing fencing topology after top-level %s operation %d.%d.%d for %s.
Re-initializing fencing topology after top-level %s operation  %d.%d.%d for %s
Re-initializing fencing topology after %s operation %d.%d.%d for %s
Updating device list from the cib: %s
Updating devices to version %s.%s.%s
Device %s has been disabled on %s: score=%s
Device %s has been disabled on %s: unknown
Invalid level for %s in element %s
Invalid fencing target in element %s
%s notification of client %s.%.6s failed: %s (%d)
Corosync connection terminated
Ignoring new client [%d] during shutdown
update_cib_stonith_devices_v2
update_cib_stonith_devices_v2
remove_cib_device
remove_cib_device
update_cib_stonith_devices_v1
update_cib_stonith_devices_v1
update_cib_stonith_devices
update_cib_stonith_devices
remove_fencing_topology
remove_fencing_topology
update_fencing_topology
update_fencing_topology
update_cib_cache_cb
update_cib_cache_cb
cib_device_update
cib_devices_update
topology_remove_helper
handle_topology_change
handle_topology_change
fencing_topology_init
init_cib_cache_cb
cib_connection_destroy
setup_cib
stonith_shutdown
stonith_peer_cs_destroy
stonith_peer_callback
stonith_peer_callback
stonith_peer_ais_callback
st_peer_update_callback
main
st_ipc_accept
st_ipc_created
st_ipc_dispatch
st_ipc_dispatch
st_ipc_closed
st_ipc_destroy
stonith_notify_client
stonith_notify_client
do_stonith_notify
do_stonith_notify
do_stonith_async_timeout_update
do_local_reply
do_local_reply
 for node 
commands.c
device != NULL
Nothing further to do for %s
invalid
variable
Skipping: %s
Processing %d bytes: [%s]
%[a-zA-Z0-9_-.]
Adding '%s'
Parsed %d entries from '%s'
. Trying: 
%s:%d
//@st_device_action
action != NULL
NoAction
Command
st_mode
cmd->op != NULL
NoOp
cmd->client != NULL
NoClient
static-list
dynamic-list
<anyone>
<unknown>
pcmk_%s_timeout
cmd != NULL
Host %s is not known by %s
Host %s is known by %s
true
st_action_disallowed
Creating a basic reply
st_output
Metadata query for %s
Never broadcast %s replies
Broadcast %s reply for %s
broadcast
Reply
Directed reply to %s
localhost
imed out
Unrecognised action
Cancel scheduled %s on %s
xml && action && device
Action %s is required on %s
st_required
st_action_timeout
st_delay_max
namespace
agent
st_monitor_verified
attributes
%d devices installed
Add query results
%d: '%s' != '%s'
 not
dev != NULL
//st_device_id
Adding alias '%s'='%s'
//action
Bit 0x%.8llx set by %s
../include/crm_internal.h
automatic
nodeid
//parameter[@name='nodeid']
No match for %s
Different agent: %s != %s
CRM_meta
crm_feature_set
Match
on_target
rsc_provides
unfencing
//st_level
node != NULL
%s[%d]
Device %s does not exist
request != NULL
Attaching reply output
<none>
(any)
//st-reply
st_query
st_fence
UnknownOp
client
st_execute
Looking for '%s'
st_timeout_update
manual_ack
Query
st_notify_activate
st_notify_deactivate
st_relay
//@st_target
st_tolerance
Checking for %s.%d != %s
st_fence_history
st_confirm
uname
Unknown %s reply from %s
Unknown %s from %s
Peer[%d] %s
Can't create a sane reply
%s can%s fence (%s) %s: %s
Unknown check type: %s
Device %s not found
Refreshing port list for %s
Could not parse (%d %d): %s
%s is still active with pid %u
Operation %s%s%s on %s was asked to run too early, waiting for start_delay timeout of %dms
Operation %s%s%s on %s now running with pid=%d, timeout=%ds
%s operation with %s can only be executed for localhost not %s
%s operation does not support self-fencing
Operation '%s' [%d] (call %d from %s) for host '%s' with device '%s' returned: %d (%s)%s%s
Operation '%s' [%d] for device '%s' returned: %d (%s)%s%s
Searching through %d devices to see what is capable of action (%s) for target %s
%s doesn't support reboot, using timeout for off instead
Scheduling %s on %s for remote peer %s with op id (%s) (timeout=%ds)
Scheduling %s on %s for %s (timeout=%ds)
Finished Search. %d devices can perform action (%s) on node %s
Action %s on %s is disallowed for local host
Directed local %ssync reply to %s
Operation '%s' on '%s' completed with rc=%d (%d remaining)
Action %s has timeout %dms on %s
Action %s has maximum random delay %dms on %s
%s doesn't support reboot, using values for off instead
Found %d matching devices for '%s'
Running %s command to see if %s can fence %s (%s)
Parse error at offset %d near '%s'
Different value for %s: %s != %s
Device '%s' already existed in device list (%d active devices)
Added %s to the topology (%d active entries)
Adding device '%s' for %s (%d)
Processing %s%s %u from %s (%16x)
Setting %s callbacks for %s (%s): ON
Setting %s callbacks for %s (%s): off
Reply handling: %p %u %u %d %d %s
Processed %s%s from %s: %s (%d)
client == NULL || client->request_id == id
Broadcasting manual fencing confirmation for node %s
Forwarding complex self fencing request to peer %s
Peer %s wants to fence (%s) '%s' with device '%s'
Client %s.%.8s wants to fence (%s) '%s' with device '%s'
Received manual confirmation that %s is fenced
Peer %s has received a forwarded fencing request from %s to fence (%s) peer %s
No alternate host available to handle complex self fencing request
Requested device '%s' is not available
Merging stonith action %s for node %s originating from client %s with identical stonith request from client %s
STONITH timeout %ds is low for the current configuration; consider raising to at least %ds
STONITH timeout %ds is too low; using %ds, but consider raising to at least %ds
%s can%s fence (%s) %s (aka. '%s'): %s
Removed entry '%d' from %s's topology (%d active entries remaining)
Removed all %s related entries from the topology (%d active entries)
Node %s not found (%d active entries)
Node %s has %d active fencing levels
Adding to the existing %s[%d] topology entry (%d active entries)
Removed '%s' from the device list (%d active devices)
Device '%s' not found (%d active devices)
Added '%s' to the device list (%d active devices)
Overwriting an existing entry for %s from the cib
Disabling port list queries for %s (%d): %s
Unknown result when testing if %s can fence %s: rc=%d
The fencing device '%s' requires actions (%s) to be executed on the target node
The fencing device '%s' requires unfencing
Could not retrieve metadata for fencing agent %s
No host mappings detected in '%s'
Removal of device '%s' purged operation %s
Delaying %s on %s for %lldms (timeout=%ds)
Operation %s%s%s on %s failed: %s (%d)
Agent '%s' does not advertise support for 'reboot', performing 'off' action instead
Faking success for %s watchdog operation
stonith_construct_async_reply
stonith_construct_async_reply
cancel_stonith_command
st_child_done
st_child_done
create_async_command
create_async_command
check_alternate_host
stonith_send_async_reply
stonith_send_async_reply
stonith_fence_get_devices_cb
stonith_fence
search_devices_record_result
dynamic_list_search_cb
status_search_cb
can_fence_host_with_device
can_fence_host_with_device
get_capable_devices
localhost_is_eligible
add_disallowed
add_action_specific_attributes
add_action_specific_attributes
stonith_query_capable_device_cb
stonith_query_capable_device_cb
stonith_query
stonith_query
stonith_device_action
handle_request
handle_request
handle_reply
handle_reply
stonith_command
stonith_command
stonith_construct_reply
stonith_construct_reply
log_operation
log_operation
unfence_cb
stonith_level_remove
stonith_level_remove
stonith_level_register
stonith_level_register
stonith_device_remove
device_has_duplicate
crm_set_bit
read_action_metadata
read_action_metadata
get_agent_metadata
build_port_aliases
parse_host_line
parse_host_list
stonith_device_execute
stonith_device_execute
build_device_from_xml
stonith_device_register
string_in_list
get_action_timeout
schedule_stonith_command
schedule_stonith_command
free_device
Free'ing query result from %s
remote.c
Free'ing op %s for %s
Destroying
Simple fencing
<no-one>
//@st_delegate
remote-op
Broadcasting result to peers
count
Reporting timeout for %s.%.8s
No match for %s with %s
<any>
any device
Found verified peer %s for %s
Found best unverified peer %s
%s will fence itself
Recorded
Generated
op_id != NULL
%s already exists
Created %s
client_id != NULL
op->action
State for %s.%.8s: %s %d
slave
smart
op->state < st_done
Query %s for %s complete: %d
Query %s for %s timed out: %d
//@st_remote_op
//@st-available-devices
result != NULL
props != NULL
ndevices == result->ndevices
All topology devices found
Found %d verified devices
//@st_rc
All done for %s
st_history
Attaching op %s
st_date
st_state
Matched %s with %s
Testing result from %s for %s with %d devices: %d %x
Removing %s from %s (%d remaining)
Operation %s of %s by %s for %s@%s.%.8s: %s
Peforming duplicate notification for %s@%s.%.8s = %s
Action %s (%s) for %s (%s) already completed
Action %s (%s) for %s (%s) timed out
Reporting timeout for duplicate %s.%.8s
Peer %s with device %s returned %s action timeout %d
Peer %s with device %s returned maximum of random delay %d for %s
Peer %s requires device %s to execute for action %s
Peer %s is disallowed from executing %s for device %s
Testing %d topologies for a match
Attempting fencing level %d for %s (%d devices) - %s@%s.%.8s
Checking for someone to fence (%s) %s with %s
Checking for someone to fence (%s) %s
Waiting before looking for unverified devices to fence %s
g_hash_table_lookup(remote_op_list, op->id) != NULL
%s new stonith op: %s - %s of %s for %s
Must be for the same action: %s vs. %s
Must be for different clients: %s
Can't be a suicide operation: %s
Making a best-guess as to the timeout used
Operation %s for %s already completed
Operation %s for %s already in progress
Next for %s on behalf of %s@%s (rc was %d)
Marking complex fencing op for %s as complete
Unknown or expired remote op: %s
Peer %s has confirmed a verified device %s
Waiting for more peer results before launching fencing operation
Marking call to %s for %s on behalf of %s@%s.%.8s: %s (%d)
Looking for operations on %s in %p
tolerance=%d, remote_op_list=%p
Target %s was fenced (%s) less than %ds ago by %s on behalf of %s
Ignoring %s 'on' failure (exit code %d) for %s after successful 'off'
Call to %s for %s on behalf of %s@%s: %s (%d)
%s received non-broadcast fencing result for operation it does not own (device %s targeting %s)
Received outdated reply for device %s (instead of %s) to %s node %s. Operation already timed out at remote level.
Discarding query result from %s (%d devices): Operation is in state %d
All query replies have arrived, continuing (%d expected/%d received) 
All topology query replies have arrived, continuing (%d expected/%d received) 
Query result %d of %d from %s for %s/%s (%d devices) %s
Query claimed to have %d devices but %d found
Waiting for additional peers capable of fencing (%s) %s for %s%.8s
Waiting for additional peers capable of fencing (%s) %s with %s for %s.%.8s
None of the %d peers are capable of fencing (%s) %s for %s (%d)
None of the %d peers have devices capable of fencing (%s) %s for %s (%d)
Waiting %ds for %s to self-fence (%s) for %s.%.8s (%p)
No remaining peers capable of fencing (%s) %s for %s (%d)
Fencing (%s) of %s for %s is not ours to control
Ignoring %s 'on' failure (no capable peers) for %s after successful 'off'
Requesting that %s perform op %s %s for %s (%ds, %ds)
Requesting that %s perform op %s %s with %s for %s (%ds)
Total remote op timeout set to %d for fencing of node %s for %s.%.8s
Couldn't find anyone to fence (%s) %s with %s
Initiating remote operation %s for %s: %s (%d)
Initiating remote operation %s for %s: %s (duplicate)
Initiation of remote operation %s for %s: failed (%s)
Initiating manual confirmation for %s: %s
Could not expand nodeid '%s' into a host name (%p)
Injecting manual confirmation that %s is safely off/down
Merging stonith action %s for node %s originating from client %s.%.8s with identical request from %s@%s.%.8s (%ds)
Stonith action %s for node %s originating from %s@%s.%.8s is too old: %d vs. %d + %d
Failing stonith action %s for node %s originating from %s@%s.%.8s: Originator is dead
All fencing options to fence %s for %s@%s.%.8s failed
Bad regex '%s' for fencing level
Remote %s operation on %s for %s.%8s timed out
Remote %s operation on %s for %s.%8s assumed complete
Already sent notifications for '%s of %s by %s' (for=%s@%s.%.8s, state=%d): %s
Skipping duplicate notification for %s@%s - %d
Undoing remap of reboot of %s for %s.%.8s
Remapped off of %s complete, remapping to on for %s.%.8s
Remapping multiple-device reboot of %s (%s) to off
stonith_check_fence_tolerance
stonith_fence_history
process_remote_stonith_exec
process_remote_stonith_exec
parse_action_specific
add_device_properties
add_device_properties
add_result
add_result
process_remote_stonith_query
process_remote_stonith_query
op_phase_on
advance_op_topology
grab_peer_device
find_best_peer
stonith_choose_peer
remote_op_watchdog_done
remote_op_timeout_one
call_remote_stonith
call_remote_stonith
op_phase_off
crm_set_bit
stonith_topology_next
stonith_topology_next
remote_op_timeout
remote_op_query_timeout
initiate_remote_stonith_op
initiate_remote_stonith_op
report_timeout_period
merge_duplicates
free_remote_op
free_remote_op
create_remote_stonith_op
create_remote_stonith_op
handle_duplicates
bcast_result_to_peers
undo_op_remap
free_remote_query
remote_op_done
stonith_manual_ack
find_topology_for_host
333333
;*3$"
stonithd.debug
7zXZ
XAl{
?@A}|p(
)UUT
ZYWdI
<Q/P
]7zC
`Lg.Pu
}WdQa
YO2ER]
@+wa
F|J)l
\;8w
HN)P
me4>q
TZNT
HuAY
 Klq\
589{|v
')qA
hW3}?C
FM&"r
\E@-^
#J}KD
gg:>
Q4y_ 8
c[)O
DcrG
d0Mv
)a2I
+)&|
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
__verbose
.bss
.gnu_debuglink
.gnu_debugdata
