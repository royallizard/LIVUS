__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
ast_module_unregister
ast_custom_function_unregister
ast_devstate_prov_del
ast_cli_unregister_multiple
ast_cli
ast_db_gettree
strrchr
ast_db_freetree
ast_cli_complete
strncasecmp
ast_devstate_val
ast_db_put
ast_devstate_changed
ast_log
ast_app_separate_args
strchr
ast_app_parse_options
ast_get_hint
ast_device_state
ast_devstate_str
__ast_custom_function_register
ast_devstate_prov_add
ast_cli_register_multiple
ast_db_get
__stack_chk_fail
ast_module_register
ast_unregister_file_version
ast_register_file_version
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
GLIBC_2.4
GLIBC_2.2.5
%z$ 
%r$ 
%j$ 
%b$ 
%Z$ 
%R$ 
%J$ 
%B$ 
%:$ 
%2$ 
%*$ 
%"$ 
=X' 
ATSubH
%T  
=	# 
=y# 
l$ H
9S u
l$ H
D$ M
\$XH
l$`L
d$hL
l$pH
L$0H
t$@H
[]A\
Custom
funcdevstate list
devstate change
Custom:
Changing %s to %s
Custom:%s
func_devstate.c
default
Custom:%s
$Revision: 127210 $
func_devstate
DEVICE_STATE
Get or Set a device state
DEVICE_STATE(device)
HINT
Change a custom device state
UNKNOWN
NOT_INUSE
BUSY
UNAVAILALBE
RINGING
RINGINUSE
ONHOLD
Usage: funcdevstate list
       List all custom device states that have been set by using
       the DEVICE_STATE dialplan function.
---------------------------------------------------------------------
--- Custom Device States --------------------------------------------
---------------------------------------------------------------------
--- Name: 'Custom:%s'  State: '%s'
---------------------------------------------------------------------
---------------------------------------------------------------------
Usage: devstate list
       List all custom device states that have been set by using
       the DEVICE_STATE dialplan function.
Usage: devstate change <device> <state>
       Change a custom device to a new state.
       The possible values for the state are:
UNKNOWN | NOT_INUSE | INUSE | BUSY | INVALID | UNAVAILABLE | RINGING
RINGINUSE | ONHOLD
The devstate command can only be used to set 'Custom:' device state!
The DEVICE_STATE function can only be used to set 'Custom:' device state!
DEVICE_STATE function called with no custom device name!
DEVICE_STATE function given invalid state value '%s'
The HINT function requires an extension
Gets or sets a device state in the dialplan
This paragraph is copyright (c) 2006 by Digium, Inc. In order for your module to load, it must return this key via a function called "key".  Any code which includes this paragraph must be licensed under the GNU General Public License version 2 or later (at your option).  In addition to Digium's general reservations of rights, Digium expressly reserves the right to allow other parties to license this paragraph under different terms. Any use of Digium, Inc. trademarks or logos (including "Asterisk" or "Digium") without express written permission of Digium, Inc. is prohibited.
  The DEVICE_STATE function can be used to retrieve the device state from any
device state provider.  For example:
   NoOp(SIP/mypeer has state ${DEVICE_STATE(SIP/mypeer)})
   NoOp(Conference number 1234 has state ${DEVICE_STATE(MeetMe:1234)})
  The DEVICE_STATE function can also be used to set custom device state from
the dialplan.  The "Custom:" prefix must be used.  For example:
  Set(DEVICE_STATE(Custom:lamp1)=BUSY)
  Set(DEVICE_STATE(Custom:lamp2)=NOT_INUSE)
You can subscribe to the status of a custom device state using a hint in
the dialplan:
  exten => 1234,hint,Custom:lamp1
  The possible values for both uses of this function are:
UNKNOWN | NOT_INUSE | INUSE | BUSY | INVALID | UNAVAILABLE | RINGING
RINGINUSE | ONHOLD
Get the devices set for a dialplan hint
  The HINT function can be used to retrieve the list of devices that are
mapped to a dialplan hint.  For example:
   NoOp(Hint for Extension 1234 is ${HINT(1234)})
Options:
   'n' - Retrieve name on the hint instead of list of devices
HINT(extension[@context][|options])
List currently known custom device states
CustomDevstate
hint_read
devstate_write
a9c98e5d177805051735cb5b0b16b0a0
func_devstate.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
