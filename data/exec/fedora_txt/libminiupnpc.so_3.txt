=|(#C6
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
IGDstartelt
IGDendelt
memcmp
IGDdata
strlen
malloc
memcpy
strchr
strdup
if_indextoname
memmove
__stack_chk_fail
strtol
parserootdesc
parsexml
simpleUPnPcommand2
__snprintf_chk
parseURL
soapPostSubmit
getHTTPResponse
close
strncpy
connecthostport
simpleUPnPcommand
upnpDiscoverDevices
getDevicesFromMiniSSDPD
strstr
ssdpDiscoverDevices
upnpDiscover
upnpDiscoverAll
upnpDiscoverDevice
GetUPNPUrls
FreeUPNPUrls
free
UPNPIGD_IsConnected
UPNP_GetStatusInfo
UPNP_GetValidIGD
calloc
miniwget_getaddr
UPNP_GetExternalIPAddress
UPNP_GetIGDFromUrl
send
connectToMiniSSDPD
socket
setsockopt
connect
disconnectFromMiniSSDPD
requestDevicesFromMiniSSDPD
__memcpy_chk
receiveDevicesFromMiniSSDPD
read
in6addr_any
if_nametoindex
bind
getaddrinfo
sendto
freeaddrinfo
receivedata
strncasecmp
inet_addr
gai_strerror
stderr
__fprintf_chk
realloc
__ctype_b_loc
getsockname
getnameinfo
strtoul
miniwget
UPNP_GetConnectionTypeInfo
puts
__printf_chk
ctime
UPNP_GetLinkLayerMaxBitRates
putchar
protofix
UPNP_AddAnyPortMapping
UPNP_GetSpecificPortMappingEntry
strupnperror
fwrite
UPNP_AddPortMapping
is_int
main
__isoc99_sscanf
UPNP_GetTotalBytesSent
UPNP_GetTotalBytesReceived
UPNP_GetTotalPacketsSent
UPNP_GetTotalPacketsReceived
freeUPNPDevlist
UPNP_GetPinholePackets
UPNP_GetFirewallStatus
UPNP_GetGenericPortMappingEntry
UPNP_CheckPinholeWorking
UPNP_UpdatePinhole
UPNP_DeletePortMapping
UPNP_DeletePortMappingRange
UPNP_GetListOfPortMappings
FreePortListing
strcmp
UPNP_AddPinhole
UPNP_DeletePinhole
UPNP_GetOutboundPinholeTimeout
strtoull
ParseNameValue
GetValueFromNameValueList
ClearNameValueList
UPNP_GetPortMappingNumberOfEntries
ParsePortListing
__errno_location
__fdelt_chk
select
getsockopt
poll
recv
libc.so.6
_edata
__bss_start
_end
libminiupnpc.so.16
GLIBC_2.3
GLIBC_2.7
GLIBC_2.14
GLIBC_2.15
GLIBC_2.4
GLIBC_2.2.5
GLIBC_2.3.4
AWAVAUATI
d$ H
[]A\A]A^A_
AWAV1
AUATUSH
unset
D$pA
D$0H
~bHc
[]A\A]A^A_
L$0H
T$8H
D$T=
D$pH
\$(H
T$ H
T$ L
\$(H
T$pH
\$(D
T$ L
\$(H
T$ L
T$ A
\$0D
L$8D
L$dH
T$0H
D$ M
\$0M
D$pH
\$(D
T$pD
T$ L
\$(D
\$(D
d$`M
L$`H
T$\H
\$(D
T$ L
T$(H
T$ H
T$0H
T$8H
|$(L
AUAT
t$PUSL
D$PH
L$`H
T$XH
t$8H
u5AUATH
UAVD
L$@L
D$PH
\$(D
T$ H
L$`H
t$`L
D$ ua
T$ H
t$XPH
t$(H
|$8M
L$`H
|$pM
|$pI
\$ H
\$ I
d$`H
)D$hATH
l$`M
A]A^
\$`L
AVAWH
PAVH
AYAZ
T$`H
PAVH
l$ E1
D;d$ 
t$(t3H
t$XAVL
|$8H
t$(N
t$XA
|$8H
t$(I
D$hM
8serv
>servu
mas-upnpH
urn:scheH3U
vice:WANH
-org:serH3U
wallContH
IPv6FireH3U(H3E H	
}0rol:
AWAVA
AUATI
D$(1
\$(dH3
8[]A\A]A^A_
D$(dH3
[]A\A]A^A_
http://[I
fe80u
192.168.H9
?10t
?172.t
?172.u
D$H1
T$ H
D$(H
D$0H
D$HdH3
AWAVE1
AUATI
D$ QH
AXAYwXH
[]A\A]A^A_
t)H9
AZA[
\$0H
L$(H
T$"E1
D$(D
T$$D
</u:r
AWAVAUATUSH
t$@H
D$LH
D$DD
D$0t
D$(H
D$ I
D$0H
[]A\A]A^A_
t$8D
L$\D
L$TH
t$PH
L$LD
L$DH
D$0H
|$(H
X[]A\A]A^A_
t$ AQE
t$ AQE
D$HP
AVAUA
ATUH
[]A\A]A^
t[SH
D$X1
\$XdH3
AWAVAUATUSH
D$x1
|$(H
t$(L
l$<L
d$PL
HcT$
l$(L
D$$H
T$xdH3
[]A\A]A^A_
AUATI
USE1
[]A\A]
AVAUATUI
8<!--
[]A\A]A^
B:t	
>t/H
[]A\A]A^
<![CDATAL9
8]]u
[]A\A]A^
AWAVM
AUATI
T$(t.L
l$0H
AWS1
ARAV
dH34%(
[]A\A]A^A_
ATU1
[]A\
AUATI
[]A\A]
ssdp:allI9U
AWAV
AUATUSH
t$`H
y3Ic
D$(H
t$0E
t4Ic
t$01
y.Ic
D$0I
\$PL
t:Ic
\$PD
t$@1
y.Ic
|$ L
|$8H
l$@H
D$HH
t$(I
D$ M
L$PM
T$XH
D$ H
T$8H
t$0L
l$(H
t;Ic
D$ H
|$h9|$lH
D$@H
D$HH
D$`H
dH3<%(
[]A\A]A^A_
D$`H
D$`H
D$`H
D$`H
ATUI
[]A\
y"E1
[]A\
AWAVAUATA
|$@D
D$0H
D$pD
|$0A
L$|1
t$0H
D$8H
T$lu
D$@H
d$(M
D$@H
T$0E
L$xE
D$@Hc\$8H
dH34%(
[]A\A]A^A_
d$(M
D$pH
Lcl$hHcD$4L
d$ Hc\$<M
l$PH
\$4I
L$ E
T$(H
t$HH
L$`u
t$XH
D$PH
D$ L
l$PH
L$ L
D$PH
L$ L
D$PL
t$hH
t$HHc
T$(H
D$4H
T$`L
L$PL
L$XL
T$`u
L$XL
L$XL
L$`L
L$`L
T$XD)
D$pH
D$pH
D$pH
D$pH
t$pH
AWAVAUATUSH
|$8H
t$`dH
T$Ht
D$pL
|$8E1
D$$D
D;D$<v&D
D$<I
|$$Hc
D$0E1
D$0A
D$ D
D9l$
s,9L$ 
d$$D
l$,1
|$01
|$HH
d$@H
L$PD
T$\I
d$@H
L$PD
T$\E9
D$$D
D$0L
D;t$
D$ H
D$pA9
~JIc
T$0A
tCH9
\$XL
t$@I
|$hA
L$@}g9
T$\Lc
D$PH
D$PD
Hct$,E
|$0D
d$$D
D$$L
L$(D
t$@A
D9l$
ED$(D
t$@H
D$`H
dH3<%(
[]A\A]A^A_
D$ D
D$`H
t$@I
t$@I
AWAVI
AUATI
T$0H
L$$L
t$<L
ATPM
[]A\A]A^A_
AWAVAUATUSH
D$81
ht&1
L$8dH3
H[]A\A]A^A_
0<	w/1
t}L9
D$ L
ATUI
D$h1
\$hdH3
p[]A\
AVAUM
ATUI
D$h1
l$ H
\$hdH3
p[]A\A]A^
AWAVAUATUSH
D$@H
T$*I
T$ ATj
d$0L
l$pE1
t$<AVH
L$ H
t$(H
[]A\A]A^A_
ATAVH
T$ M
t$(L
tQUSH
ATUH
D$x1
L$xdH3
[]A\
ATUH
D$x1
L$xdH3
[]A\
ATUH
D$x1
L$xdH3
[]A\
ATUH
D$x1
L$xdH3
[]A\
AWAVM
AUATI
[]A\A]A^A_
ATUSH
D$x1
L$xdH3
[]A\
AVAUI
ATUI
D$x1
L$xdH3
[]A\A]A^
ATUI
D$x1
L$xdH3
[]A\
AWAVAUATUSH
L$(H
t$(L
d$0H
T$,H
D$,H
[]A\A]A^A_
AWAVAUATUSH
D$(dH
T$ L
L$8H
t$8H
l$@H
T$<H
D$<H
dH34%(
[]A\A]A^A_
AWAVAUATUSH
D$x1
L$xdH3
[]A\A]A^A_
AWAVAUATUSH
d$ H
[]A\A]A^A_
AWAVAUATUSH
D$ H
D$(dH
L$8H
t$8H
\$@H
|$ M
|$(M
T$<H
D$<H
[]A\A]A^A_
ATUH
D$x1
L$xdH3
[]A\
AWAVAUATUSH
L$ L
L$8H
t$8H
l$@H
t$(M
T$<H
D$<H
[]A\A]A^A_
AWAVI
AUATUSH
|$hH
t$pL
[]A\A]A^A_
AVAUATUSH
D$x1
L$xdH3
[]A\A]A^
AWAVAUATUSH
L$(I
t$(H
l$0H
T$,H
D$,H
[]A\A]A^A_
AWAVAUATUSH
L$(H
t$(H
l$0H
T$,H
D$,H
[]A\A]A^A_
AVAUATUSH
D$x1
L$xdH3
[]A\A]A^
AUATUSH
D$x1
L$xdH3
[]A\A]
AVAUATUSH
D$x1
L$xdH3
[]A\A]A^
AVAUATUSH
D$x1
L$xdH3
[]A\A]A^
t#Sf.
AUATI
l$XA
T$`H
[]A\A]
D$Ht
\$PB
[]A\A]
tIAUAT
[]A\A]
Lck`
|$HL
D$H1
T$ H
D$(H
D$0H
D$HdH3
CH[]
AWAVL
AUATD
l$@H
D$DdH
]t(H
8%2A
L$(H
|$(M
l$pA
d$0A
t$ A
[]A\A]A^A_
AWAVI
AUATI
USHc
[]A\A]A^A_
[]A\A]A^A_
D$H1
D$(H
D$0H
T$ H
D$HdH3
AVAUI
ATUA
 []A\A]A^
service
URLBase
presentationURL
serviceType
controlURL
eventSubURL
SCPDURL
urn:schemas-upnp-org:service:WANCommonInterfaceConfig:
urn:schemas-upnp-org:service:WANIPv6FirewallControl:
urn:schemas-upnp-org:service:WANIPConnection:
urn:schemas-upnp-org:service:WANPPPConnection:
http://[fe80:
%s#%s
></s:Body></s:Envelope>
/var/run/minissdpd.sock
Connected
0.0.0.0
ssdp:all
upnp:rootdevice
<?xml version="1.0"?>
<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/" s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><s:Body><u:%s xmlns:u="%s"></u:%s></s:Body></s:Envelope>
<?xml version="1.0"?>
<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/" s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><s:Body><u:%s xmlns:u="%s">
urn:schemas-upnp-org:device:InternetGatewayDevice:1
urn:schemas-upnp-org:service:WANIPConnection:1
urn:schemas-upnp-org:service:WANPPPConnection:1
<![CDATA[
:%hu
send
POST %s HTTP/%s
Host: %s%s
User-Agent: Linux, UPnP/1.1, MiniUPnPc/2.0
Content-Length: %d
Content-Type: text/xml
SOAPAction: "%s"
Connection: Close
Cache-Control: no-cache
Pragma: no-cache
socket(unix)
setsockopt
minissdpc.c: write()
minissdpc.c: read()
FF05::C
239.255.255.250
FF02::C
socket
setsockopt(SO_REUSEADDR,...)
bind
[FF02::C]
1900
getaddrinfo: %s
sendto
location
[FF05::C]
setsockopt(IP_MULTICAST_TTL,...)
M-SEARCH * HTTP/1.1
HOST: %s:1900
ST: %s
MAN: "ssdp:discover"
MX: %u
content-length
transfer-encoding
chunked
getsockname
getnameinfo() failed : %s
GET %s HTTP/%s
Host: %s:%d
Connection: Close
User-Agent: Linux, UPnP/1.1, MiniUPnPc/2.0
GetConnectionTypeInfo failed.
Connection Type : %s
GetStatusInfo failed.
  Time started : %s
MaxBitRateDown : %u bps
 (%u.%u Mbps)
 (%u Kbps)
   MaxBitRateUp %u bps
ExternalIPAddress = %s
Wrong arguments
invalid protocol
GetExternalIPAddress failed.
InternalIP:Port = %s:%s
--help
%d%c
Invalid localport '%s'
option '%s' invalid
protocol is UDP or TCP
Options:
 desc: %s
 st: %s
Found valid IGD : %s
Trying to continue anyway
Found device (igd ?) : %s
Local LAN ip address : %s
1000
65535
invalid arguments
protocol invalid
too few arguments
Bytes:   Sent: %8u	Recv: %8u
Packets: Sent: %8u	Recv: %8u
Presentation URL found:
            %s
Unknown switch -%c
Status : %s, uptime=%us, LastConnectionError : %s
GetLinkLayerMaxBitRates failed.
GetExternalIPAddress failed. (errorcode=%d)
AddAnyPortMapping(%s, %s, %s) failed with code %d (%s)
AddPortMapping(%s, %s, %s) failed with code %d (%s)
GetSpecificPortMappingEntry() failed with code %d (%s)
external %s:%s %s is redirected to internal %s:%s (duration=%s)
upnpc : miniupnpc library test client, version %s.
 (c) 2005-2016 Thomas Bernard.
Go to http://miniupnp.free.fr/ or http://miniupnp.tuxfamily.org/
for more information.
Usage :	%s [options] -a ip port external_port protocol [duration]
		Add port redirection
       	%s [options] -d external_port protocol <remote host>
		Delete port redirection
       	%s [options] -s
		Get Connection status
       	%s [options] -l
		List redirections
       	%s [options] -L
		List redirections (using GetListOfPortMappings (for IGD:2 only)
       	%s [options] -n ip port external_port protocol [duration]
		Add (any) port redirection allowing IGD to use alternative external_port (for IGD:2 only)
       	%s [options] -N external_port_start external_port_end protocol [manage]
		Delete range of port redirections (for IGD:2 only)
       	%s [options] -r port1 [external_port1] protocol1 [port2 [external_port2] protocol2] [...]
		Add all redirections to the current host
       	%s [options] -A remote_ip remote_port internal_ip internal_port protocol lease_time
		Add Pinhole (for IGD:2 only)
       	%s [options] -U uniqueID new_lease_time
		Update Pinhole (for IGD:2 only)
       	%s [options] -C uniqueID
		Check if Pinhole is Working (for IGD:2 only)
       	%s [options] -K uniqueID
		Get Number of packets going through the rule (for IGD:2 only)
       	%s [options] -D uniqueID
		Delete Pinhole (for IGD:2 only)
       	%s [options] -S
		Get Firewall status (for IGD:2 only)
       	%s [options] -G remote_ip remote_port internal_ip internal_port protocol
		Get Outbound Pinhole Timeout (for IGD:2 only)
       	%s [options] -P
		Get Presentation url
  -e description : set description for port mapping.
  -6 : use ip v6 instead of ip v4.
  -u url : bypass discovery process by providing the XML root description url.
  -m address/interface : provide ip address (ip v4) or interface name (ip v4 or v6) to use for sending SSDP multicast packets.
  -z localport : SSDP packets local (source) port (1024-65535).
  -p path : use this path for MiniSSDPd socket.
  -t ttl : set multicast TTL. Default value is 2.
List of UPNP devices found on the network :
Found a (not connected?) IGD : %s
UPnP device found. Is it an IGD ? : %s
 i protocol exPort->inAddr:inPort description remoteHost leaseTime
%2d %s %5s->%s:%-5s '%s' '%s' %s
GetGenericPortMappingEntry() returned %d (%s)
%2d %s %5hu->%s:%-5hu '%s' '%s' %u
GetListOfPortMappings() returned %d (%s)
UPNP_DeletePortMapping() returned : %d
UPNP_DeletePortMappingRange() returned : %d
command -r : %s is not an port number
AddPinhole([%s]:%s -> [%s]:%s) failed with code %d (%s)
AddPinhole: ([%s]:%s -> [%s]:%s) / Pinhole ID = %s
CheckPinholeWorking: Pinhole ID = %s / IsWorking = %s
CheckPinholeWorking() failed with code %d (%s)
UpdatePinhole: Pinhole ID = %s with Lease Time: %s
UpdatePinhole: ID (%s) failed with code %d (%s)
GetPinholePackets() failed with code %d (%s)
GetPinholePackets: Pinhole ID = %s / PinholePackets = %d
UPNP_DeletePinhole() returned : %d
FirewallEnabled: %d & Inbound Pinhole Allowed: %d
GetFirewallStatus:
   Firewall Enabled: %s
   Inbound Pinhole Allowed: %s
GetOutboundPinholeTimeout([%s]:%s -> [%s]:%s) failed with code %d (%s)
GetOutboundPinholeTimeout: ([%s]:%s -> [%s]:%s) / Timeout = %d
No valid UPNP Internet Gateway Device found.
No IGD UPnP Device found on the network !
GetTotalBytesSent
NewTotalBytesSent
GetTotalBytesReceived
NewTotalBytesReceived
GetTotalPacketsSent
NewTotalPacketsSent
GetTotalPacketsReceived
NewTotalPacketsReceived
GetStatusInfo
NewUptime
NewConnectionStatus
NewLastConnectionError
errorCode
GetConnectionTypeInfo
NewConnectionType
GetCommonLinkProperties
NewLayer1DownstreamMaxBitRate
NewLayer1UpstreamMaxBitRate
GetExternalIPAddress
NewExternalIPAddress
libminiupnpc
NewRemoteHost
NewExternalPort
NewProtocol
NewInternalPort
NewInternalClient
NewEnabled
NewPortMappingDescription
NewLeaseDuration
AddPortMapping
AddAnyPortMapping
NewReservedPort
DeletePortMapping
NewStartPort
NewEndPort
NewManage
DeletePortMappingRange
NewPortMappingIndex
GetGenericPortMappingEntry
GetPortMappingNumberOfEntries
NewPortMappingNumberOfEntries
GetSpecificPortMappingEntry
NewNumberOfPorts
GetListOfPortMappings
GetFirewallStatus
FirewallEnabled
InboundPinholeAllowed
RemotePort
GetOutboundPinholeTimeout
empty
AddPinhole
UniqueID
NewLeaseTime
UpdatePinhole
DeletePinhole
CheckPinholeWorking
IsWorking
GetPinholePackets
NewPortListing
Success
Miniupnpc Unknown Error
Miniupnpc Invalid Arguments
Miniupnpc Invalid response
Miniupnpc Socket error
Invalid Action
Invalid Args
Action Failed
Action not authorized
PinholeSpaceExhausted
FirewallDisabled
InboundPinholeNotAllowed
NoSuchEntry
ProtocolNotSupported
ProtocolWildcardingNotAllowed
WildcardNotPermittedInSrcIP
NoPacketSent
SpecifiedArrayIndexInvalid
NoSuchEntryInArray
WildCardNotPermittedInSrcIP
WildCardNotPermittedInExtPort
ConflictInMappingEntry
SamePortValuesRequired
OnlyPermanentLeasesSupported
UnknownError
Miniupnpc Memory allocation error
InternalPortWildcardingNotAllowed
RemoteHostOnlySupportsWildcard
ExternalPortOnlySupportsWildcard
getaddrinfo() error : %s
getsockopt
connect
NewDescription
recv
poll
;*3$"
libminiupnpc.so.16-2.0-7.fc28.x86_64.debug
7zXZ
eRhV
(u&	A
~!"$
[L15
j+im
!ig8!
u8o^
65L=($w
X1>-
1B	 &
ccN0
+V2+
3Qp"
L]gz
@S_+
ZwO<y
4/W^:
z^|B7
_QugM^x
aCyw
72<Q
ZgdO%
o`\R
%h>}DX
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.data.rel.ro
.dynamic
.bss
.gnu_debuglink
.gnu_debugdata
