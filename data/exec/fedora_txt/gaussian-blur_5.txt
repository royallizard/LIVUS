 ?7(
|{.1
CdoCE
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
g_snprintf
gegl_operation_area_filter_get_type
g_type_module_register_type
__stack_chk_fail
g_slice_alloc0
g_type_class_peek_parent
gegl_operation_get_type
g_type_check_class_cast
gegl_operation_filter_get_type
g_dgettext
gegl_operation_class_set_keys
gegl_param_spec_double
g_object_class_install_property
g_param_spec_string
g_object_set_data_full
g_free
g_slice_free1
g_malloc
g_malloc_n
_ZGVbN2v___exp_finite
g_type_name
g_log
g_value_set_double
g_value_set_string
g_value_get_double
g_value_get_string
g_strdup
g_type_check_instance_cast
babl_format
gegl_operation_set_format
gegl_cl_is_accelerated
gegl_buffer_new
g_malloc0_n
gegl_buffer_get
gegl_buffer_set
g_object_unref
g_assertion_message_expr
gegl_operation_get_format
gegl_buffer_cl_iterator_new
gegl_buffer_cl_iterator_add_2
gegl_buffer_cl_iterator_next
gegl_clCreateBuffer
gegl_cl_get_context
gegl_cl_errstring
gegl_clEnqueueWriteBuffer
gegl_cl_get_command_queue
gegl_clSetKernelArg
gegl_clEnqueueNDRangeKernel
gegl_clFinish
gegl_clReleaseMemObject
gegl_cl_compile_and_build
gegl_chant_get_type
gegl_module_query
gegl_module_register
libgmodule-2.0.so.0
libgio-2.0.so.0
libgobject-2.0.so.0
libgthread-2.0.so.0
libglib-2.0.so.0
libm.so.6
_ZGVbN2v___log_finite
_ZGVbN2v_log
_ZGVcN4v___log_finite
_ZGVcN4v_log
_ZGVdN4v___log_finite
_ZGVdN4v_log
_ZGVeN8v___log_finite
_ZGVeN8v_log
_ZGVbN4v___logf_finite
_ZGVbN4v_logf
_ZGVcN8v___logf_finite
_ZGVcN8v_logf
_ZGVdN8v___logf_finite
_ZGVdN8v_logf
_ZGVeN16v___logf_finite
_ZGVeN16v_logf
_ZGVbN2v_exp
_ZGVcN4v___exp_finite
_ZGVcN4v_exp
_ZGVdN4v___exp_finite
_ZGVdN4v_exp
_ZGVeN8v___exp_finite
_ZGVeN8v_exp
_ZGVbN4v___expf_finite
_ZGVbN4v_expf
_ZGVcN8v___expf_finite
_ZGVcN8v_expf
_ZGVdN8v___expf_finite
_ZGVdN8v_expf
_ZGVeN16v___expf_finite
_ZGVeN16v_expf
_ZGVbN2vv___pow_finite
_ZGVbN2vv_pow
_ZGVcN4vv___pow_finite
_ZGVcN4vv_pow
_ZGVdN4vv___pow_finite
_ZGVdN4vv_pow
_ZGVeN8vv___pow_finite
_ZGVeN8vv_pow
_ZGVbN4vv___powf_finite
_ZGVbN4vv_powf
_ZGVcN8vv___powf_finite
_ZGVcN8vv_powf
_ZGVdN8vv___powf_finite
_ZGVdN8vv_powf
_ZGVeN16vv___powf_finite
_ZGVeN16vv_powf
libmvec.so.1
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
gaussian-blur.so
GLIBC_2.4
GLIBC_2.2.5
GLIBC_2.15
GLIBC_2.22
5rM 
%tM 
%zM 
%"N 
%"N 
%"N 
%*N 
%:N 
%JN 
%RN 
%ZN 
%ZN 
%ZN 
%ZN 
%ZN 
%ZN 
%bN 
%jN 
%jN 
%jN 
%jN 
%jN 
%jN 
%jN 
%jN 
%rN 
%rN 
=yN 
=9N 
52N 
=wL 
\$Pf
T$0f
L$2H
D$ H
D$81
T$PH
ATUI
[]A\
AWAVAUI
ATUSH
[]A\A]A^A_
D$(A
nd$(H
o-64
)|$0f
)t$p
)d$`
)T$P
)D$@f
oT$Pf
(|$@H
od$`f
ot$p
oD$0f
9\$,f
tEHc
D$(f
YD$ 
D9t$,
\$,f
Hc\$,I)
tiATUH
 []A\
t$ H
AWAVI
AUATUSH
T$hH
L$(dH
D$pH
|$(H
D$8H
D$pA
T$xA
|$HH
T$xD
D$HB
D$xE
~}Ic
D$HL
\$xA
t$ H
L$`H
D$pA
|$8H
t$ E1
D$`B
D$pI
t$@F
HcD$xH
T$@H
D$ f
t$Hc
;T$ 
t$@9D$H
\$PH
t$(E1
|$hH
dH3<%(
[]A\A]A^A_
)\$P
|$HH
(\$P
D$HH
\$xH
|$xD
D$HE
d$PHc
D;t$
t$x;
t$ H
|$8E1
D$(D
D$pE
D$PA
t$HH
t$0H
D$(H
D$`H
D$0L
L$HD
~~Ic
\$@A
$9D$(
4$9t$p
t$ H
|$hE1
|$(H
$~{A
D$8H
|$8f
\$(H
|$hL
E(PA
E$PH
t$hE
E(Pj
D$PH
D$`H
D$ H
D$xH
=H. 
|$(H
|$ H
L$0L
L$XH
|$`H
D$pH
D$pH
t$PH
|$(H
%J% 
%J$ 
%z% 
%J$ 
%j# 
%*$ 
%2# 
%:$ 
GeglChantgaussian-blur.c
gegl-0.2
description
categories
gegl:gaussian-blur
name
Size X
std_dev_x
Size Y
std_dev_y
Filter
auto
filter
chant-data
property
GEGL-../../gegl/gegl-chant.h
RaGaBaA float
input
output
fir_ver_blur_CL
fir_hor_blur_CL
GEGL-gaussian-blur.c
xoff >= radius
yoff >= radius
Performs an averaging of neighboring pixels with the normal distribution as weighting
Standard deviation for the horizontal axis. (multiply by ~2 to get radius)
Standard deviation for the vertical axis. (multiply by ~2 to get radius.)
Optional parameter to override the automatic selection of blur filter. Choices are fir, iir, auto
%s:%d: invalid %s id %u for "%s" of type '%s' in '%s'
float4 fir_get_mean_component_1D_CL(const global float4 *buf,     
                                    int offset,                   
                                    const int delta_offset,       
                                    constant float *cmatrix,      
                                    const int matrix_length)      
{                                                                 
    float4 acc = 0.0f;                                            
    int i;                                                        
                                                                  
    for(i=0; i<matrix_length; i++)                                
      {                                                           
        acc    += buf[offset] * cmatrix[i];                       
        offset += delta_offset;                                   
      }                                                           
    return acc;                                                   
}                                                                 
                                                                  
__kernel void fir_ver_blur_CL(const global float4 *src_buf,       
                              const int src_width,                
                              global float4 *dst_buf,             
                              constant float *cmatrix,            
                              const int matrix_length,            
                              const int yoff)                     
{                                                                 
    int gidx = get_global_id(0);                                  
    int gidy = get_global_id(1);                                  
    int gid  = gidx + gidy * get_global_size(0);                  
                                                                  
    int radius = matrix_length / 2;                               
    int src_offset = gidx + (gidy - radius + yoff) * src_width;   
                                                                  
    dst_buf[gid] = fir_get_mean_component_1D_CL(                  
        src_buf, src_offset, src_width, cmatrix, matrix_length);  
}                                                                 
                                                                  
__kernel void fir_hor_blur_CL(const global float4 *src_buf,       
                              const int src_width,                
                              global float4 *dst_buf,             
                              constant float *cmatrix,            
                              const int matrix_length,            
                              const int yoff)                     
{                                                                 
    int gidx = get_global_id(0);                                  
    int gidy = get_global_id(1);                                  
    int gid  = gidx + gidy * get_global_size(0);                  
                                                                  
    int radius = matrix_length / 2;                               
    int src_offset = gidy * src_width + (gidx - radius + yoff);   
                                                                  
    dst_buf[gid] = fir_get_mean_component_1D_CL(                  
        src_buf, src_offset, 1, cmatrix, matrix_length);          
}                                                                 
[OpenCL] Error in gegl:gaussian-blur: %s
fir_ver_blur
fir_hor_blur
;*3$"
gaussian-blur.so.debug
7zXZ
X)l/
x6vG
().H
\nG9
*Hi9
x<Ii
`Lc:
oFZ~r
w'.;
A3Dq2
vi>k
w 0 
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.init
.plt
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.bss
.gnu_debuglink
.gnu_debugdata
