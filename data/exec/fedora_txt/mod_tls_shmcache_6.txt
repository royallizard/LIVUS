__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
ERR_get_error
BIO_ctrl
permanent_pool
pstrdup
BIO_free
BIO_s_mem
BIO_new
pr_signals_handle
ERR_error_string
BIO_printf
pr_trace_msg
fcntl
__errno_location
strerror
make_sub_pool
pr_privs_root
shmctl
pr_privs_relinquish
destroy_pool
pr_strtime
SSL_SESSION_get_time
SSL_SESSION_get_timeout
SSL_SESSION_free
d2i_SSL_SESSION
pcalloc
__sprintf_chk
pr_log_pri
pr_log_debug
pr_memscrub
tls_log
memcmp
palloc
memcpy
i2d_SSL_SESSION
make_array
push_array
shmdt
pr_fsio_close
unlink
strchr
pr_fs_valid_path
strcmp
pr_fsio_open
__getpagesize
ftok
shmget
shmat
memset
session
pr_pool_tag
strtol
pr_fs_get_usable_fd
mlock
tls_shmcache_module
pr_event_register
tls_sess_cache_register
getpid
mpid
ServerType
pr_event_unregister
tls_sess_cache_unregister
libssl.so.10
libcrypto.so.10
libc.so.6
_edata
__bss_start
_end
mod_tls_shmcache.so
GLIBC_2.3.4
GLIBC_2.14
GLIBC_2.2.5
%zK 
%rK 
%jK 
%bK 
%ZK 
%RK 
%JK 
%BK 
%:K 
%2K 
%*K 
%"K 
%zJ 
%rJ 
%jJ 
%bJ 
%ZJ 
%RJ 
%JJ 
%BJ 
%:J 
%2J 
%*J 
%"J 
=(J 
ATSubH
%tE 
[A\]
=0E 
ATU1
[]A\
fffff.
AWAVL
AUATUSH
T$ 1
D$ L
HcL$8H
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AUATUS
D$(D
[]A\A]A^A_
T$`H
D9x,
A9]Dw
T$ H
A9]hw
T$ H
9X,w
AVAUATUH
t;A9\$
|$ 1
E;f,A
D;d$
n0A9]
[]A\A]A^A_
AVAUATUH
=A< 
$E9g
E;g,A
D;d$
[]A\A]A^A_
=@: 
AWAVM
(H;B
|kH9
[]A\A]A^A_
ffffff.
AVAUA
L$(H
P,9P(
T$ 1
T$ E1
L$(H
[]A\A]A^A_
L$(H
T$(I
t$8L
H9T$(}	H
T$(H
tME0
L;:}
p I9
;B,H
=B3 
=?1 
l$xH
\$pL
fffff.
AVAUATUH
T$(H
%#. 
D$,H
D$(I
[]A\A]A^A_
H=g(
L$`H
H;\$`
5u, 
D$$A
D$$A
5]+ 
=q( 
(unknown)
  (%u) %s
read-lock
write-lock
unlock
[unknown]
tls_shmcache
checking shmcache cache %p
Shared memory segment ID: %d
mod_tls_shmcache.c
Max session cache size: %u
Cache lifetime hits: %u
Cache lifetime misses: %u
Cached sessions:
  (none)
%02X
    Session ID: %s
    Session ID Context: %s
SSLv3
    Protocol: %s
TLSv1
unknown
    Started: %s
    Expires: %s (%u secs)
clearing shmcache cache %p
sessions
session
closing shmcache cache %p
removing shmcache cache %p
opening shmcache cache %p
/file=
size=
existing shm size: %u bytes
unable to stat shm ID %d: %s
error unlocking shmcache: %s
mod_tls_shmcache/0.1
unable to allocate shm: %s
core.module-unload
core.restart
core.shutdown
attempting to %s shmcache fd %d
%s of shmcache fd %d failed: %s
process ID %lu has blocking %s on shmcache fd %d
%s of shmcache fd %d succeeded
mod_tls_shmcache/0.1: error read-locking shmcache: %s
Shared memory (shm) SSL session cache provided by mod_tls_shmcache/0.1
Shared memory segment size: %u bytes
Shared memory cache created on: %s
Shared memory attach count: %u
Unable to stat shared memory segment ID %d: %s
Current session cache size: %u
Cache lifetime sessions stored: %u
Cache lifetime sessions deleted: %u
Cache lifetime sessions expired: %u
Cache lifetime errors handling sessions in cache: %u
Cache lifetime sessions exceeding max entry size: %u
  Largest session exceeding max entry size: %u
mod_tls_shmcache/0.1: error retrieving session from cache: %s
  -----BEGIN SSL SESSION PARAMETERS-----
  -----END SSL SESSION PARAMETERS-----
mod_tls_shmcache/0.1: error unlocking shmcache: %s
shmcache: unable to clear cache: error write-locking shmcache: %s
shmcache: error unlocking shmcache: %s
removing session from shmcache cache %p
shmcache: unable to delete session from cache: error write-locking shmcache: %s
getting session from shmcache cache %p
shmcache: error retrieving session from cache: %s
shmcache: unable to retrieve session from cache: error write-locking shmcache: %s
shmcache: error write-locking shmcache: %s
adding session to shmcache cache %p
shmcache: length of serialized SSL session data (%d) exceeds maximum size (%u), unable to add to shared shmcache, adding to list
shmcache: no expired sessions to flush; %u secs to next expiration
shmcache: flushing cache of expired sessions
shmcache: flushed %u expired %s from cache
shmcache: unable to flush shm cache: error write-locking shmcache: %s
shmcache: unable to add session to shm cache: error write-locking shmcache: %s
mod_tls_shmcache/0.1: error detaching shm ID %d: %s
mod_tls_shmcache/0.1: attempting to remove shm ID %d
mod_tls_shmcache/0.1: error removing shm ID %d: %s
mod_tls_shmcache/0.1: removed shm ID %d
mod_tls_shmcache/0.1: badly formatted info '%s', unable to open shmcache
badly formatted size parameter '%s', ignoring
requested size (%lu bytes) smaller than minimum size (%lu bytes), ignoring
mod_tls_shmcache/0.1: file '%s' not an absolute path
mod_tls_shmcache/0.1: file '%s' does not match previously configured file '%s'
mod_tls_shmcache/0.1: remove existing shmcache using 'ftpdctl tls sesscache remove' before using new file
mod_tls_shmcache/0.1: error: unable to open file '%s': %s
warning: unable to find good fd for shmcache fd %d: %s
requested shmcache file: %s (fd %d)
requested shmcache size: %lu bytes
rounded requested size up to %lu bytes
unable to get key for path '%s': %s
unable to get shm for existing key: %s
not enough memory for %lu shm bytes; try specifying a smaller size
unable to allocate a new shm ID; system limit of shm IDs reached
attempting to attach to shm ID %d
unable to attach to shm ID %d: %s
mod_tls_shmcache/0.1: requested shm size (%lu bytes) is smaller than existing shm size, migrating to smaller shm (may result in loss of cache data)
mod_tls_shmcache/0.1: requested shm size (%lu bytes) is larger than existing shm size, migrating to larger shm
mod_tls_shmcache/0.1: remove existing shmcache using 'ftpdctl tls sesscache remove' before using new size
error write-locking shmcache: %s
using shm ID %d for shmcache path '%s'
mod_tls_shmcache/0.1: unable to allocate shm: %s
mod_tls_shmcache/0.1: error locking 'shm' cache (%lu bytes) into memory: %s
mod_tls_shmcache/0.1: 'shm' cache locked into memory (%lu bytes)
mod_tls_shmcache/0.1: notice: error registering 'shm' SSL session cache: %s
;*3$"
mod_tls_shmcache.so.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rela.plt
.got.plt
.got
.text
