/lib64/ld-linux-x86-64.so.2
liblxc.so.1
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
lxc_log_category_lxc
lxc_arguments_parse
lxc_cmd_stop
lxc_container_new
lxc_log_init
lxc_container_put
lxc_log_options_no_override
libcap.so.2
libselinux.so.1
libseccomp.so.2
libutil.so.1
libpthread.so.0
libc.so.6
puts
__stack_chk_fail
strtol
__fprintf_chk
stderr
fwrite
gettimeofday
sleep
__cxa_finalize
__libc_start_main
_edata
__bss_start
_end
__libc_csu_fini
__data_start
lxc_log_category_lxc_stop_ui
_IO_stdin_used
__libc_csu_init
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.2.5
AVAUH
 []A\A]A^
fffff.
fffff.
fffff.
tt01
AWAVA
AUATL
[]A\A]A^A_
invalid timeout
-k can't be used with -r
-k doesn't allow timeouts
Error opening container
%s is not running
lxc-stop
reboot
nowait
timeout
nokill
nolock
name
help
usage
version
quiet
logfile
logpriority
lxcpath
lxc_stop_ui
-k can't be used with --nokill
--nolock may only be used with -k
Insufficent privileges to control %s
Reboot did not complete before timeout
--name=NAME
lxc-stop stops a container with the identifier NAME
Options :
  -n, --name=NAME   NAME for name of the container
  -r, --reboot      reboot the container
  -W, --nowait      don't wait for shutdown or reboot to complete
  -t, --timeout=T   wait T seconds before hard-stopping
  -k, --kill        kill container rather than request clean shutdown
      --nolock      Avoid using API locks
      --nokill      Only request clean shutdown, don't force kill after timeout
;*3$"
lxc-stop.debug
7zXZ
p!@)op
{\8,
d$	Po
UIm?
pfAz
 sjVy
IWT/g3
?4d "
XsBY
a	-C
KiG%%b
q&|'
U7pK
4>#`
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
