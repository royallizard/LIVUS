  lB,
CrdY
o.'{
_it<!a
?X/C
2&;X~
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
VAS_Fail
vdir_new
calloc
pthread_rwlock_init
free
strdup
VDI_AH_HEALTHY
malloc
memset
realloc
__memcpy_chk
vdir_delete
pthread_rwlock_destroy
__explicit_bzero_chk
vdir_rdlock
pthread_rwlock_rdlock
vdir_wrlock
pthread_rwlock_wrlock
vdir_unlock
pthread_rwlock_unlock
vdir_add_backend
VRT_fail
vdir_remove_backend
memmove
vdir_any_healthy
vdir_pick_be
memcpy
vmod_fallback__init
vmod_fallback__fini
vmod_fallback_add_backend
vmod_fallback_remove_backend
vmod_fallback_backend
vmod_hash__init
vmod_hash__fini
vmod_hash_add_backend
vmod_hash_remove_backend
vmod_hash_backend
VSHA256_Init
vrt_magic_string_end
strlen
VSHA256_Update
VSHA256_Final
scalbn
VRND_RandomTestable
vmod_random__init
vmod_random__fini
vmod_random_add_backend
vmod_random_remove_backend
vmod_random_backend
vmod_round_robin__init
vmod_round_robin__fini
vmod_round_robin_add_backend
vmod_round_robin_remove_backend
vmod_round_robin_backend
VRT_priv_task
WS_Alloc
vmod_enum_CHOSEN
vmod_enum_IGNORE
vmod_enum_ALL
vmod_enum_HASH
vmod_enum_URL
vmod_enum_KEY
vmod_enum_BLOB
sharddir_err
sharddir_any_healthy
sharddir_pick_be
sharddir_sha256
vmod_shard__init
sharddir_new
vmod_shard__fini
sharddir_delete
vmod_shard_key
sharddir_sha256v
vmod_shard_set_warmup
shardcfg_set_warmup
vmod_shard_set_rampup
shardcfg_set_rampup
vmod_shard_associate
vmod_shard_add_backend
shardcfg_add_backend
vmod_shard_remove_backend
shardcfg_remove_backend
vmod_shard_clear
shardcfg_clear
vmod_shard_reconfigure
shardcfg_reconfigure
vmod_shard_backend
vmod_enum_NOW
vmod_enum_LAZY
vmod_shard_debug
sharddir_debug
vmod_shard_param__init
vmod_shard_param__fini
vmod_shard_param_set
vmod_shard_param_clear
vmod_shard_param_get_by
vmod_shard_param_get_key
vmod_shard_param_get_alt
vmod_shard_param_get_warmup
vmod_shard_param_get_rampup
vmod_shard_param_get_healthy
vmod_shard_param_use
strcmp
sharddir_wrlock
__snprintf_chk
qsort
sharddir_unlock
shardcfg_delete
shardcfg_get_rampup
VSLbv
VSLv
VRND_RandomTestableDouble
Vmod_directors_Data
libpthread.so.0
libc.so.6
__stack_chk_fail
_edata
__bss_start
libvmod_directors.so
GLIBC_2.1
GLIBC_2.25
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.0
GLIBC_2.3.4
UWVS
,[^_]
UWVS
,[^_]
,[^_]
UWVS
<[^_]
\D$$
UWVS
l$Xe
D$,1
563ur
D$ f
T$,e3
<[^_]
UWVS
D$(W
G@;p
XD$(
D$89
D$8f
XD$@
T$Hf
/T$0v
[^_]
UWVS
563uN
t$@V
t$,P
t$,RP
UWVS
l$0U
[^_]
0[^_
2Gu9
t$,RP
2GuH
2Gu>
2Gu5j
2Gu,
UWVS
563uu1
563u@
t$@V
t$,RP
UWVS
[^_]
UWVS
[^_]
UWVS
[^_]
[^_]
UWVS
|$<1
/T$(v'
.D$(
.D$(
D$(f
\$|1
\$<e3
L[^_]
T$$)
l$8)
T$$+D$
9D$ 
L$$U
t$$Pj
t$(P
t$$U
cnu<
UWVS
D$4P
t$(P
[^_]
UWVS
XZj\j
[^_]
cnuv
cnuof
cnu<
cnu{
t$ RQV
v(Pj
cnuM
 [^_
r(Pj
cnu<
UWVS
D$\1
L$\e3
l[^_]
t$ P
cnu5
[^_]
D$H1
T$`P
L$<e3
D$H1
T$`P
tWwE
L$<e3
D$H1
T$`P
L$<e3
D$X1
T$pP
D$Le3
D$H1
T$`P
L$<e3
D$H1
T$`P
L$<e3
UWVS
[^_]
[^_]
q(Pj
q(Rj
UWVS
[^_]
v(Pj
[^_]
UWVS
[^_]
v(Pj
[^_]
9p,w
[^_]
;y,s
v(Pj
V,;V0
9w,w
9B,vo
t$$e
D$L1
B,9E
L$Le3
\[^_]
VQRP
UWVS
D$ P
[^_]
u([^_
UWVS
l$Xe
D$,1
563uu
D$ f
T$,e3
<[^_]
[^_]
p != NULL
../../include/vbm.h
(name) != 0
vdir.c
(vcl_name) != 0
(vdp) != 0
(*vdp) == 0
((vd->dir->vcl_name)) != 0
vb != NULL
bit > vb->nbits
(vd->dir) != 0
(vd) != 0
((vdp)) != 0
((vd)) != NULL
((vd))->magic == (0x99f4b726)
(vd) != NULL
(vd)->magic == 0x99f4b726
NULL backend cannot be added
(vd->backend) != 0
(vd->weight) != 0
vd->n_backend < vd->l_backend
(be)->magic == 0x3336351d
*cur <= vd->n_backend
(bo)->magic == 0x23b95567
(be) != NULL
(blacklist) != 0
(pthread_rwlock_init(&vd->mtx, ((void *)0))) == 0
(pthread_rwlock_destroy(&vd->mtx)) == 0
(pthread_rwlock_rdlock(&vd->mtx)) == 0
(pthread_rwlock_wrlock(&vd->mtx)) == 0
(pthread_rwlock_unlock(&vd->mtx)) == 0
NULL backend cannot be removed
vdir_pick_by_weight
vdir_any_healthy
vdir_remove_backend
vdir_expand
vdir_add_backend
vdir_unlock
vdir_wrlock
vdir_rdlock
vdir_delete
vbit_expand
vbit_new
vdir_new
(dir) != NULL
fall_back.c
(dir)->magic == 0x3336351d
(wrk) != NULL
(wrk)->magic == 0x6391adcf
(bo) != NULL
((fb)) != 0
((fb))->magic == (0xad4e26ba)
(ctx) != NULL
(ctx)->magic == 0x6bb8f0db
(fbp) != 0
(*fbp) == 0
fallback
(fb) != 0
(fb) != NULL
(fb)->magic == 0xad4e26ba
vmod_fallback_backend
vmod_fallback_remove_backend
vmod_fallback_add_backend
vmod_fallback__fini
vmod_fallback_healthy
vmod_fallback_resolve
vmod_fallback__init
hash.c
(rrp) != 0
(*rrp) == 0
hash
(rr) != 0
(rr) != NULL
(rr)->magic == 0xc08dd611
r >= 0 && r <= 1.0
(ctx->bo)->magic == 0x23b95567
vmod_hash_backend
vmod_hash_remove_backend
vmod_hash_add_backend
vmod_hash__fini
vmod_hash__init
?random.c
((rr)) != 0
((rr))->magic == (0x4732d092)
r >= 0 && r < 1.0
random
(rr)->magic == 0x4732d092
vmod_random_backend
vmod_random_remove_backend
vmod_random_add_backend
vmod_random__fini
vmod_random_healthy
vmod_random_resolve
vmod_random__init
round_robin.c
((rr))->magic == (0xa80970cf)
round-robin
(rr)->magic == 0xa80970cf
vmod_round_robin_backend
vmod_round_robin_remove_backend
vmod_round_robin_add_backend
vmod_round_robin__fini
vmod_rr_healthy
vmod_rr_resolve
vmod_round_robin__init
(from)->magic == 0xdf5ca117
vmod_shard.c
(to) != NULL
(to)->magic == 0xdf5ca117
(from) != NULL
(from->defaults) != 0
(pa) != NULL
(pa)->magic == 0xdf5ca117
pa->scope > _SCOPE_INVALID
no priv_task
(p)->magic == 0xdf5ca117
p->scope == TASK
(p) != NULL
ctx->method & VCL_MET_TASK_H
(p->vcl_name) != 0
(args & ~_arg_mask_set) == 0
illegal by enum
illegal healthy enum
i <= key_blob->len
((vshard)) != 0
(pp) != 0
(ctx->http_bereq) != 0
(vshardp) != 0
(*vshardp) == 0
(vshard->dir) != 0
(vshard) != 0
(vshard) != NULL
(vshard)->magic == 0x6e63e1bf
shard %s: %s
illegal resolve enum
shard .backend param invalid
shard.backend()
(*pp) == 0
(p) != 0
shard_param.set()
shard_param.clear()
pp->by > _BY_E_INVALID
*INVALID*
CHOSEN
IGNORE
HASH
BLOB
builtin defaults
(to->mask & ~_arg_mask_param) == 0
(from->mask & ~_arg_mask_param) == 0
shard_param_task WS_Alloc failed
%s may only be used in vcl_init and in backend context
%s %s: missing key argument with by=%s
%s %s: invalid key argument %jd with by=%s
%s %s: missing key_blob argument with by=%s
%s %s: by=BLOB but no or empty key_blob - using key 0
%s %s: key and key_blob arguments are invalid with by=%s
%s %s: key and key_blob arguments are invalid with by=HASH (default)
%s %s: invalid alt argument %jd
%s %s: invalid warmup argument %f
((vshard))->magic == (0x6e63e1bf)
((vshard->dir->vcl_name)) != 0
shard %s: .set_warmup(%f) ignored
shard .associate param invalid
.backend_add() NULL backend given
.backend_remove() at least one of backend and ident must be given
shard .backend resolve=LAZY with other parameters can only be used in backend context
shard .backend resolve=NOW can not be used in vcl_init{}/vcl_fini{}
pp->healthy > _HEALTHY_E_INVALID
Workspace overflow (param.use())
vmod_shard_param_use
vmod_shard_param_get_healthy
vmod_shard_param_get_by
shard_param_prep
vmod_shard_param__fini
vmod_shard_param__init
vmod_shard_debug
shard_blob_key
parse_healthy_e
parse_by_e
shard_param_args
parse_resolve_e
vmod_shard_backend
vmod_shard_clear
vmod_shard_remove_backend
vmod_shard_add_backend
vmod_shard_associate
vmod_shard_set_rampup
vmod_shard_set_warmup
vmod_shard__fini
shard_get_key
shard_param_merge
shard_param_stack
shard_param_task
vmod_shard_param_read
vmod_shard_resolve
vmod_shard_healthy
vmod_shard__init
(change) != NULL
shard_cfg.c
(change)->magic == 0xdff5c9a6
could not get workspace
ai || a->backend
bi || b->backend
(be) != 0
(shardd) != NULL
(shardd)->magic == 0xdbb7d59f
remove
(task)->magic == 0x1e1168af
task->task != CLEAR
(re->shardd->backend) != 0
task->backend || task->ident
re->hole_i < i
bb[i].backend != NULL
.reconfigure() no backends
(shardd->backend) != 0
(shardd->hashcircle) != 0
ident[0] != '\0'
ratio >= 0 && ratio < 1
duration >= 0
host < shardd->n_backend
could not get workspace for task
((change))->magic == (0xdff5c9a6)
cannot change more than one shard director at a time
task_e == ADD_BE || task_e == REMOVE_BE
shard %s: .%s_backend() WS_Alloc() failed
shard %s: .reconfigure() invalid replicas argument %ld
(re->shardd)->magic == 0xdbb7d59f
re->shardd->n_backend < re->shardd->l_backend
re->hole_i < re->shardd->n_backend + re->hole_n
shard %s: (notice) backend %s%s%s already exists - skipping
(shardd->backend[i].backend) != NULL
(shardd->backend[i].backend)->magic == 0x3336351d
shard: hashcircle[%5jd] = {point = %8x, host = %2u}
shardcfg_get_rampup
shardcfg_set_rampup
shardcfg_set_warmup
shardcfg_hashcircle
shard_change_finish
shardcfg_backend_finalize
shardcfg_backend_del_cmp
shardcfg_backend_expand
shardcfg_backend_add
shardcfg_backend_cmp
shardcfg_apply_change
shardcfg_reconfigure
shardcfg_clear
shard_change_task_add
shard_change_get
shard_change_task_backend
shardcfg_add_backend
state->idx >= 0
shard_dir.c
(state->shardd) != NULL
id < shardd->n_backend
shard_dir.h
(sharddp) != 0
(*sharddp) == 0
(shardd) != 0
(ctx->vsl) != 0
shardd->hashcircle
state.idx >= 0
state.previous.hostid >= 0
state.last.hostid >= 0
(state->shardd)->magic == 0xdbb7d59f
(pthread_rwlock_rdlock(&shardd->mtx)) == 0
(pthread_rwlock_init(&shardd->mtx, ((void *)0))) == 0
(pthread_rwlock_destroy(&shardd->mtx)) == 0
(pthread_rwlock_wrlock(&shardd->mtx)) == 0
(pthread_rwlock_unlock(&shardd->mtx)) == 0
shard %s: invalid negative parameter alt=%ld, set to 0
shard %s: parameter alt=%ld limited to %ld
shard: lookup key %x idx %d host %u
state.previous.hostid != state.last.hostid
be == sharddir_backend(shardd, state.previous.hostid)
shard: chosen host %d rampup %f changed %f
shard: alt host %d rampup %f changed %f
sharddir_backend
vbit_expand
shard_next
shard_lookup
sharddir_pick_be
sharddir_rdlock
sharddir_any_healthy
sharddir_unlock
sharddir_wrlock
sharddir_delete
sharddir_new
sharddir_debug
KRKWOKPIWWRZDBQEVWSQWLKNRJJDJBDI
Varnish 6.0.0 a068361dff0d25a0d85cf82a6e5fdaf315e06a7d
directors
LAZY
[["$VMOD","1.0"],["$OBJ","round_robin","struct vmod_directors_round_robin",["$INIT",[["VOID"],"Vmod_directors_Func.round_robin__init",""]],["$FINI",[["VOID"],"Vmod_directors_Func.round_robin__fini",""]],["$METHOD","add_backend",[["VOID"],"Vmod_directors_Func.round_robin_add_backend","",["BACKEND"]]],["$METHOD","remove_backend",[["VOID"],"Vmod_directors_Func.round_robin_remove_backend","",["BACKEND"]]],["$METHOD","backend",[["BACKEND"],"Vmod_directors_Func.round_robin_backend",""]]],["$OBJ","fallback","struct vmod_directors_fallback",["$INIT",[["VOID"],"Vmod_directors_Func.fallback__init","",["BOOL","sticky","0"]]],["$FINI",[["VOID"],"Vmod_directors_Func.fallback__fini",""]],["$METHOD","add_backend",[["VOID"],"Vmod_directors_Func.fallback_add_backend","",["BACKEND"]]],["$METHOD","remove_backend",[["VOID"],"Vmod_directors_Func.fallback_remove_backend","",["BACKEND"]]],["$METHOD","backend",[["BACKEND"],"Vmod_directors_Func.fallback_backend",""]]],["$OBJ","random","struct vmod_directors_random",["$INIT",[["VOID"],"Vmod_directors_Func.random__init",""]],["$FINI",[["VOID"],"Vmod_directors_Func.random__fini",""]],["$METHOD","add_backend",[["VOID"],"Vmod_directors_Func.random_add_backend","",["BACKEND"],["REAL"]]],["$METHOD","remove_backend",[["VOID"],"Vmod_directors_Func.random_remove_backend","",["BACKEND"]]],["$METHOD","backend",[["BACKEND"],"Vmod_directors_Func.random_backend",""]]],["$OBJ","hash","struct vmod_directors_hash",["$INIT",[["VOID"],"Vmod_directors_Func.hash__init",""]],["$FINI",[["VOID"],"Vmod_directors_Func.hash__fini",""]],["$METHOD","add_backend",[["VOID"],"Vmod_directors_Func.hash_add_backend","",["BACKEND"],["REAL"]]],["$METHOD","remove_backend",[["VOID"],"Vmod_directors_Func.hash_remove_backend","",["BACKEND"]]],["$METHOD","backend",[["BACKEND"],"Vmod_directors_Func.hash_backend","",["STRING_LIST"]]]],["$OBJ","shard","struct vmod_directors_shard",["$INIT",[["VOID"],"Vmod_directors_Func.shard__init",""]],["$FINI",[["VOID"],"Vmod_directors_Func.shard__fini",""]],["$METHOD","set_warmup",[["VOID"],"Vmod_directors_Func.shard_set_warmup","",["REAL","probability","0.0"]]],["$METHOD","set_rampup",[["VOID"],"Vmod_directors_Func.shard_set_rampup","",["DURATION","duration","0"]]],["$METHOD","associate",[["VOID"],"Vmod_directors_Func.shard_associate","",["BLOB","param","0"]]],["$METHOD","add_backend",[["BOOL"],"Vmod_directors_Func.shard_add_backend","struct vmod_shard_add_backend_arg",["PRIV_TASK"],["BACKEND","backend"],["STRING","ident",null,null,true],["DURATION","rampup",null,null,true]]],["$METHOD","remove_backend",[["BOOL"],"Vmod_directors_Func.shard_remove_backend","struct vmod_shard_remove_backend_arg",["PRIV_TASK"],["BACKEND","backend","0",null,true],["STRING","ident","0",null,true]]],["$METHOD","clear",[["BOOL"],"Vmod_directors_Func.shard_clear","",["PRIV_TASK"]]],["$METHOD","reconfigure",[["BOOL"],"Vmod_directors_Func.shard_reconfigure","",["PRIV_TASK"],["INT","replicas","67"]]],["$METHOD","key",[["INT"],"Vmod_directors_Func.shard_key","",["STRING_LIST"]]],["$METHOD","backend",[["BACKEND"],"Vmod_directors_Func.shard_backend","struct vmod_shard_backend_arg",["ENUM","by",null,["HASH","URL","KEY","BLOB"],true],["INT","key",null,null,true],["BLOB","key_blob",null,null,true],["INT","alt",null,null,true],["REAL","warmup",null,null,true],["BOOL","rampup",null,null,true],["ENUM","healthy",null,["CHOSEN","IGNORE","ALL"],true],["BLOB","param",null,null,true],["ENUM","resolve",null,["NOW","LAZY"],true]]],["$METHOD","debug",[["VOID"],"Vmod_directors_Func.shard_debug","",["INT"]]]],["$OBJ","shard_param","struct vmod_directors_shard_param",["$INIT",[["VOID"],"Vmod_directors_Func.shard_param__init",""]],["$FINI",[["VOID"],"Vmod_directors_Func.shard_param__fini",""]],["$METHOD","clear",[["VOID"],"Vmod_directors_Func.shard_param_clear",""]],["$METHOD","set",[["VOID"],"Vmod_directors_Func.shard_param_set","struct vmod_shard_param_set_arg",["ENUM","by",null,["HASH","URL","KEY","BLOB"],true],["INT","key",null,null,true],["BLOB","key_blob",null,null,true],["INT","alt",null,null,true],["REAL","warmup",null,null,true],["BOOL","rampup",null,null,true],["ENUM","healthy",null,["CHOSEN","IGNORE","ALL"],true]]],["$METHOD","get_by",[["STRING"],"Vmod_directors_Func.shard_param_get_by",""]],["$METHOD","get_key",[["INT"],"Vmod_directors_Func.shard_param_get_key",""]],["$METHOD","get_alt",[["INT"],"Vmod_directors_Func.shard_param_get_alt",""]],["$METHOD","get_warmup",[["REAL"],"Vmod_directors_Func.shard_param_get_warmup",""]],["$METHOD","get_rampup",[["BOOL"],"Vmod_directors_Func.shard_param_get_rampup",""]],["$METHOD","get_healthy",[["STRING"],"Vmod_directors_Func.shard_param_get_healthy",""]],["$METHOD","use",[["BLOB"],"Vmod_directors_Func.shard_param_use",""]]]]
struct vmod_directors_round_robin;
typedef VCL_VOID td_directors_round_robin__init(VRT_CTX,
    struct vmod_directors_round_robin **, const char *);
typedef VCL_VOID td_directors_round_robin__fini(
    struct vmod_directors_round_robin **);
typedef VCL_VOID td_directors_round_robin_add_backend(VRT_CTX,
    struct vmod_directors_round_robin *, VCL_BACKEND);
typedef VCL_VOID td_directors_round_robin_remove_backend(
    VRT_CTX, struct vmod_directors_round_robin *, VCL_BACKEND);
typedef VCL_BACKEND td_directors_round_robin_backend(VRT_CTX,
    struct vmod_directors_round_robin *);
struct vmod_directors_fallback;
typedef VCL_VOID td_directors_fallback__init(VRT_CTX,
    struct vmod_directors_fallback **, const char *, VCL_BOOL);
typedef VCL_VOID td_directors_fallback__fini(
    struct vmod_directors_fallback **);
typedef VCL_VOID td_directors_fallback_add_backend(VRT_CTX,
    struct vmod_directors_fallback *, VCL_BACKEND);
typedef VCL_VOID td_directors_fallback_remove_backend(VRT_CTX,
    struct vmod_directors_fallback *, VCL_BACKEND);
typedef VCL_BACKEND td_directors_fallback_backend(VRT_CTX,
    struct vmod_directors_fallback *);
struct vmod_directors_random;
typedef VCL_VOID td_directors_random__init(VRT_CTX,
    struct vmod_directors_random **, const char *);
typedef VCL_VOID td_directors_random__fini(
    struct vmod_directors_random **);
typedef VCL_VOID td_directors_random_add_backend(VRT_CTX,
    struct vmod_directors_random *, VCL_BACKEND, VCL_REAL);
typedef VCL_VOID td_directors_random_remove_backend(VRT_CTX,
    struct vmod_directors_random *, VCL_BACKEND);
typedef VCL_BACKEND td_directors_random_backend(VRT_CTX,
    struct vmod_directors_random *);
struct vmod_directors_hash;
typedef VCL_VOID td_directors_hash__init(VRT_CTX,
    struct vmod_directors_hash **, const char *);
typedef VCL_VOID td_directors_hash__fini(
    struct vmod_directors_hash **);
typedef VCL_VOID td_directors_hash_add_backend(VRT_CTX,
    struct vmod_directors_hash *, VCL_BACKEND, VCL_REAL);
typedef VCL_VOID td_directors_hash_remove_backend(VRT_CTX,
    struct vmod_directors_hash *, VCL_BACKEND);
typedef VCL_BACKEND td_directors_hash_backend(VRT_CTX,
    struct vmod_directors_hash *, const char *, ...);
struct vmod_directors_shard;
typedef VCL_VOID td_directors_shard__init(VRT_CTX,
    struct vmod_directors_shard **, const char *);
typedef VCL_VOID td_directors_shard__fini(
    struct vmod_directors_shard **);
typedef VCL_VOID td_directors_shard_set_warmup(VRT_CTX,
    struct vmod_directors_shard *, VCL_REAL);
typedef VCL_VOID td_directors_shard_set_rampup(VRT_CTX,
    struct vmod_directors_shard *, VCL_DURATION);
typedef VCL_VOID td_directors_shard_associate(VRT_CTX,
    struct vmod_directors_shard *, VCL_BLOB);
struct vmod_shard_add_backend_arg {
	char			valid_ident;
	char			valid_rampup;
	struct vmod_priv *	arg1;
	VCL_BACKEND		backend;
	VCL_STRING		ident;
	VCL_DURATION		rampup;
typedef VCL_BOOL td_directors_shard_add_backend(VRT_CTX,
    struct vmod_directors_shard *,
    struct vmod_shard_add_backend_arg*);
struct vmod_shard_remove_backend_arg {
	char			valid_backend;
	char			valid_ident;
	struct vmod_priv *	arg1;
	VCL_BACKEND		backend;
	VCL_STRING		ident;
typedef VCL_BOOL td_directors_shard_remove_backend(VRT_CTX,
    struct vmod_directors_shard *,
    struct vmod_shard_remove_backend_arg*);
typedef VCL_BOOL td_directors_shard_clear(VRT_CTX,
    struct vmod_directors_shard *, struct vmod_priv *);
typedef VCL_BOOL td_directors_shard_reconfigure(VRT_CTX,
    struct vmod_directors_shard *, struct vmod_priv *, VCL_INT);
typedef VCL_INT td_directors_shard_key(VRT_CTX,
    struct vmod_directors_shard *, const char *, ...);
struct vmod_shard_backend_arg {
	char			valid_by;
	char			valid_key;
	char			valid_key_blob;
	char			valid_alt;
	char			valid_warmup;
	char			valid_rampup;
	char			valid_healthy;
	char			valid_param;
	char			valid_resolve;
	VCL_ENUM		by;
	VCL_INT			key;
	VCL_BLOB		key_blob;
	VCL_INT			alt;
	VCL_REAL		warmup;
	VCL_BOOL		rampup;
	VCL_ENUM		healthy;
	VCL_BLOB		param;
	VCL_ENUM		resolve;
typedef VCL_BACKEND td_directors_shard_backend(VRT_CTX,
    struct vmod_directors_shard *, struct vmod_shard_backend_arg*);
typedef VCL_VOID td_directors_shard_debug(VRT_CTX,
    struct vmod_directors_shard *, VCL_INT);
struct vmod_directors_shard_param;
typedef VCL_VOID td_directors_shard_param__init(VRT_CTX,
    struct vmod_directors_shard_param **, const char *);
typedef VCL_VOID td_directors_shard_param__fini(
    struct vmod_directors_shard_param **);
typedef VCL_VOID td_directors_shard_param_clear(VRT_CTX,
    struct vmod_directors_shard_param *);
struct vmod_shard_param_set_arg {
	char			valid_by;
	char			valid_key;
	char			valid_key_blob;
	char			valid_alt;
	char			valid_warmup;
	char			valid_rampup;
	char			valid_healthy;
	VCL_ENUM		by;
	VCL_INT			key;
	VCL_BLOB		key_blob;
	VCL_INT			alt;
	VCL_REAL		warmup;
	VCL_BOOL		rampup;
	VCL_ENUM		healthy;
typedef VCL_VOID td_directors_shard_param_set(VRT_CTX,
    struct vmod_directors_shard_param *,
    struct vmod_shard_param_set_arg*);
typedef VCL_STRING td_directors_shard_param_get_by(VRT_CTX,
    struct vmod_directors_shard_param *);
typedef VCL_INT td_directors_shard_param_get_key(VRT_CTX,
    struct vmod_directors_shard_param *);
typedef VCL_INT td_directors_shard_param_get_alt(VRT_CTX,
    struct vmod_directors_shard_param *);
typedef VCL_REAL td_directors_shard_param_get_warmup(VRT_CTX,
    struct vmod_directors_shard_param *);
typedef VCL_BOOL td_directors_shard_param_get_rampup(VRT_CTX,
    struct vmod_directors_shard_param *);
typedef VCL_STRING td_directors_shard_param_get_healthy(VRT_CTX,
    struct vmod_directors_shard_param *);
typedef VCL_BLOB td_directors_shard_param_use(VRT_CTX,
    struct vmod_directors_shard_param *);
/* Functions */
struct Vmod_directors_Func {
	td_directors_round_robin__init	*round_robin__init;
	td_directors_round_robin__fini	*round_robin__fini;
	td_directors_round_robin_add_backend*round_robin_add_backend;
	td_directors_round_robin_remove_backend*round_robin_remove_backend;
	td_directors_round_robin_backend*round_robin_backend;
	td_directors_fallback__init	*fallback__init;
	td_directors_fallback__fini	*fallback__fini;
	td_directors_fallback_add_backend*fallback_add_backend;
	td_directors_fallback_remove_backend*fallback_remove_backend;
	td_directors_fallback_backend	*fallback_backend;
	td_directors_random__init	*random__init;
	td_directors_random__fini	*random__fini;
	td_directors_random_add_backend	*random_add_backend;
	td_directors_random_remove_backend*random_remove_backend;
	td_directors_random_backend	*random_backend;
	td_directors_hash__init		*hash__init;
	td_directors_hash__fini		*hash__fini;
	td_directors_hash_add_backend	*hash_add_backend;
	td_directors_hash_remove_backend*hash_remove_backend;
	td_directors_hash_backend	*hash_backend;
	td_directors_shard__init	*shard__init;
	td_directors_shard__fini	*shard__fini;
	td_directors_shard_set_warmup	*shard_set_warmup;
	td_directors_shard_set_rampup	*shard_set_rampup;
	td_directors_shard_associate	*shard_associate;
	td_directors_shard_add_backend	*shard_add_backend;
	td_directors_shard_remove_backend*shard_remove_backend;
	td_directors_shard_clear	*shard_clear;
	td_directors_shard_reconfigure	*shard_reconfigure;
	td_directors_shard_key		*shard_key;
	td_directors_shard_backend	*shard_backend;
	td_directors_shard_debug	*shard_debug;
	td_directors_shard_param__init	*shard_param__init;
	td_directors_shard_param__fini	*shard_param__fini;
	td_directors_shard_param_clear	*shard_param_clear;
	td_directors_shard_param_set	*shard_param_set;
	td_directors_shard_param_get_by	*shard_param_get_by;
	td_directors_shard_param_get_key*shard_param_get_key;
	td_directors_shard_param_get_alt*shard_param_get_alt;
	td_directors_shard_param_get_warmup*shard_param_get_warmup;
	td_directors_shard_param_get_rampup*shard_param_get_rampup;
	td_directors_shard_param_get_healthy*shard_param_get_healthy;
	td_directors_shard_param_use	*shard_param_use;
	VCL_ENUM			*enum_ALL;
	VCL_ENUM			*enum_BLOB;
	VCL_ENUM			*enum_CHOSEN;
	VCL_ENUM			*enum_HASH;
	VCL_ENUM			*enum_IGNORE;
	VCL_ENUM			*enum_KEY;
	VCL_ENUM			*enum_LAZY;
	VCL_ENUM			*enum_NOW;
	VCL_ENUM			*enum_URL;
static struct Vmod_directors_Func Vmod_directors_Func;
;*2$"$
GCC: (GNU) 8.1.1 20180712 (Red Hat 8.1.1-5)
GCC: (GNU) 8.1.1 20180626 (Red Hat 8.1.1-4)
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+stack_realign
0	K	
 	V	
	 t	
$txt
&boc
=ctx
=cur
=ctx
v(`"
+vdp
=vdp
9bit
9bit
9bit
9bit
9bit
 	6'
#txt
%boc
*ctx
*ctx
*ctx
x%G 
*fbp
m"G 
1ctx
1fbp
]"G 
1dir
*wrk
?"G 
5dir
5"G 
0	K	
 	V	
 	6'
	 t	
$txt
&boc
+ctx
b8O!
+arg
~.ap
+ctx
Y!O!
+ctx
O!O!
+rrp
+ctx
+rrp
 	6'
#txt
%boc
*ctx
|<R 
*ctx
t#R 
*ctx
k#R 
*rrp
` R 
*ctx
*rrp
Q R 
*dir
*wrk
? R 
5dir
5 R 
 	6'
#txt
%boc
*ctx
*ctx
~(/ 
*ctx
t(/ 
*rrp
i%/ 
*ctx
*rrp
Z%/ 
3dir
*wrk
>%/ 
.nxt
5dir
4%/ 
 	6'
	"t	
&txt
(boc
,ALL
,NOW
4		(
D	d!
,VCL
V+	'
W(7&
/ctx
/ctx
/ctx
/ctx
/ctx
/ctx
/ctx
@ctx
@who
/ctx
/ctx
Cctx
Cwho
Cctx
Cwho
/ctx
/ctx
/dir
/wrk
~8pp
Jctx
@dir
/ctx
8ppt
Cctx
Cwho
Calt
@ctx
/ctx
/ctx
/ctx
/ctx
/ctx
8ppt
/ctx
Pctx
Pctx
STap
Pctx
Zt2a
Zt2b
 req
	%t	
(txt
*boc
+ H 
9#U#
3ctx
Ectx
Hmax
Hmin
Hmax
Edst
Esrc
Olen
Sctx
Sctx
Sctx
\ctx
^ctx
y*L,
\ctx
W +$
\__s
\__n
iVSL
	#t	
'txt
)boc
1 8 
,ALL
.ctx
.key
0alt
 2be
7err
Jctx
Jctx
Jalt
@Vsbe
Zkey
[idx
[low
_Vap
^ctx
^tag
^fmt
_Vap
Zbit
Zbit
Zbit
Zbit
kVSL
$	\)
(	=&
<	q(
F	l)
G	t&
H	u(
L	*&
X	='
\	6)
h	/(
	Q	0
	R	0
	]	0
	^	0
	n	0
	o	0
	p	0
	q	0
	r	0
	s	0
	t	0
	u	0
	v	0
\	!!
|	T$
../../include
/usr/include/bits
/usr/lib/gcc/i686-redhat-linux/8/include
/usr/include/sys
/usr/include
../../bin/varnishd/cache
../../include/tbl
../../include/vapi
vbm.h
vdir.c
string_fortified.h
stddef.h
types.h
types.h
pthreadtypes-arch.h
thread-shared-types.h
pthreadtypes.h
math.h
time.h
stdint-uintn.h
stdint.h
vrt.h
cache_director.h
cache.h
req_flags.h
bo_flags.h
vas.h
vsl_int.h
acct_fields_req.h
acct_fields_bereq.h
http_headers.h
locks.h
vdir.h
<built-in>
stdlib.h
pthread.h
string.h
v< . 
f   
/usr/include/bits
/usr/lib/gcc/i686-redhat-linux/8/include
/usr/include/sys
/usr/include
../../include
../../bin/varnishd/cache
../../include/tbl
../../include/vapi
fall_back.c
string_fortified.h
stddef.h
types.h
types.h
pthreadtypes-arch.h
thread-shared-types.h
pthreadtypes.h
math.h
time.h
stdint-uintn.h
stdint.h
vrt.h
cache_director.h
cache.h
req_flags.h
bo_flags.h
vas.h
vsl_int.h
acct_fields_req.h
acct_fields_bereq.h
http_headers.h
locks.h
vcc_if.h
vdir.h
stdlib.h
/usr/include/bits
../../include
/usr/lib/gcc/i686-redhat-linux/8/include
/usr/include/sys
/usr/include
../../bin/varnishd/cache
../../include/tbl
../../include/vapi
hash.c
string_fortified.h
vend.h
stddef.h
types.h
types.h
pthreadtypes-arch.h
thread-shared-types.h
pthreadtypes.h
math.h
time.h
stdarg.h
stdint-uintn.h
stdint.h
vrt.h
cache_director.h
cache.h
req_flags.h
bo_flags.h
vas.h
vsl_int.h
acct_fields_req.h
acct_fields_bereq.h
http_headers.h
locks.h
vsha256.h
vdir.h
vcc_if.h
string.h
mathcalls.h
stdlib.h
/usr/include/bits
/usr/lib/gcc/i686-redhat-linux/8/include
/usr/include/sys
/usr/include
../../include
../../bin/varnishd/cache
../../include/tbl
../../include/vapi
random.c
string_fortified.h
stddef.h
types.h
types.h
pthreadtypes-arch.h
thread-shared-types.h
pthreadtypes.h
math.h
time.h
stdint-uintn.h
stdint.h
vrt.h
cache_director.h
cache.h
req_flags.h
bo_flags.h
vas.h
vsl_int.h
acct_fields_req.h
acct_fields_bereq.h
http_headers.h
locks.h
vbm.h
vdir.h
vcc_if.h
stdlib.h
vrnd.h
mathcalls.h
/usr/include/bits
/usr/lib/gcc/i686-redhat-linux/8/include
/usr/include/sys
/usr/include
../../include
../../bin/varnishd/cache
../../include/tbl
../../include/vapi
round_robin.c
string_fortified.h
stddef.h
types.h
types.h
pthreadtypes-arch.h
thread-shared-types.h
pthreadtypes.h
math.h
time.h
stdint-uintn.h
stdint.h
vrt.h
cache_director.h
cache.h
req_flags.h
bo_flags.h
vas.h
vsl_int.h
acct_fields_req.h
acct_fields_bereq.h
http_headers.h
locks.h
vcc_if.h
vdir.h
stdlib.h
/usr/include/bits
../../include
/usr/lib/gcc/i686-redhat-linux/8/include
/usr/include/sys
/usr/include
../../bin/varnishd/cache
../../include/tbl
../../include/vapi
vmod_shard.c
string_fortified.h
tbl_healthy.h
tbl_by.h
vend.h
tbl_resolve.h
stddef.h
types.h
types.h
stdint-intn.h
pthreadtypes-arch.h
thread-shared-types.h
pthreadtypes.h
math.h
time.h
stdarg.h
stdint-uintn.h
stdint.h
vrt.h
cache_director.h
cache.h
req_flags.h
bo_flags.h
vas.h
vsl_int.h
acct_fields_req.h
acct_fields_bereq.h
http_headers.h
locks.h
vcl.h
vcc_if.h
shard_dir.h
stdlib.h
shard_cfg.h
string.h
|XXf
 J .J
< f J
tJ J
< f J
< f J
< fJJ J
XXXX
<f. 
/usr/include/bits
/usr/lib/gcc/i686-redhat-linux/8/include
/usr/include/sys
/usr/include/bits/types
/usr/include
../../include
../../bin/varnishd/cache
../../include/tbl
../../include/vapi
shard_cfg.c
string_fortified.h
stdio2.h
stddef.h
types.h
types.h
stdint-intn.h
pthreadtypes-arch.h
thread-shared-types.h
pthreadtypes.h
struct_FILE.h
FILE.h
stdio.h
sys_errlist.h
math.h
time.h
stdint-uintn.h
stdint.h
vrt.h
cache_director.h
cache.h
req_flags.h
bo_flags.h
vas.h
vsl_int.h
acct_fields_req.h
acct_fields_bereq.h
http_headers.h
locks.h
shard_dir.h
stdlib.h
string.h
<built-in>
=X  
BX  
"<t.
&:J<f
../../include
/usr/include/bits
/usr/lib/gcc/i686-redhat-linux/8/include
/usr/include/sys
/usr/include/bits/types
/usr/include
../../bin/varnishd/cache
../../include/tbl
../../include/vapi
shard_dir.c
vbm.h
string_fortified.h
shard_dir.h
vend.h
stddef.h
types.h
types.h
stdint-intn.h
pthreadtypes-arch.h
thread-shared-types.h
pthreadtypes.h
stdarg.h
struct_FILE.h
FILE.h
stdio.h
sys_errlist.h
time.h
math.h
stdint-uintn.h
stdint.h
vrt.h
cache_director.h
cache.h
req_flags.h
bo_flags.h
vas.h
vsl_int.h
acct_fields_req.h
acct_fields_bereq.h
http_headers.h
locks.h
vsha256.h
stdlib.h
vrnd.h
pthread.h
<built-in>
string.h
/usr/lib/gcc/i686-redhat-linux/8/include
/usr/include/bits
/usr/include/bits/types
/usr/include
../../include
stddef.h
types.h
struct_FILE.h
FILE.h
stdio.h
sys_errlist.h
stdint-intn.h
vrt.h
vcc_if.h
vcc_if.c
pthread_key_t
R_STP_VCLFAIL
H_Accept_Language
SLT_ExpBan
VCL_EVENT_COLD
SC_RANGE_SHORT
vcl_event_e
SLT_ReqProtocol
pthread_cond_t
restarts
__shared
SC_RX_JUNK
__ssize_t
__pthread_rwlock_arch_t
SLT_Begin
H_Warning
t_open
grace
__func__
lru_list
nbits
SLT_VCL_return
t_first
vdi_healthy_f
len_so_far
bereq0
refcnt
__data
SLT_Hit
lck_hcb
pool_task
stevedore
lck_objhdr
acct_bereq
H__Reason
stats
vrt_privs
SLT_ReqURL
timer_idx
SLT_VCL_acl
R_STP_SYNTH
SLT_CLI
vsl_log
H__Status
SC_OVERLOAD
H_Content_Location
SLT_ReqStart
SLT_Debug
VCL_BACKEND
handling
H_WWW_Authenticate
H_Accept_Charset
is_gzip
__uint8_t
H_Content_MD5
timer_when
SLT_BackendStart
http0
SLT_ObjMethod
R_STP_LOOKUP
t_idle
vdi_destroy_f
lck_ban
http_req
SLT_BereqHeader
SLT_Hash
director_state_e
SLT_BerespUnset
SLT_VSL
H_Accept_Encoding
lck_exp
SC_REQ_HTTP10
SLT_Storage
acct_req
H_Content_Type
explicit_bzero
exp_list
fetch_task
SLT_ObjStatus
R_STP_PIPE
vdi_event_f
SLT_FetchError
want100cont
specific
H_Max_Forwards
l_backend
SLT_H2RxHdr
VCL_EVENT_LOAD
VDI_AH_HEALTHY
admin_health
req_body_status
__writers
__timezone
__builtin_memmove
ban_list
cli_thread
unsigned char
pthread_rwlock_rdlock
nhashpriv
lck_pipestat
worker
vdir_add_backend
SLT_BereqAcct
SLT_SessOpen
do_esi
realloc
H_ETag
SLT_ReqHeader
H_Upgrade
vdi_ahealth
SC_RX_TIMEOUT
__builtin___memcpy_chk
__tzname
hsh_list
__wseq32
task_func_t
pthread_rwlock_destroy
SLT_HttpGarbage
SLT_BerespURL
err_code
fetch_objcore
__high
H_Transfer_Encoding
H_Cookie
__g1_start32
health_changed
__uint16_t
director_resp
vdp_ctx
__builtin_memcpy
pthread_rwlock_wrlock
H_Proxy_Authenticate
d_ttl
H_X_Forwarded_For
__low
stobj
SLT_BerespHeader
BOS_STREAM
VRT_fail
R_STP_NONE
SC_RX_BODY
sattr
SLT_VCL_call
director_req
http_beresp
vtqh_first
DIR_S_BODY
acct
vbit_test
SC_RX_BAD
VDI_AH_SICK
hash_objhead
R_STP_RESTART
vdir_wrlock
vbit_rndup
SLT_Backend
vary
lck_tcp_pool
director_state
bereq_bodybytes
lck_wstat
H_Server
H_Accept_Ranges
witness_key
SLT__Reserved
SLT_WorkThread
suckaddr
lck_cli
H__Proto
SLT_ObjLost
H_TE
BOS_REQ_DONE
is_bgfetch
vdir.c
SLT_ReqMethod
VDI_AH_PROBE
H_If_Match
SLT_ObjHeader
H_User_Agent
lck_lru
__flags
ws_bo
__explicit_bzero_chk
H_Trailer
SC_RESP_CLOSE
SLT_VfpAcct
vdir_new
http_resp
vrt_magic_string_end
BOS_FINISHED
vdir_unlock
last_lru
H_Host
retries
vary_b
SLT_RespMethod
vary_e
H_Referer
__g1_start
vary_l
__uint64_t
SC_RX_OVERFLOW
SLT_BackendClose
SLT_BereqURL
pthread_rwlock_t
SC_TX_ERROR
SLT_Link
SLT_ReqAcct
pthread_t
H_Content_Language
ws_req
vtqe_prev
vdir_pick_be
listen_sock
lck_waiter
vtqe_next
__cur_writer
vdir_any_healthy
SLT_RespURL
uintptr_t
__size
REQ_BODY_WITHOUT_LEN
H_If_Modified_Since
SLT_BerespLost
beresp_hdrbytes
hash_ignore_busy
H_Age
SLT_Backend_health
__builtin_memset
vdir_expand
director_hint
retval
SLT_RespHeader
H_Date
vcl_list
VAS_ASSERT
SLT_ObjReason
BOS_PREP_STREAM
__g1_orig_size
H_Authorization
lastused
__ch
__uint32_t
seen_methods
lck_vcapace
long long int
VCL_EVENT_WARM
__len
H_Retry_After
H_If_Unmodified_Since
SLT_H2TxBody
SLT_ReqStatus
vdi_panic_f
stevedore_priv
_vreplace
SLT_BerespProtocol
getip
H_Vary
SLT_VCL_Error
hits
lck_vcl
http_bereq
refcount
esi_level
boc_state_e
__stack_chk_fail_local
H_Location
SLT_BackendOpen
storage
cond
VAS_Fail
REQ_BODY_CACHED
vdi_getip_f
SLT_ProxyGarbage
BOS_INVALID
cur_method
float
vbit_destroy
SLT__Batch
/builddir/build/BUILD/varnish-6.0.0/lib/libvmod_directors
VAS_Fail_Func
event
__wrefs
__intmax_t
SLT_RespStatus
REQ_BODY_TAKEN
syntax
late100cont
nobjhead
H_Content_Encoding
is_gunzip
VCL_EVENT_DISCARD
__pad2
__pad3
__pad4
lck_sess
pthread_rwlock_init
DIR_S_HDRS
R_STP_TRANSMIT
vrt_ctx
lck_vxid
SLT_BereqMethod
connect_timeout
SLT__Bogus
do_gunzip
first_byte_timeout
vdir_delete
SLT_BogoHeader
do_pass
__rwelision
VSC_lck
total_weight
logtag
vtqh_last
SLT_BereqUnset
lck_busyobj
SLT_BereqReason
SLT_HitPass
SLT_ObjUnset
SC_PIPE_OVERFLOW
strangelove
director
is_hit
getbody
vrt_priv
SLT_BereqStatus
sess_close
lck_mempool
calloc
R_STP_DELIVER
oa_present
vdir
vdi_gethdrs_f
long double
R_STP_FETCH
http_req_top
SLT_Error
SLT_Witness
bereq_hdrbytes
SC_REM_CLOSE
SC_TX_PIPE
t_origin
vclver
http_conn
R_STP_PASS
vcl_name
GNU C17 8.1.1 20180712 (Red Hat 8.1.1-5) -m32 -march=i686 -mtune=generic -msse2 -mfpmath=sse -mstackrealign -g -O2 -fexceptions -fstack-protector-strong -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection=full -ffloat-store -fexcess-precision=standard -fPIC -fplugin=annobin
exp_flags
vxid_pool
H_Set_Cookie
VAS_INCOMPLETE
vrt_magic_string_unset
__wrphase_futex
vdir_pick_by_weight
long long unsigned int
lck_backend
H_Content_Length
signgam
beresp_bodybytes
__g_size
between_bytes_timeout
H_Last_Modified
H_Connection
SLT_HitMiss
SLT_VCL_trace
initial
VAS_WRONG
SLT_ReqReason
vdi_http1pipe_f
req_step
body_oc
vfp_ctx
SLT_BereqLost
vdi_getbody_f
w_list
H_HTTP2_Settings
__g_refs
H_Range
SLT_SessClose
H_From
SLT_ObjProtocol
storeobj
SLT_BerespMethod
SLT_BackendReuse
do_gzip
was_304
R_STP_MISS
__align
SLT_VCL_Log
REQ_BODY_WITH_LEN
SLT_PipeAcct
doclose
vdir_rdlock
SLT_TTL
SLT_Gzip
waitinglist
strdup
SLT_BerespReason
SC_REQ_CLOSE
SLT_ExpKill
transport_priv
SLT_BerespStatus
H_Pragma
H_Allow
SLT_RespProtocol
__src
__wseq
conds
VSC_main
SLT_RespLost
__readers
SC_VCL_FAILURE
short int
vbitmap
H_Proxy_Authorization
func
transport
display_name
R_STP_TRANSPORT
VAS_MISSING
keep
http
SLT_ObjURL
DIR_S_NULL
REQ_BODY_FAIL
__pthread_cond_s
__dest
H_Expires
pthread_rwlock_unlock
H_If_Range
err_reason
vstqe_next
__g_signals
H_If_None_Match
SLT_Proxy
lck_vbe
priv2
req_body_state_e
SLT_RespReason
__daylight
REQ_BODY_NONE
panic
res_mode
SLT_LostHeader
SLT_ESI_xmlerror
SLT_H2TxHdr
SLT_Timestamp
vbit_expand
vdi_finish_f
H_Keep_Alive
http1pipe
getdate_err
gethdrs
R_STP_PURGE
hash_always_miss
uncacheable
_Float128
SLT_BereqProtocol
SC_NULL
SLT_ReqLost
malloc
resp_len
SLT_RespUnset
short unsigned int
magic
vdir_remove_backend
SLT_Fetch_Body
SC_TX_EOF
H_Cache_Control
t_prev
BOS_FAILED
vdi_resolve_f
H_Content_Range
SLT_H2RxBody
vas_e
vas_f
SLT_End
SC_REQ_HTTP20
client_identity
R_STP_RECV
SLT_ReqUnset
__writers_futex
nobjcore
VAS_VCL
disable_esi
stale_oc
VSL_tag_e
H_Via
VDI_AH_DELETED
H_Expect
lck_wq
vbit_new
SLT_Length
do_stream
REQ_BODY_INIT
H_Accept
vbit_set
vbit_clr
protover
blacklist
vmod_fallback__init
vmod_enum_URL
vmod_fallback_backend
vmod_fallback_resolve
vmod_enum_NOW
vmod_enum_HASH
VCL_ENUM
vmod_enum_KEY
vmod_enum_BLOB
vmod_fallback_add_backend
vmod_fallback__fini
vmod_enum_CHOSEN
vmod_enum_ALL
sticky
vmod_enum_LAZY
vmod_directors_fallback
fall_back.c
vmod_fallback_remove_backend
VCL_BOOL
vmod_enum_IGNORE
vmod_fallback_healthy
vmod_hash_add_backend
VSHA256Context
vbe32dec
VSHA256_Final
vmod_hash__init
vmod_hash_remove_backend
__builtin_va_list
__gnuc_va_list
sha_ctx
vmod_hash__fini
vmod_directors_hash
scalbn
strlen
hash.c
vmod_hash_backend
VSHA256_Update
VSHA256_Init
VRND_RandomTestable
vmod_random__init
vmod_directors_random
vmod_random_add_backend
vmod_random_backend
random.c
vmod_random_remove_backend
vmod_random_healthy
vmod_random__fini
vmod_random_resolve
vmod_round_robin__fini
vmod_round_robin_remove_backend
vmod_round_robin_add_backend
vmod_rr_healthy
vmod_round_robin__init
vmod_directors_round_robin
vmod_rr_resolve
round_robin.c
vmod_round_robin_backend
SA_LOCAL_ADDR
defaults
_BY_E_MAX
BY_HASH
HTTP_HDR_LOST
vmod_shard_remove_backend
vmod_shard_param_get_rampup
vmod_shard_set_rampup
vmod_priv
VCL_TYPE_BOOL
HTTP_HDR_PROTO
vmod_shard_param_read
canon_point
valid_backend
vmod_shard_backend_arg
_RESOLVE_E_INVALID
vmod_shard_clear
vmod_shard_param_get_by
WS_Alloc
BY_URL
VCL_TYPE_ENUM
VCL_STRING
vmod_shard_param__fini
vmod_directors_shard_param
valid_warmup
SA_CLIENT_ADDR
vmod_shard_remove_backend_arg
valid_by
vmod_shard_key
sess_attr
shardd
valid_healthy
valid_resolve
vmod_shard_param_use
vmod_shard_backend
vmod_shard_param_get_key
VCL_INT
vmod_shard__init
vrt_type
shard_backend_arg_mask
VCL_TYPE_STRANDS
_HEALTHY_E_MAX
VCL_TYPE_HTTP
BY_BLOB
vmod_shard_healthy
by_str
parse_resolve_e
valid_ident
sharddir_debug
vmod_priv_free_f
SA_XPORT_PRIV
sharddir_sha256
shard_param_stack
vshard
TASK
by_s
VCL_TYPE_BACKEND
VCL_TYPE_HEADER
rampup_duration
VCL_BLOB
_HEALTHY_E_INVALID
VCL_TYPE_INT
vmod_shard_param_set
vmod_shard.c
sharddir_err
VCL_TYPE_IP
VCL_TYPE_STRINGS
shard_param_args
shard_param_default
host
probability
arg1
parse_healthy_e
vmod_shard__fini
VMOD
vmod_shard_add_backend_arg
shard_param_prep
vmod_shard_param_set_arg
valid_key
vmod_shard_param_get_alt
healthy_s
vmod_shard_associate
STACK
VCL_TYPE_BLOB
sharddir_pick_be
shard_get_key
replicas
shard_param_blob
uname
vmod_directors_shard
shard_circlepoint
shard_param_task
VCL_TYPE_ACL
vmod_shard_param_get_healthy
SA_LAST
VCL_TYPE_SUB
vshardp
HTTP_HDR_METHOD
lname
VCL_REAL
shardcfg_remove_backend
shardcfg_set_rampup
HTTP_HDR_REASON
vmod_shard_param_clear
HTTP_HDR_UNSET
_RESOLVE_E_MAX
HTTP_HDR_STATUS
_SCOPE_INVALID
VCL_TYPE_VCL
sharddir_sha256v
vmod_directors_shard_param_scope
key_int
VCL_TYPE_INSTANCE
vmod_shard_set_warmup
VCL_TYPE_BYTES
VRT_priv_task
VCL_TYPE_STRING
valid_alt
HTTP_HDR_FIRST
shardcfg_reconfigure
pstk
vmod_shard_resolve
VCL_TYPE_REAL
shard_blob_key
BY_KEY
SA_REMOTE_ADDR
vmod_shard_reconfigure
VCL_TYPE_BODY
vmod_shard_param_get_warmup
szof
shard__assert
shard_param_set_mask
VCL_TYPE_STEVEDORE
healthy_str
vmod_shard_param__init
debug_flags
sharddir_new
HTTP_HDR_URL
SA_SERVER_ADDR
VCL_TYPE_PROBE
SA_TRANSPORT
valid_rampup
__int64_t
sharddir_delete
VCL_TYPE_STRING_LIST
from
_BY_E_INVALID
SA_CLIENT_IP
VCL_TYPE_DURATION
sharddir_any_healthy
SA_CLIENT_PORT
VCL_TYPE_TIME
SA_PROTO_PRIV
valid_key_blob
shardcfg_add_backend
shard_param_merge
parse_by_e
shardcfg_set_warmup
ctype
shardcfg_clear
sharddir
vmod_shard_add_backend
vmod_shard_debug
valid_param
VCL_TYPE_VOID
VCL_DURATION
_IO_codecvt
REMOVE_BE
_IO_save_end
vstqh_last
_IO_write_base
shardcfg_delete
_lock
shardcfg_get_rampup
_IO_save_base
shard_change_get
ratio
_chain
_cur_column
backend_reconfig
_sys_nerr
_IO_marker
circlepoint_compare
_IO_FILE
_IO_wide_data
shard_change_task
shard_change_finish
_freeres_list
hole_i
hole_n
shardcfg_backend_expand
_IO_lock_t
shardcfg_backend_cmp
_IO_read_ptr
shard_change_task_add
ADD_BE
strcmp
stdin
compar
shardcfg_backend_lookup
_markers
sharddir_unlock
shardcfg_hashcircle
spec
_flags2
_IO_read_base
_unused2
__quad_t
shardcfg_apply_change
shardcfg_backend_finalize
_old_offset
space
shardcfg_backend_clear
_IO_write_end
_IO_buf_base
qsort
__pad5
shardcfg_backend_add
shard_change
snprintf
shard_change_task_e
CLEAR
tasks
shardcfg_backend_del
__off_t
shard_cfg.c
_freeres_buf
__builtin___snprintf_chk
_IO_backup_base
_shortbuf
__off64_t
shardcfg_backend_copyin
_SHARD_TASK_E_MAX
_IO_buf_end
shard_change_task_backend
stderr
sharddir_wrlock
_vtable_offset
_sys_errlist
_IO_read_end
_fileno
__fmt
stdout
_IO_write_ptr
vstqh_first
shardcfg_backend_free
shardcfg_backend_del_cmp
previous
vle32enc
sharddir_backend
sha256_digest
shard_be_info
validate_alt
picklist
shard_dir.c
alt_max
uint32_digest
shard_next
ringsz
shard_state
vbit_init
sharddp
skip
alt_r
chosen
sharddir_rdlock
picklist_sz
picklist_spc
VSLbv
VSLv
shard_lookup
pickcount
chosen_r
hostid
init_state
VRND_RandomTestableDouble
td_directors_shard_key
td_directors_shard_clear
td_directors_round_robin__init
td_directors_shard_param_clear
td_directors_shard_debug
Vmod_Json
td_directors_hash__fini
td_directors_shard_associate
td_directors_shard__init
vrt_minor
Vmod_Proto
td_directors_fallback__init
td_directors_hash_backend
td_directors_shard_remove_backend
td_directors_random__fini
file_id
Vmod_directors_Func
td_directors_shard_param_get_warmup
td_directors_shard_param_get_key
td_directors_fallback_remove_backend
td_directors_shard_backend
td_directors_shard_param_get_by
td_directors_shard_param__fini
proto
td_directors_hash_add_backend
vcc_if.c
td_directors_shard_param_use
td_directors_shard_set_rampup
td_directors_shard_set_warmup
td_directors_fallback_add_backend
Vmod_directors_Data
td_directors_random_remove_backend
td_directors_random__init
td_directors_shard_param_get_alt
td_directors_round_robin_backend
td_directors_round_robin__fini
vmod_data
Vmod_Func
td_directors_shard__fini
td_directors_shard_reconfigure
json
func_len
td_directors_random_backend
td_directors_random_add_backend
td_directors_round_robin_add_backend
td_directors_fallback__fini
td_directors_shard_param_set
td_directors_shard_param__init
td_directors_shard_param_get_healthy
td_directors_shard_param_get_rampup
td_directors_hash__init
td_directors_round_robin_remove_backend
td_directors_hash_remove_backend
vrt_major
td_directors_fallback_backend
td_directors_shard_add_backend
2$w,
t "	
t$&	
t((	
t h	
t$"	
t(&	
t,(	
t `	
t$h	
t8h	
t(o	
t J	
@K$"
@K$"
@K$"
"2$r4
crtstuff.c
deregister_tm_clones
__do_global_dtors_aux
completed.7189
__do_global_dtors_aux_fini_array_entry
frame_dummy
__frame_dummy_init_array_entry
.annobin_vdir.c
.annobin_vdir.c_end
vbit_expand.part.2
__func__.8486
__func__.8569
__func__.8496
__func__.8575
__func__.8579
__func__.8583
__func__.8587
__func__.8595
__func__.8559
__func__.8604
__func__.8617
__func__.8629
.annobin_fall_back.c
.annobin_fall_back.c_end
vmod_fallback_resolve
__func__.8751
vmod_fallback_healthy
__func__.8742
__func__.8762
__func__.8767
__func__.8773
__func__.8779
__func__.8784
.annobin_hash.c
.annobin_hash.c_end
__func__.8797
__func__.8802
__func__.8809
__func__.8815
__func__.8827
.annobin_random.c
.annobin_random.c_end
vmod_random_resolve
__func__.8798
vmod_random_healthy
__func__.8789
__func__.8805
__func__.8810
__func__.8817
__func__.8823
__func__.8828
.annobin_round_robin.c
.annobin_round_robin.c_end
vmod_rr_resolve
vmod_rr_healthy
__func__.8741
__func__.8761
__func__.8766
__func__.8772
__func__.8778
__func__.8783
.annobin_vmod_shard.c
.annobin_vmod_shard.c_end
shard_param_merge
__func__.9048
shard_param_stack
__func__.9143
shard_param_task
__func__.9151
shard_param_prep
__func__.9157
shard_param_args
__func__.8954
__func__.9081
__func__.8950
__func__.9056
vmod_shard_healthy
__func__.9109
vmod_shard_param_read.isra.1
__func__.9177
shard_get_key.isra.2.part.3
__func__.9039
vmod_shard_resolve
__func__.9119
shard_param_default
__func__.8974
__func__.8980
__func__.8993
__func__.8999
__func__.9006
__func__.9012
__func__.9020
__func__.9026
__func__.8958
__func__.9098
__func__.9125
__func__.9132
__func__.9137
by_str
__func__.9184
healthy_str
__func__.9215
__func__.9224
.annobin_shard_cfg.c
.annobin_shard_cfg.c_end
circlepoint_compare
shard_change_task_add
__func__.9278
shardcfg_backend_free
shard_change_get.isra.0
__func__.9266
shard_change_task_backend.part.2
__func__.9290
shardcfg_backend_cmp.isra.4
__func__.9356
__func__.9299
__func__.9313
__func__.9427
__func__.9330
__func__.9361
__func__.9413
__func__.9452
__func__.9270
__func__.9383
__func__.9376
__func__.9464
__func__.9469
__func__.9475
.annobin_shard_dir.c
.annobin_shard_dir.c_end
shard_next
__func__.9377
sharddir_backend.isra.1.part.2
__func__.9268
sharddir_rdlock
__func__.9395
__func__.9328
__func__.9386
__func__.9391
__func__.9399
__func__.9403
__func__.9426
__func__.9445
__func__.9358
.annobin_vcc_if.c
.annobin_vcc_if.c_end
Vmod_Func
Vmod_Proto
Vmod_Json
stack_chk_fail_local.oS
.annobin_stack_chk_fail_local.c
.annobin_stack_chk_fail_local.c_end
__FRAME_END__
__x86.get_pc_thunk.bx
__x86.get_pc_thunk.bp
__x86.get_pc_thunk.dx
__x86.get_pc_thunk.si
__dso_handle
__x86.get_pc_thunk.ax
_DYNAMIC
__stack_chk_fail_local
__GNU_EH_FRAME_HDR
__TMC_END__
_GLOBAL_OFFSET_TABLE_
vmod_enum_HASH
sharddir_new
vmod_shard_key
__snprintf_chk@@GLIBC_2.3.4
vmod_shard_param_get_healthy
strcmp@@GLIBC_2.0
vmod_hash_add_backend
vmod_shard_backend
_ITM_deregisterTMCloneTable
sharddir_debug
vmod_round_robin_add_backend
vmod_enum_NOW
pthread_rwlock_unlock@@GLIBC_2.1
memmove@@GLIBC_2.0
shardcfg_delete
free@@GLIBC_2.0
strdup@@GLIBC_2.0
vmod_shard_param_set
vmod_round_robin__init
memcpy@@GLIBC_2.0
vmod_fallback__init
vmod_shard_reconfigure
sharddir_wrlock
_edata
vmod_shard_clear
vdir_rdlock
vmod_hash__fini
vdir_new
vmod_shard_param_clear
pthread_rwlock_destroy@@GLIBC_2.1
vmod_random__fini
__stack_chk_fail@@GLIBC_2.4
VRT_fail
vmod_shard__init
vdir_delete
vmod_random__init
VDI_AH_HEALTHY
sharddir_sha256v
vmod_shard_param__init
vdir_any_healthy
vmod_fallback__fini
__cxa_finalize@@GLIBC_2.1.3
VAS_Fail
vmod_shard_param_get_rampup
vmod_fallback_remove_backend
shardcfg_clear
sharddir_err
shardcfg_set_warmup
vmod_random_remove_backend
vmod_fallback_backend
vdir_unlock
shardcfg_set_rampup
realloc@@GLIBC_2.0
malloc@@GLIBC_2.0
vmod_shard_param_use
sharddir_unlock
shardcfg_add_backend
__memcpy_chk@@GLIBC_2.3.4
vmod_enum_LAZY
__gmon_start__
vmod_round_robin__fini
vmod_enum_BLOB
VSLbv
sharddir_any_healthy
Vmod_directors_Data
vmod_shard_add_backend
shardcfg_remove_backend
strlen@@GLIBC_2.0
VRND_RandomTestable
vdir_remove_backend
VRND_RandomTestableDouble
vmod_shard_param_get_by
pthread_rwlock_init@@GLIBC_2.1
memset@@GLIBC_2.0
VSLv
vmod_round_robin_backend
vmod_shard_param__fini
vmod_hash__init
vmod_round_robin_remove_backend
scalbn@@GLIBC_2.0
vmod_enum_ALL
vmod_enum_KEY
vmod_fallback_add_backend
vmod_shard_param_get_alt
vmod_enum_IGNORE
vmod_enum_URL
__bss_start
vmod_shard__fini
vmod_shard_associate
pthread_rwlock_rdlock@@GLIBC_2.1
VSHA256_Final
WS_Alloc
__explicit_bzero_chk@@GLIBC_2.25
VSHA256_Init
sharddir_sha256
vmod_shard_set_rampup
shardcfg_get_rampup
vmod_shard_debug
vmod_random_backend
pthread_rwlock_wrlock@@GLIBC_2.1
vmod_random_add_backend
vdir_wrlock
vdir_add_backend
vmod_hash_backend
VSHA256_Update
vmod_shard_param_get_warmup
vmod_shard_remove_backend
VRT_priv_task
qsort@@GLIBC_2.0
_ITM_registerTMCloneTable
vmod_shard_param_get_key
shardcfg_reconfigure
vdir_pick_be
vmod_shard_set_warmup
sharddir_delete
vmod_hash_remove_backend
vmod_enum_CHOSEN
sharddir_pick_be
calloc@@GLIBC_2.0
vrt_magic_string_end
.symtab
.strtab
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.note.gnu.property
.init_array
.fini_array
.data.rel.ro
.dynamic
.got
.data
.bss
.comment
.gnu.build.attributes
.debug_aranges
.debug_info
.debug_abbrev
.debug_line
.debug_str
.debug_loc
.debug_ranges
