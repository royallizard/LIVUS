F&y%M
DMdG
5;He
U F"f
Gfzk7
z+C.@
;7 f
Ep{Om
Y<OO
x{O1&
"yMD
(+2B
fC`F
L&W2
t{OE
__gmon_start__
__cxa_finalize
_Jv_RegisterClasses
_ZN13bx_devmodel_c4initEv
_ZN13bx_devmodel_c5resetEj
_ZN13bx_devmodel_c14register_stateEv
_ZN13bx_devmodel_c19after_restore_stateEv
libharddrv_LTX_plugin_fini
theHardDrive
_ZN15bx_hard_drive_c5resetEj
bx_devices
_ZN15bx_hard_drive_c13atapi_cmd_nopEh
_ZN15bx_hard_drive_c19get_first_cd_handleEv
_ZN15bx_hard_drive_c19get_cd_media_statusEj
_ZN15bx_hard_drive_c13bmdma_presentEv
_ZN15bx_hard_drive_c13set_signatureEhh
_ZN15bx_hard_drive_c15lba48_transformEhj
_ZN16error_recovery_tC2Ev
_ZN16error_recovery_tC1Ev
_ZN15bx_hard_drive_c25calculate_logical_addressEhPl
_ZN12logfunctions5errorEPKcz
_ZN15bx_hard_drive_c17increment_addressEh
_ZN15bx_hard_drive_c13iolight_timerEv
bx_pc_system
_ZN14bx_pc_system_c14activate_timerEjjj
bx_gui
_ZN15bx_hard_drive_c21iolight_timer_handlerEPv
_ZN20bx_hard_drive_stub_c14bmdma_completeEh
pluginlog
_ZN12logfunctions5panicEPKcz
_ZN20bx_hard_drive_stub_c18bmdma_write_sectorEhPh
_ZN20bx_hard_drive_stub_c17bmdma_read_sectorEhPhPj
_ZN20bx_hard_drive_stub_c18virt_write_handlerEjjj
_ZN20bx_hard_drive_stub_c17virt_read_handlerEjj
_ZN20bx_hard_drive_stub_c19set_cd_media_statusEjj
_ZN20bx_hard_drive_stub_c19get_cd_media_statusEj
_ZN20bx_hard_drive_stub_c19get_first_cd_handleEv
_ZN20bx_hard_drive_stub_c17get_device_handleEhh
_ZN20bx_hard_drive_stub_c5resetEj
_ZN20bx_hard_drive_stub_c4initEv
_ZN15bx_hard_drive_c22init_mode_sense_singleEhPKvi
memcpy
_ZN15bx_hard_drive_c17get_device_handleEhh
_ZN12logfunctions6ldebugEPKcz
_ZN15bx_hard_drive_c15raise_interruptEh
_ZN15bx_hard_drive_c14bmdma_completeEh
_ZN15bx_hard_drive_c19ready_to_send_atapiEh
_ZN15bx_hard_drive_c15command_abortedEhj
_ZN15bx_hard_drive_c16ide_write_sectorEhPhj
_ZN15bx_hard_drive_c15ide_read_sectorEhPhj
_ZN15bx_hard_drive_c18bmdma_write_sectorEhPh
_ZN15bx_hard_drive_c17bmdma_read_sectorEhPhPj
_ZN15cdrom_interface10read_blockEPhji
_ZN15bx_hard_drive_c15atapi_cmd_errorEh6_sense4_ascj
_ZN15bx_hard_drive_c12read_handlerEPvjj
_ZN15bx_hard_drive_c17virt_read_handlerEjj
_ZN15bx_hard_drive_c23init_send_atapi_commandEhhiij
_ZN12logfunctions4infoEPKcz
_ZN15bx_hard_drive_c19set_cd_media_statusEjj
__sprintf_chk
_ZN15cdrom_interface11eject_cdromEv
_ZN15cdrom_interface12insert_cdromEPKc
_ZN15cdrom_interface8capacityEv
__stack_chk_fail
_ZN15bx_hard_drive_c14identify_driveEh
_ZN15bx_hard_drive_c20identify_ATAPI_driveEh
_ZN15bx_hard_drive_c13write_handlerEPvjjj
_ZN15cdrom_interface8read_tocEPhPijii
_ZN15cdrom_interface4seekEj
_ZN15cdrom_interface11start_cdromEv
_ZN8bx_gui_c27update_drive_status_buttonsEv
_ZN15bx_hard_drive_c18virt_write_handlerEjjj
_Unwind_Resume
_ZN15bx_hard_drive_c14register_stateEv
_Znwm
_ZN9bx_list_cC1EP10bx_param_cPKcS3_i
_ZN9bx_list_cC1EP10bx_param_cPKci
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPjihh
_ZN16bx_shadow_data_cC1EP10bx_param_cPKcPhj
_ZN16bx_shadow_bool_cC1EP10bx_param_cPKcPjh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPhihh
_ZN15bx_shadow_num_cC1EP10bx_param_cPKcPtihh
_ZdlPv
__gxx_personality_v0
_ZN15bx_hard_drive_c4initEv
pluginRegisterIOWriteHandler
pluginRegisterIOReadHandler
strncpy
__strcat_chk
strlen
_ZN8bx_gui_c19register_statusitemEPKc
atadevice_mode_names
_ZN9bx_list_c3addEP10bx_param_c
_ZN15cdrom_interfaceC1EPKc
pluginRegisterIRQ
_ZN14bx_pc_system_c14register_timerEPvPFvS0_EjjjPKc
_ZN16volatile_image_tC1EPKc
_ZN14device_image_tC2Ev
_ZTV15vmware3_image_t
_ZN15vmware4_image_tC1Ev
_ZN16undoable_image_tC1EPKc
_ZN15growing_image_tC1Ev
_ZN14concat_image_tC1Ev
_ZN14sparse_image_tC1Ev
_ZTV15default_image_t
_ZN13bx_devmodel_cD2Ev
_ZTV13bx_devmodel_c
_ZN12logfunctionsD2Ev
_ZN13bx_devmodel_cD1Ev
_ZN20bx_hard_drive_stub_cD2Ev
_ZN20bx_hard_drive_stub_cD1Ev
_ZN15bx_hard_drive_cC2Ev
_ZN12logfunctionsC2Ev
_ZTV15bx_hard_drive_c
_ZN12logfunctions3putEPKc
_ZN15bx_hard_drive_cC1Ev
libharddrv_LTX_plugin_init
pluginRegisterDeviceDevmodel
_ZN13bx_devmodel_cD0Ev
_ZN20bx_hard_drive_stub_cD0Ev
_ZN15bx_hard_drive_cD2Ev
_ZN15bx_hard_drive_cD1Ev
_ZN15bx_hard_drive_cD0Ev
_ZTI15bx_hard_drive_c
_ZTS15bx_hard_drive_c
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTI20bx_hard_drive_stub_c
_ZTS20bx_hard_drive_stub_c
_ZTI13bx_devmodel_c
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTS13bx_devmodel_c
_ZTI12logfunctions
_ZTVN10__cxxabiv117__class_type_infoE
_ZTS12logfunctions
_ZTV20bx_hard_drive_stub_c
_ZN14device_image_tD2Ev
_ZTV14device_image_t
_ZN14device_image_tD1Ev
_ZN14device_image_tC1Ev
_ZN14concat_image_tC2Ev
_ZTV14concat_image_t
_ZN14sparse_image_tC2Ev
_ZTV14sparse_image_t
_ZN14sparse_image_tD2Ev
_ZN14sparse_image_tD1Ev
_ZN14sparse_image_t16set_virtual_pageEj
_ZN9redolog_tC2Ev
_ZN9redolog_tC1Ev
_ZN9redolog_t8get_sizeEv
_ZN15default_image_tD2Ev
_ZN15default_image_tD1Ev
_ZN14concat_image_tD2Ev
_ZN14concat_image_tD1Ev
_ZN15default_image_tD0Ev
_ZN14device_image_tD0Ev
_ZN14concat_image_tD0Ev
_ZN14sparse_image_tD0Ev
_ZN15growing_image_tD2Ev
_ZTV15growing_image_t
_ZN15growing_image_tD1Ev
_ZN15growing_image_tD0Ev
_ZN16volatile_image_tD2Ev
_ZTV16volatile_image_t
_ZN16volatile_image_tD1Ev
_ZN16volatile_image_tD0Ev
_ZN16undoable_image_tD2Ev
_ZTV16undoable_image_t
_ZN16undoable_image_tD1Ev
_ZN16undoable_image_tD0Ev
_ZN15growing_image_tC2Ev
_ZN16volatile_image_tC2EPKc
strdup
_ZN16undoable_image_tC2EPKc
_ZN9redolog_t5lseekEli
_ZN16volatile_image_t5lseekEli
_ZN16undoable_image_t5lseekEli
_ZN15growing_image_t5lseekEli
_ZN14sparse_image_t5lseekEli
_Z16increment_stringPci
_ZN14concat_image_t16increment_stringEPc
_ZN14concat_image_t5lseekEli
lseek64
_ZN15default_image_t5lseekEli
_ZN14concat_image_t5writeEPKvm
write
_ZN15default_image_t5writeEPKvm
_ZN9redolog_t5writeEPKvm
read
malloc
free
_ZN16volatile_image_t5writeEPKvm
_ZN16undoable_image_t5writeEPKvm
_ZN15growing_image_t5writeEPKvm
_ZN9redolog_t4readEPvm
_ZN16volatile_image_t4readEPvm
_ZN16undoable_image_t4readEPvm
_ZN15growing_image_t4readEPvm
memset
_ZN14concat_image_t4readEPvm
_ZN15default_image_t4readEPvm
_ZN9redolog_t5closeEv
close
_ZN16volatile_image_t5closeEv
_ZN16undoable_image_t5closeEv
_ZN15growing_image_t5closeEv
_ZN14concat_image_t5closeEv
_ZN15default_image_t5closeEv
_ZN9redolog_t12print_headerEv
_ZN9redolog_t4openEPKcS1_
open64
strcmp
_ZN15growing_image_t4openEPKc
_ZN9redolog_t11make_headerEPKcm
__strcpy_chk
_ZN9redolog_t6createEiPKcm
_ZN9redolog_t6createEPKcS1_m
_ZN14sparse_image_t5panicEPKc
__snprintf_chk
_ZN14sparse_image_t18read_page_fragmentEjjmPv
__errno_location
strerror
_ZN14sparse_image_t4readEPvm
_ZN14sparse_image_t5writeEPKvm
msync
_ZN14sparse_image_t5closeEv
munmap
_ZdaPv
_ZN14concat_image_t4openEPKc
__fxstat64
_ZN15default_image_t4openEPKci
__open64_2
_ZN16volatile_image_t4openEPKc
mkstemp64
unlink
_ZN16undoable_image_t4openEPKc
strcpy
_ZN15default_image_t4openEPKc
_ZN14sparse_image_t11read_headerEv
mmap64
getpagesize
_Znam
_ZN14sparse_image_t4openEPKc
__xstat64
_ZTI16volatile_image_t
_ZTI16undoable_image_t
_ZTI15growing_image_t
_ZTI14sparse_image_t
_ZTI14concat_image_t
_ZTI15default_image_t
_ZTS16volatile_image_t
_ZTI14device_image_t
_ZTS16undoable_image_t
_ZTS15growing_image_t
_ZTS14sparse_image_t
_ZTS14concat_image_t
_ZTS15default_image_t
_ZTS14device_image_t
__cxa_pure_virtual
_ZN15vmware3_image_tD2Ev
_ZN15vmware3_image_tD1Ev
_ZN15vmware3_image_tD0Ev
_ZN15vmware3_image_t5closeEv
_ZN15vmware3_image_t5lseekEli
_ZN15vmware3_image_t15is_valid_headerERNS_11_COW_HeaderE
_ZN15vmware3_image_t10write_intsEiPjm
_ZN15vmware3_image_t12write_headerEiRNS_11_COW_HeaderE
_ZN15vmware3_image_t4syncEv
_ZN15vmware3_image_t9read_intsEiPjm
_ZN15vmware3_image_t11read_headerEiRNS_11_COW_HeaderE
_ZN15vmware3_image_t12perform_seekEv
_ZN15vmware3_image_t5writeEPKvm
_ZN15vmware3_image_t4readEPvm
_ZN15vmware3_image_t17generate_cow_nameEPKcj
strrchr
_ZN15vmware3_image_t4openEPKc
_ZN15vmware3_image_t14INVALID_OFFSETE
_ZTI15vmware3_image_t
_ZTS15vmware3_image_t
_ZNK15vmware4_image_t7is_openEv
_ZN15vmware4_image_t17write_block_indexEmjj
_ZN15vmware4_image_t5flushEv
_ZN15vmware4_image_t16read_block_indexEmj
_ZNK15vmware4_image_t15is_valid_headerEv
_ZN15vmware4_image_t5lseekEli
_ZN15vmware4_image_t12perform_seekEv
_ZN15vmware4_image_t11read_headerEv
_ZN15vmware4_image_t5writeEPKvm
_ZN15vmware4_image_t4readEPvm
_ZN15vmware4_image_t5closeEv
_ZN15vmware4_image_tD2Ev
_ZTV15vmware4_image_t
_ZN15vmware4_image_tD1Ev
_ZN15vmware4_image_t4openEPKc
_ZN15vmware4_image_tD0Ev
_ZN15vmware4_image_tC2Ev
_ZN15vmware4_image_t14INVALID_OFFSETE
_ZN15vmware4_image_t11SECTOR_SIZEE
_ZTI15vmware4_image_t
_ZTS15vmware4_image_t
ioctl
_ZN15cdrom_interface4initEv
_ZN15cdrom_interfaceD2Ev
_ZTV15cdrom_interface
_ZN15cdrom_interfaceD1Ev
_ZN15cdrom_interfaceD0Ev
_ZN15cdrom_interfaceC2EPKc
_ZTI15cdrom_interface
_ZTS15cdrom_interface
libstdc++.so.6
libm.so.6
libc.so.6
libgcc_s.so.1
_edata
__bss_start
_end
libbx_harddrv.so.0
GCC_3.0
CXXABI_1.3
GLIBCXX_3.4
GLIBC_2.4
GLIBC_2.7
GLIBC_2.3.4
GLIBC_2.2.5
ATSubH
fffff.
fff.
fff.
@0H	
fff.
AUATU1
[]A\A]
l$ H
|$@H
[]A\
AWAVD
	USHi
P0H=
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AWAVD
	USHi
P(H=
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
fffff.
<(tx
t$ H
AUATA
[]A\A]
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
t.Ii
tVIi
=`t!
AWAVE
} Hi
[]A\A]A^A_
D$81
l$ H
5un!
T$8dH3
\$HH
l$PL
d$XL
l$`L
t$hL
|$pH
fffff.
AVAUATUS@
D8<@
J>Hi
IDfB
BXHD0000f
0       L
    
$"fB
v0Hi
,(fB
([]A\A]A^A_
$"fB
,(fB
ATUS@
BXCD0000I
0       L
    L
$ fB
 []A\
$ fB
AWE1
AVAUA
D$h1
L$hdH3
x[]A\A]A^A_
u<Hi
t<Hi
D$ D
D$>D
D$?D
t$@D
T$@H
\$PE
fffff.
AWAVAUATUSH
D$h1
D$8H
D$PH
D$HD
D$$H
|$8H
T$8H
D$$H
D$0E
L$0H
t$(H
D$hdH3
x[]A\A]A^A_
D$$H
|$HH
T$HH
|$@H
|$(H
AVAUATE1
|$8dH
T$pH
T$HI
HcL$
t$ Mi
d$ Mi
D$(H
L$0L
t$(H
|$8A
L$0A
t$@H
|$8L
D$`Ic
T$8E1
D$0H
T$ H
|$HL
t$HH
P0Ic
|$0L
[]A\A]A^A_
l$PE
|$@I
L$@E
l$PH
|$@L
|$`L
t$`L
T$0A
D$PH
D$@H
D$(L
L$(Ii
L$PH
D$0H
D$PE
|$(1
L$0H
D$XH
D$0J
L$lLcT$@Lc\$(E
L$@1
L$(M
T$(D
L$@H
D$@H
D$@H
|$`L
t$`L
T$0A
D$(L
L$(H
|$0L
|$8A
L$(A
|$8H
D$0H
L$@L
L$0L
t$(H
|$8L
L$0A
t$@H
|$8L
Lcl$PM
D$0Ic
D$ H
|$HE
t$HH
L$ Hi
H+PpH
H+PpH
H+PpH
t$8H
L$XH
T$ H
T$XH
L$ H
D$XL
L$ I
L$XH
D$ L
D$PH
D$@H
D$(H
t$0H
t$0H
t$0H
T$Pf
|$(?L
t$0H
|$(H
|$XH
fff.
AUATU1
[]A\A]A^
fffff.
ATE1
[]A\A]
fff.
fffff.
fffff.
fffff.
l$ H
H;w`
fff.
d$ H
fff.
AUATA
A\A]
[]A\A]
l$ H
AVAUI
ATUSH
STH9
[]A\A]A^A_
t%E1
t&E1
STH9
l$ L
t$(L
|$0H
l$ L
t$(L
|$0H
fff.
|$(H
|$(H
|$ H
l$ H
fff.
fffff.
fffff.
L$hD
T$XH
fff.
D$XH
KPHc
[]A\A]
fffff.
Bochs ViI
Redolog
rtual HDH
 Imaf
9CPw
l$ H
fff.
tHL9
[]A\A]A^
]A\A]A^
[]A\A]L
AWE1
AVAUI
D$,H
H#{8
[]A\A]A^A_
AWAVE1
AUE1
ATU1
D$(%
tk@H
t+ H
D$(%
[]A\A]A^A_
fffff.
C x&H
[]A\
l$ H
ATUSH
[]A\A]
[]A\A]
ATUSH
0<	vBH
[]A\
[]A\
AVAUATUSH
t+E1
[]A\A]A^
Ot1H
fff.
t$ H
ATUSH
G8H;
C8H9
S(H9
t	H9
C8H)
[]A\
[]H)
AUE1
[]A\L
A]A^
A]A^
[]A\L
A]A^
AVE1
AUATI
\$DL
D$(H9
\$8H)
[]A\A]A^A_
AWAVAUATUSH
C E1
D9t$
[]A\A]A^A_
$KDMVu3
sxtz
C8H+
l$ L
t$(L
|$0H
Ht2H
AVE1
AUATI
I+|$xH
|$pL
[]A\A]A^A_
AVE1
AUATI
I+t$xH
t$pL
[]A\A]A^A_
fff.
[]A\
fff.
fffff.
AWAVI
ATUSH
[]A\A]A^A_
AWAVI
AUATUSH
[]A\A]A^A_
AWAVAUATA
D$pI
l$@H
L$8H
D$tA
D$uA
D$vA
t$pH
D$qA
D$wA
D$vA
D$tA
[]A\A]A^A_
|$8H
L$ D
L$ D
l$@D
T$(A
D$dH
D$eH
D$fH
D$dH
D$@	
fffff.
l$ L
d$(L
l$0H
pci.i440fx_support
bmdma_complete
bmdma_write_sector
bmdma_read_sector
virt_write_handler
virt_read_handler
set_cd_media_status
get_cd_media_status
get_first_cd_handle
get_device_handle
init
get_device_handle %d %d
DISK
CD-ROM
raising interrupt %d {%s}
not raising interrupt {%s}
DMA write not active
Read with CDROM not ready
CDROM: read block %d failed
PACKET-DMA not active
DMA read not active
Read all drive ID Bytes ...
index > %d : %d
CDROM: last READ block loaded
PACKET drq bytes read
PACKET all bytes read
Allocation length < 0
ata.%d.%s
path
Media present in CD-ROM drive
ALPHA1  
Generic CD-ROM  
BOCHS   
Read CD: unknown format
no precompensation {%s}
sector count = %u {%s}
sector number = %u {%s}
cylinder low = %02xh {%s}
cylinder high = %02xh {%s}
enabling LBA mode
set multiple mode: sectors=%d
ATAPI SERVICE not implemented
Enter RESET mode
Reset complete {%s}
Hard Drive State
hard_drive
drive%d
buffer
busy
drive_ready
write_fault
seek_complete
corrected_data
index_pulse
index_pulse_count
error_register
head_no
sector_count
sector_no
cylinder_no
buffer_size
buffer_index
drq_index
current_command
multiple_sectors
lba_mode
packet_dma
control_reset
control_disable_irq
reset_in_progress
features
mdma_mode
udma_mode
hob_feature
hob_nsector
hob_sector
hob_lcyl
hob_hcyl
num_sectors
cdrom_locked
drive_select
ata.%d.resources
ioaddr1
ioaddr2
ATA%d
present
model
Hard-Disk on target %d/%d
HD:%d-%s
cylinders
heads
journal
menu.runtime.cdrom
CDROM on target %d/%d
CD:%d-%s
CD on ata%d-%d: '%s'
clock_cmos.cmosimage.enabled
ata.0.master
ata.0.slave
translation
none
large
boot_params.boot_drive1
boot_params.boot_drive3
boot_params.boot_drive2
boot_params.floppy_sig_check
HD/CD i/o light
harddrv
Exit
calc_log_addr: out of bounds (%d/%d)
%s called in %s stub. you must not have loaded the %s plugin
aborting on command 0x%02x {%s}
ide_write_sector() reached invalid sector %lu, aborting
could not lseek() hard drive image file at byte %lu
could not write() hard drive image file at byte %lu
ide_read_sector() reached invalid sector %lu, aborting
could not lseek() hard drive image file
could not read() hard drive image file at byte %lu
ata%d-%d: atapi_cmd_error: key=%02x asc=%02x
read: unable to find ATA channel, ioport=0x%04x
IO read(0x%04x) with drq == 0: last command was %02xh
IO read(0x%04x): current command is %02xh
IO read(0x%04x): buffer_index >= %d
IO read(0x%04x): not enough space for read
CDROM: READ block loaded (%d remaining)
read cmd 0x08 (DEVICE RESET) not supported
read cmd 0x10 (RECALIBRATE) not supported
read cmd 0x22 (READ LONG) not supported
read cmd 0x23 (READ LONG NO RETRY) not supported
read cmd 0x25 (READ DMA EXT) not supported
read cmd 0x26 (READ DMA QUEUED EXT) not supported
read cmd 0x27 (READ NATIVE MAX ADDRESS EXT) not supported
read cmd 0x2A (READ STREAM DMA) not supported
read cmd 0x2B (READ STREAM PIO) not supported
read cmd 0x2F (READ LOG EXT) not supported
read cmd 0x30 (WRITE SECTORS) not supported
read cmd 0x31 (WRITE SECTORS NO RETRY) not supported
read cmd 0x32 (WRITE LONG) not supported
read cmd 0x33 (WRITE LONG NO RETRY) not supported
read cmd 0x34 (WRITE SECTORS EXT) not supported
read cmd 0x35 (WRITE DMA EXT) not supported
read cmd 0x36 (WRITE DMA QUEUED EXT) not supported
read cmd 0x37 (SET MAX ADDRESS EXT) not supported
read cmd 0x38 (CFA WRITE SECTORS W/OUT ERASE) not supported
read cmd 0x39 (WRITE MULTIPLE EXT) not supported
read cmd 0x3A (WRITE STREAM DMA) not supported
read cmd 0x3B (WRITE STREAM PIO) not supported
read cmd 0x3F (WRITE LOG EXT) not supported
read cmd 0x40 (READ VERIFY SECTORS) not supported
read cmd 0x41 (READ VERIFY SECTORS NO RETRY) not supported
read cmd 0x42 (READ VERIFY SECTORS EXT) not supported
read cmd 0x50 (FORMAT TRACK) not supported
read cmd 0x51 (CONFIGURE STREAM) not supported
read cmd 0x70 (SEEK) not supported
read cmd 0x87 (CFA TRANSLATE SECTOR) not supported
read cmd 0x90 (EXECUTE DEVICE DIAGNOSTIC) not supported
read cmd 0x91 (INITIALIZE DEVICE PARAMETERS) not supported
read cmd 0x92 (DOWNLOAD MICROCODE) not supported
read cmd 0x94 (STANDBY IMMEDIATE) not supported
read cmd 0x95 (IDLE IMMEDIATE) not supported
read cmd 0x96 (STANDBY) not supported
read cmd 0x97 (IDLE) not supported
read cmd 0x98 (CHECK POWER MODE) not supported
read cmd 0x99 (SLEEP) not supported
read cmd 0xA2 (SERVICE) not supported
read cmd 0xB0 (SMART DISABLE OPERATIONS) not supported
read cmd 0xB1 (DEVICE CONFIGURATION FREEZE LOCK) not supported
read cmd 0xC0 (CFA ERASE SECTORS) not supported
read cmd 0xC5 (WRITE MULTIPLE) not supported
read cmd 0xC6 (SET MULTIPLE MODE) not supported
read cmd 0xC7 (READ DMA QUEUED) not supported
read cmd 0xC8 (READ DMA) not supported
read cmd 0xC9 (READ DMA NO RETRY) not supported
read cmd 0xCA (WRITE DMA) not supported
read cmd 0xCC (WRITE DMA QUEUED) not supported
read cmd 0xCD (CFA WRITE MULTIPLE W/OUT ERASE) not supported
read cmd 0xD1 (CHECK MEDIA CARD TYPE) not supported
read cmd 0xDA (GET MEDIA STATUS) not supported
read cmd 0xDE (MEDIA LOCK) not supported
read cmd 0xDF (MEDIA UNLOCK) not supported
read cmd 0xE0 (STANDBY IMMEDIATE) not supported
read cmd 0xE1 (IDLE IMMEDIATE) not supported
read cmd 0xE2 (STANDBY) not supported
read cmd 0xE3 (IDLE) not supported
read cmd 0xE4 (READ BUFFER) not supported
read cmd 0xE5 (CHECK POWER MODE) not supported
read cmd 0xE6 (SLEEP) not supported
read cmd 0xE7 (FLUSH CACHE) not supported
read cmd 0xE8 (WRITE BUFFER) not supported
read cmd 0xEA (FLUSH CACHE EXT) not supported
read cmd 0xED (MEDIA EJECT) not supported
read cmd 0xEF (SET FEATURES) not supported
read cmd 0xF1 (SECURITY SET PASSWORD) not supported
read cmd 0xF2 (SECURITY UNLOCK) not supported
read cmd 0xF3 (SECURITY ERASE PREPARE) not supported
read cmd 0xF4 (SECURITY ERASE UNIT) not supported
read cmd 0xF5 (SECURITY FREEZE LOCK) not supported
read cmd 0xF6 (SECURITY DISABLE PASSWORD) not supported
read cmd 0xF8 (READ NATIVE MAX ADDRESS) not supported
read cmd 0xF9 (SET MAX ADDRESS) not supported
hard drive: io read to address %x unsupported
hard drive: shouldnt get here!
32-bit read from %04x = %08x {%s}
16-bit read from %04x = %04x {%s}
8-bit read from %04x = %02x {%s}
Odd byte count (0x%04x) to ATAPI command 0x%02x, using 0x%04x
ATAPI command 0x%02x with zero byte count
set_cd_media_status handle=%d status=%d
Capacity is %d sectors (%.2f MB)
Could not locate CD-ROM, continuing with media not present
write: unable to find ATA channel, ioport=0x%04x
8-bit write to %04x = %02x {%s}
16-bit write to %04x = %04x {%s}
32-bit write to %04x = %08x {%s}
unknown-size write to %04x = %08x {%s}
IO write(0x%04x): buffer_index >= %d
IO write(0x%04x): not enough space for write
IO write(0x%04x): buffer_index >= PACKET_SIZE
ata%d-%d: ATAPI command 0x%02x started
FIXME: Stop disc not implemented
FIXME: ATAPI start disc not reading TOC
Zero allocation length to MECHANISM STATUS not impl.
cdrom: MODE SENSE (curr), code=%x not implemented yet
cdrom: MODE SENSE PC=%x, PageCode=%x, not implemented by device
cdrom: MODE SENSE (chg), code=%x not implemented yet
cdrom: MODE SENSE (dflt), code=%x not implemented
(READ TOC) format %d not supported
READ(%d) with transfer length <= 0, ok (%i)
cdrom: READ (%d) LBA=%d LEN=%d
Read sub-channel with SubQ not implemented (format=%d)
ATAPI command 0x%x not implemented yet
Unknown ATAPI command 0x%x (%d)
IO write(0x%04x): current command is %02xh
precompensation value %02x {%s}
IO write 0x%04x (%02x): not 1x1xxxxxb
ata%d: device set to %d which does not exist
ata%d: command 0x%02x sent, controller BSY bit set
ata%d-%d: calibrate drive issued to non-disk
ata%d-%d: read sectors issued to non-disk
ata%d-%d: : read from 0/0/0, aborting command
ata%d-%d: write sectors issued to non-disk
ata%d-%d: initialize drive parameters issued to non-disk
ata%d-%d: init drive params: sec=%u, drive sel=%u, head=%u
init drive params: disk ata%d-%d not present
ata%d-%d: init drive params: logical sector count %d not supported
ata%d-%d: init drive params: max. logical head number 0 not supported
ata%d-%d: init drive params: max. logical head number %d not supported
Drive ID Command issued : 0xec 
disk ata%d-%d not present, aborting
ata%d-%d: set transfer mode to PIO
ata%d-%d: set transfer mode to MDMA%d
ata%d-%d: unknown transfer mode type 0x%02x
ata%d-%d: SET FEATURES subcommand 0x%02x not supported, but returning success
ata%d-%d: SET FEATURES with unknown subcommand: 0x%02x
ata%d-%d: read verify issued to non-disk
ata%d-%d: verify command : 0x%02x !
set multiple mode issued to non-disk
ATAPI Device Reset on non-cd device
PACKET-overlapped not supported
write cmd 0x70 (SEEK) executing
initial seek to sector %lu out of bounds, aborting
ata%d-%d: SEEK completed (IRQ %sabled)
write cmd 0x70 (SEEK) not supported for non-disk
write cmd 0x22 (READ LONG) not supported
write cmd 0x23 (READ LONG NO RETRY) not supported
write cmd 0x26 (READ DMA QUEUED EXT) not supported
write cmd 0x27 (READ NATIVE MAX ADDRESS EXT) not supported
write cmd 0x2A (READ STREAM DMA) not supported
write cmd 0x2B (READ STREAM PIO) not supported
write cmd 0x2F (READ LOG EXT) not supported
write cmd 0x31 (WRITE SECTORS NO RETRY) not supported
write cmd 0x32 (WRITE LONG) not supported
write cmd 0x33 (WRITE LONG NO RETRY) not supported
write cmd 0x36 (WRITE DMA QUEUED EXT) not supported
write cmd 0x37 (SET MAX ADDRESS EXT) not supported
write cmd 0x38 (CFA WRITE SECTORS W/OUT ERASE) not supported
write cmd 0x3A (WRITE STREAM DMA) not supported
write cmd 0x3B (WRITE STREAM PIO) not supported
write cmd 0x3F (WRITE LOG EXT) not supported
write cmd 0x50 (FORMAT TRACK) not supported
write cmd 0x51 (CONFIGURE STREAM) not supported
write cmd 0x87 (CFA TRANSLATE SECTOR) not supported
write cmd 0x92 (DOWNLOAD MICROCODE) not supported
write cmd 0x94 (STANDBY IMMEDIATE) not supported
write cmd 0x95 (IDLE IMMEDIATE) not supported
write cmd 0x96 (STANDBY) not supported
write cmd 0x97 (IDLE) not supported
write cmd 0x98 (CHECK POWER MODE) not supported
write cmd 0x99 (SLEEP) not supported
write cmd 0xB0 (SMART commands) not supported
write cmd 0xB1 (DEVICE CONFIGURATION commands) not supported
write cmd 0xC0 (CFA ERASE SECTORS) not supported
write cmd 0xC7 (READ DMA QUEUED) not supported
write cmd 0xC9 (READ DMA NO RETRY) not supported
write cmd 0xCC (WRITE DMA QUEUED) not supported
write cmd 0xCD (CFA WRITE MULTIPLE W/OUT ERASE) not supported
write cmd 0xD1 (CHECK MEDIA CARD TYPE) not supported
write cmd 0xDA (GET MEDIA STATUS) not supported
write cmd 0xDE (MEDIA LOCK) not supported
write cmd 0xDF (MEDIA UNLOCK) not supported
write cmd 0xE2 (STANDBY) not supported
write cmd 0xE3 (IDLE) not supported
write cmd 0xE4 (READ BUFFER) not supported
write cmd 0xE6 (SLEEP) not supported
write cmd 0xE8 (WRITE BUFFER) not supported
write cmd 0xED (MEDIA EJECT) not supported
write cmd 0xF1 (SECURITY SET PASSWORD) not supported
write cmd 0xF2 (SECURITY UNLOCK) not supported
write cmd 0xF3 (SECURITY ERASE PREPARE) not supported
write cmd 0xF4 (SECURITY ERASE UNIT) not supported
write cmd 0xF5 (SECURITY FREEZE LOCK) not supported
write cmd 0xF6 (SECURITY DISABLE PASSWORD) not supported
write cmd 0xF8 (READ NATIVE MAX ADDRESS) not supported
write cmd 0xF9 (SET MAX ADDRESS) not supported
IO write to 0x%04x: unknown command 0x%02x
ata%d: adapter control reg: reset controller = %d
ata%d: adapter control reg: disable irq = %d
hard drive: io write to address %x = %02x
write cmd 0x%02x (READ DMA) not supported
write cmd 0x%02x (WRITE DMA) not supported
Init $Id: harddrv.cc,v 1.229 2009/12/04 19:50:27 sshwarts Exp $
incoherency for ata channel %d: io1=0x%x, io2=%x, irq=%d
HD on ata%d-%d: '%s' 'flat' mode 
HD on ata%d-%d: '%s' 'concat' mode 
HD on ata%d-%d: '%s' 'sparse' mode 
HD on ata%d-%d: '%s' 'vmware3' mode 
HD on ata%d-%d: '%s' 'vmware4' mode 
HD on ata%d-%d: '%s' 'undoable' mode 
HD on ata%d-%d: '%s' 'growing' mode 
HD on ata%d-%d: '%s' 'volatile' mode 
HD on ata%d-%d: '%s' unsupported HD mode : %s
ata%d-%d cannot have zero heads, or sectors/track
ata%d-%d cannot have zero cylinders, heads, or sectors/track
ata%d-%d: could not open hard drive image file '%s'
ata%d-%d: geometry autodetection failed
ata%d-%d: autodetect geometry: CHS=%d/%d/%d
ata%d-%d disk size doesn't match specified geometry
ata%d-%d image doesn't support geometry detection
interrupt reason bit field error
Media not present in CD-ROM drive
1: I will put 0xf into the second hard disk field
translation on ata%d-%d set to '%s'
Using boot sequence %s, %s, %s
Floppy boot signature check is %sabled
15bx_hard_drive_c
20bx_hard_drive_stub_c
13bx_devmodel_c
12logfunctions
`?redolog : lseek HD with offset not multiple of 512
redolog : lseek HD with whence not SEEK_SET
redolog : lseek to byte %ld failed
redolog : lseeking extent index %d, offset %d
lseek HD with offset not multiple of 512
lseek HD with whence not SEEK_SET
sparse_image_t.lseek to byte %ld failed
increment string returning '%s'
concat_image_t.lseek to earlier image, index=%d
concat_image_t.lseek to byte %ld failed
concat_image_t.write %ld bytes
redolog : write HD with count not 512
redolog : writing index %d, mapping to %d
redolog : can't allocate new extent... catalog is full
redolog : allocating new extent at %d
redolog : failed to read bitmap for extent %d
redolog : writing catalog at offset %x
redolog : read HD with count not 512
redolog : reading index %d, mapping to %d
redolog : Standard Header : magic='%s', type='%s', subtype='%s', version = %d.%d
redolog : Specific Header : #entries=%d, bitmap size=%d, exent size = %d disk size = %lld
redolog : could not open image %s
redolog : could not read header
redolog : could not read catalog %d=%d
redolog : next extent will be at index %d
redolog : each bitmap is %d blocs
redolog : each extent is %d blocs
'growing' disk opened, growing file is '%s'
redolog : could not malloc catalog or bitmap
error with sparse disk image %s
error with sparse disk image %s - %s
could not read block contents from file
sparse_image_t.write %ld bytes
Cannot allocate sufficient memory for page-merge in write
failed to write entire merged page to disk
failed to write entire blank page to disk
could not write block contents to file
could not write entire updated block header
failed to un-memory map sparse disk file
concat_image: open image %s, fd[%d] = %d
block devices should REALLY NOT be used as concat images
size of disk image must be multiple of 512 bytes
Can't create volatile redolog '%s'
'volatile' disk opened: ro-file is '%s', redolog is '%s'
Can't open or create redolog '%s'
size reported by redolog doesn't match r/o disk size
'undoable' disk opened: ro-file is '%s', redolog is '%s'
failed block size header check
failed to mmap sparse disk file - using conventional file access
could not allocate memory for sparse disk block table
could not read entire block table
size of sparse disk image is not multiple of page size
error while seeking to start of file
child drive image does not have same page count/page size configuration
sparse_image_t.lseek(%d)
concat_image_t.lseek(%d)
no seek before write
redolog : bitmap offset is %x
redolog : bloc offset is %x
read not in redolog
concat_image_t.read %ld bytes
no seek before read
concat_image_t.close
redolog : open image %s
Bochs Virtual HD Image
redolog : Bad header magic
Redolog
redolog : Bad header type
redolog : Bad header subtype
redolog : Bad header version
Growing
redolog : creating redolog %s
sparse_image_t.read %ld bytes
concat_image_t.open
fstat() returns error!
.XXXXXX
%s%s
Volatile
.redolog
Undoable
could not read entire header
failed header magic check
unknown version in header
sparse_image_t.open
sparse_image: open image %s
16volatile_image_t
16undoable_image_t
15growing_image_t
14sparse_image_t
14concat_image_t
15default_image_t
14device_image_t
unknown 'whence' value (%d) when trying to seek vmware3 COW image
unsupported vmware3 COW disk header version
unsupported vmware3 COW disk version
could not seek vmware3 COW image to flb on sync
could not re-write flb to vmware3 COW image on sync
could not seek vmware3 COW image to slb on sync
could not re-write slb to vmware3 COW image on sync
could not seek to vmware3 COW image to offset 0 on sync
could not re-write header to vmware3 COW image on sync
could not seek vmware3 COW image to offset %d on sync
could not write tlb to vmware3 COW image on sync
could not sync before switching vmware3 COW files
could not sync before seeking vmware3 COW file
could not seek vmware3 COW to sector slb[%d][%d]
could not read %d bytes from vmware3 COW image
failed to sync when writing %u bytes
vmware3 COW read failed on %u bytes
unable to allocate %u bytes for vmware3 COW file name (base: %s, chain: %u)
unable to read vmware3 COW Disk header from file '%s'
invalid vmware3 COW Disk image
unable to open vmware3 COW Disk file '%s'
unable to read header or invalid header in vmware3 COW Disk file '%s'
invalid vmware3 COW Disk file '%s'
cannot allocate %d bytes for flb in vmware3 COW Disk '%s'
cannot allocate %d bytes for slb in vmware3 COW Disk '%s'
cannot allocate %d bytes for slb[] in vmware3 COW Disk '%s'
cannot allocate %d bytes for tlb in vmware3 COW Disk '%s'
unable to seek vmware3 COW Disk file '%s'
unable to read flb from vmware3 COW Disk file '%s'
unable to read slb from vmware3 COW Disk file '%s'
not a vmware3 COW disk
%s-%02d.%s
%s-%02d
15vmware3_image_t
not a vmware4 image
VM4_Header (size=%d)
VMware 4 disk geometry:
   .size      = %lld
   .cylinders = %d
   .heads     = %d
   .sectors   = %d
unsupported vmware4 image version
unknown 'whence' value (%d) when trying to seek vmware4 image
invalid offset specified in vmware4 seek
loaded vmware4 disk image requires un-implemented feature
attempt to read vmware4 header from a closed file
invalid vmware4 virtual disk image
   .version                    = %d
   .flags                      = %d
   .total_sectors              = %lld
   .tlb_size_sectors           = %lld
   .description_offset_sectors = %lld
   .description_size_sectors   = %lld
   .slb_count                  = %d
   .flb_offset_sectors         = %lld
   .flb_copy_offset_sectors    = %lld
   .tlb_offset_sectors         = %lld
vmware4 disk image write failed on %d bytes at %lld
vmware4 disk image read failed on %d bytes at %lld
unable to read vmware4 virtual disk header from file '%s'
unable to allocate %lld bytes for vmware4 image's tlb
15vmware4_image_t
cdrom: read_block: lseek returned error.
start_cdrom: your OS is not supported yet
fstat on cdrom image returned err: %s
expected cdrom image to be a multiple of 2048 bytes
cdrom: capacity: file not open.
cdrom: ioctl(CDROMREADTOCHDR) failed
cdrom: ioctl(CDROMREADTOCENTRY) failed
cdrom: Data track %d, length %d
cdrom: read_toc: file not open.
cdrom: read_toc: unknown format
cdrom: read_toc: READTOCHDR failed.
cdrom: read_toc: READTOCENTRY failed.
cdrom: read_toc: READTOCENTRY lead-out failed.
fstat cdrom file returned error: %s
Using direct access for cdrom.
Init $Id: cdrom.cc,v 1.99 2009/12/04 19:50:26 sshwarts Exp $
cdrom: no data track found
load cdrom with path=%s
open cd failed for %s: %s
Opening image file as a cd.
file = '%s'
CD%d
15cdrom_interface
zPLR
libbx_harddrv.so.0.0.0.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.gcc_except_table
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rela.plt
.got.plt
.got
.text
