	8$I
x"hZ
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
stroke_socket_create
stroke_plugin_create
malloc
return_false
charon
hydra
__fprintf_chk
__stack_chk_fail
__errno_location
strerror_safe
fclose
strcmp
strcasecmp
debug_names
enum_from_name_as_int
identification_create_from_string
fwrite
stroke_cred_create
stroke_attribute_create
stroke_handler_create
stroke_ca_create
stroke_config_create
stroke_control_create
stroke_list_create
stroke_counter_create
enumerator_create_cleaner
enumerator_create_token
strchr
strrchr
traffic_selector_create_dynamic
traffic_selector_create_from_cidr
getprotobyname
getservbyname
strtol
host_create_from_string
traffic_selector_create_from_subnet
enumerator_create_filter
strlen
proposal_create_from_string
proposal_create_default
proposal_create_default_aead
ike_cfg_create
host_create_from_dns
__snprintf_chk
chunk_empty
chunk_create_clone
memwipe_noinline
shared_key_create
linked_list_create
shared_key_type_names
fgets
auth_cfg_create
__strdup
eap_vendor_type_from_string
identification_create_from_encoding
peer_cfg_create
host_create_from_subnet
mem_pool_create
child_cfg_create
host_create_any
mutex_create
ipsec_mode_names
rekey_ike_sa_job_create
rekey_child_sa_job_create
memcmp
delete_ike_sa_job_create
fflush
chunk_from_hex
strncasecmp
chunk_from_base64
snprintf
__isoc99_sscanf
enumerator_create_directory
chunk_to_hex
chunk_write
eat_whitespace
extract_token
extract_value
mem_cred_create
callback_cred_create_shared
chunk_map
fetchline
memchr
path_dirname
match
extract_token_str
chunk_unmap
glob
globfree
return_null
fputs
fputc
enumerator_create_nested
memcpy
strncat
enumerator_create_single
rwlock_create
enumerator_create_empty
chunk_hash
stroke_counter_type_names
hashtable_create
spinlock_create
task_type_names
auth_class_names
eap_type_names
time_monotonic
ike_sa_state_names
ike_version_names
child_sa_state_names
linked_list_create_from_enumerator
protocol_id_names
encryption_algorithm_names
integrity_algorithm_names
ferror
time
uname
mallinfo
action_names
__sprintf_chk
plugin_feature_get_string
hash_algorithm_names
pseudo_random_function_names
diffie_hellman_group_names
rng_quality_names
asn1_known_oid
oid_names
asn1_oid_to_string
libc.so.6
_edata
__bss_start
_end
libstrongswan-stroke.so
GLIBC_2.7
GLIBC_2.14
GLIBC_2.4
GLIBC_2.3.4
GLIBC_2.2.5
5*P!
%,P!
%*P!
%"P!
%zO!
%rO!
%jO!
%bO!
%ZO!
%RO!
%JO!
%BO!
%:O!
%2O!
%*O!
%"O!
%zN!
%rN!
%jN!
%bN!
%ZN!
%RN!
%JN!
%BN!
%:N!
%2N!
%*N!
%"N!
%zM!
%rM!
%jM!
%bM!
%ZM!
%RM!
%JM!
%BM!
%:M!
%2M!
%*M!
%"M!
fffff.
=AP!
5:P!
fffff.
=7M!
fffff.
tFL9
w*H=
ATUSH
[]A\
fff.
AWAV
AUATI
D$H1
L$HdH3
X[]A\A]A^A_
D$*H
-7?!
D$*L
t9H9
t8H9
t8H9
t8H9
t$@L
l$,H
D$0H
D$8H
D$0H
t8H9
t8H9
t9H9
T$@L
t$@H
t9H9
t9H9
t8H9
t8H9
t8H9
t8H9
t8H9
t8H9
t9H9
t9H9
t9H9
t9H9
t9H9
t9H9
t9H9
t8H9
t8H9
t;H9
t;H9
t;H9
t;H9
t;H9
%B/!
t9H9
t9H9
t9H9
t1H9
D$01
D$8E1
t$@H
t$@H
t$@H
fff.
AUAT
%-&!
[]A\A]
AWAVAUATI
l$0dH
T$81
D$(E1
D$0H
D$(H
D$(H
D$0H
D$8dH3
H[]A\A]A^A_
AWAVI
AUATUSH
([]A\A]A^A_
ATUSH
fff.
AWAVAUATI
D$H1
D$8H
D$@H
D$(f.
l$8H
D$8H
\$ L
D$HdH3
X[]A\A]A^A_
t$(1
L$@A
t$(1
\$ L
\$ t
t$(H
ATUSH
]A\H
ffffff.
AWAVI
AUATA
[]A\A]A^A_
[]A\A]A^A_
AWAVH
AUATI
D$0H
SASAR
[]A\A]A^A_
AWAVAUATUSH
t$ H
d$8H
D$@H
T$HH
|$ M
D$ H
D$ H
D$8H
[]A\A]A^A_
D$0L
|$(H
D$01
|$(1
D$@H
D$HH
t$@H
R0XZH
D$@H
|$(1
|$@H
T$HH
AVSL
D$@H
T$HH
D$HH
D$HH
ffffff.
AWAV
AUATUSH
T$5dH
T$@I
T$(t0H
t$(H
D$(f
|$@I
t$@H
:D$6
D$(H
E}PH
|$HM
|$HM
\$HE1
t$0L
D$HH
l$ E1
\$(H
t$HH
l$ H
[]A\A]A^A_
T$@H
D$ H
L$8L
D$ A
|$H1
D$HH
t$@H
D$0H
D$ H
D$ H
L$8H
T$@H
D$(H
t$0L
AWAVAUATI
ARP1
D$8H
D$@H
T$8H
|$@H
|$XH
t$8I
D$8H
D$8H
{PE1
T$@L
SXH)
T$HH
T$PH
T$XH)
T$`H
D$pH
T$hH
D$xH
t$@AU
l$8AUL
l$0AUASARAQE1
[]A\A]A^A_
D$XH
|$XH
l$8H
D$@H
D$8H
D$@H
l$@H
D$@H
D$@H
D$@H
AVAUI
{0[]A\A]A^
ATUH
[]A\
fff.
AWAVI
AUATUSH
D$81
$u;H
D$8dH3
H[]A\A]A^A_
|$0H
l$(A
D$0H
D$(H
D$(H
AVAUATUI
 []A\A]A^
AWAVAUATI
D$H1
T$8L
D$ H
l$(L
t$(H
L$(A
D$HdH3
X[]A\A]A^A_
AWAVI
AUATI
~yHc
<}uEA
*toH
[]A\A]A^A_
[]A\A]A^A_
fffff.
AWAVAUATUSH
D$81
T$ L
l$0H
D$(H
D$(H
|$ H
D$(H
D$(H
D$(H
T$0H
|$ H
D$0H
D$0H
D$0H
D$8dH3
H[]A\A]A^A_
D$0H
AWAVI
AUATI
L$"H
T$(H
t$$L
D$#dH
D$X1
L$@E
L$$L
D$XdH3
h[]A\A]A^A_
D$0H
D$0H
D$8H
|$(H
l$@A
t$8H
L$8A
t$8H
L$8E1
|$(H
D$0H
T$HH
D$8H
L$(H
ffffff.
AWAVAUATUSH
D$H1
d$@H
D$8H
t$ H
D$81
P(H9
D$8H
T$(H
T$(H
D$HdH3
X[]A\A]A^A_
ATUSH
 []A\
ffff.
AWAVAUATI
D$(1
D$ t]H
t$ H
D$(dH3
8[]A\A]A^A_
t$ H
D$ A
D$ H
D$ H
D$ H
AUATI
[]A\A]
ffff.
AWAVA
AUATI
[]A\A]A^A_
P8j61
P8j61
t$0L
P8j61
AVAUM
ATUM
[]A\A]A^
AWAV
AUATI
_AXH
P8j61
L$`H
R0XL
P8j61
P8j61
D$`L
R0AYAZH
[]A\A]A^A_
AVAUI
ATUH
[]A\A]A^
AWAVE
AUATI
d$@H
D$X%
D$HL
T$ L
T$ I
[]A\A]A^A_
D$8H
D$8H
D$81
L$8L
T$(L
\$ A
T$(I
\$ A
P8j61
D$HL
L$8L
T$(L
\$ A
T$(I
D$8H
D$8H
D$8H
D$8H
ATUSH
[]A\
AUATUSH
dH3<%(
[]A\A]
AUAT
[]A\A]
AVAU
ATUI
D$`H
[]A\A]A^
ATUI
D$(1
L$(dH3
0[]A\
AWAVI
AUATE
D$h1
|$ H
T$8H
L$hdH3
x[]A\A]A^A_
L$(M
t$0H
|$0H
D$0H
|$HD
l$PL
D$@H
t$@H
t$@H
D$@H
t$0H
|$0H
AWAVI
AUATUSH
|$(H
L$HL
D$@H
D$8H
L$ H
[]A\A]A^A_
L$ H
AZA[
t$LL
d$(L
l$PI
D$`L
|$`H
D$HI
t$LL
l$PH
l$XL
l$(L
t$LL
l$PH
l$XH
t$@H
|$8H
t$LH
l$PL
t$LH
l$PL
|$XL
l$@AXAYH
t$LL
l$PL
D$(H
D$\^_
|$8H
D$PA
D$8H
t$0H
D$ H
t$PH
D$PH
\$HH
T$Pu
T$PH
D$h1
T$hH
t$`1
\$`H
t$|L
|$LE1
\$`I
t$PH
D$PH
\$`H
t$|E1
|$LE1
t$PH
ATUH
[]A\
[]A\E1
AUAT
[]A\A]
ATUI
[]A\
AVAUI
ATUI
D$81
T$ H
D$8dH3
@[]A\A]A^
t$ H
T$(L
ffff.
AVAUH
ATUI
[]A\A]A^
AWAVA
AUATUSH
|$ dH
L$81
T$0E
D$8dH3
H[]A\A]A^A_
AUATI
[]A\A]
AVAUATUI
D$PH
D$XH
D$PH
A\A]H
[]A\A]A^
AUATUS
D$PH
D$XH
[]A\A]H
[]A\A]
AUATUSH
[]A\A]
ATUH
KH[]A\
ATUI
[]A\
AWAVI
AUATI
([]A\A]A^A_
ATUI
T$ H
ffffff.
AUATI
[]A\A]
ATUSH
]A\H
AWAVI
AUATI
([]A\A]A^A_
ffff.
AUATI
[]A\A]
ATUH
[]A\
AWAVI
AUATI
[]A\A]A^A_
fffff.
AWAVI
AUATI
|$HH
([]A\A]A^A_
ffff.
AVAUI
ATUI
]A\A]A^
ffff.
K@[]A\
AUATI
[]A\A]
AWAVI
AUATI
([]A\A]A^A_
AUATI
[]A\A]
ATUM
$[]A\
S([I
ffff.
AVAUI
ATUSH
[]A\A]A^
AUATI
[]A\A]
[]A\A]H
AWAVI
AUATUSH
[]A\A]A^A_
l$ H
tQAUATUSH
[]A\A]
ATUStWrH
AVAUI
ATUA
%u}A
"u`A
]A\A]A^
AWAVE1
AUATI
[]A\A]A^A_
AWAVAUATI
d$ dH
D$(1
D$ t
D$(dH3
8[]A\A]A^A_
D$ H
D$ t
AWAVAUATA
_AXH
Y^u1H
[]A\A]A^A_
D$ H
t$ VAV
AWAUL
L$8D
l$@L
t$ 1
D$8L
t$ u[H
t$ H
L$(H
D$8H
L$0H
AWAVAUATUSH
D$h1
D$@A
ATAVH
AWAUH
L$0D
D$hdH3
x[]A\A]A^A_
S8AWL
AZA[H
l$PE1
D$XfD
L$`H
T$8f
L$8f
t$HL
t$XL
|$`A
D$HL
D$8fA
D$Pf
D$HH
D$Xf
T$(M
L$HH
D$(H
L$XH
T$0M
L$PH
D$0H
L$`H
H;D$@
S8AWA
L$@L
D$8H
D$HfA
L$@L
D$8H
D$HL
l$PL
t$XL
|$`H
ffff.
AWAVI
AUATUSH
t$xH
D$XH
D$XH
D$X1
D$X1
D$XH
APAVM
l$3H
D$xH
t$xD
t$4H
l$3H
D$xH
t$xD
[]A\A]A^A_
I H+D$xH
D$p1
[A\I
l$TH
D$PH
D$LH
D$hH
t$hH
D$\L
L$`1
D$\H
AZA[
D$ H
D$XH
t$8H
D$`H
L$ 1
t$(H
D$`H
D$`H
D$`H
D$`H
AXAY
D$`H
t$`1
D$`H
D$X1
D$X1
D$XH
T$XL
D$XH
D$ H
t$8H
D$`H
AWAVL
AUATI
D$(1
T$XH
D$(dH3
8[]A\A]A^A_
ffff.
AWAVAUATA
D$8H
D$`H
D$ H
D$PH
D$HH
|$8L
L$@H
D$8H
D$8H
L$`H
T$hH
D$8H
D$HH9D$0
D$PH9D$0
D$8H
D$pH
T$xt
L$pH
@u|E1
D$PH-
H;D$0
|$XH
L$XH
L$(H
[]A\A]A^A_
AWAVAUATUS
D$(1
l$ H
D$ H
D$ L
L$(dH3
8[]A\A]A^A_
AUATI
[]A\A]
AWAVAUATUSH
[]A\A]A^A_
D$hL
D$XH
D$ H
D$`H
D$pH
|$pH
T$XI
L$hH
T$`1
D$hH
l$DL
D$pL
L$DH
t$HL
D$pL
L$HH
D$pL
L$DH
l$LL
D$pL
L$LH
l$PL
D$pL
L$PH
D$XI
D$pL
L$XH
l$`L
D$pL
L$`H
D$p1
L$ H
D$pH
D$XH
D$pH
D$XH
D$XH
D$8H
D$(1
D$`A
D$hL
t$pH
D$XH
D$PH
D$0H
D$`H
D$hH
t$pH
L$xt
D$xH
T$pH
T$pH
D$xL
d$0H
D$hH
l$(H
D$XH9D$`~]L
D$pH
T$xt
D$XH-
H;D$`~eH
D$pH
D$8H
D$01
D$`A
D$(H
D$hL
t$LH
D$XH
D$PH
L$(1
D$hH
t$pH
L$xt
D$LA
|$pH
D$LA
L$xH
D$hH
T$xH
D$hH
d$0H
D$PH9D$`
D$XH9D$`
D$pH
T$xt
|$pH
D$XH-
H;D$`
D$pH
D$(H
D$ 1
t$ 1
t$ 1
t$ 1
D$(H
D$ L
D$PA
D$XL
t$`H
D$PH
D$XH
D$XL
D$XH
T$HE1
D$XH
D$pH
D$ D
d$pA
D$XA
D$`H
D$(H
D$XH
D$pL
D$pI
D$pH
T$(H
D$0H
L$(H
D$`H9D$X}qL
D$(H
D$0H
D$hH9D$X~@L
D$hH-
H;D$X
fff.
AWAVAUATUS1
|$HH
t$8dH
T$x1
D$HL
t$SL
l$pL
|$hH
D$0H
D$\H
D$TH
D$(H
D$`H
D$0H
T$(H
t$ L
D$8H
l$`H
D$\H
D$hD
L$dH
D$XH
t$pH
L$hL
L$pH
D$8H
D$xdH3
[]A\A]A^A_
(invalid pointer in stroke msg)
%zu bytes total, %d allocations, %zu bytes average:
reading length of stroke message failed: %s
reading stroke message failed: %s
creating stroke output stream failed
received stroke: initiate '%s'
received stroke: terminate '%s'
received stroke: terminate-srcip %s-%s
received stroke: add connection '%s'
received stroke: delete connection '%s'
received stroke: delete ca '%s'
received stroke: loglevel %d for %s
received stroke: user-creds '%s'
%s.plugins.stroke.prevent_loglevel_changes
%s.plugins.stroke.max_concurrent
  %s=%s
  %ssubnet=%s
  %ssourceip=%s
  %sdns=%s
  %sauth=%s
  %sauth2=%s
  %sid=%s
  %sid2=%s
  %srsakey=%s
  %scert=%s
  %scert2=%s
  %sca=%s
  %sca2=%s
  %sgroups=%s
  %sgroups2=%s
  %supdown=%s
Total memory usage: %zu
stroke message %b
received stroke: route '%s'
received stroke: unroute '%s'
received stroke: rekey '%s'
conn %s
left
right
  eap_identity=%s
  aaa_identity=%s
  xauth_identity=%s
  ike=%s
  esp=%s
  ah=%s
  dpddelay=%d
  dpdtimeout=%d
  dpdaction=%d
  closeaction=%d
  mediation=%s
  mediated_by=%s
  me_peerid=%s
  keyexchange=ikev%u
received stroke: add ca '%s'
ca %s
  cacert=%s
  crluri=%s
  crluri2=%s
  ocspuri=%s
  ocspuri2=%s
  certuribase=%s
prevented log level change
command not allowed!
received unknown stroke
unknown type '%s'!
unix:///var/run/charon.ctl
%s.plugins.stroke.socket
creating stroke socket failed
deleted connection '%s'
connection '%s' not found
%any
%opaque
%dynamic
invalid subnet: %s, skipped
%s,0.0.0.0/0,::/0
  invalid username '%s'
invalid username '%s'
  configured EAP-Identity %Y
Password:
  added %N secret for %Y %Y
  added %N secret for %Y
  secret: %#B
  no config named '%s'
no config named '%s'
pubkey
%same
%any6
%cert
ecdsa
xauth
%identity
sha1
sha224
sha256
sha384
sha512
%modeconfig
%modecfg
%config
%cfg
%config4
%config6
IP pool %s invalid, ignored
added configuration '%s'
invalid proto/port: %s, skipped subnet
skipped invalid proposal string: %s
left is other host, swapping ends
left nor right host is our side, assuming left=local
  configured XAuth username %Y
  config '%s' unsuitable for user credentials
config '%s' unsuitable for user credentials
  id '%Y' not confirmed by certificate, defaulting to '%Y'
CA certificate "%s" not found, discarding CA constraint
ignoring invalid auth token: '%s'
authentication method %s unknown, fallback to any
'%s' has both left- and rightsourceip, but IKE can negotiate one virtual IP only, ignoring local virtual IP
ignored invalid subnet token: %s
added child to existing configuration '%s'
CHILD_SA {
IKE_SA [
%s%d%s closed successfully
closing %s%d%s failed
'%s' routed
routing '%s' failed
no child config named '%s'
no child config named '%s'
CHILD
no %s_SA named '%s' found
invalid start address: %s
invalid end address: %s
configuration '%s' unrouted
configuration '%s' not found
%s.plugins.stroke.timeout
%s%d%s not closed after %dms, detaching
'%s' shunt %N policy installed
'%s' shunt %N policy installation failed
error parsing specifier string
connection '%s' established successfully
connection '%s' not established after %dms, detaching
establishing connection '%s' failed
shunt policy '%s' uninstalled
enabled
/etc/strongswan/ipsec.d/crls
crl caching to %s %s
Private key
PKCS#12 file
Passphrase invalid!
%s '%s' is encrypted.
Passphrase:
%dns
dns:
ssh:
/etc/strongswan/ipsec.d/certs
%s/%s
%%smartcard%u@%255s
%%smartcard%u:%127s
%%smartcard:%127s
  reading directory failed
  loaded crl from '%s'
%s/%s.crl
PIN invalid, aborting.
Login to '%s' required
PIN:
%smartcard
missing second delimiter
missing secret
line %d: %s
line %d: empty filename
%s/%.*s
%prompt
loading secrets from '%s'
include 
line %d: missing token
ECDSA
line %d: expected PIN
line %d: malformed PIN: %s
NTLM
XAUTH
line %d: malformed secret: %s
  loaded %N secret for %s
rereading secrets
/etc/strongswan/ipsec.secrets
rereading crls from '%s'
loading crls from '%s'
Passphrase invalid, giving up.
  loaded %N public key for "%Y"
  loading public key for "%Y" failed
  loaded %N public key for "%Y" from '%s'
  loading public key for "%Y" from '%s' failed
  ca certificate "%Y" lacks ca basic constraint, discarded
  loaded ca certificate "%Y" from '%s'
  loading ca certificate from '%s' failed
  loaded certificate "%Y" from '%s'
  loading certificate from '%s' failed
  loading crl from '%s' failed
  loaded attribute certificate from '%s'
  loading attribute certificate from '%s' failed
  written crl file '%s' (%d bytes)
  writing crl file '%s' failed: %s
/etc/strongswan/ipsec.d/cacerts
  ca certificate "%Y" misses ca basic constraint, discarded
/etc/strongswan/ipsec.d/private
line %d: malformed passphrase: %s
opening secrets file '%s' failed: %s
maximum level of %d includes reached, ignored
include pattern too long, ignored
expanding file expression '%s' failed
line %d: missing ' : ' separator
  loaded %N private key from '%s'
  loading private key from '%s' failed
  loading credentials from '%s' failed
line %d: expected %%smartcard specifier
line %d: the given %%smartcard specifier is not supported or invalid
  loaded private key from %.*s
line %d: token must be either RSA, ECDSA, P12, PIN, PSK, EAP, XAUTH or NTLM
rereading ca certificates from '%s'
/etc/strongswan/ipsec.d/ocspcerts
rereading ocsp signer certificates from '%s'
/etc/strongswan/ipsec.d/aacerts
rereading aa certificates from '%s'
/etc/strongswan/ipsec.d/acerts
rereading attribute certificates from '%s'
%s.plugins.stroke.ignore_missing_ca_basic_constraint
loading ca certificates from '%s'
loading aa certificates from '%s'
loading ocsp signer certificates from '%s'
loading attribute certificates from '%s'
unable to use hash-and-url: sha1 not supported
List of CA Information Sections:
  authname:    "%Y"
  authkey:      %#B
  keyid:        %#B
  crluris:     
  ocspuris:    
  certuribase: '%s'
no ca named '%s' found
missing cacert parameter
added ca '%s'
reusing virtual IP address pool %s
adding virtual IP address pool %s
ignoring invalid DNS address '%s'
%-18N %12llu
List of IKE counters:
ikeInitRekey
ikeRspRekey
ikeChildSaRekey
ikeInInvalid
ikeInInvalidSpi
ikeInInitReq
ikeInInitRsp
ikeOutInitReq
ikeOutInitRsp
ikeInAuthReq
ikeInAuthRsp
ikeOutAuthReq
ikeOutAuthRsp
ikeInCrChildReq
ikeInCrChildRsp
ikeOutCrChildReq
ikeOutCrChildRsp
ikeInInfoReq
ikeInInfoRsp
ikeOutInfoReq
ikeOutInfoRsp
No IKE counters found for '%s'
List of IKE counters for '%s':
%12s[%d]: Tasks %s: 
local: 
remote:
 or SKIPPED
%12s:   %s
 [%Y]
 uses 
EAP authentication
EAP_%lu-%lu authentication
%N authentication
 with EAP identity '%Y'
%N authentication: %s
 with XAuth identity '%Y'
%N authentication
%12s:    ca:    "%Y"
%12s:    im-ca: "%Y"
%12s:    cert:  "%Y"
%12s:    group: %Y
XAuth
%12s[%d]: %N
 %V ago
, %H[%Y]...%H[%Y]
, rekeying in %V
 reauthentication in %V
, rekeying disabled
%12s[%d]: IKE proposal: %s
queued
active
passive
_PROXY
%12s{%d}:  %N, %N%s
, %N%s SPIs: %.8x_i %.8x_o
, IPCOMP CPIs: %.4x_i %.4x_o
%12s{%d}:  
/ESN
, %lu bytes_i
 (%lu pkt%s, %lus ago)
, %lu bytes_o
, rekeying 
, expires in %V
%12s{%d}:   %#R=== %#R
 in UDP
, %s %s, %s
  uptime: %V, since %T
%s%d
 working, job queue: 
, scheduled: %d
  loaded plugins: %s
  %s: %u/%u/%u
Listening IP addresses:
  %H
%12s:  %s...%s  %N
 Aggressive
, dpddelay=%us
%12s:   child:  %#R=== %#R%N
, dpdaction=%N
Shunted Connections:
%12s:  %#R=== %#R%N
Routed Connections:
  no match
  none
, has private key
  pubkey:    %N %d bits%s
  keyid:     %#B
  subjkey:   %#B
List of %s:
  altNames:  
  subject:  "%Y"
  issuer:   "%Y"
  serial:    %#B
  validity:  not before %T, 
not valid yet (valid in %V)
             not after  %T, 
expired (%V ago)
 (expires in %V)
  authkey:   %#B
  pathlen:   %u
  addresses: 
 %N[%s]
 [%s]
             
 (expires never)
 (not loaded)
List of Raw Public Keys:
  subject:   %#Y
  userid:   '%Y'
  digest:    %#B
  created:   %T
  until:     %T%s
X.509 End Entity Certificates
X.509 CA Certificates
X.509 AA Certificates
  holder:   "%Y"
  hissuer:  "%Y"
  hserial:   %#B
  groups:    
OID:%#B
List of X.509 CRLs:
  delta for: %#B
  updates:   this %T
             next %T, 
List of OCSP responses:
  signer:   "%Y"
  validity:  produced at %T
             usable till %T, 
  encryption:
  integrity: 
  aead:      
  hasher:    
  prf:       
  dh-group:  
  random-gen:
  nonce-gen: 
List of loaded Plugins:
    %s%s
        %s
        %s (soft)
online
offline
  %15H   %s   '%Y'
  no matching leases found
pool '%s' not found
no pools found
strong
weak
%12s:    ocsp:  status must be GOOD%s
%12s:    crl:   status must be GOOD%s
%12s[%d]: Remote %s identity: %Y
%12s[%d]: %N SPIs: %.16lx_i%s %.16lx_r%s
Status of IKE charon daemon (%sSwan 5.2.0
  malloc: sbrk %d, mmap %d, used %d, free %d
  worker threads: %d of %d idle, 
Virtual IP pools (size/online/offline):
Security Associations (%u up, %u connecting):
List of PGP End Entity Certificates:
X.509 OCSP Signer Certificates
List of X.509 Attribute Certificates:
  revoked:   %d certificate%s
List of registered IKE algorithms:
Leases in pool '%s', usage: %u/%u, %u online
charon.i_dont_care_about_security_and_use_aggressive_mode_psk
;*3$"
libstrongswan-stroke.so.debug
7zXZ
HyQ	
eYw	
]dd+7
]MI}
IUb(
b9HVQ
B]Y,
pj ]
D'|I
"ep1
?-8d>
xy~x
b<(a
BLpA
s=X~K
;tohDSr
^h=DA
R+,<
$kZp<
^5lz
}YG5
gKx6
+0}2
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
