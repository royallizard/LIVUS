__gmon_start__
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
confgen_generate
cfg_lexer_lookup_context_name_by_type
g_snprintf
cfg_args_validate
popen
g_malloc
g_realloc
fread
pclose
cfg_lexer_include_buffer
g_free
evt_tag_int
evt_tag_str
msg_event_create
msg_event_suppress_recursions_and_send
__errno_location
evt_tag_errno
confgen_module_init
cfg_args_get
g_strdup
cfg_lexer_lookup_context_type_by_name
cfg_lexer_register_block_generator
module_info
libsyslog-ng-3.8.so.0
libpthread.so.0
libc.so.6
__stack_chk_fail
_edata
__bss_start
_end
libconfgen.so
GLIBC_2.0
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.1
UWVS
D$ e
[^_]
UWVS
[^_]
d$,1
[^_]
%s confgen %s
block
context
error
exec
name
confgen
3.8.1
confgen: confgen invocations do not process arguments, but your argument list is not empty
confgen: Error executing generator program
confgen: Generator program returned with non-zero exit code
confgen: name argument expected
confgen: context argument expected
confgen: exec argument expected
The confgen module provides support for dynamically generated configuration file snippets for syslog-ng, used for the SCL system() driver for example
;*2$"@
libconfgen.so.debug
7zXZ
N&4Hb
qRZE7h
j:S%Z
+C=e
5n#J
g#/12
kuA'J
X_Y|w
tfum
!5&&P4[
-D((
NQ9QbJU{
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.init
.plt
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.bss
.gnu_debuglink
.gnu_debugdata
