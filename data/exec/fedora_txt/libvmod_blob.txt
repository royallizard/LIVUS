y |g
||BE
0PGB
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
vmod_enum_BASE64
vmod_enum_BASE64URL
vmod_enum_BASE64URLNOPAD
vmod_enum_HEX
vmod_enum_IDENTITY
vmod_enum_URL
VAS_Fail
wb_create
wb_finish
wb_reset
VRT_fail
__errno_location
vmod_blob__init
calloc
pthread_mutex_init
vrt_magic_string_end
strlen
malloc
free
vmod_blob_get
vmod_blob_encode
vmod_enum_LOWER
vmod_enum_UPPER
vmod_enum_DEFAULT
pthread_mutex_lock
pthread_mutex_unlock
vmod_blob__fini
pthread_mutex_destroy
__explicit_bzero_chk
vmod_decode
WS_Snapshot
WS_Alloc
WS_ReleaseP
WS_Reset
vmod_encode
vmod_transcode
VRT_String
vmod_same
vmod_equal
memcmp
vmod_length
vmod_sub
memcpy
base64_decode_l
base64_decode
base64_encode_l
base64_encode
base64nopad_encode_l
hex_decode_l
hex_decode
hex_encode_l
hex_encode
id_decode_l
id_decode
id_encode_l
id_encode
url_decode_l
url_decode
url_encode_l
url_encode
hex_alphabet
__ctype_b_loc
nibble
WS_Reserve
WS_Release
Vmod_blob_Data
libpthread.so.0
libc.so.6
__stack_chk_fail
_edata
__bss_start
libvmod_blob.so
GLIBC_2.3
GLIBC_2.25
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.0
T$@e
,[^_]
UWVS
9T$@
D$@1
t$Lj
T$$R
[^_]
[^_]
t$<P
[^_]
t$<P
[^_]
UWVS
,[^_]
,[^_]
[^_]
t$HWP
,[^_]
t$$QU
UWVS
[^_]
UWVS
D$,1
D$(XZj
D$$P
+D$(
|$,e3=
<[^_]
UWVS
;)tu
;)ts
[^_]
WUPV
[^_]
[^_]
UWVS
[^_]
,[^_]
,[^_]
UWVS
L$D9
;D$8we
[^_]
[^_]
[^_]
UWVS
9D$<
i|$0D
i|$0D
;D$8
+D$89D$<
[^_]
[^_]
;D$<
UWVS
il$@D
iD$@D
D$H9
+D$D
|$H9
,[^_]
[^_]
+D$D
UWVS
;D$,wc
D$(1
+D$(
[^_]
[^_]
UWVS
0;t$
;D$L
;T$H
DD$L
D$H9
w|+T$D
,[^_]
UWVS
D$<1
9t$DvY
9t$Dw
+D$8
[^_]
[^_]
[^_]
UWVS
+D$D
,[^_]
%t.9\$
[^_]
[^_]
illegal encoding enum
vmod_blob.c
illegal case enum
f > 0
wb.h
wb->w < wb_end(wb)
(ctx->ws) != NULL
invalid errno
(ctx) != NULL
(ctx)->magic == 0x6bb8f0db
(blobp) != 0
(*blobp) == 0
(vcl_name) != 0
len > 0
errno == EINVAL
(b) != 0
(b) != NULL
(b)->magic == 0xfade4fa9
off >= 0
b->len >= 0
(enc) > _INVALID && (enc) < __MAX_ENCODING
(ctx->ws)->magic == 0x35fac554
vmod blob error: cannot encode, out of space
vmod blob error: cannot decode, illegal encoding beginning with "%s"
vmod blob error: cannot decode, out of space
(dec) > _INVALID && (dec) < __MAX_ENCODING
(pthread_mutex_init(&b->lock, ((void *)0))) == 0
vmod blob error: cannot create blob %s, out of space
vmod blob error: cannot create blob %s, illegal encoding beginning with "%s"
vmod blob error: case %s is illegal with encoding %s
(pthread_mutex_lock(&b->lock)) == 0
(pthread_mutex_unlock(&b->lock)) == 0
(pthread_mutex_destroy(&b->lock)) == 0
vmod blob error: blob is empty in blob.sub()
vmod blob error: size %jd from offset %jd requires more bytes than blob length %d in blob.sub()
vmod blob error: Allocating BLOB result in blob.sub(), out of space
vmod blob error: Allocating %jd bytes in blob.sub(), out of space
vmod_sub
vmod_transcode
encode
vmod_encode
wb_advance
err_decode
wb_space
vmod_decode
vmod_blob__fini
parse_case
vmod_blob_encode
vmod_blob_get
decode_l_va
parse_encoding
vmod_blob__init
(buf) != 0
id.c
id_decode
id_encode
base64.c
p >= buf && p - buf <= buflen
base64_decode
base64_encode
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
?456789:;<=
 !"#$%&'()*+,-./0123
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_
456789:;<=
 !"#$%&'()*+,-./0123
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_
456789:;<=
 !"#$%&'()*+,-./0123
hex.c
enc == HEX
dec == HEX
dest <= buf + buflen
hex_decode
hex_encode
0123456789abcdef0123456789ABCDEFurl.c
enc == URL
dec == URL
dest <= end
url_decode
url_encode
wb->ws->r - wb->w > 0
wb.c
l >= 0
wb_len
wb_finish
JZULAQQMAPMGAVEGFNHADNVFOBLIDQOL
Varnish 6.0.0 a068361dff0d25a0d85cf82a6e5fdaf315e06a7d
blob
UPPER
LOWER
IDENTITY
DEFAULT
BASE64URLNOPAD
BASE64URL
BASE64
[["$VMOD","1.0"],["$FUNC","decode",[["BLOB"],"Vmod_blob_Func.decode","",["ENUM","decoding","IDENTITY",["IDENTITY","BASE64","BASE64URL","BASE64URLNOPAD","HEX","URL"]],["INT","length","0"],["STRING_LIST","encoded"]]],["$FUNC","encode",[["STRING"],"Vmod_blob_Func.encode","",["ENUM","encoding","IDENTITY",["IDENTITY","BASE64","BASE64URL","BASE64URLNOPAD","HEX","URL"]],["ENUM","case","DEFAULT",["LOWER","UPPER","DEFAULT"]],["BLOB","blob"]]],["$FUNC","transcode",[["STRING"],"Vmod_blob_Func.transcode","",["ENUM","decoding","IDENTITY",["IDENTITY","BASE64","BASE64URL","BASE64URLNOPAD","HEX","URL"]],["ENUM","encoding","IDENTITY",["IDENTITY","BASE64","BASE64URL","BASE64URLNOPAD","HEX","URL"]],["ENUM","case","DEFAULT",["LOWER","UPPER","DEFAULT"]],["INT","length","0"],["STRING_LIST","encoded"]]],["$FUNC","same",[["BOOL"],"Vmod_blob_Func.same","",["BLOB"],["BLOB"]]],["$FUNC","equal",[["BOOL"],"Vmod_blob_Func.equal","",["BLOB"],["BLOB"]]],["$FUNC","length",[["INT"],"Vmod_blob_Func.length","",["BLOB"]]],["$FUNC","sub",[["BLOB"],"Vmod_blob_Func.sub","",["BLOB"],["BYTES","length"],["BYTES","offset","0"]]],["$OBJ","blob","struct vmod_blob_blob",["$INIT",[["VOID"],"Vmod_blob_Func.blob__init","",["ENUM","decoding","IDENTITY",["IDENTITY","BASE64","BASE64URL","BASE64URLNOPAD","HEX","URL"]],["STRING_LIST","encoded"]]],["$FINI",[["VOID"],"Vmod_blob_Func.blob__fini",""]],["$METHOD","get",[["BLOB"],"Vmod_blob_Func.blob_get",""]],["$METHOD","encode",[["STRING"],"Vmod_blob_Func.blob_encode","",["ENUM","encoding","IDENTITY",["IDENTITY","BASE64","BASE64URL","BASE64URLNOPAD","HEX","URL"]],["ENUM","case","DEFAULT",["LOWER","UPPER","DEFAULT"]]]]]]
struct vmod_blob_blob;
typedef VCL_VOID td_blob_blob__init(VRT_CTX,
    struct vmod_blob_blob **, const char *, VCL_ENUM, const char *,
    ...);
typedef VCL_VOID td_blob_blob__fini(struct vmod_blob_blob **);
typedef VCL_BLOB td_blob_blob_get(VRT_CTX,
    struct vmod_blob_blob *);
typedef VCL_STRING td_blob_blob_encode(VRT_CTX,
    struct vmod_blob_blob *, VCL_ENUM, VCL_ENUM);
/* Functions */
typedef VCL_BLOB td_blob_decode(VRT_CTX, VCL_ENUM, VCL_INT,
    const char *, ...);
typedef VCL_STRING td_blob_encode(VRT_CTX, VCL_ENUM, VCL_ENUM,
    VCL_BLOB);
typedef VCL_STRING td_blob_transcode(VRT_CTX, VCL_ENUM,
    VCL_ENUM, VCL_ENUM, VCL_INT, const char *, ...);
typedef VCL_BOOL td_blob_same(VRT_CTX, VCL_BLOB, VCL_BLOB);
typedef VCL_BOOL td_blob_equal(VRT_CTX, VCL_BLOB, VCL_BLOB);
typedef VCL_INT td_blob_length(VRT_CTX, VCL_BLOB);
typedef VCL_BLOB td_blob_sub(VRT_CTX, VCL_BLOB, VCL_BYTES,
    VCL_BYTES);
struct Vmod_blob_Func {
	td_blob_decode			*decode;
	td_blob_encode			*encode;
	td_blob_transcode		*transcode;
	td_blob_same			*same;
	td_blob_equal			*equal;
	td_blob_length			*length;
	td_blob_sub			*sub;
	td_blob_blob__init		*blob__init;
	td_blob_blob__fini		*blob__fini;
	td_blob_blob_get		*blob_get;
	td_blob_blob_encode		*blob_encode;
	VCL_ENUM			*enum_BASE64;
	VCL_ENUM			*enum_BASE64URL;
	VCL_ENUM			*enum_BASE64URLNOPAD;
	VCL_ENUM			*enum_DEFAULT;
	VCL_ENUM			*enum_HEX;
	VCL_ENUM			*enum_IDENTITY;
	VCL_ENUM			*enum_LOWER;
	VCL_ENUM			*enum_UPPER;
	VCL_ENUM			*enum_URL;
static struct Vmod_blob_Func Vmod_blob_Func;
;*2$"<
GCC: (GNU) 8.1.1 20180712 (Red Hat 8.1.1-5)
GCC: (GNU) 8.1.1 20180626 (Red Hat 8.1.1-4)
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180712
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA+stack_realign
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+stack_realign
&txt
(boc
+HEX
+URL
/ctx
/off
2sub
/ctx
/ctx
/ctx
/ctx
:2dec
2enc
2buf
0ctx
2enc
0ctx
0enc
T2len
/ctx
:2dec
2buf
2len
Tctx
2enc
2len
Tctx
Tctx
Xdec
Xlen
Zctx
Zenc
Zenc
Zctx
Zenc
Zdec
]len
-buf
O#'s
0123456789abcdef
0			
/usr/include/bits
/usr/include
/usr/lib/gcc/i686-redhat-linux/8/include
/usr/include/sys
../../include
../../bin/varnishd/cache
../../include/tbl
../../include/vapi
vmod_blob.c
tbl_encodings.h
wb.h
tbl_case.h
string_fortified.h
errno.h
stddef.h
types.h
math.h
time.h
thread-shared-types.h
pthreadtypes.h
stdarg.h
types.h
stdint-intn.h
stdint-uintn.h
stdint.h
vrt.h
cache.h
req_flags.h
bo_flags.h
vas.h
vsl_int.h
acct_fields_req.h
acct_fields_bereq.h
http_headers.h
locks.h
vcc_if.h
vmod_blob.h
<built-in>
string.h
stdlib.h
pthread.h
	<<.
<<..
/usr/include/bits
/usr/include
/usr/lib/gcc/i686-redhat-linux/8/include
/usr/include/sys
../../include
id.c
string_fortified.h
errno.h
stddef.h
types.h
types.h
stdarg.h
vmod_blob.h
vrt.h
vas.h
string.h
<built-in>
_.   
/usr/include
/usr/lib/gcc/i686-redhat-linux/8/include
/usr/include/bits
/usr/include/sys
../../include
base64.c
errno.h
stddef.h
types.h
types.h
stdint-intn.h
stdarg.h
vmod_blob.h
base64.h
stdint-uintn.h
vrt.h
vas.h
/usr/include/bits
/usr/include
/usr/lib/gcc/i686-redhat-linux/8/include
/usr/include/sys
../../include
hex.c
types.h
errno.h
stddef.h
types.h
stdint-intn.h
stdarg.h
vmod_blob.h
stdint-uintn.h
hex.h
vrt.h
vas.h
ctype.h
/usr/include
/usr/lib/gcc/i686-redhat-linux/8/include
/usr/include/bits
/usr/include/sys
../../include
url.c
errno.h
stddef.h
types.h
types.h
stdint-intn.h
stdarg.h
vmod_blob.h
stdint-uintn.h
hex.h
vrt.h
vas.h
	=IK;
KXJ<
/usr/include/bits
/usr/lib/gcc/i686-redhat-linux/8/include
/usr/include
/usr/include/sys
../../bin/varnishd/cache
../../include
../../include/tbl
wb.c
string_fortified.h
wb.h
stddef.h
types.h
math.h
time.h
pthreadtypes.h
types.h
cache.h
vrt.h
vas.h
http_headers.h
locks.h
/usr/lib/gcc/i686-redhat-linux/8/include
/usr/include/bits
/usr/include/bits/types
/usr/include
../../include
stddef.h
types.h
struct_FILE.h
FILE.h
stdio.h
sys_errlist.h
stdint-intn.h
vrt.h
vcc_if.h
vcc_if.c
pthread_key_t
SA_LOCAL_ADDR
vmod_transcode
R_STP_VCLFAIL
H_Accept_Language
SLT_ExpBan
vmod_blob__fini
vmod_enum_BASE64
SC_RANGE_SHORT
__kind
vmod_enum_LOWER
SLT_ReqProtocol
wb_finish
pthread_cond_t
restarts
SC_RX_JUNK
__ssize_t
SLT_Begin
H_Warning
t_open
vmod_enum_URL
grace
wb_space
lru_list
__func__
SLT_VCL_return
t_first
encode_f
bereq0
refcnt
__next
__data
vmod_priv
is_bgfetch
lck_hcb
WS_Reset
pool_task
stevedore
lck_objhdr
acct_bereq
H__Reason
SLT_ReqHeader
stats
vrt_privs
SLT_ReqURL
timer_idx
vmod_enum_DEFAULT
SLT_VCL_acl
R_STP_SYNTH
SLT_CLI
vsl_log
H__Status
__owner
specific
SC_OVERLOAD
H_Content_Location
SLT_ReqStart
SLT_Debug
handling
H_WWW_Authenticate
wb_buf
vmod_enum_BASE64URL
H_Accept_Charset
is_gzip
__uint8_t
H_Content_MD5
timer_when
SLT_BackendStart
http0
SLT_ObjMethod
R_STP_LOOKUP
t_idle
lck_ban
http_req
SLT_BereqHeader
__elision_data
SLT_Hash
director_state_e
SLT_BerespUnset
SLT_VSL
WS_Alloc
__espins
H_Accept_Encoding
lck_exp
SC_REQ_HTTP10
SLT_Storage
acct_req
H_Content_Type
explicit_bzero
exp_list
fetch_task
SLT_ObjStatus
VCL_STRING
SLT_FetchError
want100cont
decs
__pthread_internal_slist
vmod_blob__init
len_f
__nusers
__builtin_memcmp
SLT_H2RxHdr
H_Proxy_Authenticate
req_body_status
lck_vcl
__timezone
digest
__pthread_mutex_s
ban_list
decode_l_va
vmod_blob_blob
sess_attr
unsigned char
nhashpriv
lck_pipestat
worker
SLT_BereqAcct
SLT_SessOpen
case_e
do_esi
H_ETag
case_s
VCL_INT
H_Upgrade
__builtin_va_list
SC_RX_TIMEOUT
__tzname
__gnuc_va_list
hsh_list
__wseq32
task_func_t
SLT_HttpGarbage
SLT_BerespURL
err_code
fetch_objcore
__high
H_Transfer_Encoding
vmod_same
H_Cookie
__g1_start32
__uint16_t
H_Host
vdp_ctx
__errno_location
__builtin_memcpy
WS_Snapshot
d_ttl
H_X_Forwarded_For
__low
stobj
SLT_BerespHeader
BOS_STREAM
VRT_fail
R_STP_NONE
SC_RX_BODY
sattr
SLT_VCL_call
director_req
http_beresp
DIR_S_BODY
acct
SC_RX_BAD
hash_objhead
R_STP_RESTART
wb_create
vmod_priv_free_f
SA_XPORT_PRIV
SLT_Backend
vmod_decode
vary
lck_tcp_pool
director_state
bereq_bodybytes
lck_wstat
H_Server
H_Accept_Ranges
witness_key
SLT__Reserved
SLT_WorkThread
lck_cli
H__Proto
vmod_blob.c
SLT_ObjLost
H_TE
BOS_REQ_DONE
VCL_BLOB
__lock
SLT_ReqMethod
H_If_Match
SLT_ObjHeader
H_User_Agent
lck_lru
program_invocation_name
vmod_length
ws_bo
__explicit_bzero_chk
H_Trailer
SC_RESP_CLOSE
SLT_VfpAcct
http_resp
vrt_magic_string_end
BOS_FINISHED
last_lru
retries
vary_b
SLT_RespMethod
vary_e
H_Referer
__g1_start
vary_l
__uint64_t
SC_RX_OVERFLOW
SLT_BackendClose
SLT_BereqURL
SLT_ReqStatus
wb_s
SC_TX_ERROR
SLT_Link
SLT_ReqAcct
pthread_t
H_Content_Language
ws_req
vtqe_prev
listen_sock
cli_thread
lck_waiter
vtqe_next
WS_ReleaseP
SLT_RespURL
uintptr_t
__size
err_decode
REQ_BODY_WITHOUT_LEN
H_If_Modified_Since
SLT_BerespLost
beresp_hdrbytes
hash_ignore_busy
H_Age
SLT_Backend_health
director_hint
nobjcore
SLT_RespHeader
H_Date
SLT_BogoHeader
VAS_ASSERT
SLT_ObjReason
vmod_enum_BASE64URLNOPAD
BOS_PREP_STREAM
__g1_orig_size
kase
H_Authorization
lastused
VCL_ENUM
__uint32_t
seen_methods
lck_vcapace
long long int
H_Retry_After
__pthread_slist_t
SLT_H2TxBody
malloc
stevedore_priv
SLT_BerespProtocol
H_Vary
SLT_VCL_Error
hits
http_bereq
refcount
esi_level
boc_state_e
__stack_chk_fail_local
H_Location
SLT_BackendOpen
storage
vmod_blob_encode
cond
VAS_Fail
REQ_BODY_CACHED
SLT_ProxyGarbage
BOS_INVALID
cur_method
connect_timeout
float
SLT__Batch
VAS_Fail_Func
SA_LAST
__wrefs
__eelision
encs
__intmax_t
vmod_encode
SLT_RespStatus
REQ_BODY_TAKEN
syntax
vmod_enum_IDENTITY
vmod_blob_get
pthread_mutex_t
nobjhead
H_Content_Encoding
is_gunzip
vmod_blob_fptr
pthread_mutex_unlock
lck_sess
blobp
DIR_S_HDRS
R_STP_TRANSMIT
vrt_ctx
lck_vxid
SLT_BereqMethod
SC_REM_CLOSE
SLT__Bogus
do_gunzip
first_byte_timeout
do_pass
VSC_lck
logtag
vtqh_last
SLT_BereqUnset
lck_busyobj
SLT_BereqReason
SLT_HitPass
pthread_mutex_init
SLT_ObjUnset
SC_PIPE_OVERFLOW
__count
strangelove
director
is_hit
H_Max_Forwards
vrt_priv
VRT_String
SLT_BereqStatus
sess_close
lck_mempool
calloc
R_STP_DELIVER
decode_f
oa_present
long double
R_STP_FETCH
http_req_top
SLT_Error
SLT_Witness
bereq_hdrbytes
__len
SC_TX_PIPE
t_origin
vclver
http_conn
R_STP_PASS
parse_case
vcl_name
GNU C17 8.1.1 20180712 (Red Hat 8.1.1-5) -m32 -march=i686 -mtune=generic -msse2 -mfpmath=sse -mstackrealign -g -O2 -fexceptions -fstack-protector-strong -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection=full -ffloat-store -fexcess-precision=standard -fPIC -fplugin=annobin
exp_flags
vxid_pool
H_Set_Cookie
VAS_INCOMPLETE
vrt_magic_string_unset
long long unsigned int
parse_encoding
H_If_Unmodified_Since
lck_backend
H_Content_Length
__list
signgam
beresp_bodybytes
__g_size
between_bytes_timeout
H_Last_Modified
program_invocation_short_name
H_Connection
SLT_HitMiss
SLT_VCL_trace
VAS_WRONG
SLT_ReqReason
check_enc_case
req_step
SA_REMOTE_ADDR
wb_end
body_oc
vmod_sub
vfp_ctx
SLT_BereqLost
__MAX_ENCODING
w_list
H_HTTP2_Settings
__g_refs
H_Range
SLT_SessClose
H_From
SLT_ObjProtocol
storeobj
null_blob
R_STP_PIPE
SLT_BerespMethod
vmod_equal
SLT_BackendReuse
do_gzip
was_304
R_STP_MISS
__align
SLT_VCL_Log
REQ_BODY_WITH_LEN
SLT_PipeAcct
doclose
SLT_TTL
SLT_Gzip
waitinglist
SLT_BerespReason
SC_REQ_CLOSE
SLT_ExpKill
transport_priv
SLT_BerespStatus
H_Pragma
H_Allow
SLT_RespProtocol
__src
__wseq
conds
VSC_main
SLT_RespLost
SA_CLIENT_ADDR
SC_VCL_FAILURE
encodes_hex
short int
SA_SERVER_ADDR
H_Proxy_Authorization
func
transport
len_so_far
R_STP_TRANSPORT
pthread_mutex_lock
wb_advance
VAS_MISSING
keep
http
wb_reset
SLT_ObjURL
DIR_S_NULL
REQ_BODY_FAIL
__pthread_cond_s
__dest
H_Expires
find_nonempty_va
H_If_Range
SLT_Hit
err_reason
vstqe_next
__g_signals
H_If_None_Match
SA_TRANSPORT
SLT_Proxy
lck_vbe
priv2
req_body_state_e
SLT_RespReason
__daylight
strlen
REQ_BODY_NONE
__int64_t
director_resp
vmod_enum_UPPER
snap
res_mode
SLT_LostHeader
SLT_ESI_xmlerror
SLT_H2TxHdr
SLT_Timestamp
SA_CLIENT_IP
H_Keep_Alive
getdate_err
vmod_enum_HEX
vtqh_first
SA_CLIENT_PORT
R_STP_PURGE
hash_always_miss
uncacheable
_Float128
SLT_BereqProtocol
SC_NULL
/builddir/build/BUILD/varnish-6.0.0/lib/libvmod_blob
SA_PROTO_PRIV
pthread_mutex_destroy
SLT_ReqLost
free
resp_len
SLT_RespUnset
short unsigned int
magic
SLT_Fetch_Body
SC_TX_EOF
H_Cache_Control
t_prev
BOS_FAILED
late100cont
H_Content_Range
SLT_H2RxBody
vas_e
vas_f
SLT_End
SC_REQ_HTTP20
client_identity
R_STP_RECV
SLT_ReqUnset
VCL_BYTES
VAS_VCL
disable_esi
empty
stale_oc
VSL_tag_e
H_Via
VCL_BOOL
H_Expect
lck_wq
SLT_Length
do_stream
REQ_BODY_INIT
H_Accept
protover
buflen
outlen
id_encode
id_decode_l
inlen
id_decode
id_encode_l
id.c
b64_alphabet
base64_encode
base64.c
term
base64_encode_l
base64_decode
inlength
__int8_t
inbuf
padding
base64nopad_encode_l
base64_decode_l
extranib
_IScntrl
hex_decode
_ISgraph
_ISpunct
_ISupper
_ISprint
_ISalnum
_ISdigit
hex_encode_l
_ISblank
_ISspace
hex_alphabet
_ISalpha
hex_decode_l
_ISlower
_ISxdigit
nibble
hex2byte
hex_encode
__ctype_b_loc
hex.c
url_decode
url_encode
url.c
FIRSTNIB
nib2
url_decode_l
isunreserved
url_encode_l
isoutofrange
PERCENT
NORMAL
__ch
wb.c
WS_Reserve
memset
wb_len
WS_Release
__off_t
Vmod_blob_Data
_IO_read_ptr
td_blob_equal
_chain
_shortbuf
_IO_buf_base
td_blob_decode
_fileno
_IO_read_end
vmod_data
_IO_buf_end
_cur_column
Vmod_Proto
_IO_codecvt
vrt_major
__quad_t
_sys_errlist
_old_offset
_IO_marker
stdin
Vmod_Func
_freeres_buf
_IO_write_ptr
Vmod_Json
td_blob_length
_IO_save_base
_flags2
stdout
file_id
_IO_write_end
_IO_lock_t
_IO_FILE
func_len
_markers
td_blob_blob__fini
vrt_minor
_IO_wide_data
_sys_nerr
_vtable_offset
td_blob_sub
proto
td_blob_blob__init
vcc_if.c
td_blob_same
__off64_t
_IO_read_base
_IO_save_end
json
__pad5
_unused2
stderr
td_blob_encode
td_blob_transcode
_IO_backup_base
td_blob_blob_get
_freeres_list
td_blob_blob_encode
_IO_write_base
Vmod_blob_Func
crtstuff.c
deregister_tm_clones
__do_global_dtors_aux
completed.7189
__do_global_dtors_aux_fini_array_entry
frame_dummy
__frame_dummy_init_array_entry
.annobin_vmod_blob.c
.annobin_vmod_blob.c_end
parse_encoding
__func__.8554
parse_case.part.3
__func__.8558
wb_space.isra.4.part.5
__func__.8520
wb_advance.part.6
__func__.8530
func
__func__.8664
err_decode
__func__.8578
decode_l_va.part.9
__func__.8565
__func__.8600
__func__.8605
empty
__func__.8613
__func__.8621
null_blob
__func__.8655
__func__.8673
__func__.8688
__func__.8715
.annobin_id.c
.annobin_id.c_end
__func__.3485
__func__.3497
.annobin_base64.c
.annobin_base64.c_end
b64_alphabet
__func__.3229
__func__.3247
.annobin_hex.c
.annobin_hex.c_end
__func__.3327
__func__.3345
.annobin_url.c
.annobin_url.c_end
unreserved
__func__.3221
__func__.3239
.annobin_wb.c
.annobin_wb.c_end
__func__.7843
__func__.7817
.annobin_vcc_if.c
.annobin_vcc_if.c_end
Vmod_Func
Vmod_Proto
Vmod_Json
stack_chk_fail_local.oS
.annobin_stack_chk_fail_local.c
.annobin_stack_chk_fail_local.c_end
__FRAME_END__
__x86.get_pc_thunk.bx
__x86.get_pc_thunk.dx
__dso_handle
__x86.get_pc_thunk.ax
_DYNAMIC
__stack_chk_fail_local
__GNU_EH_FRAME_HDR
__TMC_END__
_GLOBAL_OFFSET_TABLE_
pthread_mutex_unlock@@GLIBC_2.0
WS_Release
vmod_sub
wb_reset
WS_Reset
pthread_mutex_destroy@@GLIBC_2.0
_ITM_deregisterTMCloneTable
WS_ReleaseP
vmod_blob__init
free@@GLIBC_2.0
vmod_length
memcpy@@GLIBC_2.0
pthread_mutex_init@@GLIBC_2.0
_edata
vmod_enum_BASE64URLNOPAD
memcmp@@GLIBC_2.0
vmod_same
WS_Reserve
__stack_chk_fail@@GLIBC_2.4
VRT_fail
vmod_enum_IDENTITY
WS_Snapshot
hex_alphabet
vmod_enum_BASE64URL
pthread_mutex_lock@@GLIBC_2.0
url_decode
hex_decode_l
__cxa_finalize@@GLIBC_2.1.3
VAS_Fail
base64_decode_l
hex_decode
vmod_blob_encode
malloc@@GLIBC_2.0
id_decode
__gmon_start__
hex_encode_l
base64_encode_l
nibble
vmod_equal
strlen@@GLIBC_2.0
url_encode
vmod_blob__fini
id_decode_l
Vmod_blob_Data
__errno_location@@GLIBC_2.0
base64_encode
id_encode
vmod_enum_DEFAULT
vmod_enum_URL
__bss_start
hex_encode
vmod_decode
WS_Alloc
wb_finish
vmod_enum_BASE64
__explicit_bzero_chk@@GLIBC_2.25
vmod_blob_get
url_encode_l
wb_create
url_decode_l
vmod_transcode
vmod_enum_HEX
_ITM_registerTMCloneTable
vmod_enum_LOWER
id_encode_l
base64nopad_encode_l
VRT_String
base64_decode
vmod_enum_UPPER
vmod_encode
__ctype_b_loc@@GLIBC_2.3
calloc@@GLIBC_2.0
vrt_magic_string_end
.symtab
.strtab
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.note.gnu.property
.init_array
.fini_array
.data.rel.ro
.dynamic
.got
.data
.bss
.comment
.gnu.build.attributes
.debug_aranges
.debug_info
.debug_abbrev
.debug_line
.debug_str
.debug_loc
.debug_ranges
