__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
ast_module_unregister
__fprintf_chk
ast_openstream
ast_applystream
ast_playstream
ast_seekstream
strncasecmp
ast_cli
ast_module_register
pthread_key_create
ast_agi_send
pthread_once
pthread_getspecific
__ast_str_helper
__ast_verbose
ast_carefulwrite
calloc
pthread_setspecific
ast_log
ast_speech_grammar_deactivate
ast_speech_grammar_activate
ast_speech_grammar_unload
ast_speech_grammar_load
ast_speech_destroy
ast_speech_change
ast_speech_new
sscanf
ast_waitfordigit_full
option_verbose
ast_options
ast_verbose_get_by_file
ast_channel_setoption
ast_control_streamfile
ast_openvstream
option_debug
ast_tellstream
ast_waitstream_full
ast_stopstream
ast_debug_get_by_file
pbx_builtin_setvar_helper
ast_findlabel_extension
ast_explicit_goto
ast_moh_start
ast_moh_stop
ast_callerid_parse
ast_shrink_phone_number
ast_set_callerid
__stack_chk_fail
ast_channel_setwhentohangup_tv
ast_sendtext
ast_send_image
ast_check_hangup
strcasecmp
ast_get_time_t
ast_say_date_with_format
ast_say_time
ast_say_date
ast_say_phonetic_str_full
ast_say_number_full
ast_say_digit_str_full
ast_say_character_str_full
ast_set_read_format
ast_dsp_free
strchr
strlen
strtol
ast_dsp_new
ast_dsp_get_threshold_from_settings
ast_dsp_set_threshold
ast_waitstream
ast_writefile
ast_indicate
ast_truncstream
gettimeofday
ast_frame_free
ast_waitfor
ast_read
ast_writestream
ast_dsp_silence
ast_stream_rewind
ast_closestream
ast_streamfile
ast_recvtext
ast_recvchar
pbx_retrieve_variable
ast_func_read
ast_app_getdata_full
pbx_findapp
ast_compat
pbx_exec
ast_masq_park_call
ast_db_put
ast_db_get
realloc
ast_db_deltree
ast_db_del
ast_answer
ast_get_version
pthread_self
ast_unregister_file_version
ast_register_file_version
memcpy
ast_gethostbyname
socket
fcntl
connect
poll
__errno_location
strerror
ast_agi_unregister
ast_join
pthread_rwlock_wrlock
pthread_rwlock_unlock
ast_module_unref
ast_agi_unregister_multiple
ast_cli_unregister_multiple
ast_unregister_application
ast_manager_unregister
pthread_rwlock_rdlock
fopen
fclose
ast_sched_runq
ast_sched_wait
pthread_mutex_lock
pthread_mutex_unlock
ast_build_string
ast_speech_results_get
ast_speech_change_state
ast_speech_write
ast_speech_start
pthread_mutex_destroy
ast_channel_datastore_find
__strdup
ast_agi_register
ast_module_ref
ast_agi_register_multiple
ast_cli_register_multiple
ast_register_application2
ast_manager_register2
ast_random
__manager_event
ast_cdr_setapp
pbx_builtin_getvar_helper
fdopen
setlinebuf
ast_waitfor_nandfds
fgets
feof
ferror
kill
waitpid
usleep
ast_false
ast_get_channel_by_name_locked
ast_softhangup
pbx_substitute_variables_helper
ast_complete_channels
astman_get_header
astman_send_ack
astman_send_error
__snprintf_chk
ast_app_separate_args
ast_config_AST_AGI_DIR
__xstat
ast_safe_fork_cleanup
pipe
ast_safe_fork
ast_uri_encode
ast_datastore_alloc
pthread_mutexattr_init
pthread_mutexattr_settype
pthread_mutex_init
pthread_mutexattr_destroy
ast_channel_datastore_add
ast_config_AST_CONFIG_DIR
setenv
ast_config_AST_CONFIG_FILE
ast_config_AST_MODULE_DIR
ast_config_AST_SPOOL_DIR
ast_config_AST_MONITOR_DIR
ast_config_AST_VAR_DIR
ast_config_AST_DATA_DIR
ast_config_AST_LOG_DIR
ast_config_AST_KEY_DIR
ast_config_AST_RUN_DIR
ast_set_priority
dup2
ast_close_fds_above_n
execv
ast_child_verbose
stdout
fflush
_exit
ast_datastore_free
ast_getformatname
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
GLIBC_2.4
GLIBC_2.3.4
GLIBC_2.2.5
ATSubH
ffffff.
fffff.
ffff.
ffff.
L$HH
D$PL
L$XH
|$(L
D$0L
D$(L
D$(H
ffffff.
fff.
d$ H
ffffff.
d$ H
d$ H
\$@H
l$HL
d$PH
T$<H
L$ L
L$ L
D$(u
|$<E1
|$<f
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
ffff.
\$(H
l$0H
t$ H
fffff.
fffff.
fffff.
\$(H
l$0H
d$ L
l$(L
t$0H
\$ H
l$(L
d$0H
Hct$
\$ H
l$(L
d$0H
Hct$
\$0H
l$8L
d$@H
T$,H
d$ H
ffff.
\$hH
l$pL
d$xL
T$\H
t$<H
t$P1
T$HH
D$@H
L$XL
l$0M
L$(H
d$\E
L$HH
t$@H
d$\H
L$HH
t$@H
T$(H
L$ A
l$0L
D$P1
T$PH
l$0L
l$0L
l$0L
ffffff.
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
~aE1
d$ I
fffff.
fffff.
|$(t,H
\$8H
l$@L
d$HL
l$PL
t$XL
|$`H
t$(A
T$ H
T$ H
t$(A
t$(A
ffffff.
[]A\A]A^1
fff.
ffff.
AUATI
[A\A]A^A_
D$X1
T$XdH3
`[]A\
AUE1
ATUSH
[]A\D
A]A^
ffffff.
AWAVA
AUATI
l$PL
[]A\A]A^A_
AUATUSH
D$X1
T$XdH3
`[]A\A]A^
A9T$
y,Hc
AWAVAUI
D$`H
L$4L
T$pIc
D$@H
T$8H
T$xH
D$4~'H
D$pH+D$xH;D$@
l$HE1
D$PL
L$`H
L$HE
[]A\A]A^A_
D$HL
D$0M
D$PL
D$HH
D$PH
D$PH
L$HH
L$_H
D$HH
fff.
l$ L
d$(L
l$0H
ATUS
A\A]A^
x=Hc
A\A]A^
D$X1
T$XdH3
\$hH
l$pL
d$xL
D$X1
T$XdH3
\$`H
l$hL
d$pH
AUATUH
[]A\A]
[]A\A]1
=od 
=8d 
fff.
AWAVAUATSH
D$7H
t,<"
[A\A]A^A_
H;=\
AUATUSH
|$XH
t$HdH
L$@L
D$PH
|$XH
|$XH
T$(H
D$XH
T$hH
D$0H
D$ L
L$(1
|$0E
|$XD
	D$<
|$DE
L$@E
DD$<
D$<H
|$@1
[]A\A]A^A_
D$XL
D$XH
T$<H
L$HH
L$@L
AWAVAUA
L$4H
T$4E
d$HH
<$/t9H
[]A\A]A^A_
t$HH
D$8H
5#H 
T$ H
T$ H
L$(H
t$81
='C 
ffff.
d$ H
&lt;
&gt;
&amp;
&quot;
agi set debug [on|off]
AGI Debugging %sabled
Out of memory
res_agi.c
<%s>AGI Tx >> %s
200 result=0
200 result=1
200 result=%d
       > %s: %s
    -- %s: %s
  == %s: %s
mate
200 result=%d endpos=%ld
ABdY 'digits/at' IMp
A dBY HMS
beep
200 result=%d (writefile)
200 result=1 (%s)
200 result=-1
200 result=%d (timeout)
200 result=%d (hangup)
Unable to open %s
200 result=%s (timeout)
200 result=%s
Park
200 result=%c
agi_request: %s
agi_channel: %s
agi_language: %s
agi_type: %s
agi_uniqueid: %s
agi_version: %s
unknown
agi_callerid: %s
agi_calleridname: %s
agi_callingpres: %d
agi_callingani2: %d
agi_callington: %d
agi_callingtns: %d
agi_dnid: %s
agi_rdnis: %s
agi_context: %s
agi_extension: %s
agi_priority: %d
agi_enhanced: %s
agi_accountcode: %s
agi_threadid: %ld
agi_arg_%d: %s
$Revision: 168519 $
Unable to locate host '%s'
Unable to create socket: %s
Fcntl(F_GETFL) failed: %s
Fnctl(F_SETFL) failed: %s
Connect to '%s' failed: %s
agi_network: yes
Wow, connected!
agi_network_script: %s
Description
Command
Dead
%5.5s %30.30s   %s
<TR><TD ALIGN="CENTER">
</TD></TR>
<TR><TD ALIGN="CENTER">
</TABLE></TD></TR>
</TABLE>
</BODY>
</HTML>
<BR>
agi dumphtml
Could not create file '%s'
agi dump html
timeout
dtmf
200 result=1 (%s) endpos=%ld
200 result=0 endpos=%ld
none
agi show
 Runs Dead : %s
No such command '%s'.
Command already registered!
AGIExec
EXEC
Unknown Result
520 End of proper usage.
Success
Failure
Usage
AGISIGHUP
HANGUP
%s hungup
failure
<%s>AGI Rx << %s
No channel, no fd?
agi exec
Channel
CommandID
Added AGI command to queue
agi://
agi:async
AsyncAGI
SubEvent: End
Channel: %s
%s/%s
Failed to fork(): %s
AST_CONFIG_DIR
AST_CONFIG_FILE
AST_MODULE_DIR
AST_SPOOL_DIR
AST_MONITOR_DIR
AST_VAR_DIR
AST_DATA_DIR
AST_LOG_DIR
AST_AGI_DIR
AST_KEY_DIR
AST_RUN_DIR
Failed to execute '%s': %s
failure
SUCCESS
AGISTATUS
FAILURE
NOTFOUND
HANGUP
res_agi
Enable/Disable AGI debugging
answer
Answer channel
status
database
Removes database key/value
deltree
Gets database value
Adds/updates database value
Executes a given Application
data
Prompts for DTMF on a channel
full
option
Gets a channel variable
Hangup the current channel
noop
Does nothing
receive
char
record
Records to a given file
alpha
Says a given character string
digits
Says a given digit string
Says a given number
phonetic
Says a given date
Says a given time
datetime
send
image
autohangup
callerid
Sets channel context
Changes channel extension
music
Set channel dialplan priority
Sets a channel variable
stream
Sends audio file on channel
control
mode
verbose
wait
digit
create
Creates a speech object
Sets a speech engine setting
destroy
Destroys a speech object
Loads a grammar
unload
Unloads a grammar
Activates a grammar
deactivate
Deactivates a grammar
recognize
Recognizes speech
EAGI
DeadAGI
Usage: agi set debug [on|off]
       Enables/disables dumping of AGI transactions for
       debugging purposes.
Memory Allocation Failure in function %s at line %d of %s
/builddir/build/BUILD/asterisk-1.6.1-rc1/include/asterisk/utils.h
/builddir/build/BUILD/asterisk-1.6.1-rc1/include/asterisk/threadstorage.h
Ooh, found a video stream, too
    -- Playing '%s' (escape_digits=%s) (sample_offset %ld)
Unable to set to linear mode, giving up
Unable to create silence detector :(
200 result=%d (randomerror) endpos=%ld
200 result=%d (waitfor) endpos=%ld
200 result=%d (hangup) endpos=%ld
200 result=%d (dtmf) endpos=%ld
200 result=%d (timeout) endpos=%ld
Unable to restore read format on '%s'
    -- Playing '%s' (escape_digits=%s) (timeout %d)
    -- AGI Script Executing Application: (%s) Options: (%s)
Could not find application (%s)
/builddir/build/BUILD/asterisk-1.6.1-rc1/include/asterisk/strings.h
AGI URI's don't support Enhanced AGI yet
Connect failed with unexpected error: %s
FastAGI connection to '%s' timed out after MAX_AGI_CONNECT (%d) milliseconds.
  == AGI Command '%s' unregistered
Unable to unregister command: '%s'!
<HTML>
<HEAD>
<TITLE>AGI Commands</TITLE>
</HEAD>
<BODY>
<CENTER><B><H1>AGI Commands</H1></B></CENTER>
<TABLE BORDER="0" CELLSPACING="10">
<TR><TD><TABLE BORDER="1" CELLPADDING="5" WIDTH="100%%">
<TR><TH ALIGN="CENTER"><B>%s - %s</B></TH></TR>
Usage: agi dumphtml <filename>
       Dumps the AGI command list in HTML format to the given
       file.
AGI HTML commands dumped to: %s
Usage: agi dump html <filename>
       Dumps the AGI command list in HTML format to the given
       file.
%sscore%d=%d text%d="%s" grammar%d=%s
200 result=1 (speech) endpos=%ld results=%d %s
200 result=1 (digit) digit=%c endpos=%ld
Channel %s is not at Async AGI.
Usage: agi show [topic]
       When called with a topic as an argument, displays usage
       information on the given command.  If called without a
       topic, it provides a list of AGI commands.
  == AGI Command '%s' registered
Add an AGI command to execute by Async AGI
SubEvent: Start
Channel: %s
CommandId: %d
Command: %s
Too many arguments, truncating
SubEvent: End
Channel: %s
CommandId: %d
Command: %s
ResultCode: %d
Result: %s
520-Invalid command syntax.  Proper usage follows:
511 Command Not Permitted on a dead channel
SubEvent: End
Channel: %s
CommandId: %d
Command: %s
ResultCode: 511
Result: Command not permitted on a dead channel
510 Invalid or unknown command
SubEvent: End
Channel: %s
CommandId: %d
Command: %s
ResultCode: 510
Result: Invalid or unknown command
Unable to fdopen file descriptor
AGI Rx << temp buffer %s - errno %s
    -- <%s>AGI Script %s completed, returning %d
unable to send SIGHUP to AGI process %d: %s
Usage: agi exec <channel name> <app and arguments> [id]
       Add AGI command to the execute queue of the specified channel in Async AGI
Channel %s does not exists or cannot lock it
failed to add AGI command to queue of channel %s
Added AGI command to channel %s queue
Both, Channel and Command are *required*
Channel %s does not exists or cannot get its lock
Failed to add AGI command to channel %s queue
AGI requires an argument (script)
Hungup channel detected, running agi in dead mode.
Async AGI does not support Enhanced AGI yet
Unable to allocate Async AGI commands list.
failed to create Async AGI pipe
failed to read from Async AGI pipe on channel %s
SubEvent: Start
Channel: %s
Env: %s
ast_check_hangup returned true on chan %s
Hu? datastore disappeared at Async AGI on Channel %s!
failed to read from AsyncAGI pipe on channel %s
SubEvent: Exec
Channel: %s
Result: %s
ast_waitfor returned <= 0 on chan %s
No frame read on channel %s, going out ...
Got HANGUP frame on channel %s, going out ...
Failed to execute '%s': File does not exist.
Unable to create toast pipe: %s
unable to create fromast pipe: %s
unable to create audio pipe: %s
unable to set audio pipe parameters: %s
    -- Launched AGI Script %s
failed to start Async AGI on channel %s
SubEvent: Exec
Channel: %s
CommandID: %s
Result: %s
DeadAGI has been deprecated, please use AGI in all cases!
EAGI cannot be run on a dead/hungup channel, please use AGI.
Unable to set channel '%s' to linear mode
Unable to restore channel '%s' to format %s
Asterisk Gateway Interface (AGI)
This paragraph is copyright (c) 2006 by Digium, Inc. In order for your module to load, it must return this key via a function called "key".  Any code which includes this paragraph must be licensed under the GNU General Public License version 2 or later (at your option).  In addition to Digium's general reservations of rights, Digium expressly reserves the right to allow other parties to license this paragraph under different terms. Any use of Digium, Inc. trademarks or logos (including "Asterisk" or "Digium") without express written permission of Digium, Inc. is prohibited.
Add AGI command to a channel in Async AGI
List AGI commands or specific help
Dumps a list of AGI commands in HTML format
Returns status of the connected channel
Removes database keytree/value
Evaluates a channel expression
Stream file, prompt for DTMF, with timeout
Receives one character from channels supporting it
Receives text from channels supporting it
Says a given character string with phonetics
Says a given time as specfied by the format given
Sends images to channels supporting it
Sends text to channels supporting it
Autohangup channel in some time
Sets callerid for the current channel
Enable/Disable Music on hold generator
Sends audio file on channel and allows the listner to control the stream
Toggles TDD mode (for the deaf)
Logs a message to the asterisk verbose log
Waits for a digit to be pressed
  [E|Dead]AGI(command,args): Executes an Asterisk Gateway Interface compliant
program on a channel. AGI allows Asterisk to launch external programs written
in any language to control a telephony channel, play audio, read DTMF digits,
etc. by communicating with the AGI protocol on stdin and stdout.
  As of 1.6.0, this channel will not stop dialplan execution on hangup inside
of this application. Dialplan execution will continue normally, even upon
hangup until the AGI application signals a desire to stop (either by exiting
or, in the case of a net script, by closing the connection).
  A locally executed AGI script will receive SIGHUP on hangup from the channel
except when using DeadAGI. A fast AGI server will correspondingly receive a
HANGUP in OOB data. Both of these signals may be disabled by setting the
AGISIGHUP channel variable to "no" before executing the AGI application.
  Using 'EAGI' provides enhanced AGI, with incoming audio available out of band
on file descriptor 3.
  Use the CLI command 'agi show' to list available agi commands.
  This application sets the following channel variable upon completion:
     AGISTATUS      The status of the attempt to the run the AGI script
                    text string, one of SUCCESS | FAILURE | NOTFOUND | HANGUP
Executes AGI on a hungup channel
Executes an EAGI compliant application
Executes an AGI compliant application
handle_verbose
handle_streamfile
handle_recordfile
handle_getoption
handle_exec
ast_str_create
_ast_calloc
ast_str_make_space
_ast_realloc
handle_cli_agi_add_cmd
add_agi_cmd
_ast_strdup
Description: Add an AGI command to the execute queue of the channel in Async AGI
Variables:
  *Channel: Channel that is currently in Async AGI
  *Command: Application to execute
   CommandID: comand id. This will be sent back in CommandID header of AsyncAGI exec event notification
agi_exec_full
launch_script
launch_netscript
launch_asyncagi
add_to_agi
get_agi_cmd
agi_handle_command
parse_args
run_agi
eagi_exec
deadagi_exec
ast_agi_unregister
ast_agi_register
ast_agi_send
ast_threadstorage_get
 Usage: ANSWER
	Answers channel if not already in answer state. Returns -1 on
 channel failure, or 0 if successful.
 Usage: CHANNEL STATUS [<channelname>]
	Returns the status of the specified channel.
 If no channel name is given the returns the status of the
 current channel.  Return values:
  0 Channel is down and available
  1 Channel is down, but reserved
  2 Channel is off hook
  3 Digits (or equivalent) have been dialed
  4 Line is ringing
  5 Remote end is ringing
  6 Line is up
  7 Line is busy
 Usage: DATABASE DEL <family> <key>
	Deletes an entry in the Asterisk database for a
 given family and key.
 Returns 1 if successful, 0 otherwise.
 Usage: DATABASE DELTREE <family> [keytree]
	Deletes a family or specific keytree within a family
 in the Asterisk database.
 Returns 1 if successful, 0 otherwise.
 Usage: DATABASE GET <family> <key>
	Retrieves an entry in the Asterisk database for a
 given family and key.
 Returns 0 if <key> is not set.  Returns 1 if <key>
 is set and returns the variable in parentheses.
 Example return code: 200 result=1 (testvariable)
 Usage: DATABASE PUT <family> <key> <value>
	Adds or updates an entry in the Asterisk database for a
 given family, key, and value.
 Returns 1 if successful, 0 otherwise.
 Usage: EXEC <application> <options>
	Executes <application> with given <options>.
 Returns whatever the application returns, or -2 on failure to find application
 Usage: GET DATA <file to be streamed> [timeout] [max digits]
	Stream the given file, and recieve DTMF data. Returns the digits received
from the channel at the other end.
 Usage: GET FULL VARIABLE <variablename> [<channel name>]
	Returns 0 if <variablename> is not set or channel does not exist.  Returns 1
if <variablename>  is set and returns the variable in parenthesis.  Understands
complex variable names and builtin variables, unlike GET VARIABLE.
 example return code: 200 result=1 (testvariable)
 Usage: GET OPTION <filename> <escape_digits> [timeout]
	Behaves similar to STREAM FILE but used with a timeout option.
 Usage: GET VARIABLE <variablename>
	Returns 0 if <variablename> is not set.  Returns 1 if <variablename>
 is set and returns the variable in parentheses.
 example return code: 200 result=1 (testvariable)
 Usage: HANGUP [<channelname>]
	Hangs up the specified channel.
 If no channel name is given, hangs up the current channel
 Usage: NoOp
	Does nothing.
 Usage: RECEIVE CHAR <timeout>
	Receives a character of text on a channel. Specify timeout to be the
 maximum time to wait for input in milliseconds, or 0 for infinite. Most channels
 do not support the reception of text. Returns the decimal value of the character
 if one is received, or 0 if the channel does not support text reception.  Returns
 -1 only on error/hangup.
 Usage: RECEIVE TEXT <timeout>
	Receives a string of text on a channel. Specify timeout to be the
 maximum time to wait for input in milliseconds, or 0 for infinite. Most channels
 do not support the reception of text. Returns -1 for failure or 1 for success, and the string in parentheses.
 Usage: RECORD FILE <filename> <format> <escape digits> <timeout> \
                                          [offset samples] [BEEP] [s=silence]
	Record to a file until a given dtmf digit in the sequence is received
 Returns -1 on hangup or error.  The format will specify what kind of file
 will be recorded.  The timeout is the maximum record time in milliseconds, or
 -1 for no timeout. "Offset samples" is optional, and, if provided, will seek
 to the offset without exceeding the end of the file.  "silence" is the number
 of seconds of silence allowed before the function returns despite the
 lack of dtmf digits or reaching timeout.  Silence value must be
 preceeded by "s=" and is also optional.
 Usage: SAY ALPHA <number> <escape digits>
	Say a given character string, returning early if any of the given DTMF digits
 are received on the channel. Returns 0 if playback completes without a digit
 being pressed, or the ASCII numerical value of the digit if one was pressed or
 -1 on error/hangup.
 Usage: SAY DIGITS <number> <escape digits>
	Say a given digit string, returning early if any of the given DTMF digits
 are received on the channel. Returns 0 if playback completes without a digit
 being pressed, or the ASCII numerical value of the digit if one was pressed or
 -1 on error/hangup.
 Usage: SAY NUMBER <number> <escape digits> [gender]
	Say a given number, returning early if any of the given DTMF digits
 are received on the channel.  Returns 0 if playback completes without a digit
 being pressed, or the ASCII numerical value of the digit if one was pressed or
 -1 on error/hangup.
 Usage: SAY PHONETIC <string> <escape digits>
	Say a given character string with phonetics, returning early if any of the
 given DTMF digits are received on the channel. Returns 0 if playback
 completes without a digit pressed, the ASCII numerical value of the digit
 if one was pressed, or -1 on error/hangup.
 Usage: SAY DATE <date> <escape digits>
	Say a given date, returning early if any of the given DTMF digits are
 received on the channel.  <date> is number of seconds elapsed since 00:00:00
 on January 1, 1970, Coordinated Universal Time (UTC). Returns 0 if playback
 completes without a digit being pressed, or the ASCII numerical value of the
 digit if one was pressed or -1 on error/hangup.
 Usage: SAY TIME <time> <escape digits>
	Say a given time, returning early if any of the given DTMF digits are
 received on the channel.  <time> is number of seconds elapsed since 00:00:00
 on January 1, 1970, Coordinated Universal Time (UTC). Returns 0 if playback
 completes without a digit being pressed, or the ASCII numerical value of the
 digit if one was pressed or -1 on error/hangup.
 Usage: SAY DATETIME <time> <escape digits> [format] [timezone]
	Say a given time, returning early if any of the given DTMF digits are
 received on the channel.  <time> is number of seconds elapsed since 00:00:00
 on January 1, 1970, Coordinated Universal Time (UTC). [format] is the format
 the time should be said in.  See voicemail.conf (defaults to "ABdY
 'digits/at' IMp").  Acceptable values for [timezone] can be found in
 /usr/share/zoneinfo.  Defaults to machine default. Returns 0 if playback
 completes without a digit being pressed, or the ASCII numerical value of the
 digit if one was pressed or -1 on error/hangup.
 Usage: SEND IMAGE <image>
	Sends the given image on a channel. Most channels do not support the
 transmission of images. Returns 0 if image is sent, or if the channel does not
 support image transmission.  Returns -1 only on error/hangup. Image names
 should not include extensions.
 Usage: SEND TEXT "<text to send>"
	Sends the given text on a channel. Most channels do not support the
 transmission of text.  Returns 0 if text is sent, or if the channel does not
 support text transmission.  Returns -1 only on error/hangup.  Text
 consisting of greater than one word should be placed in quotes since the
 command only accepts a single argument.
 Usage: SET AUTOHANGUP <time>
	Cause the channel to automatically hangup at <time> seconds in the
 future.  Of course it can be hungup before then as well. Setting to 0 will
 cause the autohangup feature to be disabled on this channel.
 Usage: SET CALLERID <number>
	Changes the callerid of the current channel.
 Usage: SET CONTEXT <desired context>
	Sets the context for continuation upon exiting the application.
 Usage: SET EXTENSION <new extension>
	Changes the extension for continuation upon exiting the application.
 Usage: SET MUSIC ON <on|off> <class>
	Enables/Disables the music on hold generator.  If <class> is
 not specified, then the default music on hold class will be used.
 Always returns 0.
 Usage: SET PRIORITY <priority>
	Changes the priority for continuation upon exiting the application.
 The priority must be a valid priority or label.
 Usage: SET VARIABLE <variablename> <value>
 Usage: STREAM FILE <filename> <escape digits> [sample offset]
	Send the given file, allowing playback to be interrupted by the given
 digits, if any. Use double quotes for the digits if you wish none to be
 permitted. If sample offset is provided then the audio will seek to sample
 offset before play starts.  Returns 0 if playback completes without a digit
 being pressed, or the ASCII numerical value of the digit if one was pressed,
 or -1 on error or if the channel was disconnected. Remember, the file
 extension must not be included in the filename.
 Usage: CONTROL STREAM FILE <filename> <escape digits> [skipms] [ffchar] [rewchr] [pausechr]
	Send the given file, allowing playback to be controled by the given
 digits, if any. Use double quotes for the digits if you wish none to be
 permitted.  Returns 0 if playback completes without a digit
 being pressed, or the ASCII numerical value of the digit if one was pressed,
 or -1 on error or if the channel was disconnected. Remember, the file
 extension must not be included in the filename.
 Note: ffchar and rewchar default to * and # respectively.
 Usage: TDD MODE <on|off>
	Enable/Disable TDD transmission/reception on a channel. Returns 1 if
 successful, or 0 if channel is not TDD-capable.
 Usage: VERBOSE <message> <level>
	Sends <message> to the console via verbose message system.
 <level> is the the verbose level (1-4)
 Always returns 1.
 Usage: WAIT FOR DIGIT <timeout>
	Waits up to 'timeout' milliseconds for channel to receive a DTMF digit.
 Returns -1 on channel failure, 0 if no digit is received in the timeout, or
 the numerical value of the ascii of the digit if one is received.  Use -1
 for the timeout value if you desire the call to block indefinitely.
 Usage: SPEECH CREATE <engine>
       Create a speech object to be used by the other Speech AGI commands.
 Usage: SPEECH SET <name> <value>
       Set an engine-specific setting.
 Usage: SPEECH DESTROY
       Destroy the speech object created by SPEECH CREATE.
 Usage: SPEECH LOAD GRAMMAR <grammar name> <path to grammar>
       Loads the specified grammar as the specified name.
 Usage: SPEECH UNLOAD GRAMMAR <grammar name>
       Unloads the specified grammar.
 Usage: SPEECH ACTIVATE GRAMMAR <grammar name>
       Activates the specified grammar on the speech object.
 Usage: SPEECH DEACTIVATE GRAMMAR <grammar name>
       Deactivates the specified grammar on the speech object.
 Usage: SPEECH RECOGNIZE <prompt> <timeout> [<offset>]
       Plays back given prompt while listening for speech and dtmf.
a9c98e5d177805051735cb5b0b16b0a0
res_agi.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
