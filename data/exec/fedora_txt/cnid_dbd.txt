/lib/ld-linux.so.2
libatalk.so.15
_Jv_RegisterClasses
_ITM_deregisterTMCloneTable
__gmon_start__
_ITM_registerTMCloneTable
_init
make_log_entry
afp_config_parse
readt
strlcpy
load_charset
recv_fd
setnonblock
getvolbypath
convert_charset
load_volumes
bcatcstr
type_configs
bfromcstr
_fini
lock_reg
libwrap.so.0
libtdb.so.1
libdb-5.3.so
db_strerror
db_env_create
db_create
libacl.so.1
libattr.so.1
libmysqlclient.so.18
libpthread.so.0
write
__errno_location
sigaction
libz.so.1
libm.so.6
libssl.so.10
libcrypto.so.10
libdl.so.2
libcrack.so.2
libc.so.6
_IO_stdin_used
setuid
fflush
__printf_chk
exit
strncmp
__strdup
__fdelt_chk
fchdir
strncpy
puts
sigprocmask
unlink
strftime
strtol
getpwnam
calloc
strlen
sigemptyset
memset
writev
asctime
getopt
sigaddset
fclose
pselect
malloc
strcat
__xstat64
optarg
sigdelset
system
getuid
fscanf
chown
__memcpy_chk
localtime
__cxa_finalize
fopen64
setgid
__libc_start_main
free
__stack_chk_fail
_edata
__bss_start
_end
GLIBC_2.2
GLIBC_2.0
GLIBC_2.15
GLIBC_2.4
GLIBC_2.1
GLIBC_2.1.3
GLIBC_2.3.4
jpPj
lockh
D$ PRj
[^_]
D$L1
D$ j
t$ j
v-PP
D$ j
D$@PRj
L$Le3
d$\[^_]
[^_]
D$8;D$T
T$D9P
[^_]
[^_]
UWVS
[^_]
UWVS
D$$e
D$<1
T$<e3
d$L[^_]
9|$$u
[^_]
[^_]
UWVS
[^_]
d$ 1
D$(e
D$l1
t$le35
d$|[^_]
L$,1
d$ [^_
d$0[^_
|$De
D$|1
D$01
t$|e35
[^_]
D$d%
[^_]
UWVS
D$$e
[^_]
D$(1
L$D1
d$(1
t$He
L$,1
L$,e3
d$4[^
D$l1
T$(~f1
t$le35
d$|[^_]
D$Xe
[^_]
;D$8
T$He
D$,1
L$,e3
d$0[^_
l$Xe
D$,1
D$* 
t$,e35
d$<[^_]
UWVS
d$,[
UWVS
[^_]
d$0[^_
D$8e
D$,9
T$,u
[^_]
|$<;G$tY
D$Pe
T$<1
L$<e3
d$D[^
;D$@
d$,[^_]
9D$@rr
d$,[^_]
D$<1
L$<e3
d$D[^
UWVS
[^_]
d$L[^_]
T$l1
T$41
t$le35
d$|[^_]
|$8e
D$l%
[^_]
UWVS
d$L[^_]
d$L[
[^_]
d$L[^_]
T$<1
[^_]
D$,1
T$l1
t$le35
d$|[^_]
|$He
D$T9F
D$D1
[^_]
L$H	
D$X9F
D$D9T$\
D$X9F
;D$T
|$De
D$|1
T$|e3
[^_]
T$@e
D$\1
L$\e3
d$l[^_]
D$\1
T$\e3
d$l[^_]
UWVS
L$|1
|$D1
t$|e35
[^_]
D$d%
UWVS
D$<1
T$49
L$<e3
d$L[^_]
L$09
UWVS
t$xe
D$L1
T$01
|$Le3=
d$\[^_]
UWVS
t$,U
[^_]
error opening cwd: %s
dbif.c
db_errlog
error chdiring back: %s
cnid2.db
devino.db
didname.db
Running recovery
Finished recovery.
error closing database %s: %s
error closing DB logfile: %s
CNID database version %u
error setting key/value in %s
key not found
Couldn't create cursor: %s
match: CNID %u
error stating database %s: %s
stamp: %s
error upgarding database: %s
error closing database: %s
error forcing checkpoint: %s
Cant open database
Truncating CNID index.
Reindexing did/name index...
... done.
Reindexing dev/ino index...
Reindexing name index...
CNID database dump:
%b %d %Y %H:%M:%S
Couldn't close cursor: %s
dev/inode index:
%u items
did/name index:
error chdiring to db_env '%s': %s
error creating/opening DB errlogfile: %s
error starting transaction: %s
error creating DB environment: %s
error opening DB environment: %s
error closing DB environment after recovery: %s
error creating DB environment after recovery: %s
error setting DB environment cachesize to %i: %s
error setting DB environment maxlocks to %i: %s
error setting DB environment max lockobjects to %i: %s
error opening DB environment after recovery: %s
error setting DB_AUTO_COMMIT flag: %s
error getting list of stale logfiles: %s
Error removing stale logfile %s: %s
error setting DB_LOG_AUTO_REMOVE flag: %s
error closing DB environment: %s
Trying to remove BerkeleyDB environment
error removing transaction logfiles: %s
BerkeleyDB environment recovery done.
error acquiring db_end handle: %s
error removing BerkeleyDB environment: %s
Removed BerkeleyDB environment.
error retrieving value from %s: %s
dbif_getversion: reading version info
dbif_getversion: no version info found
dbif_getversion: database error
error setting key/value in %s: %s
error deleting key/value from %s
error deleting key/value from %s: %s
error committing transaction: %s
Setting CNID database version to %u
dbif_init_rootinfo: cant commit txn
See if we can upgrade the CNID database...
error creating handle for database: %s
Finished BerkeleyBD upgrade check
error creating handle for database %s: %s
error setting flags for database %s: %s
error setting cachesize %u KB for database %s: %s
error truncating database %s: %s
Failed to associate didname database: %s
Failed to associate devino database: %s
Failed to associate name index: %s
Finished CNID database version upgrade check
Error upgrading CNID database to version %d
error aborting transaction: %s
Fatal error aborting transaction. Exiting!
Fatal error committing transaction. Exiting!
error checkpointing transaction susystem: %s
error getting stat infotmation on database: %s
dbif_copy_rootinfokey: Error getting rootinfo record
dbif_copy_rootinfokey: Error writing rootinfo key
CNID db version: %u, dbd stamp: 0x%08x (%s), next free CNID: %u
id: %10u, did: %10u, type: %s, dev: 0x%llx, ino: 0x%016llx, name: %s
Error iterating over btree: %s
%u CNIDs in database. Max CNID: %u.
id: %10u <== dev: 0x%llx, ino: 0x%016llx
id: %10u <== did: %10u, name: %s
RootInfo
idxname: conversion error
pack.c
Out of memory
comm.c
error in select: %s
comm_rcv: got data on fd %u
comm_rcv: setnonblock: %s
comm_rcv: got %u bytes
error writing message : %s
error reading message header: %s
error reading message name: %s
error writing message header: %s
invalid characters in token %s
default usock filename too long
db_param: setting UNIX domain socket filename to %s
db_param: setting max number of concurrent afpd connections per volume (fd_table_size) to %d
db_param: setting logfile_autoremove to %d
db_param: setting cachesize to %d
db_param: setting maxlocks to %d
db_param: setting maxlockobjs to %d
db_param: setting flush_frequency to %d
db_param: setting flush_interval to %d
db_param: setting idle timeout to %d
db_param.c
usock
db_param
Parameter filename too long
error opening %s: %s
error parsing config file
usock_file
usock filename %s too long
fd_table_size
logfile_autoremove
cachesize
maxlocks
maxlockobjs
flush_frequency
flush_interval
idle_timeout
 %s %s
LOCK_SHRD
LOCK_EXCL
LOCK_FREE
UNKNOWN
LOCK_UNLOCK
get_lock(%s, "%s")
main.c
.AppleDB pathname too long
Error opening lockfile: %s
Error statting lockfile: %s
get_lock: got %s lock
main: fatal db lock error
delete_db()
open_db()
3.1.3
cnid_dbd (Netatalk %s)
:dF:l:p:t:u:vV
main: bad IPC fds
cnid_dbd
unknown user: '%s'
user: %s, path %s
/.AppleDB
db dir: "%s"
chdir to %s failed: %s
error in stat for %s: %s
Setting uid/gid to %i/%i
uid/gid: %s
main: sigaction: %s
reinit_db()
%b %d %H:%M:%S.
loop: unknown op %d
Error inheriting lockfile permissions: %s
Volume CNID db is locked, try again...
Finished initializing BerkeleyDB environment
Finished opening BerkeleyDB databases
rm -f cnid2.db lock log.* __db.*
Recreated CNID BerkeleyDB databases of volume "%s"
Finished parsing db_param config file
Failed to open CNID database for volume "%s"
Checkpoint interval: %d seconds. Next checkpoint: %s
Checkpointing BerkeleyDB for volume '%s'
Checkpointing BerkeleyDB after %d writes for volume '%s'
add_cnid: duplicate %x %s
dbd_add.c
dbd_add(did:%u, '%s', dev/ino:0x%llx/0x%llx) {start}
dbd_add(did:%u, '%s', dev/ino:0x%llx/0x%llx): error in dbd_lookup
dbd_add: dbd_lookup success --> CNID: %u
dbd_add(did:%u, '%s', dev/ino:0x%llx/0x%llx): {adding to database ...}
dbd_add: FATAL: CNID database has reached its limit.
dbd_add: Failed to compute CNID for %s, error reading/updating Rootkey
dbd_add(DID: %u/"%s", dev/ino 0x%llx/0x%llx): Cannot add CNID: %u
dbd_add: Failed to add CNID for %s to database
dbd_add(did:%u, '%s', dev/ino:0x%llx/0x%llx): Added with CNID: %u
dbd_get: Unable to get CNID %u, name %s
cnid_get: CNID not found for did %u name %s
cnid_get: Returning CNID did %u name %s as %u
dbd_get.c
dbd_resolve: DB Error resolving CNID %u
dbd_resolve: Could not resolve CNID %u
dbd_resolve(CNID: %u): did: %u, name: "%s"
dbd_resolve.c
dbd_lookup(): START
dbd_lookup.c
dbd_lookup: Unable to get CNID %u, name %s
dbd_lookup(name:'%s', did:%u, dev/ino:0x%llx/0x%llx) {devino: %u, didname: %u}
dbd_lookup: name: '%s', did: %u, dev/ino: 0x%llx/0x%llx is not in the CNID database
dbd_lookup(name:'%s', did:%u, dev/ino:0x%llx/0x%llx): type mismatch for devino
dbd_lookup(name:'%s', did:%u, dev/ino:0x%llx/0x%llx): error deleting type mismatch for devino
dbd_lookup(name:'%s', did:%u, dev/ino:0x%llx/0x%llx): type mismatch for didname
dbd_lookup(name:'%s', did:%u, dev/ino:0x%llx/0x%llx): error deleting type mismatch for didname
dbd_lookup(DID:%u/'%s',0x%llx/0x%llx): Got CNID: %u
dbd_lookup: CNID mismatch: (DID:%u/'%s') --> %u , (0x%llx/0x%llx) --> %u
dbd_lookup(CNID hint: %u, DID:%u, "%s", 0x%llx/0x%llx): CNID resolve problem: server side rename oder reused inode
dbd_lookup: server side mv (with resource fork)
dbd_lookup(DID:%u/'%s',0x%llx/0x%llx): CNID resolve problem: changed dev/ino
dbd_lookup(DID:%u/'%s',0x%llx/0x%llx): Got CNID (needed update): %u
dbd_update: Updated dbd with dev/ino: 0x%llx/0x%llx, did: %u, name: %s, cnid: %u
dbd_update: Unable to update CNID: %u, dev/ino: 0x%llx/0x%llx, DID: %u: %s
dbd_update.c
dbd_delete: Unable to delete entry for dev/ino: 0x%llx/0x%llx
cnid_delete: deleted dev/ino: 0x%llx/0x%llx
cnid_delete: dev/ino: 0x%llx/0x%llx not in database
dbd_delete: Unable to delete entry for DID: %lu, name: %s
cnid_delete: deleted DID: %lu, name: %s
cnid_delete: DID: %lu, name: %s not in database
dbd_delete: Unable to delete entry for CNID %u
cnid_delete: CNID %u not in database
dbd_delete.c
cnid_delete: CNID %u deleted
dbd_getstamp: Error getting rootinfo record
dbd_getstamp: No rootinfo record found
dbd_getstamp.c
dbd_rebuild_add(CNID: %u, did: %u, name: "%s", dev/ino:0x%llx/0x%llx): success
dbd_rebuild_add.c
CNID database at `%s' is being checked (quick)
CNID database at `%s' corrupted (%u/%u)
CNID database at `%s' seems ok, %u entries.
dbd_dbcheck.c
dbd_search("%s"):
dbd_search.c
dbd_search("%s"): db error
dbd_search("%s"): %d matches
dbd_search("%s"): no matches
;*2$"T
cnid_dbd.debug
7zXZ
ymAP
v||vUv
m5" 
az\_
_EbGTc
CL}ZW
&rzz
lW.ogtE%
_,jr#+
k=lE
Oz6_
kaPA
D/y'
B(6F%
+wKB
f,s{R-
Yuz?	ct
Au	lh|
,*]g
Muvr
Ii-VIr
?R9<~
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
