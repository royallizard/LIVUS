[D7kw
t)<@Fwd
nmd%/
|,@wd
k)+lw
RP9BE
FjW9}&
]M)$
F\jx+
;= qdX
__gmon_start__
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
libm.so.6
srtp_event_reporter
err_report
srtp_stream_alloc
crypto_alloc
crypto_kernel_alloc_cipher
crypto_kernel_alloc_auth
ekt_alloc
crypto_free
srtp_stream_dealloc
rdbx_dealloc
srtp_stream_clone
mod_srtp
key_limit_clone
rdbx_get_window_size
rdbx_init
rdb_init
srtp_kdf_init
srtp_kdf_generate
octet_string_set_to_zero
srtp_kdf_clear
base_key_length
srtp_stream_init_keys
cipher_get_key_length
auth_get_key_length
octet_string_hex_string
srtp_stream_init
key_limit_set
ekt_stream_init_from_policy
srtp_install_event_handler
srtp_init
crypto_kernel_init
crypto_kernel_load_debug_module
srtp_shutdown
crypto_kernel_shutdown
srtp_get_stream
srtp_unprotect
rdbx_estimate_index
rdbx_check
auth_get_tag_length
key_limit_update
rdbx_add_index
auth_get_prefix_length
cipher_output
octet_string_is_eq
srtp_protect
srtp_dealloc
srtp_add_stream
srtp_create
srtp_remove_stream
crypto_policy_set_rtp_default
crypto_policy_set_rtcp_default
crypto_policy_set_aes_cm_128_hmac_sha1_32
crypto_policy_set_aes_cm_128_null_auth
crypto_policy_set_null_cipher_hmac_sha1_80
crypto_policy_set_aes_cm_256_hmac_sha1_80
crypto_policy_set_aes_cm_256_hmac_sha1_32
srtp_protect_rtcp
rdbx_get_packet_index
ekt_write_data
rdb_increment
rdb_get_value
srtp_unprotect_rtcp
ekt_octets_after_base_tag
__memcpy_chk
rdb_check
srtp_stream_init_from_ekt
rdb_add_index
crypto_policy_set_from_profile_for_rtp
crypto_policy_set_from_profile_for_rtcp
append_salt_to_key
memcpy
srtp_profile_get_master_key_length
srtp_profile_get_master_salt_length
srtcp_packet_get_ekt_spi
srtcp_packet_get_ekt_roc
srtcp_packet_get_emk_location
aes_decrypt_with_raw_key
aes_expand_decryption_key
aes_decrypt
rdbx_set_roc
srtcp_ekt_trailer
cipher_type_test
mod_cipher
rand_source_init
rand
rand_source_get_octet_string
cipher_type_self_test
cipher_bits_per_second
clock
null_cipher_set_iv
null_cipher_encrypt
null_cipher_dealloc
null_cipher
null_cipher_alloc
null_cipher_init
null_cipher_description
null_cipher_test_0
aes_expand_encryption_key
v128_copy_octet_string
aes_encrypt
aes_icm_set_iv
mod_aes_icm
v128_hex_string
aes_icm_context_init
aes_icm_dealloc
aes_icm_alloc_ismacryp
aes_icm_alloc
aes_icm_set_octet
aes_icm_advance_ismacryp
aes_icm_advance
aes_icm_encrypt_ismacryp
aes_icm_encrypt
aes_icm_output
aes_icm_description
aes_icm_test_case_1
aes_icm_test_case_1_key
aes_icm_test_case_1_nonce
aes_icm_test_case_1_plaintext
aes_icm_test_case_1_ciphertext
aes_icm_test_case_0
aes_icm_test_case_0_key
aes_icm_test_case_0_nonce
aes_icm_test_case_0_plaintext
aes_icm_test_case_0_ciphertext
aes_cbc_dealloc
aes_cbc_set_iv
mod_aes_cbc
aes_cbc_context_init
aes_cbc_alloc
aes_cbc_encrypt
aes_cbc_nist_encrypt
aes_cbc_decrypt
aes_cbc_nist_decrypt
aes_cbc_description
aes_cbc_test_case_3
aes_cbc_test_case_3_key
aes_cbc_test_case_3_iv
aes_cbc_test_case_3_plaintext
aes_cbc_test_case_3_ciphertext
aes_cbc_test_case_2
aes_cbc_test_case_2_key
aes_cbc_test_case_2_iv
aes_cbc_test_case_2_plaintext
aes_cbc_test_case_2_ciphertext
aes_cbc_test_case_1
aes_cbc_test_case_1_key
aes_cbc_test_case_1_iv
aes_cbc_test_case_1_plaintext
aes_cbc_test_case_1_ciphertext
aes_cbc_test_case_0
aes_cbc_test_case_0_key
aes_cbc_test_case_0_iv
aes_cbc_test_case_0_plaintext
aes_cbc_test_case_0_ciphertext
null_auth_init
null_auth_compute
null_auth_update
null_auth_start
null_auth_dealloc
null_auth_alloc
mod_auth
null_auth_description
null_auth_test_case_0
sha1_core
SHA_K0
SHA_K1
SHA_K2
SHA_K3
sha1_init
sha1_update
mod_sha1
sha1_final
hmac_update
mod_hmac
hmac_compute
hmac_start
hmac_init
hmac_dealloc
hmac_alloc
hmac_description
hmac_test_case_0
hmac_test_case_0_key
hmac_test_case_0_data
hmac_test_case_0_tag
auth_type_get_ref_count
auth_type_test
auth_type_self_test
octet_get_weight
octet_weight
nibble_to_hex_char
hex_char_to_nibble
is_hex_string
hex_string_to_octet_string
v128_bit_string
v128_right_shift
v128_left_shift
bitvector_dealloc
bitvector_set_to_zero
memset
bitvector_alloc
bitvector_bit_string
bitvector_left_shift
base64_char_to_sextet
base64_string_to_octet_string
stat_test_monobit
mod_stat
stat_test_poker
stat_test_runs
stat_test_rand_source
stat_test_rand_source_with_repetition
crypto_kernel_status
__printf_chk
puts
exit
crypto_kernel_list_debug_modules
mod_crypto_kernel
rand_source_deinit
crypto_kernel_get_cipher_type
crypto_kernel_get_auth_type
strncmp
crypto_kernel_do_load_auth_type
crypto_kernel_replace_auth_type
crypto_kernel_load_auth_type
crypto_kernel_do_load_cipher_type
crypto_kernel_load_cipher_type
err_reporting_init
mod_alloc
ctr_prng_init
ctr_prng_get_octet_string
crypto_kernel_replace_cipher_type
crypto_kernel_set_debug_module
crypto_get_random
malloc
key_limit_check
open
read
close
x917_prng_init
x917_prng
x917_prng_get_octet_string
time
x917_prng_deinit
ctr_prng
ctr_prng_deinit
stdout
err_level
__vfprintf_chk
err_reporting_set_level
index_init
index_advance
index_guess
ut_compar
ut_init
qsort
ut_next_index
libpthread.so.0
libc.so.6
__stack_chk_fail
_edata
__bss_start
_end
libsrtp.so.0
GLIBC_2.0
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.3.4
t~s$
V@;P@t
V ;P t
V$;P$t
|$@e
D$,1
T$,e3
D$|1
T$|e3
D$8t
+D$4
D$,9E
D$4)
D$<+D$4
+D$4
D$|1
T$|e3
D$Lt
t$Dt`
UWVS
D$|1
T$,tF
L$|e3
[^_]
UWVS
+D$0
+L$0
T$p)
[^_]
+L$0
T$$)
L$89q
T$$u
t$ v
D$ f
UWVS
;D$D
;|$(u
;L$D
T$$;T$H
9t$$tu
9t$$
D$ u
[^_]
T$$1
UWVS
T$(e
D$<1
T$h1
;t$h
t$8u
<$+t$
L$<e3
d$L[^_]
H 3H
H$3H
UWVS
d$,[^_]
UWVS
03M$
M(1L$
},1|$
03M4
M81L$
}<1|$
03MD
MH1L$
}L1|$
03MT
MX1L$
}\1|$
03Md
Mh1L$
}l1|$
03Mt
Mx1L$
}|1|$
[^_]
01L$
[^_]
UWVS
u$1t$
M(1L$
83L$
U81T$
83T$
MH1L$
83L$
UX1T$
Mh1L$
83L$
Ux1T$
83T$
[^_]
03L$
03T$
[^_]
UWVS
d$<[^_]
|$T)
d$<[1
L$T)
F 0E
F!0E
F"0E
F#0E
F$0E
F%0E
F&0E
F'0E
F(0E
F)0E
F*0E
F+0E
F,0E
F-0E
F.0E
F/0E
F 1E
F$1E
F(1E
F,1E
d$<[1
D2 0
UWVS
d$,[^_]
d$,1
[^_]
UWVS
D$L1
T$Le3
d$\[^_]
UWVS
T$$1
L$(1
3L$,1L$
L$ 1
3L$$1L$
3L$(1L$
|$,1
l$ 3l$
l$$3l$,3t$
t$(3t$ 1
|$$1
3|$(1
[^_]
UWVS
L$D)
d$,[^_]
UWVS
T$p1
|$D7
t$0	
;L$ 
l$(u
3D$$
;T$4
D$(u
t$(#D$,	
;L$8
T$$u
;t$0
L$,u
|$D7
l$<!
#D$$	
;L$ 
D$(u
;l$4
L$(u
|$$#D$(	
;t$8
L$,u
9l$0
L$(u
[^_]
|$D;
l$X~
UWVS
D$\1
T$\e3
d$l[^_]
UWVS
D$l1
T$le3
d$|[^_]
UWVS
l$@1
d$,[
UWVS
9D$ 
4$~W
[^_]
UWV1
d$,[
[^_]
UWVS
d$<[^_]
|$$~`
D$  
)T$ 
d$<[^_]
UWVS
t$D~k
[^_]
D$,9
[^_]
d$\1
[^_]
D$pf
D$:Z
D$@g
D$Bg
D$D}
D$Fj
D$p9D$
d$\[^_]
d$\[^_]
LD f9
tDDf9
LD,f9
LD f9
UWVS
T$4e
T$0f
D$tZ
D$zg
D$|g
D$~}
D$H2
;|$,
D$8-
L$L;T$0
Ll$<
l$<f
[^_]
lT~f9
|Tff9
r f9
|TZf9
UWVS
;t$DtG
;t$D
d$,[^_]
UWVS
d$<[^_]
d$<[^_]
UWVS
[^_]
UWVS
d$,[^_]
[^_]
[^_]
l$8t	
n(;l$Dt 
tM;)u
l$8t	
n(;l$Dt 
tM;)u
|$4t
;~(t 
|$Dt
;~(t 
t8;9u
UWVS
[^_]
T$,1
T$,e3
UWVS
L$L1
3l$ 
D$ 1D$<
l$(9l$
t$t1
L$Le3
d$\[^_]
D$ 3
$1D$<
T$<1
T$<e3
9T$0v
d$([
d$([
4$xD
r/v'
9t$Ds
srtp: in stream 0x%x: 
	SSRC collision
	packet index limit reached
%s: cipher key: %s
%s: auth key:   %s
%s: rtcp cipher key: %s
%s: rtcp auth key:   %s
%s: function srtp_unprotect
%s: keystream prefix: %s
%s: computed auth tag:    %s
%s: packet auth tag:      %s
%s: function srtp_protect
%s: srtp auth tag:    %s
%s: srtcp index: %x
%s: srtcp auth tag:    %s
srtp
	key usage soft limit reached
	key usage hard limit reached
	unknown event reported to handler
%s: cloning stream (SSRC: 0x%08x)
%s: found rtp_salt_len > 0, generating salt
%s: found rtcp_salt_len > 0, generating rtcp salt
%s: initializing stream (SSRC: 0x%08x)
%s: using provisional stream (SSRC: 0x%08x)
%s: estimated u_packet index: %016llx
%s: estimated packet index: %016llx
%s: srtcp using provisional stream (SSRC: 0x%08x)
%s: srtcp computed tag:       %s
%s: srtcp tag from packet:    %s
%s: EKT not in use
%s: writing EKT EMK: %s,
%s: writing EKT ROC: %s,
%s: writing EKT ISN: %s,
%s: writing EKT SPI: %s,
%s: running self-test for cipher %s
%s: random plaintext length %d
%s: random test case %d failed
%s: testing encryption
%s: plaintext:    %s
%s: ciphertext:   %s
%s: test case %d failed
%s: (failure at byte %d)
%s: c computed: %s
%s: c expected: %s
%s: testing decryption
%s: ciphertext:    %s
%s: plaintext:   %s
%s: p computed: %s
%s: p expected: %s
%s: plaintext[2]: %s
cipher
%s: allocating cipher with key length %d
%s: initializing null cipher
c|w{
9JLX
~=d]
P~AeS
-Xt!
X>k'
Q3`bS
pHhX
lZrN
6-9'
$6.:
ZwKi
T~Fb
&x	nY
*?#1
>8$4,
pHl\t
WBPQ
S~Ae
Xt!)I
Q3EbS
+XpHh
@Cwg
pNlZr
'6-9d
[T:$6.
 iZwK
*C<"
Df;4[
bT~F
1*?#0
f7tN
,8$4_
(<IA
tHl\B
eS~A
U 0m
Xti)I
EbSw
hXpH
*fU(
H2+p
rNlZ
9'6-
!h\T
[.:$6g
KiZw
Df~4[
Bc"@
j_FbT~
#1*?
h4,8$@_
2\tHlWB
PQAeS~
U vm
Ebdw
HhXpE
ZrNl
=-9'6
!h[T
6.:$
awKiZ
~4[C)v
j~FbT
1?#1*
[_=o
$4,8
l\tH
T`00P
V++}
L&&jl66Z~??A
Oh44\Q
sb11S*
RF##e
&N''i
X,,t4
v;;M
R)){
>^//q
,@  `
r99K
f33U
x<<D%
p88H
uB!!c 
z==G
D""fT**~;
;d22Vt::N
H$$l
Cn77Y
J%%o\..r8
|>>Bq
j55_
P((x
Z--w
P`00
gg}V++
jL&&Zl66A~??
\h44
Sb11?*
eF##^
iN''
tX,,.4
RRMv;;a
{R))>
q^//
`@  
Kr99
MMUf33
PPDx<<
Hp88
cB!!0 
DD9.
~~Gz==
]]+2
fD""~T**
Vd22Nt::
lH$$
Yn77
xxoJ%%r\..$8
tt!>
ppB|>>
aa_j55
UUxP((z
wZ--
0P`0
g+}V+
&jL&6Zl6?A~?
4\h4
1Sb1
#eF#
'iN'
,tX,
R;Mv;
){R)
/q^/
 `@ 
9Kr9J
M3Uf3
P<Dx<
8Hp8
!cB!
~=Gz=d
"fD"*~T*
2Vd2:Nt:
$lH$\
7Yn7m
x%oJ%.r\.
p>B|>
a5_j5W
U(xP(
-wZ-
00P`
++}V
=&&jL66Zl??A~
44\h
11Sb
##eF
''iN
,,tX
-6nn
;;Mv
})){R
//q^
  `@
g99KrJJ
33Uf
<<Dx
!88Hp
!!cB
==Gzdd
+2ss
""fD**~T
22Vd::Nt
$$lH\\
77Ynmm
%%oJ..r\
!>KK
>>B|
55_jWW
3"ii
((xP
)--wZ
:,R	j
lpHP
}%s: setting iv: %s
%s: set_counter: %s
%s: key:  %s
%s: offset: %s
%s: set_octet: %s
%s: counter:    %s
%s: ciphertext: %s
%s: block index: %d
aes icm
%s: iv: %s
%s: inblock:  %s
%s: outblock: %s
aes cbc
%s: allocating auth func with key length %d
%s:                           tag length %d
%s: (update) running sha1_core()
%s: (update) not running sha1_core()
%s: (final) running sha1_core()
%s: (final) running sha1_core() again
%s: input: %s
%s: intermediate state: %s
%s: output: %s
%s: ipad: %s
hmac sha-1
%s: running self-test for auth function %s
%s: key: %s
%s: data: %s
%s: tag computed: %s
%s: tag expected: %s
%s:   (mismatch at octet %d)
auth func
?456789:;<=
 !"#$%&'()*+,-./0123%s: bit count: %d
%s: poker test: %f
%s: >25 runs: %d
%s: >25 gaps: %d
%s: >25 runs (2): %d
%s: >25 gaps (2): %d
%s: runs test
%s:   runs[]: %d
%s:   gaps[]: %d
%s: >25 runs (3): %d
%s: >25 gaps (3): %d
%s: >25 runs (4): %d
%s: >25 gaps (4): %d
%s: stat: bit count: %d
%s: stat: poker test: %f
%s: stat: failed poker test
%s: passed random stat test
stat test
%s: couldn't get rand bytes: %d
%s: stat: failed monobit test %d
%s: stat: failed run/gap test
%s: failed stat test (try number %d)
6j?H
Etesting rand_source...
failed
passed
cipher: %s
  instance count: %d
  self-test: 
failed with error code %d
debug modules loaded:
auth func: %s
  %s 
(on)
(off)
crypto
crypto kernel
%s: freeing memory for cipher %s
%s: freeing memory for authentication %s
%s: freeing memory for debug module %s
%s: (location: %p) allocated
%s: (location: %p) freed
alloc
%s: allocation failed (asked for %d bytes)
/dev/urandom
;*2$"<
null cipher
pPum
aes integer counter mode
p,}9
"3DUfw
.#D8p
"3DUfw
aes cipher block chaining (cbc) mode
null authentication function
hmac sha-1 authentication function
Hi There
libsrtp.so.0.0.0.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rel.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.bss
.init
.rel.plt
.got.plt
.got
.text
.fini_array
.init_array
