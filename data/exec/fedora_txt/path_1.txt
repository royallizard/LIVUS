td\M
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
g_snprintf
gegl_operation_filter_get_type
g_type_module_register_type
g_slice_alloc0
cairo_image_surface_create_for_data
cairo_create
gegl_path_foreach_flat
cairo_set_line_width
gegl_color_get_rgba
cairo_destroy
cairo_in_stroke
cairo_in_fill
babl_format
gegl_operation_set_format
gegl_matrix3_parse_string
gegl_path_set_matrix
gegl_operation_source_get_bounding_box
gegl_path_get_bounds
gegl_rectangle_bounding_box
gegl_buffer_copy
g_type_check_instance_cast
g_object_set_data
gegl_buffer_clear
gegl_path_get_flat_path
gegl_rectangle_intersect
gegl_buffer_is_shared
g_log
g_static_mutex_get_mutex_impl
g_mutex_lock
gegl_buffer_linear_open
cairo_translate
g_str_equal
cairo_set_fill_rule
cairo_set_source_rgba
cairo_fill
g_mutex_unlock
gegl_buffer_linear_close
gegl_path_point_dist
gegl_buffer_unlock
gegl_buffer_try_lock
gegl_path_point_lerp
gegl_color_get_pixel
g_malloc
gegl_buffer_get_unlocked
gegl_buffer_set_unlocked
g_free
g_print
gegl_buffer_get_extent
g_assertion_message_expr
g_type_class_peek_parent
gegl_operation_get_type
g_type_check_class_cast
g_dgettext
gegl_operation_class_set_keys
gegl_param_spec_color_from_string
g_object_class_install_property
g_param_spec_double
g_param_spec_string
gegl_param_spec_path
g_object_set_data_full
gegl_color_new
g_object_unref
g_slice_free1
g_value_set_object
g_value_set_double
g_value_set_string
g_type_name
gegl_path_new
g_value_peek_pointer
g_value_dup_object
g_signal_connect_data
g_value_get_double
g_value_get_string
g_strdup
g_signal_handler_disconnect
gegl_operation_invalidate
cairo_close_path
cairo_curve_to
cairo_line_to
cairo_move_to
gegl_chant_get_type
gegl_module_query
gegl_module_register
libgmodule-2.0.so.0
libgio-2.0.so.0
libgobject-2.0.so.0
libgthread-2.0.so.0
libglib-2.0.so.0
libcairo.so.2
libpthread.so.0
libc.so.6
__stack_chk_fail
_edata
__bss_start
_end
path.so
GLIBC_2.1.3
GLIBC_2.4
t$8V
RVPW
UWVS
D$H1
D$<P
D$8P
D$4P
D$0P
T$<e3
L[^_]
D$X1
D$Le3
P[^_
UWVS
L$T1
)D$8RP
D$4P
D$0P
D$,P
D$(P
)d$P
D$8PP
L$Le3
\[^_]
UWVS
QRQP
[^_]
D$8Y
t$0P
PVWh
|$L+|$d
D$ ;D$P
|$\W
UWVS
|$LW
Y]PV
Y]PV
Y]PV
\$<UP
Y]PV
\$,UP
Y]PV
?h3333
Y]PV
Y]PV
Y]PV
Y]PV
Pj	W
<[^_]
ZYWP
UWVS
E4^ZjPP
[^_]
ZYWP
ZYVP
L$01
D$$PR
D$,e3
<Ltr~(<M
<Cul
GeglChantpath.c
     
RaGaBaA float
output
input
B'aG'aR'aA u8
evenodd
path-radius
using buffer extent
RGBA float
s.buf
GEGL-path.c
stroking uninitialized path
Renders a brush stroke
gegl-0.2
description
render
categories
gegl:path
name
Fill Color
rgba(0.0,0.0,0.0,0.6)
fill
Stroke Color
rgba(0.0,0.0,0.0,0.0)
Stroke width
stroke_width
Stroke opacity
stroke_opacity
Hardness
stroke_hardness
Fill rule
nonzero
fill_rule
Transform
transform
The fill opacity to use
Fill opacity
fill_opacity
Vector
chant-data
property
GEGL-../../gegl/gegl-chant.h
changed
path.c:449
%s uh?:%c
can't stroke for instruction: %i
Color of paint to use for filling, use 0 opacity to disable filling
Color of paint to use for stroking
The width of the brush used to stroke the path
Opacity of stroke, note, does not behave like SVG since at the moment stroking is done using an airbrush tool
Hardness of the brush, 0.0 for a soft brush, 1.0 for a hard brush
How to determine what to fill (nonzero|evenodd
SVG style description of transform
A GeglVector representing the path of the stroke
%s:%d: invalid %s id %u for "%s" of type '%s' in '%s'
gegl_path_stamp
MbP?
;*2$"
gcc 8.0.1 20180218
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
path.so-0.2.0-38.fc28.i386.debug
7zXZ
	3LDJ(
;(	.
RB6a
S(].
']mN
W<M9
6b>x
Wc0v
tDTn
#-k|
7hoI}v@
C_+F
#xeW
(W@6+
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.data.rel.ro
.dynamic
.got
.bss
.gnu.build.attributes
.gnu_debuglink
.gnu_debugdata
