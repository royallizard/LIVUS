__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
strcasecmp
free
__strdup
strlen
strcmp
ssnprintf
localtime_r
strftime
uc_get_rate
plugin_log
escape_string
stderr
__fprintf_chk
__xstat
fopen
fileno
getpid
fcntl
fclose
__errno_location
check_create_dir
fwrite
fputc
stdout
sstrerror
__stack_chk_fail
__assert_fail
module_register
plugin_register_config
plugin_register_write
libc.so.6
_edata
__bss_start
_end
csv.so
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.2.5
%z# 
%r# 
%j# 
%b# 
%Z# 
%R# 
%J# 
%B# 
%:# 
%2# 
%*# 
%"# 
ATSubH
[A\]
=B" 
~8Hc
AWAVL
AUATUH
M\D)
D9k@
L2@I
[]A\A]A^A_
D$8%
~/E1
;k@|
ffffff.
DataDir
stdout
stderr
StoreRates
true
%s-%s/
%s-%s
-%Y-%m-%d
csv.c
,%lf
,%llu
,%li
,%lu
PUTVAL %s interval=%i %s
epoch
stat(%s) failed: %s
stat(%s): Not a regular file!
csv plugin: DS type does not match value list type
csv plugin: localtime_r failed
0 == __extension__ ({ size_t __s1_len, __s2_len; (__builtin_constant_p (ds->type) && __builtin_constant_p (vl->type) && (__s1_len = strlen (ds->type), __s2_len = strlen (vl->type), (!((size_t)(const void *)((ds->type) + 1) - (size_t)(const void *)(ds->type) == 1) || __s1_len >= 4) && (!((size_t)(const void *)((vl->type) + 1) - (size_t)(const void *)(vl->type) == 1) || __s2_len >= 4)) ? __builtin_strcmp (ds->type, vl->type) : (__builtin_constant_p (ds->type) && ((size_t)(const void *)((ds->type) + 1) - (size_t)(const void *)(ds->type) == 1) && (__s1_len = strlen (ds->type), __s1_len < 4) ? (__builtin_constant_p (vl->type) && ((size_t)(const void *)((vl->type) + 1) - (size_t)(const void *)(vl->type) == 1) ? __builtin_strcmp (ds->type, vl->type) : (__extension__ ({ __const unsigned char *__s2 = (__const unsigned char *) (__const char *) (vl->type); register int __result = (((__const unsigned char *) (__const char *) (ds->type))[0] - __s2[0]); if (__s1_len > 0 && __result == 0) { __result = (((__const unsigned char *) (__const char *) (ds->type))[1] - __s2[1]); if (__s1_len > 1 && __result == 0) { __result = (((__const unsigned char *) (__const char *) (ds->type))[2] - __s2[2]); if (__s1_len > 2 && __result == 0) __result = (((__const unsigned char *) (__const char *) (ds->type))[3] - __s2[3]); } } __result; }))) : (__builtin_constant_p (vl->type) && ((size_t)(const void *)((vl->type) + 1) - (size_t)(const void *)(vl->type) == 1) && (__s2_len = strlen (vl->type), __s2_len < 4) ? (__builtin_constant_p (ds->type) && ((size_t)(const void *)((ds->type) + 1) - (size_t)(const void *)(ds->type) == 1) ? __builtin_strcmp (ds->type, vl->type) : (__extension__ ({ __const unsigned char *__s1 = (__const unsigned char *) (__const char *) (ds->type); register int __result = __s1[0] - ((__const unsigned char *) (__const char *) (vl->type))[0]; if (__s2_len > 0 && __result == 0) { __result = (__s1[1] - ((__const unsigned char *) (__const char *) (vl->type))[1]); if (__s2_len > 1 && __result == 0) { __result = (__s1[2] - ((__const unsigned char *) (__const char *) (vl->type))[2]); if (__s2_len > 2 && __result == 0) __result = (__s1[3] - ((__const unsigned char *) (__const char *) (vl->type))[3]); } } __result; }))) : __builtin_strcmp (ds->type, vl->type)))); })
csv plugin: uc_get_rate failed.
csv plugin: fopen (%s) failed: %s
csv plugin: flock (%s) failed: %s
value_list_to_string
;*3$"
csv.so.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rela.plt
.got.plt
.got
.text
