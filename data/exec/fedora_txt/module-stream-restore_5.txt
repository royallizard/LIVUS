__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
dbus_message_get_args
pa_hashmap_get
pa_dbus_send_basic_value_reply
pa_dbus_send_error
pa_log_level_meta
abort
__stack_chk_fail
dbus_message_iter_get_signature
dbus_free
pa_channel_map_init
pa_cvolume_init
dbus_message_iter_recurse
dbus_message_iter_get_basic
dbus_message_iter_next
dbus_message_iter_get_arg_type
dbus_message_new_signal
dbus_message_append_args
pa_dbus_protocol_send_signal
dbus_message_unref
dbus_message_iter_open_container
dbus_message_iter_append_basic
dbus_message_iter_close_container
dbus_message_iter_init_append
pa_tagstruct_new
pa_tagstruct_putu8
pa_tagstruct_put_boolean
pa_tagstruct_put_channel_map
pa_tagstruct_put_cvolume
pa_tagstruct_puts
strlen
pa_tagstruct_data
pa_database_set
pa_tagstruct_free
pa_idxset_first
pa_xfree
pa_idxset_next
pa_proplist_get_stream_group
strcmp
pa_source_output_set_mute
pa_namereg_get
pa_source_output_move_to
pa_sink_input_set_mute
pa_sink_input_move_to
pa_subscription_post
pa_cvolume_remap
pa_source_output_set_volume
pa_sink_input_set_volume
pa_tagstruct_putu32
pa_native_connection_get_pstream
pa_pstream_send_tagstruct_with_creds
pa_rtclock_now
pa_core_rttime_new
pa_database_sync
pa_database_unset
pa_hashmap_remove_and_free
pa_dbus_send_empty_reply
pa_xmalloc
pa_xstrdup
pa_sprintf_malloc
pa_dbus_protocol_add_interface
pa_dbus_send_basic_variant_reply
pa_dbus_protocol_remove_interface
pa_idxset_remove_by_data
pa_database_get
pa_tagstruct_new_fixed
pa_xmalloc0
pa_tagstruct_getu8
pa_tagstruct_get_boolean
pa_tagstruct_get_channel_map
pa_tagstruct_get_cvolume
pa_tagstruct_gets
pa_tagstruct_eof
pa_channel_map_valid
pa_cvolume_valid
pa_cvolume_compatible_with_channel_map
pa_datum_free
pa_namereg_is_valid_name
dbus_message_new_method_return
pa_dbus_append_basic_variant_dict_entry
dbus_connection_send
pa_cvolume_equal
pa_source_output_new_data_set_muted
pa_source_output_new_data_set_volume
pa_sink_input_new_data_set_muted
pa_sink_input_new_data_set_volume
pa_sink_input_get_state
pa_source_output_new_data_set_source
pa_sink_input_new_data_set_sink
dbus_message_iter_init
pa_hashmap_put
pa_tagstruct_getu32
pa_idxset_put
pa_database_first
pa_database_next
pa_xstrndup
pa_native_connection_get_client
pa_proplist_gets
pa_channel_map_equal
pa_hashmap_iterate
pa_database_clear
fopen
feof
fgets
pa_strip_nl
strcspn
strspn
pa_atod
fclose
pa_sw_volume_from_dB
pa_cvolume_set
pa_channel_map_init_mono
pa_open_config_file
__errno_location
pa_cstrerror
pa_idxset_get_by_index
pa_source_output_is_volume_readable
pa_source_output_get_volume
pa_sink_input_is_volume_readable
pa_sink_input_get_volume
pa_hashmap_size
__assert_fail
pa_dbus_append_basic_array_variant_dict_entry
pa_dbus_send_basic_array_variant_reply
module_stream_restore_LTX_pa__get_author
module_stream_restore_LTX_pa__get_description
module_stream_restore_LTX_pa__get_version
module_stream_restore_LTX_pa__load_once
module_stream_restore_LTX_pa__get_usage
module_stream_restore_LTX_pa__done
pa_dbus_protocol_unregister_extension
pa_hashmap_free
pa_dbus_protocol_unref
pa_subscription_free
pa_database_close
pa_native_protocol_remove_ext
pa_native_protocol_unref
pa_idxset_free
module_stream_restore_LTX_pa__init
pa_modargs_new
pa_modargs_get_value_boolean
pa_idxset_trivial_compare_func
pa_idxset_trivial_hash_func
pa_idxset_new
pa_native_protocol_get
pa_native_protocol_install_ext
pa_native_protocol_hooks
pa_module_hook_connect
pa_subscription_new
pa_state_path
pa_database_open
memchr
pa_modargs_free
pa_modargs_get_value
pa_dbus_protocol_get
pa_idxset_string_compare_func
pa_idxset_string_hash_func
pa_hashmap_new_full
pa_dbus_protocol_register_extension
libprotocol-native.so
libpulsecore-12.2.so
libltdl.so.7
liborc-0.4.so.0
libtdb.so.1
libspeexdsp.so.1
libsoxr.so.0
libpulse.so.0
libpulsecommon-12.2.so
libX11-xcb.so.1
libX11.so.6
libxcb.so.1
libICE.so.6
libSM.so.6
libXtst.so.6
libsystemd.so.0
libsndfile.so.1
libasyncns.so.0
libdbus-1.so.3
libcap.so.2
libpthread.so.0
librt.so.1
libdl.so.2
libm.so.6
libc.so.6
_edata
__bss_start
_end
module-stream-restore.so
GLIBC_2.2.5
PULSE_0
GLIBC_2.4
LIBDBUS_1_3
/usr/lib64/pulseaudio:/usr/lib64/pulse-12.2/modules
u+UH
ATUSH
[]A\
AWAVAUATUSH
l$ H
[]A\A]A^A_
AWAVAUATUSH
l$Pts1
[]A\A]A^A_
AUATUSH
D$H1
D$HdH3
X[]A\A]
AUATUH
D$H1
D$HdH3
P]A\A]
AVAUATUSH
D$(1
T$(dH3
0[]A\A]A^
AWAVAUATUSH
[]A\A]A^A_
)D$ 
)L$0
)T$@
)\$P
)d$`
)l$p
D$ H
)D$ 
)L$0
)T$@
)\$P
)d$`
)l$p
D$ H
AUATUSH
[]A\A]
H9q`
ATUSH
 []A\
ATUSH
[]A\
AWAVAUATUSH
D$81
|$hf
)D$ 
t$(H
L$8dH3
H[]A\A]A^A_
AWAVAUATUSH
d$`L
[]A\A]A^A_
AUATI
[]A\A]
AUATUH
]A\A]
AWAVAUATUSH
oT$ 
o\$0f
od$@
ol$P
ot$`
o|$pH
[]A\A]A^A_
AVAUATUH
D$H1
D$HdH3
X]A\A]A^
AUATUH
]A\A]
AVAUATUSH
[]A\A]A^
)T$ 
)\$0
)d$@
)l$P
)t$`
)|$p
AVAUATUSH
[]A\A]A^
)T$ 
)\$0
)d$@
)l$P
)t$`
)|$p
AWAVAUATUSH
([]A\A]A^A_
AWAVAUATUSH
([]A\A]A^A_
AWAVAUATUSH
E`H9
([]A\A]A^A_
AWAVAUATUSH
E`L9
t$HH
([]A\A]A^A_
AWAVAUATUH
A\A]A^A_
A\A]A^A_
AVAUATUH
]A\A]A^
AWAVAUATUSH
|$@I
t$,L
t$0L
t$8H
[]A\A]A^A_
t$0H
AWAVAUATUSH
t$(A
D$(H
[]A\A]A^A_
|$0H
|$hH
t$@H
t$@L
|$hL
t$01
\$@L
oD$@
)D$0H
|$h1
t$8H
|$0H
t$,L
t$&L
t$0L
t$@L
t$'L
D$0H
D$'H
|$@A
t$0H
T$0H
t$0L
t$0H
t$0L
D$@1
AWAVAUATUSH
L$ L
[]A\A]A^A_
l$ 1
ATSH
AWAVAUATUSH
[]A\A]A^A_
)L$ 
)T$0
)\$@
)d$P
)l$`
)t$p
D$`H
D$`H
D$`H
D$`H
D$`H
D$`H
D$`H
AUATUSH
[]A\A]
AWAVAUATI
t$`L
]A\A]A^A_
AUATUH
]A\A]
AUATI
([]A\A]
ATUH
AWAVAUATUSH
T$KH
T$LH
T$MH
T$NH
T$OH
L$MH
L$NH
D$K	
t$pH
d$(H
oL$p
)L$PM
t$XH
t$`H
|$pA
t$8H
t$8H
T$ H
T$ H
[]A\A]A^A_
d$(H
D$XL
t$`1
|$pL
ol$p
)l$`M
t$hH
conn
No such stream restore entry.
iter
a(uu)
Invalid channel position: %u
Invalid volume: %u
e->muted_valid
entry
module-stream-restore.id
sink-input
source-output
e == u->save_time_event
Synced.
*entry_name
%s/%s%u
{sv}
new_data
source
sink
u->restore_device
e = entry_read(u, name)
entry_write(u, name, e, true)
(null)
application.process.binary
Client %s changes entry %s.
stream-restore.table
Failed to open %s: %s
Setting %s to %0.2f dB.
sink_input->volume_writable
./pulse/xmalloc.h
n < INT_MAX/k
Lennart Poettering
12.2-rebootstrapped
u->dbus_entries
restore_volume
restore_muted
on_hotplug
on_rescue
stream-volumes
Size does not match.
Version mismatch.
Device has missing NUL byte.
Card has missing NUL byte.
*_head == _item
Removing an invalid entry: %s
fallback_table
DeviceUpdated
VolumeUpdated
MuteUpdated
NewEntry
EntryRemoved
Remove
AddEntry
GetEntryByName
mute
apply_immediately
Index
Device
Volume
Mute
InterfaceRevision
Entries
Assertion '%s' failed at %s:%u, function %s(). Aborting.
modules/module-stream-restore.c
dbus_message_get_args(msg, NULL, DBUS_TYPE_STRING, &name, DBUS_TYPE_INVALID)
org.PulseAudio.Core1.NotFoundError
signature = dbus_message_iter_get_signature(iter)
(!strcmp((signature),("a(uu)")))
org.freedesktop.DBus.Error.InvalidArgs
dbus_message_iter_next(&struct_iter)
Too many channels: %u. The maximum is %u.
org.PulseAudio.Ext.StreamRestore1.RestoreEntry
signal_msg = dbus_message_new_signal(de->object_path, INTERFACE_ENTRY, entry_signals[ENTRY_SIGNAL_MUTE_UPDATED].name)
dbus_message_append_args(signal_msg, DBUS_TYPE_BOOLEAN, &muted, DBUS_TYPE_INVALID)
signal_msg = dbus_message_new_signal(de->object_path, INTERFACE_ENTRY, entry_signals[ENTRY_SIGNAL_DEVICE_UPDATED].name)
dbus_message_append_args(signal_msg, DBUS_TYPE_STRING, &device, DBUS_TYPE_INVALID)
org.PulseAudio.Ext.StreamRestore1
/org/pulseaudio/stream_restore1
signal_msg = dbus_message_new_signal(OBJECT_PATH, INTERFACE_STREAM_RESTORE, signals[SIGNAL_NEW_ENTRY].name)
dbus_message_append_args(signal_msg, DBUS_TYPE_OBJECT_PATH, &entry->object_path, DBUS_TYPE_INVALID)
signal_msg = dbus_message_new_signal(OBJECT_PATH, INTERFACE_STREAM_RESTORE, signals[SIGNAL_ENTRY_REMOVED].name)
dbus_message_iter_open_container(iter, DBUS_TYPE_ARRAY, "(uu)", &array_iter)
dbus_message_iter_close_container(iter, &array_iter)
dbus_message_iter_open_container(&array_iter, DBUS_TYPE_STRUCT, NULL, &struct_iter)
dbus_message_iter_append_basic(&struct_iter, DBUS_TYPE_UINT32, &e->channel_map.map[i])
dbus_message_iter_append_basic(&struct_iter, DBUS_TYPE_UINT32, &e->volume.values[i])
dbus_message_iter_close_container(&array_iter, &struct_iter)
signal_msg = dbus_message_new_signal(de->object_path, INTERFACE_ENTRY, entry_signals[ENTRY_SIGNAL_VOLUME_UPDATED].name)
dbus_message_iter_open_container(iter, DBUS_TYPE_VARIANT, "a(uu)", &variant_iter)
dbus_message_iter_close_container(iter, &variant_iter)
Restoring volume for sink input %s.
Restoring mute state for sink input %s.
Ensuring device is not saved for stream %s.
Restoring device for stream %s.
Restoring volume for source output %s.
Restoring mute state for source output %s.
pa_database_unset(de->userdata->database, &key) == 0
pa_hashmap_remove_and_free(de->userdata->dbus_entries, de->entry_name) >= 0
pa_dbus_protocol_add_interface(u->dbus_protocol, de->object_path, &entry_interface_info, de) >= 0
pa_dbus_protocol_remove_interface(de->userdata->dbus_protocol, de->object_path, entry_interface_info.name) >= 0
Invalid device name stored in database for stream %s
Invalid card name stored in database for stream %s
Invalid channel map stored in database for stream %s
Invalid volume stored in database for stream %s
e = entry_read(de->userdata, de->entry_name)
(reply = dbus_message_new_method_return(msg))
dbus_message_iter_open_container(&msg_iter, DBUS_TYPE_ARRAY, "{sv}", &dict_iter)
dbus_message_iter_open_container(&dict_iter, DBUS_TYPE_DICT_ENTRY, NULL, &dict_entry_iter)
dbus_message_iter_append_basic(&dict_entry_iter, DBUS_TYPE_STRING, &entry_property_handlers[ENTRY_PROPERTY_HANDLER_VOLUME].property_name)
dbus_message_iter_close_container(&dict_iter, &dict_entry_iter)
dbus_message_iter_close_container(&msg_iter, &dict_iter)
dbus_connection_send(conn, reply, NULL)
entry_write(de->userdata, de->entry_name, e, true)
reply = dbus_message_new_method_return(msg)
u->restore_volume || u->restore_muted
Not restoring volume for source output %s, because it connects a filter to the master source.
Not restoring volume for source output %s, because its volume can't be changed.
Not restoring volume for source output %s, because already set.
Not restoring mute state for source output %s, because already set.
Not restoring volume for sink input %s, because it connects a filter to the master sink.
Not restoring volume for sink input %s, because its volume can't be changed.
Not restoring volume for sink input %s, because already set.
Not restoring mute state for sink input %s, because already set.
u->on_rescue && u->restore_device
u->on_hotplug && u->restore_device
Not restoring device for stream %s, because already set
Not restoring device for stream %s, because it connects a filter to the master source.
Not restoring device for stream %s, because already set to '%s'.
Not restoring device for stream %s, because it connects a filter to the master sink.
dbus_message_iter_init(msg, &msg_iter)
dbus_message_iter_next(&msg_iter)
An empty string was given as the entry name.
pa_hashmap_put(u->dbus_entries, dbus_entry->entry_name, dbus_entry) == 0
(de = pa_hashmap_get(u->dbus_entries, name))
pa_hashmap_put(u->dbus_entries, de->entry_name, de) == 0
/etc/pulse/stream-restore.table
[%s:%u] failed to parse line - too few words
[%s:%u] Positive dB values are not allowed, not setting entry %s.
[%s:%u] Couldn't parse '%s' as a double, not setting entry %s.
(t & PA_SUBSCRIPTION_EVENT_FACILITY_MASK) == PA_SUBSCRIPTION_EVENT_SOURCE_OUTPUT
source_output->volume_writable
Storing volume/mute/device for stream %s.
de = pa_hashmap_get(u->dbus_entries, name)
Automatically restore the volume/mute/device state of streams
restore_device=<Save/restore sinks/sources?> restore_volume=<Save/restore volumes?> restore_muted=<Save/restore muted states?> on_hotplug=<When new device becomes available, recheck streams?> on_rescue=<When device becomes unavailable, recheck streams?> fallback_table=<filename>
pa_dbus_protocol_unregister_extension(u->dbus_protocol, INTERFACE_STREAM_RESTORE) >= 0
pa_dbus_protocol_remove_interface(u->dbus_protocol, OBJECT_PATH, stream_restore_interface_info.name) >= 0
Failed to parse module arguments
restore_device=, restore_volume=, restore_muted=, on_hotplug= and on_rescue= expect boolean arguments
Neither restoring volume, nor restoring muted, nor restoring device enabled!
Failed to open volume database '%s': %s
Successfully opened database file '%s'.
Invalid device name stored in database for legacy stream
Invalid card name stored in database for legacy stream
Invalid channel map stored in database for legacy stream
Invalid volume stored in database for legacy stream
pa_database_unset(u->database, &key) >= 0
entry_write(u, item->entry_name, item->entry, true)
Upgrading a legacy entry to the current format: %s
pa_dbus_protocol_add_interface(u->dbus_protocol, OBJECT_PATH, &stream_restore_interface_info, u) >= 0
pa_dbus_protocol_register_extension(u->dbus_protocol, INTERFACE_STREAM_RESTORE) >= 0
module_stream_restore_LTX_pa__done
module_stream_restore_LTX_pa__done
entry_copy
entry_copy
subscribe_callback
subscribe_callback
dbus_entry_new
dbus_entry_new
fill_db
fill_db
legacy_entry_read
legacy_entry_read
clean_up_db
clean_up_db
extension_cb
extension_cb
connection_unlink_hook_cb
connection_unlink_hook_cb
sink_input_new_hook_callback
sink_input_new_hook_callback
source_output_new_hook_callback
source_output_new_hook_callback
sink_put_hook_callback
sink_put_hook_callback
source_put_hook_callback
source_put_hook_callback
sink_unlink_hook_callback
sink_unlink_hook_callback
source_unlink_hook_callback
source_unlink_hook_callback
sink_input_fixate_hook_callback
sink_input_fixate_hook_callback
source_output_fixate_hook_callback
source_output_fixate_hook_callback
send_entry_removed_signal
send_entry_removed_signal
handle_entry_remove
handle_entry_remove
handle_entry_get_index
handle_entry_get_index
handle_entry_get_name
handle_entry_get_name
handle_entry_get_device
handle_entry_get_device
handle_entry_set_device
handle_entry_set_device
handle_entry_get_volume
handle_entry_get_volume
handle_entry_set_volume
handle_entry_set_volume
handle_entry_get_mute
handle_entry_get_mute
handle_entry_set_mute
handle_entry_set_mute
append_volume_variant
append_volume_variant
handle_entry_get_all
handle_entry_get_all
dbus_entry_free
dbus_entry_free
entry_free
entry_free
save_time_callback
save_time_callback
entry_apply
entry_apply
entry_write
entry_write
send_new_entry_signal
send_new_entry_signal
send_device_updated_signal
send_device_updated_signal
append_volume
append_volume
send_volume_updated_signal
send_volume_updated_signal
send_mute_updated_signal
send_mute_updated_signal
entry_read
entry_read
get_volume_arg
get_volume_arg
handle_add_entry
handle_add_entry
handle_get_entry_by_name
handle_get_entry_by_name
handle_get_interface_revision
handle_get_interface_revision
handle_get_entries
handle_get_entries
_pa_xnew_internal
get_entries
get_entries
handle_get_all
handle_get_all
module_stream_restore_LTX_pa__init
module_stream_restore_LTX_pa__init
:*3$"
3p870
gcc 9.0.1 20190209
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3h870
gcc 9.0.1 20190209
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3c870
gcc 9.0.1 20190209
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3s870
gcc 9.0.1 20190209
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
3e870
gcc 9.0.1 20190209
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA!stack_realign
module-stream-restore.so-12.2-3.fc30.x86_64.debug
.data
.rodata
.shstrtab
.plt.sec
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.gnu.version_r
.eh_frame_hdr
.dynstr
.gnu.build.attributes
.bss
.init
.rela.plt
.got
.text
.fini_array
.init_array
.note.gnu.property
