/lib64/ld-linux-x86-64.so.2
  I`
t$oY
Pk	C
"!|H
[D.(
dFO}
DLJy
libzebra.so.0
master
_Jv_RegisterClasses
_ITM_deregisterTMCloneTable
__gmon_start__
_ITM_registerTMCloneTable
zmalloc
thread_master_create
vty_read_config
zapi_ipv6_route
thread_fetch
zclient_init
access_list_delete_hook
distribute_list_init
prefix_list_add_hook
config_show_distribute
zprivs_init
install_default
distribute_list_add_hook
thread_call
cmd_init
zclient_serv_path_set
safe_strerror
_zlog_assert_failed
vector_init
vty_out
proto_redistnum
zlog_notice
zebra_interface_state_read
zlog_rotate
vector_unset
stream_get
zclient_new
vector_set
access_list_init
if_add_hook
stream_getc
memory_init
stream_getl
zapi_ipv4_route
if_is_operative
zlog_warn
signal_init
funcname_thread_add_timer_msec
zebra_route_string
zlog_err
str2prefix
access_list_apply
prefix_list_lookup
zebra_interface_add_read
access_list_lookup
zfree
distribute_list_delete_hook
zlog_default
prefix_list_init
if_flag_dump
pid_output
if_lookup_by_name
zlog_set_level
distribute_lookup
no_interface_cmd
zebra_interface_address_read
zclient_stop
install_node
install_element
zcalloc
access_list_add_hook
vty_serv_sock
funcname_thread_add_read
prefix_list_apply
print_version
vty_init
thread_cancel
zclient_redistribute
prefix_list_delete_hook
apply_mask_ipv4
openzlog
zlog_debug
apply_mask_ipv6
if_lookup_by_index
inet6_ntoa
iflist
quagga_gettime
libcap.so.2
libcrypt.so.1
libnetsnmpmibs.so.30
libsensors.so.4
libdl.so.2
librpm.so.7
librpmio.so.7
libnetsnmpagent.so.30
libwrap.so.0
libnetsnmp.so.30
libssl.so.10
libcrypto.so.10
libm.so.6
librt.so.1
libc.so.6
fflush
__printf_chk
exit
strncmp
strrchr
__strdup
perror
__isoc99_sscanf
__fdelt_chk
inet_ntoa
inet_ntop
fork
__stack_chk_fail
unlink
listen
select
realloc
fsync
abort
memchr
inet_pton
strtol
strlen
__errno_location
bind
memcmp
dup2
__fprintf_chk
stdout
memcpy
strtoul
setsockopt
umask
optarg
stderr
__snprintf_chk
getopt_long
if_nametoindex
sendmsg
usleep
if_indextoname
fwrite
gettimeofday
__memcpy_chk
srandom
close
open
qsort
__cxa_finalize
setsid
fcntl
memmove
strcmp
recvmsg
__libc_start_main
snprintf
_edata
__bss_start
_end
/usr/lib64/quagga
xroutes_estimate
parse_eui64
format_prefix
zebra_node
seqno_time
babel_load_state_file
find_xroute
babel_set_resend_delay_cmd
update_interface_metric
in_prefix
send_hello
unicast_buffered
babel_interface_down
send_update
no_debug_babel_cmd
no_router_babel_cmd
route_lost
format_bool
kernel_interface_operational
neighbour_rxcost
babel_enable_if_config_write
srcs
input_filter
kernel_interface_wireless
_IO_stdin_used
for_all_installed_routes
unicast_neighbour
update_source
schedule_neighbours_check
show_babel_neighbour_cmd
babel_interface_address_delete
no_babel_split_horizon_cmd
flush_unicast
wait_for_fd
timeval_minus_msec
babel_set_wireless_cmd
linklocal
babel_ipv6_route_add
route_changed
send_unicast_multihop_request
parse_address
flushbuf
request_redundant
babel_interface_delete
expire_sources
babel_set_wired_cmd
resize_receive_buffer
show_babel_parameters_cmd
kernel_metric
recompute_resend_time
read_random_bytes
show_babel_database_cmd
diversity_factor
send_request
redistribute_filter
update_route
protocol_group
flush_neighbour
inaddr_to_uchar
check_neighbours_timeout
handle_request
flush_route
format_eui64
neighbour_cost
route_expired
martian_prefix
ones
satisfy_request
babel_zebra_close_connexion
parse_packet
no_babel_redistribute_type_cmd
flushupdates
myid
babel_socket
uchar_to_inaddr
flush_resends
installed_routes_estimate
in6addr_to_uchar
babel_interface_address_add
send_multihop_request
timeval_min
babel_ipv4_route_delete
babel_ipv6_route_delete
is_interface_ll_address
no_babel_network_cmd
split_horizon
set_timeout
expire_resend
timeval_add_msec
neighbour_txcost
kernel_interface_mtu
babel_interface_add
release_source
babelz_zebra_init
route_interferes
babel_if_init
protocol_port
output_filter
for_all_routes
do_resend
find_best_route
flush_source
show_babel_interface_cmd
babel_ipv4_route_add
diversity_kind
resend_delay
update_myseqno
zclient
update_jitter
tcp_server_socket
uninstall_route
find_installed_route
send_marginal_ihu
mask_prefix
babel_send
send_request_resend
send_hello_noupdate
zeroes
__data_start
packet_header
roughly
send_ihu
format_address
timeval_min_sec
route_feasible
to_resend
uchar_to_in6addr
babel_set_update_interval_cmd
check_neighbours
update_neighbour_metric
update_neighbour
allow_duplicates
send_triggered_update
record_resend
unsatisfied_request
longopts
update_feasible
flush_all_routes
flush_interface_routes
update_route_metric
daemonise
babel_now
__libc_csu_init
find_request
neighs
route_old
keep_unfeasible
send_self_update
expire_routes
retain_source
send_wildcard_retraction
send_ack
find_neighbour
show_babel_main_configuration
babel_interface_close_all
check_sources_released
babel_recv
protocol_socket
babel_interface_up
debug_babel_config_write
kernel_route
__libc_csu_fini
unicast_flush_timeout
retract_neighbour_routes
v4tov6
find_route
send_update_resend
flush_neighbour_routes
babel_set_hello_interval_cmd
for_all_xroutes
babel_filter
timeval_minus
babeld_quagga_init
if_eui64
v4mapped
timeval_compare
send_unfeasible_request
unicast_buffer
parse_msec
flush_xroute
send_unicast_request
find_source
GLIBC_2.15
GLIBC_2.4
GLIBC_2.7
GLIBC_2.14
GLIBC_2.2.5
GLIBC_2.3.4
%zR!
%rR!
%jR!
%bR!
%ZR!
%RR!
%JR!
%BR!
%:R!
%2R!
%*R!
%"R!
%zQ!
%rQ!
%jQ!
%bQ!
%ZQ!
%RQ!
%JQ!
%BQ!
%:Q!
%2Q!
%*Q!
%"Q!
%zP!
%rP!
%jP!
%bP!
%ZP!
%RP!
%JP!
%BP!
%:P!
%2P!
%*P!
%"P!
%zO!
%rO!
%jO!
%bO!
%ZO!
%RO!
%JO!
%BO!
%:O!
%2O!
%*O!
%"O!
%zN!
%rN!
%jN!
AWAVAUATA
D$x1
=:[!
=![!
3<$A
zu`H
=7U!
=XT!
5eK!
5QK!
\$xdH3
[]A\A]A^A_
fffff.
=AQ!
5:Q!
fffff.
fffff.
AUATH
D$x1
cZYwMHc
=TI!
ffffff.
AUATH
[]A\A]
l$ L
AWAVAUATUSH
=CO!
5(L!
ATAWATAVAU
t$0SASSRH
APARAPL
([]A\A]A^A_
=	N!
ATUSH
[]A\
AWAV
-~9!
ATUSI
t8IcW
]A\A]A^A_
[]A\A]A^A_
fffff.
fffff.
AWAV
ATUSI
t8IcW
]A\A]A^A_
[]A\A]A^A_
AVAUATUA
D$X1
l$@H
l$0H
ueE1
L$XdH3
`[]A\A]A^
D$$H
AVAUATUA
D$H1
uiE1
L$HdH3
P[]A\A]A^
D$DH
AWAVI
AUATUSH
=UD!
[]A\A]A^A_
5#=!
50<!
5_<!
ATU1
D$81
L$8dH3
@[]A\
fff.
D$H1
d$ H
L$HdH3
AUATA
USHc
D$h1
L$PH
t$@H
T$HL
D$XL
D$@H
L$hdH3
x[]A\A]
AUAT1
D$81
L$8dH3
H[]A\A]
AVAUI
ATUA
D$X1
T$XdH3
`[]A\A]A^
D$2	D
d$TH
D$8t
AVAUI
ATUA
\$PH
|$@D
D$x1
D$@H
T$HH
l$aH
D$hH
T$xdH3
[]A\A]A^
l$4H
D$(t
G09G,
ffff.
AWAVE
AUATI
D$PH
[]A\A]A^A_
D;t$
[]A\A]A^A_
D;|$
[]A\A]A^A_
ATUH
[]A\
ffffff.
5wL)
ffff.
<.tOHc
	woE1
AUATI
[]A\A]
fffff.
ffff.
AUATL
%u1!
DA\A]
ffff.
ATUI
D$(1
L$(dH3
0[]A\
AWAVL
AUATL
AVAUASM
\$8L
thAWAVH
AUAS1
|$(M
t8AWAVH
([]A\A]A^A_
dH34%(
[]A\
ffff.
fffff.
fffff.
=E)!
AWAVI
AUATUSH
t@E8o
A8o u
[]A\A]A^A_
ffffff.
ffff.
H9O(}
O"f9
f;W$s
ATUSH
[]A\
ATUI
t1f.
L;cH
[]A\
[]A\
AVAUATU
[]A\A]A^
o@E1
[]A\A]A^
AUATUSH
H9C 
=V&!
=?&!
[]A\A]
fffff.
=H%!
ATUI
[]A\
T$HH
AWAVAUATUSH
A:F rHw
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
AUATUSA
[]A\A]
=k !
[]A\A]1
xK;5
B@H9
ffffff.
t1Hc
AUATI
[]A\A]1
[]A\A]
[]A\A]
ATU@
t'H9k
[]A\
~QAVAUE1
ATUI
D9-{
[]A\A]A^
~VAUATI
[]A\A]
fffff.
fffff.
H9O(
H9W(
@HH9
tVA9
H9pH
H9G(| f
G"f9
f;W$
ATUSH
C2[]A\
[]A\
[]A\H
fffff.
u&USH
@HASARW
I9x(|c
ffff.
AWAVA
AUATM
[]A\A]A^A_
[]A\A]A^A_
fffff.
tQAUATA
[]A\A]
[]A\A]
AUATA
H9w(}=f
[]A\A]
[]A\A]
~\AUATE1
D9%N
[]A\A]
~TAUATE1
H9hHt&H
[]A\A]
AWAVE1
AUATE1
t_H9k
[]A\A]A^A_
[]A\H
[]A\
[]A\
AWAVI
AUATUSH
B@I9
[]A\A]A^A_
$LcD$
t H;_
AUATE1
H9hHu
[]A\A]A^
AWAVI
AUATH
D$ dH
D$H1
H94$
T$,L
L$HdH3
X[]A\A]A^A_
L$(L
T$,L
H9C(
D$8H
D$ H
t$4H
L$HH
L$@1
AXAYH
C(~'
}VHcD$DH
HcD$DH
H9{(}
AVAUATUS
t/D8k
]A\A]A^
]A\A]A^
AWAVA
AUATA
[]A\A]A^A_
tifD;h
[]A\A]A^A_
ATUH
 []A\
ATUH
 []A\
mSH)
~?AUATI
[]A\A]
_xHc{PH
ffffff.
AVAU
ATUH
_waD
[]A\A]A^
[]A\A]A^
AWAVAUATA
D$(1
L$(dH3
8[]A\A]A^A_
T$`E
fffff.
ffff.
AWAVAUATUSH
D$81
D$ H
D$8dH3
H[]A\A]A^A_
L$(H
|$(H
D$0L
H9l$
t	A8
$H;HH
N PH
H9l$
_xdH
D$(1
CT9CP
D$(dH3
D$ j
HcCP
HcCPH
HcCPH
[]A\
ffffff.
ATUA
[]A\
HcPPH
HcJPH
HcPPH
[]A\
D$(1
D$(dH3
D$ j
tpHc
[]A\
AUATI
[]A\A]
[]A\A]
AWAVE
AUATI
8[]A\A]A^A_
BT+BP
@89H
Sqt#
@:9H
D$xD
L$(L
L$ D
L$ H
L$ D
HcPPH
L$ D
L$ D
HcFPH
UxHcBPH
UxHcBPH
HcBPH
HcVPf
HcpPH
L$ f
UxHcBPH
|$xHcBPH
UxHcBPH
T$xH
t$p@
HcBPH
UxHcBPH
AUATA
oxHc
[]A\A]
HcBPH
SxHcBPH
SxHcBPH
SxHcBPH
CxHcPPH
HcHPH
CxHcPPH
fff.
AUATA
[]A\A]A^
[]A\A]A^
A\A]A^
ffffff.
AWAVAUATUSH
[]A\A]A^A_
H;-;
T$xfA
HcBPH
T$xHcBPH
D$xHcPPH
D$xHcPPH
[]A\A]A^A_
H;]Ht
[]A\A]A^A_
H;kHt
ffff.
AUATI
[]A\A]
_v}L
HcBPH
SxHcBPH
HcBPH
SxHcBPH
[]A\A]
[]A\A]
SxHcBPH
SxHcBPH
AUATA
x{Hc
[]A\A]
[]A\A]
AWAVI
AUATM
[]A\A]A^A_
HcBPH
HcBPH
FxHcPPH
VxHcBPH
VxHcBPH
[]A\A]A^A_
HcBPH
[]A\A]A^A_
AWAVAUATI
[]A\A]A^A_
x9Hc
[]A\A]A^A_
ATUStM
L$HH
XZ[]A\A]A^
fffff.
AWAVI
AUATM
t4A)
[]A\A]A^A_
fE+f
[]A\A]A^A_
AWAVAUATI
*u\A
[]A\A]A^A_
L$0H
L$8H
ID$h
D$hf
t$ E
AZA[
L$HL
\$XD
\$PH
t$ 1
fD9Y
Q8fD
t$ E
AYAZ
t$ E
L$(E
D$0H
ED$8H
L$$H
D$xH
\$@1
L$XH
T$HE
t$(D
L$pH
D$H`
\$HL
L$PH
T$HH
l$`L
d$pD
l$lH
L$HH
t$HH
D$`H
\$`D
T$HH
D$PD
L$hH
L$`1
\$`D
l$`D
l$lL
l$`D
l$lL
l$`D
l$lL
AWAVAUATUSH
D:{(u
[]A\A]A^A_
ffff.
fff.
fffff.
AWAVM
AUATA
D$(1
C*fA9
C,L;{8fD
L$(dH3
8[]A\A]A^A_
C(t9I
ATUI
C*f9
AVAU
ATUI
tTE1
C*f9
t3L9
t.[D
]A\A]A^
]A\A]A^
ATUSH
D$(1
D$(dH3
0[]A\
AUATI
H;k8t$H
[]A\A]
S*fA9
ffffff.
ATUSH
tcE1
C@tKH
u-[]A\
[]A\
AUAT
[]A\A]
[]A\A]
AWAVAUATUSH
[]A\A]A^A_
ATUH
:-t	H
dH3<%(
[]A\
ATUH
:-t	H
dH3<%(
[]A\
AWAVAUATL
[]A\A]A^A_
[]A\A]A^A_
ffff.
ATUH
[]A\H
ATUL
ffff.
ATUE1
_xdH
 []A\
AUATUSH
oxdH
c0D9c,D
Fc,A
([]A\A]
fff.
ATUH
 []A\
AWAVI
AUAT
D$8H
T$0H
+S(H
\$(H
D$ H
AUAWL
T$HAR
T$dRATH
\$p1
L$pD
[]A\A]A^A_
 chan (
D$@L
d$@A
D<@,L
AWAVL
AUATI
UAVH
D$,L
L$ 1
8[]A\A]A^A_
ffffff.
ATUH
Su5H
[]A\
A9D$
fffff.
Su>H
ATUS
D$Ht
AVAUATUS
]A\A]A^
t$xM
ffff.
tmAVL
]A\A]A^
AWAVAUATI
t9Hc
[]A\A]A^A_
ffffff.
fff.
tcH;
AUATUSH
D$(1
T$(dH3
8[]A\A]
ATUH
:-t	H
dH3<%(
[]A\
t0SH
fff.
AUATUSH
([]A\A]
Hi4$
AUATI
D$(1
L$(dH3
8[]A\A]
t'Hc
AVAUA
ATUH
 []A\A]A^
AWAVA
AUATL
[]A\A]A^A_
Terminating on signal
Exiting...
Uninstall routes.
Save state file.
/var/run/quagga/babel-state
creat(babel-state): %s
%s %d %ld
write(babel-state): overflow.
write(babel-state): %s
Remove pid file.
Done.
read(random): %s
ff02:0:0:0:0:0:1:6
df:i:z:hA:P:u:g:v
https://bugzilla.quagga.net
/dev/null
open(null): %s
dup2(null, 0): %s
daemonise: %s
error while writing pidfile
/var/run/quagga/babeld.vty
0.1 for quagga
BABELd %s starting: vty@%d
open(babel-state: %s)
unlink(babel-state): %s
read(babel-state): %s
%99s %d %ld
Couldn't parse babel-state.
None
quaggavt
daemon
config_file
pid_file
socket
help
vty_addr
vty_port
user
group
version
/var/run/quagga/babeld.pid
Usage : %s [OPTION...]
Daemon which manages Babel routing protocol.
-d, --daemon       Runs in daemon mode
-f, --config_file  Set configuration file name
-i, --pid_file     Set process identifier file name
-z, --socket       Set path of zebra socket
-A, --vty_addr     Set vty's bind address
-P, --vty_port     Set vty's port number
-u, --user         User to run as
-g, --group        Group to run as
-v, --version      Print program version
-h, --help         Display this help and exit
Report bugs to %s
Try `%s --help' for more information.
Got %s %d %ld from babel-state.
ID mismatch in babel-state. id=%s; old=%s
pid file                = %s%sstate file              = %s%sconfiguration file      = %s%sprotocol informations:%s  multicast address     = %s%s  port                  = %d%svty address             = %s%svty port                = %d%sid                      = %s%sallow_duplicates        = %s%skernel_metric           = %d%s
no router zebra%s
 no redistribute babel%s
Invalid type %s%s
common
kernel
debug babel all%s
debug babel %s%s
%s(config-router)# 
filter
interface
route
no debug babel (common|kernel|filter|timeout|interface|route|all)
Negate a command or set its defaults
Disable debug messages for specific or all part.
Babel information
Common messages (default)
Kernel messages
Filter messages
Timeout messages
Interface messages
Route messages
All messages
debug babel (common|kernel|filter|timeout|interface|route|all)
Enable debug messages for specific or all part.
Babel information
Common messages (default)
Kernel messages
Filter messages
Timeout messages
Interface messages
Route messages
All messages
no redistribute (kernel|connected|static|rip|ripng|ospf|ospf6|isis|bgp|pim)
Negate a command or set its defaults
Redistribute
Kernel routes (not installed via the zebra RIB)
Connected routes (directly attached subnet or host)
Statically configured routes
Routing Information Protocol (RIP)
Routing Information Protocol next-generation (IPv6) (RIPng)
Open Shortest Path First (OSPFv2)
Open Shortest Path First (IPv6) (OSPFv3)
Intermediate System to Intermediate System (IS-IS)
Border Gateway Protocol (BGP)
Protocol Independent Multicast (PIM)
redistribute (kernel|connected|static|rip|ripng|ospf|ospf6|isis|bgp|pim)
Redistribute
Kernel routes (not installed via the zebra RIB)
Connected routes (directly attached subnet or host)
Statically configured routes
Routing Information Protocol (RIP)
Routing Information Protocol next-generation (IPv6) (RIPng)
Open Shortest Path First (OSPFv2)
Open Shortest Path First (IPv6) (OSPFv3)
Intermediate System to Intermediate System (IS-IS)
Border Gateway Protocol (BGP)
Protocol Independent Multicast (PIM)
Couldn't set traffic class
adding
removing
%s route (ipv4) to zebra
%s route (ipv6) to zebra
kernel.c
/dev/urandom
Modify route: delete old; add new.
this should never appens (false value - kernel_route)
kernel_route
true
false
util.c
v4mapped(dest)
v4mapped(src)
%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x
%02hhx:%02hhx:%02hhx:%02hhx:%02hhx:%02hhx:%02hhx:%02hhx
%02hhx-%02hhx-%02hhx-%02hhx-%02hhx-%02hhx-%02hhx-%02hhx
%02hhx:%02hhx:%02hhx:%02hhx:%02hhx:%02hhx
uchar_to_inaddr
inaddr_to_uchar
malloc(source): %s
source.c
src->route_count < 0xffff
src->route_count > 0
Warning: source %s %s has refcount %d.
release_source
retain_source
Creating neighbour %s on %s.
malloc(neighbour): %s
Checking neighbours.
kernel_route(MODIFY metric): %s
WARNING: installing unfeasible route (this shouldn't happen).
WARNING: attempting to install duplicate route (this shouldn't happen).
WARNING: switching to unfeasible route (this shouldn't happen).
Rejecting martian route to %s through %s.
Unfeasible update for installed route to %s (%s %d %d -> %s %d %d).
i >= 0 && i < route_slots
route->installed
new_slots >= route_slots
kernel_route(FLUSH): %s
Unknown kind of diversity.
kernel_route(ADD): %s
kernel_route(MODIFY): %s
malloc(route)
Couldn't insert route.
Expiring old routes.
move_installed_route
install_route
resize_route_table
flush_route
Adding new route comming from Zebra.
Adding new ipv4 route comming from Zebra.
Removing ipv4 route (from zebra).
xroute.c
i >= 0 && i < numxroutes
Removing route (from zebra).
flush_xroute
message.c
send: %s
Sending hello %d (%d) to %s.
send(unicast): %s
malloc(unicast_buffer): %s
malloc(buffered_updates): %s
Sending self update to %s.
Sending update to %s for %s.
Sending update to %s for any.
prefix != ((void *)0)
unicast 
Sending %sihu %d on %s to %s.
sending request to %s for %s.
/prefix
Couldn't allocate neighbour.
Received pad1 from %s on %s.
Received truncated message.
Received pad%d from %s on %s.
Received ack from %s on %s.
unicast_neighbour == neigh && unicast_buffered >= bytes + 2 && unicast_buffer[unicast_buffered - bytes - 2] == type && unicast_buffer[unicast_buffered - bytes - 1] == bytes
babel_ifp->buffered >= bytes + 2 && babel_ifp->sendbuf[babel_ifp->buffered - bytes - 2] == type && babel_ifp->sendbuf[babel_ifp->buffered - bytes - 1] == bytes
(linklist_node)->data != ((void *)0)
  (flushing %d buffered updates on %s (%d))
babel_route_ifp->channel > 0 && babel_route_ifp->channel <= 255
babel_ifp->buffered <= babel_ifp->bufsize
  (flushing %d buffered bytes on %s)
Warning: bucket full, dropping packet to %s.
Warning: bucket full, dropping unicast packet to %s if %s.
Sending ack (%04x) to %s on %s.
babel_ifp->buffered_updates == ((void *)0)
sending unicast request to %s for %s.
Sending request (%d) on %s for %s.
Sending multi-hop request to %s for %s (%d hops).
Received packet from non-local address %s.
Received malformed packet on %s from %s.
Received packet with unknown version %d on %s from %s.
Received truncated packet (%d + 4 > %d).
Received ack-req (%04X %d) from %s on %s.
Received hello %d (%d) from %s on %s.
Received ihu %d (%d) from %s on %s for %s.
Received router-id %s from %s on %s.
Received nh %s (%d) from %s on %s.
Received prefix with no router id.
Received update%s%s for %s from %s on %s.
Received wildcard update with finite metric.
Received truncated attributes.
Received overlong channel information (%d > %d).
Channel information contains 0!
Received unknown route attribute %d.
Received request for %s from %s on %s.
Received request (%d) for %s from %s on %s (%s, %d).
Received unknown packet type %d from %s on %s.
Couldn't parse packet (%d, %d) from %s on %s.
send_multihop_request
send_request
send_ihu
send_self_update
send_wildcard_retraction
send_update_resend
buffer_update
send_update
flushupdates
end_message
end_unicast_message
flushbuf
babel_interface.c
(node)->data != ((void *)0)
interface %s%s
 description %s%s
 babel wired%s
 babel split-horizon%s
 babel hello-interval %u%s
 babel update-interval %u%s
milliseconds
%% Invalid %s value%s
babel_ifp != ((void *)0)
down
%s is %s%s
  Operating mode is "%s"%s
  Split horizon mode is %s%s
  Hello interval is %u ms%s
  Update interval is %u ms%s
%s metric %d (exported)%s
, IPv4
interface reset: %s
Couldn't reallocate sendbuf.
can't find network %s%s
No such interface name%s
 (installed)
 (feasible)
 nexthop 
 (down)
receive a 'interface up'
receive a 'interface down'
receive a 'interface add'
receive a 'interface delete'
not einough memory
show babel parameters
show babel database
no babel split-horizon
babel wireless
babel wired
no network IF_OR_ADDR
%s(config-if)# 
  ifindex %u, MTU %u bytes %s%s
  Babel protocol is not enabled on this interface%s
  Babel protocol is enabled, but not running on this interface%s
  Babel protocol is running on this interface%s
    -- Babel running configuration --%s
    -- distribution lists --%s
setsockopt(IPV6_LEAVE_GROUP) on interface '%s': %s
Upped network %s (%s, cost=%d%s).
Suspiciously low MTU %d on interface %s (%d).
setsockopt(IPV6_JOIN_GROUP) on interface '%s': %s
Upped interface %s (%s, cost=%d, channel=%d%s).
There is same network configuration %s%s
%s metric %d refmetric %d id %s seqno %d%s age %d via %s neigh %s%s%s%s%s
Neighbour %s dev %s reach %04x rxcost %d txcost %d %s.%s
receive a 'interface address add'
Show running system information
IP information
Babel information
Configuration information
No attributes
Show running system information
IP information
Babel information
Database information
No attributes
show babel neighbour [INTERFACE]
Show running system information
IP information
Babel information
Print neighbours
Interface name
show babel interface [INTERFACE]
Show running system information
IP information
Babel information
Interface information
Interface name
babel update-interval <20-655340>
Babel interface commands
Time between scheduled updates
Milliseconds
babel hello-interval <20-655340>
Babel interface commands
Time between scheduled hellos
Milliseconds
Negate a command or set its defaults
Babel interface commands
Disable split horizon processing
Babel interface commands
Enable split horizon processing
Babel interface commands
Disable wired optimiations (assume wireless)
Babel interface commands
Enable wired optimisations
Negate a command or set its defaults
Disable Babel protocol on specified interface or network.
Interface or address
Enable Babel protocol on specified interface or network.
Interface or address
interface_config_write
show_babel_interface
is_interface_ll_address
babel_interface_close_all
babel_set_update_interval
babel_set_hello_interval
no_babel_split_horizon
babel_split_horizon
babel_set_wireless
babel_set_wired
router babel%s
 babel resend-delay %u%s
 redistribute %s%s
can't create Babel
babeld.c
&babel_read_protocol
&babel_init_routing_process
interface: %s; %s
protocol_socket >= 0
recv: %s
check_neighbours_timeout
source_expiry_time
resend_time
hello_timeout
update_timeout
update_flush_timeout
unicast_flush_timeout
next timeout due to: %s
&babel_main_loop
My ID is : %s.
malloc(receive_buffer): %s
realloc(receive_buffer): %s
no router babel
Couldn't create link local socket: %s
babel_routing_process != ((void *)0)
babel main loop : timeout: %ld msecs
Warning: couldn't find router id -- using random value.
read(random): %s (cannot assign an ID)
babel resend-delay <20-655340>
Babel commands
Time before resending a message
Milliseconds
Negate a command or set its defaults
Disable a routing process
Remove Babel instance command
No attributes
Enable a routing process
Make Babel instance command
No attributes
babel_distribute_update_all
babel_read_protocol
babel_fill_with_next_timeout
babel_main_loop
babel_initial_noise
babel_get_myid
%s/%d filtered by distribute in
;*3$"
/etc/quagga/babeld.conf
babeld.debug
7zXZ
^gL8
=':u
^5%R
Zt85A
G:7'
G\w&b
*	5R
ElQ)$*f
g5Y3~i>Q@j
:pWM
JSY`"
KV(,
B1Be
FZiS
>&)T
Xq\h
jtfo#x)
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
