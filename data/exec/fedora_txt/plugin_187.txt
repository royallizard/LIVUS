__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
g_malloc_n
complex_from_polar
complex_mul
g_free
value_area_get_width
value_area_get_height
collect_floats_value_with_info
g_slist_free
value_get_as_float
floor
gnm_strip_missing
g_malloc0_n
value_new_array_empty
__sprintf_chk
complex_to_string
value_new_string_nocopy
value_new_error_std
go_range_increasing
value_new_array_non_init
value_new_float
gnm_slist_sort_merge
g_log
sqrt
go_cspline_init
go_cspline_get_integrals
go_cspline_destroy
go_cspline_get_value
go_cspline_get_values
value_new_error_VALUE
go_plugin_depends
go_plugin_header
TimeSeriesAnalysis_functions
libm.so.6
libc.so.6
__stack_chk_fail
_edata
__bss_start
_end
plugin.so
GLIBC_2.1.3
GLIBC_2.3.4
GLIBC_2.4
GLIBC_2.0
[^_]
[^_]
[^_]
d$<[^_]
d$,[^_]
d$,[^_]
d$L[^_]
d$\[^_]
[^_]
[^_]
d$<[^_]
%%.%dg
goffice
gnumeric
1.10.11
interpolation
AAA|f
periodogram
A|fAff
fourier
PERIODOGRAM
INTERPOLATION
This should not happen. n0=%d n1=%d
INTERPOLATION:interpolated values corresponding to the given abscissa targets
abscissae:ordered abscissae of the given data points
ordinates:ordinates of the given data points
targets:abscissae of the interpolated data
interpolation:method of interpolation, defaults to 0 ('linear')
The output consists always of one column of numbers.
Possible interpolation methods are:
0: linear;
1: linear with averaging;
2: staircase;
3: staircase with averaging;
4: natural cubic spline;
5: natural cubic spline with averaging.
The @{abscissae} must be given in increasing order.
If any of interpolation methods 1 ('linear with averaging'), 3 ('staircase with averaging'), and 5 ('natural cubic spline with averaging') is used, the number of returned values is one less than the number of targets and the targets values must be given in increasing order.
Strings and empty cells in @{abscissae} and @{ordinates} are ignored.
If several target data are provided they must be in the same column in consecutive cells.
PERIODOGRAM:periodogram of the given data
ordinates:ordinates of the given data
filter:windowing function to  be used, defaults to no filter
abscissae:abscissae of the given data, defaults to regularly spaced abscissae
interpolation:method of interpolation, defaults to none
number:number of interpolated data points
If an interpolation method is used, the number of returned values is one less than the number of targets and the targets values must be given in increasing order.
Possible window functions are:
0: no filter (rectangular window)
1: Bartlett (triangular window)
2: Hahn (cosine window)
3: Welch (parabolic window)
FOURIER:Fourier or inverse Fourier transform
Sequence:the data sequence to be transformed
Inverse:if true, the inverse Fourier transform is calculated, defaults to false
This array function returns the Fourier or inverse Fourier transform of the given data sequence.
The output consists always of one column of complex numbers.
If @{Sequence} is neither an n by 1 nor 1 by n array, this function returns #NUM!
munG
plugin.so.debug
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rel.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rel.plt
.got.plt
.got
.text
