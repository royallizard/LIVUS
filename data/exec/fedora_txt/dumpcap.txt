/lib64/ld-linux-x86-64.so.2
0F@K 
"  $bB
iW!6
libwiretap.so.0
g_str_hash
__gmon_start__
_Jv_RegisterClasses
g_strdup
g_list_foreach
g_hash_table_insert
g_list_free
g_malloc
g_assertion_message_expr
g_strdup_printf
g_hash_table_new
g_hash_table_foreach
g_snprintf
g_list_append
g_realloc
g_hash_table_lookup
g_assertion_message
g_log
g_str_equal
g_strlcpy
wtap_strerror
libwsutil.so.0
relinquish_special_privs_perm
get_credential_info
g_strconcat
libglib-2.0.so.0
g_string_free
g_get_tmp_dir
g_slist_append
g_hash_table_remove
g_list_prepend
g_slist_nth
g_string_append_printf
g_slist_foreach
g_list_nth_data
g_log_set_handler
g_string_append
g_list_first
g_string_new
g_strdup_vprintf
g_slist_free
libpcap.so.1
pcap_set_buffer_size
pcap_lookupnet
pcap_open_live
pcap_geterr
pcap_lib_version
pcap_set_rfmon
pcap_close
pcap_activate
pcap_breakloop
pcap_setfilter
pcap_set_promisc
pcap_freecode
pcap_findalldevs
pcap_create
pcap_set_snaplen
pcap_can_set_rfmon
pcap_dispatch
pcap_set_datalink
pcap_datalink
pcap_list_datalinks
pcap_datalink_val_to_name
pcap_get_selectable_fd
pcap_compile
pcap_freealldevs
pcap_free_datalinks
pcap_set_timeout
pcap_stats
pcap_datalink_name_to_val
pcap_statustostr
pcap_snapshot
pcap_datalink_val_to_description
libz.so.1
zlibVersion
libpthread.so.0
read
__errno_location
sigaction
connect
libc.so.6
socket
mkdtemp
fflush
__printf_chk
exit
optind
strrchr
inet_ntop
__stack_chk_fail
unlink
putchar
select
strftime
mkstemp
strtol
strlen
sigemptyset
getopt
__fprintf_chk
fchown
stdout
fputc
fputs
fclose
umask
getgid
__ctype_b_loc
optarg
getuid
fwrite
gettimeofday
localtime
strchr
__vfprintf_chk
sleep
__cxa_finalize
__xstat
uname
strcmp
__libc_start_main
ferror
_edata
__bss_start
_end
__libc_csu_fini
capture_opts_print_if_capabilities
libpcap_dump_flush
cnd_eval
linktype_name_to_val
capture_opts_log
ringbuf_current_filename
cleanup_capture_stop_conditions
cnd_new
capture_opts_trim_snaplen
if_info_add_address
cnd_unregister_class
cnd_register_class
sync_pipe_errmsg_to_parent
ringbuf_init
CND_CLASS_CAPTURESIZE
create_tempdir
libpcap_write_session_header_block
libpcap_write_interface_statistics_block
get_compiled_version_info
get_natural_int
cnd_delete
_IO_stdin_used
get_compiled_pcap_version
capture_opts_init
__data_start
cmdarg_err
linktype_val_to_name
libpcap_write_interface_description_block
pipe_write_header
CND_CLASS_TIMEOUT
capture_interface_list
get_interface_list_findalldevs
ringbuf_libpcap_dump_close
ringbuf_switch_file
cnd_reset
__libc_csu_init
libpcap_write_file_header
wireshark_svnversion
create_tempfile
free_if_capabilities
libpcap_write_packet
cnd_set_user_data
if_info_new
capture_opts_print_interfaces
capture_opts_add_opt
vfprintf_stderr
get_interface_list
ringbuf_free
pipe_write_block
init_capture_stop_conditions
cant_get_if_list_error_message
get_positive_int
libpcap_write_enhanced_packet_block
free_interface_list
ringbuf_init_libpcap_fdopen
ringbuf_error_cleanup
capture_opts_trim_ring_num_files
capture_opts_trim_iface
get_runtime_version_info
cnd_get_user_data
get_copyright_info
cmdarg_err_cont
get_runtime_pcap_version
GLIBC_2.2.5
GLIBC_2.4
GLIBC_2.3
GLIBC_2.3.4
ATSubH
fffff.
fffff.
ffff.
T$81
ATUSH
[]A\
wtdH
\$ H
l$(L
d$0H
fff.
fffff.
d$ H
l$ H
[]A\A]
fffff.
ffff.
fffff.
ffff.
d$ H
xeH=
T$@H
t$8H
L$HH)
D$PL
D$(1
D$0H
D$ H
T$(dH3
[]A\
l$ H
l$ H
fff.
T$0H
t$(H
L$8H)
D$@L
D$ H
fffff.
fffff.
D$(1
tcE1
T$(dH3
\$0H
l$8L
d$@H
fff.
l$ H
l$ H
l$ H
ffff.
\$(H
l$0L
d$8L
l$@H
D$x1
T$xdH3
AVAUATUH
[]A\A]A^A_
l$`H
T$0H
T$@H
T$8f
|$ 1
|$0H
|$0H
T$ H
|$(L
|$0H
5v~ 
5m~ 
Hc5C~ 
=r~ 
|$xH
=I} 
=%~ 
-&} 
=s} 
=R} 
T$ H
|$(L
="| 
43Hc
=.{ 
t$8H
T$@H
|$0H
5{x 
5fx 
5_w 
=[v 
|$0A
T$0H
t$(H
L$8H
D$@L
D$ H
T$0H
t$(H
L$8H)
D$@L
D$ H
T$0H
t$(H
L$8H)
D$@L
D$ H
fffff.
AWAVAUATA
@:2u'
D$8H
7v,H
L$8H
T$,E
t$hH
t$ H
=zh 
L$@H
L$@H
=nh 
=0g 
=wg 
t$hH
t$`L
T$4B;
0tlH
;\$0
=kc 
=Zc 
t$PH
t$hH
5Ka 
5!a 
t$hH
l$ H
\$ H
l$(L
d$0H
ffffff.
\$ H
l$(L
d$0L
l$8L
t$@H
D$81
D$,H
T$8dH3
\$HH
l$PL
d$XL
l$`L
t$hL
|$pH
|$0H
|$(H
|$,H
D$81
D$,H
T$8dH3
\$HH
l$PL
d$XL
l$`L
t$hL
|$pH
T$,H
|$0L
|$,L
|$(L
|$(L
D$(1
T$(dH3
\$0H
l$8L
d$@L
l$HL
t$PH
|$ H
|$$H
|$ 1
D$X1
T$ H
t$0L
D$L4
D$LH
T$XdH3
\$hH
l$pL
d$xL
T$0H
l$PH
l$@H
D$4H
|$LH
l$ H
l$ H
ATUSH
D$81
l$0L
T$8dH3
H[]A\A]
ffffff.
ffff.
=yP 
l$ L
d$(L
l$0L
t$8L
|$@H
fffff.
=SO 
fff.
=<N 
=(N 
ffffff.
\$(H
l$0L
d$8L
l$@H
l$ L
d$(L
l$0H
u&Hc
l$ L
d$(L
l$0H
ffff.
l$ H
l$0H
VUUUI
AVAUI
%FI 
-*I 
([]A\A]A^A_
VUUUI
AVAUI
([]A\A]A^A_
{P H
ATUH
[]A\
l$ L
t$(L
|$0H
Can't get list of interfaces: %s
with libpcap %s
with 
<null>
PCAPNG
PCAP
CAPTURE OPTIONS    :
CFile              : 0x%p
Filter             : %s
Interface          : %s
Interface Descr    : %s
BufferSize         : %u (MB)
SnapLen         (%u): %u
Promisc            : %u
LinkType           : %d
SavingToFile       : %u
SaveFile           : %s
Fileformat         : %s
RealTimeMode       : %u
ShowInfo           : %u
QuitAfterCap       : %u
MultiFilesOn       : %u
FileDuration    (%u): %u
RingNumFiles    (%u): %u
AutostopFiles   (%u): %u
AutostopPackets (%u): %u
AutostopFilesize(%u): %u (KB)
AutostopDuration(%u): %u
ForkChild          : %d
autostop duration
autostop filesize
autostop files
number of ring buffer files
ring buffer filesize
ring buffer duration
buffer size
packet count
snapshot length
capture_opts.c
not 
  %s
 (%s)
 (not supported)
%d. %s
Invalid or unknown -a flag "%s"
Invalid or unknown -b arg "%s"
More than one -f argument specified
The specified adapter index is a negative number
The specified adapter index is too large (greater than %d)
There is no interface with that adapter index
There are no interfaces on which a capture can be done
The specified data link type "%s" isn't valid
Data link types when %sin monitor mode (use option -y to set):
Data link types (use option -y to set):
Too many ring buffer files (%u). Reducing to %u.
%u is a lot of ring buffer files.
capture_opts_add_opt
cnd_class_timeout
cnd_class_capturesize
The specified %s "%s" isn't a decimal number
The specified %s "%s" is a negative number
The specified %s "%s" is too large (greater than %d)
The specified %s is zero
cnd_new: Couldn't find class ID "%s"
cnd_register_class: Duplicate class ID "%s"
Dumpcap 1.4.0%s
Capture network packets and dump them into a libpcap file.
See http://www.wireshark.org for more information.
Usage: dumpcap [options] ...
  -i <interface>           name or idx of interface (def: first non-loopback)
  -f <capture filter>      packet filter in libpcap filter syntax
  -s <snaplen>             packet snapshot length (def: 65535)
  -p                       don't capture in promiscuous mode
  -I                       capture in monitor mode, if available
  -B <buffer size>         size of kernel buffer (def: 1MB)
  -y <link type>           link layer type (def: first appropriate)
  -D                       print list of interfaces and exit
  -L                       print list of link-layer types of iface and exit
  -S                       print statistics for each interface once every second
  -M                       for -D, -L, and -S produce machine-readable output
  -c <packet count>        stop after n packets (def: infinite)
  -a <autostop cond.> ...  duration:NUM - stop after NUM seconds
                           filesize:NUM - stop this file after NUM KB
                              files:NUM - stop after NUM files
  -w <filename>            name of file to save (def: tempfile)
  -b <ringbuffer opt.> ... duration:NUM - switch to next file after NUM secs
                           filesize:NUM - switch to next file after NUM KB
                              files:NUM - ringbuffer: replace after NUM files
  -n                       use pcapng format instead of pcap
  -q                       don't report packet capture counts
  -v                       print version information and exit
  -h                       display this help and exit
Example: dumpcap -i eth0 -a duration:60 -w output.pcap
"Capture network packets from interface eth0 until 60s passed into output.pcap"
Use Ctrl-C to stop capturing at any time.
Not all the packets could be written to the file to which the capture was being saved
("%s") because there is no space left on the file system
on which that file resides.
Not all the packets could be written to the file to which the capture was being saved
("%s") because you are too close to, or over, your disk quota
on the file system on which that file resides.
The file to which the capture was being saved couldn't be closed for some unknown reason.
Not all the packets could be written to the file to which the capture was being saved
("%s").
The file to which the capture was being saved
("%s") could not be closed: %s.
An error occurred while writing to the file to which the capture was being saved
("%s"): %s.
capture_loop_close_input: closing %p
You are running (T)Wireshark with a version of the libpcap library
that doesn't handle HP-UX network devices well; this means that
(T)Wireshark may not be able to capture packets.
To fix this, you should install libpcap 0.6.2, or a later version
of libpcap, rather than libpcap 0.4 or 0.5.x.  It is available in
packaged binary form from the Software Porting And Archive Centre
for HP-UX; the Centre is at http://hpux.connect.org.uk/ - the page
at the URL lists a number of mirror sites.
Unable to set data link type (%s).
The capture session could not be initiated due to error getting information on pipe/socket: %s
The capture session could not be initiated due to error on pipe open: %s
The capture session could not be initiated due to error on socket create: %s
The capture session coud not be initiated due to error on socket connect: Path name too long
The capture session coud not be initiated due to error on socket connect: %s
The capture session could not be initiated because
"%s" is neither an interface nor a socket nor a pipe
Unexpected error from select: %s
End of file on pipe magic during open
Error on pipe magic during open: %s
End of file on pipe header during open
Error on pipe header during open: %s
Unable to read old libpcap format
The capture session could not be initiated (%s).
Please check to make sure you have sufficient permissions, and that you have the proper interface or pipe specified.%s
Ring buffer requested, but capture is being written to standard output or to a named pipe.
The temporary file to which the capture would be saved ("%s") could not be opened: %s.
The file to which the capture would be saved ("%s") could not be opened: %s.
The file to which the capture would be saved couldn't be created for some unknown reason.
A full header couldn't be written to the file to which the capture would be saved.
The file to which the capture would be saved ("%s") could not be opened: Error %d.
cap_pipe_dispatch: invalid state
The network adapter on which the capture was being done is no longer running; the capture has stopped.
Error while capturing packets: %s
Can't get packet-drop statistics: %s
Invalid capture filter: "%s"!
That string isn't a valid capture filter (%s).
See the User's Guide for a description of the capture filter syntax.
Capture loop stopped with error
Dumpcap 1.4.0%s
See http://www.wireshark.org for more information.
a:b:B:c:Df:hi:ILMnpqSs:vw:y:Z:
Only one of -D, -L, or -S may be supplied.
Ring buffer requested, but a capture isn't being done.
Ring buffer requested, but capture isn't being saved to a permanent file.
Ring buffer requested, but no maximum capture file size or duration were specified.
pcap_can_set_rfmon() failed: %s
pcap_can_set_rfmon() returned %d
The capture device "%s" has no data link types.
The capabilities of the capture device "%s" could not be obtained (%s).
Please check to make sure you have sufficient permissions, and that
you have the proper interface or pipe specified.
Capture interface:
Stop conditions:
Output (files):
Miscellaneous:
File: %s
CaptureChild
File: %s
Packets: %s
Packets: %u 
Unknown error
Primary Error: %s
Secondary Error: %s
Err 
Crit
Warn
Msg 
Info
Dbg 
unknown log_level %u
dumpcap.c
%02u:%02u:%02u %8s %s %s
Dumpcap 1.4.0%s
capture_loop_close_input
!ld->from_cap_pipe
Capture loop starting ...
capture_loop_open_input : %s
cap_pipe_open_live: %s
Unrecognized libpcap format
cap_pipe_open_live: error %s
Can't install filter (%s).
capture_loop_open_output: %s
wireshark
capture_loop_init_output
Capture loop running!
Frame %u too long (%d bytes)
Capture loop stopping ...
recvfrom: Network is down
read: Device not configured
read: I/O error
capture_loop_close_output
Packets dropped: %s
Packets dropped: %s
Capture loop stopped!
Capture filter error: %s
capture_loop_init_filter: %s
!global_ld.from_cap_pipe
Error reading from pipe: %s
dumpcap: 
Main
Capture
Compiled 
Running 
Invalid Option: %s
Invalid argument: %s
	%s	
<unknown IPv4>
<unknown IPv6>
<type unknown %u>
	loopback
	network
Dropped
Received
Interface
%-15s  %10s  %10s
%-15s  %10u  %10u
%s	%u	%u
Interface: %s
pcap_activate() failed: %s
DLT %d
%d	%s	%s
Please report this to the Wireshark developers.
(This is not a crash; please do not report it as such.)
capture_loop_start
can't find PPA for 
capture_loop_close_input
console_log_handler
pcap_stats() failed.
%05u
%Y%m%d%H%M%S
length <= SP_MAX_MSG_LEN
sync_pipe_write.c
pipe_write_header
%s%c%sXXXXXXXXXX
(64-bit) 
GLib %d.%d.%d
with libz 
1.2.5
without POSIX capabilities
%s %s.%s
%s %s
, with libz %s
Built using gcc %s.
unknown OS version (uname failed - %s)
4.5.1 20100907 (Red Hat 4.5.1-3)
Copyright 1998-2010 Gerald Combs <gerald@wireshark.org> and contributors.
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
dumpcap.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.note.ABI-tag
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.interp
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rela.plt
.got.plt
.got
.text
