/lib64/ld-linux-x86-64.so.2
libpcap.so.1
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
pcap_lookupnet
pcap_next_ex
pcap_open_live
pcap_geterr
_init
pcap_close
pcap_inject
pcap_next
pcap_breakloop
pcap_open_offline
pcap_dump_close
pcap_dump_open
pcap_setfilter
pcap_dispatch
pcap_dump
pcap_datalink
pcap_compile
pcap_datalink_val_to_description
_fini
pcap_version
libdnet.so.1
eth_send
eth_close
strlcpy
librt.so.1
libnsl.so.1
libc.so.6
socket
fflush
strcpy
fchmod
__printf_chk
readdir
_IO_putc
srand
fopen
strncmp
inet_aton
strrchr
wait
regexec
pipe
__strdup
__isoc99_sscanf
closedir
inet_ntop
signal
fork
regfree
__stack_chk_fail
unlink
realloc
_exit
strpbrk
getpid
inet_pton
strftime
__assert_fail
strtol
mmap
fgetc
calloc
strlen
memset
strstr
__errno_location
bind
memcmp
getsockopt
dup2
__fprintf_chk
ctime
stdout
fputc
fputs
memcpy
fclose
__vsnprintf_chk
strtoul
setsockopt
malloc
remove
opendir
__ctype_b_loc
getenv
__open_2
regcomp
stderr
ioctl
alarm
system
munmap
__snprintf_chk
freopen
__fxstat
fileno
fwrite
fread
__memcpy_chk
localtime
strchr
fdopen
canonicalize_file_name
__ctype_toupper_loc
__strcpy_chk
__ctype_tolower_loc
__cxa_finalize
__sprintf_chk
__xstat
memmove
access
strcmp
strerror
__libc_start_main
ferror
snprintf
sysconf
__cxa_atexit
_edata
__bss_start
_end
optionLoadOpt
optionNumericVal
optionPagedUsage
optionPrintVersion
GLIBC_2.14
GLIBC_2.4
GLIBC_2.7
GLIBC_2.3.4
GLIBC_2.2.5
GLIBC_2.3
AWAVH
AUATUS
D$Prand
|$@L
l$ L
t$PH
[]A\A]A^A_
fffff.
fffff.
fffff.
fffff.
AVAUATUS
[]A\A]A^
]A\A]A^
A9D$
[]A\A]A^
9hpt
fff.
AUATH
d$(R
l$`H
[]A\A]
L$`H
ffff.
ATUSH
[]A\
fff.
AWAVAUATUSH
|$ H
D$PA
D$0H
D$pH
D$8H
D$`H
T$0H
t$8H
|$(L
\$ H
HcD$
L$HA)
|$p@
dH34%(
[]A\A]A^A_
AVAUI
ATU1
D$(1
L$(dH3
0[]A\A]A^
dH34%(
dH34%(
fff.
AUATA
CXD)k
[]A\A]
AWAVI
AUATL
T$8D
D$ H
D$pH
D$(H
D$`H
D$Nf
D$LH
t$ L
T$(H
t$0H
D$Lf
D$PH
D$Nf
D$HH
[]A\A]A^A_
dH34%(
2tv~\
u#Hc
AUATUSH
[]A\A]
[]A\A]
AUATUSH
[]A\A]
[]A\A]
fffff.
ffff.
AWAVAUATUSH
<wOL
[]A\A]A^A_
AUATI
G(tD
[]A\A]
fffff.
dH3<%(
ffffff.
ffffff.
AUATI
[]A\A]
AUATA
[]A\A]
AWAVA
AUATI
[]A\A]A^A_
PAWE
fffff.
AWAVAUATUSH
O8L+G L+O(
AUAVH
[]A\A]A^A_1
AUAVH
([]A\A]A^A_
AWAVH
AUATI
([]A\A]A^A_
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
AWAVAUATUSH
dH34%(
([]A\A]A^A_
ffff.
AWAVAUATUSH
D$x%
L$@f
[]A\A]A^A_
fffff.
AUATUSH
[]A\A]
RRH)
]A\A]
AUATUSH
D$(1
L$(dH3
8[]A\A]
ffff.
ATUSH
[]A\
fffff.
fff.
AUATI
[]A\A]
ffffff.
ATUSH
 []A\
@uKH
kt#~p@
AVAUATUI
[]A\A]A^
[]A\A]A^
[]A\
[]A\
AWAVAUATUSH
T$H1
D$HdH3
X[]A\A]A^A_
|$0E
D$(1
D$(H
fff.
AWAVI
AUATI
L$(1
t$ 1
L$(dH3
8[]A\A]A^A_
usE1
<~tl<-t|H
ATUI
[]A\
[]A\
fff.
AWAVAUATI
[]A\A]A^A_1
[]A\A]A^A_1
<t$H
[]A\A]A^A_
fffff.
t}vK
AWAVAUATUSH
I+D$xI
I+D$xI
M+t$xM
[]A\A]A^A_
AUATI
t`Hc
[]A\A]
tAHc
AWAVI
AUATM
D$H1
L$@H
D$ L
L$(L
L$0L
\$8|$Mc
L$(L
L$0L
L$HdH3
X[]A\A]A^A_
\$0L
L$(H
L$ L
L$ L
L$(L
D$ H
L$(I
L$0L
\$8D)
fffff.
:-u}
ATUI
F8H;
[]A\
ffffff.
AUATI
l$0H
L$0H
]A\A]A^
ATUH
[]A\
% Z!
[]A\
AVAUD
ATUL
jhSH
[]A\A]A^
AWAV
AUATI
|$0H
T$xH
T$xH
H9C8
T$0L
L$0H
]A\A]A^A_
ATUS
-\U!
[]A\
ffffff.
@t8H
AWAVAUATUSH
tgH)
D$(%
[]A\A]A^A_
D$(%
-.Q!
D$(%
fffff.
AWAVAUATUSH
dH3<%(
[]A\A]A^A_
AUAT
dH34%(
([]A\A]
AWAVI
AUATUSH
%lR!
fA;F
[]A\A]A^A_
|$ D
t$0H
fffff.
AWAVI
AUATA
D$0H
D$ H
unA;
 u:H
T$ H
D$(H
[]A\A]A^A_
AWAVAUATUSH
D$81
d$ H
\$ E1
 t$H
t$8dH34%(
H[]A\A]A^A_
su2A
L$(A
:uwA
L$(I
t$(H
l$0H
D$0L
l$(f
T$0L
l$(f
T$0L
ATUSH
[]A\A]
]A\A]
ffffff.
ATUSH
+A:U
[]A\A]
]A\A]
ffffff.
AWAVI
AUATL
u'</
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATH
|$ 1
<:ul
/u=K
[]A\A]A^A_
/t+H
fffff.
ATUSH
[]A\A]
[]A\A]
fffff.
fffff.
AUATUSH
[]A\A]
]A\A]
]A\A]
AVAUATUS
]A\A]A^
[]A\A]A^
[]A\A]A^
ATUSH
[]A\
AWAVA
AUATI
([]A\A]A^A_
9w L
<*t*</ufL
t+I9
AWAVAUATUSH
D$`H
D$@H
dH34%(
[]A\A]A^A_
$9D$
D$`<
D$a/L
L$ H
D$@H
5s !
L$(L
D$ H
D$ H
L$0H
L$(L
D$ H
L$(L
L$0A
L$0H
L$(L
D$ L
D$ H
L$(L
L$ A
L$ L
D$(I
L$0H
L$(L
L$0H
L$(L
trI9
T$ I
L$8H
L$0L
D$(L
L$8H
L$0L
D$(L
D$h1
T$hdH3
ffff.
@t.H
AWAVI
AUATA
t$8H
|$ L
t$@H
[]A\A]A^A_
H#^ 
noneH
H#^ u6
T$8I9
t$ E
noneH
AWAVI
AUATUS
[]A\A]A^A_
$AUL
D$8A
$AUL
L$ H
AYAZ
T$ L
D$8A
$AUL
AUUL
AUUL
fffff.
AWAVLc
AUATI
[]A\A]A^A_
HcT$
AWAVAUATUSH
-J;!
D$8%
[]A\A]A^A_
ffffff.
fffff.
v~ATUH
} []A\
[]A\
AWAVI
AUATUS
[]A\A]A^A_
[]A\A]A^A_
%^7!
AWAVAUATI
T$xH
T$0A
T$0H
T$0H
T$0H
A9D$
8[]A\A]A^A_
E;l$
'ufH
E;l$
T$0D
d$(A
t$ L
d$(H
T$0H
T$0H
T$0D
T$0L
@t	H
AWAVAUATUSH
d$ H
D$(1
tEfA;
D$(dH3
8[]A\A]A^A_
fff.
AWAVAUATUSH
D$h1
=D9l$
H9\$
H9\$
D$hdH3
x[]A\A]A^A_
ATUI
\$xA
|$xH
[]A\
fff.
AWAVAUATI
T$(H
D$0Hc
[]A\A]A^A_
Lct$
D$(H
D$(H
|$ H
|$(H
ffff.
AWAVE
AUATI
[]A\A]A^A_
[]A\A]A^A_
ffffff.
ATUI
D$(1
t9E1
D$(dH3
[]A\
ffff.
ATUSH
D$(1
D$(dH3
0[]A\
 t)H
ATUSH
D$(1
*uyL
D$(dH3
0[]A\
>-t#
<-u<H
D$81
 t-H
L$8dH3
ATUSH
D$(1
L$(dH3
0[]A\
AWAVAUATI
[]A\A]A^A_
AWAVAUATI
[]A\A]A^A_
AWAVI
AUATI
|$(H
t$(D
[]A\A]A^A_
ffff.
ATUI
 tPH
t>% 
t1[]A\
[]A\
[]A\
ffff.
AUATUSH
 t%H
[]A\A]
[]A\A]
XZ~1I
AUATA
dH34%(
[]A\A]
D$0A
AWAVA
AUATUSH
D$(H
D$pH
D$ H
D$hH
D$0H
D$8H
t$ H
#t5H
[]A\A]A^A_
|$(H
D$dH
D$@H
|$@M
D$dL
L$PH
t$(L
D$@H
L$PL
L$PA
L$PH
L$HI
D$dL
t&<\
Lcl$@H
T$8H
t$dL
T$@H
t$ H
D$@H
L$PA
L;t$(H
L$XH
L$XH
L$hA
L$hA
D$XL
L$PH
L$HL
L$PL
D$Xt)A
L$PH
L$PI
|$hA
AWAVAUATUSH
WXdH
D$8%
[]A\A]A^A_
ATUI
[]A\
AVAU
D$81
L$8dH3
@[]A\A]A^
ATUH
[]A\
fffff.
AWAVAUATUSH
dH34%(
[]A\A]A^A_
<'t#<\ti
AWAVAUATUSH
[]A\A]A^A_
t$@M
D$ 1
\$ I)
D$ H
\$ tO
H9T$
D$ H
H9T$
|$ D
AWAVAUATA
D$X1
 t H
|$HH
\$XdH3
h[]A\A]A^A_
fD9A
L$HtT
D$0D
\$ L
T$(L
\$ D
ffffff.
AWAVAUATUSH
ExE1
AWAVAUATI
D$0H
D$(L
ffffff.
ATUH
t4H)
AWAVI
AUATI
[]A\A]A^A_
l$(H
AWAVAUATUSH
|$(H
L$oH
I9B8
hH9B8u
|$(H
L$oH
[]A\A]A^A_
D$H%
T$`L
T$`H
T$`t
D$RH
AWAVA
AUATL
[]A\A]A^A_
4.1.0
1.12
Compiled against libdnet: %s
Compiled against libpcap: %s
Injection method: %s
tcpliveplay version: %s (build %s)
Copyright 2012 by Yazan Siam <tcpliveplay@gmail.com>
64 bit packet counters: enabled
Verbose printing via tcpdump: enabled
tcpliveplay (tcpliveplay)
Copyright (C) 2012 Yazan Siam, all rights reserved.
This is free software. It is licensed for use, modification and
redistribution under the terms of the
Modified (3 clause) Berkeley Software Distribution License
  <http://www.xfree86.org/3.3.6/COPYRIGHT2.html>
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
1.  Redistributions of source code must retain the above copyright notice,
this list of conditions and the following disclaimer.  2.  Redistributions
in binary form must reproduce the above copyright notice, this list of
conditions and the following disclaimer in the documentation and/or other
materials provided with the distribution.  3.  Neither the name Yazan
Siam'' nor the name of any other contributor may be used to endorse or
promote products derived from this software without specific prior written
permission.
tcpliveplay IS PROVIDED BY Yazan Siam AS IS'' AND ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
EVENT SHALL Yazan Siam OR ANY OTHER CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
DAMAGE.
Enable debugging output
DBUG
dbug
Print version information
VERSION
version
Display less usage information and exit
LESS_HELP
less-help
Display extended usage information and exit
help
Extended usage information passed thru pager
more-help
Save the option state to a config file
save-opts
Load options from a config file
LOAD_OPTS
no-load-opts
TCPLIVEPLAY
tcpliveplay (tcpliveplay) - Replays network traffic stored in a pcap file on live networks using new TCP connections
USAGE:  %s [ -<flag> [<val>] | --<name>[{=| }<val>] ]... \
		<eth0/eth1> <file.pcap> <Destinatin IP [1.2.3.4]> <Destination mac [0a:1b:2c:3d:4e:5f]> <'random' dst port OR specify dport #>
.tcpliveplayrc
This program, 'tcpliveplay' replays a captured set of packets using new TCP
connections with the captured TCP payloads against a remote host in order
to do comprehensive vulnerability testings.
The basic operation of tcpliveplay is it rewrites the given pcap file in a
scheduled event format and responds with the apporiate packet if the remote
host meets tcp protocal's SEQ/ACK expectation.  Once expectations are met,
then the local packets are sent with the same payload except with new tcp
SEQ & ACK numbers meeting the response from the remote hose.
The inputted pcap file are rewritten to start at the first encounter of the
SYN packet for correct operation making this packet be the first action in
the event schedule of local host doing the replay.
For more details, please see the Tcpreplay Manual at:
http://tcpreplay.appneta.com
ERROR: Invalid IP header length: %u bytes
ERROR: Invalid TCP header length: %u bytes
Received Remote Packet...............	[%d]
Remote Pakcet Expectation met.
Proceeding in replay....
Local Packet Loss! Resending Lost packet >> DupACK Issued!
Payload size of received packet does not meet expectations
Remote Packet Expectation met.
Proceeding in replay....
tcp and dst host %d.%d.%d.%d and dst port %u
Couldn't find default device: %s
Couldn't get netmask for device %s: %s
Couldn't install filter %s: %s
Couldn't open pcap file %s: %s
Unsupported protocol for checksum:
*******An Error Occured calculating TCP Checksum*******
*******An Error Occured calculating IP Checksum*******
Cannot open PCAP file '%s' for reading
Cannot open PCAP file '%s' for writing
warning: packet capture truncated to %d byte packets
Usage: tcpliveplay <eth0/eth1> <file.pcap> <Destinatin IP [1.2.3.4]> <Destination mac [0a:1b:2c:3d:4e:5f]> <specify 'random' or specific port#>
Example:
    yhsiam@yhsiam-VirtualBox:~$ sudo tcpliveplay eth0 test1.pcap 192.168.1.4 52:57:01:11:31:92 random
Fatal Error: Failed to access interface %s
Fatal Error: Can't open %s: %s
Fatal Error: failed to parse mac address %s
Fatal Error: failed to parse IP address %s
Fatal Error: Unable to rewrite PCAP file %s
Error occured while listing on traffic: %s
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ ERROR:: There are no TCP packets to send                      +
+ Closing replay...                                             +
+ Thank you for Playing, Play again!                            +
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Sending Local Packet...............	[%d]
======================================================================
= TIMEOUT:: Remote host is not responding. You may have crashed      =
= the host you replayed these packets against OR the packet sequence =
= changed since the capture was taken resulting in differing         =
= expectations. Closing replay...                                    =
======================================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ ERROR:: Remote host has requested to RESET the connection.   +
+ Closing replay...                                            +
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Skipping Packet......................	[%d] to Packet [%d]
Next Remote Packet Expectation met.
Proceeding in replay...
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+ WARNING: Remote host is not meeting packet size expectations.               +
+ for packet %-d. Application layer data differs from capture being replayed.  +
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Requesting retransmission.
 Proceeding...
+ ERROR: Re-sent packet [%-d] 3 times, but remote host is not  +
+ responding as expected. 3 resend attempts are a maximum.     +
Receiving Packets from remote host...
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~ CONGRATS!!! You have successfully Replayed your pcap file '%s'  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~ Unfortunately an error has occurred  halting the replay of  
~ the pcap file '%s'. Please see error above for details...   
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
----------------TCP Live Play Summary----------------
- Packets Scheduled to be Sent & Received:          %-d   
- Actual Packets Sent & Received:                   %-d   
- Total Local Packet Re-Transmissions due to packet       
- loss and/or differing payload size than expected: %-d   
- Thank you for Playing, Play again!                      
----------------------------------------------------------
>Received a Remote Packet
>>Checking Expectations
Couldn't open device %s: %s
Couldn't parse filter %s: %s
Couldn't open file %s
[%d.%d.%d.%d]
[%x:%x:%x:%x:%x:%x]
newfile.pcap
tcpliveplay.c
%hhx:%hhx:%hhx:%hhx:%hhx:%hhx
Random Local SEQ: %u
ERROR: Incorrect Usage!
new source port:: %d
out of memory
Fatal Error:
Packets Scheduled %d
setup_sched
get.c
pktdata
datalen
*newbuff
ip_hdr
exthdr
ip6_hdr
Warning: %s
Warning: No Magic Number found: %s (0x%x)
Fatal Error: Unable to process unsupported DLT type: %s (0x%x)
Warning: Expected dotted-quad notation (%s) when DNS lookups are disabled
Warning: Unable to convert 0x%x to a string
Unable to convert addr to a string
get_addr2name6
get_addr2name4
get_ipv6_l4proto
get_ipv6_next
get_layer4_v6
get_layer4_v4
get_ipv6
get_ipv4
get_l2len
get_l2protocol
ERROR in %s:%s() line %d: Unable to malloc() %zu bytes
ERROR: in %s:%s() line %d: Unable to remalloc() buffer to %zu bytes
ERROR in %s:%s() line %d: Unable to strdup() %zu bytes
Actual: %llu packets (%llu bytes) sent in %zd.%02zd seconds.
Actual: %llu packets (%llu bytes) sent in %zd.%06zd seconds.
Rated: %llu.%1u Bps, %llu.%02u Mbps, %llu.%02u pps
Rated: %llu.%1u Bps, %llu.%03u Mbps, %llu.%02u pps
%llu write attempts failed from full buffers and were repeated
Fatal Error: Invalid hex string byte: %s
Hex buffer too small for data- skipping data
utils.c
funcname
line
file
Hex buffer must be > 0
read_hexstring
_our_safe_free
git:v4.1.0
sendpacket.c
khial
PF_PACKET send()
device
errbuf
socket: %s
ioctl: %s
bind error: %s
error opening %s: %s
SO_BROADCAST: %s
no injector selected!
netmap
Quick TX
Error setting direction on %s: %s (%d)
Error with %s [%llu]: %s (errno = %d)
Fatal Error: Unsupported sp->handle_type = %d
Only able to write %d bytes out of %u bytes total
error opening khial device: %s
Fatal Error: "%s" is a block device and is not a valid Tcpreplay device
Fatal Error: "%s" is a directory and is not a valid Tcpreplay device
Fatal Error: "%s" is a FIFO and is not a valid Tcpreplay device
Fatal Error: "%s" is a symbolic link and is not a valid Tcpreplay device
Fatal Error: "%s" is a file and is not a valid Tcpreplay device
Fatal Error: "%s" is not a valid Tcpreplay device
Error getting hardware type: %s
Warning: Unsupported physical layer type 0x%04x on %s.  Maybe it works, maybe it wont.  See tickets #123/318
Fatal Error: failed to open device %s: %s
Statistics for network device: %s
	Attempted packets:         %llu
	Successful packets:        %llu
	Failed packets:            %llu
	Truncated packets:         %llu
	Retried packets (ENOBUFS): %llu
	Retried packets (EAGAIN):  %llu
	Flows total:               %llu
	Flows unique:              %llu
	Flows expired:             %llu
	Flow packets:              %llu
	Non-flow packets:          %llu
	Invalid flow packets:      %llu
Libnet is no longer supported!
Error: sendpacket_get_hwaddr() not yet supported for character devices
Unable to get hardware address on un-opened sendpacket handle
Unable to open dummy socket for get_hwaddr: %s
Error getting hardware address: %s
Warning: Unable to get DLT value for %s: %s
sendpacket_abort
sendpacket_geterr
sendpacket_get_hwaddr
sendpacket_close
sendpacket_close
sendpacket_getstat
sendpacket_open_pf
sendpacket_open_khial
sendpacket_open
sendpacket_seterr
sendpacket
PAGER_STATE_READY failure
%-18s
  %d
keyword
set-membership
true
false
</%s>
 [arg]
   -%c
%s/%s
%s=%s
YMWD
PATH
%s%s
typeset -x -i %s_
reset.c
0 == 1
AUTOOPTS_USAGE
amp;
[%s]
POSIXLY_CORRECT
SHELL
/usr/bin/bash
autoopts
no_misuse_usage
bel;
space;
quot;
apos;
type
words
members
uncooked
keep
invalid
nested
integer
bool
string
boolean
hierarchy
AO_CURRENT.AO_REVISION
%%-%us %%s
optionResetOpt
LONGUSAGE
USAGE
VERSION
</%s>
AO_CURRENT:AO_REVISION:AO_AGE
amp;
quot;
apos;
genshellopt 1
Copyright (C) 1999-2012 Bruce Korb, all rights reserved.
This is free software. It is licensed for use, modification and
redistribution under the terms of the
GNU General Public License, version 3 or later
    <http://gnu.org/licenses/gpl.html>
genshellopt is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the Free
Software Foundation, either version 3 of the License, or (at your option)
any later version.
genshellopt is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
more details.
You should have received a copy of the GNU General Public License along
with this program.  If not, see <http://www.gnu.org/licenses/>.
Output Script File
SCRIPT
script
Shell name (follows "#!" magic)
SHELL
no-shell
Display extended usage information and exit
help
Extended usage information passed thru pager
more-help
Output version information and exit
version
GENSHELLOPT
genshellopt - Generate Shell Option Processing Script - Ver. 1
USAGE:  %s [ -<flag> [<val>] | --<name>[{=| }<val>] ]...
autogen-users@lists.sourceforge.net
Note that ``shell'' is only useful if the output file does not already
exist.  If it does, then the shell name and optional first argument will be
extracted from the script file.
If the script file already exists and contains Automated Option Processing
text, the second line of the file through the ending tag will be replaced
by the newly generated text.  The first ``#!'' line will be regenerated.
genshellopt 1
INVALID-%d
*INVALID*
none
PAGER
/tmp/use.%lu
more
    --* )
    -* )
        ;;
stdout
%A %B %e, %Y at %r %Z
#! %s
%s_%s=
export %s_%s
'%s'
%s_%s_%d=
export %s_%s_%d
set --
 '%s'
'\''
OPTION_CT=0
=%1$lu # 0x%1$lX
true
false
VERSION
OPT_ARG_NEEDED=OK
OPT_ARG_NEEDED=NO
OPT_ARG_NEEDED=YES
LONGUSAGE
flag
%s_%s_TEXT='
option
env | grep '^%s_'
 -- %s
				- 
				  
    * )
         OPT_PROCESS=false
         ;;
    esac
  %s
%%-%ds
%1$s /tmp/use.%2$lu ; rm -f /tmp/use.%2$lu
# # # # # # # # # # -- do not modify this marker --
#  DO NOT EDIT THIS SECTION
%s OF %s
#  From here to the next `-- do not modify this marker --',
#  the text has been generated %s
#  From the %s option definitions
if test -z "${%1$s_%2$s}"
then
  %1$s_%2$s_CT=0
else
  %1$s_%2$s_CT=1
  %1$s_%2$s_1=${%1$s_%2$s}
export %1$s_%2$s_CT
%1$s_%2$s=${%1$s_%2$s-'%3$s'}
%1$s_%2$s_set=false
export %1$s_%2$s
%1$s_%2$s=${%1$s_%2$s}
%1$s_%2$s_set=false
export %1$s_%2$s
OPT_PROCESS=true
OPT_ARG=$1
while ${OPT_PROCESS} && [ $# -gt 0 ]
    OPT_ELEMENT=''
    OPT_ARG_VAL=''
    case "${OPT_ARG}" in
    -- )
        OPT_PROCESS=false
        shift
        ;;
OPT_ARG=$1
while [ $# -gt 0 ]
    OPT_ELEMENT=''
    OPT_ARG_VAL=''
    OPT_ARG=${1}
    if [ -n "${OPT_ARG_VAL}" ]
    then
        eval %1$s_${OPT_NAME}${OPT_ELEMENT}="'${OPT_ARG_VAL}'"
        export %1$s_${OPT_NAME}${OPT_ELEMENT}
    fi
done
unset OPT_PROCESS || :
unset OPT_ELEMENT || :
unset OPT_ARG     || :
unset OPT_ARG_NEEDED || :
unset OPT_NAME    || :
unset OPT_CODE    || :
unset OPT_ARG_VAL || :
%2$s
# # # # # # # # # #
#  END OF AUTOMATED OPTION PROCESSING
# # # # # # # # # # -- do not modify this marker --
        case "${OPT_CODE}" in
        '%s' | \
        '%s' )
        '%c' )
            ;;
        * )
            echo Unknown %s: "${OPT_CODE}" >&2
            echo "$%s_USAGE_TEXT"
            exit 1
            ;;
        esac
            echo "$%s_%s_TEXT"
            exit 0
            echo "$%s_LONGUSAGE_TEXT" | ${PAGER-more}
            exit 0
            %s
            if [ $%1$s_%2$s_CT -ge %3$d ] ; then
                echo Error:  more than %3$d %2$s options >&2
                echo "$%1$s_USAGE_TEXT"
                exit 1 ; fi
            %1$s_%2$s_CT=`expr ${%1$s_%2$s_CT} + 1`
            OPT_ELEMENT="_${%1$s_%2$s_CT}"
            OPT_NAME='%2$s'
            if [ -n "${%1$s_%2$s}" ] && ${%1$s_%2$s_set} ; then
                echo Error:  duplicate %2$s option >&2
                echo "$%1$s_USAGE_TEXT"
                exit 1 ; fi
            %1$s_%2$s_set=true
            OPT_NAME='%2$s'
            %1$s_%2$s_CT=0
            OPT_ELEMENT=''
            %1$s_%2$s='%3$s'
            export %1$s_%2$s
            OPT_NAME='%2$s'
            if [ -n "${%1$s_%2$s}" ] && ${%1$s_%2$s_set} ; then
                echo 'Error:  duplicate %2$s option' >&2
                echo "$%1$s_USAGE_TEXT"
                exit 1 ; fi
            %1$s_%2$s_set=true
            %1$s_%2$s='%3$s'
            export %1$s_%2$s
            OPT_NAME='%2$s'
            eval %1$s_%2$s${OPT_ELEMENT}=true
            export %1$s_%2$s${OPT_ELEMENT}
            OPT_ARG_NEEDED=OK
            OPT_ARG_NEEDED=YES
            eval %1$s_%2$s${OPT_ELEMENT}=true
            export %1$s_%2$s${OPT_ELEMENT}
            OPT_ARG_NEEDED=NO
        OPT_CODE=`echo "X${OPT_ARG}"|sed 's/^X-*//'`
        shift
        OPT_ARG=$1
        case "${OPT_CODE}" in *=* )
            OPT_ARG_VAL=`echo "${OPT_CODE}"|sed 's/^[^=]*=//'`
            OPT_CODE=`echo "${OPT_CODE}"|sed 's/=.*$//'` ;; esac
        case "${OPT_ARG_NEEDED}" in
        NO )
            OPT_ARG_VAL=''
            ;;
        YES )
            if [ -z "${OPT_ARG_VAL}" ]
            then
                if [ $# -eq 0 ]
                then
                    echo No argument provided for ${OPT_NAME} option >&2
                    echo "$%s_USAGE_TEXT"
                    exit 1
                fi
                OPT_ARG_VAL=${OPT_ARG}
                shift
                OPT_ARG=$1
            fi
            ;;
        OK )
            if [ -z "${OPT_ARG_VAL}" ] && [ $# -gt 0 ]
            then
                case "${OPT_ARG}" in -* ) ;; * )
                    OPT_ARG_VAL=${OPT_ARG}
                    shift
                    OPT_ARG=$1 ;; esac
            fi
            ;;
        esac
        OPT_CODE=`echo "X${OPT_ARG}" | sed 's/X-\(.\).*/\1/'`
        OPT_ARG=` echo "X${OPT_ARG}" | sed 's/X-.//'`
        case "${OPT_ARG_NEEDED}" in
        NO )
            if [ -n "${OPT_ARG}" ]
            then
                OPT_ARG=-${OPT_ARG}
            else
                shift
                OPT_ARG=$1
            fi
            ;;
        YES )
            if [ -n "${OPT_ARG}" ]
            then
                OPT_ARG_VAL=${OPT_ARG}
            else
                if [ $# -eq 0 ]
                then
                    echo No argument provided for ${OPT_NAME} option >&2
                    echo "$%s_USAGE_TEXT"
                    exit 1
                fi
                shift
                OPT_ARG_VAL=$1
            fi
            shift
            OPT_ARG=$1
            ;;
        OK )
            if [ -n "${OPT_ARG}" ]
            then
                OPT_ARG_VAL=${OPT_ARG}
                shift
                OPT_ARG=$1
            else
                shift
                if [ $# -gt 0 ]
                then
                    case "$1" in -* ) ;; * )
                        OPT_ARG_VAL=$1
                        shift ;; esac
                    OPT_ARG=$1
                fi
            fi
            ;;
        esac
%1$s_%2$s=%3$d # 0x%3$X
export %1$s_%2$s
%1$s_%2$s_CT=%3$d
export %1$s_%2$s_CT
OPTION_CT=%d
export OPTION_CT
%1$s_%2$s=%3$s
export %1$s_%2$s
%1$s_%2$s='%3$s'
export %1$s_%2$s
%1$s_%2$s_MODE='%3$s'
export %1$s_%2$s_MODE
echo 'Warning:  Cannot load options files' >&2
echo 'Warning:  Cannot save options files' >&2
echo 'Warning:  Cannot suppress the loading of options files' >&2
%1$s_%2$s_TEXT='no %2$s text'
%s WARNING:  cannot save options - 
<%s/>
<%s>
</%s>
<%s type=%s>
<%s type=nested>
#x%02X;
<%1$s type=boolean>%2$s</%1$s>
<%1$s type=integer>0x%2$lX</%1$s>
malloc of %d bytes failed
AutoOpts function called without option descriptor
	This exceeds the compiled library version:  
Automated Options Processing Error!
	%s called AutoOpts function with structure version %d:%d:%d.
realloc of %d bytes at 0x%p failed
	This is less than the minimum library version:  
strdup of %d byte string failed
Automated Options version %s
	copyright (c) 1999-2012 by Bruce Korb - all rights reserved
AutoOpts lib error: defaulted to option with optional arg
(AutoOpts bug):  Aliasing option is out of range.
				- an alternate for %s
%s error:  the keyword `%s' is ambiguous for %s
  The following options match:
%s: ambiguous option name: %s (matches %d options)
  %s%s
%s: Command line arguments required
%d %s%s options allowed
version, usage and configuration options:
Error %d (%s) from the pipe(2) syscall
ERROR: version option argument '%c' invalid.  Use:
	'v' - version only
	'c' - version and copyright
	'n' - version and copyright notice
ERROR:  %s option conflicts with the %s option
%s(optionSaveState): error: cannot allocate %d bytes
auto-options
program
				- default option for unnamed options
				- disabled as --%s
%s: The ``%s'' option has been disabled
 --- %-14s %s
This option has been disabled
				- enabled by default
-equivalence
ERROR:  only 
 - examining environment variables named %s_*
     
Options are specified by doubled hyphens and their name or by a single
hyphen and the flag character.
%%-%ds %%s
fs error %d (%s) on fork - cannot obtain %s usage
fs error %d (%s) on freopen
File error %d (%s) opening %s for loading options
fs error %d (%s) reading file %s
fs error %d (%s) on %s %s for option %s
stat-ing for directory
stat-ing for regular file
stat-ing for non-existant file
open-ing file
fopen-ing file
				- file must not pre-exist
				- file must pre-exist
= = = = = = = =
This incarnation of genshell will produce
a shell script to parse the options for %s:
=Cplx
[=arg]
--%2$s%1$s
%s: illegal option -- %c
%s: illegal option -- %s
%s: unknown vendor extension option -- %s
  or an integer from %d through %d
AutoOpts ERROR:  invalid option descriptor for %s
%s: invalid option name: %s
  or an integer mask with any of the lower %d bits set
				- is a set membership option
%s: option `%s' requires an argument
Equivalenced option '%s' was equivalenced to both
	'%s' and '%s'
				- must appear between %d and %d times
ERROR:  The %s option is required
%s: option `%s' cannot have an argument
%s: Command line arguments not allowed
error %d (%s) creating %s
Options are specified by single or double hyphens and their name.
%s error:  `%s' does not match any %s keywords
				- may appear multiple times
				- may not be preset
The 'reset-option' option requires an argument
   Arg Option-Name    Description
  Flg Arg Option-Name    Description
error %d (%s) stat-ing %s
%s(optionRestore): error: no saved option state
none
'%s' not defined
'%s' is not a command line option
ERROR:  The %s option must appear %d times
error:  cannot load options from non-regular file %s
%s error:  `%s' is not a recognizable number
%s error:  `%s' is not a recognizable date/time
%s error:  `%s' is not a recognizable time duration
 %3s %s
The '-#<number>' option may omit the hash char
one %s%s option allowed
All arguments are named options.
Write failure to output file
 - reading file %s
please send bug reports to:  %s
				- may NOT appear - preset only
#  preset/initialization file
#  %s#
The following option preset mechanisms are supported:
prohibits these options:
Operands and options may be intermixed.  They will be reordered.
%s%ld to %ld
%sgreater than or equal to %ld
%sIt must lie in one of the ranges:
%sIt must be in the range:
, or
%s error:  %s option value %ld is out of range.
%s%ld exactly
%sis scalable with a suffix: k/K/m/M/g/G/t/T
%sless than or equal to %ld
The --reset-option has not been configured.
ERROR:  %s option requires the %s option
 %3s %-14s %s
requires these options:
   Arg Option-Name   Req?  Description
  Flg Arg Option-Name   Req?  Description
or you may use a numeric representation.  Preceding these with a '!' will
clear the bits, specifying 'none' will clear all bits, and 'all' will set them
all.  Multiple entries may be passed as an option argument list.
      
				- 
				-- and 
				%s
%s error:  %s exceeds %s keyword count
				- may appear up to %d times
The valid "%s" option keywords are:
These additional options are:
The next option supports vendor supported extra options:
;*3$"
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
=str
=num
=Tim
=Mbr
=file
=KWd
=T/F
tcpliveplay.debug
7zXZ
(RNd
iQ%GC
^pnA
""C8?
~ppuA
(g3j
:b|O'
jDCWW
a?1 M
KT[y<I
Jmk=
A6k\
J(q0d
MKmN
qxEH
>:TJ
c>	lX
c>4u
lF#%1Y/
{{2/.{
Y3v>|
|Ddc
F'%9
`\4Q
80s-
ZPgtz
`RI` 
"@UIgj5
k4atv7h
&_.bV
 Sw9
{}:z:
_iAIFk
0P@&_>Ku%A
xjH^
4<4]
*N!_
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
