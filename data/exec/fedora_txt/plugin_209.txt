__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
find_column_of_field
sheet_cell_get
gnm_cell_eval
gnm_cell_is_empty
value_new_error_REF
value_get_as_float
value_new_float
value_new_empty
sheet_cell_fetch
g_slist_prepend
g_slist_reverse
g_slist_length
g_malloc_n
value_dup
g_free
g_slist_free
g_log
value_new_int
value_new_error_NUM
parse_database_criteria
value_new_error_std
free_criterias
__stack_chk_fail
go_range_average
go_range_max
go_range_min
gnm_range_product
gnm_range_stddev_est
gnm_range_stddev_pop
go_range_sum
gnm_range_var_est
gnm_range_var_pop
database_functions
go_plugin_header
go_plugin_depends
libm.so.6
libc.so.6
_edata
__bss_start
_end
plugin.so
GLIBC_2.2.5
GLIBC_2.4
%z> 
%r> 
%j> 
%b> 
%Z> 
%R> 
%J> 
%B> 
%:> 
%2> 
%*> 
%"> 
=)> 
u+UH
AVAUATUSH
D$4L
9l$ 
t$0H
|$(L
D$(9l$ 
D$4L
l$ 1
?2t'
D$8H
[]A\A]A^A_
AWAVAUATUH
D$(1
t$(dH34%(
8[]A\A]A^A_
t$xM
T$(ARL
L$,L
D$ L
t$pH
ATUH
([]A\A]A^A_
unsupported flags in database_find_values %x
GETPIVOTDATA:summary data from a pivot table
pivot_table:cell range containing the pivot table
field_name:name of the field for which the summary data is requested
If the summary data is unavailable, GETPIVOTDATA returns #REF!
DVARP:variance of the population of values in @{field} in @{database} belonging to records that match @{criteria}
database:a range in which rows of related information are records and columns of data are fields
field:a string or integer specifying which field is to be used
criteria:a range containing conditions
@{database} is a range in which rows of related information are records and columns of data are fields. The first row of a database contains labels for each column.
@{field} is a string or integer specifying which field is to be used. If @{field} is an integer n then the nth column will be used. If @{field} is a string, then the column with the matching label will be used.
@{criteria} is a range containing conditions. The first row of a @{criteria} should contain labels. Each label specifies to which field the conditions given in that column apply. Each cell below the label specifies a condition such as ">3" or "<9". An equality condition can be given by simply specifying a value, e. g. "3" or "Jody". For a record to be considered it must satisfy all conditions in at least one of the rows of @{criteria}.
Let us assume that the range A1:C7 contain the following values:
Name    	Age     	Salary
John    	34      	54342
Bill    	35      	22343
Clark   	29      	34323
Bob     	43      	47242
Susan   	37      	42932
Jill    		45      	45324
In addition, the cells A9:B11 contain the following values:
Age     	Salary
>40     	>46000
DVARP(A1:C7, "Age", A9:B11) equals 49.
DVARP(A1:C7, "Salary", A9:B11) equals 41725140.25.
DVAR:sample variance of the values in @{field} in @{database} belonging to records that match @{criteria}
DVAR(A1:C7, "Age", A9:B11) equals 98.
DVAR(A1:C7, "Salary", A9:B11) equals 83450280.5.
DSUM:sum of the values in @{field} in @{database} belonging to records that match @{criteria}
DSUM(A1:C7, "Age", A9:B11) equals 72.
DSUM(A1:C7, "Salary", A9:B11) equals 81565.
DSTDEVP:standard deviation of the population of values in @{field} in @{database} belonging to records that match @{criteria}
DSTDEVP(A1:C7, "Age", A9:B11) equals 7.
DSTDEVP(A1:C7, "Salary", A9:B11) equals 6459.5.
DSTDEV:sample standard deviation of the values in @{field} in @{database} belonging to records that match @{criteria}
DSTDEV(A1:C7, "Age", A9:B11) equals 9.89949.
DSTDEV(A1:C7, "Salary", A9:B11) equals 9135.112506.
DPRODUCT:product of all values in @{field} in @{database} belonging to records that match @{criteria}
DPRODUCT(A1:C7, "Age", A9:B11) equals 1247.
DMIN:smallest number in @{field} in @{database} belonging to a record that match @{criteria}
DMIN(A1:C7, "Salary", A9:B11) equals 34323.
DMIN(A1:C7, "Age", A9:B11) equals 29.
DMAX:largest number in @{field} in @{database} belonging to a record that match @{criteria}
DMAX(A1:C7, "Salary", A9:A11) equals 47242.
DMAX(A1:C7, "Age", A9:A11) equals 45.
DMAX(A1:C7, "Age", A9:B11) equals 43.
DGET:a value from @{field} in @{database} belonging to records that match @{criteria}
If none of the records match the conditions, DGET returns #VALUE!
If more than one record match the conditions, DGET returns #NUM!
DGET(A1:C7, "Salary", A9:A10) equals 34323.
DGET(A1:C7, "Name", A9:A10) equals "Clark".
DCOUNTA:count of cells with data in @{field} in @{database} belonging to records that match @{criteria}
DCOUNTA(A1:C7, "Salary", A9:A11) equals 3.
DCOUNTA(A1:C7, "Salary", A9:B11) equals 2.
DCOUNTA(A1:C7, "Name", A9:B11) equals 2.
DCOUNT:count of numbers in @{field} in @{database} belonging to records that match @{criteria}
DCOUNT(A1:C7, "Salary", A9:A11) equals 3.
DCOUNT(A1:C7, "Salary", A9:B11) equals 2.
DCOUNT(A1:C7, "Name", A9:B11) equals 0.
DAVERAGE:average of the values in @{field} in @{database} belonging to records that match @{criteria}
DAVERAGE(A1:C7, "Salary", A9:A11) equals 42296.3333.
DAVERAGE(A1:C7, "Age", A9:A11) equals 39.
DAVERAGE(A1:C7, "Salary", A9:B11) equals 40782.5.
DAVERAGE(A1:C7, "Age", A9:B11) equals 36.
daverage
dcount
dcounta
dget
dmax
dmin
dproduct
dstdev
dstdevp
dsum
dvar
dvarp
getpivotdata
DVAR
DVARP
DPRODUCT
DSTDEV
DSTDEVP
DSUM
DCOUNT
DMIN
DAVERAGE,DCOUNTA
goffice
gnumeric
1.12.41
munG
;*3$"
gcc 8.1.1 20180626
GA*GOW
GA+stack_clash
GA*cf_protection
GA+GLIBCXX_ASSERTIONS
GA*FORTIFY
GA!stack_realign
plugin.so-1.12.41-2.fc29.x86_64.debug
7zXZ
?vQhF6
5u3(sf
"&yVk
=t*W
4U! 
_!dvj
6{+"+
(?	j
y,0,
jbBQ
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.note.gnu.property
.init_array
.fini_array
.data.rel.ro
.dynamic
.got
.bss
.gnu.build.attributes
.gnu_debuglink
.gnu_debugdata
