%_x	
b]Z=
`<W43
hTGk
y79z
__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
_Z12logfile_readP9logfile_t
fgets
strlen
isspace
strtol
strtod
__assert_fail
_Z12logfile_freeP9logfile_t
fclose
_ZdlPv
_Z13logfile_allocPKc
_Znwj
fopen
_Znaj
__errno_location
strerror
__printf_chk
__gxx_personality_v0
omap_draw_map
glPixelZoom
glPixelTransferf
glPixelStorei
glRasterPos2f
glDrawPixels
omap_save_pgm
__fprintf_chk
fwrite
stderr
omap_add
sincos
pose2_add_pos
floor
omap_clear
memset
omap_free
_ZdaPv
omap_alloc
ceil
_Z15pmap_sort_nborsP11pmap_nbor_tS0_
pmap_set_pose
pmap_draw_sample_map
pmap_draw_map
pmap_draw_sample
glBegin
glVertex3f
glEnd
pmap_draw_samples
glColor3f
pmap_draw_scan
glPushMatrix
glTranslatef
glRotatef
glutSolidSphere
glPopMatrix
pmap_add_scan_sample
pmap_add_scan
memcpy
pmap_resample
gsl_ran_discrete_preproc
gsl_ran_discrete
gsl_ran_discrete_free
pmap_entropy
pmap_apply_sensor_sample
matrix33_set
matrix33_mul_3
pmap_apply_sensor
pmap_apply_action
matrix44_mul_4
gsl_ran_gaussian
pose2_add
pmap_update
pose2_sub
pmap_init_nbors
sqrt
qsort
pmap_free
gsl_rng_free
pmap_alloc
gsl_rng_taus
gsl_rng_alloc
rmap_draw_cons
glVertex2f
rmap_draw_map
rmap_interpolate
rmap_add
_Z12rmap_fit_fdfPK10gsl_vectorP6rmap_tPdPS_
gsl_vector_set_zero
gsl_vector_get
vector2_sub
vector2_dot
vector2_set
gsl_vector_set
_Z10rmap_fit_fPK10gsl_vectorP6rmap_t
_Z11rmap_fit_dfPK10gsl_vectorP6rmap_tPS_
rmap_relax
gsl_vector_alloc
gsl_multimin_fdfminimizer_vector_bfgs
gsl_multimin_fdfminimizer_alloc
gsl_multimin_fdfminimizer_set
gsl_multimin_fdfminimizer_iterate
gsl_multimin_fdfminimizer_minimum
gsl_multimin_fdfminimizer_x
gsl_multimin_fdfminimizer_free
gsl_vector_free
rmap_match_prepare
rmap_match_scan
vector2_mag
rmap_match
rmap_free
rmap_alloc
vector2_add
vector2_scale
vector3_set
vector3_add
vector3_sub
vector3_scale
vector3_dot
vector3_cross
vector4_set
vector4_add
vector4_sub
vector4_scale
vector4_dot
matrix33_setv
matrix33_ident
matrix33_add
matrix33_sub
matrix33_mul
matrix33_trans
matrix33_inv
matrix33_mul_33
matrix44_set
matrix44_setv
matrix44_ident
matrix44_add
matrix44_sub
matrix44_mul
matrix44_trans
matrix44_inv
matrix44_mul_44
pose2_set
pose2_sub_pos
pose2_sub_rot
atan2
pose2_inv
pose2_add_rot
matrix44_isnan
__isnan
matrix33_isnan
vector4_dist
vector4_mag
vector4_unit
vector3_dist
vector3_mag
vector3_unit
vector2_dist
vector2_unit
libpthread.so.0
librt.so.1
libnsl.so.1
libcrypto.so.10
libraw1394.so.11
libz.so.1
libltdl.so.7
libdl.so.2
libjpeg.so.62
libGL.so.1
libGLU.so.1
libglut.so.3
libstdc++.so.6
libm.so.6
libc.so.6
libgcc_s.so.1
_edata
__bss_start
_end
libpmap.so.0
GLIBC_2.0
GLIBC_2.1
CXXABI_1.3
GLIBCXX_3.4
GLIBC_2.1.3
GLIBC_2.3.4
d$,[^_]
d$\[^_]
d$L[^_]
P(xH
P(x8
[^_]
[^_]
d$l[^_]
d$,[^_]
[^_]
d$l[^_]
G(xQ
~2;E
d$l[^_]
d$<[^_]
d$\[^_]
d$\[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
d$<[^_]
d$,[^_]
[^_]
333?
$333?
d$<[^_]
fff?
d$,[^_]
}2i}
d$<[^_]
F4;U
F,;F0
d$\[^_]
[^_]
d$$[]
d$l[^_]
[^_]
BD;E
v!9x
Qd;Qh
[^_]
d$,[^_]
FPt[
d$l[^_]
d$ [^]
d$@[^]
d$$[]
d$$[]
[^_]
[^_]
logfile.cpp
self->token_count >= 3
sync
self->token_count >= 5
position2d
self->token_count >= 14
laser
self->token_count >= 13
self->token_count < (int) (sizeof(self->tokens) / sizeof(self->tokens[i]))
self->token_count >= 13 + self->laser_range_count * 2
unable to open log file [%s]: %s
int logfile_read(logfile_t*)
error writing %s : %s
P5 %d %d 255
omap.cpp
self->grid
omap_t* omap_alloc(int, double, double, double, double, double, double)
?pmap.cpp
best_i >= 0
finite(sample_probs[i])
dist
self->rng
entropy %f
self->step_count < self->step_max_count
num_ranges == self->num_ranges
allocating %d bytes for scans
allocating %d Mb of map space (estimated lower bound)
void pmap_draw_scan(pmap_t*, double*)
void pmap_add_scan(pmap_t*, double*)
void pmap_resample(pmap_t*, int)
void pmap_update(pmap_t*, pose2_t, int, double*)
pmap_t* pmap_alloc(int, double, double, double, int, double, double, double)
?es-8R
?333333
?rmap.cpp
scan_a->index >= 0
scan_b->index >= 0
scan->num_hits < 1024
num-scans = %d
con->scan_b == scan_b
self->num_scans < self->max_scans
self->num_items < self->max_items
self->num_cons < self->max_cons
void rmap_interpolate(rmap_t*)
void rmap_match_scan(rmap_t*, rmap_scan_t*)
void rmap_match_prepare(rmap_t*, rmap_scan_t*)
void rmap_add(rmap_t*, pose2_t, int, double*)
rmap_t* rmap_alloc(int, double, double, double, double, double)
MbP?
libpmap.so.0.0.0.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
