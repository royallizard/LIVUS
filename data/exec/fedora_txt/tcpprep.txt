/lib64/ld-linux-x86-64.so.2
libpcap.so.1
_ITM_deregisterTMCloneTable
__gmon_start__
_Jv_RegisterClasses
_ITM_registerTMCloneTable
pcap_geterr
_init
pcap_dump_flush
pcap_close
pcap_next
pcap_open_offline
pcap_setfilter
pcap_dump_fopen
pcap_datalink
pcap_compile
pcap_snapshot
pcap_datalink_val_to_description
_fini
pcap_version
librt.so.1
libnsl.so.1
libc.so.6
__stpcpy_chk
fflush
strcpy
fchmod
__printf_chk
readdir
execv
_IO_putc
strncmp
inet_aton
strrchr
wait
regexec
pipe
__strdup
__isoc99_sscanf
closedir
inet_ntoa
inet_ntop
strncpy
fork
regfree
__stack_chk_fail
__lxstat
unlink
realloc
_exit
socketpair
strpbrk
getpid
kill
inet_pton
strftime
__assert_fail
strtod
strtol
mmap
fgetc
fgets
calloc
strlen
memset
strstr
__errno_location
memcmp
dup2
poll
__fprintf_chk
ctime
stdout
fputc
fputs
regerror
memcpy
fclose
__vsnprintf_chk
strtoul
malloc
__strncpy_chk
opendir
__ctype_b_loc
getenv
__open_2
regcomp
stderr
system
munmap
__snprintf_chk
freopen
__fxstat
strncat
strtoull
fileno
fwrite
fread
__memcpy_chk
waitpid
localtime
strchr
__vfprintf_chk
__strtok_r
fdopen
canonicalize_file_name
__ctype_toupper_loc
__ctype_tolower_loc
__cxa_finalize
fcntl
__sprintf_chk
__xstat
memmove
access
strcmp
strerror
__libc_start_main
ferror
snprintf
sysconf
__cxa_atexit
_edata
__bss_start
_end
optionLoadOpt
optionNumericVal
optionPagedUsage
optionPrintVersion
GLIBC_2.14
GLIBC_2.4
GLIBC_2.7
GLIBC_2.3.4
GLIBC_2.2.5
GLIBC_2.3
AVAUATUI
2t^~L
qtW=
htKH
dH34%(
[]A\A]A^
fffff.
fffff.
fffff.
fffff.
fffff.
fffff.
ffff.
ffff.
ffffff.
ffffff.
AWAVAUATUSH
t$PI
D$HH
D$pH
t$`H
D$$H
t$`+t$$H
D$(H
|$(H
t$(I
[]A\A]A^A_
L$$H
L$01
D$(H
D$`D)
|$0D
|$0D
L$$H
D$01
D$0H
D$0H
ffffff.
AVAUH
ATUSH
AUATUSH
D$X1
tPf=
t$XdH34%(
h[]A\A]
L$0H
L$8H
t$8H
L$@H
|$@H
L$HH
u}Hc
fffff.
tnH;2
t|H;
t^H;
9H |
P(H9V(w
9P |
H(H9N(w
H;2u
ATU1
ty~'
[]A\
fffff.
ATU1
t}~+
[]A\
t6[H
D$(1
D$ H
T$ I
D$(dH3
D$(dH3
H9X(u([H
StIH
AWAVH
AUATH
D$81
A9FL
I#V(
|$ I
|$ 1
A"T6(B
t$ H
|$(H
A;D$L
L$8dH3
H[]A\A]A^A_
t$(I
W ;V 
	|11
F(H9G(
H9O(
ATUS
St1H
fffff.
ffffff.
ffffff.
ffffff.
ffffff.
ffff.
fffff.
St)H
AVAUA
ATUI
l$ H
UAV1
[]A\A]A^
ATUSH
[]A\
fffff.
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
ffff.
AVAUI
ATUI
~#Hc
[]A\A]A^
uQL9
ffff.
t3SH
ATUH
[]A\
AWAVAUATUSH
[]A\A]A^A_
t$ A
l$01
Unable tH
D$0H
o parse H
D$8H
as a vaiH
D$@H
ld CIDR:H
AUATI
([]A\A]
ffffff.
AVAUI
ATUH
dH3<%(
[]A\A]A^
AWAVH
AUATI
D$h1
t$hdH34%(
x[]A\A]A^A_
ffff.
AWAV
AUATI
D$H1
D$0L
D$@H
T$HL
D$ H
T$(XZL
\$HdH3
X[]A\A]A^A_
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
fffff.
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
fff.
t$(H
T$0H
L$8L
D$@L
L$Ht7
)D$P
)L$`
)T$p
D$ H
AWAVI
AUAT
\$PH
^[0-9]+(L
D$PH
-[0-9]+)
D$XH
dH34%(
[]A\A]A^A_
fff.
H97s$H
AVAUI
ATU1
 []A\A]A^
fff.
AVAUATUS
tcpp
]A\A]A^
AUATUSH
[]A\A]
AWAV
AUATI
([0-9]+)f
/(tcp|ud
|$PH
l$pL
[]A\A]A^A_
HcD$X
HcD$`
ct.H
2tv~\
u#Hc
AUATUSH
[]A\A]
[]A\A]
AUATUSH
[]A\A]
[]A\A]
fffff.
ffff.
AWAVAUATUSH
<wOL
[]A\A]A^A_
AUATI
G(tD
[]A\A]
fffff.
dH3<%(
ffffff.
ffffff.
ffffff.
AUATI
[]A\A]
AUATA
[]A\A]
AWAVA
AUATI
[]A\A]A^A_
PAWE
fffff.
AWAVAUATUSH
O8L+G L+O(
AUAVH
[]A\A]A^A_1
AUAVH
([]A\A]A^A_
AWAVH
AUATI
([]A\A]A^A_
AWAVAUATUSH
t+H=
[]A\A]A^A_
AUATI
[]A\A]
u>E1
[]A\A]
AUATH
[]A\A]
AWAVH
AUAT
[]A\A]A^A_
AUATUSH
[]A\A]
fff.
AUATUSH
D$(I
[]A\A]
tLSH
;C(u
fff.
AUATI
[]A\A]
ffffff.
ATUSH
 []A\
@uKH
kt#~p@
AVAUATUI
[]A\A]A^
[]A\A]A^
[]A\
[]A\
AWAVAUATUSH
T$H1
D$HdH3
X[]A\A]A^A_
|$0E
D$(1
D$(H
fff.
AWAVI
AUATI
L$(1
t$ 1
L$(dH3
8[]A\A]A^A_
usE1
<~tl<-t|H
ATUI
[]A\
[]A\
fff.
AWAVAUATI
[]A\A]A^A_1
[]A\A]A^A_1
<t$H
[]A\A]A^A_
fffff.
t}vK
AWAVAUATUSH
I+D$xI
I+D$xI
M+t$xM
[]A\A]A^A_
AUATI
t`Hc
[]A\A]
tAHc
AWAVI
AUATM
D$H1
L$@H
D$ L
L$(L
L$0L
\$8|$Mc
L$(L
L$0L
L$HdH3
X[]A\A]A^A_
\$0L
L$(H
L$ L
L$ L
L$(L
D$ H
L$(I
L$0L
\$8D)
fffff.
:-u}
ATUI
F8H;
[]A\
ffffff.
AUATI
l$0H
L$0H
]A\A]A^
ATUH
[]A\
[]A\
AVAUD
ATUL
jhSH
[]A\A]A^
AWAV
AUATI
|$0H
T$xH
T$xH
H9C8
T$0L
L$0H
]A\A]A^A_
ATUS
-4d!
[]A\
ffffff.
@t8H
AWAVAUATUSH
tgH)
D$(%
[]A\A]A^A_
D$(%
D$(%
-X]!
fffff.
AWAVAUATUSH
dH3<%(
[]A\A]A^A_
AUAT
dH34%(
([]A\A]
AWAVI
AUATUSH
-ko!
%\j!
fA;F
[]A\A]A^A_
%of!
-pk!
|$ D
t$0H
fffff.
AWAVI
AUATA
D$0H
D$ H
unA;
 u:H
T$ H
D$(H
[]A\A]A^A_
AWAVAUATUSH
D$81
d$ H
\$ E1
 t$H
t$8dH34%(
H[]A\A]A^A_
su2A
L$(A
:uwA
L$(I
t$(H
l$0H
D$0L
l$(f
T$0L
l$(f
T$0L
ATUSH
[]A\A]
]A\A]
ffffff.
ATUSH
+A:U
[]A\A]
]A\A]
ffffff.
AWAVI
AUATL
u'</
[]A\A]A^A_
[]A\A]A^A_
AWAVI
AUATH
|$ 1
<:ul
/u=K
[]A\A]A^A_
/t+H
fffff.
ATUSH
[]A\A]
-vL!
[]A\A]
fffff.
fffff.
AUATUSH
[]A\A]
]A\A]
]A\A]
AVAUATUS
]A\A]A^
[]A\A]A^
[]A\A]A^
ATUSH
[]A\
AWAVA
AUATI
([]A\A]A^A_
9w L
<*t*</ufL
t+I9
AWAVAUATUSH
D$`H
D$@H
dH34%(
[]A\A]A^A_
$9D$
D$`<
D$a/L
L$ H
D$@H
5c8!
L$(L
D$ H
D$ H
L$0H
L$(L
D$ H
L$(L
L$0A
L$0H
L$(L
D$ L
D$ H
L$(L
L$ A
L$ L
D$(I
L$0H
L$(L
L$0H
L$(L
=j=!
trI9
T$ I
L$8H
L$0L
D$(L
L$8H
L$0L
D$(L
D$h1
T$hdH3
ffff.
@t.H
AWAVI
AUATA
t$8H
|$ L
t$@H
[]A\A]A^A_
H#^ 
noneH
H#^ u6
T$8I9
t$ E
noneH
AWAVI
AUATUS
[]A\A]A^A_
$AUL
D$8A
$AUL
L$ H
AYAZ
T$ L
D$8A
$AUL
AUUL
AUUL
fffff.
AWAVLc
AUATI
[]A\A]A^A_
HcT$
AWAVAUATUSH
D$8%
[]A\A]A^A_
ffffff.
fffff.
v~ATUH
} []A\
[]A\
AWAVI
AUATUS
[]A\A]A^A_
-Y$!
%Z)!
[]A\A]A^A_
AWAVAUATI
T$xH
T$0A
T$0H
T$0H
T$0H
A9D$
8[]A\A]A^A_
E;l$
'ufH
E;l$
T$0D
d$(A
t$ L
d$(H
T$0H
T$0H
T$0D
T$0L
@t	H
AWAVAUATUSH
d$ H
D$(1
tEfA;
D$(dH3
8[]A\A]A^A_
fff.
AWAVAUATUSH
D$h1
=D9l$
H9\$
H9\$
D$hdH3
x[]A\A]A^A_
ATUI
\$xA
|$xH
[]A\
fff.
AWAVAUATI
T$(H
D$0Hc
[]A\A]A^A_
Lct$
D$(H
D$(H
|$ H
|$(H
ffff.
AWAVE
AUATI
[]A\A]A^A_
[]A\A]A^A_
ffffff.
ATUI
D$(1
t9E1
D$(dH3
[]A\
ffff.
ATUSH
D$(1
D$(dH3
0[]A\
 t)H
ATUSH
D$(1
*uyL
D$(dH3
0[]A\
>-t#
<-u<H
D$81
 t-H
L$8dH3
ATUSH
D$(1
L$(dH3
0[]A\
AWAVAUATI
[]A\A]A^A_
AWAVAUATI
[]A\A]A^A_
AWAVI
AUATI
|$(H
t$(D
[]A\A]A^A_
ffff.
ATUI
 tPH
t>% 
t1[]A\
[]A\
[]A\
ffff.
AUATUSH
 t%H
[]A\A]
[]A\A]
XZ~1I
AUATA
dH34%(
[]A\A]
D$0A
AWAVA
AUATUSH
D$(H
D$pH
D$ H
D$hH
D$0H
D$8H
t$ H
#t5H
[]A\A]A^A_
|$(H
D$dH
D$@H
|$@M
D$dL
L$PH
t$(L
D$@H
L$PL
L$PA
L$PH
L$HI
D$dL
t&<\
Lcl$@H
T$8H
t$dL
T$@H
t$ H
D$@H
L$PA
L;t$(H
L$XH
L$XH
L$hA
L$hA
D$XL
L$PH
L$HL
L$PL
D$Xt)A
L$PH
L$PI
|$hA
AWAVAUATUSH
WXdH
D$8%
[]A\A]A^A_
ATUI
[]A\
AVAU
D$81
L$8dH3
@[]A\A]A^
ATUH
[]A\
fffff.
AWAVAUATUSH
dH34%(
[]A\A]A^A_
<'t#<\ti
AWAVAUATUSH
[]A\A]A^A_
t$@M
D$ 1
\$ I)
D$ H
\$ tO
H9T$
D$ H
H9T$
|$ D
AWAVAUATA
D$X1
 t H
|$HH
\$XdH3
h[]A\A]A^A_
fD9A
L$HtT
D$0D
\$ L
T$(L
\$ D
ffffff.
AWAVAUATUSH
ExE1
AWAVAUATI
D$0H
D$(L
ffffff.
ATUH
t4H)
AWAVI
AUATI
[]A\A]A^A_
l$(H
AWAVAUATUSH
|$(H
L$oH
I9B8
hH9B8u
|$(H
L$oH
[]A\A]A^A_
D$H%
T$`L
T$`H
T$`t
D$RH
AWAVA
AUATL
[]A\A]A^A_
4.1.0
Cache file supported: %s
1.12
Compiled against libdnet: %s
Compiled against libpcap: %s
tcpprep_opts.c
bridge
router
client
server
first
tcpprep version: %s (build %s)
Copyright 2013-2014 by Fred Klassen <tcpreplay at appneta dot com> - AppNeta Inc.
Copyright 2000-2012 by Aaron Turner <aturner at synfin dot net>
The entire Tcpreplay Suite is licensed under the GPLv3
64 bit packet counters: enabled
Verbose printing via tcpdump: enabled
Fatal Error: Comment length %zu is longer then max allowed (%d)
Fatal Error: Unable to compile regex: %s
Fatal Error: Invalid auto mode type: %s
Fatal Error: Unable to parse include/exclude rule: %s
Fatal Error: Unable to parse CIDR map: %s
doOptCidr
doOptMac
doOptComment
doOptInclude
doOptExclude
tcpprep (tcpprep)
Copyright (C) 2000-2014 Aaron Turner and Fred Klassen, all rights reserved.
This is free software. It is licensed for use, modification and
redistribution under the terms of the
GNU General Public License, version 3 or later
    <http://gnu.org/licenses/gpl.html>
tcpprep is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation, either version 3 of the License, or (at your option)
any later version.
tcpprep is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
details.
You should have received a copy of the GNU General Public License along
with this program.  If not, see <http://www.gnu.org/licenses/>.
Enable debugging output
DBUG
dbug
Auto-split mode
AUTO
auto
CIDR-split mode
CIDR
cidr
Regex-split mode
REGEX
regex
Port-split mode
PORT
port
Source MAC split mode
Matches to be client instead of server
REVERSE
reverse
Embeded cache file comment
COMMENT
comment
Do not embed any cache file comment
NO_ARG_COMMENT
no-arg-comment
Include only packets matching rule
INCLUDE
include
Exclude any packet matching this rule
EXCLUDE
exclude
Output cache file
CACHEFILE
cachefile
Input pcap file to process
PCAP
pcap
Print embedded comment in the specified cache file
PRINT_COMMENT
print-comment
Print basic info from the specified cache file
PRINT_INFO
print-info
Print statistical information about the specified cache file
PRINT_STATS
print-stats
Load services file for server ports
SERVICES
services
Send non-IP traffic out server interface
NONIP
nonip
Ratio of client to server packets
RATIO
ratio
Minimum network mask length in auto mode
MINMASK
minmask
Maximum network mask length in auto mode
MAXMASK
maxmask
Print decoded packets via tcpdump to STDOUT
VERBOSE
verbose
Arguments passed to tcpdump decoder
DECODE
decode
Print version information
VERSION
version
Display less usage information and exit
LESS_HELP
less-help
Display extended usage information and exit
help
Extended usage information passed thru pager
more-help
Save the option state to a config file
save-opts
Load options from a config file
LOAD_OPTS
no-load-opts
TCPPREP
tcpprep (tcpprep) - Create a tcpreplay cache cache file from a pcap file.
USAGE:  %s [ -<flag> [<val>] | --<name>[{=| }<val>] ]...
.tcppreprc
tcpreplay-users@lists.sourceforge.net
tcpprep is a ``pcap(3)'' file pre-processor which creates a cache file
which provides "rules" for ``tcprewrite(1)'' and ``tcpreplay(1)'' on how to
process and send packets.
The basic operation of tcpreplay is to resend all packets from the input
file(s) out a single file.  Tcpprep processes a pcap file and applies a set
of user-specified rules to create a cache file which tells tcpreplay wether
or not to send each packet and which interface the packet should be sent
out of.
For more details, please see the Tcpreplay Manual at:
http://tcpreplay.appneta.com
tcpprep.c
pcap
Fatal Error:
Buliding cache file...
Done.
Cached %llu packets.
tcpprep args: %s
Packet %llu -> Primary
Packet %llu -> Secondary
Packet %llu -> Don't Send
Invalid cachedata value!
Primary packets:	%llu
Secondary packets:	%llu
Skipped packets:	%llu
Total packets:		%llu
Fatal Error: Whops!  What mode are we in anyways? %d
Fatal Error: Unable to open cache file %s for writing: %s
Fatal Error: Error opening file: %s
Warning: %s was captured using a snaplen of %d bytes.  This may mean you have truncated packets.
Fatal Error: Unsupported pcap DLT type: 0x%x
MAC mode splitting is only supported by DLT_EN10MB packet captures.
Fatal Error: Error compiling BPF filter: %s
No packets were processed.  Filter too limiting?
Building network list from pre-cache...
Error: unable to build a valid list of servers. Aborting.
Cache contains data for %llu packets
Fatal Error: Unknown cache value: %d
------------------------------
process_raw_packets
tree.c
ip == newnode->u.ip
Fatal Error: %s (%lu) is an unknown system... aborting.!
Try a different auto mode (-n router|client|server)
Fatal Error: Node for %s has invalid type: %d
Fatal Error: %s is an unknown system... aborting.!
Try a different auto mode (-n router|client|server)
ipv6_cmp(addr, &newnode->u.ip6) == 0
Unable to determine any IP addresses as a clients.
Perhaps you should change the --ratio, --minmask/maxmask settings, or try another mode?
add_tree_ipv6
add_tree_node
add_tree_ipv4
add_tree_first_ipv6
add_tree_first_ipv6
add_tree_first_ipv4
add_tree_first_ipv4
new_tree
process_tree
tcpprep_api.c
value
From %s:%s() line %d:
Unable to compile regex (%s): %s
Must specify an output cachefile (-o) and input pcap (-i)
Must specify a processing mode: -a, -c, -r, -p
Fatal Error: Min network mask len (%d) must be less then max network mask len (%d)
Ratio must be a non-negative number.
tcpprep_post_args
tcpprep_setwarn
__tcpprep_seterr
tcpprep_getwarn
tcpprep_geterr
tcpprep_set_tcpdump
tcpprep_set_tcpdump_args
tcpprep_set_tcpdump_args
tcpprep_set_verbose
tcpprep_set_nonip_is_secondary
tcpprep_set_regex
tcpprep_set_regex
tcpprep_set_ratio
tcpprep_set_max_mask
tcpprep_set_min_mask
tcpprep_set_automode
tcpprep_set_mode
tcpprep_set_nocomment
tcpprep_set_comment
tcpprep_set_comment
tcpprep_set_output_file
tcpprep_set_output_file
tcpprep_set_pcap_file
tcpprep_set_pcap_file
tcpprep_close
tcpprep_close
tcpprep_init
Cidr List: 
%s/%d, 
cidr.c
cidr
strlen(cidr) <= 1024
%u.%u.%u.%u/%d
Fatal Error: %s
[::/0]:
0.0.0.0/0:
%s%c
cidr2iplist
parse_cidr_map
parse_endpoints
cidr2cidr
new_cidr_map
new_cidr
ip2cidr
destroy_cidr
Fatal Error: 
Warning: 
list.c
Warning: Unable to parse: %s
Fatal Error: Unable to compile regex (%s): %s
free_list
new_list
tcpprep
cache.c
cachedata
out_file
packetid must be > 0
Fatal Error: unable to open %s:%s
Fatal Error: unable to read from %s:%s,
Fatal Error: Cache file %s doesn't contain a full header
Fatal Error: Unable to process %s: not a tcpprep cache file
Fatal Error: Unable to process %s: cache file version mismatch
Fatal Error: Unable to read %d bytes of data for the comment (%zu) %s
Fatal Error: Cache data length (%zu bytes) doesn't match cache header (%llu bytes)
Fatal Error: Only wrote %zu of %zu bytes of the cache file header!
Fatal Error: Only wrote %zu of %zu bytes of the comment!
Fatal Error: Only wrote %zu of %i bytes to cache file!
check_cache
new_cache
add_cache
write_cache
write_cache
read_cache
Fatal Error: Unable to open service file: %s
Warning: Skipping unknown protocol service %s/%d
get.c
pktdata
datalen
*newbuff
ip_hdr
exthdr
ip6_hdr
Warning: %s
Warning: No Magic Number found: %s (0x%x)
Fatal Error: Unable to process unsupported DLT type: %s (0x%x)
Warning: Expected dotted-quad notation (%s) when DNS lookups are disabled
Warning: Unable to convert 0x%x to a string
Unable to convert addr to a string
get_addr2name6
get_addr2name4
get_ipv6_l4proto
get_ipv6_next
get_layer4_v6
get_layer4_v4
get_ipv6
get_ipv4
get_l2len
get_l2protocol
xX.c
Fatal Error: Invalid -%c option: %c
Using a BPF filter with -X doesn't work.
Try using -xF:"not <filter>" instead
Unable to determine action in CIDR filter mode.  Default: Don't Send.
Unable to determine action in CIDR filter mode.  Default: Send.
parse_xX_str
ERROR in %s:%s() line %d: Unable to malloc() %zu bytes
ERROR: in %s:%s() line %d: Unable to remalloc() buffer to %zu bytes
ERROR in %s:%s() line %d: Unable to strdup() %zu bytes
Actual: %llu packets (%llu bytes) sent in %zd.%02zd seconds.
Actual: %llu packets (%llu bytes) sent in %zd.%06zd seconds.
Rated: %llu.%1u Bps, %llu.%02u Mbps, %llu.%02u pps
Rated: %llu.%1u Bps, %llu.%03u Mbps, %llu.%02u pps
%llu write attempts failed from full buffers and were repeated
Fatal Error: Invalid hex string byte: %s
Hex buffer too small for data- skipping data
utils.c
funcname
line
Hex buffer must be > 0
read_hexstring
_our_safe_free
git:v4.1.0
mac.c
macinstring
dualmac2hex
/usr/sbin/tcpdump
 -n -l -r -
tcpdump.c
pkthdr
Fatal Error: Error during poll() to write to tcpdump
poll() timeout... tcpdump seems to be having a problem keeping up
Try increasing TCPDUMP_POLL_TIMEOUT
Fatal Error: Error writing pcap file header to tcpdump
Fatal Error: Error writing packet data to tcpdump
Fatal Error: Error reading tcpdump decode: %s
tcpdump process already running
Fatal Error: Unable to create stdin socket pair: %s
Fatal Error: Unable to create stdout socket pair: %s
Fatal Error: Fork failed: %s
Warning: [parent] pcap_dump_fopen(): %s
Warning: [parent] Unable to fcntl tcpreplay socket:
Warning: [parent] Unable to fnctl stdout socket:
Fatal Error: [child] Unable to copy socket to stdin: %s
Fatal Error: [child] Unable to copy socket to stdout: %s
Fatal Error: Unable to exec tcpdump: %s
Fatal Error: Unable to execute tcpdump binary: %s
Fatal Error: [parent] Error in waitpid: %s
tcpdump_fill_in_options
tcpdump_open
tcpdump_print
PAGER_STATE_READY failure
%-18s
  %d
keyword
set-membership
true
false
</%s>
 [arg]
   -%c
%s/%s
%s=%s
YMWD
PATH
%s%s
typeset -x -i %s_
reset.c
0 == 1
AUTOOPTS_USAGE
amp;
[%s]
POSIXLY_CORRECT
SHELL
/usr/bin/bash
autoopts
no_misuse_usage
bel;
space;
quot;
apos;
type
words
members
uncooked
keep
invalid
nested
integer
bool
string
boolean
hierarchy
AO_CURRENT.AO_REVISION
%%-%us %%s
optionResetOpt
LONGUSAGE
USAGE
VERSION
</%s>
AO_CURRENT:AO_REVISION:AO_AGE
amp;
quot;
apos;
genshellopt 1
Copyright (C) 1999-2012 Bruce Korb, all rights reserved.
This is free software. It is licensed for use, modification and
redistribution under the terms of the
GNU General Public License, version 3 or later
    <http://gnu.org/licenses/gpl.html>
genshellopt is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the Free
Software Foundation, either version 3 of the License, or (at your option)
any later version.
genshellopt is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
more details.
You should have received a copy of the GNU General Public License along
with this program.  If not, see <http://www.gnu.org/licenses/>.
Output Script File
SCRIPT
script
Shell name (follows "#!" magic)
SHELL
no-shell
Display extended usage information and exit
help
Extended usage information passed thru pager
more-help
Output version information and exit
version
GENSHELLOPT
genshellopt - Generate Shell Option Processing Script - Ver. 1
USAGE:  %s [ -<flag> [<val>] | --<name>[{=| }<val>] ]...
autogen-users@lists.sourceforge.net
Note that ``shell'' is only useful if the output file does not already
exist.  If it does, then the shell name and optional first argument will be
extracted from the script file.
If the script file already exists and contains Automated Option Processing
text, the second line of the file through the ending tag will be replaced
by the newly generated text.  The first ``#!'' line will be regenerated.
genshellopt 1
INVALID-%d
*INVALID*
none
PAGER
/tmp/use.%lu
more
    --* )
    -* )
        ;;
stdout
%A %B %e, %Y at %r %Z
#! %s
%s_%s=
export %s_%s
'%s'
%s_%s_%d=
export %s_%s_%d
set --
 '%s'
'\''
OPTION_CT=0
=%1$lu # 0x%1$lX
true
false
VERSION
OPT_ARG_NEEDED=OK
OPT_ARG_NEEDED=NO
OPT_ARG_NEEDED=YES
LONGUSAGE
flag
%s_%s_TEXT='
option
env | grep '^%s_'
 -- %s
				- 
				  
    * )
         OPT_PROCESS=false
         ;;
    esac
  %s
%%-%ds
%1$s /tmp/use.%2$lu ; rm -f /tmp/use.%2$lu
# # # # # # # # # # -- do not modify this marker --
#  DO NOT EDIT THIS SECTION
%s OF %s
#  From here to the next `-- do not modify this marker --',
#  the text has been generated %s
#  From the %s option definitions
if test -z "${%1$s_%2$s}"
then
  %1$s_%2$s_CT=0
else
  %1$s_%2$s_CT=1
  %1$s_%2$s_1=${%1$s_%2$s}
export %1$s_%2$s_CT
%1$s_%2$s=${%1$s_%2$s-'%3$s'}
%1$s_%2$s_set=false
export %1$s_%2$s
%1$s_%2$s=${%1$s_%2$s}
%1$s_%2$s_set=false
export %1$s_%2$s
OPT_PROCESS=true
OPT_ARG=$1
while ${OPT_PROCESS} && [ $# -gt 0 ]
    OPT_ELEMENT=''
    OPT_ARG_VAL=''
    case "${OPT_ARG}" in
    -- )
        OPT_PROCESS=false
        shift
        ;;
OPT_ARG=$1
while [ $# -gt 0 ]
    OPT_ELEMENT=''
    OPT_ARG_VAL=''
    OPT_ARG=${1}
    if [ -n "${OPT_ARG_VAL}" ]
    then
        eval %1$s_${OPT_NAME}${OPT_ELEMENT}="'${OPT_ARG_VAL}'"
        export %1$s_${OPT_NAME}${OPT_ELEMENT}
    fi
done
unset OPT_PROCESS || :
unset OPT_ELEMENT || :
unset OPT_ARG     || :
unset OPT_ARG_NEEDED || :
unset OPT_NAME    || :
unset OPT_CODE    || :
unset OPT_ARG_VAL || :
%2$s
# # # # # # # # # #
#  END OF AUTOMATED OPTION PROCESSING
# # # # # # # # # # -- do not modify this marker --
        case "${OPT_CODE}" in
        '%s' | \
        '%s' )
        '%c' )
            ;;
        * )
            echo Unknown %s: "${OPT_CODE}" >&2
            echo "$%s_USAGE_TEXT"
            exit 1
            ;;
        esac
            echo "$%s_%s_TEXT"
            exit 0
            echo "$%s_LONGUSAGE_TEXT" | ${PAGER-more}
            exit 0
            %s
            if [ $%1$s_%2$s_CT -ge %3$d ] ; then
                echo Error:  more than %3$d %2$s options >&2
                echo "$%1$s_USAGE_TEXT"
                exit 1 ; fi
            %1$s_%2$s_CT=`expr ${%1$s_%2$s_CT} + 1`
            OPT_ELEMENT="_${%1$s_%2$s_CT}"
            OPT_NAME='%2$s'
            if [ -n "${%1$s_%2$s}" ] && ${%1$s_%2$s_set} ; then
                echo Error:  duplicate %2$s option >&2
                echo "$%1$s_USAGE_TEXT"
                exit 1 ; fi
            %1$s_%2$s_set=true
            OPT_NAME='%2$s'
            %1$s_%2$s_CT=0
            OPT_ELEMENT=''
            %1$s_%2$s='%3$s'
            export %1$s_%2$s
            OPT_NAME='%2$s'
            if [ -n "${%1$s_%2$s}" ] && ${%1$s_%2$s_set} ; then
                echo 'Error:  duplicate %2$s option' >&2
                echo "$%1$s_USAGE_TEXT"
                exit 1 ; fi
            %1$s_%2$s_set=true
            %1$s_%2$s='%3$s'
            export %1$s_%2$s
            OPT_NAME='%2$s'
            eval %1$s_%2$s${OPT_ELEMENT}=true
            export %1$s_%2$s${OPT_ELEMENT}
            OPT_ARG_NEEDED=OK
            OPT_ARG_NEEDED=YES
            eval %1$s_%2$s${OPT_ELEMENT}=true
            export %1$s_%2$s${OPT_ELEMENT}
            OPT_ARG_NEEDED=NO
        OPT_CODE=`echo "X${OPT_ARG}"|sed 's/^X-*//'`
        shift
        OPT_ARG=$1
        case "${OPT_CODE}" in *=* )
            OPT_ARG_VAL=`echo "${OPT_CODE}"|sed 's/^[^=]*=//'`
            OPT_CODE=`echo "${OPT_CODE}"|sed 's/=.*$//'` ;; esac
        case "${OPT_ARG_NEEDED}" in
        NO )
            OPT_ARG_VAL=''
            ;;
        YES )
            if [ -z "${OPT_ARG_VAL}" ]
            then
                if [ $# -eq 0 ]
                then
                    echo No argument provided for ${OPT_NAME} option >&2
                    echo "$%s_USAGE_TEXT"
                    exit 1
                fi
                OPT_ARG_VAL=${OPT_ARG}
                shift
                OPT_ARG=$1
            fi
            ;;
        OK )
            if [ -z "${OPT_ARG_VAL}" ] && [ $# -gt 0 ]
            then
                case "${OPT_ARG}" in -* ) ;; * )
                    OPT_ARG_VAL=${OPT_ARG}
                    shift
                    OPT_ARG=$1 ;; esac
            fi
            ;;
        esac
        OPT_CODE=`echo "X${OPT_ARG}" | sed 's/X-\(.\).*/\1/'`
        OPT_ARG=` echo "X${OPT_ARG}" | sed 's/X-.//'`
        case "${OPT_ARG_NEEDED}" in
        NO )
            if [ -n "${OPT_ARG}" ]
            then
                OPT_ARG=-${OPT_ARG}
            else
                shift
                OPT_ARG=$1
            fi
            ;;
        YES )
            if [ -n "${OPT_ARG}" ]
            then
                OPT_ARG_VAL=${OPT_ARG}
            else
                if [ $# -eq 0 ]
                then
                    echo No argument provided for ${OPT_NAME} option >&2
                    echo "$%s_USAGE_TEXT"
                    exit 1
                fi
                shift
                OPT_ARG_VAL=$1
            fi
            shift
            OPT_ARG=$1
            ;;
        OK )
            if [ -n "${OPT_ARG}" ]
            then
                OPT_ARG_VAL=${OPT_ARG}
                shift
                OPT_ARG=$1
            else
                shift
                if [ $# -gt 0 ]
                then
                    case "$1" in -* ) ;; * )
                        OPT_ARG_VAL=$1
                        shift ;; esac
                    OPT_ARG=$1
                fi
            fi
            ;;
        esac
%1$s_%2$s=%3$d # 0x%3$X
export %1$s_%2$s
%1$s_%2$s_CT=%3$d
export %1$s_%2$s_CT
OPTION_CT=%d
export OPTION_CT
%1$s_%2$s=%3$s
export %1$s_%2$s
%1$s_%2$s='%3$s'
export %1$s_%2$s
%1$s_%2$s_MODE='%3$s'
export %1$s_%2$s_MODE
echo 'Warning:  Cannot load options files' >&2
echo 'Warning:  Cannot save options files' >&2
echo 'Warning:  Cannot suppress the loading of options files' >&2
%1$s_%2$s_TEXT='no %2$s text'
%s WARNING:  cannot save options - 
<%s/>
<%s>
</%s>
<%s type=%s>
<%s type=nested>
#x%02X;
<%1$s type=boolean>%2$s</%1$s>
<%1$s type=integer>0x%2$lX</%1$s>
malloc of %d bytes failed
AutoOpts function called without option descriptor
	This exceeds the compiled library version:  
Automated Options Processing Error!
	%s called AutoOpts function with structure version %d:%d:%d.
realloc of %d bytes at 0x%p failed
	This is less than the minimum library version:  
strdup of %d byte string failed
Automated Options version %s
	copyright (c) 1999-2012 by Bruce Korb - all rights reserved
AutoOpts lib error: defaulted to option with optional arg
(AutoOpts bug):  Aliasing option is out of range.
				- an alternate for %s
%s error:  the keyword `%s' is ambiguous for %s
  The following options match:
%s: ambiguous option name: %s (matches %d options)
  %s%s
%s: Command line arguments required
%d %s%s options allowed
version, usage and configuration options:
Error %d (%s) from the pipe(2) syscall
ERROR: version option argument '%c' invalid.  Use:
	'v' - version only
	'c' - version and copyright
	'n' - version and copyright notice
ERROR:  %s option conflicts with the %s option
%s(optionSaveState): error: cannot allocate %d bytes
auto-options
program
				- default option for unnamed options
				- disabled as --%s
%s: The ``%s'' option has been disabled
 --- %-14s %s
This option has been disabled
				- enabled by default
-equivalence
ERROR:  only 
 - examining environment variables named %s_*
     
Options are specified by doubled hyphens and their name or by a single
hyphen and the flag character.
%%-%ds %%s
fs error %d (%s) on fork - cannot obtain %s usage
fs error %d (%s) on freopen
File error %d (%s) opening %s for loading options
fs error %d (%s) reading file %s
fs error %d (%s) on %s %s for option %s
stat-ing for directory
stat-ing for regular file
stat-ing for non-existant file
open-ing file
fopen-ing file
				- file must not pre-exist
				- file must pre-exist
= = = = = = = =
This incarnation of genshell will produce
a shell script to parse the options for %s:
=Cplx
[=arg]
--%2$s%1$s
%s: illegal option -- %c
%s: illegal option -- %s
%s: unknown vendor extension option -- %s
  or an integer from %d through %d
AutoOpts ERROR:  invalid option descriptor for %s
%s: invalid option name: %s
  or an integer mask with any of the lower %d bits set
				- is a set membership option
%s: option `%s' requires an argument
Equivalenced option '%s' was equivalenced to both
	'%s' and '%s'
				- must appear between %d and %d times
ERROR:  The %s option is required
%s: option `%s' cannot have an argument
%s: Command line arguments not allowed
error %d (%s) creating %s
Options are specified by single or double hyphens and their name.
%s error:  `%s' does not match any %s keywords
				- may appear multiple times
				- may not be preset
The 'reset-option' option requires an argument
   Arg Option-Name    Description
  Flg Arg Option-Name    Description
error %d (%s) stat-ing %s
%s(optionRestore): error: no saved option state
none
'%s' not defined
'%s' is not a command line option
ERROR:  The %s option must appear %d times
error:  cannot load options from non-regular file %s
%s error:  `%s' is not a recognizable number
%s error:  `%s' is not a recognizable date/time
%s error:  `%s' is not a recognizable time duration
 %3s %s
The '-#<number>' option may omit the hash char
one %s%s option allowed
All arguments are named options.
Write failure to output file
 - reading file %s
please send bug reports to:  %s
				- may NOT appear - preset only
#  preset/initialization file
#  %s#
The following option preset mechanisms are supported:
prohibits these options:
Operands and options may be intermixed.  They will be reordered.
%s%ld to %ld
%sgreater than or equal to %ld
%sIt must lie in one of the ranges:
%sIt must be in the range:
, or
%s error:  %s option value %ld is out of range.
%s%ld exactly
%sis scalable with a suffix: k/K/m/M/g/G/t/T
%sless than or equal to %ld
The --reset-option has not been configured.
ERROR:  %s option requires the %s option
 %3s %-14s %s
requires these options:
   Arg Option-Name   Req?  Description
  Flg Arg Option-Name   Req?  Description
or you may use a numeric representation.  Preceding these with a '!' will
clear the bits, specifying 'none' will clear all bits, and 'all' will set them
all.  Multiple entries may be passed as an option argument list.
      
				- 
				-- and 
				%s
%s error:  %s exceeds %s keyword count
				- may appear up to %d times
The valid "%s" option keywords are:
These additional options are:
The next option supports vendor supported extra options:
;*3$"
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
=str
=num
=Tim
=Mbr
=file
=KWd
=T/F
tcpprep.debug
7zXZ
 VIk"
	_s)L}
S8:7
4M4-
C{k@f
pRp~
Ga(@
1LUr0"
Ve~x
s%sX	
@MKj
AJ?}
)FF>
,g&P
xre,x$
}<LAj
be-}
Dn\5
$AADz
l`:ix
Yrup
BmJE-Ef
lt9\
_66:"
+7i|
F<x`
u$N<
uBIQT
faYx
 Bbo
#'X:KT
2s_N`
XXa4
*_n`
$K\K7$
:qEI
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
