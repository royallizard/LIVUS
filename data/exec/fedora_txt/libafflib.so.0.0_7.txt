?tR&
]h +
 (LW"!
S41zB0
Yq"`"
A[^W{
F(v#
)}u/5&
comcZ
:cb(
CGR_]
MwB$
/L%Du
`x<|C
'7h9
4U`~
iP	wFD_
&plr	x
8k9'
xU^isX
d{<(
	Wh/
_<Oz
(b^Z
:O6if
f>7E
!|=U
G~qV
tuq4
YK~q
}Bw#
O~qU
ZGuD
__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
af_update_segq
af_update_seg
af_get_segq
af_get_seg
af_decode_q
af_backspace
ftello64
fseeko64
fread
af_probe_next_seg
__snprintf_chk
_Z12aff_find_segP7_AFFILEPKcPmPjS4_
aff_toc
strcmp
af_rewind_seg
__gxx_personality_v0
aff_toc_del
aff_toc_free
realloc
strdup
aff_segment_overhead
aff_toc_build
malloc
af_get_next_seg
aff_toc_update
aff_toc_print
__printf_chk
af_version
af_identify_file_type
af_vnode_array
af_identify_file_name
af_set_option
af_tell
af_set_callback
af_enable_compression
af_compression_type
af_filename
af_identify
af_ext
strlen
af_stats
__fprintf_chk
af_seek
af_trace
af_perror
af_error_str
stderr
__errno_location
af_vstat
calloc
af_has_pages
af_eof
af_invalidate_vni_cache
af_del_seg
strlcpy
strlcat
af_last_seg
memset
af_crypto_deallocate
af_close
af_cache_flush
getenv
fputc
af_ext_is
strcasecmp
af_initialize
OPENSSL_add_all_algorithms_noconf
strtol
af_cache_debug
fopen64
setvbuf
af_freopen
vnode_raw
_Z11raw_freopenP7_AFFILEP8_IO_FILE
_Z14af_aes_decryptP7_AFFILEPKcPhPj
AES_cbc_encrypt
memcpy
af_get_imagesize
af_update_segf
af_sign_seg3
af_set_acquisition_date
localtime
strftime
af_update_seg_frombio
BIO_ctrl
af_make_gid
RAND_pseudo_bytes
af_make_badflag
af_open_with
af_crypto_allocate
warnx
af_parse_url
access
af_set_unseal_keyfile
af_read_sizes
__fxstat64
af_use_aes_passphrase
af_establish_aes_passphrase
af_open
vnode_afd
vnode_afm
vnode_aff
vnode_ewf
vnode_split_raw
__udivdi3
af_figure_media
ioctl
af_page_size
af_get_sectorsize
af_cache_writethrough
af_set_pagesize
af_set_sectorsize
af_update_page
af_SHA256
SHA1
compress2
lzma_compress
af_cache_alloc
valloc
af_get_page_raw
__sprintf_chk
af_get_page
lzma_uncompress
af_segname_page_number
__moddi3
af_set_maxsize
af_badflag
af_is_badsector
_Z8af_purgeP7_AFFILE
__divdi3
af_write
__assert_fail
af_read
af_hasmeta
strstr
strncpy
strchr
strcat
af_is_filestream
sscanf
af_segname_hash_page_number
af_hexbuf
af_commas
__strcpy_chk
strcpy
af_err
__vfprintf_chk
strerror
_ZNSt8ios_base4InitC1Ev
_ZNSt8ios_base4InitD1Ev
__cxa_atexit
af_get_affkey_using_keyfile
BIO_new_file
PEM_read_bio_PrivateKey
BIO_free
EVP_aes_256_cbc
EVP_OpenInit
EVP_DecryptUpdate
EVP_OpenFinal
af_sig_verify_seg2
EVP_get_digestbyname
EVP_DigestInit
EVP_DigestUpdate
EVP_VerifyFinal
af_sig_verify_seg
_ZN3aff9ends_withEPKcS1_
BIO_new_mem_buf
PEM_read_bio_X509
X509_get_pubkey
EVP_DigestFinal
af_hash_verify_seg2
_Unwind_Resume
_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKSs
_Znwj
_ZNSsC1ERKSs
_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
__cxa_begin_catch
_ZdlPv
__cxa_rethrow
__cxa_end_catch
EVP_SignFinal
af_sign_seg
af_has_encrypted_segments
af_set_aes_key
AES_set_encrypt_key
AES_set_decrypt_key
EVP_PKEY_free
X509_free
af_is_signature_segment
af_is_encrypted_segment
af_set_sign_files
BIO_s_mem
BIO_new
PEM_write_bio_X509
af_cannot_decrypt
af_get_aes_key_from_passphrase
AES_decrypt
af_save_aes_key_with_passphrase
AES_encrypt
af_change_aes_passphrase
RAND_bytes
af_seal_affkey_using_certificates
EVP_PKEY_size
EVP_SealInit
EVP_EncryptUpdate
EVP_SealFinal
af_set_seal_certificates
_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE16_M_insert_uniqueERKSs
_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE8_M_eraseEPSt13_Rb_tree_nodeISsE
_ZNSs4_Rep20_S_empty_rep_storageE
_ZNSs4_Rep10_M_destroyERKSaIcE
_ZNSt6vectorISsSaISsEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPSsS1_EERKSs
_ZNSs6assignERKSs
_ZNSsD1Ev
af_sign_all_unsigned_segments
_ZNSsC1EPKcRKSaIcE
_ZNSs6appendEPKcj
pthread_cancel
b64_ntop
abort
b64_pton_slg
isspace
_ZN8IUnknownD2Ev
_ZTV8IUnknown
_ZN8IUnknownD1Ev
_ZN19ISequentialInStreamD2Ev
_ZN19ISequentialInStreamD1Ev
_ZN20ISequentialOutStreamD2Ev
_ZN20ISequentialOutStreamD1Ev
_ZN14ICompressCoderD2Ev
_ZN14ICompressCoderD1Ev
_ZN30ICompressSetDecoderProperties2D2Ev
_ZN30ICompressSetDecoderProperties2D1Ev
_ZN33ICompressGetInStreamProcessedSizeD2Ev
_ZN33ICompressGetInStreamProcessedSizeD1Ev
_ZN15CInMemoryStreamD2Ev
_ZN15CInMemoryStreamD1Ev
_ZN15CInMemoryStream14QueryInterfaceERK4GUIDPPv
IID_IInStream
_ZN15CInMemoryStream6AddRefEv
_ZN15CInMemoryStream7ReleaseEv
_ZN16COutMemoryStreamD2Ev
_ZN16COutMemoryStreamD1Ev
_ZN16COutMemoryStream14QueryInterfaceERK4GUIDPPv
IID_IOutStream
_ZN16COutMemoryStream6AddRefEv
_ZN16COutMemoryStream7ReleaseEv
_ZN8IUnknownD0Ev
_ZN15CInMemoryStreamD0Ev
_ZN19ISequentialInStreamD0Ev
_ZN33ICompressGetInStreamProcessedSizeD0Ev
_ZN30ICompressSetDecoderProperties2D0Ev
_ZN14ICompressCoderD0Ev
_ZN16COutMemoryStreamD0Ev
_ZN20ISequentialOutStreamD0Ev
_ZN15CInMemoryStream4ReadEPvjPj
_ZN16COutMemoryStream5WriteEPKvjPj
_ZN12CLZOutWindowD2Ev
_ZN10COutBuffer4FreeEv
_ZN12CLZOutWindowD1Ev
_ZN9NCompress5NLZMA8CEncoderC1Ev
_ZTV16COutMemoryStream
_ZTV15CInMemoryStream
_ZTVN9NCompress5NLZMA8CDecoderE
_ZN9CInBufferC1Ev
_Z6MyFreePv
_ZN9CInBuffer4FreeEv
_ZN9NCompress5NLZMA8CDecoder21SetDecoderProperties2EPKhj
_ZN9NCompress5NLZMA8CDecoder4CodeEP19ISequentialInStreamP20ISequentialOutStreamPKyS7_P21ICompressProgressInfo
IID_ISequentialInStream
IID_ISequentialOutStream
IID_IStreamGetSize
IID_IOutStreamFlush
IID_ICompressProgressInfo
IID_ICompressCoder
IID_ICompressCoder2
IID_ICompressSetCoderProperties
IID_ICompressSetDecoderProperties2
IID_ICompressWriteCoderProperties
IID_ICompressGetInStreamProcessedSize
IID_ICompressSetCoderMt
IID_ICompressGetSubStreamSize
IID_ICompressSetInStream
IID_ICompressSetOutStream
IID_ICompressSetInStreamSize
IID_ICompressSetOutStreamSize
IID_ICompressFilter
IID_ICryptoProperties
IID_ICryptoSetPassword
IID_ICryptoSetCRC
_ZTI15CInMemoryStream
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTS15CInMemoryStream
_ZTI19ISequentialInStream
_ZTI13CMyUnknownImp
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTS19ISequentialInStream
_ZTI8IUnknown
_ZTVN10__cxxabiv117__class_type_infoE
_ZTS13CMyUnknownImp
_ZTS8IUnknown
_ZTV19ISequentialInStream
__cxa_pure_virtual
_ZTV14ICompressCoder
_ZTI14ICompressCoder
_ZTS14ICompressCoder
_ZTV30ICompressSetDecoderProperties2
_ZTI30ICompressSetDecoderProperties2
_ZTS30ICompressSetDecoderProperties2
_ZTV33ICompressGetInStreamProcessedSize
_ZTI33ICompressGetInStreamProcessedSize
_ZTS33ICompressGetInStreamProcessedSize
_ZTI16COutMemoryStream
_ZTS16COutMemoryStream
_ZTI20ISequentialOutStream
_ZTS20ISequentialOutStream
_ZTV20ISequentialOutStream
_Z17af_truncate_blankP7_AFFILE
fflush
fileno
ftruncate64
fwrite
fclose
flock
fdopen
warn
__xstat64
_Z11afd_del_segP7_AFFILEPKc
umask
mkdir
opendir
readdir64
closedir
strrchr
__umoddi3
libewf_write_random
libewf_read_random
libewf_get_bytes_per_sector
libewf_get_media_size
libewf_get_chunk_size
libewf_close
libewf_open
libewf_check_file_signature
feof
pclose
_Z14raw_update_segP7_AFFILEPKcmPKhj
_Z9raw_popenP7_AFFILEPKcS2_
popen
_Z12srp_validateP7_AFFILE
_Z8srp_dumpP7_AFFILE
lseek64
_Z25split_raw_write_internal2P7_AFFILEPhyj
_Z15split_raw_writeP7_AFFILEPhyj
__open64_2
_ZN3aff7seglist8containsESs
_ZN3aff7seglist19has_signed_segmentsEv
_ZN3aff9ends_withERKSsS1_
_ZN3aff12command_lineEiPPc
_ZNSt6vectorIN3aff7seginfoESaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_
_ZN3aff7seglist11get_seglistEP7_AFFILE
af_display_as_hex
af_display_as_quad
_ZN18CBenchmarkInStream14QueryInterfaceERK4GUIDPPv
_ZN18CBenchmarkInStream6AddRefEv
_ZN18CBenchmarkInStreamD2Ev
_ZN18CBenchmarkInStreamD1Ev
_ZN18CBenchmarkInStream7ReleaseEv
_ZN18CBenchmarkInStream4ReadEPvjPj
_ZN19CBenchmarkOutStream14QueryInterfaceERK4GUIDPPv
_ZN19CBenchmarkOutStream6AddRefEv
_ZN19CBenchmarkOutStream7ReleaseEv
_ZN13CCrcOutStream14QueryInterfaceERK4GUIDPPv
_ZN13CCrcOutStream6AddRefEv
_ZN13CCrcOutStreamD2Ev
_ZN13CCrcOutStreamD1Ev
_ZN13CCrcOutStream7ReleaseEv
_ZN13CProgressInfo14QueryInterfaceERK4GUIDPPv
_ZN13CProgressInfo6AddRefEv
_ZN21ICompressProgressInfoD2Ev
_ZN21ICompressProgressInfoD1Ev
_ZN13CProgressInfoD2Ev
_ZN13CProgressInfoD1Ev
_ZN13CProgressInfo7ReleaseEv
_ZN9CMyComPtrI20ISequentialOutStreamED2Ev
_ZN9CMyComPtrI20ISequentialOutStreamED1Ev
_ZN18CBenchmarkInStreamD0Ev
_ZN13CCrcOutStreamD0Ev
_ZN13CProgressInfoD0Ev
_ZN21ICompressProgressInfoD0Ev
_ZN19CBenchmarkOutStreamD2Ev
_ZTV19CBenchmarkOutStream
_ZdaPv
_ZN19CBenchmarkOutStreamD1Ev
_ZN13CCrcOutStream5WriteEPKvjPj
_ZN4CCRC6UpdateEPKvj
_ZN13CProgressInfo12SetRatioInfoEPKyS1_
clock
fputs
_ZN19CBenchmarkOutStream5WriteEPKvjPj
_ZN19CBenchmarkOutStreamD0Ev
_Z13LzmaBenchmarkP8_IO_FILEjj
_Znaj
_Z7MyAllocj
_ZTV13CProgressInfo
_ZTV18CBenchmarkInStream
_ZTV13CCrcOutStream
_ZTI13CProgressInfo
_ZTI13CCrcOutStream
_ZTI19CBenchmarkOutStream
_ZTI18CBenchmarkInStream
_ZTS13CProgressInfo
_ZTI21ICompressProgressInfo
_ZTS13CCrcOutStream
_ZTS19CBenchmarkOutStream
_ZTS18CBenchmarkInStream
_ZTS21ICompressProgressInfo
_ZTV21ICompressProgressInfo
_ZN12CInStreamRam14QueryInterfaceERK4GUIDPPv
_ZN12CInStreamRam6AddRefEv
_ZN12CInStreamRamD2Ev
_ZN12CInStreamRamD1Ev
_ZN12CInStreamRam7ReleaseEv
_ZN12CInStreamRam4ReadEPvjPj
_ZN13COutStreamRam14QueryInterfaceERK4GUIDPPv
_ZN13COutStreamRam6AddRefEv
_ZN13COutStreamRamD2Ev
_ZN13COutStreamRamD1Ev
_ZN13COutStreamRam7ReleaseEv
_ZN13COutStreamRam5WriteEPKvjPj
_ZN12CInStreamRamD0Ev
_ZN13COutStreamRamD0Ev
_Z13LzmaRamEncodePKhjPhjPjj13ESzFilterMode
_ZTV13COutStreamRam
_ZTV12CInStreamRam
memmove
x86_Convert
_ZTI13COutStreamRam
_ZTI12CInStreamRam
_ZTS13COutStreamRam
_ZTS12CInStreamRam
LzmaRamGetUncompressedSize
LzmaRamDecompress
LzmaDecodeProperties
LzmaDecode
kMaskToAllowedStatus
kMaskToBitNumber
_ZThn8_N9NCompress5NLZMA8CDecoder14QueryInterfaceERK4GUIDPPv
_ZThn4_N9NCompress5NLZMA8CDecoder14QueryInterfaceERK4GUIDPPv
_ZN9NCompress5NLZMA8CDecoder14QueryInterfaceERK4GUIDPPv
_ZThn8_N9NCompress5NLZMA8CDecoder6AddRefEv
_ZThn4_N9NCompress5NLZMA8CDecoder6AddRefEv
_ZN9NCompress5NLZMA8CDecoder6AddRefEv
_ZThn8_N9NCompress5NLZMA8CDecoder7ReleaseEv
_ZThn4_N9NCompress5NLZMA8CDecoder7ReleaseEv
_ZN9NCompress5NLZMA8CDecoder7ReleaseEv
_ZN9NCompress5NLZMA8CDecoder4InitEv
_ZThn8_N9NCompress5NLZMA8CDecoder24GetInStreamProcessedSizeEPy
_ZN9NCompress5NLZMA8CDecoder24GetInStreamProcessedSizeEPy
_ZN9NCompress5NLZMA8CDecoder15ReleaseInStreamEv
_ZN9NCompress5NLZMA8CDecoder16SetOutStreamSizeEPKy
_ZN12CLZOutWindow4InitEb
_ZN9NCompress5NLZMA8CDecoder11SetInStreamEP19ISequentialInStream
_ZN9CInBuffer9SetStreamEP19ISequentialInStream
_ZThn4_N9NCompress5NLZMA8CDecoder21SetDecoderProperties2EPKhj
_ZN10COutBuffer6CreateEj
_ZN9CInBuffer6CreateEj
_ZN9NCompress5NLZMA8CDecoderD2Ev
_ZN9NCompress5NLZMA8CDecoderD1Ev
_ZThn8_N9NCompress5NLZMA8CDecoderD1Ev
_ZThn4_N9NCompress5NLZMA8CDecoderD1Ev
_ZThn8_N9NCompress5NLZMA8CDecoderD0Ev
_ZThn4_N9NCompress5NLZMA8CDecoderD0Ev
_ZN9NCompress5NLZMA8CDecoderD0Ev
_ZN9NCompress5NLZMA8CDecoder8CodeSpecEj
_ZN10COutBuffer14FlushWithCheckEv
_ZNK10COutBuffer16GetProcessedSizeEv
_ZN9CInBuffer10ReadBlock2Ev
_ZN9CInBuffer4InitEv
_ZN9NCompress5NLZMA8CDecoder8CodeRealEP19ISequentialInStreamP20ISequentialOutStreamPKyS7_P21ICompressProgressInfo
_ZN10COutBuffer9SetStreamEP20ISequentialOutStream
_ZN10COutBuffer5FlushEv
_ZTIN9NCompress5NLZMA8CDecoderE
_ZTSN9NCompress5NLZMA8CDecoderE
_ZTI18CInBufferException
_ZTS18CInBufferException
_ZTI19COutBufferException
_ZTS19COutBufferException
_ZN24IMatchFinderSetNumPassesD2Ev
_ZTV24IMatchFinderSetNumPasses
_ZN24IMatchFinderSetNumPassesD1Ev
_ZThn12_N9NCompress5NLZMA8CEncoder14QueryInterfaceERK4GUIDPPv
_ZThn8_N9NCompress5NLZMA8CEncoder14QueryInterfaceERK4GUIDPPv
_ZThn4_N9NCompress5NLZMA8CEncoder14QueryInterfaceERK4GUIDPPv
_ZN9NCompress5NLZMA8CEncoder14QueryInterfaceERK4GUIDPPv
_ZThn12_N9NCompress5NLZMA8CEncoder6AddRefEv
_ZThn8_N9NCompress5NLZMA8CEncoder6AddRefEv
_ZThn4_N9NCompress5NLZMA8CEncoder6AddRefEv
_ZN9NCompress5NLZMA8CEncoder6AddRefEv
_ZThn12_N9NCompress5NLZMA8CEncoder7ReleaseEv
_ZThn8_N9NCompress5NLZMA8CEncoder7ReleaseEv
_ZThn4_N9NCompress5NLZMA8CEncoder7ReleaseEv
_ZN9NCompress5NLZMA8CEncoder7ReleaseEv
_ZN21ICompressSetOutStreamD2Ev
_ZN21ICompressSetOutStreamD1Ev
_ZN27ICompressSetCoderPropertiesD2Ev
_ZN27ICompressSetCoderPropertiesD1Ev
_ZN29ICompressWriteCoderPropertiesD2Ev
_ZN29ICompressWriteCoderPropertiesD1Ev
_ZN4NBT212CMatchFinder14QueryInterfaceERK4GUIDPPv
_ZN4NBT212CMatchFinder6AddRefEv
_ZN4NBT212CMatchFinder7ReleaseEv
_ZThn56_N4NBT212CMatchFinder12SetNumPassesEj
_ZN4NBT212CMatchFinder12SetNumPassesEj
_ZN15IInWindowStreamD2Ev
_ZN15IInWindowStreamD1Ev
_ZN12IMatchFinderD2Ev
_ZN12IMatchFinderD1Ev
_ZN4NBT212CMatchFinderC2Ev
_ZTVN4NBT212CMatchFinderE
_ZN4NBT212CMatchFinderC1Ev
_ZN4NBT212CMatchFinder13ReleaseStreamEv
_ZN4NBT212CMatchFinder9NormalizeEv
_ZN4NBT212CMatchFinder12GetIndexByteEi
_ZN4NBT212CMatchFinder11GetMatchLenEijj
_ZN4NBT212CMatchFinder20GetNumAvailableBytesEv
_ZN4NBT212CMatchFinder22GetPointerToCurrentPosEv
_ZN4NBT212CMatchFinder19NeedChangeBufferPosEj
_ZN4NBT312CMatchFinder14QueryInterfaceERK4GUIDPPv
_ZN4NBT312CMatchFinder6AddRefEv
_ZN4NBT312CMatchFinder7ReleaseEv
_ZThn56_N4NBT312CMatchFinder12SetNumPassesEj
_ZN4NBT312CMatchFinder12SetNumPassesEj
_ZN4NBT312CMatchFinderC2Ev
_ZTVN4NBT312CMatchFinderE
_ZN4NBT312CMatchFinderC1Ev
_ZN4NBT312CMatchFinder13ReleaseStreamEv
_ZN4NBT312CMatchFinder9NormalizeEv
_ZN4NBT312CMatchFinder12GetIndexByteEi
_ZN4NBT312CMatchFinder11GetMatchLenEijj
_ZN4NBT312CMatchFinder20GetNumAvailableBytesEv
_ZN4NBT312CMatchFinder22GetPointerToCurrentPosEv
_ZN4NBT312CMatchFinder19NeedChangeBufferPosEj
_ZN4NBT412CMatchFinder14QueryInterfaceERK4GUIDPPv
_ZN4NBT412CMatchFinder6AddRefEv
_ZN4NBT412CMatchFinder7ReleaseEv
_ZThn56_N4NBT412CMatchFinder12SetNumPassesEj
_ZN4NBT412CMatchFinder12SetNumPassesEj
_ZN4NBT412CMatchFinderC2Ev
_ZTVN4NBT412CMatchFinderE
_ZN4NBT412CMatchFinderC1Ev
_ZN4NBT412CMatchFinder13ReleaseStreamEv
_ZN4NBT412CMatchFinder9NormalizeEv
_ZN4NBT412CMatchFinder12GetIndexByteEi
_ZN4NBT412CMatchFinder11GetMatchLenEijj
_ZN4NBT412CMatchFinder20GetNumAvailableBytesEv
_ZN4NBT412CMatchFinder22GetPointerToCurrentPosEv
_ZN4NBT412CMatchFinder19NeedChangeBufferPosEj
_ZN4NHC412CMatchFinder14QueryInterfaceERK4GUIDPPv
_ZN4NHC412CMatchFinder6AddRefEv
_ZN4NHC412CMatchFinder7ReleaseEv
_ZThn56_N4NHC412CMatchFinder12SetNumPassesEj
_ZN4NHC412CMatchFinder12SetNumPassesEj
_ZN4NHC412CMatchFinderC2Ev
_ZTVN4NHC412CMatchFinderE
_ZN4NHC412CMatchFinderC1Ev
_ZN4NHC412CMatchFinder13ReleaseStreamEv
_ZN4NHC412CMatchFinder9NormalizeEv
_ZN4NHC412CMatchFinder12GetIndexByteEi
_ZN4NHC412CMatchFinder11GetMatchLenEijj
_ZN4NHC412CMatchFinder20GetNumAvailableBytesEv
_ZN4NHC412CMatchFinder22GetPointerToCurrentPosEv
_ZN4NHC412CMatchFinder19NeedChangeBufferPosEj
_ZNK9NCompress5NLZMA16CLiteralEncoder28GetPriceEbhh
_ZN9NCompress11NRangeCoder12CPriceTables10ProbPricesE
_ZN9NCompress5NLZMA7NLength8CEncoder4InitEj
_ZNK9NCompress5NLZMA7NLength8CEncoder9SetPricesEjjPj
_ZThn8_N9NCompress5NLZMA8CEncoder18SetCoderPropertiesEPKjPK14tagPROPVARIANTj
_ZN9NCompress5NLZMA8CEncoder18SetCoderPropertiesEPKjPK14tagPROPVARIANTj
_ZThn4_N9NCompress5NLZMA8CEncoder16ReleaseOutStreamEv
_ZN9NCompress5NLZMA8CEncoder16ReleaseOutStreamEv
_ZN9NCompress5NLZMA8CEncoder7MovePosEj
_ZN9NCompress5NLZMA8CEncoder8BackwardERjj
_ZN9NCompress5NLZMA8CEncoder18ReadMatchDistancesERjS2_
_ZN9NCompress5NLZMA8CEncoder10GetOptimumEjRjS2_
_ZN9NCompress5NLZMA9g_FastPosE
_ZN9NCompress5NLZMA8CEncoder14GetOptimumFastEjRjS2_
_ZN9NCompress5NLZMA8CEncoder19FillDistancesPricesEv
_ZN9NCompress5NLZMA8CEncoder15FillAlignPricesEv
_ZN9CMyComPtrI12IMatchFinderEaSEPS0_
_ZN29ICompressWriteCoderPropertiesD0Ev
_ZN27ICompressSetCoderPropertiesD0Ev
_ZN21ICompressSetOutStreamD0Ev
_ZN24IMatchFinderSetNumPassesD0Ev
_ZN12IMatchFinderD0Ev
_ZN15IInWindowStreamD0Ev
_ZN9NCompress5NLZMA8CEncoderC2Ev
_ZTVN9NCompress5NLZMA8CEncoderE
_ZN4NHC412CMatchFinder19FreeThisClassMemoryEv
_ZN4NBT412CMatchFinder19FreeThisClassMemoryEv
_ZN4NBT312CMatchFinder19FreeThisClassMemoryEv
_ZN4NBT212CMatchFinder19FreeThisClassMemoryEv
_ZN9NCompress5NLZMA8CEncoderD2Ev
_ZN9NCompress5NLZMA8CEncoderD1Ev
_ZThn12_N9NCompress5NLZMA8CEncoderD1Ev
_ZThn8_N9NCompress5NLZMA8CEncoderD1Ev
_ZThn4_N9NCompress5NLZMA8CEncoderD1Ev
_ZN9NCompress5NLZMA8CEncoder4InitEv
_ZN10COutBuffer4InitEv
_ZThn4_N9NCompress5NLZMA8CEncoder12SetOutStreamEP20ISequentialOutStream
_ZN9NCompress5NLZMA8CEncoder12SetOutStreamEP20ISequentialOutStream
_ZThn12_N9NCompress5NLZMA8CEncoder20WriteCoderPropertiesEP20ISequentialOutStream
_ZN9NCompress5NLZMA8CEncoder20WriteCoderPropertiesEP20ISequentialOutStream
_Z11WriteStreamP20ISequentialOutStreamPKvjPj
_ZN9NCompress5NLZMA8CEncoder6CreateEv
_ZN9NCompress5NLZMA8CEncoder10SetStreamsEP19ISequentialInStreamP20ISequentialOutStreamPKyS7_
_ZN4NHC412CMatchFinder15ChangeBufferPosEv
_ZN11CLZInWindow9MoveBlockEv
_ZN4NBT412CMatchFinder15ChangeBufferPosEv
_ZN4NBT312CMatchFinder15ChangeBufferPosEv
_ZN4NBT212CMatchFinder15ChangeBufferPosEv
_ZN4NHC412CMatchFinder4InitEv
_ZN11CLZInWindow4InitEv
_ZN4NBT412CMatchFinder4InitEv
_ZN4NBT312CMatchFinder4InitEv
_ZN4NBT212CMatchFinder4InitEv
_ZN4NHC412CMatchFinder9SetStreamEP19ISequentialInStream
_ZN11CLZInWindow9SetStreamEP19ISequentialInStream
_ZN4NBT412CMatchFinder9SetStreamEP19ISequentialInStream
_ZN4NBT312CMatchFinder9SetStreamEP19ISequentialInStream
_ZN4NBT212CMatchFinder9SetStreamEP19ISequentialInStream
_ZN11CLZInWindowD2Ev
_ZTV11CLZInWindow
_ZN11CLZInWindow4FreeEv
_ZN11CLZInWindowD1Ev
_ZN4NHC412CMatchFinder10FreeMemoryEv
_ZN4NHC412CMatchFinder6CreateEjjjj
_ZN11CLZInWindow6CreateEjjj
_ZN4NBT412CMatchFinder10FreeMemoryEv
_ZN4NBT412CMatchFinder6CreateEjjjj
_ZN4NBT312CMatchFinder10FreeMemoryEv
_ZN4NBT312CMatchFinder6CreateEjjjj
_ZN4NBT212CMatchFinder10FreeMemoryEv
_ZN4NBT212CMatchFinder6CreateEjjjj
_ZN4NBT212CMatchFinderD2Ev
_ZN4NBT212CMatchFinderD1Ev
_ZThn56_N4NBT212CMatchFinderD1Ev
_ZThn4_N4NBT212CMatchFinderD1Ev
_ZThn56_N4NBT212CMatchFinderD0Ev
_ZThn4_N4NBT212CMatchFinderD0Ev
_ZN4NBT212CMatchFinderD0Ev
_ZN11CLZInWindowD0Ev
_ZN4NHC412CMatchFinderD2Ev
_ZN4NHC412CMatchFinderD1Ev
_ZThn56_N4NHC412CMatchFinderD1Ev
_ZThn4_N4NHC412CMatchFinderD1Ev
_ZThn56_N4NHC412CMatchFinderD0Ev
_ZThn4_N4NHC412CMatchFinderD0Ev
_ZN4NHC412CMatchFinderD0Ev
_ZN4NBT412CMatchFinderD2Ev
_ZN4NBT412CMatchFinderD1Ev
_ZThn56_N4NBT412CMatchFinderD1Ev
_ZThn4_N4NBT412CMatchFinderD1Ev
_ZThn56_N4NBT412CMatchFinderD0Ev
_ZThn4_N4NBT412CMatchFinderD0Ev
_ZN4NBT412CMatchFinderD0Ev
_ZN4NBT312CMatchFinderD2Ev
_ZN4NBT312CMatchFinderD1Ev
_ZThn56_N4NBT312CMatchFinderD1Ev
_ZThn4_N4NBT312CMatchFinderD1Ev
_ZThn56_N4NBT312CMatchFinderD0Ev
_ZThn4_N4NBT312CMatchFinderD0Ev
_ZN4NBT312CMatchFinderD0Ev
_ZN4NBT212CMatchFinder7MovePosEv
_ZN11CLZInWindow9ReadBlockEv
_ZN4NBT212CMatchFinder4SkipEj
_ZN4NBT212CMatchFinder10GetMatchesEPj
_ZN4NBT312CMatchFinder7MovePosEv
_ZN4NBT312CMatchFinder4SkipEj
_ZN4CCRC5TableE
_ZN4NHC412CMatchFinder7MovePosEv
_ZN4NHC412CMatchFinder4SkipEj
_ZN4NBT412CMatchFinder7MovePosEv
_ZN4NBT412CMatchFinder4SkipEj
_ZN4NBT412CMatchFinder10GetMatchesEPj
_ZN4NHC412CMatchFinder10GetMatchesEPj
_ZN4NBT312CMatchFinder10GetMatchesEPj
_ZThn12_N9NCompress5NLZMA8CEncoderD0Ev
_ZThn8_N9NCompress5NLZMA8CEncoderD0Ev
_ZThn4_N9NCompress5NLZMA8CEncoderD0Ev
_ZN9NCompress5NLZMA8CEncoderD0Ev
_ZN9NCompress5NLZMA16CLiteralEncoder213EncodeMatchedEPNS_11NRangeCoder8CEncoderEhh
_ZN9NCompress5NLZMA16CLiteralEncoder26EncodeEPNS_11NRangeCoder8CEncoderEh
_ZN9NCompress5NLZMA7NLength8CEncoder6EncodeEPNS_11NRangeCoder8CEncoderEjj
_ZN9NCompress5NLZMA8CEncoder14WriteEndMarkerEj
_ZN9NCompress5NLZMA8CEncoder5FlushEj
_ZN9NCompress5NLZMA8CEncoder12CodeOneBlockEPyS2_Pi
_ZN9NCompress5NLZMA8CEncoder8CodeRealEP19ISequentialInStreamP20ISequentialOutStreamPKyS7_P21ICompressProgressInfo
_ZN9NCompress5NLZMA8CEncoder4CodeEP19ISequentialInStreamP20ISequentialOutStreamPKyS7_P21ICompressProgressInfo
_ZN9NCompress5NLZMA13g_FastPosInitE
_ZTIN9NCompress5NLZMA8CEncoderE
_ZTIN4NHC412CMatchFinderE
_ZTIN4NBT412CMatchFinderE
_ZTIN4NBT312CMatchFinderE
_ZTIN4NBT212CMatchFinderE
_ZTSN4NHC412CMatchFinderE
_ZTI12IMatchFinder
_ZTI11CLZInWindow
_ZTI24IMatchFinderSetNumPasses
_ZTSN4NBT412CMatchFinderE
_ZTSN4NBT312CMatchFinderE
_ZTSN4NBT212CMatchFinderE
_ZTSN9NCompress5NLZMA8CEncoderE
_ZTI21ICompressSetOutStream
_ZTI27ICompressSetCoderProperties
_ZTI29ICompressWriteCoderProperties
_ZTIN9NCompress5NLZMA10CBaseStateE
_ZTS12IMatchFinder
_ZTI15IInWindowStream
_ZTS11CLZInWindow
_ZTS24IMatchFinderSetNumPasses
_ZTS21ICompressSetOutStream
_ZTS27ICompressSetCoderProperties
_ZTS29ICompressWriteCoderProperties
_ZTSN9NCompress5NLZMA10CBaseStateE
_ZTS15IInWindowStream
_ZTV29ICompressWriteCoderProperties
_ZTV27ICompressSetCoderProperties
_ZTV21ICompressSetOutStream
_ZTV12IMatchFinder
_ZTV15IInWindowStream
_ZN9NCompress11NRangeCoder12CPriceTables4InitEv
_ZN9NCompress11NRangeCoder12CPriceTablesC2Ev
_ZN9NCompress11NRangeCoder12CPriceTablesC1Ev
_ZN9CInBufferC2Ev
_ZN9CInBuffer9ReadBlockEv
__cxa_allocate_exception
__cxa_throw
_ZN10COutBuffer9FlushPartEv
_Z10ReadStreamP19ISequentialInStreamPvjPj
_ZNK18NCommandLineParser7CParserixEj
_ZN11CStringBaseIwED2Ev
_ZN11CStringBaseIwED1Ev
_ZN13CRecordVectorIPvED2Ev
_ZTV13CRecordVectorIPvE
_ZN17CBaseRecordVectorD2Ev
_ZN13CRecordVectorIPvED1Ev
_ZN13CRecordVectorIPvED0Ev
_ZN13CObjectVectorI11CStringBaseIwEED2Ev
_ZTV13CObjectVectorI11CStringBaseIwEE
_ZN17CBaseRecordVector5ClearEv
_ZN13CObjectVectorI11CStringBaseIwEED1Ev
_ZN18NCommandLineParser7CParserC2Ei
_ZN18NCommandLineParser7CParserC1Ei
_ZN13CObjectVectorI11CStringBaseIwEE6DeleteEii
_ZN17CBaseRecordVector6DeleteEii
_ZN18NCommandLineParser7CParserD2Ev
_ZN18NCommandLineParser7CParserD1Ev
_ZN13CObjectVectorI11CStringBaseIwEED0Ev
_ZN18NCommandLineParser16SplitCommandLineERK11CStringBaseIwERS1_S4_
_ZN18NCommandLineParser7CParser11ParseStringERK11CStringBaseIwEPKNS_11CSwitchFormE
_Z21MyStringCompareNoCasePKwS0_
_ZN17CBaseRecordVector18ReserveOnePositionEv
_ZTIPKc
_ZN18NCommandLineParser7CParser12ParseStringsEPKNS_11CSwitchFormERK13CObjectVectorI11CStringBaseIwEE
_Z15MyStringComparePKwS0_
_ZN18NCommandLineParser16SplitCommandLineERK11CStringBaseIwER13CObjectVectorIS1_E
_ZN18NCommandLineParser12ParseCommandEiPKNS_12CCommandFormERK11CStringBaseIwERS4_
_ZTI13CObjectVectorI11CStringBaseIwEE
_ZTS13CObjectVectorI11CStringBaseIwEE
_ZTI13CRecordVectorIPvE
_ZTS13CRecordVectorIPvE
_ZTI17CBaseRecordVector
_ZN4CCRC9InitTableEv
_ZN4CCRC10UpdateByteEh
_ZN4CCRC12UpdateUInt16Et
_ZN4CCRC12UpdateUInt32Ej
_ZN4CCRC12UpdateUInt64Ey
g_CRCTableInit
_Z15MyStringComparePKcS0_
_Z11MyCharUpperw
toupper
_Z24UnicodeStringToMultiByteRK11CStringBaseIwEj
_Z24MultiByteToUnicodeStringRK11CStringBaseIcEj
_Z21ConvertStringToUInt64PKcPS0_
_Z24ConvertOctStringToUInt64PKcPS0_
_Z21ConvertStringToUInt64PKwPS0_
_Z20ConvertStringToInt64PKcPS0_
_ZN17CBaseRecordVector10DeleteBackEv
_ZN17CBaseRecordVector10DeleteFromEi
_ZN17CBaseRecordVector9MoveItemsEii
_ZN17CBaseRecordVector7ReserveEi
_ZN17CBaseRecordVector13InsertOneItemEi
_ZTV17CBaseRecordVector
_ZN17CBaseRecordVectorD1Ev
_ZN17CBaseRecordVectorD0Ev
_ZTS17CBaseRecordVector
libcrypto.so.10
libz.so.1
libewf.so.1
libstdc++.so.6
libc.so.6
__stack_chk_fail
libgcc_s.so.1
_edata
__bss_start
_end
libafflib.so.0
CXXABI_1.3
GLIBCXX_3.4
GCC_3.0
GLIBC_2.0
GLIBC_2.4
GLIBC_2.7
GLIBC_2.2
GLIBC_2.3.4
GLIBC_2.1.3
GLIBC_2.1
d$4[]
d$l[^_]
[^_]
d$,[^_]
d$,[^_]
d$,1
[^_]
[^_]
d$,1
[^_]
[^_]
d$L[^_]
d$L[^_]
d$L[^_]
[^_]
[^_]
[^_]
[^_]
d$,[^_]
d$$[]
d$D[]
|+;M
d$<[^_]
[^_]
d$$[]
d$4[]
BAD 
SECTf
d$ [^]
[^_]
[^_]
[^_]
d$L[^_]
FtuR1
[^_]
d$L[^_]
[^_]
[^_]
d$l[^_]
d$l[^_]
d$l[^_]
[^_]
9Vxv
d$|[^_]
d$|[^_]
;Vtv
d$|[^_]
d$\[^_]
d$\1
[^_]
<(| 
d$,[^_]
d$,[^_]
d$<[^_]
[^_]
d$l[^_]
d$l[^_]
[^_]
d$D[]
Test
 Mes
sage
[^_]
[^_]
[^_]
d$<[^_]
d$L[^_]
d$L[^_]
t&9u
d$,[^_]
<?wk
d$<[^_]
t%9U
t%9U
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
d$\[^_]
[^_]
[^_]
d$,1
[^_]
tf</
|ot5
d$|[^_]
d$\[^_]
[^_]
d$<1
[^_]
d$<[^_]
d$<1
[^_]
[^_]
[^_]
d$,[^_]
d$<[^_]
d$\[^_]
d$|[^_]
d$|1
[^_]
Jx;Nx
;Ntw
d$$[]
d$$[]
;Vxr
;Ftv
[^_]
[^_]
9rtf
Vx+E
d$L[^_]
d$L[^_]
d$L1
[^_]
d$L[^_]
<ft	<F
d$L[^_]
w	;u
d$\[^_]
|	;F
d$<1
[^_]
;Axr
;Qtv
[^_]
yx;}
yx9}
d$\[^_]
[^_]
[^_]
[^_]
[^_]
d$,1
[^_]
d$<[^_]
[^_]
d$L[^_]
d$L[^_]
t&9u
[^_]
d$\[^_]
d$<[^_]
[^_]
[^_]
wI<,
d$X^_]
d$,[^_]
A8+A@
d$4[]
vn9u
A8;A<
A8;A<
F8;F<
A8;A<
[^_]
V8;V<
[^_]
N 9M
F8;F<
A8;A<
F8;F<
B8;B<
F8;F<
F8;F<
F8;F<
F8;F<
F8;F<
F8;F<
F8;F<
O8;O<s;
F8;F<
F8;F<
F8;F<
F8;F<
F8;F<
F8;F<
F8;F<
F8;F<
F8;F<
F8;F<
F8;F<
F8+F@
[^_]
[^_]
)H$)H0
B0+B$
)H$)H0
B0+B$
)H$)H0
B0+B$
)H$)H0
B0+B$
[^_]
d$ [^_]
d$ [^_]
d$ [^_]
w1=@
[^_]
t59E
d$,1
[^_]
tA=B
[^_]
k@T(
;P4s-
d$|[^_]
d$|[^_]
d$|[^_]
d$|[^_]
w)9}
[^_]
[^_]
^[^_]
[^_]
d$$[]
d$,[^_]
d$,[^_]
9VXw
9VXw
9VXw
9VXw
9~@u
9~@u
9~@u
9~@u
d$ [^]
d$ [^]
d$ [^]
d$ [^]
F<t\
V$v)
FL9}
A$v!
d$l[^_]
d$l[^_]
B<9E
B@+E
V$v-
d$l[^_]
d$l1
[^_]
d$l[^_]
F<t\
V$v)
G$v!
d$\[^_]
d$\[^_]
F<t\
V$v)
F<t]
d$L[^_]
d$L[^_]
F<t\
V$v)
G$v!
d$\[^_]
d$\[^_]
B@+E
Q$v,
d$l[^_]
d$l1
[^_]
d$l[^_]
FTsi
V$v.
d$\[^_]
d$\1
[^_]
d$\[^_]
B@+E
Q$v,
d$l[^_]
d$l1
[^_]
d$l[^_]
d$\[^_]
d$<[^_]
d$\[^_]
d$l[^_]
d$,[^_]
[^_]
uDiU
uDiU
d$\[^_]
d$4[]
[^_]
d$0^_]
d$01
+V$t0
[^_]
d$<[^_]
d$0^_]
d$01
d$0^_]
d$01
d$<[^_]
d$,[^_]
d$\[^_]
[^_]
d$\[^_]
t?+}
d$|[^_]
}I9M
[^_]
d$,[^_]
d$,[^_]
[^_]
d$,[^_]
[^_]
[^_]
af_probe_next_segment only works with aff files
afflib: segh is corrupt at %llu
afflib: name_len=%lu (an outrageous value)
realloc() failed in aff_toc_append. toc_count=%d
AF DIRECTORY:
%-32s @%llu len: %llu 
3.5.10
AFSTATS for %s
Pages read: %llu
Pages written: %llu
Pages compressed: %llu
Pages decompressed: %llu
Cache hits: %llu
Cache misses: %llu
Bytes copied: %llu
af_seek(%p,%lli,%d)
%s: %s
af_rewind_seg(%p)
/aes256
imagesize
AFFLIB_CACHE_STATS
AFFLIB_CACHE_DEBUG
AFFLIB_TRACEFILE
============================
AFFLIB trace started
/sha256
%Y-%m-%d %H:%M:%S
acquisition_date
image_gid
badflag
badsectors
AFFLIB_PASSPHRASE
AFFLIB_PASSPHRASE_FILE
AFFLIB_PASSPHRASE_FD
AFFLIB_CACHE_PAGES
affkey_aes256
af_open_with(%s,%o,%o,%s)
af_update_segf(%p,segname=%s,arg=%lu,datalen=%d)
af_open: invalid passphrase: '%s'
AFFLIB_DECRYPTING_PRIVATE_KEYFILE
af_cache_writethrough: overwriting page %llu.
Cannot set pagesize to %d (sectorsize=%d)
af_cache_flush: slot %d page %llu flushed.
  page %lli satisfied fromcache
  slot %d assigned to page %lli
af_get_page(%p,pagenum=%lli,buf=%p,bytes=%zu)
ALG_ZERO compressed data is %d bytes, expected 4.
Z_ERRNOR decompressing segment %lli
Z_STREAM_ERROR decompressing segment %lli
Z_DATA_ERROR decompressing segment %lli
Z_MEM_ERROR decompressing segment %lli
Z_BUF_ERROR decompressing segment %lli
Z_VERSION_ERROR decompressing segment %lli
uncompress returned an invalid value in get_segment
   LZMA decompressed page %lli. %zd bytes => %zd bytes
LZMA header error decompressing segment %lli
LZMA memory error decompressing segment %lli
Unknown compression algorithm 0x%d
pagesize
sectorsize
page%lli
page%lli_md5
page%lli_sha1
page%lli_sha256
af_cache_flush()
af_cache_alloc(%p,%lli)
  slot %d given to page %lli
   current pages in cache: 
 %lli
seg%lli
segsize
Cannot set maxsize as imagesize is already set (%lli)
Cannot set maxsize to %lli --- not multiple of pagesize=%d
af_write(af=%p,buf=%p,count=%zd) pos=%lli
af_read(%p,%p,%zd) (pos=%lli)
af_purge(%p)
afflib_stream.cpp
af->pb->pagenum == pagenum
int af_write(AFFILE*, unsigned char*, size_t)
file://
page%lli%c
seg%lli%c
%02x
%02X
,%03d
: %s
affkey_evp%d
SHA256
cert-sha256
affbom%d%c
AFFLIB: Could not sign segment '%s'
AFFLIB: OpenSSL does not have SHA256! AFF segments cannot be signed. See http://www.afflib.org/requirements.php for additional information.
B64 Fail at 1
B64 fail at 2
B64 fail at 3
B64 fail at 4
B64 fail at 5
B64 fail at 6
B64 fail at 7
B64 fail at 8
B64 fail at 9
B64 fail at 10
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
15CInMemoryStream
19ISequentialInStream
13CMyUnknownImp
8IUnknown
14ICompressCoder
30ICompressSetDecoderProperties2
33ICompressGetInStreamProcessedSize
16COutMemoryStream
20ISequentialOutStream
aff_rewind_seg()
aff_write_ignore2(%p,%zd)
aff_write_ignore(%p,%zd)
aff_del_seg(%p,%s)
Cannot exclusively lock %s:
fdopen(%d,%s)
aff_open: fstat(%s): 
"3.5.10"
afflib_version
aff_file_type
vnode_aff.cpp
*filename == '/'
aff_get_next_seg()
strcmp(next,name)==0
aff_write_seg(%p,%s,%lu,%p,len=%zu)
aff_write_seg(%p,'%s',%lu,data=%p,datalen=%u)
aff_write_seg: putting segment %s (datalen=%zd) offset=%lld
aff_update_seg(name=%s,arg=%lu,vallen=%u)
aff_open: couldn't read AFF header on existing file?
aff_open: %s is not an AFF file (header=%s)
af_get_next_segv only works with aff files
af_get_next_seg: data provided but datalen is NULL
af_get_next_segv: EOF on reading segment? File is corrupt.
af_get_next_segv: end of file reading segment tail; AFF file is truncated (AF_ERROR_TAIL)
af_get_next_segv: AF file is truncated (AF_ERROR_TAIL).
af_get_next_segv: AF file corrupt (%lu!=%lu)/!
aff_get_seg(%p,%s,arg=%p,data=%p,datalen=%p)
AFF10
int aff_get_seg(AFFILE*, const char*, long unsigned int*, unsigned char*, size_t*)
int aff_identify_file(const char*, int)
vnode_afd.cpp
af->v == &vnode_afd
%s/file_%03d.aff
open(%s,%d,%d) failed: %s
AFF Directory
case_num
acquisition_iso_country
acquisition_commandline
acquisition_notes
acquisition_device
acquisition_tecnician
device_manufacturer
device_model
device_sn
device_firmware
device_source
cylinders
heads
sectors_per_track
lbasize
hpa_present
dco_present
location_in_computer
device_capabilities
afd_add_file: could not update %s in %s (r=%d)
.afd directory contains no .aff files!
afd_private* AFD_PRIVATE(AFFILE*)
vnode_afm.cpp
af->v == &vnode_afm
raw_image_file_extension
afm_open: could not open '%s'
pages_per_raw_image_file
split_raw_read_write_setup: %s: failed to write %s
afm_open: %s: %s segment missing or too large
afm_open: file extension contains invalid character
afm_open: cannot find extension in '%s'
afm_open: file extension in '%s' too short
afm_split_raw_setup: image_pagesize==0
afm_split_raw_setup: maxsize (%lli) not a multiple of image_pagesize (%d)
afm_split_raw_setup: internal error. AFF image_size %lli != SR image_size %lli
afm_split_raw_setup: %s: per size indicated by metadata (%d * %d) doesn't match maxsize (%lli)
AFM (AFF metadata with split raw file)
afm_private* AFM_PRIVATE(AFFILE*)
devicesectors
%02d
%c%c%c
Unable to open EWF image file
EFW error: image size==0?
LIBEWF
ewf_open: %s: filename too long
af_popen: only type 'r' supported
raw_popen: invalid shell metacharacters in command '%s'
vnode_split_raw.cpp
af->v == &vnode_split_raw
srp->fds[i]!=0
   fds[%d]=%d   pos[%d]=%lli
split_raw_write: open(%s): 
Split Raw
split_raw_write: too many files
split_raw_open_internal: open(%s): 
split_raw_open_internal: fstat(%s): 
split_raw_open_internal: too many files
split_raw_open_internal errno=%d
split_raw_open_internal: %s exists, but previous file didn't match expected file size
split_raw_open: %s: raw_file_size (%lli not a multiple of pagesize %lu
split_raw_private* SPLIT_RAW_PRIVATE(AFFILE*)
void srp_validate(AFFILE*)
blanksectors
Error: 
User break
Can not allocate memory
%6d KB/s  
%5d MIPS
ERROR: Buffer is full
Error: Incorrect command
Encoder Error
Error: Internal ERROR 1282
Decode Error
Error: CRC Error
     
    Average
Error: dictionary size for benchmark must be >= 19 (512 KB)
       Compressing                Decompressing
Error: Can't allocate memory
Error: Set Decoder Properties Error
---------------------------------------------------
13CProgressInfo
13CCrcOutStream
19CBenchmarkOutStream
18CBenchmarkInStream
21ICompressProgressInfo
13COutStreamRam
12CInStreamRam
N9NCompress5NLZMA8CDecoderE
							
18CInBufferException
19COutBufferException
N4NHC412CMatchFinderE
N4NBT412CMatchFinderE
N4NBT312CMatchFinderE
N4NBT212CMatchFinderE
N9NCompress5NLZMA8CEncoderE
12IMatchFinder
11CLZInWindow
24IMatchFinderSetNumPasses
21ICompressSetOutStream
27ICompressSetCoderProperties
29ICompressWriteCoderProperties
N9NCompress5NLZMA10CBaseStateE
15IInWindowStream
							
maxLen == kNoLen
switch must be single
switch is not full
13CObjectVectorI11CStringBaseIwEE
13CRecordVectorIPvE
17CBaseRecordVector
zPLR
libafflib.so.0.0.0.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.gcc_except_table
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rel.dyn
.data.rel.ro
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.ctors
.dtors
.bss
.init
.rel.plt
.got.plt
.got
.text
