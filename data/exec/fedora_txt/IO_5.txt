tdTM
$Dz:
__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
XS_IO__Handle_setvbuf
Perl_Istack_sp_ptr
Perl_Imarkstack_ptr_ptr
Perl_Istack_base_ptr
Perl_croak
Perl_croak_nocontext
boot_IO
Perl_newSVpv
Perl_new_version
Perl_sv_derived_from
Perl_vcmp
XS_IO__Seekable_getpos
Perl_newXS
XS_IO__Seekable_setpos
XS_IO__File_new_tmpfile
XS_IO__Poll__poll
XS_IO__Handle_blocking
Perl_newXS_flags
XS_IO__Handle_ungetc
XS_IO__Handle_error
XS_IO__Handle_clearerr
XS_IO__Handle_untaint
XS_IO__Handle_flush
XS_IO__Handle_setbuf
XS_IO__Handle_sync
XS_IO__Socket_sockatmark
Perl_gv_stashpvn
Perl_newSViv
Perl_newCONSTSUB
Perl_Iunitcheckav_ptr
Perl_Iscopestack_ix_ptr
Perl_call_list
Perl_Isv_yes_ptr
Perl_form
Perl_get_sv
Perl_sv_2pv_flags
Perl_vstringify
Perl_sv_2io
Perl_PerlIO_fileno
Perl_sv_newmortal
Perl_sv_setiv
Perl_sv_setpvn
fsync
__errno_location
Perl_PerlIO_flush
Perl_Iop_ptr
Perl_mg_set
Perl_pad_sv
Perl_PerlIO_clearerr
Perl_PerlIO_error
Perl_sv_2iv_flags
PerlIO_ungetc
fcntl
Perl_sv_2mortal
Perl_Isv_undef_ptr
Perl_newSV
Perl_sv_free2
Perl_sv_free
PerlIO_tmpfile
Perl_newGVgen
Perl_hv_common_key_len
Perl_do_openn
Perl_newRV
Perl_gv_stashpv
Perl_sv_bless
PerlIO_setpos
PerlIO_getpos
libc.so.6
_edata
__bss_start
_end
GLIBC_2.1.3
GLIBC_2.2.4
GLIBC_2.0
\[^_]
[^_]
[^_]
[^_]
[^_]
,[^_]
,[^_]
,[^_]
,[^_]
[^_]
[^_]
<[^_]
<[^_]
[^_]
[^_]
Usage: IO::Handle::setvbuf(handle, buf, type, size)
%s not implemented on this architecture
((svtype)((_svi)->sv_flags & 0xff)) >= SVt_RV
Assertion %s failed: file "IO.c", line %d
%s object version %-p does not match %s%s%s%s %-p
((svtype)((_svi)->sv_flags & 0xff)) == SVt_IV || ((svtype)((_svi)->sv_flags & 0xff)) >= SVt_PVIV
((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVAV
((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVHV
((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVCV
!((((_svi)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVLV))
((svtype)((_svi)->sv_flags & 0xff)) >= SVt_PV
Assertion %s failed: file "IO.xs", line %d
((((zzzz)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((zzzz)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((zzzz)->sv_flags & 0xff)) == SVt_PVLV))
((svtype)((zzzz)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((zzzz)->sv_flags & 0xff)) >= SVt_PVLV
!((((thwacke)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((thwacke)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((thwacke)->sv_flags & 0xff)) == SVt_PVLV))
!({ SV *const thwacke = (SV *) (zzzz); if ((thwacke)->sv_flags & 0x40000000) ((!((((thwacke)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((thwacke)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((thwacke)->sv_flags & 0xff)) == SVt_PVLV))) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "IO.xs" "\", line %d", "!((((thwacke)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((thwacke)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((thwacke)->sv_flags & 0xff)) == SVt_PVLV))", 220), (void) 0)); ((thwacke)->sv_flags & 0x40000000); })
(*({ GV * const zzzz = (GV *) (gv); ((((((zzzz)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((zzzz)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((zzzz)->sv_flags & 0xff)) == SVt_PVLV))) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "IO.xs" "\", line %d", "((((zzzz)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((zzzz)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((zzzz)->sv_flags & 0xff)) == SVt_PVLV))", 220), (void) 0)); ((((svtype)((zzzz)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((zzzz)->sv_flags & 0xff)) >= SVt_PVLV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "IO.xs" "\", line %d", "((svtype)((zzzz)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((zzzz)->sv_flags & 0xff)) >= SVt_PVLV", 220), (void) 0)); ((!({ SV *const thwacke = (SV *) (zzzz); if ((thwacke)->sv_flags & 0x40000000) ((!((((thwacke)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((thwacke)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((thwacke)->sv_flags & 0xff)) == SVt_PVLV))) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "IO.xs" "\", line %d", "!((((thwacke)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((thwacke)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((thwacke)->sv_flags & 0xff)) == SVt_PVLV))", 220), (void) 0)); ((thwacke)->sv_flags & 0x40000000); })) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "IO.xs" "\", line %d", "!({ SV *const thwacke = (SV *) (zzzz); if ((thwacke)->sv_flags & 0x40000000) ((!((((thwacke)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((thwacke)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((thwacke)->sv_flags & 0xff)) == SVt_PVLV))) ? ((void) 0) : (Perl_croak_nocontext(\"Assertion %s failed: file \\\"\" \"IO.xs\" \"\\\", line %d\", \"!((((thwacke)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((thwacke)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((thwacke)->sv_flags & 0xff)) == SVt_PVLV))\", 220), (void) 0)); ((thwacke)->sv_flags & 0x40000000); })", 220), (void) 0)); &(((XPVGV*)(zzzz)->sv_any)->xiv_u.xivu_namehek); }))
IO::Handle::setvbuf
XS_VERSION
%s::%s
1.23_01
version
bootstrap parameter
IO.c
IO::Seekable::getpos
IO::Seekable::setpos
IO::File::new_tmpfile
IO::Poll::_poll
IO::Handle::blocking
IO::Handle::ungetc
IO::Handle::error
IO::Handle::clearerr
IO::Handle::untaint
IO::Handle::flush
IO::Handle::setbuf
IO::Handle::sync
IO::Socket::sockatmark
IO::Poll
POLLIN
POLLPRI
POLLOUT
POLLRDNORM
POLLWRNORM
POLLRDBAND
POLLWRBAND
POLLERR
POLLHUP
POLLNVAL
IO::Handle
_IOFBF
_IOLBF
_IONBF
SEEK_SET
SEEK_CUR
SEEK_END
handle, ...
Usage: %s(%s)
sock
0 but true
handle
handle, c
handle, blk=-1
timeout, ...
packname = "IO::File"
IO::File
handle, pos
IO.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.bss
.gnu_debuglink
