td`r
C-&c
yogL
1VvKp
)ISpJ
sAC7
1&Fh)
-quFw
H<}lk
%R)W
D;~'AD
Vj>)
%ccC0
x\e<	
F%@@
uRb4
d6Ne 
r3Vju
tJWSa
c3|>#
QyBE
Gqz:D<
__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
_ZN21CvANN_MLP_TrainParamsC2Ev
__gxx_personality_v0
_ZN21CvANN_MLP_TrainParamsC2E14CvTermCriteriaidd
_ZN21CvANN_MLP_TrainParamsC1E14CvTermCriteriaidd
_ZN21CvANN_MLP_TrainParamsD2Ev
_ZN21CvANN_MLP_TrainParamsD1Ev
_ZNK9CvANN_MLP11scale_inputEPK5CvMatPS0_
_ZNK9CvANN_MLP12scale_outputEPK5CvMatPS0_
_ZN9CvANN_MLP17calc_output_scaleEPK9CvVectorsi
cvError
_ZN9CvANN_MLP4readEP13CvFileStorageP10CvFileNode
cvGetFileNodeByName
cvRead
cvGetErrStatus
cvReadRawData
cvStartReadSeq
cvChangeSeqBlock
_ZN9CvANN_MLP6createEPK5CvMatidd
cvCreateMat
cvAlloc
_ZN9CvANN_MLP5trainEPK5CvMatS2_S2_S2_21CvANN_MLP_TrainParamsi
memcpy
cvFree_
_ZN9CvANN_MLP5clearEv
cvReleaseMat
_ZN9CvANN_MLP16prepare_to_trainEPK5CvMatS2_S2_S2_P9CvVectorsS4_PPdi
_Z22cvPreprocessIndexArrayPK5CvMatib
_ZN9CvANN_MLP16calc_input_scaleEPK9CvVectorsi
sqrt
_ZNK9CvANN_MLP21calc_activ_func_derivEP5CvMatS1_PKd
cvExp
_ZNK9CvANN_MLP15calc_activ_funcEP5CvMatPKd
_ZNK9CvANN_MLP7predictEPK5CvMatPS0_
cvGetRows
cvInitMatHeader
cvGEMM
_ZN9CvANN_MLP12init_weightsEv
_Unwind_Resume
_ZN9CvANN_MLPD0Ev
_ZTV9CvANN_MLP
_ZN11CvStatModelD2Ev
_ZdlPv
_ZN9CvANN_MLPD1Ev
_ZN9CvANN_MLPD2Ev
_ZN9CvANN_MLP12write_paramsEP13CvFileStorage
cvWriteString
cvWriteReal
cvStartWriteStruct
cvEndWriteStruct
cvWriteInt
_ZN9CvANN_MLP5writeEP13CvFileStoragePKc
cvWrite
cvWriteRawData
_ZN9CvANN_MLP11train_rpropE9CvVectorsS0_PKd
cvSet
cvSetZero
cvMul
_ZN9CvANN_MLP14set_activ_funcEidd
_ZN21CvANN_MLP_TrainParamsC1Ev
_ZN9CvANN_MLPC1EPK5CvMatidd
_ZN11CvStatModelC2Ev
_ZN9CvANN_MLPC2EPK5CvMatidd
_ZN9CvANN_MLPC1Ev
_ZN9CvANN_MLPC2Ev
_ZN9CvANN_MLP14train_backpropE9CvVectorsS0_PKd
cvAdd
_ZN9CvANN_MLP11read_paramsEP13CvFileStorageP10CvFileNode
_ZTI9CvANN_MLP
_ZN11CvStatModel4saveEPKcS1_
_ZN11CvStatModel4loadEPKcS1_
_ZTS9CvANN_MLP
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTI11CvStatModel
_ZN13CvBoostParamsC2EiidibPKf
_ZN11CvBoostTree5trainEP16CvDTreeTrainDataPK5CvMatP7CvBoost
_ZN11CvBoostTree5trainEPK5CvMatiS2_S2_S2_S2_S2_13CvDTreeParams
_ZN11CvBoostTree5trainEP16CvDTreeTrainDataPK5CvMat
_ZN11CvBoostTree5scaleEd
_ZN11CvBoostTree4readEP13CvFileStorageP10CvFileNode
_ZN7CvBoost11get_weightsEv
_ZN7CvBoost19get_subtree_weightsEv
_ZN7CvBoost17get_weak_responseEv
_ZNK7CvBoost10get_paramsEv
_ZN7CvBoost19get_weak_predictorsEv
_ZN7CvBoost10set_paramsERK13CvBoostParams
_ZN7CvBoost12write_paramsEP13CvFileStorage
_ZN7CvBoost12trim_weightsEv
cvCopy
_ZN11CvBoostTree15calc_node_valueEP11CvDTreeNode
_ZN7CvBoost5clearEv
cvReleaseMemStorage
_ZN7CvBoostD0Ev
_ZTV7CvBoost
_ZN7CvBoostD1Ev
_ZN7CvBoostD2Ev
_ZN7CvBoost5pruneE7CvSlice
cvSliceLength
cvSetSeqReaderPos
cvSeqRemoveSlice
_ZN11CvBoostTree4readEP13CvFileStorageP10CvFileNodeP16CvDTreeTrainData
_ZN7CvDTree4readEP13CvFileStorageP10CvFileNodeP16CvDTreeTrainData
_ZN11CvBoostTree4readEP13CvFileStorageP10CvFileNodeP7CvBoostP16CvDTreeTrainData
_ZN11CvBoostTree13calc_node_dirEP11CvDTreeNode
_ZNK16CvDTreeTrainData12get_var_typeEi
_ZN11CvBoostTree14try_split_nodeEP11CvDTreeNode
_ZN7CvDTree14try_split_nodeEP11CvDTreeNode
_ZN11CvBoostTree5clearEv
_ZN7CvDTree5clearEv
_ZN11CvBoostTreeD0Ev
_ZTV11CvBoostTree
_ZN7CvDTreeD2Ev
_ZN11CvBoostTreeD1Ev
_ZN11CvBoostTreeD2Ev
_ZN11CvBoostTreeC1Ev
_ZN7CvDTreeC2Ev
_ZN7CvBoost4readEP13CvFileStorageP10CvFileNode
cvCreateMemStorage
cvCreateSeq
cvSeqPush
_Znwj
_ZN7CvBoost5trainEPK5CvMatiS2_S2_S2_S2_S2_13CvBoostParamsb
_ZN16CvDTreeTrainDataC1EPK5CvMatiS2_S2_S2_S2_S2_RK13CvDTreeParamsbb
_ZNK16CvDTreeTrainData15get_num_classesEv
_ZN11CvBoostTreeC2Ev
_ZN11CvBoostTree20find_split_cat_classEP11CvDTreeNodei
_ZN11CvBoostTree24find_surrogate_split_catEP11CvDTreeNodei
_ZN11CvBoostTree18find_split_cat_regEP11CvDTreeNodei
_ZN11CvBoostTree24find_surrogate_split_ordEP11CvDTreeNodei
_ZN11CvBoostTree18find_split_ord_regEP11CvDTreeNodei
_ZN11CvBoostTree20find_split_ord_classEP11CvDTreeNodei
_ZN7CvBoost5writeEP13CvFileStoragePKc
_ZN13CvBoostParamsC1Ev
_ZN7CvBoostC1EPK5CvMatiS2_S2_S2_S2_S2_13CvBoostParams
_ZN7CvBoostC2EPK5CvMatiS2_S2_S2_S2_S2_13CvBoostParams
_ZN7CvBoostC1Ev
_ZN7CvBoostC2Ev
_ZN13CvBoostParamsC2Ev
_ZN13CvBoostParamsC1EiidibPKf
_ZN7CvBoost11read_paramsEP13CvFileStorageP10CvFileNode
_ZN16CvDTreeTrainDataC1Ev
_ZNK7CvBoost7predictEPK5CvMatS2_PS0_7CvSliceb
_ZN7CvBoost14update_weightsEP11CvBoostTree
cvXorS
_ZTI7CvBoost
_ZTI11CvBoostTree
_ZN7CvDTree5writeEP13CvFileStoragePKc
_ZNK7CvDTree7predictEPK5CvMatS2_b
_ZN7CvDTree18get_var_importanceEv
_ZN7CvDTree5writeEP13CvFileStorage
_ZN7CvDTree8do_trainEPK5CvMat
_ZN7CvDTree15split_node_dataEP11CvDTreeNode
_ZN7CvDTree15find_best_splitEP11CvDTreeNode
_ZN7CvDTree17complete_node_dirEP11CvDTreeNode
_ZN7CvDTree18cluster_categoriesEPKiiiPiiS2_
_ZN7CvDTree8prune_cvEv
_ZN7CvDTree15update_tree_rncEii
_ZN7CvDTree8cut_treeEiid
_ZN7CvDTree15free_prune_dataEb
_ZN7CvDTree9free_treeEv
_ZN7CvDTree10write_nodeEP13CvFileStorageP11CvDTreeNode
_ZN7CvDTree11write_splitEP13CvFileStorageP12CvDTreeSplit
_ZN7CvDTree9read_nodeEP13CvFileStorageP10CvFileNodeP11CvDTreeNode
_ZN7CvDTree10read_splitEP13CvFileStorageP10CvFileNode
_ZN7CvDTree16write_tree_nodesEP13CvFileStorage
_ZN7CvDTree15read_tree_nodesEP13CvFileStorageP10CvFileNode
_ZTS7CvBoost
_ZTS11CvBoostTree
_ZTI7CvDTree
_ZNK4CvEM13get_nclustersEv
_ZNK4CvEM9get_meansEv
_ZNK4CvEM8get_covsEv
_ZNK4CvEM11get_weightsEv
_ZNK4CvEM9get_probsEv
_ZN4CvEM10set_paramsERK10CvEMParamsRK9CvVectors
cvCheckTermCriteria
_ZN4CvEM5clearEv
_ZN4CvEMD0Ev
_ZTV4CvEM
_ZN4CvEMD1Ev
_ZN4CvEMD2Ev
_ZN4CvEMC2Ev
_ZN4CvEM6kmeansERK9CvVectorsiP5CvMat14CvTermCriteriaPKS3_
cvConvertScale
cvRandShuffle
_ZN4CvEM5trainEPK5CvMatS2_10CvEMParamsPS0_
_Z18cvPrepareTrainDataPKcPK5CvMatiS3_iS3_S3_bPPPKfPiS8_S8_PPS1_SA_SA_SA_
_ZNK4CvEM7predictEPK5CvMatPS0_
_Z20cvPreparePredictDataPKviPK5CvMatiS3_PPfi
cvSum
cvReshape
_ZN4CvEMC1Ev
_ZN4CvEM7init_emERK9CvVectors
cvMaxS
cvMinMaxLoc
cvNormalize
cvTranspose
cvAddWeighted
cvSVD
cvTrace
cvSetIdentity
_ZN4CvEM9init_autoERK9CvVectors
_Z22cvSortSamplesByClassesPPKfPK5CvMatPiPPKh
cvCalcCovarMatrix
_ZN4CvEM6run_emERK9CvVectors
cvLog
cvDiv
cvMulTransposed
cvScaleAdd
cvGetDiag
_ZTI4CvEM
_ZN11CvStatModel5writeEP13CvFileStoragePKc
_ZN11CvStatModel4readEP13CvFileStorageP10CvFileNode
_ZTS4CvEM
_ZNK10CvKNearest9get_max_kEv
_ZNK10CvKNearest13get_var_countEv
_ZNK10CvKNearest13is_regressionEv
_ZNK10CvKNearest16get_sample_countEv
_ZNK10CvKNearest21find_neighbors_directEPK5CvMatiiiPfPPKfS3_
_ZNK10CvKNearest13write_resultsEiiiiPKfS1_P5CvMatS3_S3_P7Cv32suf
_ZNK10CvKNearest12find_nearestEPK5CvMatiPS0_PPKfS3_S3_
_ZN10CvKNearest5clearEv
_ZN10CvKNearest5trainEPK5CvMatS2_S2_bib
_ZN10CvKNearestC1EPK5CvMatS2_S2_bi
_ZTV10CvKNearest
_ZN10CvKNearestC2EPK5CvMatS2_S2_bi
_ZN10CvKNearestC1Ev
_ZN10CvKNearestC2Ev
_ZN10CvKNearestD0Ev
_ZN10CvKNearestD1Ev
_ZN10CvKNearestD2Ev
_ZTI10CvKNearest
_ZTS10CvKNearest
_ZNK23CvNormalBayesClassifier7predictEPK5CvMatPS0_
_ZN23CvNormalBayesClassifier5trainEPK5CvMatS2_S2_S2_b
cvNorm
memset
cvCompleteSymm
_ZN23CvNormalBayesClassifier5clearEv
_ZN23CvNormalBayesClassifierC1Ev
_ZTV23CvNormalBayesClassifier
_ZN23CvNormalBayesClassifierC2Ev
_ZN23CvNormalBayesClassifierC1EPK5CvMatS2_S2_S2_
_ZN23CvNormalBayesClassifierC2EPK5CvMatS2_S2_S2_
_ZN23CvNormalBayesClassifierD0Ev
_ZN23CvNormalBayesClassifierD1Ev
_ZN23CvNormalBayesClassifierD2Ev
_ZN23CvNormalBayesClassifier5writeEP13CvFileStoragePKc
_ZN23CvNormalBayesClassifier4readEP13CvFileStorageP10CvFileNode
_ZTI23CvNormalBayesClassifier
_ZTS23CvNormalBayesClassifier
_ZNK12CvForestTree13get_var_countEv
_ZN12CvForestTree5trainEPK5CvMatiS2_S2_S2_S2_S2_13CvDTreeParams
_ZN12CvForestTree5trainEP16CvDTreeTrainDataPK5CvMat
_ZN12CvForestTree4readEP13CvFileStorageP10CvFileNode
_ZN8CvRTrees19get_active_var_maskEv
_ZN8CvRTrees7get_rngEv
_ZN8CvRTrees18get_var_importanceEv
_ZNK8CvRTrees13get_proximityEPK5CvMatS2_S2_S2_
_ZNK8CvRTrees14get_tree_countEv
_ZNK8CvRTrees8get_treeEi
_ZN12CvForestTree5trainEP16CvDTreeTrainDataPK5CvMatP8CvRTrees
_ZNK8CvRTrees7predictEPK5CvMatS2_
_ZN8CvRTrees5clearEv
_ZN8CvRTreesD0Ev
_ZTV8CvRTrees
_ZN8CvRTreesD1Ev
_ZN8CvRTreesD2Ev
_ZN8CvRTreesC1Ev
_ZN12CvForestTree4readEP13CvFileStorageP10CvFileNodeP16CvDTreeTrainData
_ZN12CvForestTree4readEP13CvFileStorageP10CvFileNodeP8CvRTreesP16CvDTreeTrainData
_ZN12CvForestTreeD0Ev
_ZTV12CvForestTree
_ZN12CvForestTreeD1Ev
_ZN12CvForestTreeD2Ev
_ZN12CvForestTreeC1Ev
_ZN12CvForestTreeC2Ev
_ZN8CvRTrees5writeEP13CvFileStoragePKc
_ZN12CvForestTree15find_best_splitEP11CvDTreeNode
_ZN8CvRTreesC2Ev
_ZN8CvRTrees11grow_forestE14CvTermCriteria
_ZN8CvRTrees5trainEPK5CvMatiS2_S2_S2_S2_S2_10CvRTParams
cvGetCols
_ZN8CvRTrees4readEP13CvFileStorageP10CvFileNode
_ZTI8CvRTrees
_ZTI12CvForestTree
_ZN7CvDTree20find_split_ord_classEP11CvDTreeNodei
_ZN7CvDTree20find_split_cat_classEP11CvDTreeNodei
_ZN7CvDTree18find_split_ord_regEP11CvDTreeNodei
_ZN7CvDTree18find_split_cat_regEP11CvDTreeNodei
_ZN7CvDTree24find_surrogate_split_ordEP11CvDTreeNodei
_ZN7CvDTree24find_surrogate_split_catEP11CvDTreeNodei
_ZN7CvDTree13calc_node_dirEP11CvDTreeNode
_ZN7CvDTree15calc_node_valueEP11CvDTreeNode
_ZTS8CvRTrees
_ZTS12CvForestTree
_ZN11CvSVMParamsC1Ev
_ZN11CvSVMParamsC2EiiddddddP5CvMat14CvTermCriteria
_ZN11CvSVMParamsC1EiiddddddP5CvMat14CvTermCriteria
_ZN11CvSVMKernel5clearEv
_ZN11CvSVMKernelC1Ev
_ZTV11CvSVMKernel
_ZN11CvSVMKernelC2Ev
_ZN11CvSVMKernel6createEPK11CvSVMParamsMS_FviiPPKfS4_PfE
_ZN11CvSVMKernelC1EPK11CvSVMParamsMS_FviiPPKfS4_PfE
_ZN11CvSVMKernelC2EPK11CvSVMParamsMS_FviiPPKfS4_PfE
_ZN11CvSVMKernel17calc_non_rbf_baseEiiPPKfS1_Pfdd
_ZN11CvSVMKernel11calc_linearEiiPPKfS1_Pf
_ZN11CvSVMKernel4calcEiiPPKfS1_Pf
_ZN11CvSVMSolver11get_row_svcEiPfS0_b
_ZN11CvSVMSolver17get_row_one_classEiPfS0_b
_ZN11CvSVMSolver11get_row_svrEiPfS0_b
_ZN11CvSVMSolver7get_rowEiPf
_ZN11CvSVMSolver18select_working_setERiS0_
_ZN11CvSVMSolver8calc_rhoERdS0_
_ZN11CvSVMSolver25select_working_set_nu_svmERiS0_
_ZN11CvSVMSolver15calc_rho_nu_svmERdS0_
_ZN11CvSVMSolver11solve_c_svcEiiPPKfPcddP12CvMemStorageP11CvSVMKernelPdR17CvSVMSolutionInfo
_ZN11CvSVMSolver12solve_nu_svcEiiPPKfPcP12CvMemStorageP11CvSVMKernelPdR17CvSVMSolutionInfo
_ZNK5CvSVM24get_support_vector_countEv
_ZNK5CvSVM18get_support_vectorEi
_ZN5CvSVM6train1EiiPPKfPKvddP12CvMemStoragePdRd
_ZN11CvSVMSolver12solve_nu_svrEiiPPKfS1_P12CvMemStorageP11CvSVMKernelPdR17CvSVMSolutionInfo
cvMemStorageAlloc
_ZN11CvSVMSolver13solve_eps_svrEiiPPKfS1_P12CvMemStorageP11CvSVMKernelPdR17CvSVMSolutionInfo
_ZN11CvSVMSolver15solve_one_classEiiPPKfP12CvMemStorageP11CvSVMKernelPdR17CvSVMSolutionInfo
_ZN11CvSVMSolver12get_row_baseEiPb
_ZNK5CvSVM7predictEPK5CvMat
_ZN11CvSVMSolver6createEiiPPKfPciPdddP12CvMemStorageP11CvSVMKernelMS_FPfiS9_S9_bEMS_FbRiSC_EMS_FvRdSF_E
cvCreateChildMemStorage
_ZN11CvSVMSolverC1EiiPPKfPciPdddP12CvMemStorageP11CvSVMKernelMS_FPfiS9_S9_bEMS_FbRiSC_EMS_FvRdSF_E
_ZTV11CvSVMSolver
_ZN11CvSVMSolverC2EiiPPKfPciPdddP12CvMemStorageP11CvSVMKernelMS_FPfiS9_S9_bEMS_FbRiSC_EMS_FvRdSF_E
_ZN11CvSVMSolver5clearEv
_ZN11CvSVMSolverC1Ev
_ZN11CvSVMSolverC2Ev
_ZN5CvSVM5clearEv
_ZN5CvSVM13create_solverEv
_ZN5CvSVM13create_kernelEv
_ZN11CvSVMSolverD0Ev
_ZN11CvSVMSolverD1Ev
_ZN11CvSVMSolverD2Ev
_ZN11CvSVMKernelD0Ev
_ZN11CvSVMKernelD1Ev
_ZN11CvSVMKernelD2Ev
_ZN5CvSVM10set_paramsERK11CvSVMParams
_ZN5CvSVMD0Ev
_ZTV5CvSVM
_ZN5CvSVMD1Ev
_ZN5CvSVMD2Ev
_ZN5CvSVMC1Ev
_ZN5CvSVMC2Ev
_ZN11CvSVMKernel9calc_polyEiiPPKfS1_Pf
cvPow
_ZN11CvSVMKernel12calc_sigmoidEiiPPKfS1_Pf
_ZN5CvSVM5trainEPK5CvMatS2_S2_S2_11CvSVMParams
_ZN5CvSVMC1EPK5CvMatS2_S2_S2_11CvSVMParams
_ZN5CvSVMC2EPK5CvMatS2_S2_S2_11CvSVMParams
_ZN11CvSVMSolver13solve_genericER17CvSVMSolutionInfo
_ZN5CvSVM12write_paramsEP13CvFileStorage
_ZN11CvSVMParamsC2Ev
_ZN5CvSVM5writeEP13CvFileStoragePKc
_ZN11CvSVMKernel8calc_rbfEiiPPKfS1_Pf
_ZN5CvSVM11read_paramsEP13CvFileStorageP10CvFileNode
_ZN5CvSVM4readEP13CvFileStorageP10CvFileNode
_ZTI5CvSVM
_ZTI11CvSVMSolver
_ZTI11CvSVMKernel
_ZTS5CvSVM
_ZTS11CvSVMSolver
_ZTVN10__cxxabiv117__class_type_infoE
_ZTS11CvSVMKernel
_Z8icvCmpDIPKvS0_Pv
cvCreateTestSet
cvRandMVNormal
cvStartWriteSeq
cvEndWriteSeq
cvSeqSort
cvGetSeqElem
cvCreateSeqBlock
_ZNK16CvDTreeTrainData18get_work_var_countEv
_ZN16CvDTreeTrainData16get_ord_var_dataEP11CvDTreeNodei
_ZN16CvDTreeTrainData16get_class_labelsEP11CvDTreeNode
_ZN16CvDTreeTrainData17get_ord_responsesEP11CvDTreeNode
_ZN16CvDTreeTrainData10get_labelsEP11CvDTreeNode
_ZN16CvDTreeTrainData16get_cat_var_dataEP11CvDTreeNodei
_ZN16CvDTreeTrainData17get_child_buf_idxEP11CvDTreeNode
_ZNK7CvDTree8get_rootEv
_ZNK7CvDTree19get_pruned_tree_idxEv
_ZN7CvDTree8get_dataEv
_ZN16CvDTreeTrainData10set_paramsERK13CvDTreeParams
_ZN7CvDTree5trainEP16CvDTreeTrainDataPK5CvMat
cvClearSet
_ZN7CvDTreeD0Ev
_ZTV7CvDTree
_ZN7CvDTreeD1Ev
_ZN7CvDTreeC1Ev
_ZN16CvDTreeTrainData15free_train_dataEv
_ZN16CvDTreeTrainData12write_paramsEP13CvFileStorage
_ZN16CvDTreeTrainData11get_vectorsEPK5CvMatPfPhS3_b
_ZN16CvDTreeTrainData14subsample_dataEPK5CvMat
_ZN16CvDTreeTrainData14free_node_dataEP11CvDTreeNode
_ZN16CvDTreeTrainData9free_nodeEP11CvDTreeNode
_ZN16CvDTreeTrainData8set_dataEPK5CvMatiS2_S2_S2_S2_S2_RK13CvDTreeParamsbbb
_Z16cvCheckTrainDataPK5CvMatiS1_PiS2_
_Z19cvPreprocessVarTypePK5CvMatS1_iPi
cvCreateSet
sprintf
cvCloneMat
_ZTV16CvDTreeTrainData
_ZN7CvDTree5trainEPK5CvMatiS2_S2_S2_S2_S2_13CvDTreeParams
_ZN16CvDTreeTrainDataC2EPK5CvMatiS2_S2_S2_S2_S2_RK13CvDTreeParamsbb
_ZN16CvDTreeTrainData5clearEv
_ZN16CvDTreeTrainDataD0Ev
_ZN16CvDTreeTrainDataD1Ev
_ZN16CvDTreeTrainDataD2Ev
_ZN7CvDTree4readEP13CvFileStorageP10CvFileNode
_ZN16CvDTreeTrainDataC2Ev
_ZN16CvDTreeTrainData13new_split_catEif
cvSetAdd
_ZN16CvDTreeTrainData13new_split_ordEifiif
_ZN16CvDTreeTrainData8new_nodeEP11CvDTreeNodeiii
_ZN16CvDTreeTrainData11read_paramsEP13CvFileStorageP10CvFileNode
_ZTI16CvDTreeTrainData
_ZTS7CvDTree
_ZTS16CvDTreeTrainData
_ZTV11CvStatModel
_ZN11CvStatModelC1Ev
_ZN11CvStatModel5clearEv
_Z28cvPreprocessOrderedResponsesPK5CvMatS1_i
_Z17cvGetTrainSamplesPK5CvMatiS1_S1_PiS2_b
qsort
_Z21cvCombineResponseMapsP5CvMatPKS_S0_PS0_
_Z32cvPreprocessCategoricalResponsesPK5CvMatS1_iPPS_S3_
cvChol
sqrtf
cvOpenFileStorage
cvReleaseFileStorage
cvGetRootFileNode
_ZN11CvStatModelD0Ev
_ZN11CvStatModelD1Ev
cvRandArr
cvCreateMatHeader
time
cvRandSeries
_Z21icvGetNumberOfClusterPdiffi
_Z20icvFindClusterLabelsPK5CvMatffS1_
_Z17cvWritebackLabelsPK5CvMatPS_S1_S2_S1_S2_S1_iS1_i
cvGetElemType
cvGetDims
cvInitSparseMatIterator
_Z31icvGenerateRandomClusterCentersiPK5CvMatiPS_
cvRandRoundUni
cvRandGaussMixture
_ZTS11CvStatModel
libcxcore.so.1
libpthread.so.0
libdl.so.2
libstdc++.so.6
libm.so.6
libc.so.6
__stack_chk_fail
libgcc_s.so.1
_edata
__bss_start
_end
libml.so.1
GCC_3.0
CXXABI_1.3
GLIBCXX_3.4
GLIBC_2.0
GLIBC_2.1.3
GLIBC_2.4
@,3333
@033
B,3333
B033
Z<[]
MbP?
B,3333
B033
Z<[]
MbP?
(^_]
(^_]
<[^_]
<[^_]
\[^_]
\[^_]
BBt?
[^_]
[^_]
BBt[
\[^_]
[^_]
[^_]
,[^_]
,[^_]
,[^_]
BBt]
;:ty
l[^_]
,[^_]
<[^_]
[^_]
BHt1
B0ffff
B4ff
B(ffff
B,ff
BD(\
B<(\
@,3333
@033
[^_]
[^_]
A8w~
[^_]
[^_]
[^_]
[^_]
<[^_]
L[^_]
,[^_]
L[^_]
9G,~o
[^_]
L[^_]
[^_]
[^_]
[^_]
[^_]
L[^_]
<[^_]
[^_]
}2+}
|[^_]
[^_]
B<9H
l[^_]
l[^_]
@(ffff
@,ff
\[^_]
\[^_]
@(ffff
@,ff
BBt`
BBu1
BBu#
[^_]
[^_]
BBtT
BBu&
BBu+
[^_]
[^_]
BBt_
[^_]
[^_]
[^_]
[^_]
[^_]
@8MbP
h[^_]
,[^_]
BBti
BBu'
BBu$
BBu#
[^_]
[^_]
l[^_]
[^_]
BBtZ
[^_]
BBu@
[^_]
[^_]
[^_]
|[^_]
 [^_]
[^_]
[^_]
[^_]
[^_]
[^_]
\[^_]
\[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
0^_]
|iu;
[^_]
[^_]
[^_]
[^_]
[^_]
D$D9
D$<1
D$4A
[^_]
[^_]
D$D=
D$<5
D$4A
\[^_]
[^_]
;J`s
D$D=
D$<5
D$4I
[^_]
[^_]
D$D9
D$<1
D$4I
[^_]
[^_]
D$D9
D$<1
D$4E
[^_]
GD;M
l[^_]
,[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
\[^_]
[^_]
|[^_]
[^_]
<[^_]
[^_]
[^_]
<[^_]
[^_]
[^_]
[^_]
;GX}W
BBt*
[^_]
;B |
[^_]
[^_]
[^_]
[^_]
 [^]
[^_]
[^_]
[^_]
[^_]
G ;B`~	
G$;B\|
<[^_]
92tZ
[^_]
[^_]
D$+)
OX9M
[^_]
,[^_]
<[^_]
VUUU
L[^_]
L[^_]
L[^_]
<$#u
|[^_]
<[^_]
[^_]
l[^_]
<[^_]
[^_]
D$')
}++E
[^_]
;B\}
[^_]
p(t,
[^_]
[^_]
[^_]
[^_]
BBtQ
BBu+
B +A P
[^_]
[^_]
[^_]
;P$tL
GPt<
|[^_]
BBt?
BBu%
BBtA
\[^_]
BBtI
BBtO
t	9U
BBt<
L[^_]
BBtS
L[^_]
BBt^
BBtu
[^_]
[^_]
l[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
BBtJ
BBt?
M,9J
M$9H
DBt^=
BBu*
BBuF
BBtd
BBu 
BBu 
[^_]
MbP?
@ffffff
UUUUUU
mlann_mlp.cpp
layer_sizes
Inner function failed.
input_scale
inv_output_scale
IDENTITY
SIGMOID_SYM
GAUSSIAN
activation_function
f_param1
f_param2
min_val
max_val
min_val1
max_val1
training_params
BACKPROP
train_method
dw_scale
moment_scale
RPROP
dw_plus
dw_minus
dw_min
dw_max
term_criteria
epsilon
iterations
opencv-ml-ann-mlp
Unknown activation function
my_nn
Some of new output training vector components run exceed the original range too much
input_scale tag is not found or is invalid
inv_output_scale tag is not found or is invalid
weights tag is not found or is invalid
The array of layer neuron counters must be an integer vector
there should be at least one input and one output and every hidden layer must have more than 1 neuron
The network has not been created. Use method create or the appropriate constructor
input training data should be a floating-point matrix withthe number of rows equal to the number of training samples and the number of columns equal to the size of 0-th (input) layer
output training data should be a floating-point matrix withthe number of rows equal to the number of training samples and the number of columns equal to the size of last (output) layer
The numbers of input and output samples do not match
sample_weights (if passed) must be a valid matrix
sample_weights must be 1d floating-point vector containing weights of all or selected training samples
some of sample weights are negative
The network has not been initialized
Both input and output must be floating-point matrices of the same type and have the same number of rows
input matrix must have the same number of columns as the number of neurons in the input layer
output matrix must have the same number of columns as the number of neurons in the output layer
9CvANN_MLP
mlboost.cpp
DiscreteAdaboost
RealAdaboost
LogitBoost
GentleAdaboost
Default
Gini
Misclassification
SquaredErr
boosting_type
splitting_criteria
ntrees
weight_trimming_rate
<trees> tag is missing
opencv-ml-boost-tree
my_boost_tree
Unknown boosting type
Unknown/unsupported boosting type
The number of trees stored does not match <ntrees> tag value
Boosted trees can only be used for 2-class classification.
The classifier has not been trained yet
The boosted tree ensemble has not been trained yet
the input sample must be 1d floating-point vector with the same number of elements as the total number of variables used for training
the missing data mask must be 8-bit vector of the same size as input sample
The output matrix of weak classifier responses must be valid floating-point vector of the same number of components as the length of input slice
one of input categorical variable is not an integer
@7CvBoost
11CvBoostTree
mlem.cpp
Unknown start_step
cvEM
Unknown covariation matrix type
Probabilities must be specified when EM algorithm starts with M-step
Mean's must be specified when EM algorithm starts with E-step
The number of clusters (mixtures) should be > 0
The array of probabilities must be a valid floating-point matrix (CvMat) of 'nsamples' x 'nclusters' size
The array of mean's must be a valid floating-point matrix (CvMat) of 'nsamples' x 'dims' size
The array of weights must be a valid 1d floating-point vector (CvMat) of 'nclusters' elements
Each of covariation matrices must be a valid square floating-point matrix (CvMat) of 'dims' x 'dims'
labels array (when passed) must be a valid 1d integer vector of <sample_count> elements
The number of samples should be greater than the number of clusters
Assertion: params.start_step == START_E_STEP && params.means failed
4CvEM
mlknearest.cpp
CvKNearest::train
The search tree must be constructed first using train method
Input samples must be floating-point matrix (<num_samples>x<var_count>)
The results must be 1d vector containing as much elements as the number of samples
The results must be floating-point or integer (in case of classification) vector
k must be within 1..max_k range
The neighbor responses (if present) must be floating-point matrix of <num_samples> x <k> size
The distances from the neighbors (if present) must be floating-point matrix of <num_samples> x <k> size
The newly added data have different dimensionality
max_k must be a positive number
10CvKNearest
mlnbayes.cpp
my_nb
opencv-ml-bayesian
var_all
var_idx
cls_labels
productsum
inv_eigen_values
cov_rotate_mats
Number of classes is less 1
The input samples must be 32f matrix with the number of columns = var_all
When the number of input samples is >1, the output vector of results must be passed
The output array must be integer or floating-point vector with the number of elements = number of rows in the input matrix
In the current implementation the new training data must have absolutely the same set of class labels as used in the original training data
The new training data is inconsistent with the original training data
No "cls_labels" in NBayes classifier
The field "var_count" of NBayes classifier is missing
23CvNormalBayesClassifier
mlrtrees.cpp
my_random_trees
Invalid CvRTrees object
opencv-ml-random-trees
nclasses
nsamples
nactive_vars
oob_error
var_importance
Assertion: 0 <= class_idx && class_idx < nclasses failed
Assertion: var_count == data->var_count failed
<nactive_vars> must be non-negative
Some <nclasses>, <nsamples>, <var_count>, <nactive_vars>, <oob_error>, <ntrees> of tags are missing
<ntrees> is not equal to the number of trees saved in file
8CvRTrees
12CvForestTree
timlsvm.cpp
Too small storage block size
Unknown/unsupported SVM type
my_svm
CvSVM::train
C_SVC
NU_SVC
ONE_CLASS
EPS_SVR
NU_SVR
LINEAR
POLY
SIGMOID
svm_type
kernel
degree
gamma
coef0
opencv-ml-svm
class_count
class_labels
class_weights
sv_total
support_vectors
decision_functions
sv_count
alpha
index
svm_type tag is not found
SVM kernel tag is not found
Missing of invalid SVM type
comp_idx
rho is missing
The SVM should be trained first
INTERNAL ERROR: Unknown SVM type, the SVM structure is probably corrupted
Unknown/unsupported kernel type
gamma parameter of the kernel must be positive
The kernel parameter <coef0> must be positive or zero
The kernel parameter <degree> must be positive
The parameter C must be positive
The parameter nu must be between 0 and 1
The parameter p must be positive
params.class_weights must be 1d floating-point vector containing as many elements as the number of classes
Assertion: sv_count == sv_total failed
SVM kernel type tag is not found
Missing of invalid SVM kernel type
The requested element is not found
SVM model data is invalid, check sv_count, var_* and class_count tags
Array of class labels is missing or invalid
var_idx array is missing or invalid
Missing or invalid sequence of support vectors
Assertion: var_count == 1 || (CV_NODE_IS_SEQ(sv_elem->tag) && sv_elem->data.seq->total == var_count) failed
decision_functions is missing or is not a collection or has a wrong number of elements
sv_count is missing or non-positive
alpha is missing in the decision function
Assertion: sv_count == 1 || CV_NODE_IS_SEQ(alpha_node->tag) && alpha_node->data.seq->total == sv_count failed
index is missing in the decision function
Assertion: sv_count == 1 || CV_NODE_IS_SEQ(index_node->tag) && index_node->data.seq->total == sv_count failed
5CvSVM
11CvSVMSolver
11CvSVMKernel
mltestset.cpp
Invalid type parameter
samples parameter must be not NULL
responses parameter must be not NULL
num_samples parameter must be positive
num_features parameter must be positive
num_classes parameter must be positive
mltree.cpp
my_tree
best_tree_idx
nodes
opencv-ml-tree
value
norm_class_idx
complexity
node_risk
tree_risk
tree_error
splits
quality
not_in
is_classifier
ord_var_count
cat_var_count
use_surrogates
max_categories
regression_accuracy
max_depth
min_sample_count
cross_validation_folds
use_1se_rule
truncate_pruned_tree
priors
var_type
cat_count
cat_map
No training data has been set
nodes tag is missing
incorrect node depth
params.max_categories should be >= 2
params.max_depth should be >= 0
params.cv_folds should be =0 (the tree is not pruned) or n>0 (tree is pruned using n-fold cross-validation)
params.regression_accuracy should be >= 0
The tree has not been trained yet
The new training data must have the same types and the input and output variables and the same categories for categorical variables
The array of _responses must be an integer or floating-point vector containing as many elements as the total number of samples in the training data matrix
The many folds in cross-validation for such a small dataset
%d-th value of %d-th (categorical) variable is not an integer
%d-th value of %d-th (categorical) variable is too large
%d-th value of %d-th (ordered) variable (=%g) is too large
%d-th value of %d-th (ordered) variable (=%g) is out of range
Every class weight should be positive
some of the tree elements are not stored properly
splits tag must stored as a sequence
some of the splits are not stored properly
Split variable index is out of range
Either 'in' or 'not_in' tags should be inside a categorical split data
some of in/not_in elements are out of range
priors must stored as a matrix
var_idx (if exist) must be valid 1d integer vector containing <var_count> elements
some of var_idx elements are out of range
var_type must exist and be a sequence of 0's and 1's
Both cat_count and cat_map must exist and be valid 1d integer vectors of an appropriate size
some of cat_count elements are out of range
cat_map vector length is not equal to the total number of categories in all categorical vars
7CvDTree
16CvDTreeTrainData
my_stat_model
ml_inner_functions.cpp
Invalid matrix argument
CvStatModel::read
CvStatModel::write
Invalid response array
Unsupported response type
var index array is too large
Invalid index array
response #%d is not integral
There is only a single class
Assertion: prob_vector failed
NULL labels
NULL centers
NULL probs
train data must be floating-point matrix
missing value mask must be 8-bit matrix of the same size as training data
Unknown training data layout (must be CV_ROW_SAMPLE or CV_COL_SAMPLE)
Response array must be 1-dimensional
Response array must contain as many elements as the total number of samples
sample index array should be continuous 1-dimensional integer vector
sample index array is too large
Invalid or absent var_type array
var_type array must be 1-dimensional
type mask must be 8uC1 or 8sC1 array
type mask must be of <input var count> + 1 size
var index array should be continuous 1-dimensional integer vector
Invalid or NULL training data matrix
the index array must be 1-dimensional
Component mask should contain as many elements as the total number of input variables
No components/input_variables is selected!
index array may not contain more elements than the total number of input variables
Unsupported index array data type (it should be 8uC1, 8sC1 or 32sC1)
the index array elements are out of range
There are duplicated index array elements
The function supports only single-channel arrays
Unsupported combination of input and output vectors
Some of input arguments is not the CvMat
Assertion: free_response == out_n failed
INTERNAL ERROR: some of the args are NULL pointers
classes array must be a single row of integers
out_response_map pointer is NULL
output pointer to train samples is NULL
output response pointer is NULL
Could not open the file storage. Check the path and permissions
Assertion: num_of_clusters >= 0 failed
Assertion: ICV_IS_MAT_OF_TYPE(probs, CV_64FC1) failed
Assertion: ICV_IS_MAT_OF_TYPE(labels, CV_32SC1) failed
Assertion: nsamples == labels->cols failed
Assertion: (int)cvSum(counts).val[0] == nsamples failed
Assertion: maxprob_loc >= 0 failed
Array of output labels is not a valid matrix
Array of cluster centers is not a valid matrix
Probability matrix is not valid
Assertion: sample_idx->rows == 1 && CV_MAT_TYPE(sample_idx->type) == CV_32SC1 failed
Assertion: comp_idx->rows == 1 && CV_MAT_TYPE(comp_idx->type) == CV_32SC1 failed
Assertion: labels->rows == 1 failed
Array of output labels should be 1d vector
Size of vector of output labels is not equal to the total number of input samples
Assertion: labels->cols == samples_selected failed
Invalid number of rows in matrix of output centers
Number of columns in matrix of output centers is not equal to the total number of components in the input samples
Assertion: centers->cols == dims_selected failed
Invalid number of columns in output probability matrix
Number of rows in output probability matrix is not equal to the total number of input samples
Assertion: probs->rows == samples_selected failed
The sample is not a valid vector
Input sample must have 32fC1 type
Input sample must be 1-dimensional vector
The sample size is different from what has been used for training
INTERNAL ERROR: The row_sample pointer is NULL
INTERNAL ERROR: invalid comp_idx
The output matrix of probabilities is invalid
The matrix of probabilities must be 1-dimensional vector of 32fC1 type
The vector of probabilities must contain as many elements as the number of classes in the training set
Assertion: (radius_small >= 0) && (radius_large > 0) && (radius_small <= radius_large) failed
Assertion: center && desired_matrix && rng_state_ptr failed
Assertion: center->rows == 1 failed
Assertion: center->cols == desired_matrix->cols failed
=11CvStatModel
zPLR
CvANN_MLP::read
CvANN_MLP::train
CvANN_MLP::train_backprop
CvANN_MLP::train
CvANN_MLP::prepare_to_train
CvANN_MLP::calc_output_scale
CvANN_MLP::predict
CvANN_MLP::create
CvANN_MLP::set_activ_func
CvBoost::write
CvRTrees::read
CvBoost::read_params
CvBoost::predict
CvBoost::update_weights
CvBoost::train
CvBoost::set_params
CvEM::run_em
CvEM::kmeans
CvEM::init_auto
CvEM::init_em
cvEM
CvEM::predict
CvEM::set_params
CvKNearest::find_nearest
CvKNearest::train
CvNormalBayesClassifier::read
CvNormalBayesClassifier::write
CvNormalBayesClassifier::predict
CvNormalBayesClassifier::train
CvRTrees::read
CvRTrees::write
CvRTrees::predict
CvRTrees::grow_forest
CvRTrees::train
CvForestTree::find_best_split
CvForestTree::train
CvSVM::read
CvSVM::read_params
CvSVM::write
CvSVM::predict
CvSVM::train
CvSVM::set_params
CvSVMSolver::create
cvCreateTestSet
CvDTree::read
CvDTree::read_tree_nodes
CvDTree::read_node
CvDTree::read_split
CvDTree::predict
CvDTree::prune_cv
CvDTree::do_train
CvDTree::train
CvDTree::train
CvDTreeTrainData::read_params
CvDTreeTrainData::get_vectors
CvDTreeTrainData::subsample_data
CvDTreeTrainData::set_data
CvDTreeTrainData::set_params
icvFindClusterLabels
icvGetNumberOfCluster
cvCombineResponseMaps
cvWritebackLabels
icvConvertDataToSparse
cvPreparePredictData
cvSortSamplesByClasses
cvPrepareTrainData
cvCheckTrainData
cvGetTrainSamples
cvPreprocessCategoricalResponses
cvPreprocessOrderedResponses
cvPreprocessVarType
cvPreprocessIndexArray
cvCompleteSymm
cvRandRoundUni
icvGenerateRandomClusterCenters
CvStatModel::load
CvStatModel::save
libml.so.1.0.0.debug
.shstrtab
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
