__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
ast_module_unregister
_ao2_ref
ao2_iterator_init
strcasecmp
_ao2_iterator_next
ao2_lock
ao2_unlock
option_debug
ast_options
ast_debug_get_by_file
ast_log
strchr
_ao2_alloc
__ast_string_field_init
strlen
__ast_string_field_ptr_grow
__ast_string_field_alloc_space
memcpy
__ast_string_field_empty
calloc
ast_str_set
_ao2_container_alloc
strtol
rule_lists
__stack_chk_fail
ast_app_separate_args
ast_queue_log
ast_true
ast_device_state
__snprintf_chk
pbx_builtin_setvar_multiple
_ao2_find
__manager_event
astman_append
ast_cli
ast_event_get_ie_uint
ast_event_get_ie_str
strcpy
ast_taskprocessor_push
astman_get_header
astman_send_ack
astman_send_error
pbx_builtin_setvar_helper
ast_canmatch_extension
ast_goto_if_exists
ast_stopstream
ast_streamfile
ast_waitstream
ast_moh_stop
option_verbose
ast_say_number
ast_moh_start
ast_indicate
ast_verbose_get_by_file
__ast_verbose
ast_random
ast_channel_datastore_find
ast_channel_datastore_remove
ast_hangup
pbx_builtin_serialize_variables
__ctype_tolower_loc
ast_module_register
ast_unregister_file_version
ast_register_file_version
ast_db_del
ast_db_put
pthread_mutex_lock
pthread_mutex_unlock
ast_config_load2
ast_category_browse
ast_variable_browse
ast_config_destroy
strncasecmp
__strdup
strcmp
_ao2_link
ast_load_realtime_multientry
ast_variable_retrieve
_ao2_unlink
ast_cli_unregister_multiple
ast_manager_unregister
ast_unregister_application
ast_custom_function_unregister
ast_event_unsubscribe
ast_context_find
ast_context_remove_extension2
ast_context_destroy
ast_taskprocessor_unreference
ast_unload_realtime
devstate2str
ast_cdr_busy
ast_request
ast_channel_inherit_variables
pbx_builtin_getvar_helper
ast_call
strncat
ast_load_realtime
ast_variables_destroy
strrchr
ast_update_realtime
sscanf
malloc
__sprintf_chk
ast_db_gettree
ast_db_get
__errno_location
ast_db_freetree
ast_context_find_or_create
ast_add_extension2
ast_cli_register_multiple
ast_register_application2
ast_manager_register2
__ast_custom_function_register
ast_taskprocessor_get
ast_event_subscribe
ast_realtime_require_field
ast_check_realtime
ast_str_append
ao2_container_count
dialed_interface_info
ast_cdr_setdestchan
ast_channel_make_compatible
ast_monitor_start
ast_monitor_setjoinfiles
ast_channel_supports_html
ast_channel_sendurl
ast_autoservice_start
pbx_findapp
pbx_exec
ast_autoservice_stop
__asprintf_chk
ast_pbx_run_args
ast_datastore_alloc
ast_channel_datastore_add
ast_bridge_call
ast_datastore_free
pthread_mutexattr_init
pthread_mutexattr_settype
pthread_mutex_init
pthread_mutexattr_destroy
ast_check_hangup
ast_waitfor_n
ast_read
ast_frame_free
ast_channel_datastore_inherit
ast_channel_setoption
ast_safe_sleep
pbx_substitute_variables_helper
strerror
queue_results
ast_waitfordigit
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
GLIBC_2.2.5
GLIBC_2.3.4
GLIBC_2.3
GLIBC_2.4
GLIBC_2.8
ATSubH
ffff.
\$hH
l$pL
d$xL
D$0H
D$8H
D$@H
D$HH
D$ H
[]A\
AWE1
AVAUATI
D$0H
D$8H
D$@H
D$HH
D$ H
t	A;
t	A;
[]A\A]A^A_
l$8H
\$0L
d$@L
l$HL
t$PH
t"H9
ffff.
l$ H
fffff.
queue-yoH
uarenextH
queue-thL
ereaf
queue-caI
llswaitiL
queue-quH
antity1
queue-quI
antity2
queue-hoH
ldtif
queue-miH
nutef
queue-miL
nute
queue-seL
condf
queue-thH
ankyf
queue-reH
portholdH
[]A\
queue-reI
porthold
queue-th
ankyf
queue-se
condf
queue-mi
nute
queue-mi
nutef
queue-ho
ldtif
queue-quH
antity2
queue-quI
antity1
queue-caH
llswaitif
queue-th
ereaf
queue-yoI
uarenext
x<(ttH
AVAUI
tnE1
|$PH
D$XH
\$XM
d$`M
[A\A]A^A_
\$PI
l$'I
ti<,t%<|t!I
[]A\A]A^A_
|$HH
t$ H
\$@D
\$0D
AWAVA
AUATI
D$0H
D$8H
D$@H
D$HH
D$ H
[]A\A]A^A_
ffff.
d$ H
d$ H
l$ L
t$(L
|$0H
D$X1
l$@L
D$XdH3
\$`H
l$hL
d$pL
l$xL
MwTHc
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
ATE1
[]A\
L$(M
5Dz!
\$8H
l$@L
d$HL
l$PH
t$XL
|$`H
\$8H
d$HL
t$XL
|$`1
ffffff.
[]A\
Variablef
ffff.
=	~!
ffff.
AVAUATUSH
|$8L
L$8H
|$@1
t$pL
D$@H
D$pH
D$HH
D$xH
D$PH
D$XH
D$`H
L$ H
T$0Hc
L$8H
=Vt!
[]A\A]A^A_
D$8H
T$XH
D$0I
|$8L
T$@H
D$ H
t$(H
\$hH
l$pL
d$xL
fff.
AVAUATUH
\$PH
d$`M
[]A\A]A^
-dx!
=Dx!
AVAUATUSH
H9}X
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
ffff.
l$0H
\$(L
d$8L
l$@L
t$HL
|$PH
t2Mc
AVAUA
ATUH
5wy!
|$01
D$`H
D$8H
D$hH
D$@H
D$pH
D$HH
D$xH
D$PH
D$`H
d$,1
[]A\A]A^A_
fffff.
t$ H
AWAVAUATUSH
|$0H
|$0H
T$@H
l$pH
T$8H
|$81
D$@H
D$HH
D$PH
D$XH
D$`H
|$81
D$pH
D$HH
D$xH
D$PH
D$XH
D$`H
D$,H
|$0H
[]A\A]A^A_
AVAUATUH
T$PH
T$HH
|$H1
D$PH
T$0H
D$XH
D$`H
D$hH
D$pH
t$8H
\$ D
|$H1
D$PH
D$XH
D$`H
D$hH
D$pH
[]A\A]A^A_
AWAVAUATI
5&m!
l$@E1
D$pH
D$xH
D$ H
D$(H
D$0H
D$@H
D$HH
D$ H
D$PH
D$(H
D$XH
D$0H
[]A\A]A^A_
t$ H
fffff.
AVAUATUH
t$ H
L$(L
|$01
D$0H
D$`H
D$8H
D$hH
D$@H
D$pH
D$HH
D$xH
D$PH
D$`H
t$(H
|$ D
[]A\A]A^A_
3uLM
AVAUATI
D$0I
D$0H
T$`H
D$`H
D$8H
D$hH
D$@H
D$pH
D$HH
D$xH
D$PH
D$ H
T$ M
|$(1
D$0H
D$`H
D$8H
D$hH
D$@H
D$pH
D$HH
D$xH
D$PH
=Id!
[]A\A]A^A_
0[]A\
AVAUATUSH
=qQ!
=iQ!
=aQ!
=YQ!
=QQ!
=IQ!
=1`!
=a`!
=!a!
H;=~X!
=dX!
=hX!
|$P1
D$PD
D$XH
D$`H
D$hH
D$pH
=y`!
=M`!
=$`!
[]A\A]A^A_
ATSH
5i_!
|$WI
L$(L
T$ D
l$8L
[A\A]A^A_
AVAUATI
=bS!
[A\A]A^
AVAUATI
[]A\A]A^A_
D$hH
,$H+
L$XL
D$HH
T$PH
D$@H
|$0H
t$(L
D$8H
D$ H
D$hH
D$hH
|$p1
D$pH
T$hH
D$xH
T$`H
L$ I
L$`H
L$`t
D$hH
AUATI
[]A\A]A^A_
=JI!
\$(D
AWAVAUATUH
t$PL
T$ E1
H;D$
[]A\A]A^A_
=]D!
AVAUI
ATUSH
[]A\A]A^
=!A!
 []A\A]A^
fff.
\$ H
T$(H
[]A\
l$ H
AUATSH
[A\A]
AVAUATE1
|$ 1
D$ H
D$PH
D$(H
D$XH
D$0H
D$`H
D$8H
D$hH
D$@H
D;d$
[]A\A]A^A_
l$ H
d$(L
l$0H
d$(L
l$0H
AWAVI
|$P1
D$XH
D$`H
D$hH
D$pH
t$@H
T$@L
T$8t
T$@H
t$ D
[]A\A]A^
T$@E
d$ L
l$(L
t$0H
d$ L
l$(L
t$0H
l$ L
t$(L
|$0H
fff.
ATSH
ATSH
\$0H
l$8L
d$@L
l$HL
t$PH
l$(L
d$ L
\$0H
l$8L
d$@L
l$H1
t$PH
AWAVAUATUSH
T$pH
T$`H
D$pH
D$xH
D$hH
T$PH
D$HH
T$ H
[]A\A]A^A_
|$P1
D$\E
|$`1
D$pH
D$xH
D$@H
D$ @
T$<H
|$0H
|$`1
D$pH
D$xH
|$01
|$`1
D$pL
d$hL
l$`H
D$xH
D$pH
D$xH
T$<I
ffff.
ffffff.
AVAUATUH
[]A\A]A^A_
T$0H
T$(H
|$(1
D$0H
D$`H
D$8H
D$hH
D$@H
D$pH
D$HH
D$xH
D$PH
D$`H
|$(1
D$0H
D$`H
D$8H
D$hH
D$@H
D$pH
D$HH
D$xH
D$PH
|$ 1
AVAUI
D$0H
D$8H
D$@H
D$HH
D$ H
[]A\A]A^
[]A\A]A^
AVAUATI
[]A\A]A^
D$0H
D$8H
D$@H
D$HH
D$ H
[]A\A]A^
D$0H
D$8H
D$@H
D$HH
D$ H
ffffff.
\$hH
l$pL
d$xL
D$8H
D$ H
\$(H
l$0L
d$8L
l$@H
	~PH
4$E1
\$8H
l$@L
d$HL
l$PL
t$XL
|$`H
L$,H
T$,H
\$,E
AUATSH
[A\A]
AWAVAUATUSH
D$@H
D$HH
D$XH
D$pH
D$0H
D$01
D$0H
D$XH
T$`H
|$0E1
D$@H
[]A\A]A^A_
L$0L
L$0L
L$0L
L$0L
t$0H
l$pH
\$hL
d$xL
D$\H
tRD	
$vzH
D$0H
|$`E1
D$0L
D$8H
D$@H
D$HH
D$PH
D$(H
|$ 1
D$0H
D$`H
D$8H
D$hH
D$@H
D$pH
D$HH
D$xH
D$PH
AVAUATSH
D$'H
[A\A]A^A_
ATE1
|$WI
D$WI
l$WI
l$WI
l$WI
l$@L
|$8H
T$0I+
t$ L
D$(H
[A\A]A^A_
t$Hc
xu2H
l$WI
l$WI
D$(L
l$ L
D$(A
D$ A
D$WI
D$WI
AVAUATSH
\$GH
T$8H
[A\A]A^A_
u5D;
D$ H
t$(L
D$ H
D93H
D92t
D92u
D$ H
app_queue.c
It's our turn (%s).
It's not our turn (%s).
queue-periodic-announce
musicclass
music
musiconhold
context
timeout
ringinuse
setinterfacevar
setqueuevar
setqueueentryvar
monitor-format
membermacro
membergosub
queue-youarenext
queue-thereare
queue-callswaiting
queue-quantity1
queue-quantity2
queue-holdtime
queue-minutes
queue-minute
queue-seconds
queue-thankyou
queue-callerannounce
queue-reporthold
min-announce-frequency
%s=%s for queue '%s'
announce-round-seconds
announce-holdtime
once
announce-position
more
announce-position-limit
periodic-announce-frequency
random-periodic-announce
retry
wrapuptime
autofill
monitor-type
mixmonitor
autopause
maxlen
servicelevel
strategy
joinempty
loose
strict
leavewhenempty
eventmemberstatus
eventwhencalled
vars
reportholdtime
memberdelay
weight
timeoutrestart
defaultrule
timeoutpriority
<unknown>
QueueCallerAbandon
UniqueId
Event
Message
NONE
Event added successfully
QUEUE_MAX_PENALTY
QUEUE_MIN_PENALTY
0123456789#*ABCD
%s|%s|%ld|%ld|%d
TRANSFER
Variable: 
$Revision: 171620 $
%s%s;%d;%d;%s;%s
caller
agent
AgentComplete
RuleList: %s
Rule: %d,%s%d,%s%d
app_queue
queuerules.conf
penaltychange
queue rules reload
queue rules show
Rule: %s
Invalid penalty (%d)
QueueMemberPenalty
Invalid queuename
Invalid interface
ActionID
Queue summary will follow
ActionID: %s
Queue status will follow
static
unknown
ADDMEMBER
REALTIME
queue_name
interface LIKE
queue_members
state_interface
paused
membername
uniqueid
REMOVEMEMBER
QueueStatus
Queues
QueueRule
QueueSummary
QueueAdd
QueueRemove
QueuePause
QueueLog
QueuePenalty
Local
realtime
QueueMemberStatus
AppQueue
(Outgoing Line)
MACRO_CONTEXT
MACRO_EXTEN
ast call on peer returned %d
    -- Couldn't call %s
AgentCalled
    -- Called %s
Trying '%s' with metric %d
queue %s was not found
Truncating list
queues
Leave
QueueMemberRemoved
MANAGER
Removed interface from queue
Out of memory
Member not dynamic
REMOVED
RQMSTATUS
NOTINQUEUE
NOSUCHQUEUE
NOTDYNAMIC
queue set penalty
UNPAUSEALL
UNPAUSE
QueueMemberPaused
queue {pause|unpause} member
reason
%spaused interface '%s'
 in queue '%s'
 for reason '%s'
Reason
Interface not found
Interface paused successfully
NOTFOUND
UPQMSTATUS
UNPAUSED
AgentRingNoAnswer
RINGNOANSWER
Auto-Pause
queues.conf
general
keepstats
persistentmembers
updatecdr
shared_lastcall
logged
free
QueueMemberAdded
queue add member
Penalty must be >= 0
Out of memory
Member not dynamic
MemberName
StateInterface
'Queue' not specified.
'Interface' not specified.
Added interface to queue
ADDED
AQMSTATUS
MEMBERALREADY
NoOp
Queue Status
Queue Summary
Add interface to queue.
Remove interface from queue.
Queue Rules
queue remove member
from
name LIKE
%-12.12s has %d calls (max 
unlimited
   No Members
   Members: 
      %s
 with penalty %d
 (paused)
 (realtime)
 (dynamic)
%s%s%s (%s)
 has taken no calls yet
   No Callers
   Callers: 
No such queue: %s.
No queues.
queue show
Local/
    -- %s answered %s
%s@%s
    -- %s is busy
    -- %s is circuit-busy
    -- %s is ringing
Next is '%s' with metric %d
%s: Nobody answered.
DAHDI
AGENTDUMP
AgentDump
%d|%d|%ld
ABANDON
SYSCOMPAT
MONITOR_FILENAME
MONITOR_EXEC
MONITOR_EXEC_ARGS
chan-%lx
MixMonitor
MONITOR_OPTIONS
%s.%s
%s,b%s
app_queue: sendurl=%s.
app_queue: macro=%s.
Macro
Macro exited with status %d
app_queue: gosub=%s.
Gosub
%s,s,1(%s)
asprintf() failed: %s
%s,s,1
Gosub exited with status %d
app_queue: agi=%s.
%ld|%s|%ld
CONNECT
AgentConnect
Memory allocation error!
COMPLETECALLER
COMPLETEAGENT
%s,b%s,%s
QUEUE_PRIO
Join
Unable to join queue '%s'
QUEUESTATUS
%s|%s
ENTERQUEUE
EXITEMPTY
EXITWITHTIMEOUT
%s|%d
EXITWITHKEY
UNKNOWN
JOINEMPTY
LEAVEEMPTY
JOINUNAVAIL
LEAVEUNAVAIL
FULL
CONTINUE
True Call Queueing
AddQueueMember
RemoveQueueMember
PauseQueueMember
UnpauseQueueMember
QUEUE_VARIABLES
QUEUE_VARIABLES(<queuename>)
QUEUE_MEMBER
QUEUE_MEMBER_COUNT
QUEUE_MEMBER_LIST
QUEUE_WAITING_COUNT
QUEUE_MEMBER_PENALTY
ringall
leastrecent
fewestcalls
rrmemory
roundrobin
linear
wrandom
Queue/PersistentMembers
Queue a call for a call queue
Pauses a queue member
Unpauses a queue member
Writes to the queue_log
queue_transfer
Even though there may be multiple members available, the strategy is ringall so only the head call is allowed in
There are %d available members.
Memory Allocation Failure in function %s at line %d of %s
/builddir/build/BUILD/asterisk-1.6.1-rc1/include/asterisk/utils.h
/builddir/build/BUILD/asterisk-1.6.1-rc1/include/asterisk/strings.h
Cannot allocate memory for penaltychange rule at line %d!
Improperly formatted penaltychange rule at line %d. Ignoring.
Improper time parameter specified for penaltychange rule at line %d. Ignoring.
QueueLog requires arguments (queuename,uniqueid,membername,event[,additionalinfo]
QueueLog requires arguments (queuename,uniqueid,membername,event[,additionalinfo])
'%s' isn't a valid value for %s using 0 instead for queue '%s' at line %d of queues.conf
'%s' isn't a valid value for %s using 0 instead for queue '%s'
'%s' isn't a valid strategy for queue '%s', using ringall instead
Changing to the linear strategy currently requires asterisk to be restarted.
Unknown keyword in queue '%s': %s at line %d of queues.conf
Unknown keyword in queue '%s': %s
No location at interface '%s'
QUEUENAME=%s,QUEUEMAX=%d,QUEUESTRATEGY=%s,QUEUECALLS=%d,QUEUEHOLDTIME=%d,QUEUECOMPLETED=%d,QUEUEABANDONED=%d,QUEUESRVLEVEL=%d,QUEUESRVLEVELPERF=%2.1f
Queue: %s
Uniqueid: %s
Position: %d
OriginalPosition: %d
HoldTime: %d
Received invalid event that had no device IE
failed to calloc a state change struct
Need 'Queue' and 'Event' parameters.
Setting max penalty to %d and min penalty to %d for caller %s since %d seconds have elapsed
    -- Hold time for %s is %d minute(s) %d seconds
    -- Told %s in %s their queue position (which was %d)
    -- Playing periodic announcement
Can't find the queue_transfer datastore.
Could not create persistent member string, out of space
failed to create persistent dynamic entry!
Queue: %s
Uniqueid: %s
Channel: %s
Member: %s
MemberName: %s
HoldTime: %ld
TalkTime: %ld
Reason: %s
Adding %s to the list of interfaces that make up all of our queue members.
No queuerules.conf file found, queues will not follow penalty rules
queuerules.conf has not changed since it was last loaded. Not taking any action.
Memory allocation error while loading queuerules.conf! Aborting!
Don't know how to handle rule type '%s' on line %d
Usage: queue rules reload
	Reloads rules defined in queuerules.conf
Usage: queue rules show [rulename]
	Show the list of rules associated with rulename. If no
	rulename is specified, list all rules defined in queuerules.conf
	After %d seconds, adjust QUEUE_MAX_PENALTY %s %d and adjust QUEUE_MIN_PENALTY %s %d
Queue: %s
Location: %s
Penalty: %d
Missing argument. QUEUE_MEMBER_PENALTY(<queuename>,<interface>)
<interface> parameter can't be null
Invalid interface, queue or penalty
Need 'Interface' and 'Penalty' parameters.
Invalid interface, queuename or penalty
Interface penalty set successfully
Event: QueueSummary
Queue: %s
LoggedIn: %d
Available: %d
Callers: %d
HoldTime: %d
LongestHoldTime: %d
Event: QueueSummaryComplete
Event: QueueParams
Queue: %s
Max: %d
Strategy: %s
Calls: %d
Holdtime: %d
Completed: %d
Abandoned: %d
ServiceLevel: %d
ServicelevelPerf: %2.1f
Weight: %d
Event: QueueMember
Queue: %s
Name: %s
Location: %s
Membership: %s
Penalty: %d
CallsTaken: %d
LastCall: %d
Status: %d
Paused: %d
Event: QueueEntry
Queue: %s
Position: %d
Channel: %s
CallerIDNum: %s
CallerIDName: %s
Wait: %ld
Event: QueueStatusComplete
Removing %s from the list of interfaces that make up all of our queue members.
Queue %s has no realtime members defined. No need for update
app_queue_gosub_virtual_context
Queue: %s
Location: %s
MemberName: %s
Membership: %s
Penalty: %d
CallsTaken: %d
LastCall: %d
Status: %d
Paused: %d
Device '%s' changed to state '%d' (%s) but we don't care because they're not a member of any queue.
Device '%s' changed to state '%d' (%s)
Wrapuptime not yet expired on queue %s for %s
%s in use, can't receive call
%s paused, can't receive call
Found matching member %s in queue '%s'
Queue '%s' (weight %d, calls %d) is preferred over '%s' (weight %d, calls %d)
Priority queue delaying call to %s:%s
Queue: %s
AgentCalled: %s
AgentName: %s
ChannelCalling: %s
DestinationChannel: %s
CallerIDNum: %s
CallerIDName: %s
Context: %s
Extension: %s
Priority: %d
Uniqueid: %s
Nobody left to try ringing in queue
(Parallel) Trying '%s' with metric %d
Queue timed out while ringing members.
%s requires an argument: queuename
QUEUEMAX=%d,QUEUESTRATEGY=%s,QUEUECALLS=%d,QUEUEHOLDTIME=%d,QUEUECOMPLETED=%d,QUEUEABANDONED=%d,QUEUESRVLEVEL=%d,QUEUESRVLEVELPERF=%2.1f
QUEUE_MEMBER_LIST requires an argument: queuename
QUEUE_WAITING_COUNT requires an argument: queuename
Channel: %s
Queue: %s
Count: %d
Uniqueid: %s
Queue '%s' Leave, Channel '%s'
Queue: %s
Location: %s
MemberName: %s
Need 'Queue' and 'Interface' parameters.
Unable to remove interface: Not there
Unable to remove interface from queue: No such queue
RemoveQueueMember requires an argument (queuename[,interface[,options]])
Removed interface '%s' from queue '%s'
Unable to remove interface '%s' from queue '%s': Not there
Unable to remove interface from queue '%s': No such queue
Unable to remove interface from queue '%s': '%s' is not a dynamic member
Usage: queue set penalty <penalty> on <interface> [in <queue>]
	Set a member's penalty in the queue specified. If no queue is specified
	then that interface's penalty is set in all queues to which that interface is a member
Set penalty on interface '%s' from queue '%s'
Failed to set penalty on interface '%s' from queue '%s'
%spausing already-%spaused queue member %s:%s
Failed %spausing realtime queue member %s:%s
Queue: %s
Location: %s
MemberName: %s
Paused: %d
Queue: %s
Location: %s
MemberName: %s
Paused: %d
Reason: %s
Usage: queue {pause|unpause} member <member> [queue <queue> [reason <reason>]]
	Pause or unpause a queue member. Not specifying a particular queue
	will pause or unpause a member across all queues to which the member
	belongs.
Unable to %spause interface '%s'
Need 'Interface' and 'Paused' parameters.
Interface unpaused successfully
UnpauseQueueMember requires an argument ([queuename],interface[,options[,reason]])
Missing interface argument to PauseQueueMember ([queuename],interface[,options[,reason]])
Attempt to unpause interface %s, not found
PauseQueueMember requires an argument ([queuename],interface[,options][,reason])
Attempt to pause interface %s, not found
    -- Nobody picked up in %d ms
Queue: %s
Uniqueid: %s
Channel: %s
Member: %s
MemberName: %s
Ringtime: %d
    -- Auto-Pausing Queue Member %s in queue %s since they failed to answer.
    -- Failed to pause Queue Member %s in queue %s!
No call queueing config file (queues.conf), so no call queues
Queue '%s' already defined! Skipping!
no queue_members defined in your config (extconfig.conf).
Static queue '%s' already exists. Not loading from realtime
Queue %s not found in realtime.
The function QUEUE_MEMBER_COUNT has been deprecated in favor of the QUEUE_MEMBER function and will not be in further releases.
Usage: queue add member <channel> to <queue> [[[penalty <penalty>] as <membername>] state_interface <interface>]
       Add a channel to a queue with optionally:  a penalty, membername and a state_interface
Penalty must be an integer >= 0
Added interface '%s' to queue '%s'
Unable to add interface '%s' to queue '%s': Already there
Unable to add interface to queue '%s': No such queue
Unable to add interface: Already there
Unable to add interface to queue: No such queue
AddQueueMember requires an argument (queuename[,interface[,penalty[,options[,membername[,stateinterface]]]]])
Penalty '%s' is invalid, must be an integer >= 0
Out of memory adding member %s to queue %s
Error loading persistent queue: '%s': it does not exist
Error parsing persistent member string for '%s' (penalty)
Error converting penalty: %s: Out of range.
Error parsing persistent member string for '%s' (paused)
Error converting paused: %s: Expected 0 or 1.
Reload Members: Queue: %s  Member: %s  Name: %s  Penalty: %d  Paused: %d
Out of Memory when reloading persistent queue member
Queue members successfully reloaded from database.
Queue virtual context 'app_queue_gosub_virtual_context' does not exist and unable to create
Makes a queue member temporarily unavailable
Adds custom entry in queue_log
Set the penalty for a queue member
devicestate taskprocessor reference failed - devicestate notifications will not occur
Usage: queue remove member <channel> from <queue>
       Remove a specific channel from a queue.
) in '%s' strategy (%ds holdtime), W:%d, C:%d, A:%d, SL:%2.1f%% within %ds
 has taken %d calls (last was %ld secs ago)
      %d. %s (wait: %ld:%2.2ld, prio: %d)
Usage: queue show
       Provides summary information on a specified queue.
%s is trying to call a queue member.
Skipping dialing interface '%s' since it has already been dialed
Can't calculate metric for unknown strategy %d
Everyone is busy at this time
No one is answering queue '%s' (%d/%d/%d)
    -- Forwarding %s to '%s' prevented.
    -- Now forwarding %s to '%s/%s' (thanks to %s)
Unable to create local channel for call forward to '%s/%s'
Failed to dial on local channel for call forward to '%s'
Dunno what to do with control type %d
    -- User hit %c to disconnect call.
    -- User pressed digit: %c
Delaying member connect for %d seconds
Agent on %s hungup on the customer.
Queue: %s
Uniqueid: %s
Channel: %s
Member: %s
MemberName: %s
Caller was about to talk to agent on %s but the caller hungup.
Had to drop call because I couldn't make %s compatible with %s
Announcement file '%s' is unavailable, continuing anyway...
MEMBERINTERFACE=%s,MEMBERNAME=%s,MEMBERCALLS=%d,MEMBERLASTCALL=%ld,MEMBERPENALTY=%d,MEMBERDYNAMIC=%d,MEMBERREALTIME=%d
QEHOLDTIME=%ld,QEORIGINALPOS=%d
Starting Monitor as requested.
Starting MixMonitor as requested.
Arguments being passed to MixMonitor: %s
Asked to run MixMonitor on this call, but cannot find the MixMonitor app!
Unable to start autoservice on calling channel
Could not find application Macro
Could not stop autoservice on calling channel
Could not Allocate string for Gosub arguments -- Gosub Call Aborted!
Could not find application Gosub
Asked to execute an AGI on this channel, but could not find application (agi)!
Queue: %s
Uniqueid: %s
Channel: %s
Member: %s
MemberName: %s
Holdtime: %ld
BridgedChannel: %s
Ringtime: %ld
Unable to create transfer datastore. queue_log will not show attended transfer
Queue requires an argument: queuename[|options[|URL[|announceoverride[|timeout[|agi]]]]]
%s: Got priority %d from ${QUEUE_PRIO}.
${QUEUE_PRIO}: Invalid value (%s), channel %s.
NO QUEUE_PRIO variable found. Using default.
%s: Got max penalty %d from ${QUEUE_MAX_PENALTY}.
${QUEUE_MAX_PENALTY}: Invalid value (%s), channel %s.
%s: Got min penalty %d from ${QUEUE_MIN_PENALTY}.
${QUEUE_MIN_PENALTY}: Invalid value (%s), channel %s.
queue: %s, options: %s, url: %s, announce: %s, expires: %ld, priority: %d
Memory allocation error when copying penalty rules! Aborting!
Channel: %s
CallerIDNum: %s
CallerIDName: %s
Queue: %s
Position: %d
Count: %d
Uniqueid: %s
Queue '%s' Join, Channel '%s', Position '%d'
    -- Exiting on time-out cycle
Darn priorities, going back in queue (%s)!
This paragraph is copyright (c) 2006 by Digium, Inc. In order for your module to load, it must return this key via a function called "key".  Any code which includes this paragraph must be licensed under the GNU General Public License version 2 or later (at your option).  In addition to Digium's general reservations of rights, Digium expressly reserves the right to allow other parties to license this paragraph under different terms. Any use of Digium, Inc. trademarks or logos (including "Asterisk" or "Digium") without express written permission of Digium, Inc. is prohibited.
Show status of a specified queue
Add a channel to a specified queue
Removes a channel from a specified queue
Pause or unpause a queue member
Set penalty for a channel of a specified queue
Show the rules defined in queuerules.conf
Reload the rules defined in queuerules.conf
Return Queue information in variables
Makes the following queue variables available.
QUEUEMAX maxmimum number of calls allowed
QUEUESTRATEGY the strategy of the queue
QUEUECALLS number of calls currently in the queue
QUEUEHOLDTIME current average hold time
QUEUECOMPLETED number of completed calls for the queue
QUEUEABANDONED number of abandoned calls
QUEUESRVLEVEL queue service level
QUEUESRVLEVELPERF current service level performance
Returns 0 if queue is found and setqueuevar is defined, -1 otherwise
Count number of members answering a queue
Returns the number of members currently associated with the specified queue.
One of three options may be passed to determine the count returned:
"logged" - Returns the number of logged-in members for the specified queue
"free" - Returns the number of logged-in members for the specified queue available to take a call
"count" - Returns the total number of members for the specified queue
QUEUE_MEMBER(<queuename>, <option>)
Returns the number of members currently associated with the specified queue.
This function has been deprecated in favor of the QUEUE_MEMBER function
QUEUE_MEMBER_COUNT(<queuename>)
Returns a list of interfaces on a queue
Returns a comma-separated list of members associated with the specified queue.
QUEUE_MEMBER_LIST(<queuename>)
Count number of calls currently waiting in a queue
Returns the number of callers currently waiting in the specified queue.
QUEUE_WAITING_COUNT(<queuename>)
Gets or sets queue members penalty.
Gets or sets queue members penalty
QUEUE_MEMBER_PENALTY(<queuename>,<interface>)
  Queue(queuename[,options[,URL][,announceoverride][,timeout][,AGI][,macro][,gosub][,rule]):
Queues an incoming call in a particular call queue as defined in queues.conf.
This application will return to the dialplan if the queue does not exist, or
any of the join options cause the caller to not enter the queue.
The option string may contain zero or more of the following characters:
      'c' -- continue in the dialplan if the callee hangs up.
      'd' -- data-quality (modem) call (minimum delay).
      'h' -- allow callee to hang up by hitting '*', or whatver disconnect sequence
             that is defined in the featuremap section in features.conf.
      'H' -- allow caller to hang up by hitting '*', or whatever disconnect sequence
             that is defined in the featuremap section in features.conf.
      'n' -- no retries on the timeout; will exit this application and 
             go to the next step.
      'i' -- ignore call forward requests from queue members and do nothing
             when they are requested.
      'r' -- ring instead of playing MOH. Periodic Announcements are still made, if applicable.
      't' -- allow the called user transfer the calling user by pressing '#' or
             whatever blindxfer sequence defined in the featuremap section in
             features.conf
      'T' -- to allow the calling user to transfer the call by pressing '#' or
             whatever blindxfer sequence defined in the featuremap section in
             features.conf
      'w' -- allow the called user to write the conversation to disk via Monitor
             by pressing the automon sequence defined in the featuremap section in
             features.conf
      'W' -- allow the calling user to write the conversation to disk via Monitor
             by pressing the automon sequence defined in the featuremap section in
             features.conf
      'k' -- Allow the called party to enable parking of the call by sending
             the DTMF sequence defined for call parking in features.conf.
      'K' -- Allow the calling party to enable parking of the call by sending
             the DTMF sequence defined for call parking in features.conf.
      'x' -- allow the called user to write the conversation to disk via MixMonitor
             by pressing the automixmon sequence defined in the featuremap section in
             features.conf
      'X' -- allow the calling user to write the conversation to disk via MixMonitor
             by pressing the automixmon sequence defined in the featuremap section in
             features.conf
  The optional URL will be sent to the called party if the channel supports
  The optional AGI parameter will setup an AGI script to be executed on the 
calling party's channel once they are connected to a queue member.
  The optional macro parameter will run a macro on the 
calling party's channel once they are connected to a queue member.
  The optional gosub parameter will run a gosub on the 
calling party's channel once they are connected to a queue member.
  The optional rule parameter will cause the queue's defaultrule to be
overridden by the rule specified.
  The timeout will cause the queue to fail out after a specified number of
seconds, checked between each queues.conf 'timeout' and 'retry' cycle.
  This application sets the following channel variable upon completion:
      QUEUESTATUS    The status of the call as a text string, one of
             TIMEOUT | FULL | JOINEMPTY | LEAVEEMPTY | JOINUNAVAIL | LEAVEUNAVAIL | CONTINUE
   AddQueueMember(queuename[,interface[,penalty[,options[,membername[,stateinterface]]]]]):
Dynamically adds interface to an existing queue.
If the interface is already in the queue it will return an error.
  This application sets the following channel variable upon completion:
     AQMSTATUS    The status of the attempt to add a queue member as a 
                     text string, one of
           ADDED | MEMBERALREADY | NOSUCHQUEUE 
Example: AddQueueMember(techsupport,SIP/3000)
Dynamically adds queue members
   RemoveQueueMember(queuename[,interface[,options]]):
Dynamically removes interface to an existing queue
If the interface is NOT in the queue it will return an error.
  This application sets the following channel variable upon completion:
     RQMSTATUS      The status of the attempt to remove a queue member as a
                     text string, one of
           REMOVED | NOTINQUEUE | NOSUCHQUEUE 
Example: RemoveQueueMember(techsupport,SIP/3000)
Dynamically removes queue members
   PauseQueueMember([queuename],interface[,options[,reason]]):
Pauses (blocks calls for) a queue member.
The given interface will be paused in the given queue.  This prevents
any calls from being sent from the queue to the interface until it is
unpaused with UnpauseQueueMember or the manager interface.  If no
queuename is given, the interface is paused in every queue it is a
member of. The application will fail if the interface is not found.
The reason string is entirely optional and is used to add extra information
to the appropriate queue_log entries and manager events.
  This application sets the following channel variable upon completion:
     PQMSTATUS      The status of the attempt to pause a queue member as a
                     text string, one of
           PAUSED | NOTFOUND
Example: PauseQueueMember(,SIP/3000)
   UnpauseQueueMember([queuename],interface[,options[,reason]]):
Unpauses (resumes calls to) a queue member.
This is the counterpart to PauseQueueMember and operates exactly the
same way, except it unpauses instead of pausing the given interface.
The reason string is entirely optional and is used to add extra information
to the appropriate queue_log entries and manager events.
  This application sets the following channel variable upon completion:
     UPQMSTATUS       The status of the attempt to unpause a queue 
                      member as a text string, one of
            UNPAUSED | NOTFOUND
Example: UnpauseQueueMember(,SIP/3000)
   QueueLog(queuename,uniqueid,agent,event[,additionalinfo]):
Allows you to write your own events into the queue log
Example: QueueLog(101,${UNIQUEID},${AGENT},WENTONBREAK,600)
queue_function_memberpenalty_write
set_member_penalty
queue_function_memberpenalty_read
get_member_penalty
queue_function_queuewaitingcount
queue_function_queuememberlist
queue_function_qac_dep
load_realtime_queue
find_queue_by_name_rt
ast_str_create
_ast_calloc
queue_set_param
create_queue_member
add_to_interfaces
remove_from_interfaces
update_realtime_members
queue_function_qac
queue_function_var
reload_queue_rules
insert_penaltychange
complete_queue_rule_show
_ast_strdup
complete_queue_set_member_penalty
complete_queue
complete_queue_pause_member
set_member_paused
dump_queue_members
complete_queue_remove_member
remove_from_queue
complete_queue_add_member
_ast_malloc
add_to_queue
reload_queues
load_module
reload_queue_members
device_state_cb
handle_statechange
update_status
ql_exec
upqm_exec
pqm_exec
rqm_exec
aqm_exec
queue_exec
join_queue
copy_rules
say_position
say_periodic_announcement
try_calling
queue_transfer_fixup
calc_metric
ring_one
ring_entry
compare_weight
wait_for_answer
store_next_rr
store_next_lin
setup_transfer_datastore
send_agent_complete
update_qe_rule
is_our_turn
record_abandoned
leave_queue
a9c98e5d177805051735cb5b0b16b0a0
app_queue.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
