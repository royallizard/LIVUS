__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
PyInt_FromLong
initxc
PyType_Ready
Py_InitModule4_64
PyExc_RuntimeError
PyErr_NewException
stdout
setbuf
stderr
PyModule_AddObject
PyModule_AddIntConstant
xc_get_last_error
xc_error_code_to_desc
PyErr_SetFromErrno
Py_BuildValue
xc_clear_last_error
PyErr_SetObject
PyArg_ParseTupleAndKeywords
xc_send_debug_keys
xc_domain_send_trigger
PyArg_ParseTuple
xc_domain_destroy
xc_domain_unpause
xc_domain_pause
localtime_r
gmtime_r
mktime
difftime
xc_domain_set_time_offset
PyLong_FromUnsignedLong
xc_domain_iomem_permission
xc_domain_irq_permission
xc_domain_ioport_permission
xc_domain_memory_increase_reservation
xc_domain_set_memmap_limit
xc_domain_setmaxmem
xc_shadow_control
xc_version
__sprintf_chk
__stack_chk_fail
xc_physinfo
xc_readconsolering
PyString_FromStringAndSize
xc_physdev_pci_access_modify
xc_evtchn_reset
xc_evtchn_alloc_unbound
xc_sched_credit_domain_get
xc_sched_credit_domain_set
xc_sedf_domain_get
xc_sedf_domain_set
xc_sched_id
xc_get_hvm_param
xc_hvm_build
xc_map_foreign_range
munmap
xc_set_hvm_param
xc_dom_loginit
xc_dom_allocate
xc_dom_linux_build
PyDict_New
PyDict_SetItemString
xc_dom_release
xc_vcpu_getinfo
xc_vcpu_getaffinity
PyList_New
PyList_Append
malloc
xc_domain_getinfo
PyList_SetItem
free
PyErr_NoMemory
PyList_Type
PyType_IsSubtype
PyList_Size
PyInt_Type
PyList_GetItem
PyInt_AsLong
xc_domain_sethandle
xc_domain_setcpuweight
xc_vcpu_setaffinity
xc_domain_shutdown
xc_domain_resume
xc_domain_dumpcore
xc_domain_max_vcpus
__errno_location
xc_domain_create
xc_interface_open
Py_FindMethod
xc_interface_close
libxenctrl.so.3.0
libxenguest.so.3.0
libxenstore.so.3.0
libpython2.5.so.1.0
libpthread.so.0
libc.so.6
_edata
__bss_start
_end
GLIBC_2.2.5
GLIBC_2.3.4
GLIBC_2.4
%zc 
%rc 
%jc 
%bc 
%Zc 
%Rc 
%Jc 
%Bc 
%:c 
%2c 
%*c 
%"c 
%zb 
%rb 
%jb 
%bb 
%Zb 
%Rb 
%Jb 
%Bb 
%:b 
%2b 
%*b 
%"b 
%za 
%ra 
%ja 
%ba 
%Za 
%Ra 
%Ja 
%Ba 
%:a 
%2a 
%*a 
%"a 
ATSubH
=Si 
l$ H
t$@H
D$`H
L$ L
D$,H
D$$L
D$(H
L$(E1
D$$H
EpMc
L$ L
D$xH
l$PL
t$@L
D$pH
D$hH
D$`H
D$XH
D$HH
D$8H
D$0H
D$(H
AVAUATUSH
\$pH
D$PH
D$@H
D$0H
D$|H
D$tL
[]A\A]A^
D$,L
L$8L
D$<H
D$0H
D$4H
L$,D
t$XH
D$^H
L$HH
T$PL
L$\L
D$@H
T$XL
D$PH
D$0H
D$ H
D$@H
D$HH
D$<L
L$0L
D$8H
D$>H
D$ H
D$(H
D$<D
L$(H
t$8L
D$DL
L$XL
D$(H
D$ H
D$LH
D$PH
D$8H
D$TH
HVM INFOH
HcL$L
HcL$X
T$0H
=zU 
ATUSH
D$XH
D$PL
L$|L
D$0H
D$(H
D$XH
D$ H
D$`H
D$hH
D$xH
D$tH
[]A\A]
t$PH
L$`L
D$xL
D$HH
t#PH
t#XH
T$HL
D$@L
t#XH
L$XL
[]A\
t$\H
t$\H
T$4L
D$5H
D$ H
D$8H
D$PH
D$Pt!
[]A\
AVAUATUSH
[]A\A]A^A_
D$0H
D$(H
D$ H
D$pH
D$`H
D$PH
D$@H
D$0H
D$(A
D$ H
D$(1
=<M 
T$(dH3
\$0H
l$8L
d$@L
l$HL
t$PH
%B? 
AUATUSH
[]A\A]A^
D$H1
D$$L
t$,H
L$(H
5-: 
T$HdH3
\$XH
l$`L
d$hL
l$pL
t$xL
l$01
t$(A
=S= 
xen.lowlevel.xc
xen.lowlevel.xc.Error
XEN_SCHEDULER_SEDF
XEN_SCHEDULER_CREDIT
(iss)
(is)
ii|i
illi
il|ii
virt_start=0x%lx
xen_extra
xen_minor
xen_major
cc_compile_date
cc_compile_domain
cc_compile_by
cc_compiler
xen_changeset
platform_params
xen_pagesize
xen_caps
%08x:
sockets_per_node
cores_per_socket
threads_per_core
hw_caps
cpu_khz
scrub_memory
free_memory
total_memory
nr_nodes
iiiii
{s:H,s:H}
slice
period
domid
{s:i,s:L,s:L,s:L,s:i,s:i}
extratime
latency
iLLLhh
iiis|iiii
store_mfn
{s:i}
iiiis|ssis
notes
console_mfn
{s:i,s:i,s:N}
running
blocked
online
{s:i,s:i,s:i,s:L,s:i}
cpu_time
cpumap
max_vcpu_id
online_vcpus
shutdown_reason
ssidref
maxmem_kb
paused
crashed
dying
i|iO
|iiOi
xen.lowlevel.xc.xc
Xen client connections
domain_create
domain_max_vcpus
domain_dumpcore
domain_pause
domain_unpause
domain_destroy
domain_resume
domain_shutdown
vcpu_setaffinity
domain_setcpuweight
domain_sethandle
domain_getinfo
vcpu_getinfo
linux_build
hvm_build
hvm_get_param
sched_id_get
sedf_domain_set
sedf_domain_get
sched_credit_domain_set
sched_credit_domain_get
evtchn_alloc_unbound
evtchn_reset
physdev_pci_access_modify
readconsolering
physinfo
xeninfo
shadow_control
shadow_mem_control
domain_setmaxmem
domain_set_memmap_limit
domain_ioport_permission
domain_irq_permission
domain_iomem_permission
pages_to_kib
domain_set_time_offset
domain_send_trigger
send_debug_keys
vcpu
first_pfn
nr_pfns
allow_access
pirq
first_port
nr_ports
extent_order
address_bits
clear
func
enable
remote_dom
store_evtchn
memsize
image
acpi
apic
console_evtchn
ramdisk
cmdline
flags
features
first_dom
max_doms
{s:i,s:i,s:s,s:s,s:i,s:s,s:s,s:s,s:s,s:s,s:s}
{s:i,s:i,s:i,s:i,s:l,s:l,s:l,s:i,s:s}
{s:i,s:i,s:i,s:i,s:i,s:i,s:i,s:i,s:i,s:i,s:L,s:L,s:L,s:i,s:i}
Query the xc control interface file descriptor.
Returns: [int] file descriptor
Create a new domain.
 dom    [int, 0]:        Domain identifier to use (allocated if zero).
Returns: [int] new domain identifier; -1 on error.
Set the maximum number of VCPUs a domain may create.
 dom       [int, 0]:      Domain identifier to use.
 max     [int, 0]:      New maximum number of VCPUs in domain.
Returns: [int] 0 on success; -1 on error.
Dump core of a domain.
 dom [int]: Identifier of domain to dump core of.
 corefile [string]: Name of corefile to be created.
Returns: [int] 0 on success; -1 on error.
Temporarily pause execution of a domain.
 dom [int]: Identifier of domain to be paused.
Returns: [int] 0 on success; -1 on error.
(Re)start execution of a domain.
 dom [int]: Identifier of domain to be unpaused.
Returns: [int] 0 on success; -1 on error.
Destroy a domain.
 dom [int]:    Identifier of domain to be destroyed.
Returns: [int] 0 on success; -1 on error.
Resume execution of a suspended domain.
 dom [int]: Identifier of domain to be resumed.
 fast [int]: Use cooperative resume.
Returns: [int] 0 on success; -1 on error.
Shutdown a domain.
 dom       [int, 0]:      Domain identifier to use.
 reason     [int, 0]:      Reason for shutdown.
Returns: [int] 0 on success; -1 on error.
Pin a VCPU to a specified set CPUs.
 dom [int]:     Identifier of domain to which VCPU belongs.
 vcpu [int, 0]: VCPU being pinned.
 cpumap [list, []]: list of usable CPUs.
Returns: [int] 0 on success; -1 on error.
Set cpuweight scheduler parameter for domain.
 dom [int]:            Identifier of domain to be changed.
 cpuweight [float, 1]: VCPU being pinned.
Returns: [int] 0 on success; -1 on error.
Set domain's opaque handle.
 dom [int]:            Identifier of domain.
 handle [list of 16 ints]: New opaque handle.
Returns: [int] 0 on success; -1 on error.
Get information regarding a set of domains, in increasing id order.
 first_dom [int, 0]:    First domain to retrieve info about.
 max_doms  [int, 1024]: Maximum number of domains to retrieve info about.
Returns: [list of dicts] if list length is less than 'max_doms'
         parameter then there was an error, or the end of the
         domain-id space was reached.
 dom      [int]: Identifier of domain to which this info pertains
 cpu      [int]:  CPU to which this domain is bound
 vcpus    [int]:  Number of Virtual CPUS in this domain
 dying    [int]:  Bool - is the domain dying?
 crashed  [int]:  Bool - has the domain crashed?
 shutdown [int]:  Bool - has the domain shut itself down?
 paused   [int]:  Bool - is the domain paused by control software?
 blocked  [int]:  Bool - is the domain blocked waiting for an event?
 running  [int]:  Bool - is the domain currently running?
 mem_kb   [int]:  Memory reservation, in kilobytes
 maxmem_kb [int]: Maximum memory limit, in kilobytes
 cpu_time [long]: CPU time consumed, in nanoseconds
 shutdown_reason [int]: Numeric code from guest OS, explaining reason why it shut itself down.
Get information regarding a VCPU.
 dom  [int]:    Domain to retrieve info about.
 vcpu [int, 0]: VCPU to retrieve info about.
Returns: [dict]
 online   [int]:  Bool - Is this VCPU currently online?
 blocked  [int]:  Bool - Is this VCPU blocked waiting for an event?
 running  [int]:  Bool - Is this VCPU currently running on a CPU?
 cpu_time [long]: CPU time consumed, in nanoseconds
 cpumap   [int]:  Bitmap of CPUs this VCPU can run on
 cpu      [int]:  CPU that this VCPU is currently bound to
Build a new Linux guest OS.
 dom     [int]:      Identifier of domain to build into.
 image   [str]:      Name of kernel image file. May be gzipped.
 ramdisk [str, n/a]: Name of ramdisk file, if any.
 cmdline [str, n/a]: Kernel parameters, if any.
 vcpus   [int, 1]:   Number of Virtual CPUS in domain.
Returns: [int] 0 on success; -1 on error.
Build a new HVM guest OS.
 dom     [int]:      Identifier of domain to build into.
 image   [str]:      Name of HVM loader image file.
 vcpus   [int, 1]:   Number of Virtual CPUS in domain.
Returns: [int] 0 on success; -1 on error.
get a parameter of HVM guest OS.
 dom     [int]:      Identifier of domain to build into.
 param   [int]:      No. of HVM param.
Returns: [int] value of the param.
Get the current scheduler type in use.
Returns: [int] sched_id.
Set the scheduling parameters for a domain when running with Atropos.
 dom       [int]:  domain to set
 period    [long]: domain's scheduling period
 slice     [long]: domain's slice per period
 latency   [long]: domain's wakeup latency hint
 extratime [int]:  domain aware of extratime?
Returns: [int] 0 on success; -1 on error.
Get the current scheduling parameters for a domain when running with
the Atropos scheduler. dom       [int]: domain to query
Returns:   [dict]
 domain    [int]: domain ID
 period    [long]: scheduler period
 slice     [long]: CPU reservation per period
 latency   [long]: domain's wakeup latency hint
 extratime [int]:  domain aware of extratime?
Set the scheduling parameters for a domain when running with the
SMP credit scheduler.
 domid     [int]:   domain id to set
 weight    [short]: domain's scheduling weight
Returns: [int] 0 on success; -1 on error.
Get the scheduling parameters for a domain when running with the
SMP credit scheduler.
 domid     [int]:   domain id to get
Returns:   [dict]
 weight    [short]: domain's scheduling weight
Allocate an unbound port that will await a remote connection.
 dom        [int]: Domain whose port space to allocate from.
 remote_dom [int]: Remote domain to accept connections from.
Returns: [int] Unbound event-channel port.
Reset all connections.
 dom [int]: Domain to reset.
Allow a domain access to a PCI device
 dom    [int]: Identifier of domain to be allowed access.
 bus    [int]: PCI bus
 dev    [int]: PCI slot
 func   [int]: PCI function
 enable [int]: Non-zero means enable access; else disable access
Returns: [int] 0 on success; -1 on error.
Read Xen's console ring.
 clear [int, 0]: Bool - clear the ring after reading from it?
Returns: [str] string is empty on failure.
Get information about the physical host machine
Returns [dict]: information about the hardware        [None]: on failure.
Get information about the Xen host
Returns [dict]: information about Xen        [None]: on failure.
Set parameter for shadow pagetable interface
 dom [int]:   Identifier of domain.
 op [int, 0]: operation
Returns: [int] 0 on success; -1 on error.
Set or read shadow pagetable memory use
 dom [int]:   Identifier of domain.
 mb [int, -1]: MB of shadow memory this domain should have.
Returns: [int] MB of shadow memory in use by this domain.
Set a domain's memory limit
 dom [int]: Identifier of domain.
 maxmem_kb [int]: .
Returns: [int] 0 on success; -1 on error.
Set a domain's physical memory mappping limit
 dom [int]: Identifier of domain.
 map_limitkb [int]: .
Returns: [int] 0 on success; -1 on error.
domain_memory_increase_reservation
Increase a domain's memory reservation
 dom [int]: Identifier of domain.
 mem_kb [long]: .
Returns: [int] 0 on success; -1 on error.
Allow a domain access to a range of IO ports
 dom          [int]: Identifier of domain to be allowed access.
 first_port   [int]: First IO port
 nr_ports     [int]: Number of IO ports
 allow_access [int]: Non-zero means enable access; else disable access
Returns: [int] 0 on success; -1 on error.
Allow a domain access to a physical IRQ
 dom          [int]: Identifier of domain to be allowed access.
 pirq         [int]: The Physical IRQ
 allow_access [int]: Non-zero means enable access; else disable access
Returns: [int] 0 on success; -1 on error.
Allow a domain access to a range of IO memory pages
 dom          [int]: Identifier of domain to be allowed access.
 first_pfn   [long]: First page of I/O Memory
 nr_pfns     [long]: Number of pages of I/O Memory (>0)
 allow_access [int]: Non-zero means enable access; else disable access
Returns: [int] 0 on success; -1 on error.
Returns: [int]: The size in KiB of memory spanning the given number of pages.
Set a domain's time offset to Dom0's localtime
 dom        [int]: Domain whose time offset is being set.
Returns: [int] 0 on success; -1 on error.
Send trigger to a domain.
 dom     [int]: Identifier of domain to be sent trigger.
 trigger [int]: Trigger type number.
 vcpu    [int]: VCPU to be sent trigger.
Returns: [int] 0 on success; -1 on error.
Inject debug keys into Xen.
 keys    [str]: String of keys to inject.
I|HH
xc.so.debug
.shstrtab
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
