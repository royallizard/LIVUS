C6*uW
IQ	5
__gmon_start__
_init
_fini
__cxa_finalize
_Jv_RegisterClasses
call_failure
XS_Encode__XS_renew
Perl_Istack_sp_ptr
Perl_Imarkstack_ptr_ptr
Perl_Istack_base_ptr
Perl_croak
XS_Encode_FB_XMLCREF
Perl_Iop_ptr
Perl_sv_newmortal
Perl_sv_setiv
Perl_mg_set
Perl_pad_sv
XS_Encode_FB_HTMLCREF
XS_Encode_FB_PERLQQ
XS_Encode_FB_WARN
XS_Encode_FB_QUIET
XS_Encode_FB_CROAK
XS_Encode_FB_DEFAULT
XS_Encode_STOP_AT_PARTIAL
XS_Encode_XMLCREF
XS_Encode_HTMLCREF
XS_Encode_PERLQQ
XS_Encode_RETURN_ON_ERR
XS_Encode_LEAVE_SRC
XS_Encode_WARN_ON_ERR
XS_Encode_DIE_ON_ERR
XS_Encode__XS_renewed
XS_Encode__utf8_off
Perl_Isv_undef_ptr
Perl_sv_2mortal
Perl_newSViv
XS_Encode__utf8_on
XS_Encode_is_utf8
Perl_croak_nocontext
Perl_sv_2iv_flags
Perl_is_utf8_string
Perl_Isv_no_ptr
Perl_sv_free
Perl_newSVsv
Perl_Isv_yes_ptr
Perl_sv_free2
XS_Encode__XS_needs_lines
XS_Encode__XS_perlio_ok
Perl_eval_pv
Perl_get_sv
Perl_sv_2bool
_encoded_bytes_to_utf8
Perl_Gthr_key_ptr
pthread_getspecific
XS_Encode__bytes_to_utf8
Perl_bytes_to_utf8
Perl_sv_setpvn
Perl_safesysfree
Perl_sv_2pv_flags
_encoded_utf8_to_bytes
XS_Encode__utf8_to_bytes
Perl_safesysmalloc
Perl_sv_usepvn_flags
Perl_utf8_to_bytes
XS_Encode__XS_name
strlen
Perl_newSVpvn
XS_Encode__XS_mime_name
Perl_push_scope
Perl_Idebug_ptr
Perl_Itmps_floor_ptr
Perl_save_int
Perl_Itmps_ix_ptr
Perl_Imarkstack_max_ptr
Perl_Istack_max_ptr
Perl_call_pv
Perl_pop_scope
Perl_Iscopestack_ix_ptr
Perl_deb
Perl_free_tmps
Perl_stack_grow
Perl_markstack_grow
Perl_sv_catpvn_flags
PL_utf8skip
Perl_warner
Perl_newSVpvf_nocontext
Perl_sv_catsv_flags
Perl_sv_catpv
Perl_utf8n_to_uvuni
Perl_newSVnv
Perl_call_sv
Perl_newSVpv
Perl_newSV
do_encode
Perl_sv_grow
XS_Encode__XS_encode
Perl_sv_utf8_upgrade_flags
XS_Encode__XS_decode
Perl_sv_utf8_downgrade
XS_Encode__XS_cat_decode
Perl_hv_common_key_len
XS_Encode__utf8_encode_xs
XS_Encode__utf8_decode_xs
Perl_call_method
Encode_XSEncoding
Perl_gv_stashpv
Perl_newRV_noinc
Perl_sv_bless
boot_Encode
Perl_new_version
Perl_sv_derived_from
Perl_vcmp
Perl_newXS
Perl_newXS_flags
ascii_encoding
ascii_ctrl_encoding
iso_8859_1_encoding
null_encoding
Perl_Iunitcheckav_ptr
Perl_call_list
Perl_form
Perl_vstringify
libc.so.6
_edata
__bss_start
_end
GLIBC_2.1.3
GLIBC_2.0
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
[^_]
,[^_]
[^_]
,[^_]
L[^_]
[^_]
,[^_]
B@<=w5
[^_]
[^_]
[^_]
[^_]
[^_]
<[^_]
<[^_]
L[^_]
L[^_]
L[^_]
[^_]
[^_]
[^_]
l[^_]
:N	v
:N	w
t19}
;E(t>
(^_]
Encode::XS::renew
Usage: %s(%s)
Encode::FB_XMLCREF
Encode::FB_HTMLCREF
Encode::FB_PERLQQ
Encode::FB_WARN
Encode::FB_QUIET
Encode::FB_CROAK
Encode::FB_DEFAULT
Encode::STOP_AT_PARTIAL
Encode::XMLCREF
Encode::HTMLCREF
Encode::PERLQQ
Encode::RETURN_ON_ERR
Encode::LEAVE_SRC
Encode::WARN_ON_ERR
Encode::DIE_ON_ERR
Encode::XS::renewed
Encode::_utf8_off
Encode::_utf8_on
sv, check = 0
Encode::is_utf8
Encode::XS::needs_lines
Encode::XS::perlio_ok
require PerlIO::encoding
panic_unimplemented
sv, ...
Encode::_bytes_to_utf8
Encode::_utf8_to_bytes
Encode::XS::name
Encode::XS::mime_name
require Encode::MIME::Name
Encode.xs
ENTER
%s scope %ld at %s:%d
LEAVE
\x{%04lX}
\x%02lX
&#x%lx;
&#%lu;
\x{%04lx}
from
Encode::XS::encode
Encode::XS::decode
Encode::XS::cat_decode
strict_utf8
obj, src, check = 0
Encode::utf8::encode_xs
Encode::utf8::decode_xs
Encode::XS
Encode::define_encoding
XS_VERSION
%s::%s
2.23
version
bootstrap parameter
Encode.c
$$$$$;$
((svtype)((_svi)->sv_flags & 0xff)) == SVt_IV || ((svtype)((_svi)->sv_flags & 0xff)) >= SVt_PVIV
Assertion %s failed: file "Encode.c", line %d
((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVAV
((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVHV
((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVCV
!((((_svi)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVLV))
((svtype)((_svi)->sv_flags & 0xff)) >= SVt_PV
Assertion %s failed: file "Encode.xs", line %d
((svtype)((_svi)->sv_flags & 0xff)) == SVt_NV || ((svtype)((_svi)->sv_flags & 0xff)) >= SVt_PVNV
((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVFM
((svtype)((_svi)->sv_flags & 0xff)) >= SVt_RV
Encode::MIME::Name::get_mime_name
!((dst)->sv_flags & 0x00000800) || !(*({ SV *const _svi = (SV *) (dst); ((((svtype)((_svi)->sv_flags & 0xff)) >= SVt_RV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) >= SVt_RV", 312), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVAV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVAV", 312), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVHV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVHV", 312), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVCV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVCV", 312), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVFM) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVFM", 312), (void) 0)); ((!((((_svi)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVLV))) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "!((((_svi)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVLV))", 312), (void) 0)); &((_svi)->sv_u.svu_rv); }))
!((((dst)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((dst)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((dst)->sv_flags & 0xff)) == SVt_PVLV))
((svtype)((dst)->sv_flags & 0xff)) >= SVt_PV
((svtype)((dst)->sv_flags & 0xff)) != SVt_PVAV
((svtype)((dst)->sv_flags & 0xff)) != SVt_PVHV
"\x{%04lx}" does not map to %s
%s "\x%02lX" does not map to Unicode
fallback sub must return scalar!
!((dst)->sv_flags & 0x00000800) || !(*({ SV *const _svi = (SV *) (dst); ((((svtype)((_svi)->sv_flags & 0xff)) >= SVt_RV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) >= SVt_RV", 124), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVAV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVAV", 124), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVHV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVHV", 124), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVCV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVCV", 124), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVFM) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVFM", 124), (void) 0)); ((!((((_svi)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVLV))) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "!((((_svi)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVLV))", 124), (void) 0)); &((_svi)->sv_u.svu_rv); }))
!((dst)->sv_flags & 0x00000800) || !(*({ SV *const _svi = (SV *) (dst); ((((svtype)((_svi)->sv_flags & 0xff)) >= SVt_RV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) >= SVt_RV", 132), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVAV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVAV", 132), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVHV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVHV", 132), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVCV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVCV", 132), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVFM) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVFM", 132), (void) 0)); ((!((((_svi)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVLV))) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "!((((_svi)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVLV))", 132), (void) 0)); &((_svi)->sv_u.svu_rv); }))
Destination couldn't be grown.
Unexpected code %d converting %s %s
((svtype)((src)->sv_flags & 0xff)) >= SVt_PV
((svtype)((src)->sv_flags & 0xff)) != SVt_PVAV
((svtype)((src)->sv_flags & 0xff)) != SVt_PVHV
!((((src)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((src)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((src)->sv_flags & 0xff)) == SVt_PVLV))
!((dst)->sv_flags & 0x00000800) || !(*({ SV *const _svi = (SV *) (dst); ((((svtype)((_svi)->sv_flags & 0xff)) >= SVt_RV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) >= SVt_RV", 270), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVAV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVAV", 270), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVHV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVHV", 270), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVCV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVCV", 270), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVFM) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVFM", 270), (void) 0)); ((!((((_svi)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVLV))) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "!((((_svi)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVLV))", 270), (void) 0)); &((_svi)->sv_u.svu_rv); }))
obj, src, check_sv = &PL_sv_no
obj, dst, src, off, term, check_sv = &PL_sv_no
((svtype)((off)->sv_flags & 0xff)) == SVt_IV || ((svtype)((off)->sv_flags & 0xff)) >= SVt_PVIV
((svtype)((off)->sv_flags & 0xff)) != SVt_PVAV
((svtype)((off)->sv_flags & 0xff)) != SVt_PVHV
((svtype)((off)->sv_flags & 0xff)) != SVt_PVCV
!((((off)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((off)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((off)->sv_flags & 0xff)) == SVt_PVLV))
!((dst)->sv_flags & 0x00000800) || !(*({ SV *const _svi = (SV *) (dst); ((((svtype)((_svi)->sv_flags & 0xff)) >= SVt_RV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) >= SVt_RV", 508), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVAV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVAV", 508), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVHV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVHV", 508), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVCV) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVCV", 508), (void) 0)); ((((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVFM) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "((svtype)((_svi)->sv_flags & 0xff)) != SVt_PVFM", 508), (void) 0)); ((!((((_svi)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVLV))) ? ((void) 0) : (Perl_croak_nocontext("Assertion %s failed: file \"" "Encode.xs" "\", line %d", "!((((_svi)->sv_flags & (0x00004000|0x00008000)) == 0x00008000) && (((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVGV || ((svtype)((_svi)->sv_flags & 0xff)) == SVt_PVLV))", 508), (void) 0)); &((_svi)->sv_u.svu_rv); }))
Cannot decode string with wide characters
%s object version %-p does not match %s%s%s%s %-p
ascii
ascii-ctrl
iso-8859-1
null
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
Encode.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.bss
.gnu_debuglink
