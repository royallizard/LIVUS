)KjYHk
f: C
Q1Y\@
X_cZ
cn 'e
#x@n
TWSG
p*kaK
k|vl
VCt#
P^~wp@
__gmon_start__
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
trigger_search_option
weechat_trigger_plugin
trigger_option_string
trigger_search_hook_type
trigger_hook_type_string
trigger_search_return_code
trigger_return_code_string
trigger_search_post_action
trigger_post_action_string
trigger_search
trigger_search_with_option
strchr
trigger_unhook
strdup
malloc
trigger_callback_print_cb
trigger_callback_focus_cb
trigger_callback_signal_cb
trigger_callback_command_cb
trigger_callback_command_run_cb
trigger_callback_modifier_cb
trigger_callback_line_cb
trigger_callback_hsignal_cb
strtol
trigger_callback_timer_cb
trigger_callback_config_cb
trigger_regex_free
regfree
trigger_regex_split
strlen
strstr
realloc
trigger_split_command
trigger_name_valid
trigger_alloc
trigger_find_pos
trigger_add
trigger_new_with_options
last_trigger
triggers_count
trigger_new
trigger_config_create_trigger_option
trigger_create_default
trigger_config_default_list
trigger_rename
__snprintf_chk
trigger_copy
trigger_free
trigger_free_all
trigger_print_log
trigger_debug_dump_cb
weechat_plugin_init
trigger_callback_init
trigger_command_init
trigger_config_init
trigger_config_read
trigger_completion_init
trigger_buffer_set_callbacks
weechat_plugin_end
trigger_buffer_end
trigger_config_write
trigger_config_free
trigger_callback_end
last_trigger_temp
triggers_temp
trigger_return_code
trigger_hook_regex_default_var
trigger_hook_default_rc
trigger_hook_default_arguments
trigger_hook_option_values
trigger_option_default
weechat_plugin_priority
weechat_plugin_license
weechat_plugin_version
weechat_plugin_author
weechat_plugin_description
weechat_plugin_api_version
weechat_plugin_name
trigger_buffer_close_cb
trigger_buffer
trigger_buffer_hashtable_map_cb
trigger_config_look_monitor_strip_colors
trigger_buffer_match_filters
trigger_buffer_filters
trigger_buffer_set_filter
trigger_buffer_set_title
trigger_buffer_input_cb
trigger_buffer_open
trigger_buffer_display_hashtable
trigger_buffer_display_trigger
trigger_config_color_trigger
trigger_callback_irc_message_parse
trigger_callback_get_irc_server_channel
strcmp
trigger_callback_set_tags
trigger_callback_check_conditions
trigger_callback_hashtable_options_conditions
trigger_callback_replace_regex
trigger_callback_hashtable_options_regex
trigger_callback_run_command
trigger_callback_execute
__isoc99_sscanf
localtime
strftime
trigger_command_display_status
trigger_command_display_trigger_internal
__memset_chk
trigger_config_color_flag_conditions
trigger_config_color_replace
trigger_config_color_regex
trigger_config_color_flag_regex
trigger_config_color_flag_command
trigger_config_color_flag_return_code
trigger_config_color_flag_post_action
trigger_config_color_trigger_disabled
trigger_command_display_trigger
trigger_command_list
trigger_command_list_default
trigger_command_error_running
trigger_command_set_enabled
trigger_command_rename
trigger_command_trigger
trigger_config_look_enabled
trigger_completion_triggers_cb
trigger_completion_triggers_default_cb
trigger_completion_options_cb
trigger_completion_hooks_cb
trigger_completion_hook_conditions_cb
trigger_completion_hook_regex_cb
trigger_completion_hook_command_cb
trigger_completion_option_value_cb
trigger_completion_hooks_filter_cb
trigger_completion_add_quoted_word
trigger_completion_post_action_cb
trigger_completion_add_default_for_hook
trigger_completion_hook_arguments_cb
trigger_completion_hook_rc_cb
trigger_config_change_enabled
trigger_config_change_trigger_hook
trigger_config_change_trigger_arguments
trigger_config_change_trigger_enabled
trigger_config_change_trigger_regex
trigger_config_change_trigger_command
trigger_config_trigger_write_default_cb
trigger_config_section_trigger
trigger_config_file
trigger_config_create_option_temp
trigger_config_trigger_read_cb
trigger_config_use_temp_triggers
trigger_config_reload_cb
libc.so.6
__stack_chk_fail
GLIBC_2.7
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.0
GLIBC_2.3.4
UWVS
[^_]
UWVS1
[^_]
UWVS1
[^_]
UWVS1
[^_]
UWVS
t$(P
[^_]
[^_]
UWVS
[^_]
UWVS
D$H1
D$<e3
L[^_]
L$DQj
T$ j
T$ R
L$,Qj
RVPj
;l$8|
;l$8|
t$8U
;l$8|
;l$8|
T$ R
L$(Q
t$0P
;l$8|
D$4P
T$8RP
T$<RP
L$8Q
;l$8|
UWVS
[^_]
UWVS
<[^_]
L$,VQ
T$4j 
+D$$+D$ P
< t}
[^_]
<-t=
UWVS
[^_]
[^_]
UWVS
VDRP
t$4QUPj
VLRP
[^_]
UWVS
D$(e
D$x1
|$T1
L$le3
|[^_]
UWVS
[^_]
94$u
UWVS
D$ X
D$$X
D$,X
D$(X
L$<Q
T$<RPV
,[^_]
[^_]
UWVS
GHZP
[^_]
UWVS
D$ 1
[^_]
L$ 1
UWVS
[^_]
UWVS
t$LVP
t$TP
[^_]
t$DR
[^_]
t$TP
[^_]
UWVS
[^_]
[^_]
 [^_
UWVS
PHZYVPh
t$(V
[^_]
UWVS
[^_]
[^_]
UWVS
[^_]
D$$PR
UWVS
T$,Z
D$,Y
t$(U
T$4R
t$PP
t$TR
,[^_]
,[^_]
UWVS
t$8P
t$<P
[^_]
UWVS
L$8Qh
t$DV
t$8h
t$DV
[^_]
t$,R
D$lY
D$pX
D$tX
D$xX
D$|X
t$dS
t$pj
t$HVR
PHYZPW
t$Pj
 9~D
[^_]
t$Pj
t$PV
[^_]
[^_]
t$`P
D$$XZ
D$,Y
D$4X
t$@S
T$TR
t$\P
<[^_]
UWVS
tnWV
[^_]
t$@WV
[^_]
UWVS
L$<Q
|$<Wj 
L$8Q
L$8QPV
t$8Q
|$,W
t$<QW
t$(V
t$4Vj
T$,R
[^_]
D$8PPj 
t$XV
t$(V
RRPW
VPY_j;
UWVS
RRj 
t$<RW
[^_]
[^_]
RRj 
t$<RW
[^_]
UWVS
D$<1
T$8Rj 
T$8R
T$8RPW
t$8R
|$(W
t$<RW
t$(R
T$0RW
T$,R
T$ 9
_Xj;V
T$DRQ
L$4R
\$<e3
L[^_]
|$4WWj 
t$0W
t$0V
T$<R
t$@V
t$,Pj
T$DRQ
L$,R
t$4VW
t$0W
UWVS
D$<1
|$4Wj 
L$(Q
|$<e3=
L[^_]
D$8P
t$(V
L$4QPj
T$@RW
|$$W
T$0RRj 
UWVS
RUj 
UUj 
T$,h
T$(Rh
T$,RU
t$,UV
[^_]
UWVS
t$\1
RWj 
WWj 
t$,R
t$(j j
t$,j j
t$@V
\$\e3
l[^_]
L$(j 
L$ QQj 
t$<Q
t$@Q
t$PV
[^_]
[^_]
[^_]
UWV1
PPj 
T$(R
D$(X
D$$P
[^_]
PPj 
t$<QR
t$@Q
T$ j
[^_]
[^_]
[^_]
UWVS
80uL
t$ j
,[^_]
VVj 
D$He
D$0X
t$DS
t$@P
\$DS
\$$Sj
L$0W
D$0Z
t$4P
t$(P
t$4j
D$8X
T$,Z
L$0Z
L$PZ
T$PR
t$dS
\$HSP
t$Tj
T$$Y
L$0Z
t$,SP
t$4j
t$$j
t$$j
[^_]
Pj@j
Pj@j
Pj@j
Pj@j
D$DX
D$<_
t$\S
t$@Q
t$PP
D$DY
Pj@j
D$XP
D$DZ
UWVS
D$0X
l$(Z
D$<Y
T$XR
L$XQUP
|[^_]
UWVS
t$0Vj
[^_]
[^_]
UWVS
D$L1
D$(Y
D$$X
L$4Q
T$4R
t$$j
t$HP
D$Le3
\[^_]
UWVS
t$8RVP
<[^_]
UWVS
[^_]
YRVP
t$0V
[^_]
UWVS
[^_]
PHZYUWP
UWVS
T$<R
PH]Zj
[^_]
PHY_j
t$(V
t$8P
T$DR
T$(Y
D$(X
D$,X
D$0X
D$4X
D$8XZ
L$8Q
t$HVWPh
T$4R
t$QV
t$XV
D$$X
PHZY
L$ Q
T$ RP
RHZYUWP
PHZY
PHZY
PHY_j
PH]Z
UWVS
[^_]
UWVS
[^_]
UWVS
[^_]
UWVS
[^_]
UWVS
[^_]
UWVS
[^_]
UWVS
[^_]
UWVS
D$$1
L$$Q
,[^_]
UWVS
;,$u
[^_]
UWVS
|$0W
[^_]
UWVS
D$$1
L$ Q
,[^_]
T$$Rj
t$ P
t$$j
UWVS
|$DW
VDRP
[^_]
RVPj
[^_]
PHZY
UWVS
L$ Q
L$$Q
[^_]
t$$S
UWVS
t$(Pj
t$Tj
[^_]
t$Tj
t$Tj
t$Tj
t$Tj
t$Tj
t$Tj
t$Tj
UWVS
+T$H
t$DQWPj
[^_]
t$HPU
UWVS
[^_]
UWVS
T$$RP
T$LPW
T$PR
t$HPW
t$HPW
t$HPW
t$HPW
t$HPW
t$HPW
t$HPW
t$PW
t$HPW
[^_]
[^_]
[^_]
config_option
%s.%s
[trigger (addr:0x%lx)]
***** "%s" plugin dump *****
debug_dump
--upgrade
none
disable
ok_eat
tg_signal_data
tg_string
tg_message
tg_argv_eol1
tg_command
tg_remaining_calls
tg_value
ok,ok_eat,error
ok,error
/cmd
60000;0;0
chat
hsignal
line
command_run
timer
config
focus
%s%s: unable to create hook for trigger "%s" (bad arguments)
%s%s: invalid regular expression in trigger: "%s"
  name. . . . . . . . . . : '%s'
  enabled . . . . . . . . : %d
  hook . .  . . . . . . . : %d ('%s')
  arguments . . . . . . . : '%s'
  conditions. . . . . . . : '%s'
  regex . . . . . . . . . : '%s'
  command . . . . . . . . : '%s'
  return_code . . . . . . : %d ('%s')
  post_action . . . . . . : %d ('%s')
  hooks_count . . . . . . : %d
  hooks . . . . . . . . . : 0x%lx
    hooks[%03d]. . . . . . : 0x%lx
  hook_count_cb . . . . . : %llu
  hook_count_cmd. . . . . : %llu
  hook_running. . . . . . : %d
  hook_print_buffers. . . : '%s'
  regex_count . . . . . . : %d
  regex . . . . . . . . . : 0x%lx
    regex[%03d].variable . . . : '%s'
    regex[%03d].str_regex. . . : '%s'
    regex[%03d].regex. . . . . : 0x%lx
    regex[%03d].replace. . . . : '%s'
    regex[%03d].replace_escaped: '%s'
  commands_count. . . . . : %d
  commands. . . . . . . . : 0x%lx
    commands[%03d] . . . . : '%s'
  prev_trigger. . . . . . : 0x%lx
  next_trigger. . . . . . : 0x%lx
***** End of "%s" plugin dump *****
cmd;desc;args;args_desc;%(buffers_names)
signal|hsignal|modifier|line|print|command|command_run|timer|config|focus
type_values
chat_delimiters
pointer
	    %s: 0x%lx
no_trigger
reset
	    %s: %s"%s%s%s"
localvar_trigger_filter
title
localvar_del_trigger_filter
localvar_set_trigger_filter
monitor
close_callback
input_callback
short_name_is_set
short_name
debug
localvar_set_type
localvar_set_server
localvar_set_channel
localvar_set_no_log
highlight_words
display
  %s:
%s	%s%s %s(%s%s%s)
full_name
chat_buffer
	  buffer: %s%s
pointers
extra_vars
Trigger monitor (filter: %s) | Input: q=close, words=filter
irc_message_parse
irc_server
irc_servers
irc_channel
channels
tg_tags_count
localvar_type
notify_
tg_tag_notify
tg_notify
private
tg_msg_pv
tg_tag_nick
prefix_nick_
tg_tag_prefix_nick
host_
tg_tag_host
no variable
	  regex %d: %s
creating variable
	  regex %d (%s): %s
regex_replace
,irc_in_
,irc_in2_
,irc_raw_in_
,irc_raw_in2_
,irc_out1_
,irc_out_
,irc_outtags_
tg_signal
type_keys
tg_modifier
tg_modifier_data
tg_string_nocolor
weechat_print
tg_prefix
tg_prefix_nocolor
tg_message_nocolor
tg_plugin
tg_buffer
,%s,
tg_tags
%Y-%m-%d %H:%M:%S
tg_date
tg_displayed
tg_highlight
tg_argv%d
tg_argv_eol%d
tg_option
_window
condition
	  regex %d %s(%s%s%s)%s: %s"%s%s%s"
%s  running command %s"%s%s%s"%s on buffer %s%s%s
Triggers enabled
Triggers disabled
  %s%s%s: %s%s%s%s%s%s%s
%s hooks: %d
%s callback: %d
%s commands: %d
%s %s=? %s"%s%s%s"
%s %s/%d %s"%s%s%s"
%s %s=> %s%s
%s %s=1 %s%s
 %s=?%s
 %s~%d%s
 %s/%d%s
 %s=>%s
 %s=1%s
No trigger defined
List of default triggers:
Trigger "%s" restarted
Trigger "%s" enabled
Trigger "%s" disabled
Trigger "%s" renamed to "%s"
addreplace
list
List of triggers:
addoff
%s%s: invalid hook type: "%s"
%s%s: not enough memory
Trigger "%s" created
addinput
/abc/def
${...}
input_pos
output
recreate
%s%s: trigger "%s" not found
Trigger "%s" updated
rename
copy
Trigger "%s" copied to "%s"
enable
toggle
restart
-all
%sTrigger "%s" not found
%d triggers removed
Trigger "%s" removed
show
Trigger:
restore
Trigger "%s" restored
-yes
Default triggers restored:
no_filter
listdefault
listfull
%s %s~%d %s"%s%s%s" --> "%s%s%s"%s%s%s%s
  %s%s%s: %s%s%s%s%s%s%s%s%s%s%s%s%s
%s%s: action "%s" can not be executed on trigger "%s" because it is currently running
%s%s: a disabled trigger can not be restarted
%s%s: invalid trigger name: "%s"
%s%s: trigger "%s" already exists
%s%s: failed to rename trigger "%s"
%s%s: invalid format for regular expression
%s%s: invalid regular expression (compilation failed)
%s%s: invalid return code: "%s"
%s%s: invalid post action "%s"
%s%s: trigger "%s" already exists (choose another name or use option "addreplace" to overwrite it)
%s%s: failed to create trigger "%s"
/trigger add name %s "%s" "%s" "%s" "%s"%s%s%s
//trigger %s %s %s "%s" "%s" "%s" "%s" "%s" "%s"
%s%s: trigger option "%s" not found
%s%s: failed to copy trigger "%s"
%sDefault trigger "%s" not found
%s%s: "-yes" argument is required for restoring default triggers (security reason)
%sError with command "%s" (help on command: /help %s)
list|listfull|listdefault || add|addoff|addreplace %(trigger_names) %(trigger_hooks) %(trigger_hook_arguments) %(trigger_hook_conditions) %(trigger_hook_regex) %(trigger_hook_command) %(trigger_hook_rc) %(trigger_post_action) || addinput %(trigger_hooks) || input|output|recreate %(trigger_names) || set %(trigger_names) %(trigger_options)|name %(trigger_option_value) || rename|copy %(trigger_names) %(trigger_names) || enable|disable|toggle|restart|del %(trigger_names)|-all %(trigger_names)|%* || show %(trigger_names) || restore %(trigger_names_default)|%* || default || monitor %(trigger_names)|%(trigger_hooks_filter)
       list: list triggers (without argument, this list is displayed)
   listfull: list triggers with detailed info for each trigger
listdefault: list default triggers
        add: add a trigger
     addoff: add a trigger (disabled)
 addreplace: add or replace an existing trigger
       name: name of trigger
       hook: signal, hsignal, modifier, line, print, command, command_run, timer, config, focus
  arguments: arguments for the hook, depending on hook (separated by semicolons):
             signal: name(s) of signal (required)
             hsignal: name(s) of hsignal (required)
             modifier: name(s) of modifier (required)
             line: buffer type ("formatted", "free" or "*"), list of buffer masks, tags
             print: buffer, tags, message, strip colors
             command: command (required), description, arguments, description of arguments, completion
             command_run: command(s) (required)
             timer: interval (required), align on second, max calls
             config: name(s) of option (required)
             focus: name(s) of area (required)
 conditions: evaluated conditions for the trigger
      regex: one or more regular expressions to replace strings in variables
    command: command to execute (many commands can be separated by ";")
return_code: return code in callback (ok (default), ok_eat, error)
post_action: action to take after execution (none (default), disable, delete)
   addinput: set input with default arguments to create a trigger
      input: set input with the command used to create the trigger
     output: send the command to create the trigger on the buffer
   recreate: same as "input", with option "addreplace" instead of "add"
        set: set an option in a trigger
     option: name of option: name, hook, arguments, conditions, regex, command, return_code
             (for help on option, you can type: /help trigger.trigger.<name>.<option>)
      value: new value for the option
     rename: rename a trigger
       copy: copy a trigger
     enable: enable trigger(s) (without arguments: enable triggers globally)
    disable: disable trigger(s) (without arguments: disable triggers globally)
     toggle: toggle trigger(s) (without arguments: toggle triggers globally)
    restart: restart trigger(s) (recreate the hooks)
       show: show detailed info on a trigger (with some stats)
        del: delete a trigger
       -all: do action on all triggers
    restore: restore trigger(s) with the default values (works only for default triggers)
    default: delete all triggers and restore default ones
    monitor: open the trigger monitor buffer, with optional filter:
     filter: filter hooks/triggers to display (a hook must start with "@", for example "@signal"), many filters can be separated by commas; wildcard "*" is allowed in each trigger name
When a trigger callback is called, following actions are performed, in this order:
  1. check conditions; if false, exit
  2. replace text using POSIX extended regular expression(s) (if defined in trigger)
  3. execute command(s) (if defined in trigger)
  4. exit with a return code (except for modifier, line and focus)
  5. perform post action
Examples (you can also look at default triggers with /trigger listdefault):
  add text attributes *bold*, _underline_ and /italic/ (only in user messages):
    /trigger add effects modifier weechat_print "${tg_tag_nick}" "==\*(\S+)\*==*${color:bold}${re:1}${color:-bold}*== ==_(\S+)_==_${color:underline}${re:1}${color:-underline}_== ==/(\S+)/==/${color:italic}${re:1}${color:-italic}/"
  hide nicklist bar on small terminals:
    /trigger add resize_small signal signal_sigwinch "${info:term_width} < 100" "" "/bar hide nicklist"
    /trigger add resize_big signal signal_sigwinch "${info:term_width} >= 100" "" "/bar show nicklist"
  silently save config each hour:
    /trigger add cfgsave timer 3600000;0;0 "" "" "/mute /save"
  open trigger monitor and show only modifiers and triggers whose name starts with "resize":
    /trigger monitor @modifier,resize*
list|listfull|listdefault || add|addoff|addreplace <name> <hook> ["<arguments>" ["<conditions>" ["<regex>" ["<command>" ["<return_code>" ["<post_action>"]]]]]] || addinput [<hook>] || input|output|recreate <name> || set <name> <option> <value> || rename|copy <name> <new_name> || enable|disable|toggle [<name>|-all [<name>...]] || restart <name>|-all [<name>...] || show <name> || del <name>|-all [<name>...] || restore <name> [<name>...] || default -yes || monitor [<filter>]
manage triggers, the Swiss Army knife for WeeChat
sort
"${...}"
"/abc/def"
"/cmd"
args
beginning
trigger_names
default triggers
trigger_names_default
options for triggers
trigger_options
value of a trigger option
trigger_option_value
hooks for triggers
trigger_hooks
trigger_hooks_filter
default arguments for a hook
trigger_hook_arguments
default conditions for a hook
trigger_hook_conditions
trigger_hook_regex
default command for a hook
trigger_hook_command
trigger_hook_rc
trigger post actions
trigger_post_action
hooks for triggers (for filter in monitor buffer)
default regular expression for a hook
default return codes for hook callback
boolean
type of hook used
integer
ok|ok_eat|error
none|disable|delete
look
enable trigger support
monitor_strip_colors
lightgreen
flag_command
yellow
flag_conditions
lightcyan
flag_regex
lightmagenta
flag_return_code
lightblue
flag_post_action
white
text color for trigger name
trigger_disabled
/print -beep
cmd_pass
cmd_pass_register
msg_auth
5000|irc_message_auth
server_pass
%s%s: invalid format for option "regex", see /help trigger.trigger.%s.regex
%s%s: invalid regular expression in option "regex", see /help trigger.trigger.%s.regex
if disabled, the hooks are removed from trigger, so it is not called any more
arguments for the hook (depend on the hook type, see /help trigger)
condition(s) for running the command (it is checked in hook callback) (note: content is evaluated when trigger is run, see /help eval)
replace text with a POSIX extended regular expression (it is done only if conditions are OK, and before running the command) (note: content is evaluated when trigger is run, see /help eval); format is: "/regex/replace/var" (var is the hashtable variable to replace, it is optional), many regex can be separated by a space, for example: "/regex1/replace1/var1 /regex2/replace2/var2"; escaped chars are interpreted in the regex (for example "\n"); the separator "/" can be replaced by any char (one or more identical chars); matching groups can be used in replace: ${re:0} to ${re:99}, ${re:+} for last match and ${hide:c,${re:N}} to replace all chars of group N by char 'c'
command(s) to run if conditions are OK, after regex replacements (many commands can be separated by semicolons)
return code for hook callback (see plugin API reference to know where ok_eat/error can be used efficiently)
action to take on the trigger after execution
%sWarning: unknown option for section "%s": %s (value: "%s")
strip colors in hashtable values displayed on monitor buffer
text color for command flag (in /trigger list)
text color for conditions flag (in /trigger list)
text color for regex flag (in /trigger list)
text color for return code flag (in /trigger list)
text color for post action flag (in /trigger list)
text color for regular expressions
text color for replacement text (for regular expressions)
text color for disabled trigger name
${tg_displayed} && (${tg_highlight} || ${tg_msg_pv})
5000|input_text_display;5000|history_add;5000|irc_command_auth
==^((/(msg|m|quote) +(-server +[^ ]+ +)?nickserv +(id|identify|set +password|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+) +)|/oper +[^ ]+ +|/quote +pass +|/set +[^ ]*password[^ ]* +|/secure +(passphrase|decrypt|set +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}
==^(/(msg|m|quote) +nickserv +register +)([^ ]+)(.*)==${re:1}${hide:*,${re:3}}${re:4}
==^(.*(id|identify|set +password|register|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}
5000|input_text_display;5000|history_add
==^(/(server|connect) .*-(sasl_)?password=)([^ ]+)(.*)==${re:1}${hide:*,${re:4}}${re:5}
9*2$"
GPL3
bastien Helleu <flashcode@flashtux.org>
Text replacement and command execution on events triggered by WeeChat/plugins
20180812-01
trigger
3p870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3h870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3c870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3s870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3e870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3p870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3h870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3c870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3s870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3e870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3p870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3h870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3c870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3s870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3e870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3p870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3h870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3c870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3s870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3e870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3p870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3h870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3c870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3s870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3e870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3p870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3h870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3c870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3s870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
3e870
gcc 9.0.1 20190129
GA*GOW
GA+stack_clash
GA*cf_protection
GA*FORTIFY
GA+GLIBCXX_ASSERTIONS
GA+omit_frame_pointer
GA+stack_realign
trigger.so-2.3-3.fc30.i386.debug
.data
.rodata
.shstrtab
.plt.sec
.dynamic
.note.gnu.build-id
.eh_frame
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rel.dyn
.data.rel.ro
.gnu.version_r
.eh_frame_hdr
.dynstr
.gnu.build.attributes
.bss
.init
.rel.plt
.got
.text
.fini_array
.init_array
.note.gnu.property
