/lib64/ld-linux-x86-64.so.2
libgimpui-2.0.so.0
g_free
gtk_box_get_type
gimp_drawable_detach
__gmon_start__
_Jv_RegisterClasses
gtk_table_get_type
gimp_drawable_get
gtk_widget_destroy
gtk_dialog_get_type
gtk_table_new
gimp_context_get_background
_ITM_deregisterTMCloneTable
gtk_container_get_type
gimp_drawable_mask_intersect
gimp_context_get_foreground
_ITM_registerTMCloneTable
gimp_pixel_rgns_process
gimp_dialog_new
gimp_drawable_has_alpha
gtk_window_get_type
gtk_box_new
gtk_dialog_get_content_area
gimp_pixel_rgns_register
gtk_dialog_set_alternative_button_order
gimp_standard_help_func
gimp_pixel_rgn_init
gtk_table_set_col_spacings
gimp_dialog_run
g_signal_connect_data
g_type_check_instance_cast
gtk_widget_show
gtk_toggle_button_set_active
gtk_toggle_button_get_type
gimp_drawable_mask_bounds
gimp_procedural_db_get_data
gtk_box_pack_start
gimp_procedural_db_set_data
gimp_dialog_get_type
gtk_table_set_row_spacings
g_log
gtk_container_set_border_width
gimp_ui_init
gimp_window_set_transient
gimp_drawable_preview_new
libgimpwidgets-2.0.so.0
gimp_rgb_get_uchar
g_malloc0
gtk_check_button_new_with_mnemonic
gimp_radio_button_update
gimp_double_adjustment_update
gimp_preview_draw_buffer
gimp_toggle_button_update
gimp_int_radio_group_new
gimp_preview_invalidate
gimp_scale_entry_new
gimp_help_set_help_data
gimp_preview_get_position
gimp_preview_get_size
libgimpmodule-2.0.so.0
libgimp-2.0.so.0
gimp_locale_directory
gimp_tile_height
gimp_drawable_update
gimp_progress_init
gimp_drawable_is_gray
gimp_tile_ref
gimp_tile_unref
gimp_drawable_get_tile
gimp_drawable_merge_shadow
gimp_install_procedure
gimp_drawable_is_rgb
gimp_tile_width
gimp_plugin_menu_register
gimp_main
gimp_displays_flush
gimp_drawable_flush
gimp_tile_cache_ntiles
gimp_progress_update
gimp_pixel_rgn_get_pixel
libgimpmath-2.0.so.0
libm.so.6
sincos
libgimpconfig-2.0.so.0
libgimpcolor-2.0.so.0
gimp_rgb_to_hsv_int
gimp_hsv_to_rgb_int
libgimpbase-2.0.so.0
libgtk-x11-2.0.so.0
libgdk-x11-2.0.so.0
libatk-1.0.so.0
libgio-2.0.so.0
libpangoft2-1.0.so.0
libpangocairo-1.0.so.0
libgdk_pixbuf-2.0.so.0
libcairo.so.2
libpango-1.0.so.0
libfreetype.so.6
libfontconfig.so.1
libgobject-2.0.so.0
libgthread-2.0.so.0
librt.so.1
libglib-2.0.so.0
g_rand_double_range
g_rand_free
g_rand_double
g_rand_new
libpthread.so.0
libc.so.6
dcgettext
__stack_chk_fail
bind_textdomain_codeset
memset
__cxa_finalize
bindtextdomain
__libc_start_main
_edata
__bss_start
_end
/usr/lib64
__libc_csu_fini
__libc_csu_init
GLIBC_2.4
GLIBC_2.2.5
%zX 
%rX 
%jX 
%bX 
%ZX 
%RX 
%JX 
%BX 
%:X 
%2X 
%*X 
%"X 
%zW 
%rW 
%jW 
%bW 
%ZW 
%RW 
%JW 
%BW 
%:W 
%2W 
%*W 
%"W 
%zV 
%rV 
%jV 
%bV 
%ZV 
%RV 
=TN 
=xV 
=iV 
fffff.
=8M 
="M 
D$(H
AWAVAUATUS
\$pH
l$01
t2fD
\$hfA
l$01
T$hfA
[]A\A]A^A_
l$0L
l$0L
l$0L
L$pD
\$hL
l$0L
L$pD
T$hL
ffffff.
AWAVAUATUSH
5(> 
l$xL
l$xH
|$pI
L$h9
D$hf
.%K"
\$0f
gfff
[]A\A]A^A_
Y\$pD
Yl$xD
D$ H
\$0D
D$ H
\$0f
l$xI
L$x9L$hu
AWAVAUA
[]A\A]A^A_
|$pH
t$xH
t$pE1
t$xH
|$pI
t$xH
D$PA
t$xH
|$pI
t$xI
t$xH
t$xH
t$pH
t$xH
t$pH
D$8H
D$ H
t$xH
=+  
5+  
-+  
%+  
.=<	
l$ L
t$(L
|$0H
Version 1.27, September 2003
John Beale
plug-in-sparkle
RGB*, GRAY*
_Sparkle...
gimp20-std-plug-ins
UTF-8
Sparkle
gimp-sparkle
gtk-ok
gtk-cancel
invalidated
Luminosity _threshold:
value-changed
Adjust the flare intensity
F_lare intensity:
Adjust the spike length
_Spike length:
Adjust the number of spikes
Sp_ike points:
Spi_ke angle (-1: random):
Adjust the spike density
Spik_e density:
Tr_ansparency:
_Random hue:
Rando_m saturation:
_Preserve luminosity
toggled
In_verse
A_dd border
_Background color
_Foreground color
_Natural color
Use the color of the image
Use the foreground color
Use the background color
Sparkling
run-mode
Input image (unused)
Input drawable
lum-threshold
flare-inten
Flare intensity (0.0 - 1.0)
spike-len
Spike length (in pixels)
spike-pts
# of spike points
spike-angle
Spike density (0.0 - 1.0)
transparency
Transparency (0.0 - 1.0)
random-hue
Random hue (0.0 - 1.0)
random-saturation
Random saturation (0.0 - 1.0)
preserve-luminosity
inverse
Inverse (TRUE/FALSE)
Add border (TRUE/FALSE)
color-type
John Beale, & (ported to GIMP v0.54) Michael J. Hammel & ted to GIMP v1.0) & Seth Burgess & Spencer Kimball
Uses a percentage based luminoisty threhsold to find candidate pixels for adding some sparkles (spikes). 
Turn bright spots into starry sparkles
<Image>/Filters/Light and Shadow/Light
Region selected for filter is empty
Adjust the luminosity threshold
Adjust the spike angle (-1 causes a random angle to be chosen)
Adjust the opacity of the spikes
Adjust how much the hue should be changed randomly
Adjust how much the saturation should be changed randomly
Should the luminosity be preserved?
Should the effect be inversed?
Draw a border of spikes around the image
The run mode { RUN-INTERACTIVE (0), RUN-NONINTERACTIVE (1) }
Luminosity threshold (0.0 - 1.0)
Spike angle (0-360 degrees, -1: random)
Preserve luminosity (TRUE/FALSE)
Color of sparkles: { NATURAL (0), FOREGROUND (1), BACKGROUND (2) }
?ffffff
MbP?
;*3$"
MbP?
sparkle.debug
.data
.rodata
.shstrtab
.dynamic
.note.gnu.build-id
.eh_frame
.note.ABI-tag
.gnu.hash
.fini
.gnu_debuglink
.dynsym
.gnu.version
.rela.dyn
.data.rel.ro
.interp
.gnu.version_r
.jcr
.eh_frame_hdr
.dynstr
.bss
.init
.rela.plt
.got
.text
.fini_array
.init_array
