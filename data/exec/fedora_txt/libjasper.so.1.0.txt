H!xE
H uK
	B#F	F
' A#
AS($4
@z C
2/A=MhZ
S./	
CDfVx
B=b1
&[Z5
 Mq]
|rWpk7B
2PcS
kWJD
W^KjW
nsG\
|%VX
HRxhZ
de::}
.jy(
z xm
__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
jas_dummy
jas_iccprof_createfromcmprof
jas_iccprof_copy
jas_clrspc_numchans
abort
jas_free
__assert_fail
jas_cmxform_destroy
jas_cmxform_apply
jas_malloc
jas_realloc
jas_cmxform_create
memset
jas_cmprof_copy
jas_cmprof_destroy
jas_iccprof_destroy
floor
ceil
memmove
jas_iccprof_getattr
jas_iccattrval_destroy
jas_cmprof_createfromiccprof
jas_iccprof_gethdr
jas_cmprof_createfromclrspc
jas_iccprof_createfromclrspc
jas_setdbglevel
jas_getdbglevel
jas_memdump
__fprintf_chk
fputc
jas_eprintf
stderr
__vfprintf_chk
strcmp
jas_getopt
jas_optind
strlen
jas_opterr
jas_optarg
jas_image_getfmt
jas_image_rawsize
jas_image_lookupfmtbyid
jas_image_fmttostr
jas_image_encode
jas_image_getcmptbytype
jas_image_ishomosamp
jas_image_clearfmts
jas_image_readcmptsample
jas_stream_seek
jas_stream_fillbuf
jas_image_readcmpt2
jas_stream_flushbuf
jas_image_writecmpt2
jas_image_writecmptsample
jas_image_writecmpt
jas_image_dump
jas_image_create0
jas_stream_memopen
jas_stream_copy
jas_image_copycmpt
jas_image_lookupfmtbyname
jas_image_strtofmt
jas_stream_close
jas_stream_tmpfile
jas_image_fmtfromname
strrchr
jas_image_addfmt
jas_strdup
jas_image_readcmpt
jas_matrix_resize
jas_image_destroy
jas_image_decode
jas_image_copy
jas_image_create
jas_image_delcmpt
jas_image_addcmpt
jas_image_sampcmpt
jas_stream_rewind
jas_image_chclrspc
jas_image_depalettize
memcpy
jas_iccprof_sethdr
jas_iccattrvalinfos
jas_iccattrval_clone
jas_stream_puts
jas_stream_read
jas_stream_write
jas_stream_pad
jas_stream_gobble
jas_iccattrval_allowmodify
jas_iccattrval_create
__ctype_b_loc
jas_iccattrval_dump
__stack_chk_fail
jas_iccattrtab_dump
fwrite
jas_iccprof_dump
jas_iccprof_save
jas_iccprof_setattr
jas_iccprof_load
qsort
jas_iccprof_createfrombuf
jas_iccprofdata_sgraylen
jas_iccprofdata_sgray
jas_iccprofdata_srgblen
jas_iccprofdata_srgb
jas_cleanup
jas_init
mif_decode
mif_encode
mif_validate
pnm_decode
pnm_encode
pnm_validate
bmp_decode
bmp_encode
bmp_validate
ras_decode
ras_encode
ras_validate
jp2_decode
jp2_encode
jp2_validate
jpc_decode
jpc_encode
jpc_validate
jpg_decode
jpg_encode
jpg_validate
pgx_decode
pgx_encode
pgx_validate
jas_calloc
jas_matrix_cmp
jas_matrix_divpow2
jas_matrix_clip
jas_matrix_asl
jas_matrix_setall
jas_seq2d_output
__sprintf_chk
fputs
__strcat_chk
jas_matrix_asr
jas_matrix_destroy
jas_matrix_bindsub
jas_seq2d_bindsub
jas_matrix_create
jas_matrix_copy
jas_seq2d_create
jas_seq2d_input
fscanf
jas_seq2d_copy
jas_stream_ungetc
jas_stream_isseekable
jas_stream_tell
jas_stream_setrwcount
jas_stream_flush
jas_stream_display
jas_stream_length
jas_stream_gets
jas_stream_putc_func
jas_stream_getc_func
unlink
lseek
jas_stream_printf
__vsprintf_chk
jas_stream_fdopen
jas_stream_freopen
tmpnam
jas_stream_fopen
fclose
fseek
fread
strcpy
jas_tmr_get
jas_tmr_stop
gettimeofday
jas_tmr_start
jas_tvparser_gettag
jas_tvparser_getval
jas_taginfo_nonull
jas_taginfos_lookup
jas_tvparser_next
jas_tvparser_destroy
jas_tvparser_create
jas_getversion
bmp_isgrayscalepal
bmp_numcmpts
bmp_info_destroy
bmp_info_create
jp2_boxinfolookup
jp2_boxinfos
jp2_boxinfo_unk
jp2_cdef_lookup
jp2_box_destroy
jp2_box_put
jp2_box_dump
jp2_box_get
jp2_box_create
jpc_bitstream_pending
jpc_bitstream_needalign
jpc_bitstream_putbits
jpc_bitstream_outalign
jpc_bitstream_putbit_func
jpc_bitstream_fillbuf
jpc_bitstream_getbits
jpc_bitstream_inalign
jpc_bitstream_align
jpc_bitstream_getbit_func
jpc_bitstream_close
jpc_bitstream_sopen
jpc_putdata
jpc_getdata
jpc_putuint32
jpc_putuint16
jpc_putuint8
jpc_getuint32
jpc_getuint16
jpc_getuint8
jpc_ms_dump
jpc_ms_destroy
jpc_cstate_destroy
jpc_cstate_create
jpc_ms_create
jpc_putms
jpc_getms
jpc_seglist_insert
jpc_seglist_remove
jpc_streamlist_numstreams
jpc_pchglist_insert
jpc_pchg_copy
jpc_pchglist_remove
jpc_pchg_destroy
jpc_pchglist_numpchgs
jpc_ppxstabent_create
jpc_ppxstab_create
jpc_seg_alloc
jpc_ppxstabent_destroy
jpc_ppxstab_destroy
jpc_streamlist_create
jpc_pchglist_create
jpc_streamlist_get
jpc_dec_decodecblks
jpc_tsfb_synthesize
jpc_iict
jpc_irct
jpc_streamlist_destroy
jpc_seg_destroy
jpc_pchglist_destroy
jpc_mqdec_destroy
jpc_tagtree_destroy
jpc_tsfb_destroy
jpc_pi_destroy
jpc_streamlist_remove
jpc_pptstabwrite
jpc_cod_gettsfb
jpc_tsfb_getbands
JPC_NOMINALGAIN
jpc_tagtree_create
jpc_dec_pi_create
jpc_pchglist_get
jpc_pi_addpchg
jpc_pi_init
jpc_dec_decodepkts
jpc_ppxstab_grow
jpc_ppxstab_insert
jpc_streamlist_insert
jpc_ppmstabtostreams
jpc_pchglist_copy
decopts
__strtol_internal
jpc_initluts
jpc_dec_mstab
jpc_quantize
jpc_enc_dump
dump_layeringinfo
dump_passes
jpc_enc_cp_destroy
jpc_mqenc_destroy
jpc_enc_tile_destroy
calcrdslopes
jpc_enc_tile_create
jpc_enc_pi_create
rateallocate
jpc_init_t2state
jpc_save_t2state
jpc_enc_encpkt
jpc_restore_t2state
jpc_enc_encodetiledata
jpc_enc_encpkts
jpc_enc_destroy
jpc_enc_create
ratestrtosize
strchr
__strtod_internal
jpc_firstone
jpc_mct_getsynweight
jpc_tsfb_analyze
jpc_ict
jpc_rct
jpc_enc_enccblks
encopts
jpc_floorlog2
modetab
prgordtab
jpc_atoaf
jpc_mqstates
jpc_mqdec_setinput
jpc_mqdec_setctxs
jpc_mqdec_setctx
jpc_mqdec_dump
jpc_mqdec_lpsexchrenormd
jpc_mqdec_mpsexchrenormd
jpc_mqdec_getbit_func
jpc_mqdec_init
jpc_mqdec_create
jpc_mqenc_init
jpc_mqenc_setctxs
jpc_mqenc_getstate
jpc_mqenc_dump
jpc_mqenc_codelps
jpc_mqenc_codemps2
jpc_mqenc_putbit_func
jpc_mqenc_flush
jpc_mqenc_create
jpc_ft_fwdlift_row
jpc_ft_fwdlift_col
jpc_ft_fwdlift_colgrp
jpc_ft_fwdlift_colres
jpc_ft_invlift_row
jpc_ft_invlift_col
jpc_ft_invlift_colgrp
jpc_ft_invlift_colres
jpc_ns_fwdlift_row
jpc_ns_fwdlift_colgrp
jpc_ns_fwdlift_colres
jpc_ns_fwdlift_col
jpc_ns_invlift_row
jpc_ns_invlift_colgrp
jpc_ns_invlift_colres
jpc_ns_invlift_col
jpc_qmfb_join_colres
jpc_qmfb_join_colgrp
jpc_qmfb_join_col
jpc_qmfb_join_row
jpc_ns_synthesize
jpc_ft_synthesize
jpc_qmfb_split_colres
jpc_qmfb_split_colgrp
jpc_qmfb_split_col
jpc_qmfb_split_row
jpc_ns_analyze
jpc_ft_analyze
jpc_ft_lpenergywts
jpc_ft_hpenergywts
jpc_ns_lpenergywts
jpc_ns_hpenergywts
jpc_ft_qmfb2d
jpc_ns_qmfb2d
jpc_tagtree_reset
jpc_tagtree_getleaf
jpc_tagtree_dump
jpc_tagtree_setvalue
jpc_tagtree_copy
jpc_tagtree_decode
jpc_tagtree_encode
jpc_getspb
jpc_initctxs
jpc_initmqctxs
jpc_mqctxs
jpc_pow2i
jpc_getmagctxno
jpc_getscctxno
jpc_getzcctxno
jpc_getsignmsedec_func
jpc_signmsedec0
jpc_signmsedec
JPC_PASSTYPE
JPC_SEGPASSCNT
JPC_ISTERMINATED
JPC_SEGTYPE
jpc_zcctxnolut
jpc_spblut
jpc_scctxnolut
jpc_magctxnolut
jpc_refnmsedec
jpc_refnmsedec0
getthebyte
jpc_enc_enccblk
jpc_tsfb_analyze2
jpc_tsfb_synthesize2
jpc_tsfb_getbands2
jpc_pi_create0
jpc_pi_next
jpc_dec_lookahead
jpc_seq_upsample
jpc_seq_conv
jpc_seq_norm
sqrt
strncpy
strtok
jpeg_std_error
jpeg_CreateDecompress
jpeg_stdio_src
jpeg_read_header
jpeg_start_decompress
jpeg_read_scanlines
jpeg_finish_decompress
jpeg_destroy_decompress
jpg_opttab
sscanf
jpeg_CreateCompress
jpeg_stdio_dest
jpeg_set_defaults
jpeg_set_quality
jpeg_default_colorspace
jpeg_start_compress
jpeg_write_scanlines
jpeg_finish_compress
jpeg_destroy_compress
fgetc
mif_tags2
mif_tags
pgx_dumphdr
pnm_maxvaltodepth
pnm_fmt
pnm_type
pnm_opttab
ras_dummy
libm.so.6
libjpeg.so.62
libc.so.6
__cxa_atexit
_edata
__bss_start
_end
libjasper.so.1
GLIBC_2.2.5
GLIBC_2.4
GLIBC_2.3
GLIBC_2.3.4
%z	$
%r	$
%j	$
%b	$
%Z	$
%R	$
%J	$
%B	$
%:	$
%2	$
%*	$
%"	$
=95$
.5c.
 baLtP
 ZYX
 BGRt#
rbCYt;
YARG
}=Hc
D9@@H
D9@(H
t$$D+t$(D;t$
HcD$(H
L$HL
T$PH
D$0Hc
D$HA
D$HD
D$,H
L$HE
L$0Mc
LcT$,H
|$PE1
9t$\
T$@I
H94$L
HcD$(I
D$8Ic
D9\$ 
T$(9T$$~
tQA9
[]A\A]
u4z2A
t(Hc
ATUSH
~RE1
[]A\A]
[]A\A]
u,E1
l$ L
d$(L
l$0L
t$8L
|$@H
t$ H
AWAVI
AUATUSH
[]A\A]A^A_
d$ f
AWAVA
AUATUSH
D$ H
[]A\A]A^A_
AVAUATI
[]A\A]A^
[]A\A]A^
CRTrH
CRTgH
CRTbH
ZYXrH
ZYXgH
ZYXbH
vruc
D$pH
 ZYX
vruc
D$xH
 ZYX
vruc
 ZYX
D$pH
L$pH
T$pH
D$(H
D$HH
CRTk
l$ L
d$(L
l$0L
t$8L
|$@H
vrucu
|$ 1
l$ H
AUATI
tyE1
[]A\A]A^A_
t$(H
L$8L
D$@L
L$HH
D$ H
l$ L
t$(L
|$0H
-t:L
S~0H
[]A\
G E1
B HcR0H
~%9=
898t	
D9O 
W(Hc
H9pHu
H9pHt
ATHc
M HcE@H
]@E1
H;GX~A
[]A\
[]A\
[]A\
ATUSH
H;CX~c
[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^A_
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
;w }
G(Hc
N L9
V(L9
D$ L
|$`H
IcF@1
D$ H
H9l$
H9\$
AUATUSH
H;SX~
C0x9H
[]A\A]A^
[]A\A]A^1
l$ L
d$(L
l$0L
t$8L
|$@H
;w }
G(Hc
N L9
V(L9
|$PH
IcF@1
H9l$
H9\$
AVHc
AUATM
M IcE@I
C(ucA
H;CX~2
[]A\A]A^
[]A\A]A^
\$HH
l$PL
d$XL
l$`L
t$hL
|$pH
;w }
G(Hc
U H9
u(H9
A(H9
Q0L9
T$(u
t$ IcE@1
D$(H
T$8H
D$@H
T$0E
T$0A
D$`H
I;D$X
D$0A
D$(I
D$ H9D$
AWAVAUI
ATUSH
T$8H
t$4A
|$ H
T$8H
D$(E)
t$4H
|$ Ic
T$49P 
[]A\A]A^A_
tYHc
~*Hc
G$9G A
U(Hc
S D9
l$ H
{(Ic
ATUSH
[]A\A]
l$(I
D$PA
\$ A
D$4H
D$PH
D$@H
H;WX~r
G0xsH
|$81
l$ L
d$(L
l$0L
t$8L
|$@H
l$ H
l$ H
\$py)
\$8H
l$@L
d$HL
l$PL
t$XL
|$`H
;w }
G(Hc
W L9
O(L9
L9K(u
L9C0f
D$(1
H+D$(H
IcG@1
T$(L
d$ H
T$0A
H;WX
T$0H
H9l$
ATUH
}(E1
D9e 
AUATUS
~OE1
E9n ~4I
\$(H
A\A]A^
D$8t
A\A]A^
AVAUATUH
L$$1
D$ L
\$(H
HcE0H
[]A\A]A^A_
T$$9
HcC0H
T$ 9
D$(A
l$ L
d$(L
l$0H
|$(Hc
S(Hc
d$PL)
l$XL
L$`H
D$hH
D$,H
T$PA
HcD$,H
D$pIc
D$0H
D$8Ic
D$ L
|$HD
L$,L
T$ H
\$@H
t$0L
H;D$0H
D$8L
H;D$8L
U H9
H;E(
HcE@H
T$ H
]0H9Z0
\$ H
H9D$@
H9T$H
+L+u
AWAVAUATUSH
l$pL
d$xLc
;l$TH
T$pH
T$8H
[]A\A]A^A_
L$(H
L$(E1
D$0H
T$HI
G8E1
D$DH
t$H1
D$PHc
D$PH
HcD$`H
V(Hc
D;d$Pt0D
T$THc
l$TH
HcD$`H
W(Hc
D;d$Tt=D
d$dE1
~yLcd$`1
;\$Pta
|$hH
~ZLcd$`1
;\$TtB
D$dI
\$TE
;\$Tu
T$PE
;l$Pu
AUATUS
T$0I
D$0I
D$8I
D$@I
D$HI
D$PI
D$XD
D$`D
D9|$
D$(1
d$ ~S
H;T$
MD$(H
I9] 
D$ I9E(
[]A\A]A^A_
F(HcT$
t#H9
H90H
|$PA
l$`A
\$x@
[]A\A]
[]A\A]H
AUE1
FxA\A]A^H
AUE1
FxA\A]A^H
ATUSH
C(uS
H;CX~C
[]A\A]
[]A\A]
[]A\
[]A\1
H;FX
D$0A
D$`H
I;D$X
D$0A
D$(A
D$`H
I;D$X
D$0A
D$(A
D$`H
I;D$X
D$0A
D$(I
D$(E1
t$ H
H;FX
D$0A
D$(A
D$`H
I;D$X
D$0A
D$(A
D$`H
I;D$X
D$0A
D$(A
D$`H
I;D$X
D$0A
D$(I
D$(E1
t$ H
H;GX~,
G0x3H
ATE1
H;CX~B
[]A\A]
[]A\A]
[]A\A]
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
I;UX
;D$$
UxE1
~+E1
D9d$
,;\$
l$ L
d$(L
l$0L
t$8L
|$@H
I;UX
U`E1
UxE1
[]A\A]A^
H;SX~-
C0x+H
t$ H
H;SX
H;SX~w
l$ H
T$`H
I;T$X
D$0xlI
D$(I
d$ H
AUATUSH
D$H1
|$ 1
D$0E1
D$ H
\$(H
D$ H
D$HdH3
X[]A\A]A^A_
AUATUSH
t$ Hc8H
D$(1
D$0H
|$(L
D$0I
I(H;p
|$(H
(A;.}0I
|$ M
8[]A\A]A^A_
|$ I
|$ I
|$ 1
~lE1
D$(H
D$0H
D$(H
|$ 1
|$(H
t$ H
|$(A
|uuRA
|$ 1
t(Hc
l$ H
toHc
l$ H
AVAUATUSH
[]A\A]L
[]A\A]A^
l$@H
\$8L
d$HL
l$PL
t$XL
|$`H
D$(H
|$ L
t$0H
|$0I
D$ (
W(L;V(St
O0H;N0u
	~UH
H;GP~
H;G@
G0~*L
W8E1
AVAUI
ATUH
H;]0I
H;]0
H9E(
[]A\A]A^A_
C8Lc
H9s(
[]A\A]A^A_
AUE1
P(Hc
H9CP
[]A\A]
H9C0
L9S(
l$ H
l$0H
\$(L
d$8L
l$@L
t$HL
|$PH
L$$H
T$ H
P(HcD$$H9
HcD$ H9C0t
H9C0~+H
L9s(
t_E1
H9C0
L9S(
atKf
bt"~
HcGXH
C0yh
[]A\1
[]A\
[]A\
[]A\
S(uC
H;CX~8
[]A\A]
S(uH
H;CX~<
ATE1
S(uKA
H;CX~5
[]A\A]
[]A\A]
C H)
C0~>
AUATUSH
D$81
D+l$
l$ E1
H;CX
D$ E1
T$ H
,$E1
D;|$
T$8dH3
H[]A\A]A^A_
ATUH
H;CX
H;EX~%
[]A\A]A^
[]A\A]A^
C(u@
H;CX~/
ATE1
H;CX~/
[]A\A]
[]A\A]
 u<H
HcG0H)
H;CX~U
C0x7H
[]A\A]
O(HcG H
H;GX~:
H;GX~2
t$ H
d$ H
+~CIc
l$ H
D$PH
D$HL
D$PH
D$H1
l$ H
[]A\
[]A\
u*H;G
G H;G(H
 H;B0u
t"Hc
[]A\
<$Bu
ATUSH
C`E1
H;CX
C0xYH
[]A\A]
[]A\A]
H;GX
H;CX~=
C0xiH
<$(t L
t$ H
t$(H
t$0H
t$8H
t$@H
t$HH
t$PH
t$XH
|$PH
\$`A
H;UX
H;UX
H;UX
H;UX~b
E0xhH
M;l$P
D$(H
D$PH
H;UX
t$`tSH
D$(H
t$ I
D$@H
;T$ u
;\$ u
L$(HcD$ I
D$$t
+D$$
T$8H
L$0H
D$(H
L$PH
H;UX
H;UX
H;UX
D$8H
L$8H
D$HI;D$
\$$H
H;UX
D$ L
9\$ 
L$8H
L$8H
D$0H
L$0H
D$(H
L$(H
H;UX
I;T$PA
D$`Hc
D$\u
D;t$ u
T$PI;T$
H;CX~u
C0xFH
[]A\
[]A\
H;GX~Y
x)H;SX
C0x.H
AUATUSH
[]A\A]A^A_
`0~dD
H9X uWH9h(uQD9`0uKD
L$ A
D$ L
T$ L
L$ L
D$ L
T$ L
L$ L
D$ L
T$ L
L$ L
D$ L
T$ H
I;VX
I;VX
I;VX
I;VX
F0xII
L$ H
H9YP~mA
T$p1
9D$,
9\$,
L$ HcD$,H
D$0t
+D$0
D$0H
L$pH
D$xH
l$4H
L$HH
D$@H
~TLcd$4H
L+d$hHcE
L$ 1
;\$,u
D$ H
T$HH
L$HH
D$@H
L$@H
D$8H
L$8H
I;VX
I;VX
I;VX
D$ H
T$`H9P
\$0I
I;VX
D$ H
9\$,
I;VX
F0x:I
H91H
H90t
ATUH
o(SH
[]A\A]
o(SH
[]A\
o(SH
[]A\
H;GX
C(tn
H;SX
C(t	
H;SX
H;SX
C0xeH
t%E1
H;GX~Z
C(tc
x%H;SX
C0x)H
o(ATUH
teE1
[]A\A]
[]A\A]
H;GX~C
G0xBH
o(SH
[]A\
[]A\1
H;GX
H;CX
H;CX
H;CX~Y
t3Hc
t$ H
H;GX
H;CX~G
C0xuH
t%Hc
l$ H
tVE1
H;GX~5
G0x?H
\$(H
l$0L
d$8L
l$@L
t$HL
|$PH
{(Hc
D$(I
T$`H
I;T$X
AUATL
g(UH
t_E1
$s+H
[]A\A]
[]A\A]
o(SH
[]A\
[]A\1
A;D$
t$ H
d$ I
d$ H
d$ L
l$(L
t$0H
D$`H
I;D$X
D$(I
t2Hc
 []A\
  Pjt
  Pjt[H
pytft&H
;H=fedc
H=pamc
H=ccpb
H=rloct2v
H=c2pj
H=rlcp
H=rdhiu
@ H9B8t
@ H9B(t
A9\$ w
u8tWH
@ L;
x0@8y	r#
@8x	
T$	H
Hc_ 
H;E8r
t$(A
L$ 1
L$0E1
|$(1
H;E8r
D$ L
t$ H
t$@H
D$@L
= BGRt
=rbCYf
=YARGf
T$0H
D$8H
L$0L
m@E1
|$(1
H;E8r
AUATI
G dH
H0~7H
;z4u
;r0u
  Pj
tDE1
[]A\A]A^A_
pytf
E( 2pjL
 2pj
rdhi
I+D$
IcD$ H
ccpb
Ic|$ H
D$(H
H93w
rloc
D$0=
D$(H
D$0=
D$(H
h2pj
c2pj
T$(H
fedc
Ic|$ H
T$ H
t$0M
L$(E1
A9D$ ~=K
H;GX
G0xIH
[]A\A]
[]A\A]
H;GX
G0xPH
H;AX
A0x6H
x,H;WX
G0xVH
dtFE1
t$ H
t"Hc
[]A\
H;GX
C(tn
H;SX
C(t	
H;SX
H;SX
C0xeH
H;GX~Z
C(tc
x%H;SX
C0x)H
[]A\A]
[]A\A]
H;GX~C
G0xBH
ATUH
X E1
 E9&~W
[]A\A]A^
[]A\A]A^1
ATUSH
~SE1
[]A\A]
H;GX
H;CX
H;CX
H;CX~Y
t3Hc
t$ H
H;GX
H;CX~G
C0xuH
t%Hc
H;GX~5
G0x?H
d$ H
l$ L
d$(L
l$0H
d$ L
l$(L
t$0H
[]A\1
A9,$
[]A\A]
[]A\A]
A9\$
[]A\A]
A9\$
[]A\A]
H;EHr
[]A\
t&H=
[]A\1
[]A\1
$v*H
[]A\A]A^
[]A\A]A^1
AWAVI
AUATI
[]A\A]A^A_
[]A\A]A^A_
l$ L
d$(L
l$0L
t$8L
|$@H
L;uHr
AVAUI
ATUH
[]A\A]A^
d$ L
l$(L
t$0H
~9E1
{	 I
l$ H
< wA
l$ H
l$ H
t~E1
H;CHr
~2E1
Te F
De!H
[]A\1
t1Hc
l$ H
l$ H
AUATUH
E!~(L
D9e$
[]A\A]
ATUH
~*E1
D9e$
[]A\A]
9GhH
9GhH
9GhH
 A9,$~DH
[]A\A]
[]A\A]
l$ H
 D9#~
A9,$
ATUH
}hHc
[]A\
Hc}hH
@@E1
H+E8H
H+E@H
XhE1
Hc}h
U8H9
U@H9
U8H9
hD9eP
AWAVAUATUSH
|$0H
L$0H
|$(H
T$xH
L$8I
D$pL
|$pI
D$hH
D$hL
L$HD
T$TD
HcD$PI
L$XH
I;G0}xH
T$XM
H9T$`~
T$XH
M9W(
T$(D
D$h0
T$D9P
D$p`D
|$@D9y(
D$8@
D$ D
|$hM
I;@0|
I;X(|
|$0H
L$(A
L$(H
L$(D
|$0H
B E1
I9@0~
M9H(
9Xh~&I
[]A\A]A^A_
T$(H
L$0I
s E1
H;F0|
L9N(
T$(H
|$(I
T$0L
L$0D9ah~BH
D$0L
|$(D
E9gh
L$0H
T$0L
|$0H)
A9,$
AWAVAUATUSH
|$0H
D$0H
|$(H
T$(L
v(E1
E9n(~
T$0A
D$(H
T$(H
D$(0
T$ 9P
D$0`
T$$9P(
9Ph~
[]A\A]A^A_
ATUH
~*E1
D9eP
[]A\
AUATUH
~EE1
[]A\A]A^
[]A\A]A^1
AWAVAUATUSH
|$(H
D$0t^D
[]A\A]A^A_
E9Y$~
L$0L
L$(H
D$0H
\$ H
L$xH
{(Hc
D$8H
T$0H
\$0H
L$ H
T$xH
\$PL
\$`H
T$hH
D$hH+D$PH
D$0H
D$8@L
\$ E
T$xH
T$xH
T$`H
D$XH
|$XH
H9D$XH
B H9
Ic|$
L$@E
L9t$Xw
D$HI
L;|$H
L;l$@
H9\$hw
D$PH
l$PH
t$0H
|$(1
T$0H
T$0H
L$0H
\$(H
L$0H
D$0H
T$01
L$0H
\$01
T$(L
\$(H
l$(I
A9l$(
9Ch~
9JP~
D$0H
\$(H
L$(H
pXH9
9BPt'H
\$0H
L$(1
|$(H
t$0H
D$(H
H;WX
G0x6H
VUUUA
T$0H
\$0H
t$Hc
H92v
H90w
[]A\
l$ H
}!Hc
AWAVAUATUSH
D;1}.H
[]A\A]A^A_
D;0}
BXH+E
A9UP|bH
A;FPt\
l$ L
t$(L
|$0H
A9UP}
}xIc
~5E1
E9g$L
|$pL
t H9
[]A\A]A^
[]A\A]A^
[]A\A]A^
Stw1
H9G0~%M
H9_(
AWAVAUATUSH
D$0H
T$0H
\$0H
IcD$(H9
IcF0I
IcFPH;D$(v	I
T$0H
H;D$ v	I
D$0x
HcBPH;D$
8[]A\A]A^A_
AWAVAUATUSH
|$HE
T$HD
D$PH
T$PH
D$PD
D$0H
D$8H
T$@H
`hE1
~ZD9s uT1
HD9s uD
T$,H
T$ D
A9l$
T$ D
D$@A
hD9h(
T$0A
D9z0~
D$@`
D$0A
D9PP~
D$8@
T$PA
D$0h
D$Px
T$,9PP
D$HA
D9p,
X[]A\A]A^A_
ATUSH
hP~SH
_HE1
[]A\A]
IcD$(H9
|$8H
|$@H
|$PH
|$XH
t	[]A\
[]A\
ATUSH
IcD$0H9
[]A\A]
[]A\A]
IcD$PH9
|$X[]A\
[]A\
|$ H
t	[]A\
[]A\
IcD$PH9
|$HH
|$8H
J8HcJ
\N8HcF
sUH9
.Z(s
sSH9
AWAVAUATUS
D$PH
T$HH
D$XH
L$XH
APHc
S(H9
T$XH
\$XH9
D$HH
Q0H9
{,Hc
HcK,1
\$HH
k`Hi
t$PH
L$HH
T$PH
t$PH
\$`H
T$HH
H+nXH
t$PI
L$P1
t$`H
T$HH)
|$@H
L$`H
\$HH
T$`H
t9Hc
\$HH
t$`H
T$HH
L$`H
\$`H
t$0L
L$0H
\$`H
T$`H
t$HHcU4D
HcU8H
Hc}PD
HcMP1
\$0M+e
t$0H)
D$HD
Hc}0H
HcM01
McQ(L
I#9A
Q@E1
IHE1
HcC(H
HcK(1
H+C0H
NHcK I
\$PA
D$8H
D$8I9
D$8H
T$(L
D$0L
T$(L
HcC(H;
H;D$h
HcE0H;D$xv
HcEPH;D$p
D$XH
[]A\A]A^A_
t$HH
H9F`v
D$`x
T$PH
\$HH
t$HH
H9V`w
t$PH
T$PH
@(l7
@(l7
AWAVAUATUSH
@XHc@PHi
IcFPH
\$0H
IcD$(H
E9n0~	I
L9D$p
D$(H
L$0H
D$@H
XL$0
hXHc
IcBPH
IcA(H
tkHc
.D$Hr
E9Z0~	I
PPHc
D9m0
I+L$
t$8H
H+PXH
@L9L$x
PPHc
~eE1
I+L$
t$8H
H+PXH
D9m0
[]A\A]A^A_
H9D$@
D$(H
t$`H
|$81
D$HH
.D$(v
D$PH
hXHc
Ic@PH
IcC(H
ttHc
T$\H
tBH9
.D$Pr
E9x0
L$0f
9\$$u
C t,H
l$ H
AWAVAUATUSH
A;}`|
[]A\A]A^A_
D$ H
T$@H
T$ H
|$(H
\$0I
H9l$(
T$0I
L$(H
D$8I9E`H
M9e`H
DQ I
DQ!A
H+T$
AWAVAUATUSH
D$0H
L$HI
D$01
~4Hc|$
H)8H
H9F0
L9N(
u0Ic
IcEPM
uXHi
D$ H
L$ HcAPH
D$0A
T$@H
HcT$,D
9D$<
MD$<
D$<HcC I
@H9\$
D$(A9
D$ h
X[]A\A]A^A_
D$(A9
;D$<
D$@0
L9t$
L$HH
t$0M
IcE,H
Dr H
D8$H
D$0M
t$<H
T$0L
u&H9
T$0H
L$0H
D$0I
t$0f
L$0I
UHE1
t$0H
D$TH
T$0H
I1E`
AUATUSH
~yE1
E;e`|
D$0H
|$8H
H[]A\A]A^A_
H+T$
H9L$
I+E(I
E I+E0I
\$0A
L$(M
I+E0H
EXtw
\$0H
D$0H
H9r0u
_ H9Z u
_(H9Z(u
T$8H
t$DH
D$0H
|$8H
Y2t	
AWAVAUATUSH
N(Hc
H;J(t
N0Ic
H;J0t
v8E1
[]A\A]A^A_
AWAVAUATUSH
N(Hc
H;J(t
N0Ic
H;J0t
[]A\A]A^A_
O0Hc
N0Hc
L;B(u
H;J0u
v8E1
z8E1
<~=A
l$ L
t$(L
|$0H
O0Hc
N0Hc
L;B(u
H;J0u
v8E1
z8E1
<~<A
l$ L
t$(L
|$0H
H+K H
[A\H
H;WX~h
H;WX~h
H;WX~p
H;WX
G0xnH
t>Hc
E t5H
H;OX
H;OX
H;WX
x(H;WX
G0xkH
H;OX
H;OX
H;WX
x(H;WX
G0xrH
H;WX
H;OX
H;OX
x`H;WX
G0xvH
H;OX
H;WX
H;OX
H;WX
H;OX
H;OX
H;OX
H;OX
H;OX
H;WX
H;WX
H;WX
H;WX
H;WX
xSH;WX
t7Hc
C t.H
AVAUA
~LIc
~WIc
[]A\A]A^A_
'[]A\A]A^A_
AVAUATA
~kHcD$
D;d$
D;d$
~oHcD$
D;d$
[]A\A]A^A_
HcD$
HcD$
[]A\A]A^A_
AVAUI
ATUS
~tHcD$
D;|$
D;|$
HcD$
D;|$
[]A\A]A^A_
HcD$
HcD$
[]A\A]A^A_
t'[]A\
[]A\
~YIc
uvA)
~MIc
t6[]A\A]A^A_
[]A\A]A^A_
[]A\A]A^H
AUATU
~vHcD$
~mHcD$
tp[]A\A]A^A_
HcD$
HcD$
[]A\A]A^A_
[]A\A]A^A_
AWAVE
AUATUS
D9t$
~vHcD$
D;t$
D;t$
~xHcD$
D;t$
t~[]A\A]A^A_
HcD$
HcD$
[]A\A]A^A_
[]A\A]A^A_
[]A\A]
AVAUI
ATUS
~lHcD$
D;|$
D;|$
~{HcD$
D;|$
~}HcD$
D;|$
~oHcD$
D;|$
~QHcD$
[]A\A]A^A_
HcD$
HcD$
HcD$
HcD$
HcD$
AVAUATUS
D+l$
HcD$
HcD$
HcD$
HcD$
~XHcD$
D;D$
[]A\A]A^A_
HcD$
HcD$
HcD$
HcD$
HcD$
ATUH
~QIc
D;l$
D;l$
~UIc
D;l$
~SIc
D;l$
~RIc
D;l$
~,Ic
~*Ic
[]A\A]A^A_
th[]
ATUS
~uIc
D;t$
D;t$
~uIc
D;t$
~sIc
D;t$
~pIc
D;t$
tn[]A\A]A^A_
[]A\A]A^A_
AVAUATUS
HcD$
HcD$
HcD$
~wHcD$
HcD$
~yHcD$
HcD$
HcD$
tu[]A\A]A^A_
HcD$
[]A\A]A^A_
ATUH
~0Hc
~.Ic
~TIc
~XIc
~RIc
~VIc
[]A\A]A^A_
[]A\A]A^A_
AWAVA
ATSH
~_Hc
dH34%(
[A\A]A^A_
AWAVA
ATSH
~RIc
[A\A]A^A_
AVAUI
~/Hc
[A\A]A^
~.Ic
~#Hc
<$~:Ic
[]A\A]A^A_
ATUH
~<Ic
~6E1
[]A\A]A^A_
AVAUATSH
dH34%(
[A\A]A^A_
AWAVA
AUATA
[A\A]A^A_
AWAVAUI
ATSH
[A\A]A^A_
AUATSH
~"Ic
[A\A]
AWAVE
~?HcD$
[]A\A]A^A_
AWAVE
~?HcD$
[]A\A]A^A_
ATUSH
[]A\A]
AWAVAUA
~J;]
~;9]
[]A\A]A^A_
AWAVAUA
ATUH
E9t$
A9\$
H;GX
[]A\A]A^A_
L9<$E
H;WX
G0xEH
AWAVAUATU
~`Kc
[]A\A]A^A_
VUUUH
AWAVAUATE1
\D$P
^D$ @
\D$P
YD$(
^D$0
ZD$T
YD$8
^D$@
X[]A\A]A^A_
AVAUA
T$<H
T$H	
D$@Ic
T$4H
D$ Hc
D$(Hc
D$`H
T$pH
ND$4D
t$<H
l$@H
D$ H
I)D$
D$ H
I)D$
HcT$8H
\$XH
D$HH
D$ H
I)D$
D$ H
I)D$
H+T$
HcD$
L$XH
\$pH
D$ H
I)D$
D$ H
I)D$
H+T$
HcT$
L$XH
\$HH
L$`H
D$ H
I)D$
D$ H
I)D$
H+T$
HcD$
D$4H
L$pH
\$ H
L$HH
H+L$
HcT$
@HcD$8H
@HcT$8H
[]A\A]A^A_
@HcD$8H
I8E1
AVAUI
ATUSH
T$@	
D$$H
D$8Hc
t$@H
ND$$E
t$8H
T$PI
T$8L
t$`H
D$XH)
T$hH
HcD$,H
t$HH
t$hH
D$,I
D$@H
D$xH
L$HH
T$`H
D$,I
t$HH
T$PH
L$XH
D$,H
t$HH
D$@H
D$xH
D$4H
H9D$H
T$pH
D$,H
L$pH
D$hHcT$,H
[]A\A]A^A_
L$`HcT$,H
t$PH
D$XHcT$,H
|$$H
AWAVAUATUSH
|$`H
D$tH
L$hH
t$xH
L$xH
T$XH
D$hH
H+BHH
L$XH
\$PD
|$`H
t$XH
T$PH
\$XH
t$PH
VUUUH
D+B 
+Q(D
D$ D
H;\$ 
|SHc
[]A\A]A^A_
L$XH
\$PH
L$,L
\$<H
D$0f
T$ I
I)D$
T$ I
I)D$
I)D$
D$,H
T$ H
I)D$
T$ H
I)D$
HcD$<Hc
D$,H
T$ H
I)D$
T$ H
I)D$
HcD$<3
D$,H
T$ H
I)D$
T$ H
I)D$
HcD$<3
D$,H
T$ H
I)D$
T$ H
I)D$
HcD$<3
T$0H
T$ I
I)D$
I)D$
I)D$
I)D$
T$HH
T$@H
|$@H
D$HH
H;l$
\$XH
t$PH
|$`H
J8E1
D$x`
L$XH
D$h@
AWAVAUATI
t$DI
d$@E
T$8H
D$HHc
D$ Hc
D$(Hc
D$0Ic
D$DE
NL$8H
\$PL
T$\H
T$(H
D$PH
T$PH
D$`H
D$PH
T$hH
\$HH
t$DH
D$@H
D$ H
D$(D9j
T$pE1
D$@A
D$ H
D$(D9z
t$pH
D$ H
D$(D
H+D$ H
T$ H
T$hE1
D$@A
D$ H
D$(D9z
t$hH
D$ H
D$(D
H+D$ H
T$ H
T$`E1
D$@A
D$ H
D$(D9z
t$`H
D$ H
D$(D
H+D$ H
T$ H
D$ H
D$(D
T$8H
T$0H
H+T$ H
L$pH
[]A\A]A^A_
L$hH
L$`H
AWAVAUATUSH
T$<I
d$8E
D$(Ic
L$4H
L$ H
D$xHc
D$`H
|$XH
ND$4
|$`H
D$ L
t$XH
D$@D
d$<M
D$PH
L$HH
|$HH
D$pH
D$@H
D$ H
L$ H
H;GX
[]A\A]A^A_
|$HH
H;GX
H;GX
H;GX
T$(D
T$4H
D$xH
T$XH
D$PH
T$hE
AWAVAUATUSH
t$<A
d$8E
t$HD
T$4H
D$@Ic
L$@H
D$ Ic
D$(Hc
D$HH
T$pH
T$@H
L$xH
NL$4
L$HE1
t$@H
T$PI
T$@H
T$hH
D$XI
D$@I
L$@J
t$@J
T$xJ
T$8@
D$hH
T$xH
D$xJ
T$xJ
t$pH
T$8@
T$pH
T$pH
D$`H
T$8@
D$PH
T$XH
D$<I
t$@J
D$HJ
T$8@
T$HH
t$@J
T$@I
H;GX
[]A\A]A^A_
L$hH
t$xH
L$HJ
H;GX
H;GX
T$`H
H;GX
H;GX
L$PH
t$XH
H;GX
H;GX
L$pH
L$pH
H;GX
D$(D
l$4H
T$ H
T$xH
T$@H
q8E1
AVAUATUSH
T$@H
L$8L
D$0H
T$0H
~HHc
t$0H
D$0H
T$0Hc
t$0H
L$@H
L$0H
D$@1
t$0H
T$0H
T$PH
t$0H
D$PH
L$@H
L$`t
D$dH
VUUUUUUUH
T$0H
t$PH
|$XL
T$`H
L$0H
)D$P9
T$0H
t$PH
|$XL
T$`H
D$0H
|$XH
D$0H
T$0H
D$0H
t$0H
L$8H
L$PD
D$ H
D$ H
L$(1
L$PH
L$ I
L$(H
D$ H
L$(1
l$PH
55q!
L$ I
L$(H
D$ H
L$(1
\$PH
L$ I
L$(H
D$ H
5*p!
L$(1
T$PH
L$ I
L$(H
L$ H
D$L 
t$dL
t$0H
d$pH
D$xIc
ND$tH
t$hH
L$ H
L$(H
t$dH
L$0H
l$tH
L$hH
t$(H
\$dE
t$dH
L$ H
L$(9B
D$(H
L$0H
L$0H
t$8H
t$PH
L$(H
t$$H
HcD$$H
]HE1
D$0H
[]A\A]A^A_
AWAVAUATUSH
pXHc@PHi
IcGPH
T$0H
HcB(H
y0E1
D$0H
X0I9
IcG0H;D$(v.H
D$0`
8[]A\A]A^A_
@L9l$ 
hL9|$
L9t$
L$PA
D$XE
l$ L
d$(L
l$0L
t$8L
|$@H
V8E1
D$XI
L$PA
l$ L
d$(L
l$0L
t$8L
|$@H
D$PD
V8E1
|$0A
D$,E
\$xE
T$ H
T$ D
t$8D)
l$<D
D$0E)
\$@H
l$HL
d$PL
l$XL
t$`L
|$hH
\$,D
D$xD
\$0D
D$(D
D$(H
 A9p
A9,$
AUATUSH
A9l$
[]A\A]L
AWAVAUATUH
~UE1
E@D)
}	;U
E4;E
U,;U
E(;E
E0A;
E0A;
~UE1
E@D)
}<;}T
u8;uP
}<;}T
HcE0H
M4;M
L$@A
UL9uH
T$DA
D$0Hc
T$<I
\$DE
9|$DHc
HcD$<I
L$@)
l$0A
+D$0
E0A;
M4;M
HcE0H
H[]A\A]A^A_
HcE0L
E0A;
U,;U
E4;E
E(;E
HcE0H
M4;M
E(D9
E,A;
9uHH
HcD$
L$(A
UL9uH
T$,A
T$$I
\$,E
9|$,Hc
HcD$$I
L$()
E0A;
u8;uP
}<;}T
u8;uP}nA
E(;E
}%A;C
D$0D
HcT$
AUATI
[]A\A]
AUATUSH
~EE1
D9#~
[]A\A]
AWAVAUATUSH
HcxhA
~LE1
`Hc}@
[]A\A]A^A_
H E1
 E9A
B(A9F
FhIcF
AWAVAUATUSH
T$(H
|$8H
t$0H
D$@H
T$HH
L$@H
\$HH
D$(H
D$HH
L$HH
T$8H
Hc@(H
L$xH
\$hH
D$0H
|$0H
T$xHc
D$ H
T$ H
[]A\A]A^A_
\$8H
|$(H
L$0H
T$(H
L$xHc
|$(Hc
D$8H
|$0H
T$XH
\$XH
E9}(
D$XE
L$pE
D$dA9
AWAVAUATUSH
Ic?A
X E1
 E9e
[]A\A]A^A_
H E1
 E9A
HcP,H
FhIcF
AWAVA
AUATUSH
PXHc@PH
IcGPH
HcE(H
H+u0H
t%Hc
T$$A9W0~GH
@L9d$
hL9|$
$H9D$
([]A\A]A^A_
AWAVAUATUSH
xXHc@PHi
l$XM
IcD$PH
t$0I
HcC(H
A9l$0~
hL9d$
L9|$
[]A\A]A^A_
AWAVAUATUSH
xXHc@PHi
l$XM
IcD$PH
|$0I
HcC(H
A9l$0~
hL9d$
L9|$
[]A\A]A^A_
AWAVAUATA
|$8H
t$0D
D$,D
L$(H
D$`H
|$0H
D$@Ic
L$@H
T$ H
T$`H
D$ H
PXHc@PH
HcD$,H
p(Hc
\$HH
D$(9C tPI
H+r0H
hH+r0H
p(Hc
L$xH
T$x1
L$(9J 
D$xD
T$xD
T$xHc
T$(9Q 
L$(A9N u	I
+\$\D
D$xD
IT$t
9T$t
MT$tI
\$\M9
T$tu
L$tE
D$xhH
T$xH9
H9L$P
L$`H
D$ H
L$@H
PXHc@PH
T$HH
HcD$,H
L$HH
Hc@(H
;D$(
D$ ;D$(u
D$(;C u	H
8Ic4$H
|$0)
H;GX
[]A\A]A^A_
H;GX
G0x1H
H;GX
H;GX
H;GX
L$`H
A8Hc
D$8H
|$0H
NH+r0H
T$(H
H+q0H
D$H@H
T$HH9
T$8H
|$0H
[]A\1
[]A\
AVAUI
ATUS
[]A\A]A^A_
AVAUI
ATUSH
L$ L
$M+w
t$ L
[]A\A]A^A_
5NT!
5&T!
5+S!
AWAVAUE1
ATUSH
H;CX
C0x]H
[]A\A]A^A_
T$`L
D$0H
T$ H
AVAUATI
~(;G 
[]A\A]A^A_
AWAVAUI
ATUSH
d$`H
[]A\A]A^A_
\$@M
HcD$DM
x L9
p(H9
T$@1
H9x 
H9p(
D$pH
t$(H
t$`H
L$@Lc
t$0H
H;CX~,H
t"Hc
[]A\
t2Hc
[]A\
FIMt
tRHc
}"Hc
A9l$
AWAVAUATUSH
|$0H
t$(t	
T$0I
T$0A
E9l$
A(HcB0H
A0HcB4H
|$(H
|$(H
|$(H
E9l$
|$(H
E9l$
T$@H
D$PH
D$XH
D$`H
D$hH
D$pA
|$01
s8Ic
8H9M
T$<H
t$(1
E9l$
[]A\A]A^A_
L$(H
H;QX
L$(H
H;QX
H;QX
H;QX
L$(H
L$(H
L$(H
MtcH
D$`H
I;D$X
D$(I
D$`H
I;D$X
D$(I
T$`H
xNI;T$X
L$(M
Hc@0H
T$0L
D$0H
D$8H
D$@H
D$HH
D$PH
D$XH
D$`H
D$dA
s8Ic
H)8H9M
T$$9P
Hc@4H
t$Hc
[]A\
[]A\
H;CX
H;CX~n
C0x<H
AUATUSH
[]A\A]A^A_
[]A\A]A^A_
H;GX
H;SX
T$@1
D$`H
D$hH
H;SX
L$0H
T$0H
L$(1
L$(H9
\$XH
l$`L
d$hL
l$pL
t$xL
D$(A
D$ H
T$8L
L$0D
L$DA
D$HH
H#T$HE
D$PH
H;CX~C
L9L$
D$0H9D$ 
t$Hc
[]A\
<$Pu
H;CX
H;CX~n
C0x<H
AWAVI
ATUSH
[]A\A]A^A_
[]A\A]A^A_
H;CX~W
[]A\A]A^
[]A\A]A^
[]A\A]A^
AWAVI
AUATUSH
I;FX
I;VX~xA
D$0H
[]A\A]A^A_
d$lD
d$gD
l$hMc
D$pH
T$pH
8;l$`|
L$0H
|$8H
D$\H
9\$`~l
9\$`
D$hE
T$LH
L$(H
L$xI
D$`9
t$\L
t$\L
T$l9T$H
;l$`
D$p1
|$0A
|$8H
D$\H
t$l1
;\$lu
;\$l
I;VX
T$PHc
;\$l|
L$ H9
C(uVA
H;CX~7
[]A\
[]A\1
AUATUSH
[]A\A]A^A_
X4Ic
t$DI9
T$ H
;T$l
L;h u2H;p(u,9h0u'9X4f
u L9X
I;GX
x=I;WX
L$8H
T$0H
D$lH
D$(H
;l$lu
L$DH
L$(H
T$(H
L$ A
L$xL
;l$lu
HcT$LH
D$TH
|$HO
D$XA
D;d$l
T$pH
D$XH
H9D$pH
H;T$
t$dH
T$(H
9\$l
D$T9D$@
D$DH
H9D$x
T$lH
t$dH
t2Hc
[]A\
ATE1
H;CX~m
C0x?H
[]A\A]
[]A\A]
t$`E1
VUUUUUUUH
H;UX~i
T$@H
L$8H
D$0H
H;EX
D$@H
T$@H
D$PH9
H;UX
L$(A
T$XH
T$(H
L$(H9
D$$=
D$@H
T$@H
D$8H
T$8H
T$0H
ATE1
H;CX~l
C0xCH
[]A\
[]A\
AVAUI
ATUSH
[]A\A]A^A_
`(HcX0
H9j uML9b(uGHcB0H9
L$HHcD
t$PH
D$\I
T$PH
L$\H
L$`H
D$xH
T$pH
\$<H
t$0E1
D$HH
T$@A
L$hL
D$xH
t$xH
D$pH
t$pH
D$<D
I;GX
I;OX
I;WX
G0x|I
D$(D
L$ L
D$(D
jas_cm.c
bufmax > 0
n >= 2
n >= pxformseq->numpxforms
prfprof
i >= 0 && i < pxformseq->numpxforms
i >= 0 && i <= pxformseq->numpxforms
pxformseq->numpxforms < pxformseq->maxpxforms
prof->numchans == 3 && prof->numrefchans == 3
prof->refclrspc == (((1) << 8) | (1))
jas_cmpxformseq_delete
jas_cmxform_apply
jas_cmxform_create
jas_cmpxformseq_resize
jas_cmshapmat_apply
jas_cmpxformseq_insertpxform
jas_cmshapmatlut_invert
jas_cmprof_createsycc
%04x:
 %02x
unknown long option %s
unknown short option %s
missing argument for option %s
jas_image.c
x >= 0
 f(%d,%d)=%ld
id >= 0 && name && ext && ops
inprof
!((outimage)->cmprof_)
incmptfmts
j >= 0
outcmptfmts
prec=%d, sgnd=%d, cmpttype=%d
cmptno >= 0 && cmptno <= image->numcmpts_
cmptno >= 0 && cmptno < image->numcmpts_
oldcmpt->tlx_ == 0 && oldcmpt->tly_ == 0
oldx >= 0 && oldx < oldcmpt->width_ && oldy >= 0 && oldy < oldcmpt->height_
jas_image_chclrspc
jas_image_sampcmpt
downtomult
uptomult
jas_image_addcmpt
jas_image_addfmt
string = "%s"
ascii = "%s"
uclangcode = %d; uclen = %d
sccode = %d
maclen = %d
number of entires = %d
gamma = %f
entry[%d] = %f
(%f, %f, %f)
e[%d][%d]=%f 
numattrs=%d
jas_icc.c
attrval->ops->output
reloff >= 0
maxents >= tab->numattrs
newprof->attrtab
cannot get header
cannot get tab table
numinchans=%d, numoutchans=%d, clutlen=%d
numintabents=%d, numouttabents=%d
refcnt = %d; type = 0x%08x %s
attrno=%d; attrname="%s"(0x%08x); attrtype="%s"(0x%08x)
curoff == ((long) (tagtabent->off))
i >= 0 && i <= attrtab->numattrs
jas_iccattrtab_add
jas_iccattrtab_resize
jas_iccprof_save
jas_iccprof_copy
My Image Format (MIF)
Portable Graymap/Pixmap (PNM)
Microsoft Bitmap (BMP)
Sun Rasterfile (RAS)
JPEG (ISO/IEC 10918-1)
JPEG-2000 VM Format (PGX)
JPEG-2000 JP2 File Format Syntax (ISO/IEC 15444-1)
JPEG-2000 Code Stream Syntax (ISO/IEC 15444-1)
%d %d
%s%4ld
jas_seq.c
n >= 0
!(matrix->flags_ & 0x0001)
%d %d
xstart <= xend && ystart <= yend
jas_matrix_asr
jas_seq2d_copy
jas_matrix_destroy
jas_seq2d_create
jas_stream.c
!(stream->bufmode_ & 0x0010)
stream->cnt_ > 0
%08x:
bufsize > 0
newbufsize >= 0
m->buf_
ret == cnt
!stream->bufbase_
bufsize > 16
!buf
(stream->bufmode_ & 0x0020) == 0
stream->ptr_ - stream->bufstart_ <= stream->bufsize_
!((stream->bufmode_ & 0x0010) && (stream->bufmode_ & 0x0020))
stream->ptr_ - stream->bufbase_ <= stream->bufsize_ + 16
jas_stream_flushbuf
jas_stream_fillbuf
jas_stream_seek
mem_write
mem_resize
jas_stream_gets
jas_stream_putc_func
jas_stream_getc_func
jas_stream_initbuf
.A1.900.1
warning: ignoring BMP decoder options
THE BMP FORMAT IS NOT FULLY SUPPORTED!
THAT IS, THE JASPER SOFTWARE CANNOT DECODE ALL TYPES OF BMP DATA.
IF YOU HAVE ANY PROBLEMS, PLEASE TRY CONVERTING YOUR IMAGE DATA
TO THE PNM FORMAT, AND USING THIS FORMAT INSTEAD.
error: unsupported BMP encoding
error: possibly bad bitmap offset?
skipping unknown data in BMP file
info->depth == 8 || info->depth == 24
unsupported BMP encoding
cannot get info
bmp_dec.c
info->enctype == 0
bmp_getdata
bmp_enc.c
val >= 0
warning: inaccurate color
warning: ignoring BMP encoder options
error: BMP format does not support color space
error: missing color component
The BMP format cannot be used to represent an image with this geometry.
no palettized image support for BMP format
bmp_putint32
numents=%d; numchans=%d
LUT[%d][%d]=%d
numchans = %d
cmptno=%d; map=%d; pcol=%d
channo=%d; type=%d; assoc=%d
method=%d; pri=%d; approx=%d
csid=%d
jp2_cod.c
boxinfo
JP2 box: 
cannot copy box data
cannot parse box data
FTYP
JP2H
IHDR
BPCC
COLR
PCLR
CMAP
CDEF
RESC
RESD
JP2C
JP2I
UUID
UINF
ULST
Unknown
type=%c%s%c (0x%08x); length=%d
warning: cannot handle large 64-bit box length
jp2_box_dump
error: cannot get box
incorrect magic number
expecting file type box
box type %s
error: no code stream found
error: missing IHDR box
error: no components
error: no COLR box
jp2_dec.c
iccprof
ICC Profile CS %08x
dec->image->cmprof_
error: no memory
error: expecting signature box
error: cannot decode code stream
warning: number of components mismatch
warning: component data type mismatch
error: unsupported compression type
warning: superfluous BPCC box
warning: missing PCLR box or superfluous CMAP box
warning: missing CMAP box or superfluous PCLR box
error: invalid component number in CMAP box
error: invalid CMAP LUT index
jp2_decode
jp2_enc.c
iccstream
colr->iccp
_jp2overhead=%lu
jp2_encode
jpc_bs.c
n >= 0 && n < 32
!(v & (~((1 << (n)) - 1)))
(bitstream)->openmode_ & 0x02
bitstream->openmode_ & 0x02
!(filldata & (~0x3f))
bitstream->openmode_ & 0x01
bitstream->cnt_ <= 0
(bitstream)->openmode_ & 0x01
bitstream->cnt_ >= 0 && bitstream->cnt_ < 8
(bitstream->buf_ & 0xff) != 0xff
!__extension__ ({ size_t __s1_len, __s2_len; (__builtin_constant_p (mode) && __builtin_constant_p ("r") && (__s1_len = strlen (mode), __s2_len = strlen ("r"), (!((size_t)(const void *)((mode) + 1) - (size_t)(const void *)(mode) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("r") + 1) - (size_t)(const void *)("r") == 1) || __s2_len >= 4)) ? __builtin_strcmp (mode, "r") : (__builtin_constant_p (mode) && ((size_t)(const void *)((mode) + 1) - (size_t)(const void *)(mode) == 1) && (__s1_len = strlen (mode), __s1_len < 4) ? (__builtin_constant_p ("r") && ((size_t)(const void *)(("r") + 1) - (size_t)(const void *)("r") == 1) ? __builtin_strcmp (mode, "r") : (__extension__ ({ __const unsigned char *__s2 = (__const unsigned char *) (__const char *) ("r"); register int __result = (((__const unsigned char *) (__const char *) (mode))[0] - __s2[0]); if (__s1_len > 0 && __result == 0) { __result = (((__const unsigned char *) (__const char *) (mode))[1] - __s2[1]); if (__s1_len > 1 && __result == 0) { __result = (((__const unsigned char *) (__const char *) (mode))[2] - __s2[2]); if (__s1_len > 2 && __result == 0) __result = (((__const unsigned char *) (__const char *) (mode))[3] - __s2[3]); } } __result; }))) : (__builtin_constant_p ("r") && ((size_t)(const void *)(("r") + 1) - (size_t)(const void *)("r") == 1) && (__s2_len = strlen ("r"), __s2_len < 4) ? (__builtin_constant_p (mode) && ((size_t)(const void *)((mode) + 1) - (size_t)(const void *)(mode) == 1) ? __builtin_strcmp (mode, "r") : (__extension__ ({ __const unsigned char *__s1 = (__const unsigned char *) (__const char *) (mode); register int __result = __s1[0] - ((__const unsigned char *) (__const char *) ("r"))[0]; if (__s2_len > 0 && __result == 0) { __result = (__s1[1] - ((__const unsigned char *) (__const char *) ("r"))[1]); if (__s2_len > 1 && __result == 0) { __result = (__s1[2] - ((__const unsigned char *) (__const char *) ("r"))[2]); if (__s2_len > 2 && __result == 0) __result = (__s1[3] - ((__const unsigned char *) (__const char *) ("r"))[3]); } } __result; }))) : __builtin_strcmp (mode, "r")))); }) || !__extension__ ({ size_t __s1_len, __s2_len; (__builtin_constant_p (mode) && __builtin_constant_p ("w") && (__s1_len = strlen (mode), __s2_len = strlen ("w"), (!((size_t)(const void *)((mode) + 1) - (size_t)(const void *)(mode) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("w") + 1) - (size_t)(const void *)("w") == 1) || __s2_len >= 4)) ? __builtin_strcmp (mode, "w") : (__builtin_constant_p (mode) && ((size_t)(const void *)((mode) + 1) - (size_t)(const void *)(mode) == 1) && (__s1_len = strlen (mode), __s1_len < 4) ? (__builtin_constant_p ("w") && ((size_t)(const void *)(("w") + 1) - (size_t)(const void *)("w") == 1) ? __builtin_strcmp (mode, "w") : (__extension__ ({ __const unsigned char *__s2 = (__const unsigned char *) (__const char *) ("w"); register int __result = (((__const unsigned char *) (__const char *) (mode))[0] - __s2[0]); if (__s1_len > 0 && __result == 0) { __result = (((__const unsigned char *) (__const char *) (mode))[1] - __s2[1]); if (__s1_len > 1 && __result == 0) { __result = (((__const unsigned char *) (__const char *) (mode))[2] - __s2[2]); if (__s1_len > 2 && __result == 0) __result = (((__const unsigned char *) (__const char *) (mode))[3] - __s2[3]); } } __result; }))) : (__builtin_constant_p ("w") && ((size_t)(const void *)(("w") + 1) - (size_t)(const void *)("w") == 1) && (__s2_len = strlen ("w"), __s2_len < 4) ? (__builtin_constant_p (mode) && ((size_t)(const void *)((mode) + 1) - (size_t)(const void *)(mode) == 1) ? __builtin_strcmp (mode, "w") : (__extension__ ({ __const unsigned char *__s1 = (__const unsigned char *) (__const char *) (mode); register int __result = __s1[0] - ((__const unsigned char *) (__const char *) ("w"))[0]; if (__s2_len > 0 && __result == 0) { __result = (__s1[1] - ((__const unsigned char *) (__const char *) ("w"))[1]); if (__s2_len > 1 && __result == 0) { __result = (__s1[2] - ((__const unsigned char *) (__const char *) ("w"))[2]); if (__s2_len > 2 && __result == 0) __result = (__s1[3] - ((__const unsigned char *) (__const char *) ("w"))[3]); } } __result; }))) : __builtin_strcmp (mode, "w")))); }) || !__extension__ ({ size_t __s1_len, __s2_len; (__builtin_constant_p (mode) && __builtin_constant_p ("r+") && (__s1_len = strlen (mode), __s2_len = strlen ("r+"), (!((size_t)(const void *)((mode) + 1) - (size_t)(const void *)(mode) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("r+") + 1) - (size_t)(const void *)("r+") == 1) || __s2_len >= 4)) ? __builtin_strcmp (mode, "r+") : (__builtin_constant_p (mode) && ((size_t)(const void *)((mode) + 1) - (size_t)(const void *)(mode) == 1) && (__s1_len = strlen (mode), __s1_len < 4) ? (__builtin_constant_p ("r+") && ((size_t)(const void *)(("r+") + 1) - (size_t)(const void *)("r+") == 1) ? __builtin_strcmp (mode, "r+") : (__extension__ ({ __const unsigned char *__s2 = (__const unsigned char *) (__const char *) ("r+"); register int __result = (((__const unsigned char *) (__const char *) (mode))[0] - __s2[0]); if (__s1_len > 0 && __result == 0) { __result = (((__const unsigned char *) (__const char *) (mode))[1] - __s2[1]); if (__s1_len > 1 && __result == 0) { __result = (((__const unsigned char *) (__const char *) (mode))[2] - __s2[2]); if (__s1_len > 2 && __result == 0) __result = (((__const unsigned char *) (__const char *) (mode))[3] - __s2[3]); } } __result; }))) : (__builtin_constant_p ("r+") && ((size_t)(const void *)(("r+") + 1) - (size_t)(const void *)("r+") == 1) && (__s2_len = strlen ("r+"), __s2_len < 4) ? (__builtin_constant_p (mode) && ((size_t)(const void *)((mode) + 1) - (size_t)(const void *)(mode) == 1) ? __builtin_strcmp (mode, "r+") : (__extension__ ({ __const unsigned char *__s1 = (__const unsigned char *) (__const char *) (mode); register int __result = __s1[0] - ((__const unsigned char *) (__const char *) ("r+"))[0]; if (__s2_len > 0 && __result == 0) { __result = (__s1[1] - ((__const unsigned char *) (__const char *) ("r+"))[1]); if (__s2_len > 1 && __result == 0) { __result = (__s1[2] - ((__const unsigned char *) (__const char *) ("r+"))[2]); if (__s2_len > 2 && __result == 0) __result = (__s1[3] - ((__const unsigned char *) (__const char *) ("r+"))[3]); } } __result; }))) : __builtin_strcmp (mode, "r+")))); }) || !__extension__ ({ size_t __s1_len, __s2_len; (__builtin_constant_p (mode) && __builtin_constant_p ("w+") && (__s1_len = strlen (mode), __s2_len = strlen ("w+"), (!((size_t)(const void *)((mode) + 1) - (size_t)(const void *)(mode) == 1) || __s1_len >= 4) && (!((size_t)(const void *)(("w+") + 1) - (size_t)(const void *)("w+") == 1) || __s2_len >= 4)) ? __builtin_strcmp (mode, "w+") : (__builtin_constant_p (mode) && ((size_t)(const void *)((mode) + 1) - (size_t)(const void *)(mode) == 1) && (__s1_len = strlen (mode), __s1_len < 4) ? (__builtin_constant_p ("w+") && ((size_t)(const void *)(("w+") + 1) - (size_t)(const void *)("w+") == 1) ? __builtin_strcmp (mode, "w+") : (__extension__ ({ __const unsigned char *__s2 = (__const unsigned char *) (__const char *) ("w+"); register int __result = (((__const unsigned char *) (__const char *) (mode))[0] - __s2[0]); if (__s1_len > 0 && __result == 0) { __result = (((__const unsigned char *) (__const char *) (mode))[1] - __s2[1]); if (__s1_len > 1 && __result == 0) { __result = (((__const unsigned char *) (__const char *) (mode))[2] - __s2[2]); if (__s1_len > 2 && __result == 0) __result = (((__const unsigned char *) (__const char *) (mode))[3] - __s2[3]); } } __result; }))) : (__builtin_constant_p ("w+") && ((size_t)(const void *)(("w+") + 1) - (size_t)(const void *)("w+") == 1) && (__s2_len = strlen ("w+"), __s2_len < 4) ? (__builtin_constant_p (mode) && ((size_t)(const void *)((mode) + 1) - (size_t)(const void *)(mode) == 1) ? __builtin_strcmp (mode, "w+") : (__extension__ ({ __const unsigned char *__s1 = (__const unsigned char *) (__const char *) (mode); register int __result = __s1[0] - ((__const unsigned char *) (__const char *) ("w+"))[0]; if (__s2_len > 0 && __result == 0) { __result = (__s1[1] - ((__const unsigned char *) (__const char *) ("w+"))[1]); if (__s2_len > 1 && __result == 0) { __result = (__s1[2] - ((__const unsigned char *) (__const char *) ("w+"))[2]); if (__s2_len > 2 && __result == 0) __result = (__s1[3] - ((__const unsigned char *) (__const char *) ("w+"))[3]); } } __result; }))) : __builtin_strcmp (mode, "w+")))); })
jpc_bitstream_outalign
jpc_bitstream_needalign
jpc_bitstream_fillbuf
jpc_bitstream_putbits
jpc_bitstream_getbits
jpc_bitstream_putbit_func
jpc_bitstream_getbit_func
jpc_bitstream_sopen
%02x 
hoff[%d] = %d; voff[%d] = %d
po[%d] = %d; 
cs[%d] = %d; ce[%d] = %d; 
rs[%d] = %d; re[%d] = %d; 
le[%d] = %d
seqno = %d;
caps = 0x%02x;
type = 0x%04x (%s);
 len = %d;
regid = %d;
data = 
ind=%d; len = %d;
data =
jpc_cs.c
compparms->stepsizes
!((tmp >> 3) & (~0x1f))
compparms->numdlvls <= 32
coc->compparms.numdlvls <= 32
csty = 0x%02x;
prg = %d; numlyrs = %d;
UNKNOWN
compno = %d; qntsty = %d; numguard = %d; numstepsizes = %d
expn[%d] = 0x%04x; mant[%d] = 0x%04x;
qntsty = %d; numguard = %d; numstepsizes = %d
compno = %d; roisty = %d; roishift = %d
compno = %d; csty = 0x%02x; numdlvls = %d;
cblkwidthval = %d; cblkheightval = %d; cblksty = 0x%02x; qmfbid = %d;
width = %d; height = %d; xoff = %d; yoff = %d;
tilewidth = %d; tileheight = %d; tilexoff = %d; tileyoff = %d;
prec[%d] = %d; sgnd[%d] = %d; hsamp[%d] = %d; vsamp[%d] = %d
tileno = %d; len = %d; partno = %d; numparts = %d
cod->numlyrs > 0 && cod->compparms.numdlvls <= 32
cod->compparms.numdlvls == cod->compparms.numrlvls - 1
siz->width && siz->height && siz->tilewidth && siz->tileheight && siz->numcomps
numdlvls = %d; qmfbid = %d; mctrans = %d
cblkwidthval = %d; cblkheightval = %d; cblksty = 0x%02x;
prcwidth[%d] = %d, prcheight[%d] = %d
warning: trailing garbage in marker segment (%ld bytes)
jpc_qcx_getcompparms
jpc_coc_putparms
jpc_cox_putcompparms
jpc_cod_putparms
jpc_siz_putparms
invalid component number in QCC marker segment
invalid component number in RGN marker segment
invalid component number in COC marker segment
warning: ignoring unknown marker segment
streamno < streamlist->numstreams
warning: possibly corrupt code stream
!((expn + (numrlvls - 1) - (numrlvls - 1 - ((bandno > 0) ? ((bandno + 2) / 3) : (0)))) & (~0x1f))
xs =%d, ys = %d, xe = %d, ye = %d, w = %d, h = %d
warning: ignoring trailing garbage (%lu bytes)
warning: not enough tile data (%lu bytes)
invalid tile number in SOT marker segment
warning: ignoring invalid option %s
unexpected marker segment type
jpc_dec.c
jpc_dec_decodecblks failed
absstepsize >= 0
dec->numcomps == 3
write component failed
!((mant) & (~0x7ff))
rlvl->numprcs
prc->numcblks > 0
pchg
RESOLUTION LEVEL %d
BAND %d
CODE BLOCK GROUP %d
CODE BLOCK %d
jpc_dec_decodepkts failed
read error
compinfos
!tile->cp
cannot get marker segment
maxlyrs
maxpkts
debug
jpc_dec_tiledecode
jpc_dequantize
calcstepsizes
jpc_dec_tileinit
jpc_dec_process_sot
jpc_streamlist_get
  tcmpt %5d %5d %5d %5d
    rlvl %5d %5d %5d %5d
      band %5d %5d %5d %5d
lyrno = %02d
jpc_enc.c
pass0
lyrno == numlyrs - 1
oldpos >= 0
success %d goodthresh %f
enc->tmpstream
!((expn) & (~0x1f))
cannot write SOC marker
siz->comps
cannot write SIZ marker
Creator: JasPer Version %s
cannot write COM marker
cannot write COD marker
cannot open tmp file
cannot write SOT marker
cannot write SOD marker
dotile failed
unsupported image type
ignoring invalid mode %s
invalid tile width %lu
invalid tile height %lu
invalid precinct width
invalid precinct height
invalid code block width %d
invalid code block height %d
code block size too large
too many layers
invalid number of guard bits
cannot write EOI marker
invalid JP encoder options
imgareatlx
imgareatly
tilegrdtlx
tilegrdtly
tilewidth
tileheight
prcwidth
prcheight
cblkwidth
cblkheight
mode
nomct
numrlvls
lazy
termall
segsym
vcausal
pterm
resetprob
numgbits
rate
ilyrrates
_jp2overhead
lrcp
rlcp
rpcl
pcrl
cprl
real
        prc %5d %5d %5d %5d (%5d %5d)
         cblk %5d %5d %5d %5d
lyrno=%02d cmptno=%02d rlvlno=%02d bandno=%02d prcno=%02d cblkno=%03d passno=%03d
start=%d end=%d type=%d term=%d lyrno=%d firstchar=%02x size=%ld pos=%ld
tcmpt->numstepsizes <= (3 * 33 + 1)
cblktlx < cblkbrx && cblktly < cblkbry
min rdslope = %f max rdslope = %f
maxlen=%08ld actuallen=%08ld thresh=%f
warning: empty layer generated
((enc->image)->numcmpts_) == 3
error: too few guard bits (need at least %d)
ignoring invalid progression order %s
ignoring bad rate specifier %s
warning: invalid intermediate layer rates specifier ignored (%s)
warning: overriding imgareatlx value
warning: overriding imgareatly value
warning: color space apparently not RGB
invalid tile grid offset (%lu, %lu)
cannot use real mode for lossless coding
must be at least one resolution level
warning: specified rate is unreasonably large (%lu > %lu)
intermediate layer rates must increase monotonically
warning: intermediate layer rates must be less than overall rate
MbP?
tcmpt_create
cblk_create
rateallocate
calcrdslopes
jpc_enc_encodetiledata
jpc_enc_encodemainhdr
jpc_abstorelstepsize
jpc_enc_encodemainbody
jpc_math.c
jpc_firstone
jpc_floorlog2
jpc_mct.c
((c1)->numrows_) == numrows && ((c2)->numrows_) == numrows
((c1)->numcols_) == numcols && ((c2)->numcols_) == numcols
((c1)->numrows_) == numrows && ((c1)->numcols_) == numcols && ((c2)->numrows_) == numrows && ((c2)->numcols_) == numcols
jpc_iict
jpc_ict
jpc_irct
jpc_rct
MQDEC A = %08lx, C = %08lx, CT=%08lx, 
CTX = %d, 
IND %d, MPS %d, QEVAL %x
jpc_mqdec.c
maxctxs > 0
jpc_mqdec_create
AREG = %08x, CREG = %08x, CTREG = %d
IND = %02d, MPS = %d, QEVAL = %04x
node %p, parent %p, value %d, lower %d, known %d
srctree->numleafsh_ == dsttree->numleafsh_ && srctree->numleafsv_ == dsttree->numleafsv_
numleafsh > 0 && numleafsv > 0
jpc_tagtree.c
value >= 0
threshold >= 0
(in)->openmode_ & 0x01
leaf
(out)->openmode_ & 0x02
jpc_tagtree_decode
jpc_tagtree_encode
jpc_tagtree_setvalue
jpc_tagtree_copy
jpc_tagtree_create
@jpc_t1cod.c
n < 3
qmfbid == 0x01
orient == 0
hc >= -1 && hc <= 1 && vc >= -1 && vc <= 1
!(x & (~((1 << (bitpos + 1)) - 1)))
?jpc_getmagctxno
jpc_getscctxno
jpc_getsignmsedec_func
JPC_SEGPASSCNT
JPC_NOMINALGAIN
JPC_PASSTYPE
jpc_t1dec.c
seg->stream
seg->type == 2
warning: corrupt code stream
bpno >= 0 && bpno < 31
seg->type == 1
warning: bad segmentation symbol
coding pass failed passtype=%d segtype=%d
warning: bad termination pattern detected
dopartial ? (!cblk->curseg) : 1
jpc_dec_decodecblk
dec_rawsigpass
dec_rawrefpass
jpc_t1enc.c
((out))->openmode_ & 0x02
cblk->stream
cblk->mqenc
cblk->passes
pass->term == 1
cblk->flags
pass->type == 2
bout
bitpos >= 0
pass->type == 1
cblk->numimsbs >= 0
jpc_enc_enccblk
jpc_encrawsigpass
jpc_encrawrefpass
getthebyte
jpc_enc_enccblks
jpc_t2cod.c
pchgno < pchglist->numpchgs
pi->prcno < pi->pirlvl->numprcs
jpc_pchglist_remove
jpc_pi_nextrlcp
jpc_pi_nextrpcl
jpc_pi_nextpcrl
jpc_pi_nextcprl
warning: stopping decode prematurely as requested
packet offset=%08ld prg=%d cmptno=%02d rlvlno=%02d prcno=%03d lyrno=%02d
cannot get (EPH) marker segment
jpc_t2dec.c
pi->valid
missing SOP marker segment
(inb)->openmode_ & 0x01
alignment failed
hdrlen=%lu bodylen=%lu 
missing EPH marker segment
packet body offset=%06ld
jpc_dec_decodepkts
jpc_dec_decodepkt
jpc_getnumnewpasses
jpc_getcommacode
jpc_t2enc.c
outb
(outb)->openmode_ & 0x02
leaf->known_ && i == leaf->value_ + 1
jpc_firstone(datalen) < cblk->numlenbits + jpc_floorlog2(passcount)
pass->lyrno < 0 || pass->lyrno > lyrno
jas_stream_tell(cblk->stream) == startpass->start
jpc_init_t2state
jpc_enc_encpkt
jpc_putnumnewpasses
jpc_putcommacode
jpc_enc_encpkts
jpc_util.c
jpc_seq_conv
jpg_dec.c
cinfo->output_components == ((dinfo->image)->numcmpts_)
jpg_put_pixel_rows
jpg_enc.c
src_mgr->data
quality
ignoring bad quality specifier %s
error: JPG format does not support color space
error: The JPG encoder cannot handle an image with this geometry.
jpg_encode
mif_cod.c
maxcmpts >= hdr->numcmpts
error: PNM support required
 data=%s
error: bad signature
component
sampperx
samppery
prec
sgnd
warning: ignoring unsupported options
component tlx=%ld tly=%ld sampperx=%ld samppery=%ld width=%ld height=%ld prec=%d sgnd=%d
mif_hdr_growcmpts
unsigned
bigendian
littleendian
byteorder=%s sgnd=%s prec=%d width=%d height=%d
The PNM format cannot be used to represent an image with this geometry.
%c%c
 %s %s %d %ld %ld
warning: ignoring options
pnm_dec.c
(tmpval & (1 << (wordsize - 1))) == 0
pnm_getsint
%lu %lu
%s%ld
text
error: unsupported color space
warning: support for signed sample data requires use of nonstandard extension to PNM format
You may not be able to read or correctly display the resulting PNM data with other software.
invalid PNM encoder options specified
warning: ignoring RAS decoder options
warning: palettized images not fully supported
error: RLE encoding method not supported
error: encoding method not supported
ras_dec.c
numcolors <= 256
data[i]
ras_getcmap
ras_getdatastd
warning: ignoring RAS encoder options
The RAS format cannot be used to represent an image with this geometry.
ras_enc.c
ras_putdatastd
vruc
 ZYX
csed
txet
1tfm
2tfm
HLino
mntrRGB XYZ 
acspMSFT
IEC sRGB
-HP  
cprt
3desc
lwtpt
bkpt
rXYZ
gXYZ
bXYZ
dmnd
pdmdd
vued
view
$lumi
meas
$tech
rTRC
gTRC
bTRC
text
Copyright (c) 1998 Hewlett-Packard Company
desc
sRGB IEC61966-2.1
sRGB IEC61966-2.1
XYZ 
XYZ 
XYZ 
XYZ 
XYZ 
desc
IEC http://www.iec.ch
IEC http://www.iec.ch
desc
.IEC 61966-2.1 Default RGB colour space - sRGB
.IEC 61966-2.1 Default RGB colour space - sRGB
desc
,Reference Viewing Condition in IEC61966-2.1
,Reference Viewing Condition in IEC61966-2.1
view
XYZ 
meas
sig 
CRT curv
	%	:	O	d	y	
 A l 
!H!u!
"'"U"
#8#f#
$M$|$
%	%8%h%
&'&W&
'I'z'
(?(q(
)8)k)
*5*h*
+6+i+
,9,n,
-A-v-
/$/Z/
050l0
2*2c2
4+4e4
676r6
7$7`7
:6:t:
;-;k;
<'<e<
="=a=
> >`>
?!?a?
@#@d@
A)AjA
B0BrB
C:C}C
F"FgF
G5G{G
J7J}J
L*LrL
N%NnN
P'PqP
R1R|R
U(UuU
X/X}X
]']x]
scnrGRAYXYZ 
!acsp
KODAsGry
-JPEG
desc
cprt
+wtpt
kTRC
desc
,Restricted ICC profile describing sRGB-grey
text
Copyright 2003 sRGB-grey Reference
XYZ 
curv
  Pj
pytf
h2pj
rdhi
ccpb
rloc
rlcp
pamc
fedc
 ser
cser
dser
c2pj
i2pj
 lmx
diuu
fniu
tscu
 lru
?4x3
y"@;
 *@8
y2@-!
 :@Y
yR@4
yb@m
yr@T
;@Kb
C@j5
{@Ggk
@Wgl
>z @
M'@[KX
MG@k
MW@	
zp@Nd
?{r}+G
P@<s
W@*/
p@@K
libjasper.so.1.0.0.debug
.shstrtab
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
