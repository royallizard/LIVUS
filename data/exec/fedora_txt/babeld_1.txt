/lib/ld-linux.so.2
"!|H
libzebra.so.0
__gmon_start__
_Jv_RegisterClasses
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
master
zmalloc
thread_master_create
sort_node
vty_read_config
zapi_ipv6_route
thread_fetch
zclient_init
access_list_delete_hook
distribute_list_init
prefix_list_add_hook
config_show_distribute
zprivs_init
install_default
distribute_list_add_hook
thread_call
cmd_init
zclient_serv_path_set
_zlog_assert_failed
safe_strerror
vector_init
vty_out
proto_redistnum
zlog_notice
zlog_rotate
zebra_interface_state_read
vector_unset
stream_get
zclient_new
vector_set
access_list_init
if_init
if_add_hook
stream_getc
memory_init
stream_getl
zapi_ipv4_route
if_is_operative
zlog_warn
funcname_thread_add_timer_msec
signal_init
zebra_route_string
zlog_err
str2prefix
access_list_apply
prefix_list_lookup
zebra_interface_add_read
access_list_lookup
zfree
distribute_list_delete_hook
zlog_default
prefix_list_init
if_flag_dump
pid_output
if_lookup_by_name
zlog_set_level
distribute_lookup
no_interface_cmd
zebra_interface_address_read
zclient_stop
install_node
install_element
zcalloc
access_list_add_hook
funcname_thread_add_read
vty_serv_sock
prefix_list_apply
print_version
vty_init
thread_cancel
zclient_redistribute
prefix_list_delete_hook
apply_mask_ipv4
openzlog
zlog_debug
apply_mask_ipv6
_fini
inet6_ntoa
if_lookup_by_index
iflist
quagga_gettime
libcap.so.2
libcrypt.so.1
libcrypto.so.10
libnetsnmp.so.30
librt.so.1
libc.so.6
_IO_stdin_used
fflush
__printf_chk
exit
strncmp
strrchr
__strdup
perror
__isoc99_sscanf
__fdelt_chk
inet_ntoa
inet_ntop
fork
unlink
listen
select
realloc
fsync
abort
memchr
inet_pton
strtol
strlen
__errno_location
bind
open64
memcmp
dup2
__fprintf_chk
stdout
memcpy
strtoul
setsockopt
umask
optarg
stderr
__snprintf_chk
getopt_long
if_nametoindex
sendmsg
usleep
if_indextoname
fwrite
gettimeofday
__memcpy_chk
srandom
close
open
qsort
__cxa_finalize
setsid
fcntl
memmove
strcmp
recvmsg
__libc_start_main
snprintf
__stack_chk_fail
_edata
__bss_start
_end
/usr/lib/quagga
babel_interface_down
unicast_neighbour
babel_interface_address_delete
babel_interface_delete
kernel_metric
diversity_factor
protocol_group
check_neighbours_timeout
myid
babel_interface_address_add
myseqno
babel_interface_add
protocol_port
resend_time
diversity_kind
resend_delay
zclient
zeroes
allow_duplicates
babel_now
neighs
protocol_socket
babel_interface_up
unicast_flush_timeout
GLIBC_2.15
GLIBC_2.4
GLIBC_2.7
GLIBC_2.1
GLIBC_2.1.3
GLIBC_2.0
GLIBC_2.3.4
T$(e
DT$,
3D$0
D$0*
[^_]
UWVS
d$([
UWVS
Et$p
[^_]
UWV1
D$,1
T$,e3
d$<[^_]
UWV1
D$,1
T$,e3
d$<[^_]
|$(e
|$(e
D$l1
T$le3
d$|[^_]
D$\1
T$\e3
d$l[^_]
UWVS
D$,1
T$,e3
d$<[^_]
d$ [^_
d$([
UWVS
l$pe
D$L1
T$01
T$Le3
d$\[^_]
D$<1
T$<e3
d$D[_
D$L1
T$Le3
d$\[^_]
UWVS
D$\1
D$,f
D$BuK
T$\e3
d$l[^_]
T$(y
UWVS
t$p1
[^_]
t$,e
D$\1
T$\e3
D$B	
d$([
B,9B0
T$<1
D$ v
D$<e3
9D$ 
D$<e3
D$<e3
D$<e3
D$<e3
T$<e3
D$$9D$,
T$<e3
d$$[^
d$([
D$ }1
|$(e
~/-@B
~6-@B
:99|:
L$ e
T$$e
l$0e
<.tc
d$ ^_]
T$,1
T$,e3
\$<e
D$,1
|$Tx|
T$,e3
T$L1
L$,k
T$Le3
d$T[^
D$,1
T$,e3
|$te
D$\1
T$\e3
T$<i
d$([
d$([
|$0~l
l$Xe
D$<1
|$d)
T$<e3
l$@e
D$ e
D$0e
d$([
|$0e
|2u<
d$([
UWVS
T$`f
D$,1
T$,e3
d$<[^_]
D$0e
d$([
D$0e
d$([
L$0e
d$([
t$4t 
9x$}3f
f;P s
d$ [^_
UWVS
D$,1
D$,e3
d$<[^_]
90tM
d$$[^
UWVS
t$Dt9
u	;w0
d$,[^_]
T$<1
l$<e3-
f+L$(
T$(k
l$,f
L$ f
n,;l$
UWVS
D$,1
T$,e3
d$<[^_]
l$8e
L$<e
l$L1
T$8x7
D$<f
L$Le3
UWVS
D$$e
T$<1
D$+:E
T$<e3
D$ u]
d$L[^_]
d$$[^
d$$[^
UWVS
t)9~
d$,[^_]
d$([
UWVS
D$,1
T$,e3
d$<[^_]
UWV1
d$,[^_]
t$Pe
D$<1
D$<e3
d$D[^
L$ e
|$(to
9J$|
f;z r
D$0e
D$<1
D$<e3
D$<e3
UWVS
D$,1
9V |e
T$,e3
d$<[^_]
l$Xe
D$<1
f+|$"f
D$<e3
9|$(
D$<1
L$<e3
T$,t
D$L1
l$hu
D$Le3
l$8e
D$,1
|$HtX
L$,e3
D$,e3
L$,e3
D$,1
D$,e3
d$<[^_]
D$<1
9F }ef
D$<e3
9x0t(
d$,[^_]
UWVS
d$,[^_]
D$,1
T$,e3
D$,e3
UWVS
D$l1
T$0f
l$8f
L$Hf
L$8f
T$X1
T$le3
d$|[^_]
D$89D$<
L$Hf
D$Df
F(~+
NT$T
t$`e
D$<1
D$,f
D$<e3
d$L[^_]
;T$ 
t$$|
UWVS
D$,1
9h0u
D$,e3
d$<[^_]
t19p
d$ [^_
d$ [^_
UWVS
D$,1
9V }
D$,e3
d$<[^_]
UWVS
T$Pe
D$,1
L$T~j
T$,e3
d$<[^_]
l$He
D$,1
T$,e3
t$@e
D$,1
T$,e3
t$@e
D$,1
T$,e3
t$De
D$<1
T$<e3
t$De
D$<1
T$<e3
UWV1
|$D~*
d$,[^_]
D$,1
T$,e3
|$0e
l$8tW
|$49
L$@uc
l$8e
l$he
t$L1
T$(x{
L$Le3
T$<t<
L$$u
T$ 9
T$<y
D$DtG
T$ 9
L$,)
UWVS
D$\1
L$L1
;l$@
;l$@
L$@9L$8
:T$I
L$<9H0
D$\e3
d$l[^_]
T$,1
~c;Wh}Vk
D$,e3
d$<[^_]
|$Te
D$<1
F09F,
T$ 1
D$<e3
L$,1
L$,e3
D$<1
t$Puk
D$<e3
T$ 1
D$8f
l$He
D$,1
l$Pt
T$,e3
D$,1
T$,e3
D$,e3
l$,1
l$,e3-
D$\1
L$(tO
T$\e3
B0+B,
|$8_
l$,`
8L>L
;|$D|
|$8/w*
T$4f
T$4f
L$$+D$
T$:f
T$@f
D$$+D$
L$8@
UWVS
t$@e
d$,[^_]
t$0e
d$ [^_
UWVS
|$de
D$<1
t$htH
D$<e3
d$L[^_]
D$0e
L$,1
T$Htq
D$,e3
UWVS
l$te
D$L1
l$Le3-
d$\[^_]
T$8f
T$4f
l$Le3-
d$\[
;n0t
T$8f
D$4f
T$Le3
d$\[
79~0t
d$ [^_
t$0e
d$$^_
d$$^_
UWVS
L$Xe
D$,1
D$,e3
d$<[^_]
L$,e3
d$<[
|$Te
D$,1
T$,e3
D$,e3
UWVS
T$De
l$\1
l$\e3-
d$l[^_]
|$8_
T$Bf
D$\e3
d$l[^_]
UWVS
D$(e
D$<1
l$hf
T$&f
l$<e3-
d$L[^_]
l$<e3-
d$L[^_]
L$<1
D$<e3
T$,1
L$L1
L$Le3
+L$8
9l$4
D$Le3
D$Le3
;l$4
:*uy
9l$L
9l$L
9L$L
|$Df
IT$d
D$X1
<	vl
T$D1
ID$d
T$D1
9|$D
9D$T
T$D)
D$,1
T$Ptu
T$,e3
d$<[^_]
d$([
D$$u
UWVS
t$$e
D$\1
T$,u
f9D$0t
L$0)
L$09j(f
T$\e3
d$l[^_]
L$Of
l$He
L$,1
T$,e3
D$,1
|$$t+
D$,e3
d$0[^_
F,tI
d$,[^_]
d$,[^_]
D$,1
l$\f
9~(t)
T$,e3
f9D$
UWVS
D$,1
D$,e3
d$<[^_]
t$4e
l$He
T$,1
D$,e3
D$\1
T$@t
D$\e3
D$,1
T$,e3
d$<[^_]
D$<1
Dl$(
D$<e3
d$L[^_]
Dl$(
Dl$(
UWVS
D$<1
DT$ 
DD$ 
DD$ 
DT$ 
DT$ 
DD$ 
T$<e3
d$L[^_]
:-t	
:-t	
t$0e
UWVS
[^_]
D$x cha
D$|n (
|$\)
T$H)
UWVS
|$De
D$Lu8
d$,[^_]
d$([
d$([
D$<uQ
d$ [^_
D$<1
T$<e3
D$L1
V,9V0
T$Le3
d$\[^_]
|$De
D$,1
T$,e3
|$8e
D$,1
T$,e3
|$4e
d$([
d$([
d$([
d$([
d$([
d$$[^
D$,1
T$,e3
d$([
d$([
UWVS
d$,[^_]
d$ [^_
d$ [^_
UWVS
D$,1
T$,e3
d$<[^_]
d$([
|$(e
UWVS
D$,1
T$,e3
d$<[^_]
:-t	
D$,1
t$@1
T$,e3
t$@e
L$,1
l$,e3-
d$$[^
UWVS
D$<1
D$89F
T$<e3
d$L[^_]
UWVS
D$<1
i|$4
T$<e3
d$L[^_]
it$4
UWVS
T$`e
L$<1
T$<e3
d$L[^_]
t$0e
d$$[^
d$([
d$([
UWVS
D$<1
T$<e3
d$L[^_]
l$!t*
[^_]
Terminating on signal
Exiting...
Uninstall routes.
Save state file.
/var/run/quagga/babel-state
creat(babel-state): %s
%s %d %ld
write(babel-state): overflow.
write(babel-state): %s
Remove pid file.
Done.
read(random): %s
ff02:0:0:0:0:0:1:6
df:i:z:hA:P:u:g:v
https://bugzilla.quagga.net
/dev/null
open(null): %s
dup2(null, 0): %s
daemonise: %s
error while writing pidfile
/var/run/quagga/babeld.vty
0.1 for quagga
BABELd %s starting: vty@%d
open(babel-state: %s)
unlink(babel-state): %s
read(babel-state): %s
%99s %d %ld
Couldn't parse babel-state.
None
daemon
config_file
pid_file
socket
help
vty_addr
vty_port
user
group
version
/var/run/quagga/babeld.pid
quaggavt
Usage : %s [OPTION...]
Daemon which manages Babel routing protocol.
-d, --daemon       Runs in daemon mode
-f, --config_file  Set configuration file name
-i, --pid_file     Set process identifier file name
-z, --socket       Set path of zebra socket
-A, --vty_addr     Set vty's bind address
-P, --vty_port     Set vty's port number
-u, --user         User to run as
-g, --group        Group to run as
-v, --version      Print program version
-h, --help         Display this help and exit
Report bugs to %s
Try `%s --help' for more information.
Got %s %d %ld from babel-state.
ID mismatch in babel-state. id=%s; old=%s
pid file                = %s%sstate file              = %s%sconfiguration file      = %s%sprotocol informations:%s  multicast address     = %s%s  port                  = %d%svty address             = %s%svty port                = %d%sid                      = %s%sallow_duplicates        = %s%skernel_metric           = %d%s
common
Invalid type %s%s
no router zebra%s
 no redistribute babel%s
debug babel all%s
debug babel %s%s
%s(config-router)# 
kernel
filter
interface
route
no debug babel (common|kernel|filter|timeout|interface|route|all)
Negate a command or set its defaults
Disable debug messages for specific or all part.
Babel information
Common messages (default)
Kernel messages
Filter messages
Timeout messages
Interface messages
Route messages
All messages
debug babel (common|kernel|filter|timeout|interface|route|all)
Enable debug messages for specific or all part.
Babel information
Common messages (default)
Kernel messages
Filter messages
Timeout messages
Interface messages
Route messages
All messages
no redistribute (kernel|connected|static|rip|ripng|ospf|ospf6|isis|bgp)
Negate a command or set its defaults
Redistribute
Kernel routes (not installed via the zebra RIB)
Connected routes (directly attached subnet or host)
Statically configured routes
Routing Information Protocol (RIP)
Routing Information Protocol next-generation (IPv6) (RIPng)
Open Shortest Path First (OSPFv2)
Open Shortest Path First (IPv6) (OSPFv3)
Intermediate System to Intermediate System (IS-IS)
Border Gateway Protocol (BGP)
redistribute (kernel|connected|static|rip|ripng|ospf|ospf6|isis|bgp)
Redistribute
Kernel routes (not installed via the zebra RIB)
Connected routes (directly attached subnet or host)
Statically configured routes
Routing Information Protocol (RIP)
Routing Information Protocol next-generation (IPv6) (RIPng)
Open Shortest Path First (OSPFv2)
Open Shortest Path First (IPv6) (OSPFv3)
Intermediate System to Intermediate System (IS-IS)
Border Gateway Protocol (BGP)
Couldn't set traffic class
adding
removing
%s route (ipv6) to zebra
%s route (ipv4) to zebra
kernel.c
/dev/urandom
Modify route: delete old; add new.
this should never appens (false value - kernel_route)
kernel_route
%02x:%02x:%02x:%02x:%02x:%02x:%02x:%02x
%02hhx:%02hhx:%02hhx:%02hhx:%02hhx:%02hhx:%02hhx:%02hhx
%02hhx-%02hhx-%02hhx-%02hhx-%02hhx-%02hhx-%02hhx-%02hhx
%02hhx:%02hhx:%02hhx:%02hhx:%02hhx:%02hhx
true
false
util.c
v4mapped(dest)
v4mapped(src)
inaddr_to_uchar
uchar_to_inaddr
malloc(source): %s
source.c
src->route_count < 0xffff
src->route_count > 0
Warning: source %s %s has refcount %d.
retain_source
release_source
Creating neighbour %s on %s.
malloc(neighbour): %s
Checking neighbours.
kernel_route(MODIFY metric): %s
WARNING: installing unfeasible route (this shouldn't happen).
WARNING: attempting to install duplicate route (this shouldn't happen).
WARNING: switching to unfeasible route (this shouldn't happen).
Rejecting martian route to %s through %s.
Unfeasible update for installed route to %s (%s %d %d -> %s %d %d).
i >= 0 && i < route_slots
new_slots >= route_slots
kernel_route(FLUSH): %s
Unknown kind of diversity.
kernel_route(ADD): %s
kernel_route(MODIFY): %s
malloc(route)
!route->installed
Couldn't insert route.
Expiring old routes.
flush_route
resize_route_table
install_route
move_installed_route
insert_route
Adding new ipv4 route comming from Zebra.
Adding new route comming from Zebra.
Removing ipv4 route (from zebra).
xroute.c
i >= 0 && i < numxroutes
Removing route (from zebra).
flush_xroute
message.c
malloc(buffered_updates): %s
send: %s
send(unicast): %s
malloc(unicast_buffer): %s
Sending hello %d (%d) to %s.
Sending self update to %s.
Sending update to %s for %s.
Sending update to %s for any.
prefix != ((void *)0)
unicast 
Sending %sihu %d on %s to %s.
sending request to %s for %s.
/prefix
Couldn't allocate neighbour.
Received pad1 from %s on %s.
Received truncated message.
Received pad%d from %s on %s.
Received ack from %s on %s.
unicast_neighbour == neigh && unicast_buffered >= bytes + 2 && unicast_buffer[unicast_buffered - bytes - 2] == type && unicast_buffer[unicast_buffered - bytes - 1] == bytes
babel_ifp->buffered >= bytes + 2 && babel_ifp->sendbuf[babel_ifp->buffered - bytes - 2] == type && babel_ifp->sendbuf[babel_ifp->buffered - bytes - 1] == bytes
(linklist_node)->data != ((void *)0)
  (flushing %d buffered updates on %s (%d))
babel_route_ifp->channel > 0 && babel_route_ifp->channel <= 255
babel_ifp->buffered_updates == ((void *)0)
babel_ifp->buffered <= babel_ifp->bufsize
  (flushing %d buffered bytes on %s)
Warning: bucket full, dropping packet to %s.
Warning: bucket full, dropping unicast packet to %s if %s.
Sending ack (%04x) to %s on %s.
sending unicast request to %s for %s.
Sending request (%d) on %s for %s.
Sending multi-hop request to %s for %s (%d hops).
Received packet from non-local address %s.
Received malformed packet on %s from %s.
Received packet with unknown version %d on %s from %s.
Received truncated packet (%d + 4 > %d).
Received ack-req (%04X %d) from %s on %s.
Received hello %d (%d) from %s on %s.
Received ihu %d (%d) from %s on %s for %s.
Received router-id %s from %s on %s.
Received nh %s (%d) from %s on %s.
Received prefix with no router id.
Received update%s%s for %s from %s on %s.
Received wildcard update with finite metric.
Received truncated attributes.
Received overlong channel information (%d > %d).
Channel information contains 0!
Received unknown route attribute %d.
Received request for %s from %s on %s.
Received request (%d) for %s from %s on %s (%s, %d).
Received unknown packet type %d from %s on %s.
Couldn't parse packet (%d, %d) from %s on %s.
flushbuf
end_unicast_message
end_message
flushupdates
send_update
buffer_update
send_update_resend
send_wildcard_retraction
send_self_update
send_ihu
send_request
send_multihop_request
%s metric %d (exported)%s
 (down)
down
%s is %s%s
  Operating mode is "%s"%s
  Split horizon mode is %s%s
  Hello interval is %u ms%s
  Update interval is %u ms%s
babel_interface.c
(node)->data != ((void *)0)
interface %s%s
 description %s%s
 babel wired%s
 babel split-horizon%s
 babel hello-interval %u%s
 babel update-interval %u%s
milliseconds
%% Invalid %s value%s
babel_ifp != ((void *)0)
 (installed)
 (feasible)
 nexthop 
No such interface name%s
, IPv4
interface reset: %s
Couldn't reallocate sendbuf.
can't find network %s%s
receive a 'interface up'
receive a 'interface down'
receive a 'interface add'
receive a 'interface delete'
not einough memory
show babel parameters
show babel database
no babel split-horizon
babel wireless
babel wired
no network IF_OR_ADDR
%s(config-if)# 
    -- Babel running configuration --%s
    -- distribution lists --%s
Neighbour %s dev %s reach %04x rxcost %d txcost %d %s.%s
  ifindex %u, MTU %u bytes %s%s
  Babel protocol is not enabled on this interface%s
  Babel protocol is enabled, but not running on this interface%s
  Babel protocol is running on this interface%s
%s metric %d refmetric %d id %s seqno %d%s age %d via %s neigh %s%s%s%s%s
setsockopt(IPV6_LEAVE_GROUP) on interface '%s': %s
Upped network %s (%s, cost=%d%s).
Suspiciously low MTU %d on interface %s (%d).
setsockopt(IPV6_JOIN_GROUP) on interface '%s': %s
Upped interface %s (%s, cost=%d, channel=%d%s).
There is same network configuration %s%s
receive a 'interface address add'
Show running system information
IP information
Babel information
Configuration information
No attributes
Show running system information
IP information
Babel information
Database information
No attributes
show babel neighbour [INTERFACE]
Show running system information
IP information
Babel information
Print neighbours
Interface name
show babel interface [INTERFACE]
Show running system information
IP information
Babel information
Interface information
Interface name
babel update-interval <20-655340>
Babel interface commands
Time between scheduled updates
Milliseconds
babel hello-interval <20-655340>
Babel interface commands
Time between scheduled hellos
Milliseconds
Negate a command or set its defaults
Babel interface commands
Disable split horizon processing
Babel interface commands
Enable split horizon processing
Babel interface commands
Disable wired optimiations (assume wireless)
Babel interface commands
Enable wired optimisations
Negate a command or set its defaults
Disable Babel protocol on specified interface or network.
Interface or address
Enable Babel protocol on specified interface or network.
Interface or address
babel_set_hello_interval
babel_set_update_interval
show_babel_interface
no_babel_split_horizon
babel_split_horizon
babel_set_wireless
babel_set_wired
babel_interface_close_all
is_interface_ll_address
interface_config_write
router babel%s
 babel resend-delay %u%s
 redistribute %s%s
can't create Babel
&babel_read_protocol
&babel_init_routing_process
interface: %s; %s
babeld.c
protocol_socket >= 0
recv: %s
check_neighbours_timeout
source_expiry_time
resend_time
hello_timeout
update_timeout
update_flush_timeout
unicast_flush_timeout
next timeout due to: %s
&babel_main_loop
My ID is : %s.
malloc(receive_buffer): %s
realloc(receive_buffer): %s
no router babel
Couldn't create link local socket: %s
babel_routing_process != ((void *)0)
babel main loop : timeout: %ld msecs
Warning: couldn't find router id -- using random value.
read(random): %s (cannot assign an ID)
babel resend-delay <20-655340>
Babel commands
Time before resending a message
Milliseconds
Negate a command or set its defaults
Disable a routing process
Remove Babel instance command
No attributes
Enable a routing process
Make Babel instance command
No attributes
babel_get_myid
babel_initial_noise
babel_main_loop
babel_fill_with_next_timeout
babel_read_protocol
babel_distribute_update_all
%s/%d filtered by distribute in
;*2$"(
/etc/quagga/babeld.conf
babeld.debug
7zXZ
DrF\
M5>{?
f@{Z%
JpGm
9PlUZ
g/x1w*
/`k:
4=u:
v+>X
41`W
i5 (
<-g=
Yv?Ge
U!#?6
@<fC
MkBmp
I&2O
/dV=>
J4i1
 #s/
)k&,
%Cv$_
4~g,h
`\.,8J/O
RoHUi\
}oA\(I
V%Gh
X$8-
-jgq
	`>HR
Fw-a-
c>J}
n}3<
aq+'v
I"gt
(/2	h
aMJU_?
Dufy
'?p`
sBge"
pVvOH
G'up
6~^XY
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
