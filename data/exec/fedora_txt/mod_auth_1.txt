__gmon_start__
_fini
__cxa_finalize
_Jv_RegisterClasses
mod_auth_plugin_init
buffer_init_string
buffer_free
array_free
ldap_unbind_s
config_check_cond
buffer_is_equal_string
strncasecmp
strncmp
array_get_element
http_auth_digest_generate_nonce
buffer_copy_string_len
buffer_append_string_buffer
buffer_append_string_len
buffer_append_string
response_header_insert
strchr
strcmp
http_auth_digest_check
buffer_copy_string_buffer
log_error_write
http_auth_basic_check
__stack_chk_fail
calloc
buffer_init
auth_ldap_init
ldap_set_option
ldap_simple_bind_s
ldap_err2string
__errno_location
strerror
buffer_is_empty
ldap_start_tls_s
config_insert_values_global
buffer_copy_string
data_array_init
data_string_init
array_insert_unique
CvtHex
int2hex
MD5_Init
MD5_Update
LI_ltostr
rand
MD5_Final
stream_open
memchr
stream_close
strlen
strcasecmp
get_http_method_name
hex2int
inet_ntop_cache_get_ip
stderr
__fprintf_chk
abort
__ctype_b_loc
__strncpy_chk
crypt
ldap_search_s
ldap_first_entry
ldap_get_dn
ldap_msgfree
__strncat_chk
__strcat_chk
strncpy
buffer_prepare_copy
libcrypt.so.1
libldap-2.4.so.2
liblber-2.4.so.2
libc.so.6
_edata
__bss_start
_end
mod_auth.so
GLIBC_2.2.5
GLIBC_2.4
GLIBC_2.3
GLIBC_2.3.4
5*R 
%,R 
%*R 
%"R 
%zQ 
%rQ 
%jQ 
%bQ 
%ZQ 
%RQ 
%JQ 
%BQ 
%:Q 
%2Q 
%*Q 
%"Q 
%zP 
%rP 
%jP 
%bP 
%ZP 
%RP 
%JP 
%BP 
%:P 
%2P 
%*P 
%"P 
ATSubH
ATUSH
[]A\A]
AWAVAUATUH
R dH
D$81
trE1
t$@H
T$8dH3
H[]A\A]A^A_
t$@H
ffff.
AVAUATUSH
D$PH
t$(H
D$ H
T$(H
t$(H
T$ H
D$XH
D$pH
[]A\A]A^A_
t$@H
D$0I
l$HI
t$0H
D$0H
T$@H
t$8H
B@H9p
T$8H
l$HL
\$`H
fffff.
d$@H
|$@L
D$pH
t$@H
D$xL
d$pH
l$(L
d$8H
\$PL
D$XH
H+D$8H;D$0
D$(M)
D$XL
d$@f
\$PL
L$@L
L$ L
D$pI
t$@H
L$ L
l$pH
D$xL
d$XL
D$hI
D$PL
l$`H
H+D$`H9D$P
|$8H
L$ H
D$(H
D$@H+D$(H
|$(H
H+D$(H
DD$0H
L$ H
D$0H
D$8L)
D$hH
T$01
t$(L
L$@H
L$@H
d$XH
L$8H
d$XH
L$@H
AWAVAUATUH
D$ H
HcD$
Lc|$
<>L9
8[]A\A]A^A_
T$(H
[]A\A]A^A_
D$ L
T$ L
D$ H
AVAUATUH
l$@H
t$0H
5h, 
D$8L
D$hH
T$PH
|$@H
[]A\A]A^A_
D$(A
l$ L
t^Mcu
T$ u
t$0H
$<	t
D$8H
ffff.
AWAVAUI
L$ H
[]A\A]A^A_
D$ H
T$ H
T$ H
D$ H
T$ H
l$@L
T$0H
t$(L
T$0H
t$(H
T$0H
$aprf
|$8H
VUUUUUUUI
T$0H
t$(H
t$8H
T$ H
D$(H
H+D$(H
AUATUH
t$0H
L$(L
L$@I
D$@H
T$(M
D$8H
[]A\A]A^A_
t$0H
T$0L
H[]A\A]A^A_
[]A\A]A^A_
auth
auth.backend
auth.backend.plain.groupfile
auth.backend.plain.userfile
auth.require
auth.debug
auth.backend.ldap.hostname
auth.backend.ldap.base-dn
auth.backend.ldap.filter
auth.backend.ldap.ca-file
auth.backend.ldap.starttls
auth.backend.ldap.bind-dn
auth.backend.ldap.bind-pw
Authorization
method
Basic
basic
Digest
mod_auth.c
realm
Basic realm="
WWW-Authenticate
Digest realm="
", nonce="
", qop="auth"
ldap ...
ldap:
ldap startTLS failed:
htpasswd
htdigest
plain
ldap
auth.backend not supported:
the field is unknown in:
ssbs
" <- => "..." ) )
a string was expected for:
auth.backend.htdigest.userfile
auth.backend.htpasswd.userfile
auth.backend.ldap.allow-empty-pw
unknown authentification type:
Loading CA certificate failed:
ldap: auth.backend.ldap.filter is missing a replace-operator '$'
auth.require = ( "..." => ( ..., ...) )
auth.require should contain an array as in:
auth.require = ( "..." => ( ..., -> "
auth.require = ( "..." => ( ..., "method" => "..." ) )
the require field is missing in:
auth.require = ( "..." => ( ..., "method" => "...") )
method has to be either "basic" or "digest" in
auth.require = ( "..." => ( ..., "realm" => "..." ) )
auth.require = ( "..." => ( ..., "require" => "..." ) )
opening digest-userfile
sbss
http_auth.c
parsed error in
opening plain-userfile
valid-user
host
host ... (not implemented)
unknown key
group
group ... (not implemented)
unknown  key
nothing matched
username
algorigthm
cnonce
response
digest: missing field
md5-sess
%s.%d: aborted
auth-int
digest: digest mismatch
digest: auth failed for 
: wrong password, IP:
digest: rules did match
digest: auth ok
$apr1$
%s.%d
sssb
filter:
: is missing in
get_password failed
password doesn't match for 
sbbss
rules didn't match
username=
realm=
uri=
algorithm=
qop=
cnonce=
response=
expected 'username:realm:hashed password'
expected 'username:hashed password'
parsing the 'require' section in 'auth.require' failed: valid-user cannot be combined with other require rules
parsing the 'require' section in 'auth.require' failed: a = is missing
parsing the 'require' section in 'auth.require' failed: = out of range
digest: unsupported backend (only htdigest or plain)
digest: (md5-sess: missing field
ldap: invalid character (a-zA-Z0-9 allowed) in username:
decodeing base64-string failed
./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
mod_auth.so.debug
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.ctors
.dtors
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.bss
.gnu_debuglink
