Ek1o
mG9%
-#{5
Ez{T4
)"Y1
5<2O
*1&cz5
__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
__malloc_hook
__free_hook
__realloc_hook
__memalign_hook
hoardmemalign
hoardrealloc
hoardfree
hoardmalloc
__malloc_initialize_hook
_ZN5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES4_EENS_15HoardSuperblockIS4_Li65536ENS_9SmallHeapEEELi8ES4_NS_27hoardThresholdFunctionClassES9_EEED2Ev
_ZN5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES4_EENS_15HoardSuperblockIS4_Li65536ENS_9SmallHeapEEELi8ES4_NS_27hoardThresholdFunctionClassES9_EEED1Ev
_ZN5Hoard9SmallHeapD2Ev
_ZN5Hoard9SmallHeapD1Ev
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_ED2Ev
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_ED1Ev
_ZN16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_9SmallHeapEEEED2Ev
_ZN16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_9SmallHeapEEEED1Ev
_ZN16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_9SmallHeapEEEE4lockEv
_ZN16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_9SmallHeapEEEE4freeEPv
_ZN16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_9SmallHeapEEEE6unlockEv
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_E6unlockEv
anyThreadCreated
_ZN5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS4_Li65536ENS_11ProcessHeapILm65536ELi8ES4_NS_10GlobalHeapILm65536ELi8ES4_E27bogusThresholdFunctionClassEEEEEESD_Li8ES4_SB_SC_EEED2Ev
_ZN5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS4_Li65536ENS_11ProcessHeapILm65536ELi8ES4_NS_10GlobalHeapILm65536ELi8ES4_E27bogusThresholdFunctionClassEEEEEESD_Li8ES4_SB_SC_EEED1Ev
_ZN17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEED2Ev
_ZN17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEED1Ev
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_ED2Ev
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_ED1Ev
_ZN16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEED2Ev
_ZN16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEED1Ev
_ZN5Hoard11ProcessHeapILm65536ELi8EN2HL12SpinLockTypeENS_10GlobalHeapILm65536ELi8ES2_E27bogusThresholdFunctionClassEED2Ev
_ZN5Hoard11ProcessHeapILm65536ELi8EN2HL12SpinLockTypeENS_10GlobalHeapILm65536ELi8ES2_E27bogusThresholdFunctionClassEED1Ev
_ZN5Hoard14LockMallocHeapINS_9SmallHeapEED2Ev
_ZN5Hoard14LockMallocHeapINS_9SmallHeapEED1Ev
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_E6unlockEv
_ZN17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE4lockEv
_ZN17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE6unlockEv
_ZN16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE4freeEPv
_ZN16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE4lockEv
_ZN16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE6unlockEv
pthread_key_create
_ZN17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE4freeEPv
__assert_fail
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_E4freeEPv
_ZN2HL4binsIN5Hoard21HoardSuperblockHeaderINS_12SpinLockTypeELi65536ENS1_11ProcessHeapILm65536ELi8ES3_NS1_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEELi65536EE5_binsE
_ZN2HL12SpinLockType13contendedLockEv
sched_yield
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_E4lockEv
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_E4lockEv
_ZN2HL11MmapWrapper3mapEm
mmap
stderr
fwrite
pthread_once
hoardmallopt
_ZN2HL4binsIN5Hoard21HoardSuperblockHeaderINS_12SpinLockTypeELi65536ENS1_9SmallHeapEEELi65536EE12getClassSizeEi
_ZN2HL4binsIN5Hoard21HoardSuperblockHeaderINS_12SpinLockTypeELi65536ENS1_9SmallHeapEEELi65536EE5_binsE
_ZN5Hoard11HeapManagerIN2HL12SpinLockTypeENS_9HoardHeapILi1024ELi128EEEE11releaseHeapEv
pthread_self
_ZN5Hoard17IgnoreInvalidFreeIN2HL10HybridHeapILi32656ENS_14ThreadPoolHeapILi1024ELi128ENS_18PerThreadHoardHeapEEENS_7BigHeapEEEE4freeEPv
_ZGVZN5Hoard10ExactlyOneIN2HL10LockedHeapINS1_12SpinLockTypeENS_19AlignedMmapInstanceILm65536EEEEEEclEvE21theOneTrueInstancePtr
_ZZN5Hoard10ExactlyOneIN2HL10LockedHeapINS1_12SpinLockTypeENS_19AlignedMmapInstanceILm65536EEEEEEclEvE21theOneTrueInstancePtr
munmap
__cxa_guard_acquire
_ZZN5Hoard10ExactlyOneIN2HL10LockedHeapINS1_12SpinLockTypeENS_19AlignedMmapInstanceILm65536EEEEEEclEvE3buf
__cxa_guard_release
__cxa_guard_abort
_Unwind_Resume
__gxx_personality_v0
_ZN2HL10HybridHeapILi32656EN5Hoard14ThreadPoolHeapILi1024ELi128ENS1_18PerThreadHoardHeapEEENS1_7BigHeapEE8slowPathEm
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_EC2Ev
_ZTVN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_EE
_ZGVZN5Hoard10GlobalHeapILm65536ELi8EN2HL12SpinLockTypeEE7getHeapEvE7theHeap
_ZZN5Hoard10GlobalHeapILm65536ELi8EN2HL12SpinLockTypeEE7getHeapEvE7theHeap
_ZZN5Hoard10GlobalHeapILm65536ELi8EN2HL12SpinLockTypeEE7getHeapEvE10theHeapBuf
_ZTVN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_EE
_ZTV17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE
_ZTVN5Hoard11ProcessHeapILm65536ELi8EN2HL12SpinLockTypeENS_10GlobalHeapILm65536ELi8ES2_E27bogusThresholdFunctionClassEEE
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_EC1Ev
_ZTVN5Hoard14LockMallocHeapINS_9SmallHeapEEE
_ZN5Hoard12RedirectFreeINS_14LockMallocHeapINS_9SmallHeapEEENS_15HoardSuperblockIN2HL12SpinLockTypeELi65536ES2_EEE4freeEPv
_ZN2HL10LockedHeapINS_12SpinLockTypeEN5Hoard19AlignedMmapInstanceILm65536EEEE6mallocEm
_ZN5Hoard10EmptyClassINS_15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS_9SmallHeapEEELi8EE11sanityCheckEv
_ZN5Hoard10EmptyClassINS_15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS_9SmallHeapEEELi8EE3getEv
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_E12unlocked_putEPS9_m
_ZN5Hoard10EmptyClassINS_15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEELi8EE11sanityCheckEv
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_E3getEmPSB_
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_E20getAnotherSuperblockEm
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_E14slowPathMallocEm
pthread_getspecific
pthread_setspecific
_ZdlPv
__cxa_call_unexpected
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_ED0Ev
_ZN5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES4_EENS_15HoardSuperblockIS4_Li65536ENS_9SmallHeapEEELi8ES4_NS_27hoardThresholdFunctionClassES9_EEED0Ev
_ZN5Hoard9SmallHeapD0Ev
_ZN5Hoard14LockMallocHeapINS_9SmallHeapEED0Ev
_ZN16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_9SmallHeapEEEED0Ev
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_ED0Ev
_ZN5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS4_Li65536ENS_11ProcessHeapILm65536ELi8ES4_NS_10GlobalHeapILm65536ELi8ES4_E27bogusThresholdFunctionClassEEEEEESD_Li8ES4_SB_SC_EEED0Ev
_ZN5Hoard11ProcessHeapILm65536ELi8EN2HL12SpinLockTypeENS_10GlobalHeapILm65536ELi8ES2_E27bogusThresholdFunctionClassEED0Ev
_ZN17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEED0Ev
_ZN16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEED0Ev
_ZdaPv
hoardmalloc_usable_size
pthread_exit
dlsym
_ZN5Hoard27ThreadLocalAllocationBufferILi55EXadL_ZN2HL4binsINS_21HoardSuperblockHeaderINS1_12SpinLockTypeELi65536ENS_9SmallHeapEEELi65536EE12getSizeClassEmEEXadL_ZNS7_12getClassSizeEiEELi256ELi262144ENS_15HoardSuperblockIS4_Li65536ES5_EELi65536ENS_13HoardHeapTypeEE6mallocEm
hoardcalloc
memset
hoardrecalloc
posix_memalign
hoardvalloc
hoardpvalloc
memcpy
hoardstrndup
strnlen
strncpy
hoardstrdup
strlen
strcpy
hoardgetcwd
_Znwm
__cxa_allocate_exception
_ZTVSt9bad_alloc
_ZTISt9bad_alloc
_ZNSt9bad_allocD1Ev
__cxa_throw
pthread_create
__stack_chk_fail
_ZnwmRKSt9nothrow_t
_Znam
_ZnamRKSt9nothrow_t
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_E12unlocked_putEPSC_m
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_E3putEPSC_m
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_E12slowPathFreeEiii
_ZN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_E4freeEPv
_ZTIN5Hoard27hoardThresholdFunctionClassE
_ZTVN10__cxxabiv117__class_type_infoE
_ZTSN5Hoard27hoardThresholdFunctionClassE
_ZTIN5Hoard10GlobalHeapILm65536ELi8EN2HL12SpinLockTypeEE27bogusThresholdFunctionClassE
_ZTSN5Hoard10GlobalHeapILm65536ELi8EN2HL12SpinLockTypeEE27bogusThresholdFunctionClassE
_ZTI16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_9SmallHeapEEEE
_ZTS16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_9SmallHeapEEEE
_ZTIN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_EE
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTSN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_EE
_ZTIN5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES4_EENS_15HoardSuperblockIS4_Li65536ENS_9SmallHeapEEELi8ES4_NS_27hoardThresholdFunctionClassES9_EEEE
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTSN5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES4_EENS_15HoardSuperblockIS4_Li65536ENS_9SmallHeapEEELi8ES4_NS_27hoardThresholdFunctionClassES9_EEEE
_ZTIN5Hoard9SmallHeapE
_ZTSN5Hoard9SmallHeapE
_ZTIN5Hoard14LockMallocHeapINS_9SmallHeapEEE
_ZTSN5Hoard14LockMallocHeapINS_9SmallHeapEEE
_ZTI16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE
_ZTS16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE
_ZTI17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE
_ZTS17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE
_ZTIN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_EE
_ZTSN5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_EE
_ZTIN5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS4_Li65536ENS_11ProcessHeapILm65536ELi8ES4_NS_10GlobalHeapILm65536ELi8ES4_E27bogusThresholdFunctionClassEEEEEESD_Li8ES4_SB_SC_EEEE
_ZTSN5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS4_Li65536ENS_11ProcessHeapILm65536ELi8ES4_NS_10GlobalHeapILm65536ELi8ES4_E27bogusThresholdFunctionClassEEEEEESD_Li8ES4_SB_SC_EEEE
_ZTIN5Hoard11ProcessHeapILm65536ELi8EN2HL12SpinLockTypeENS_10GlobalHeapILm65536ELi8ES2_E27bogusThresholdFunctionClassEEE
_ZTSN5Hoard11ProcessHeapILm65536ELi8EN2HL12SpinLockTypeENS_10GlobalHeapILm65536ELi8ES2_E27bogusThresholdFunctionClassEEE
_ZTV16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_9SmallHeapEEEE
_ZTVN5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES4_EENS_15HoardSuperblockIS4_Li65536ENS_9SmallHeapEEELi8ES4_NS_27hoardThresholdFunctionClassES9_EEEE
_ZTVN5Hoard9SmallHeapE
_ZTV16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE
_ZTVN5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS4_Li65536ENS_11ProcessHeapILm65536ELi8ES4_NS_10GlobalHeapILm65536ELi8ES4_E27bogusThresholdFunctionClassEEEEEESD_Li8ES4_SB_SC_EEEE
libdl.so.2
libpthread.so.0
libstdc++.so.6
libm.so.6
libgcc_s.so.1
libc.so.6
_edata
__bss_start
_end
GCC_3.0
GLIBC_2.2.5
GLIBCXX_3.4
CXXABI_1.3
GLIBC_2.14
GLIBC_2.4
fffff.
fffff.
fffff.
fff.
ffff.
fff.
ffff.
AWAVH
AUATUSH
[]A\A]A^A_
ffff.
AWAVAUATUSH
D$$6
D$(H
9D$$
GpH9
I+G@A
tdH;*u
t*H;.
H+D$
D$(I
D$(H
M;w u
[]A\A]A^A_
AWAVAUATUSH
H9C 
@pH9
PpH9
BpH9
H+B@
@pH9
H9C 
@ H;
[]A\A]A^A_
H9C u
H9C 
H9C u
txH99
t-H99
AUATUSH
H+A@
ApH9
BpH9
H+B@
t\H;*u
t)H;)
[]A\A]
[]A\A]
D$(H
BpH9
H+B@
7tvH;
T$ H
T$ H
L$ H
ffffff.
ffffff.
JpH9
H+B@
AWAVAUATUSH
D$$6
D$(H
9D$$
GpH9
I+G@A
tdH;*u
t*H;.
H+D$
D$(I
D$(H
M;w u
[]A\A]A^A_
fffff.
pthread_
exitH
fffff.
fffff.
ffff.
AUATI
tUM9
[]A\A]
[]A\A]
ffffff.
ATUStgH
[]A\
fff.
tkUSH
AUATI
pthread_
creaH
([]A\A]
AUAT
H9G 
H;{ 
CpH9
tmL9	
t/L9	
[]A\A]
Pvc1
AVAUATUH
EpH9
H;] H
[]A\A]A^
H+E@
t\L;*u
t+L;)
[]A\A]A^
AWAVI
AUATUSH
<#L)
[]A\A]A^A_
AVAU
ATUH
umH;] H
[]A\A]A^
AUATI
<+L)
4$Hc
t7H;
[]A\A]
D$ H
L$ H
D$(H
4$Hc
D$ H
T$ H
tTL9	u^
L9	u%
AWAVE1
AUATI
l$HM
D;\$
t/H9
[]A\A]A^A_
AUATUI
H9G 
E<[]A\A]A^
L9	uG
x`A9
|`A9
tTL9	u^
L9	u%
AWAVI
AUATI
I9D$ 
I9D$ M
[]A\A]A^A_
D$0H
D$ I
l$(H
D;L$
t.H99
D$ Mc
L$ H
T$8K
T$8H9
\$0I
AVAUATUH
[]A\A]A^
AWAVAUATI
H9E H
VpH9
H9D$
VpH9
VpH9
H9U 
([]A\A]A^A_
rpH9
H+B@
H9E u%H
H9E 
H9U u
txL9
t.L9
H99u
x2A9
AWAVAUATUSH
[]A\A]A^A_
[]A\A]A^A_
H9C 
PpH9
H9S 
R H;
[]A\A]A^A_
zpH9
H+B@
@pH9
rpH9
H+B@
txH99
t-H99
xLA9
|	A9
H9C u
H9S 
H9C u
AUATUI
H9G 
E<[]A\A]A^
L9	uG
x`A9
|`A9
H;^ 
H9C 
H9C uSH
AUAT
H9G 
M9,$
D$<A
M9,$
H9E 
[]A\A]
AWAV
AUATI
H9G 
H;{ 
CpH9
tUL9	
sPA9
t6L9
I9E 
[]A\A]A^A_
statistics.h
_inUse >= 0
_allocated >= 0
u >= 0
a >= 0
heaplayers/util/dllist.h
p != __null
heaplayers/bins64k.h
sz <= _bins[NUM_BINS-1]
i >= 0
array.h
index >= 0
threadpoolheap.h
hoardsuperblock.h
_header.isValid()
hoardsuperblockheader.h
inRange (ptr2)
basehoardmanager.h
s->isValidSuperblock()
redirectfree.h
heaplayers/util/myhashmap.h
prev->next == curr
h->isValid()
f != this
o != __null
_header.getObjectsFree() >= 0
manageonesuperblock.h
_current->getSize(ptr) >= sz
s->getOwner() == this
s->normalize (ptr) == ptr
ind < NUM_BINS
emptyclass.h
getFullness(s) == i
index < N
prev == 0
inRange (ptr)
Virtual memory exhausted.
i < NUM_BINS
getSizeClass(_bins[i]) == i
owner != __null
owner->isValid()
addheaderheap.h
p != s
s != sNew
realSize >= sz
_position
_objectsFree >= 1
simtls.cpp
tlab.h
_localHeapBytes >= sz
getcwd
s->getOwner() != this
(value >= 0) && (value < MaxHeaps)
(size_t) ptr % sizeof(double) == 0
_header.getObjectsFree() <= _header.getTotalObjects()
(size_t) (p + 1) == (size_t) ptr + headerSize
pthread_getspecific (theHeapKey) == __null
getSize(ptr) >= sizeof(HL::DLList::Entry *)
void Hoard::ThreadLocalAllocationBuffer<NumBins, getSizeClass, getClassSize, LargestObject, LocalHeapThreshold, SuperblockType, SuperblockSize, ParentHeap>::free(void*) [with int NumBins = 55; int (* getSizeClass)(size_t) = HL::bins<Header, 65536>::getSizeClass<Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::SmallHeap> >; size_t (* getClassSize)(int) = HL::bins<Header, 65536>::getClassSize<Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::SmallHeap> >; int LargestObject = 256; int LocalHeapThreshold = 262144; SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int SuperblockSize = 65536; ParentHeap = Hoard::HoardHeapType]
void* Hoard::ThreadLocalAllocationBuffer<NumBins, getSizeClass, getClassSize, LargestObject, LocalHeapThreshold, SuperblockType, SuperblockSize, ParentHeap>::malloc(size_t) [with int NumBins = 55; int (* getSizeClass)(size_t) = HL::bins<Header, 65536>::getSizeClass<Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::SmallHeap> >; size_t (* getClassSize)(int) = HL::bins<Header, 65536>::getClassSize<Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::SmallHeap> >; int LargestObject = 256; int LocalHeapThreshold = 262144; SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int SuperblockSize = 65536; ParentHeap = Hoard::HoardHeapType; size_t = long unsigned int]
void* Hoard::AddHeaderHeap<SuperblockType, SuperblockSize, SuperHeap>::malloc(size_t) [with SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::BigHeap>; long unsigned int SuperblockSize = 65536ul; SuperHeap = Hoard::AlignedMmap<65536ul, HL::SpinLockType>; size_t = long unsigned int]
void* Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::slowPathMalloc(size_t) [with SourceHeap = Hoard::AlignedSuperblockHeap<HL::SpinLockType, 65536ul>; ParentHeap = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8; LockType = HL::SpinLockType; thresholdFunctionClass = Hoard::hoardThresholdFunctionClass; HeapType = Hoard::SmallHeap; size_t = long unsigned int]
void* Hoard::HoardSuperblockHeader<LockType, SuperblockSize, HeapType>::freeListAlloc() [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
void* Hoard::HoardSuperblockHeader<LockType, SuperblockSize, HeapType>::reapAlloc() [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
void* Hoard::HoardSuperblockHeader<LockType, SuperblockSize, HeapType>::malloc() [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
void* Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::malloc(size_t) [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap; size_t = long unsigned int]
void* Hoard::ManageOneSuperblock<SuperHeap>::malloc(size_t) [with SuperHeap = Hoard::EmptyClass<Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>, 8>; size_t = long unsigned int]
void* Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::malloc(size_t) [with SourceHeap = Hoard::AlignedSuperblockHeap<HL::SpinLockType, 65536ul>; ParentHeap = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8; LockType = HL::SpinLockType; thresholdFunctionClass = Hoard::hoardThresholdFunctionClass; HeapType = Hoard::SmallHeap; size_t = long unsigned int]
TheCustomHeapType* initializeCustomHeap()
const T& Hoard::Array<N, T>::operator()(int) const [with int N = 128; T = int]
T& Hoard::Array<N, T>::operator()(int) [with int N = 128; T = int]
void Hoard::ThreadPoolHeap<NumThreads, NumHeaps, PerThreadHeap_>::setTidMap(int, int) [with int NumThreads = 1024; int NumHeaps = 128; PerThreadHeap_ = Hoard::PerThreadHoardHeap]
void HL::DLList::Entry::setNext(HL::DLList::Entry*)
void HL::DLList::Entry::setPrev(HL::DLList::Entry*)
Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType* Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::get() [with SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; int EmptinessClasses = 8; Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >]
void Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::transfer(Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType*, int, int) [with SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; int EmptinessClasses = 8; Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >]
void Hoard::HoardSuperblockHeader<LockType, SuperblockSize, HeapType>::clear() [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
void Hoard::HoardSuperblockHeader<LockType, SuperblockSize, HeapType>::free(void*) [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
void* Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::normalize(void*) const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
void Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::free(void*) [with SourceHeap = Hoard::AlignedSuperblockHeap<HL::SpinLockType, 65536ul>; ParentHeap = EmptyHoardManager<Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> > >; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; int EmptinessClasses = 8; LockType = HL::SpinLockType; thresholdFunctionClass = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
void HL::MyHashMap<Key, Value, Allocator>::erase(Key) [with Key = void*; Value = long unsigned int; Allocator = Hoard::AlignedMmapInstance<65536ul>::SourceHeap]
void Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::unlock() [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
HeapType* Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::getOwner() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
void Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::lock() [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
bool Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::isValidSuperblock() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
T& Hoard::Array<N, T>::operator()(int) [with int N = 10; T = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >*]
void Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::setPrev(Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>*) [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
void Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::setNext(Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>*) [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>* Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::getNext() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
void Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::sanityCheck() [with SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; int EmptinessClasses = 8]
void Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::put(Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType*) [with SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; int EmptinessClasses = 8; Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >]
T& Hoard::Array<N, T>::operator()(int) [with int N = 55; T = Hoard::ManageOneSuperblock<Hoard::EmptyClass<Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >, 8> >]
void Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::setOwner(HeapType*) [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
int Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::getObjectsFree() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
int Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::getTotalObjects() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
static int HL::bins<Header, 65536>::slowGetSizeClass(size_t) [with Header = Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; size_t = long unsigned int]
static int HL::bins<Header, 65536>::getSizeClass(size_t) [with Header = Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; size_t = long unsigned int]
static void Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::sanityCheck::checkInvariant(Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>*) [with SourceHeap = Hoard::AlignedSuperblockHeap<HL::SpinLockType, 65536ul>; ParentHeap = EmptyHoardManager<Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> > >; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; int EmptinessClasses = 8; LockType = HL::SpinLockType; thresholdFunctionClass = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
HeapType* Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::getOwner() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>]
void Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::put(Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::SuperblockType*, size_t) [with SourceHeap = Hoard::AlignedSuperblockHeap<HL::SpinLockType, 65536ul>; ParentHeap = EmptyHoardManager<Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> > >; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; int EmptinessClasses = 8; LockType = HL::SpinLockType; thresholdFunctionClass = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass; HeapType = Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass>; Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::ProcessHeap<65536ul, 8, HL::SpinLockType, Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>::bogusThresholdFunctionClass> >; size_t = long unsigned int]
bool Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::isValidSuperblock() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>]
void Hoard::Statistics::setAllocated(int)
void Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::put(Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType*) [with SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8; Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>]
Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType* Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::get() [with SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8; Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>]
void Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::slowPathFree(int, int, int) [with SourceHeap = Hoard::AlignedSuperblockHeap<HL::SpinLockType, 65536ul>; ParentHeap = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8; LockType = HL::SpinLockType; thresholdFunctionClass = Hoard::hoardThresholdFunctionClass; HeapType = Hoard::SmallHeap]
void Hoard::Statistics::setInUse(int)
int Hoard::Statistics::getAllocated() const
int Hoard::Statistics::getInUse() const
T& Hoard::Array<N, T>::operator()(int) [with int N = 55; T = Hoard::Statistics]
void Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::setPrev(Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>*) [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
void Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::setNext(Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>*) [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
void Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::transfer(Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType*, int, int) [with SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8; Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::SuperblockType = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>]
int Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::getObjectsFree() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
int Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::getTotalObjects() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>* Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::getNext() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
T& Hoard::Array<N, T>::operator()(int) [with int N = 10; T = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>*]
void Hoard::EmptyClass<SuperblockType_, EmptinessClasses>::sanityCheck() [with SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8]
void Hoard::HoardSuperblockHeader<LockType, SuperblockSize, HeapType>::clear() [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
void Hoard::HoardSuperblockHeader<LockType, SuperblockSize, HeapType>::free(void*) [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
T& Hoard::Array<N, T>::operator()(int) [with int N = 55; T = Hoard::ManageOneSuperblock<Hoard::EmptyClass<Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>, 8> >]
void* Hoard::HoardSuperblockHeader<LockType, SuperblockSize, HeapType>::normalize(void*) const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
void* Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::normalize(void*) const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
static void Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::sanityCheck::checkInvariant(Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>*) [with SourceHeap = Hoard::AlignedSuperblockHeap<HL::SpinLockType, 65536ul>; ParentHeap = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8; LockType = HL::SpinLockType; thresholdFunctionClass = Hoard::hoardThresholdFunctionClass; HeapType = Hoard::SmallHeap]
void Hoard::HoardManager<SourceHeap, ParentHeap, SuperblockType_, EmptinessClasses, LockType, thresholdFunctionClass, HeapType>::free(void*) [with SourceHeap = Hoard::AlignedSuperblockHeap<HL::SpinLockType, 65536ul>; ParentHeap = Hoard::GlobalHeap<65536ul, 8, HL::SpinLockType>; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; int EmptinessClasses = 8; LockType = HL::SpinLockType; thresholdFunctionClass = Hoard::hoardThresholdFunctionClass; HeapType = Hoard::SmallHeap]
static void Hoard::RedirectFree<Heap, SuperblockType_>::free(void*) [with Heap = Hoard::LockMallocHeap<Hoard::SmallHeap>; SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>]
T& Hoard::Array<N, T>::operator()(int) [with int N = 128; T = Hoard::PerThreadHoardHeap]
T& Hoard::Array<N, T>::operator()(int) [with int N = 1024; T = int]
size_t Hoard::HoardSuperblockHeader<LockType, SuperblockSize, HeapType>::getSize(void*) const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap; size_t = long unsigned int]
static size_t BaseHoardManager<SuperblockType_>::getSize(void*) [with SuperblockType_ = Hoard::HoardSuperblock<HL::SpinLockType, 65536, Hoard::SmallHeap>; size_t = long unsigned int]
bool Hoard::HoardSuperblock<LockType, SuperblockSize, HeapType>::isValidSuperblock() const [with LockType = HL::SpinLockType; int SuperblockSize = 65536; HeapType = Hoard::SmallHeap]
T& Hoard::Array<N, T>::operator()(int) [with int N = 55; T = HL::DLList]
static int HL::bins<Header, 65536>::slowGetSizeClass(size_t) [with Header = Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::SmallHeap>; size_t = long unsigned int]
static int HL::bins<Header, 65536>::getSizeClass(size_t) [with Header = Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::SmallHeap>; size_t = long unsigned int]
static size_t HL::bins<Header, 65536>::getClassSize(int) [with Header = Hoard::HoardSuperblockHeader<HL::SpinLockType, 65536, Hoard::SmallHeap>; size_t = long unsigned int]
N5Hoard27hoardThresholdFunctionClassE
N5Hoard10GlobalHeapILm65536ELi8EN2HL12SpinLockTypeEE27bogusThresholdFunctionClassE
16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_9SmallHeapEEEE
N5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES3_EENS_15HoardSuperblockIS3_Li65536ENS_9SmallHeapEEELi8ES3_NS_27hoardThresholdFunctionClassES8_EE
N5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEENS_10GlobalHeapILm65536ELi8ES4_EENS_15HoardSuperblockIS4_Li65536ENS_9SmallHeapEEELi8ES4_NS_27hoardThresholdFunctionClassES9_EEEE
N5Hoard9SmallHeapE
N5Hoard14LockMallocHeapINS_9SmallHeapEEE
16BaseHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE
17EmptyHoardManagerIN5Hoard15HoardSuperblockIN2HL12SpinLockTypeELi65536ENS0_11ProcessHeapILm65536ELi8ES3_NS0_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEE
N5Hoard12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS3_Li65536ENS_11ProcessHeapILm65536ELi8ES3_NS_10GlobalHeapILm65536ELi8ES3_E27bogusThresholdFunctionClassEEEEEESC_Li8ES3_SA_SB_EE
N5Hoard14ConformantHeapINS_12HoardManagerINS_21AlignedSuperblockHeapIN2HL12SpinLockTypeELm65536EEE17EmptyHoardManagerINS_15HoardSuperblockIS4_Li65536ENS_11ProcessHeapILm65536ELi8ES4_NS_10GlobalHeapILm65536ELi8ES4_E27bogusThresholdFunctionClassEEEEEESD_Li8ES4_SB_SC_EEEE
N5Hoard11ProcessHeapILm65536ELi8EN2HL12SpinLockTypeENS_10GlobalHeapILm65536ELi8ES2_E27bogusThresholdFunctionClassEEE
;*3$"
zPLR
libhoard.so.debug
7zXZ
4Vh}
)~7V
$h)_[
$?i>'
*@ST
wQ2gC
S#"f
?$~w
LAbV
T]|9
S]pn
Dud`c^Ai
k94)
_"@n
XZk u
GTowOjD\]
J&n^
n@vI
9HbL
.shstrtab
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.gcc_except_table
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.got.plt
.data
.bss
.gnu_debuglink
.gnu_debugdata
