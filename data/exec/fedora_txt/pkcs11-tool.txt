/lib/ld-linux.so.2
libopensc.so.4
__gmon_start__
_Jv_RegisterClasses
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
sc_asn1_sig_value_rs_to_sequence
sc_ctx_detect_readers
sc_ctx_get_reader_by_name
sc_hex_to_bin
sc_lock
sc_strerror
sc_format_oid
sc_init_oid
sc_ctx_get_reader
sc_wait_for_event
sc_asn1_encode_object_id
sc_connect_card
sc_mem_reverse
sc_ctx_get_reader_count
sc_detect_card_presence
sc_asn1_decode_object_id
sc_disconnect_card
libcrypto.so.10
BN_num_bits
EVP_PKEY_new
EVP_EncryptUpdate
d2i_PrivateKey_bio
d2i_RSAPublicKey
EVP_DigestInit
_init
d2i_EC_PUBKEY_bio
EVP_bf_cbc
EC_KEY_get0_private_key
i2d_X509_NAME
OBJ_nid2obj
EVP_SealFinal
PEM_read_bio_PrivateKey
EVP_sha256
OPENSSL_add_all_algorithms_noconf
EVP_PKEY_get0
d2i_PublicKey
d2i_RSA_PUBKEY
BN_bin2bn
BIO_s_mem
EVP_PKEY_assign
EVP_md5
EC_KEY_get0_public_key
RSA_free
EVP_ripemd160
EVP_SealInit
EVP_des_ede3_cbc
RSA_new
EVP_PKEY_encrypt_old
BIO_free
EC_KEY_get0_group
EC_GROUP_get_curve_name
EVP_sha1
EVP_des_cbc
_fini
BIO_s_file
EVP_VerifyFinal
EVP_cast5_cfb64
EVP_DecryptInit
OBJ_nid2sn
d2i_RSAPrivateKey
EVP_PKEY_size
EVP_CIPHER_key_length
EVP_CIPHER_nid
i2d_ASN1_OBJECT
i2d_ASN1_INTEGER
EVP_DecryptUpdate
CRYPTO_set_mem_functions
BIO_new
BN_bn2bin
d2i_X509
BIO_ctrl
EVP_PKEY_free
EVP_DecryptFinal
EVP_DigestUpdate
EVP_MD_CTX_destroy
OPENSSL_config
EVP_MD_CTX_create
EC_POINT_point2oct
libz.so.1
libdl.so.2
dlopen
dlsym
dlclose
dlerror
libpthread.so.0
waitpid
__errno_location
libc.so.6
_IO_stdin_used
__stpcpy_chk
fflush
__printf_chk
exit
fopen
strncmp
perror
fork
putchar
realloc
stdin
strtol
fgets
calloc
strlen
memset
strstr
tcsetattr
memcmp
__fprintf_chk
stdout
fputc
fputs
fclose
strtoul
malloc
strcasecmp
__ctype_b_loc
getenv
optarg
stderr
__snprintf_chk
__memset_chk
getopt_long
strncasecmp
fileno
fwrite
fread
__memcpy_chk
__vfprintf_chk
tcgetattr
__cxa_finalize
__sprintf_chk
_IO_getc
strcmp
__libc_start_main
__stack_chk_fail
_edata
__bss_start
_end
GLIBC_2.1
GLIBC_2.0
OPENSSL_1.0.1_EC
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.3
GLIBC_2.3.4
[^_]
D$\tB
DD$`
L$<1
L$h1
9\$htg
L$<e3
D$ u~
d$L[^_]
D$<1
D$01
9l$,vO
D$8!
9l$,
T$<e3
d$L[^_]
t$Pe
|$,1
l$(t=
|$,e3=
d$<[^_]
[^_]
[^_]
d$ [^_
|$,e
[^_]
[^_]
d$,[1
d$,[
d$,[1
D$P1
D$H@
D$L@
D$H;D$L
D$,1
D$H@
T$H9
[^_]
D$L@
D$0-A
[^_]
D$,1
L$,e3
D$$uz
d$<[^_]
D$$t1
L$,1
\$,e3
d$8[
L$,1
\$,e3
d$8[
L$,1
D$ !
\$,e3
d$8[
D$,1
L$,e3
D$$uz
d$<[^_]
D$$t1
D$,1
L$,e3
D$$uz
d$<[^_]
D$$t1
D$,1
L$,e3
D$$uz
d$<[^_]
D$$t1
L$,1
\$,e3
d$8[
L$,1
\$,e3
d$8[
L$,1
\$,e3
d$8[
L$,1
\$,e3
d$8[
L$,1
D$ p
\$,e3
d$8[
L$,1
\$,e3
d$8[
D$,1
D$  
L$,e3
D$$uz
d$<[^_]
D$$t1
D$<1
|$<e3=
d$L[^_]
D$0"
L$$e
D$`"
;D$X
[^_]
D$Ra
D$Sb
D$Tc
D$Ud
D$Ve
D$Wf
D$Xg
D$Yh
D$Zi
9l$@w
[^_]
4$t%
d$ [^_
D$t#
D$|Y
[^_]
[^_]
|$,x
[^_]
D$(e
[^_]
d$,[^_]
[^_]
Dt$,
D$X;D$\
t$,)
D$D1
l$Dt#
D$\1
D$D1
D$H1
|$\e3=
d$l[^_]
D$l1
D$le3
d$|[^_]
D$$t9
D$L1
D$Le3
d$\[^_]
D$@P
D$<1
;t$<r
;l$@r
D$$t
;t$<
D$<1
;t$<r
D$<1
;t$<r
D$<1
;t$<r
;t$<s"
D$DtK
UWVS
L$,e
[^_]
D$\@
D$LB
[^_]
T$,t
[^_]
T$tk
D$P0
T$tk
T$<e
abcd
efgh
ijkl
mnop
qrst
[^_]
d$ [^_
D$<1
T$<e3
d$H[
UWVS
D$$e
[^_]
L$$1
D$Dc
D$,1
EH;D$Du
UWVS
d$,[^_]
UWVS
|$L~U
9l$Ht
d$,[^_]
UWVS
l$pe
D$L1
;t$xr
T$ )t$x
D$Le3
d$\[^_]
UWVS
L$\1
T$$u
Sec.
Cont
rolB
yte 
PROT
d$ [^_
TERM
Sec.
Env.f
????
PKCS
#15 
Auth
AUTH
UWVS
D$ e
[^_]
UWVS
|$4tg
[^_]
UWVS
t$,U
[^_]
CKR_OK
CKR_CANCEL
CKR_HOST_MEMORY
CKR_SLOT_ID_INVALID
CKR_GENERAL_ERROR
CKR_FUNCTION_FAILED
CKR_ARGUMENTS_BAD
CKR_NO_EVENT
CKR_NEED_TO_CREATE_THREADS
CKR_CANT_LOCK
CKR_ATTRIBUTE_READ_ONLY
CKR_ATTRIBUTE_SENSITIVE
CKR_ATTRIBUTE_TYPE_INVALID
CKR_ATTRIBUTE_VALUE_INVALID
CKR_DATA_INVALID
CKR_DATA_LEN_RANGE
CKR_DEVICE_ERROR
CKR_DEVICE_MEMORY
CKR_DEVICE_REMOVED
CKR_ENCRYPTED_DATA_INVALID
CKR_ENCRYPTED_DATA_LEN_RANGE
CKR_FUNCTION_CANCELED
CKR_FUNCTION_NOT_PARALLEL
CKR_FUNCTION_NOT_SUPPORTED
CKR_KEY_HANDLE_INVALID
CKR_KEY_SIZE_RANGE
CKR_KEY_TYPE_INCONSISTENT
CKR_KEY_NOT_NEEDED
CKR_KEY_CHANGED
CKR_KEY_NEEDED
CKR_KEY_INDIGESTIBLE
CKR_KEY_NOT_WRAPPABLE
CKR_KEY_UNEXTRACTABLE
CKR_MECHANISM_INVALID
CKR_MECHANISM_PARAM_INVALID
CKR_OBJECT_HANDLE_INVALID
CKR_OPERATION_ACTIVE
CKR_OPERATION_NOT_INITIALIZED
CKR_PIN_INCORRECT
CKR_PIN_INVALID
CKR_PIN_LEN_RANGE
CKR_PIN_EXPIRED
CKR_PIN_LOCKED
CKR_SESSION_CLOSED
CKR_SESSION_COUNT
CKR_SESSION_HANDLE_INVALID
CKR_SESSION_READ_ONLY
CKR_SESSION_EXISTS
CKR_SESSION_READ_ONLY_EXISTS
CKR_SIGNATURE_INVALID
CKR_SIGNATURE_LEN_RANGE
CKR_TEMPLATE_INCOMPLETE
CKR_TEMPLATE_INCONSISTENT
CKR_TOKEN_NOT_PRESENT
CKR_TOKEN_NOT_RECOGNIZED
CKR_TOKEN_WRITE_PROTECTED
CKR_UNWRAPPING_KEY_SIZE_RANGE
CKR_USER_ALREADY_LOGGED_IN
CKR_USER_NOT_LOGGED_IN
CKR_USER_PIN_NOT_INITIALIZED
CKR_USER_TYPE_INVALID
CKR_USER_TOO_MANY_TYPES
CKR_WRAPPED_KEY_INVALID
CKR_WRAPPED_KEY_LEN_RANGE
CKR_WRAPPING_KEY_SIZE_RANGE
CKR_RANDOM_SEED_NOT_SUPPORTED
CKR_RANDOM_NO_RNG
CKR_DOMAIN_PARAMS_INVALID
CKR_BUFFER_TOO_SMALL
CKR_SAVED_STATE_INVALID
CKR_INFORMATION_SENSITIVE
CKR_STATE_UNSAVEABLE
CKR_CRYPTOKI_NOT_INITIALIZED
CKR_MUTEX_BAD
CKR_MUTEX_NOT_LOCKED
CKR_VENDOR_DEFINED
unknown PKCS11 error
C_GetTokenInfo
C_FindObjectsInit
C_FindObjects
calloc failed: %m
C_GetMechanismList
%sother flags=0x%x
  ERR: %s failed: %s (0x%0x)
Logging in to "%s".
Please enter SO PIN: 
Please enter User PIN: 
No PIN entered, exiting!
C_Login
  RNG not available
C_SeedRandom
C_GenerateRandom
C_GenerateRandom(buf1,100)
C_GenerateRandom(buf1,0)
C_GenerateRandom(buf2,100)
  seems to be OK
mechtype-%lu
C_OpenSession
Digests: not implemented
Digests:
C_DigestInit
C_Digest
C_DigestUpdate
C_DigestFinal
ERR: wrong digest value
C_Sign
Sign mechanism not supported
Using signature algorithm %s
Cannot open %s: %m
Cannot read from %s: %m
C_SignInit
C_SignUpdate
C_SignFinal
failed to open %s: %m
openssl
sequence
Failed to write to %s: %m
out of memory in getVALUE: %m
C_GetAttributeValue(VALUE)
C_GetAttributeValue(CLASS)
C_GetAttributeValue(KEY_TYPE)
C_GetAttributeValue(EC_POINT)
out of memory in getID: %m
C_GetAttributeValue(ID)
C_GetAttributeValue(DECRYPT)
C_GetAttributeValue(SIGN)
C_GetAttributeValue(UNWRAP)
C_GetAttributeValue(PRIVATE)
C_GetAttributeValue(MODULUS)
public key not extractable
    %s: 
Internal error.
hello world
C_UnwrapKey
Could not get unwrapped key
Ciphertext buffer too small
Encryption failed, returning
Mechanism not supported
C_DecryptInit
C_Decrypt
 %02x
    Decrypted:
    Original:
  ERR: verification failed
C_GetSlotList(NULL)
calloc failed
C_GetSlotList()
Available slots:
Slot %lu (0x%lx): 
(GetSlotInfo failed, %s)
  (empty)
  manufacturer:  %s
  hardware ver:  %u.%u
  firmware ver:  %u.%u
  flags:         %s
  (token not recognized)
  token label        : %s
  token manufacturer : %s
  token model        : %s
  token flags        : %s
  hardware version   : %d.%d
  firmware version   : %d.%d
  serial num         : %s
C_WaitForSlotEvent()
Calling C_WaitForSlotEvent: 
failed.
C_WaitForSlotEvent
event on slot 0x%lx
out of memory in getLABEL: %m
C_GetAttributeValue(LABEL)
Signatures: not implemented
  testing key %ld 
(%s) 
, label=
Verify: not implemented
  testing key %d
 (%s)
 with 1 mechanism
Unwrap: not implemented
Key unwrap (RSA)
Decrypt: not implemented
Decryption (RSA)
No errors
%d errors
Data object %u
  label:          
<empty>
  application:    
  app_id:         
  flags:          
 modifiable
 private
Private Key Object
Public Key Object
Secret Key Object
; RSA %lu bits
; RSA 
; GOSTR3410 
  PARAMS OID: 
  VALUE:      
              
; EC
  EC_POINT %d bits
  EC_POINT:   
  EC_PARAMS:  
; unknown key algorithm %lu
  label:      %s
  ID:         
  Usage:      
C_GetAttributeValue(ENCRYPT)
%sencrypt
%sdecrypt
%ssign
%snon-repudiation
C_GetAttributeValue(VERIFY)
%sverify
C_GetAttributeValue(WRAP)
%swrap
%sunwrap
C_GetAttributeValue(DERIVE)
%sderive
none
Certificate Object, type = 
X.509 cert
X.509 attribute cert
vendor defined
; unknown cert type
Object %u, type %u
secp192r1
RSA:
rsa:
Unknown key type %s
Allocation error
Cannot convert "%s"
pkcs11-tool
C_GenerateKeyPair
Key pair generated:
Unknown EC key params '%s'
abcdefghijklmnopqrst
Just a label
This won't be used in our lib
C_SetAttributeValue(priv_key)
C_SetAttributeValue(pub_key)
*** Do a signature ***
My Heart's in the Highland
C_SetAttributeValue
==> OK
Couldn't open file "%s"
Couldn't read from file "%s"
subject name too long
issuer name too long
serial number too long
-----BEGIN PRIVATE KEY-----
malloc() failure
Unsupported key type: 0x%X
Cannot parse private key
Invalid OID "%s"
Cannot encode OID "%s"
C_CreateObject
Created Data Object:
Created certificate:
Created public key:
Created private key:
Cannot read private key
C_VerifyInit
C_Verify
CloseAllSessions
Finalize
Failed to load pkcs11 module
C_Initialize
Invalid ID "%s"
privkey
pubkey
Unsupported object type "%s"
Using slot with ID 0x%lx
user
context-specific
Unsupported login type "%s"
C_Initialize in child
Failed to fork for test: %s
C_GetInfo
Cryptoki version %u.%u
Manufacturer     %s
No slots.
C_GetSlotInfo
Supported mechanisms:
  %s
, keySize={
, hw
, encrypt
, decrypt
, digest
, sign
, sign_recover
, verify
, verify_recover
, generate
, generate_key_pair
, wrap
, unwrap
, derive
, other flags=0x%x
Token not initialized
%-32.32s
Please enter the new SO PIN: 
No PIN entered, exiting
Invalid SO PIN
C_InitToken
Please enter the new PIN: 
C_SetPIN
PIN successfully changed
  different new PINs, exiting
No PIN entered, aborting.
Invalid User PIN
C_InitPIN
Private key not found
Cannot read EC key from %s
C_DeriveKey
Using decrypt algorithm %s
Using digest algorithm %s
find_object_with_attributes()
object not found
get CKA_VALUE failed
cannot open '%s'
cannot write to '%s'
Invalid OID '%s'
C_DestroyObject()
Result:
C_CloseSession
No slot named "%s" found
readonly
login required
PIN initialized
PIN pad present
token initialized
user PIN count low
final user PIN try
user PIN locked
user PIN to be changed
SO PIN to be changed
token present
removable device
hardware slot
RSA-PKCS-KEY-PAIR-GEN
RSA-9796
RSA-X-509
MD2-RSA-PKCS
MD5-RSA-PKCS
rsa-md5
SHA1-RSA-PKCS
rsa-sha1
SHA256-RSA-PKCS
rsa-sha256
SHA384-RSA-PKCS
rsa-sha384
SHA512-RSA-PKCS
rsa-sha512
RIPEMD128-RSA-PKCS
RIPEMD160-RSA-PKCS
rsa-ripemd160
RSA-PKCS-OAEP
RSA-X9-31-KEY-PAIR-GEN
SHA1-RSA-X9-31
SHA1-RSA-PKCS-PSS
SHA256-RSA-PKCS-PSS
SHA384-RSA-PKCS-PSS
SHA512-RSA-PKCS-PSS
DH-PKCS-KEY-PAIR-GEN
DH-PKCS-DERIVE
X9-42-DH-KEY-PAIR-GEN
X9-42-DH-DERIVE
X9-42-DH-HYBRID-DERIVE
X9-42-MQV-DERIVE
RC2-KEY-GEN
RC2-ECB
RC2-CBC
RC2-MAC
RC2-MAC-GENERAL
RC2-CBC-PAD
RC4-KEY-GEN
DES-KEY-GEN
DES-ECB
DES-MAC
DES-MAC-GENERAL
DES-CBC-PAD
DES2-KEY-GEN
DES3-KEY-GEN
DES3-ECB
DES3-CBC
DES3-MAC
DES3-MAC-GENERAL
DES3-CBC-PAD
CDMF-KEY-GEN
CDMF-ECB
CDMF-CBC
CDMF-MAC
CDMF-MAC-GENERAL
CDMF-CBC-PAD
MD2-HMAC
MD2-HMAC-GENERAL
MD5-HMAC
MD5-HMAC-GENERAL
SHA-1
SHA-1-HMAC
SHA-1-HMAC-GENERAL
SHA256
SHA384
SHA512
RIPEMD128
RIPEMD128-HMAC
RIPEMD128-HMAC-GENERAL
RIPEMD160
RIPEMD160-HMAC
RIPEMD160-HMAC-GENERAL
CAST-KEY-GEN
CAST-ECB
CAST-MAC
CAST-MAC-GENERAL
CAST-CBC-PAD
CAST3-KEY-GEN
CAST3-ECB
CAST3-MAC
CAST3-MAC-GENERAL
CAST3-CBC-PAD
CAST5-KEY-GEN
CAST5-ECB
CAST5-MAC
CAST5-MAC-GENERAL
CAST5-CBC-PAD
RC5-KEY-GEN
RC5-ECB
RC5-CBC
RC5-MAC
RC5-MAC-GENERAL
RC5-CBC-PAD
IDEA-KEY-GEN
IDEA-ECB
IDEA-CBC
IDEA-MAC
IDEA-MAC-GENERAL
IDEA-CBC-PAD
GENERIC-SECRET-KEY-GEN
CONCATENATE-BASE-AND-KEY
CONCATENATE-BASE-AND-DATA
CONCATENATE-DATA-AND-BASE
XOR-BASE-AND-DATA
EXTRACT-KEY-FROM-KEY
SSL3-PRE-MASTER-KEY-GEN
SSL3-MASTER-KEY-DERIVE
SSL3-KEY-AND-MAC-DERIVE
SSL3-MASTER-KEY-DERIVE-DH
TLS-PRE-MASTER-KEY-GEN
TLS-MASTER-KEY-DERIVE
TLS-KEY-AND-MAC-DERIVE
TLS-MASTER-KEY-DERIVE-DH
SSL3-MD5-MAC
SSL3-SHA1-MAC
MD5-KEY-DERIVATION
MD2-KEY-DERIVATION
SHA1-KEY-DERIVATION
PBE-MD2-DES-CBC
PBE-MD5-DES-CBC
PBE-MD5-CAST-CBC
PBE-MD5-CAST3-CBC
PBE-MD5-CAST5-CBC
PBE-SHA1-CAST5-CBC
PBE-SHA1-RC4-128
PBE-SHA1-RC4-40
PBE-SHA1-DES3-EDE-CBC
PBE-SHA1-DES2-EDE-CBC
PBE-SHA1-RC2-128-CBC
PBE-SHA1-RC2-40-CBC
PKCS5-PBKD2
PBA-SHA1-WITH-SHA1-HMAC
KEY-WRAP-LYNKS
KEY-WRAP-SET-OAEP
SKIPJACK-KEY-GEN
SKIPJACK-ECB64
SKIPJACK-CBC64
SKIPJACK-OFB64
SKIPJACK-CFB64
SKIPJACK-CFB32
SKIPJACK-CFB16
SKIPJACK-CFB8
SKIPJACK-WRAP
SKIPJACK-PRIVATE-WRAP
SKIPJACK-RELAYX
KEA-KEY-PAIR-GEN
KEA-KEY-DERIVE
FORTEZZA-TIMESTAMP
BATON-KEY-GEN
BATON-ECB128
BATON-ECB96
BATON-CBC128
BATON-COUNTER
BATON-SHUFFLE
BATON-WRAP
ECDSA-KEY-PAIR-GEN
ECDSA
ECDSA-SHA1
ECDH1-DERIVE
ECDH1-COFACTOR-DERIVE
ECMQV-DERIVE
JUNIPER-KEY-GEN
JUNIPER-ECB128
JUNIPER-CBC128
JUNIPER-COUNTER
JUNIPER-SHUFFLE
JUNIPER-WRAP
FASTHASH
AES-KEY-GEN
AES-ECB
AES-CBC
AES-MAC
AES-MAC-GENERAL
AES-CBC-PAD
GOSTR3410-KEY-PAIR-GEN
GOSTR3410
GOSTR3410-WITH-GOSTR3411
DSA-PARAMETER-GEN
DH-PKCS-PARAMETER-GEN
X9-42-DH-PARAMETER-GEN
opensc-pkcs11.so
Show global token information
List available slots
List slots with tokens
Show objects on token
Sign some data
Decrypt some data
Hash some data
Log into the token first
Change User PIN
Key pair generation
Delete an object
Specify the ID of the object
Specify the input file
Specify the output file
show-info
list-slots
list-token-slots
list-mechanisms
list-objects
hash
login
login-type
new-pin
so-pin
init-token
init-pin
change-pin
unlock-pin
keypairgen
key-type
usage-sign
usage-decrypt
usage-derive
write-object
read-object
delete-object
application-label
application-id
issuer
subject
slot-description
slot-index
token-label
set-id
attr-from
input-file
output-file
signature-format
test
test-hotplug
moz-cert
verbose
test-ec
test-fork
1.2.840.10045.3.1.1
06082A8648CE3D030101
prime192v1
nistp192
ansiX9p192r1
secp224r1
1.3.132.0.33
06052b81040021
nistp224
prime256v1
1.2.840.10045.3.1.7
06082A8648CE3D030107
secp256r1
ansiX9p256r1
secp384r1
1.3.132.0.34
06052B81040022
prime384v1
ansiX9p384r1
secp521r1
1.3.132.0.35
06052B81040023
nistp521
brainpoolP192r1
1.3.36.3.3.2.8.1.1.3
06092B2403030208010103
brainpoolP224r1
1.3.36.3.3.2.8.1.1.5
06092B2403030208010105
brainpoolP256r1
1.3.36.3.3.2.8.1.1.7
06092B2403030208010107
brainpoolP320r1
1.3.36.3.3.2.8.1.1.9
06092B2403030208010109
secp192k1
1.3.132.0.31
06052B8104001F
secp256k1
1.3.132.0.10
06052B8104000A
CKR_KEY_FUNCTION_NOT_PERMITTED
CKR_SESSION_PARALLEL_NOT_SUPPORTED
CKR_SESSION_READ_WRITE_SO_EXISTS
CKR_UNWRAPPING_KEY_HANDLE_INVALID
CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT
CKR_USER_ANOTHER_ALREADY_LOGGED_IN
CKR_WRAPPING_KEY_HANDLE_INVALID
CKR_WRAPPING_KEY_TYPE_INCONSISTENT
CKR_CRYPTOKI_ALREADY_INITIALIZED
PKCS11 function %s failed: rv = %s (0x%0x)
Please enter context specific PIN: 
C_SeedRandom() and C_GenerateRandom():
  seeding (C_SeedRandom) not supported
  ERR: C_GenerateRandom returned twice the same value!!!
hex_to_bin(): invalid char '%c' in hex string
hex_to_bin(): hex string too long
  Note: C_DigestUpdate(), DigestFinal() not supported
  ERR: digest lengths returned by C_DigestFinal() different from C_Digest()
  ERR: digests returned by C_DigestFinal() different from C_Digest()
  all 4 digest functions seem to work
ERR: wrong digest length: %ld instead of %ld
  ERR: C_Digest() didn't return CKR_BUFFER_TOO_SMALL but %s (0x%0x)
  ERR: C_Digest() didn't return CKR_OK for a NULL output buffer, but %s (0x%0x)
  ERR: digest operation ended prematurely
Failed to convert signature to ASN.1 sequence format.
C_GetAttributeValue(MODULUS_BITS)
out of memory in getEC_POINT: %m
out of memory in getEC_PARAMS: %m
C_GetAttributeValue(EC_PARAMS)
C_GetAttributeValue(ALWAYS_AUTHENTICATE)
C_GetAttributeValue(MODIFIABLE)
out of memory in getMODULUS: %m
private key has no ID, can't lookup the corresponding pubkey for verification
coudn't find the corresponding pubkey for validation
out of memory in getPUBLIC_EXPONENT: %m
C_GetAttributeValue(PUBLIC_EXPONENT)
public key of unsupported type
couldn't get the pubkey VALUE attribute, no validation done
 couldn't parse pubkey, no verification done
Wrap mechanism not supported, skipped
Key length mismatch (%d != %d)
resulting cleartext doesn't match input
private key has no ID, can't lookup the corresponding pubkey
coudn't find the corresponding pubkey
  ERR: C_SignInit() returned %s (0x%0x)
  ERR: C_Sign() returned %s (0x%0x)
  ERR: C_VerifyInit() returned %s (0x%0x)
  ERR: C_Verify() returned %s (0x%0x)
  token state:   uninitialized
Testing card detection using %s
Please press return to continue, x to exit: 
  ERR: wrong signature length: %u instead of %u
openssl error during verification: 0x%0x (%d)
Signatures: not logged in, skipping signature tests
Signatures (currently only RSA signatures)
 -- can't be used for signature, skipping
 -- can't be used for signature, skipping: can't obtain modulus
Signatures: no private key found in this slot
  ERR: signature lengths returned by C_SignFinal() different from C_Sign()
  ERR: signatures returned by C_SignFinal() different from C_Sign()
  all 4 signature functions seem to work
  ERR: C_Sign() didn't return CKR_BUFFER_TOO_SMALL but %s (0x%0x)
  ERR: C_Sign() didn't return CKR_OK for a NULL output buf, but %s (0x%0x)
  ERR: signature operation ended prematurely
  testing signature mechanisms:
 -- can't be used to sign/verify, skipping
 -- can't be used to sign/verify, skipping: can't obtain modulus
  testing key %d (%u bits%s%s) with 1 signature mechanism
Verify: not logged in, skipping verify tests
Verify (currently only for RSA):
 -- can't find corresponding public key, skipping
 -- can't get the ID for looking up the public key, skipping
 -- can't get the modulus length, skipping
  No private key found for testing
Key unwrap: not a R/W session, skipping key unwrap tests
 -- can't be used to unwrap, skipping
Decryption: not logged in, skipping decryption tests
 -- can't be used to decrypt, skipping
out of memory in getAPPLICATION: %m
C_GetAttributeValue(APPLICATION)
out of memory in getOBJECT_ID: %m
C_GetAttributeValue(OBJECT_ID)
out of memory in getGOSTR3410_PARAMS: %m
C_GetAttributeValue(GOSTR3410_PARAMS)
C_GetAttributeValue(OPENSC_NON_REPUDIATION)
  Access:     always authenticate
C_GetAttributeValue(CERTIFICATE_TYPE)
*** We already opened a session and logged in ***
ERR: no 'CKM_EC_KEY_PAIR_GEN' found in the mechanism list
*** Generating EC key pair ***
ERR: newly generated private key has no (or an empty) CKA_ID
ERR: GetAttribute(privkey, CKA_EC_PARAMS) doesn't seem to work
ERR: GetAttribute(pubkey, CKA_EC_POINT) doesn't seem to work
*** Changing the CKA_ID of private and public key into one of 20 bytes ***
ERR: C_Sign() didn't return CKR_BUFFER_TO_SMALL but %s
*** Changing the CKA_LABEL, CKA_ID and CKA_SUBJECT of the public key ***
OpenSSL error during X509 certificate parsing
OpenSSL error while encoding subject name
OpenSSL error while encoding issuer name
OpenSSL error while encoding serial number
-----BEGIN EC PRIVATE KEY-----
OpenSSL error during RSA private key parsing
OpenSSL error during RSA public key parsing
Writing of a "%s" type not (yet) supported
ERR: no "CKM_RSA_PKCS_KEY_PAIR_GEN" found in the mechanism list
*** Generating a %s key pair ***
ERR: GetAttribute(privkey, CKA_MODULUS) doesn't seem to work
*** Changing the CKA_ID of private and public key into one of 20 bytes ***
*** Do a signature and verify it (presumably to test the keys) ***
*** Signing the certificate request ***
*** Changing the CKA_LABEL, CKA_ID and CKA_SUBJECT of the public key ***
*** Logging off and releasing pkcs11 lib ***
*** In real life, the cert req should now be sent to the CA ***
*** Loading the pkcs11 lib, opening a session and logging in ***
*** Cryptoki library has already been initialized ***
*** Put a cert on the card (NOTE: doesn't correspond with the key!) ***
==> OK, successfull! Should work with Mozilla
ILMOTa:bd:e:hi:klm:o:p:scvf:ty:w:z:r
Unknown PKCS11 mechanism "%s"
Error: Only one of --slot, --slot-label, --slot-index or --token-label can be used
*** Calling C_Initialize in forked child process ***
Child process exited with status %d
Library          %s (ver %u.%u)
Using slot with label "%s" (0x%lx)
Using slot with index %lu (0x%lx)
Slot with index %lu (counting from 0) is not available.
You must specify a valid slot with either --slot, --slot-index or --slot-label.
Using slot %u with a present token (0x%lx)
The token label must be specified using --label
Please enter the new SO PIN (again): 
Different new SO PINs, exiting
Token successfully initialized
Please enter the current PIN: 
Please enter the new PIN again: 
Invalid login type for 'Unlock User PIN' operation
Please enter the 'Change PIN' context secret code: 
Please enter unblock code for User PIN: 
Different new User PINs, exiting
User PIN successfully initialized
Derive mechanism not supported
Using derive algorithm 0x%8.8lx %s
Failed to parse other EC kry from %s
mechanisum not supported for derive
Decrypt mechanism not supported
Digest mechanism is not supported
You should specify the object type with the -y option
You should specify type of the object to read
You should specify at least one of the object ID, object label, application label or application ID
Invalid 'issuer' hexadecimal value
Invalid 'subject' hexadecimal value
You should specify type of the object to delete
You should specify the current ID with the -d option
set_id(): coudn't find the object
No slot with token named "%s" found
No slot with a token was found.
Specify the module to load (default:opensc-pkcs11.so)
List mechanisms supported by the token
Derive a secret key using another key and some data
Specify mechanism (use -M for a list of supported mechanisms)
Specify login type ('so', 'user', 'context-specific'; default:'user')
Supply User PIN on the command line (if used in scripts: careful!)
Supply User PUK on the command line
Supply new User PIN on the command line
Supply SO PIN on the command line (if used in scripts: careful!)
Initialize the token, its label and its SO PIN (use with --label and --so-pin)
Initialize the User PIN (use with --pin and --login)
Unlock User PIN (without '--login' unlock in logged in session; otherwise '--login-type' has to be 'context-specific')
Specify the type and length of the key to create, for example rsa:1024 or EC:prime256v1
Specify 'sign' key usage flag (sets SIGN in privkey, sets VERIFY in pubkey)
Specify 'decrypt' key usage flag (RSA only, set DECRYPT privkey, ENCRYPT in pubkey)
Specify 'derive' key usage flag (EC only)
Write an object (key, cert, data) to the card
Get object's CKA_VALUE attribute (use with --type)
Specify the application label of the data object (use with --type data)
Specify the application ID of the data object (use with --type data)
Specify the issuer in hexadecimal format (use with --type cert)
Specify the subject in hexadecimal format (use with --type cert/privkey/pubkey)
Specify the type of object (e.g. cert, privkey, pubkey, data)
Specify the label of the object
Specify the ID of the slot to use
Specify the description of the slot to use
Specify the index of the slot to use
Specify the token label of the slot to use
Set the CKA_ID of an object, <args>= the (new) CKA_ID
Use <arg> to create some attributes when writing an object
Format for ECDSA signature <arg>: 'rs' (default), 'sequence', 'openssl'
Test (best used with the --login or --pin option)
Test hotplug capabilities (C_GetSlotList + C_WaitForSlotEvent)
Test Mozilla-like keypair gen and cert req, <arg>=certfile
Verbose operation. (Set OPENSC_DEBUG to enable OpenSC specific debugging)
Set the CKA_PRIVATE attribute (object is only viewable after a login)
Test EC (best used with the --login or --pin option)
Test forking and calling C_Initialize() in the child
0!0	
Waiting for a reader to be attached...
Error while waiting for a reader: %s
Error while refreshing readers: %s
Waiting for a card to be inserted...
Error while waiting for a card: %s
Reader "%s" not found (%d reader(s) detected)
Connecting to card in reader %s...
Failed to connect to card: %s
No smart card readers found.
Using reader with a card: %s
Matched ATR in reader: %s
Card not present.
Using card driver %s.
Failed to lock card: %s
\x%02X
%08X: 
%02X 
 <arg>
 [arg]
Usage: %s [OPTIONS] %s
Usage: %s [OPTIONS]
Options:
-%c, --%s%s
    --%s%s
  %-28s  %s
NEVR
NONE
Ox%X
error: 
Aborting.
warning: 
env:
sc_dlopen failed: %s
C_GetFunctionList
C_GetFunctionList failed %lx
;*2$"
pkcs11-tool.debug
7zXZ
T|2vL@
qlERq7
"-'E
l(	u
mq|h1
i\r:
@uHS
?	aW
,jwE
tc\'
d:O:
Q:PM
|pU+xR
eK4jy
`I\	l
;.79
0a"*
F(~:
|S>%
7QD<J
:hPZ4Z'
WStl
 n]Z
f%3f
7=PC)X7gMc
0?Ji
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.data.rel.ro
.dynamic
.got
.data
.bss
.gnu_debuglink
.gnu_debugdata
